
*** simulatenet ***
Ho trasformato la stringa 'connectivity' che vale 'MTM'
------------------------------ Fine inSTRINGA

Ho trasformato la stringa 'INdegree' che vale 'free'
------------------------------ Fine inSTRINGA

Ho trasformato il vettore num_subnet (3 : 3): [ 5 5 10 ]
Ho trasformato la stringa 'formula' che vale ''
------------------------------ Fine inSTRINGA

Ho trasformato il vettore Xmin (5 : 5): [ 8.419340674000001 3.482809808 6.932805339 5.544149565 7.900224736 ]
Ho trasformato il vettore Xmax (5 : 5): [ 12.67431725 9.032985081 12.19219754 9.171903361 10.26385753 ]
Ho trasformato il vettore lambda (5 : 5): [ 1.040829206 0.833709414 1.036836698 0.989892399 1.171423905 ]
Ho trasformato il vettore X0 (5 : 5): [ 11.39247467 7.769541808 9.180318338999999 6.255656565 8.441444735999999 ]
Ho trasformato il vettore weight_par (2 : 2): [ 1 0 ]
Ho trasformato la stringa 'act_fun' che vale 'linear'
------------------------------ Fine inSTRINGA

Ho trasformato il vettore alpha (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
Ho trasformato il vettore beta (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
Ho trasformato il vettore times (51 : 51): [ 0 0.1 0.2 0.3 0.4 0.5 0.6000000000000001 0.7000000000000001 0.8 0.9 1 1.1 1.2 1.3 1.4 1.5 1.6 1.7 1.8 1.9 2 2.1 2.2 2.3 2.4 2.5 2.6 2.7 2.8 2.9 3 3.1 3.2 3.3 3.4 3.5 3.6 3.7 3.8 3.9 4 4.100000000000001 4.2 4.3 4.4 4.5 4.600000000000001 4.7 4.800000000000001 4.9 5 ]
Ho trasformato la stringa 'method' che vale 'rkf45'
------------------------------ Fine inSTRINGA

Ho trasformato il vettore param (6 : 6): [ 0 0 0 0 0 0 ]
230: copia_v_d	<=>	ris[st:end] <- v[st:end]
lambda (5 : 5): [ 1.040829206 0.833709414 1.036836698 0.989892399 1.171423905 ]
st = 1
end = 5


parm0[LAMBDA] (5 : 5): [ 1.040829206 0.833709414 1.036836698 0.989892399 1.171423905 ]
------------------------------ Fine copia_v_d

232: copia_v_d	<=>	ris[st:end] <- v[st:end]
alpha (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
st = 1
end = 5


parm0[ALPHA] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
------------------------------ Fine copia_v_d

234: copia_v_d	<=>	ris[st:end] <- v[st:end]
beta (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
st = 1
end = 5


parm0[BETA] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
------------------------------ Fine copia_v_d

236: copia_v_d	<=>	ris[st:end] <- v[st:end]
Xmin (5 : 5): [ 8.419340674000001 3.482809808 6.932805339 5.544149565 7.900224736 ]
st = 1
end = 5


parm0[XMIN] (5 : 5): [ 8.419340674000001 3.482809808 6.932805339 5.544149565 7.900224736 ]
------------------------------ Fine copia_v_d

238: copia_v_d	<=>	ris[st:end] <- v[st:end]
Xmax (5 : 5): [ 12.67431725 9.032985081 12.19219754 9.171903361 10.26385753 ]
st = 1
end = 5


parm0[XMAX] (5 : 5): [ 12.67431725 9.032985081 12.19219754 9.171903361 10.26385753 ]
------------------------------ Fine copia_v_d

240: copia_v_d	<=>	ris[st:end] <- v[st:end]
X0 (5 : 5): [ 11.39247467 7.769541808 9.180318338999999 6.255656565 8.441444735999999 ]
st = 1
end = 5


parm0[XZERO] (5 : 5): [ 11.39247467 7.769541808 9.180318338999999 6.255656565 8.441444735999999 ]
------------------------------ Fine copia_v_d

275: dividi1_vv_d	<=>	v1 <- v1 / v2
parm0[XMIN] (5 : 5): [ 8.419340674000001 3.482809808 6.932805339 5.544149565 7.900224736 ]
parm0[XMAX] (5 : 5): [ 12.67431725 9.032985081 12.19219754 9.171903361 10.26385753 ]


parm0[XMIN] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]
------------------------------ Fine dividi_vv_d

278: dividi1_vv_d	<=>	v1 <- v1 / v2
parm0[XZERO] (5 : 5): [ 11.39247467 7.769541808 9.180318338999999 6.255656565 8.441444735999999 ]
parm0[XMAX] (5 : 5): [ 12.67431725 9.032985081 12.19219754 9.171903361 10.26385753 ]


parm0[XZERO] (5 : 5): [ 0.8988629876690203 0.86013003877782 0.7529666664997292 0.6820456255132146 0.8224436778595854 ]
------------------------------ Fine dividi_vv_d

287: copia_v_d	<=>	ris[st:end] <- v[st:end]
parm0[LAMBDA] (5 : 5): [ 1.040829206 0.833709414 1.036836698 0.989892399 1.171423905 ]
st = 1
end = 5


parm1[j][i] (5 : 5): [ 1.040829206 0.833709414 1.036836698 0.989892399 1.171423905 ]
------------------------------ Fine copia_v_d

287: copia_v_d	<=>	ris[st:end] <- v[st:end]
parm0[ALPHA] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
st = 1
end = 5


parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
------------------------------ Fine copia_v_d

287: copia_v_d	<=>	ris[st:end] <- v[st:end]
parm0[BETA] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
st = 1
end = 5


parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
------------------------------ Fine copia_v_d

287: copia_v_d	<=>	ris[st:end] <- v[st:end]
parm0[XMIN] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]
st = 1
end = 5


parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]
------------------------------ Fine copia_v_d

287: copia_v_d	<=>	ris[st:end] <- v[st:end]
parm0[XMAX] (5 : 5): [ 12.67431725 9.032985081 12.19219754 9.171903361 10.26385753 ]
st = 1
end = 5


parm1[j][i] (5 : 5): [ 12.67431725 9.032985081 12.19219754 9.171903361 10.26385753 ]
------------------------------ Fine copia_v_d

287: copia_v_d	<=>	ris[st:end] <- v[st:end]
parm0[XZERO] (5 : 5): [ 0.8988629876690203 0.86013003877782 0.7529666664997292 0.6820456255132146 0.8224436778595854 ]
st = 1
end = 5


parm1[j][i] (5 : 5): [ 0.8988629876690203 0.86013003877782 0.7529666664997292 0.6820456255132146 0.8224436778595854 ]
------------------------------ Fine copia_v_d


*** simulatenet1 ***

*** connectivity_modular1 ***
48: InitMatr_i
Mdiscr (5 x 5 : 5 x 5): [
	 2425208 0 0 0 0
	 2425208 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
val = 0


Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine InitMatr_i

53: seq_d	<=>	ris <- seq(da, a, incr)
da = 1
a = 5
incr = 1


tmp1_d (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine seq_d

54: exp_d	<=>	ris <- v ^ val
tmp1_d (5 : 5): [ 1 2 3 4 5 ]
val = -2.2


tmp2_d (5 : 5): [ 1 0.217637640824031 0.08919350686224783 0.04736614270344993 0.02899118654710781 ]
------------------------------ Fine exp_d

56: vettore2v_d		<=>	ris <- c(v1, v2)
tmp2_d (5 : 5): [ 1 0.217637640824031 0.08919350686224783 0.04736614270344993 0.02899118654710781 ]
scalare_d (1 : 1): [ 0 ]


Prob (6 : 6): [ 1 0.217637640824031 0.08919350686224783 0.04736614270344993 0.02899118654710781 0 ]
------------------------------ Fine vettore2v_d

58: somma_v_d	<=>	ris <- sum(v, na.rm=canc_NA)
Prob (6 : 6): [ 1 0.217637640824031 0.08919350686224783 0.04736614270344993 0.02899118654710781 0 ]
canc_NA = 0



ris: 1.383188476936837
------------------------------ Fine somma_v_d

58: dividi1_vs_d	<=>	v <- v / div
Prob (6 : 6): [ 1 0.217637640824031 0.08919350686224783 0.04736614270344993 0.02899118654710781 0 ]
div = 1.383


Prob (6 : 6): [ 0.722967272120837 0.1573448914973642 0.06448398634709048 0.03424417098119949 0.02095967905350884 0 ]
------------------------------ Fine dividi1_vs_d

61: InitVett_d
tmp2_d (6 : 16): [ 5.845028920627711e-308 0 0 0 0 0 ]
val = 0


tmp2_d (6 : 16): [ 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

63: vettore2v_d		<=>	ris <- c(v1, v2)
scalare_d (1 : 1): [ 5 ]
tmp2_d (6 : 16): [ 0 0 0 0 0 0 ]


Freq_out (7 : 7): [ 5 0 0 0 0 0 0 ]
------------------------------ Fine vettore2v_d

64: copia_v_d	<=>	ris[st:end] <- v[st:end]
Freq_out (7 : 7): [ 5 0 0 0 0 0 0 ]
st = 1
end = 7


Freq_in (7 : 7): [ 5 0 0 0 0 0 0 ]
------------------------------ Fine copia_v_d

66: moltiplica_vs_d	<=>	ris <- v1 * v2
Prob (6 : 6): [ 0.722967272120837 0.1573448914973642 0.06448398634709048 0.03424417098119949 0.02095967905350884 0 ]
val = 5


tmp1_d (6 : 16): [ 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
------------------------------ Fine moltiplica_vs_d

68: vettore2v_d		<=>	ris <- c(v1, v2)
scalare_d (1 : 1): [ 1.#QNAN ]
tmp1_d (6 : 16): [ 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]


STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
------------------------------ Fine vettore2v_d

69: copia_v_d	<=>	ris[st:end] <- v[st:end]
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
st = 1
end = 7


STin (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
------------------------------ Fine copia_v_d

72: InitVett_d
tmp1_d (7 : 16): [ 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 0 ]
val = 1


tmp1_d (7 : 16): [ 1 1 1 1 1 1 1 ]
------------------------------ Fine InitVett_d

73: moltiplica_vs_d	<=>	ris <- v1 * v2
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
val = 0.1


tmp2_d (7 : 16): [ 1.#QNAN 0.3614836360604186 0.07867244574868211 0.03224199317354524 0.01712208549059974 0.01047983952675442 0 ]
------------------------------ Fine moltiplica_vs_d

74: cbind2v_d	<=>	ris <- cbind(v1, v2)
tmp2_d (7 : 16): [ 1.#QNAN 0.3614836360604186 0.07867244574868211 0.03224199317354524 0.01712208549059974 0.01047983952675442 0 ]
tmp1_d (7 : 16): [ 1 1 1 1 1 1 1 ]


aus (7 x 2 : 7 x 2): [
	 1.#QNAN 1
	 0.3614836360604186 1
	 0.07867244574868211 1
	 0.03224199317354524 1
	 0.01712208549059974 1
	 0.01047983952675442 1
	 0 1
 ]
------------------------------ Fine cbind2v_d

76: max_righe_d	<=>	ris <- apply(m, 1, max)
aus (7 x 2 : 7 x 2): [
	 1.#QNAN 1
	 0.3614836360604186 1
	 0.07867244574868211 1
	 0.03224199317354524 1
	 0.01712208549059974 1
	 0.01047983952675442 1
	 0 1
 ]


toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
------------------------------ Fine max_righe_d

78: assegna_v_segm_d	<=>	v[st:end] <- val
STin (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
start = 7
end = 7
val = 0


STin (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
------------------------------ Fine assegna_v_segm_d

88: assegna_v_segm_d	<=>	v[st:end] <- val
STin (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
start = 2
end = 6
val = 1.#QNAN


STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
------------------------------ Fine assegna_v_segm_d

96: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 5
incr = 1


h (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine seq_i

110: somma_righe_i	<=>	ris <- apply(m, 1, sum)
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]


Sin (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine somma_righe_i

112: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]


Sout (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine somma_colonne_i


*** cluster_coeff ***
19: trasponi_i	<=>	ris <- t(m)
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]


tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine trasponi_i

20: somma1_m_i	<=>	m1 <- m1 + m2
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]


tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine somma1_m_i

22: which_m_indxne_i	<=>	ris <- which(m!=val)
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
val = 0


ind (0 : 25): [ ]
------------------------------ Fine which_m_indxne_i

24: assegna1_ms_indx_i	<=>	m[indx] = val
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
ind (0 : 25): [ ]
val = 1


tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine assegna1_ms_indx_i

26: assegna1_s_diag_i	<=>	diag_i(m) <- s
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
val = 0


tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine assegna1_s_diag_i

31: InitVett_d
ris (5 : 5): [ 1.000000008196135 2 3 4 5 ]
val = 0


ris (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

35: somma_riga_i	<=>	ris <- sum(m[riga, ])
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 1


ris: 0
------------------------------ Fine somma_riga_i

37: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
r = 1
val = 0


neighbours (0 : 25): [ ]
------------------------------ Fine which_m_rowindxne_i

35: somma_riga_i	<=>	ris <- sum(m[riga, ])
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 2


ris: 0
------------------------------ Fine somma_riga_i

37: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
r = 2
val = 0


neighbours (0 : 25): [ ]
------------------------------ Fine which_m_rowindxne_i

35: somma_riga_i	<=>	ris <- sum(m[riga, ])
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 3


ris: 0
------------------------------ Fine somma_riga_i

37: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
r = 3
val = 0


neighbours (0 : 25): [ ]
------------------------------ Fine which_m_rowindxne_i

35: somma_riga_i	<=>	ris <- sum(m[riga, ])
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 4


ris: 0
------------------------------ Fine somma_riga_i

37: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
r = 4
val = 0


neighbours (0 : 25): [ ]
------------------------------ Fine which_m_rowindxne_i

35: somma_riga_i	<=>	ris <- sum(m[riga, ])
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 5


ris: 0
------------------------------ Fine somma_riga_i

37: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
r = 5
val = 0


neighbours (0 : 25): [ ]
------------------------------ Fine which_m_rowindxne_i

69: media_v_d	<=>	ris <- mean(v)
ris (5 : 5): [ 0 0 0 0 0 ]


media = 0.000
------------------------------ Fine media_v_d


Stringhe allocate: 5 (225 interne); stringhe deallocate: 0 (15 interne)


*** module1 ***
44: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 5
incr = 1


tmp1_i (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine seq_i


*** sampleB ***

***sample***
tmp1_i (5 : 5): [ 1 2 3 4 5 ]
k = 1, replace = 0


ris (1 : 1): [ 4 ]
*****************************************


Stringhe allocate: 5 (240 interne); stringhe deallocate: 0 (15 interne)


Stringhe allocate: 5 (240 interne); stringhe deallocate: 0 (15 interne)


*** mod1 ***
18: InitMatr_i
ris (4 x 4 : 4 x 4): [
	 79851528 0 0 0
	 2425208 0 0 0
	 0 0 0 0
	 0 0 0 0
 ]
val = 0


ris (4 x 4 : 4 x 4): [
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
 ]
------------------------------ Fine InitMatr_i

21: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 3
incr = 1


x (3 : 3): [ 1 2 3 ]
------------------------------ Fine seq_i

23: somma_vs_i	<=>	ris <- v + s
x (3 : 3): [ 1 2 3 ]
s = 1


tmp1_i (3 : 3): [ 2 3 4 ]
------------------------------ Fine somma_vs_i

24: cbind2v_i	<=>	ris <- cbind(v1, v2)
x (3 : 3): [ 1 2 3 ]
tmp1_i (3 : 3): [ 2 3 4 ]


ind (3 x 2 : 3 x 2): [
	 1 2
	 2 3
	 3 4
 ]
------------------------------ Fine cbind2v_i

26: assegna1_ms_indx2_i	<=>	m[indxm] <- val
ris (4 x 4 : 4 x 4): [
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
 ]
ind (3 x 2 : 3 x 2): [
	 1 2
	 2 3
	 3 4
 ]
val = 1


ris (4 x 4 : 4 x 4): [
	 0 1 0 0
	 0 0 1 0
	 0 0 0 1
	 0 0 0 0
 ]
------------------------------ Fine assegna1_ms_indx2_i

29: vettore2s_i		<=>	ris <- c(el1, el2)
el1 = 1, el2 = -1


tmp1_i (2 : 3): [ 1 -1 ]
------------------------------ Fine vettore2s_i


*** sampleB ***

***sample***
tmp1_i (2 : 3): [ 1 -1 ]
k = 1, replace = 0


ris (1 : 1): [ -1 ]
*****************************************


Stringhe allocate: 5 (265 interne); stringhe deallocate: 0 (15 interne)


Stringhe allocate: 5 (265 interne); stringhe deallocate: 0 (15 interne)


*** triangola ***
27: diag_i	<=>	ris <- diag(m)
ris (4 x 4 : 4 x 4): [
	 0 1 0 0
	 0 0 1 0
	 0 0 0 1
	 1 0 0 0
 ]


Dmem (4 : 4): [ 0 0 0 0 ]
------------------------------ Fine diag_i

29: assegna1_s_diag_i	<=>	diag_i(m) <- s
ris (4 x 4 : 4 x 4): [
	 0 1 0 0
	 0 0 1 0
	 0 0 0 1
	 1 0 0 0
 ]
val = 0


ris (4 x 4 : 4 x 4): [
	 0 1 0 0
	 0 0 1 0
	 0 0 0 1
	 1 0 0 0
 ]
------------------------------ Fine assegna1_s_diag_i

33: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
ris (4 x 4 : 4 x 4): [
	 0 1 0 0
	 0 0 1 0
	 0 0 0 1
	 1 0 0 0
 ]
r = 1
val = 0


tmp1_i (1 : 16): [ 2 ]
------------------------------ Fine which_m_rowindxne_i

34: which_m_colindxne_i	<=>	ris <- which(m[, c] != val)
ris (4 x 4 : 4 x 4): [
	 0 1 0 0
	 0 0 1 0
	 0 0 0 1
	 1 0 0 0
 ]
c = 1, val = 0


tmp2_i (1 : 16): [ 4 ]
------------------------------ Fine which_m_colindxne_i

35: unione_i	<=>	ris <- union(v1, v2)
tmp1_i (1 : 16): [ 2 ]
tmp2_i (1 : 16): [ 4 ]
4876: elimina_doppi_i	<=>	ris <- union(v, v)
ind (2 : 2): [ 2 4 ]


ris (2 : 2): [ 2 4 ]
------------------------------ Fine elimina_doppi_i



ris (2 : 2): [ 2 4 ]
------------------------------ Fine unione_i

33: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
ris (4 x 4 : 4 x 4): [
	 0 1 0 0
	 0 0 1 0
	 0 0 0 1
	 1 0 0 0
 ]
r = 2
val = 0


tmp1_i (1 : 16): [ 3 ]
------------------------------ Fine which_m_rowindxne_i

34: which_m_colindxne_i	<=>	ris <- which(m[, c] != val)
ris (4 x 4 : 4 x 4): [
	 0 1 0 0
	 0 0 1 0
	 0 0 0 1
	 1 0 0 0
 ]
c = 2, val = 0


tmp2_i (1 : 16): [ 1 ]
------------------------------ Fine which_m_colindxne_i

35: unione_i	<=>	ris <- union(v1, v2)
tmp1_i (1 : 16): [ 3 ]
tmp2_i (1 : 16): [ 1 ]
4876: elimina_doppi_i	<=>	ris <- union(v, v)
ind (2 : 2): [ 3 1 ]


ris (2 : 2): [ 3 1 ]
------------------------------ Fine elimina_doppi_i



ris (2 : 2): [ 3 1 ]
------------------------------ Fine unione_i

55: InitMatr_i
coord (1 x 2 : 2 x 2): [
	 38206424 1819240302
 ]
val = 0


coord (1 x 2 : 2 x 2): [
	 0 0
 ]
------------------------------ Fine InitMatr_i

72: vettore2s_i		<=>	ris <- c(el1, el2)
el1 = 3, el2 = 1


tmp1_i (2 : 16): [ 3 1 ]
------------------------------ Fine vettore2s_i

73: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
coord (1 x 2 : 2 x 2): [
	 0 0
 ]
riga = 2
tmp1_i (2 : 16): [ 3 1 ]


coord (2 x 2 : 2 x 2): [
	 0 0
	 3 1
 ]
------------------------------ Fine aggiungi_mv_riga_i

74: vettore2s_i		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 3


tmp1_i (2 : 16): [ 1 3 ]
------------------------------ Fine vettore2s_i

76: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
coord (2 x 2 : 2 x 2): [
	 0 0
	 3 1
 ]
riga = 3
tmp1_i (2 : 16): [ 1 3 ]


coord (3 x 2 : 3 x 2): [
	 0 0
	 3 1
	 1 3
 ]
------------------------------ Fine aggiungi_mv_riga_i

89: somma_righe_i	<=>	ris <- apply(m, 1, sum)
ris (4 x 4 : 4 x 4): [
	 0 1 0 0
	 0 0 1 0
	 0 0 0 1
	 1 0 0 0
 ]


M_in (4 : 4): [ 1 1 1 1 ]
------------------------------ Fine somma_righe_i

91: which_v_indxlt_i	<=>	ris <- which(v<val)
M_in (4 : 4): [ 1 1 1 1 ]
val = 5

ris (4 : 8): [ 1 2 3 4 ]
------------------------------ Fine which_v_indxlt_i

95: which_m_colindxin_i	<=>	ris <- which(m[, c] %IN% v)
coord (3 x 2 : 3 x 2): [
	 0 0
	 3 1
	 1 3
 ]
c = 1
ris (4 : 8): [ 1 2 3 4 ]
3754: esiste_v_i	<=>	elem %IN% v
elem = 0
ris (4 : 8): [ 1 2 3 4 ]


indx = 0
------------------------------ Fine esiste_v_i

3754: esiste_v_i	<=>	elem %IN% v
elem = 3
ris (4 : 8): [ 1 2 3 4 ]


indx = 3
------------------------------ Fine esiste_v_i

3754: esiste_v_i	<=>	elem %IN% v
elem = 1
ris (4 : 8): [ 1 2 3 4 ]


indx = 1
------------------------------ Fine esiste_v_i



ind_aus (2 : 3): [ 2 3 ]
------------------------------ Fine which_m_colindxin_i

101: righe_i	<=>	ris <- m[indx,]
coord (3 x 2 : 3 x 2): [
	 0 0
	 3 1
	 1 3
 ]
ind_aus (2 : 3): [ 2 3 ]



tmp_coord1 (2 x 2 : 2 x 2): [
	 3 1
	 1 3
 ]
------------------------------ Fine righe_i

102: copia_m_i	<=>	ris <- da
tmp_coord1 (2 x 2 : 2 x 2): [
	 3 1
	 1 3
 ]


coord (2 x 2 : 3 x 2): [
	 3 1
	 1 3
 ]
------------------------------ Fine copia_m_i

104: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 2
incr = 1


tmp1_i (2 : 16): [ 1 2 ]
------------------------------ Fine seq_i


*** sampleB ***

***sample***
tmp1_i (2 : 16): [ 1 2 ]
k = 1, replace = 0


ris (1 : 1): [ 1 ]
*****************************************


Stringhe allocate: 5 (335 interne); stringhe deallocate: 0 (35 interne)


Stringhe allocate: 5 (335 interne); stringhe deallocate: 0 (35 interne)

107: riga_i	<=>	ris <- m[r,]
coord (2 x 2 : 3 x 2): [
	 3 1
	 1 3
 ]
r = 1

coord_ind (2 : 2): [ 3 1 ]
------------------------------ Fine riga_i

111: which_m_colneand2_i	<=>	ris <- which((m[, c] != val1) & (m[, c] != val2))
coord (2 x 2 : 3 x 2): [
	 3 1
	 1 3
 ]
c = 1, val1 = 3, val2 = 1


ris (0 : 8): [ ]
------------------------------ Fine which_m_colneand2_i

33: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
ris (4 x 4 : 4 x 4): [
	 0 1 0 0
	 0 0 1 0
	 1 0 0 1
	 1 0 0 0
 ]
r = 3
val = 0


tmp1_i (2 : 16): [ 1 4 ]
------------------------------ Fine which_m_rowindxne_i

34: which_m_colindxne_i	<=>	ris <- which(m[, c] != val)
ris (4 x 4 : 4 x 4): [
	 0 1 0 0
	 0 0 1 0
	 1 0 0 1
	 1 0 0 0
 ]
c = 3, val = 0


tmp2_i (1 : 16): [ 2 ]
------------------------------ Fine which_m_colindxne_i

35: unione_i	<=>	ris <- union(v1, v2)
tmp1_i (2 : 16): [ 1 4 ]
tmp2_i (1 : 16): [ 2 ]
4876: elimina_doppi_i	<=>	ris <- union(v, v)
ind (3 : 3): [ 1 4 2 ]


ris (3 : 8): [ 1 4 2 ]
------------------------------ Fine elimina_doppi_i



ris (3 : 8): [ 1 4 2 ]
------------------------------ Fine unione_i

55: InitMatr_i
coord (1 x 2 : 3 x 2): [
	 3 1
 ]
val = 0


coord (1 x 2 : 3 x 2): [
	 0 0
 ]
------------------------------ Fine InitMatr_i

72: vettore2s_i		<=>	ris <- c(el1, el2)
el1 = 4, el2 = 2


tmp1_i (2 : 16): [ 4 2 ]
------------------------------ Fine vettore2s_i

73: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
coord (1 x 2 : 3 x 2): [
	 0 0
 ]
riga = 2
tmp1_i (2 : 16): [ 4 2 ]


coord (2 x 2 : 2 x 2): [
	 0 0
	 4 2
 ]
------------------------------ Fine aggiungi_mv_riga_i

74: vettore2s_i		<=>	ris <- c(el1, el2)
el1 = 2, el2 = 4


tmp1_i (2 : 16): [ 2 4 ]
------------------------------ Fine vettore2s_i

76: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
coord (2 x 2 : 2 x 2): [
	 0 0
	 4 2
 ]
riga = 3
tmp1_i (2 : 16): [ 2 4 ]


coord (3 x 2 : 3 x 2): [
	 0 0
	 4 2
	 2 4
 ]
------------------------------ Fine aggiungi_mv_riga_i

33: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
ris (4 x 4 : 4 x 4): [
	 0 1 0 0
	 0 0 1 0
	 1 0 0 1
	 1 0 0 0
 ]
r = 4
val = 0


tmp1_i (1 : 16): [ 1 ]
------------------------------ Fine which_m_rowindxne_i

34: which_m_colindxne_i	<=>	ris <- which(m[, c] != val)
ris (4 x 4 : 4 x 4): [
	 0 1 0 0
	 0 0 1 0
	 1 0 0 1
	 1 0 0 0
 ]
c = 4, val = 0


tmp2_i (1 : 16): [ 3 ]
------------------------------ Fine which_m_colindxne_i

35: unione_i	<=>	ris <- union(v1, v2)
tmp1_i (1 : 16): [ 1 ]
tmp2_i (1 : 16): [ 3 ]
4876: elimina_doppi_i	<=>	ris <- union(v, v)
ind (2 : 2): [ 1 3 ]


ris (2 : 8): [ 1 3 ]
------------------------------ Fine elimina_doppi_i



ris (2 : 8): [ 1 3 ]
------------------------------ Fine unione_i

152: assegna1_v_diag_i	<=>	diag(m) <- v
ris (4 x 4 : 4 x 4): [
	 0 1 0 0
	 0 0 1 0
	 1 0 0 1
	 1 0 0 0
 ]
Dmem (4 : 4): [ 0 0 0 0 ]


ris (4 x 4 : 4 x 4): [
	 0 1 0 0
	 0 0 1 0
	 1 0 0 1
	 1 0 0 0
 ]
------------------------------ Fine assegna1_v_diag_i


Stringhe allocate: 5 (360 interne); stringhe deallocate: 0 (110 interne)


Stringhe allocate: 5 (360 interne); stringhe deallocate: 0 (130 interne)


*** probmod ***
46: InitMatr_i
checkOUT (4 x 5 : 4 x 5): [
	 36899968 842217518 943077684 875444233 859060022
	 3 825439796 774975753 875772209 892483377
	 2 841887753 875706675 876033584 6881290
	 4 842283058 926299191 775041289 3866734
 ]
val = 0


checkOUT (4 x 5 : 4 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine InitMatr_i

48: InitMatr_i
checkIN (4 x 5 : 4 x 5): [
	 38176696 858994478 909194805 775227701 959526705
	 943274041 825634866 775293235 825504821 909325104
	 959656505 774900022 909456690 909457716 2609
	 959514937 808990513 909456949 775489845 5242995
 ]
val = 0


checkIN (4 x 5 : 4 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine InitMatr_i

50: InitMatr_d
ris (4 x 5 : 4 x 5): [
	 5.842414621812633e-308 0 0 0 0
	 3.250838314536859e-318 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
val = 0


ris (4 x 5 : 4 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine InitMatr_d

52: somma_righe_i	<=>	ris <- apply(m, 1, sum)
ris (4 x 4 : 4 x 4): [
	 0 1 0 0
	 0 0 1 0
	 1 0 0 1
	 1 0 0 0
 ]


M_in (4 : 4): [ 1 1 2 1 ]
------------------------------ Fine somma_righe_i

54: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
ris (4 x 4 : 4 x 4): [
	 0 1 0 0
	 0 0 1 0
	 1 0 0 1
	 1 0 0 0
 ]


M_out (4 : 4): [ 2 1 1 1 ]
------------------------------ Fine somma_colonne_i

57: InitMatr_i
memory (4 x 3 : 4 x 3): [
	 0 0 0
	 0 0 0
	 0 0 0
	 0 0 0
 ]
val = -2147483648


memory (4 x 3 : 4 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
------------------------------ Fine InitMatr_i

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (4 x 3 : 4 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 1


tmp_i1 (0 : 12): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (4 x 3 : 4 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 2


tmp_i2 (0 : 12): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 12): [ ]
tmp_i2 (0 : 12): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

92: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sout (5 : 5): [ 0 0 0 0 0 ]
h (5 : 5): [ 1 2 3 4 5 ]


tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
s = 2


ind (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 2 2 2 2 2 ]
s = 1


tmp_i1 (5 : 5): [ 3 3 3 3 3 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (5 : 5): [ 3 3 3 3 3 ]


T2 (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


old1 (5 : 5): [ 5 5 5 5 5 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 2 2 2 2 2 ]
s = 1


tmp_i1 (5 : 5): [ 3 3 3 3 3 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 3 3 3 3 3 ]


old2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (5 : 5): [ 5 5 5 5 5 ]
s = -1


new1 (5 : 5): [ 4 4 4 4 4 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (5 : 5): [ 0 0 0 0 0 ]
s = 1


new2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


toll1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 2 2 2 2 2 ]
s = 1


tmp_i1 (5 : 5): [ 3 3 3 3 3 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 3 3 3 3 3 ]


toll2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (5 : 5): [ 5 5 5 5 5 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (5 : 5): [ 4 4 4 4 4 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (5 : 5): [ 5.842414621812633e-308 0 0 0 0 ]
val = 0


S1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (5 : 5): [ 0 0 0 0 0 ]
T2 (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]


a (5 : 5): [ -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 ]


a (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (5 : 5): [ 1 1 1 1 1 ]
T2 (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]


b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]


b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]


tmpm_d (5 x 2 : 5 x 2): [
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
 ]


m (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
complemento = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxNA_d

115: assegna1_vs_indx_d	<=>	v[indx] <- val
a (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
ind (0 : 5): [ ]
val = 0


a (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
------------------------------ Fine assegna1_vs_indx_d

117: assegna1_vs_indx_d	<=>	v[indx] <- val
b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]
ind (0 : 5): [ ]
val = 0


b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine assegna1_vs_indx_d

119: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]


tmpm_d (5 x 2 : 5 x 2): [
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
 ]
------------------------------ Fine cbind2v_d

120: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
 ]


m (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
------------------------------ Fine max_righe_d

122: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]
m (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
T2 (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine f_aux_d

124: diff_vv_d	<=>	ris <- v1 - v2
a (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
toll2 (5 : 5): [ 1 1 1 1 1 ]


tmp_d1 (5 : 5): [ -0.2132755425131789 -0.2132755425131789 -0.2132755425131789 -0.2132755425131789 -0.2132755425131789 ]
------------------------------ Fine diff_vv_d

125: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (5 : 5): [ -0.2132755425131789 -0.2132755425131789 -0.2132755425131789 -0.2132755425131789 -0.2132755425131789 ]
val = 0

ind1 (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxlt_d

127: diff_vv_d	<=>	ris <- v1 - v2
b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]
toll2 (5 : 5): [ 1 1 1 1 1 ]


tmp_d1 (5 : 5): [ -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 ]
------------------------------ Fine diff_vv_d

128: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (5 : 5): [ -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 ]
val = 0


ind2 (0 : 5): [ ]
------------------------------ Fine which_v_indxgt_d

130: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (5 : 5): [ 1 2 3 4 5 ]
ind2 (0 : 5): [ ]
2459: esiste_v_i	<=>	elem %IN% v
elem = 1
ind2 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 1
tmp_i1 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 2
ind2 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 2
tmp_i1 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 3
ind2 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 3
tmp_i1 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 4
ind2 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 4
tmp_i1 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 5
ind2 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 5
tmp_i1 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i



tmp_i1 (0 : 5): [ ]
------------------------------ Fine interseca_i

132: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
tmp_i1 (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

134: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
ind (0 : 5): [ ]
val = 0


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
val = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
ind (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (5 : 5): [ 0 0 0 0 0 ]
S2 (5 : 5): [ 1 1 1 1 1 ]


ris (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
ris (5 : 5): [ 1 1 1 1 1 ]
div = 2.000


ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (520 interne); stringhe deallocate: 0 (230 interne)

95: which_v_indxne_d	<=>	ris <- which(v != val)
ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
val = -1.#INF


indok (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxne_d

97: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkOUT (4 x 5 : 4 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 1
indok (5 : 5): [ 1 2 3 4 5 ]
val = 1


checkOUT (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_riga_indx_i

104: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 5
incr = 1


tmp_i1 (5 : 12): [ 1 2 3 4 5 ]
------------------------------ Fine seq_i

105: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (5 : 12): [ 1 2 3 4 5 ]
indok (5 : 5): [ 1 2 3 4 5 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (5 : 12): [ 1 2 3 4 5 ]
st = 1
end = 5


indInf (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (5 : 5): [ 1 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (5 : 5): [ 1 2 3 4 5 ]
indx = 1


indInf (4 : 5): [ 2 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (4 : 5): [ 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (4 : 5): [ 2 3 4 5 ]
indx = 1


indInf (3 : 5): [ 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (3 : 5): [ 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 5): [ 3 4 5 ]
indx = 1


indInf (2 : 5): [ 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 4
indInf (2 : 5): [ 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 5): [ 4 5 ]
indx = 1


indInf (1 : 5): [ 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 5
indInf (1 : 5): [ 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 5): [ 5 ]
indx = 1


indInf (0 : 5): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 5): [ ]
------------------------------ Fine setdiff_i

107: copia_v_indx_d	<=>	ris <- v[indx]
ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
indok (5 : 5): [ 1 2 3 4 5 ]


tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine copia_v_indx_d

111: min_v_d	<=>	ris <- min(v)
tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]


min = 0.5
------------------------------ Fine min_v_d

112: assegna1_vs_indx_d	<=>	v[indx] <- val
ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
indInf (0 : 5): [ ]
val = -1


ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine assegna1_vs_indx_d

128: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 0 0 0 0 ]
h (5 : 5): [ 1 2 3 4 5 ]


tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
s = 1


ind (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


old1 (5 : 5): [ 5 5 5 5 5 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


old2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (5 : 5): [ 5 5 5 5 5 ]
s = -1


new1 (5 : 5): [ 4 4 4 4 4 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (5 : 5): [ 0 0 0 0 0 ]
s = 1


new2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


toll1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


toll2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (5 : 5): [ 5 5 5 5 5 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (5 : 5): [ 4 4 4 4 4 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (5 : 5): [ 0.7867240946742395 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
val = 0


S1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (5 : 5): [ 0 0 0 0 0 ]
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (5 : 5): [ 1 1 1 1 1 ]
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


tmpm_d (5 x 2 : 5 x 2): [
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
 ]


m (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

140: InitVett_d
S2 (5 : 5): [ -0.7867240905761719 -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 ]
val = 0


S2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
val = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 0 0 0 0 0 ]
ind (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (5 : 5): [ 0 0 0 0 0 ]
S2 (5 : 5): [ 0 0 0 0 0 ]


ris (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
ris (5 : 5): [ 0 0 0 0 0 ]
div = 2.000


ris (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (625 interne); stringhe deallocate: 0 (315 interne)

131: which_v_indxne_d	<=>	ris <- which(v != val)
ris (5 : 5): [ 0 0 0 0 0 ]
val = -1.#INF


indok (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxne_d

133: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkIN (4 x 5 : 4 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 1
indok (5 : 5): [ 1 2 3 4 5 ]
val = 1


checkIN (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_riga_indx_i

141: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 5
incr = 1


tmp_i1 (5 : 12): [ 1 2 3 4 5 ]
------------------------------ Fine seq_i

142: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (5 : 12): [ 1 2 3 4 5 ]
indok (5 : 5): [ 1 2 3 4 5 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (5 : 12): [ 1 2 3 4 5 ]
st = 1
end = 5


indInf (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (5 : 5): [ 1 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (5 : 5): [ 1 2 3 4 5 ]
indx = 1


indInf (4 : 5): [ 2 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (4 : 5): [ 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (4 : 5): [ 2 3 4 5 ]
indx = 1


indInf (3 : 5): [ 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (3 : 5): [ 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 5): [ 3 4 5 ]
indx = 1


indInf (2 : 5): [ 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 4
indInf (2 : 5): [ 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 5): [ 4 5 ]
indx = 1


indInf (1 : 5): [ 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 5
indInf (1 : 5): [ 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 5): [ 5 ]
indx = 1


indInf (0 : 5): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 5): [ ]
------------------------------ Fine setdiff_i

144: copia_v_indx_d	<=>	ris <- v[indx]
ris (5 : 5): [ 0 0 0 0 0 ]
indok (5 : 5): [ 1 2 3 4 5 ]


tmp_d1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine copia_v_indx_d

148: min_v_d	<=>	ris <- min(v)
tmp_d1 (5 : 5): [ 0 0 0 0 0 ]


min = 0
------------------------------ Fine min_v_d

149: assegna1_vs_indx_d	<=>	v[indx] <- val
ris (5 : 5): [ 0 0 0 0 0 ]
indInf (0 : 5): [ ]
val = -1


ris (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

159: somma_vv_d	<=>	ris <- v1 + v2
ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
ris (5 : 5): [ 0 0 0 0 0 ]


tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (4 x 5 : 4 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 1
tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]


ris (4 x 5 : 4 x 5): [
	 0.5 0.5 0.5 0.5 0.5
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_d

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (4 x 3 : 4 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 1


tmp_i1 (0 : 12): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (4 x 3 : 4 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 1


tmp_i2 (0 : 12): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 12): [ ]
tmp_i2 (0 : 12): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

92: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sout (5 : 5): [ 0 0 0 0 0 ]
h (5 : 5): [ 1 2 3 4 5 ]


tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
s = 1


ind (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


old1 (5 : 5): [ 5 5 5 5 5 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


old2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (5 : 5): [ 5 5 5 5 5 ]
s = -1


new1 (5 : 5): [ 4 4 4 4 4 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (5 : 5): [ 0 0 0 0 0 ]
s = 1


new2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


toll1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


toll2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (5 : 5): [ 5 5 5 5 5 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (5 : 5): [ 4 4 4 4 4 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (5 : 5): [ 5.00000007092526 5 5 5 5 ]
val = 0


S1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (5 : 5): [ 0 0 0 0 0 ]
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]


a (5 : 5): [ -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 ]


a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (5 : 5): [ 1 1 1 1 1 ]
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]


b (5 : 5): [ -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 ]


b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]


tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]


m (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
complemento = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxNA_d

115: assegna1_vs_indx_d	<=>	v[indx] <- val
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
ind (0 : 5): [ ]
val = 0


a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine assegna1_vs_indx_d

117: assegna1_vs_indx_d	<=>	v[indx] <- val
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
ind (0 : 5): [ ]
val = 0


b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
------------------------------ Fine assegna1_vs_indx_d

119: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]


tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]
------------------------------ Fine cbind2v_d

120: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]


m (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine max_righe_d

122: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
m (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine f_aux_d

124: diff_vv_d	<=>	ris <- v1 - v2
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
toll2 (5 : 5): [ 1 1 1 1 1 ]


tmp_d1 (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
------------------------------ Fine diff_vv_d

125: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
val = 0

ind1 (0 : 5): [ ]
------------------------------ Fine which_v_indxlt_d

127: diff_vv_d	<=>	ris <- v1 - v2
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
toll2 (5 : 5): [ 1 1 1 1 1 ]


tmp_d1 (5 : 5): [ 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 ]
------------------------------ Fine diff_vv_d

128: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (5 : 5): [ 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 ]
val = 0


ind2 (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxgt_d

130: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (0 : 5): [ ]
ind2 (5 : 5): [ 1 2 3 4 5 ]


tmp_i1 (0 : 5): [ ]
------------------------------ Fine interseca_i

132: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
tmp_i1 (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

134: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
ind (0 : 5): [ ]
val = 0


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
val = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
ind (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (5 : 5): [ 0 0 0 0 0 ]
S2 (5 : 5): [ 1 1 1 1 1 ]


ris (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
ris (5 : 5): [ 1 1 1 1 1 ]
div = 2.000


ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (725 interne); stringhe deallocate: 0 (415 interne)

95: which_v_indxne_d	<=>	ris <- which(v != val)
ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
val = -1.#INF


indok (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxne_d

97: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkOUT (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 2
indok (5 : 5): [ 1 2 3 4 5 ]
val = 1


checkOUT (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_riga_indx_i

104: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 5
incr = 1


tmp_i1 (5 : 12): [ 1 2 3 4 5 ]
------------------------------ Fine seq_i

105: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (5 : 12): [ 1 2 3 4 5 ]
indok (5 : 5): [ 1 2 3 4 5 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (5 : 12): [ 1 2 3 4 5 ]
st = 1
end = 5


indInf (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (5 : 5): [ 1 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (5 : 5): [ 1 2 3 4 5 ]
indx = 1


indInf (4 : 5): [ 2 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (4 : 5): [ 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (4 : 5): [ 2 3 4 5 ]
indx = 1


indInf (3 : 5): [ 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (3 : 5): [ 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 5): [ 3 4 5 ]
indx = 1


indInf (2 : 5): [ 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 4
indInf (2 : 5): [ 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 5): [ 4 5 ]
indx = 1


indInf (1 : 5): [ 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 5
indInf (1 : 5): [ 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 5): [ 5 ]
indx = 1


indInf (0 : 5): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 5): [ ]
------------------------------ Fine setdiff_i

107: copia_v_indx_d	<=>	ris <- v[indx]
ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
indok (5 : 5): [ 1 2 3 4 5 ]


tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine copia_v_indx_d

111: min_v_d	<=>	ris <- min(v)
tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]


min = 0.5
------------------------------ Fine min_v_d

112: assegna1_vs_indx_d	<=>	v[indx] <- val
ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
indInf (0 : 5): [ ]
val = -1


ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine assegna1_vs_indx_d

128: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 0 0 0 0 ]
h (5 : 5): [ 1 2 3 4 5 ]


tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
s = 1


ind (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


old1 (5 : 5): [ 5 5 5 5 5 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


old2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (5 : 5): [ 5 5 5 5 5 ]
s = -1


new1 (5 : 5): [ 4 4 4 4 4 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (5 : 5): [ 0 0 0 0 0 ]
s = 1


new2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


toll1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


toll2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (5 : 5): [ 5 5 5 5 5 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (5 : 5): [ 4 4 4 4 4 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (5 : 5): [ 5.000000070923065 5 5 5 5 ]
val = 0


S1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (5 : 5): [ 0 0 0 0 0 ]
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (5 : 5): [ 1 1 1 1 1 ]
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


tmpm_d (5 x 2 : 5 x 2): [
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
 ]


m (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

140: InitVett_d
S2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
val = 0


S2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
val = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 0 0 0 0 0 ]
ind (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (5 : 5): [ 0 0 0 0 0 ]
S2 (5 : 5): [ 0 0 0 0 0 ]


ris (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
ris (5 : 5): [ 0 0 0 0 0 ]
div = 2.000


ris (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (810 interne); stringhe deallocate: 0 (500 interne)

131: which_v_indxne_d	<=>	ris <- which(v != val)
ris (5 : 5): [ 0 0 0 0 0 ]
val = -1.#INF


indok (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxne_d

133: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkIN (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 2
indok (5 : 5): [ 1 2 3 4 5 ]
val = 1


checkIN (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_riga_indx_i

141: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 5
incr = 1


tmp_i1 (5 : 12): [ 1 2 3 4 5 ]
------------------------------ Fine seq_i

142: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (5 : 12): [ 1 2 3 4 5 ]
indok (5 : 5): [ 1 2 3 4 5 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (5 : 12): [ 1 2 3 4 5 ]
st = 1
end = 5


indInf (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (5 : 5): [ 1 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (5 : 5): [ 1 2 3 4 5 ]
indx = 1


indInf (4 : 5): [ 2 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (4 : 5): [ 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (4 : 5): [ 2 3 4 5 ]
indx = 1


indInf (3 : 5): [ 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (3 : 5): [ 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 5): [ 3 4 5 ]
indx = 1


indInf (2 : 5): [ 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 4
indInf (2 : 5): [ 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 5): [ 4 5 ]
indx = 1


indInf (1 : 5): [ 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 5
indInf (1 : 5): [ 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 5): [ 5 ]
indx = 1


indInf (0 : 5): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 5): [ ]
------------------------------ Fine setdiff_i

144: copia_v_indx_d	<=>	ris <- v[indx]
ris (5 : 5): [ 0 0 0 0 0 ]
indok (5 : 5): [ 1 2 3 4 5 ]


tmp_d1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine copia_v_indx_d

148: min_v_d	<=>	ris <- min(v)
tmp_d1 (5 : 5): [ 0 0 0 0 0 ]


min = 0
------------------------------ Fine min_v_d

149: assegna1_vs_indx_d	<=>	v[indx] <- val
ris (5 : 5): [ 0 0 0 0 0 ]
indInf (0 : 5): [ ]
val = -1


ris (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

159: somma_vv_d	<=>	ris <- v1 + v2
ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
ris (5 : 5): [ 0 0 0 0 0 ]


tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (4 x 5 : 4 x 5): [
	 0.5 0.5 0.5 0.5 0.5
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 2
tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]


ris (4 x 5 : 4 x 5): [
	 0.5 0.5 0.5 0.5 0.5
	 0.5 0.5 0.5 0.5 0.5
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_d

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (4 x 3 : 4 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 2


tmp_i1 (0 : 12): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (4 x 3 : 4 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 1


tmp_i2 (0 : 12): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 12): [ ]
tmp_i2 (0 : 12): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

92: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sout (5 : 5): [ 0 0 0 0 0 ]
h (5 : 5): [ 1 2 3 4 5 ]


tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
s = 1


ind (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


old1 (5 : 5): [ 5 5 5 5 5 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


old2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (5 : 5): [ 5 5 5 5 5 ]
s = -1


new1 (5 : 5): [ 4 4 4 4 4 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (5 : 5): [ 0 0 0 0 0 ]
s = 1


new2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


toll1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


toll2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (5 : 5): [ 5 5 5 5 5 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (5 : 5): [ 4 4 4 4 4 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (5 : 5): [ 5.000000070924564 5 5 5 5 ]
val = 0


S1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (5 : 5): [ 0 0 0 0 0 ]
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]


a (5 : 5): [ -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 ]


a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (5 : 5): [ 1 1 1 1 1 ]
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]


b (5 : 5): [ -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 ]


b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]


tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]


m (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
complemento = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxNA_d

115: assegna1_vs_indx_d	<=>	v[indx] <- val
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
ind (0 : 5): [ ]
val = 0


a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine assegna1_vs_indx_d

117: assegna1_vs_indx_d	<=>	v[indx] <- val
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
ind (0 : 5): [ ]
val = 0


b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
------------------------------ Fine assegna1_vs_indx_d

119: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]


tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]
------------------------------ Fine cbind2v_d

120: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]


m (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine max_righe_d

122: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
m (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine f_aux_d

124: diff_vv_d	<=>	ris <- v1 - v2
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
toll2 (5 : 5): [ 1 1 1 1 1 ]


tmp_d1 (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
------------------------------ Fine diff_vv_d

125: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
val = 0

ind1 (0 : 5): [ ]
------------------------------ Fine which_v_indxlt_d

127: diff_vv_d	<=>	ris <- v1 - v2
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
toll2 (5 : 5): [ 1 1 1 1 1 ]


tmp_d1 (5 : 5): [ 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 ]
------------------------------ Fine diff_vv_d

128: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (5 : 5): [ 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 ]
val = 0


ind2 (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxgt_d

130: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (0 : 5): [ ]
ind2 (5 : 5): [ 1 2 3 4 5 ]


tmp_i1 (0 : 5): [ ]
------------------------------ Fine interseca_i

132: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
tmp_i1 (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

134: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
ind (0 : 5): [ ]
val = 0


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
val = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
ind (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (5 : 5): [ 0 0 0 0 0 ]
S2 (5 : 5): [ 1 1 1 1 1 ]


ris (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
ris (5 : 5): [ 1 1 1 1 1 ]
div = 2.000


ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (910 interne); stringhe deallocate: 0 (600 interne)

95: which_v_indxne_d	<=>	ris <- which(v != val)
ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
val = -1.#INF


indok (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxne_d

97: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkOUT (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 3
indok (5 : 5): [ 1 2 3 4 5 ]
val = 1


checkOUT (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_riga_indx_i

104: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 5
incr = 1


tmp_i1 (5 : 12): [ 1 2 3 4 5 ]
------------------------------ Fine seq_i

105: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (5 : 12): [ 1 2 3 4 5 ]
indok (5 : 5): [ 1 2 3 4 5 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (5 : 12): [ 1 2 3 4 5 ]
st = 1
end = 5


indInf (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (5 : 5): [ 1 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (5 : 5): [ 1 2 3 4 5 ]
indx = 1


indInf (4 : 5): [ 2 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (4 : 5): [ 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (4 : 5): [ 2 3 4 5 ]
indx = 1


indInf (3 : 5): [ 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (3 : 5): [ 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 5): [ 3 4 5 ]
indx = 1


indInf (2 : 5): [ 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 4
indInf (2 : 5): [ 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 5): [ 4 5 ]
indx = 1


indInf (1 : 5): [ 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 5
indInf (1 : 5): [ 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 5): [ 5 ]
indx = 1


indInf (0 : 5): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 5): [ ]
------------------------------ Fine setdiff_i

107: copia_v_indx_d	<=>	ris <- v[indx]
ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
indok (5 : 5): [ 1 2 3 4 5 ]


tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine copia_v_indx_d

111: min_v_d	<=>	ris <- min(v)
tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]


min = 0.5
------------------------------ Fine min_v_d

112: assegna1_vs_indx_d	<=>	v[indx] <- val
ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
indInf (0 : 5): [ ]
val = -1


ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine assegna1_vs_indx_d

128: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 0 0 0 0 ]
h (5 : 5): [ 1 2 3 4 5 ]


tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
s = 2


ind (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 2 2 2 2 2 ]
s = 1


tmp_i1 (5 : 5): [ 3 3 3 3 3 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
tmp_i1 (5 : 5): [ 3 3 3 3 3 ]


T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


old1 (5 : 5): [ 5 5 5 5 5 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 2 2 2 2 2 ]
s = 1


tmp_i1 (5 : 5): [ 3 3 3 3 3 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 3 3 3 3 3 ]


old2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (5 : 5): [ 5 5 5 5 5 ]
s = -1


new1 (5 : 5): [ 4 4 4 4 4 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (5 : 5): [ 0 0 0 0 0 ]
s = 1


new2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


toll1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 2 2 2 2 2 ]
s = 1


tmp_i1 (5 : 5): [ 3 3 3 3 3 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 3 3 3 3 3 ]


toll2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (5 : 5): [ 5 5 5 5 5 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (5 : 5): [ 4 4 4 4 4 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (5 : 5): [ 5.000000032784541 5 5 5 5 ]
val = 0


S1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (5 : 5): [ 0 0 0 0 0 ]
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (5 : 5): [ 1 1 1 1 1 ]
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


tmpm_d (5 x 2 : 5 x 2): [
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
 ]


m (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

140: InitVett_d
S2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
val = 0


S2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
val = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 0 0 0 0 0 ]
ind (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (5 : 5): [ 0 0 0 0 0 ]
S2 (5 : 5): [ 0 0 0 0 0 ]


ris (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
ris (5 : 5): [ 0 0 0 0 0 ]
div = 2.000


ris (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (995 interne); stringhe deallocate: 0 (685 interne)

131: which_v_indxne_d	<=>	ris <- which(v != val)
ris (5 : 5): [ 0 0 0 0 0 ]
val = -1.#INF


indok (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxne_d

133: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkIN (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 3
indok (5 : 5): [ 1 2 3 4 5 ]
val = 1


checkIN (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_riga_indx_i

141: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 5
incr = 1


tmp_i1 (5 : 12): [ 1 2 3 4 5 ]
------------------------------ Fine seq_i

142: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (5 : 12): [ 1 2 3 4 5 ]
indok (5 : 5): [ 1 2 3 4 5 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (5 : 12): [ 1 2 3 4 5 ]
st = 1
end = 5


indInf (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (5 : 5): [ 1 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (5 : 5): [ 1 2 3 4 5 ]
indx = 1


indInf (4 : 5): [ 2 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (4 : 5): [ 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (4 : 5): [ 2 3 4 5 ]
indx = 1


indInf (3 : 5): [ 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (3 : 5): [ 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 5): [ 3 4 5 ]
indx = 1


indInf (2 : 5): [ 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 4
indInf (2 : 5): [ 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 5): [ 4 5 ]
indx = 1


indInf (1 : 5): [ 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 5
indInf (1 : 5): [ 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 5): [ 5 ]
indx = 1


indInf (0 : 5): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 5): [ ]
------------------------------ Fine setdiff_i

144: copia_v_indx_d	<=>	ris <- v[indx]
ris (5 : 5): [ 0 0 0 0 0 ]
indok (5 : 5): [ 1 2 3 4 5 ]


tmp_d1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine copia_v_indx_d

148: min_v_d	<=>	ris <- min(v)
tmp_d1 (5 : 5): [ 0 0 0 0 0 ]


min = 0
------------------------------ Fine min_v_d

149: assegna1_vs_indx_d	<=>	v[indx] <- val
ris (5 : 5): [ 0 0 0 0 0 ]
indInf (0 : 5): [ ]
val = -1


ris (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

159: somma_vv_d	<=>	ris <- v1 + v2
ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
ris (5 : 5): [ 0 0 0 0 0 ]


tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (4 x 5 : 4 x 5): [
	 0.5 0.5 0.5 0.5 0.5
	 0.5 0.5 0.5 0.5 0.5
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 3
tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]


ris (4 x 5 : 4 x 5): [
	 0.5 0.5 0.5 0.5 0.5
	 0.5 0.5 0.5 0.5 0.5
	 0.5 0.5 0.5 0.5 0.5
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_d

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (4 x 3 : 4 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 1


tmp_i1 (0 : 12): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (4 x 3 : 4 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 1


tmp_i2 (0 : 12): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 12): [ ]
tmp_i2 (0 : 12): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

92: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sout (5 : 5): [ 0 0 0 0 0 ]
h (5 : 5): [ 1 2 3 4 5 ]


tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
s = 1


ind (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


old1 (5 : 5): [ 5 5 5 5 5 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


old2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (5 : 5): [ 5 5 5 5 5 ]
s = -1


new1 (5 : 5): [ 4 4 4 4 4 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (5 : 5): [ 0 0 0 0 0 ]
s = 1


new2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


toll1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


toll2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (5 : 5): [ 5 5 5 5 5 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (5 : 5): [ 4 4 4 4 4 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (5 : 5): [ 5.00000007092526 5 5 5 5 ]
val = 0


S1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (5 : 5): [ 0 0 0 0 0 ]
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]


a (5 : 5): [ -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 ]


a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (5 : 5): [ 1 1 1 1 1 ]
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]


b (5 : 5): [ -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 ]


b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]


tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]


m (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
complemento = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxNA_d

115: assegna1_vs_indx_d	<=>	v[indx] <- val
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
ind (0 : 5): [ ]
val = 0


a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine assegna1_vs_indx_d

117: assegna1_vs_indx_d	<=>	v[indx] <- val
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
ind (0 : 5): [ ]
val = 0


b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
------------------------------ Fine assegna1_vs_indx_d

119: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]


tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]
------------------------------ Fine cbind2v_d

120: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]


m (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine max_righe_d

122: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
m (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine f_aux_d

124: diff_vv_d	<=>	ris <- v1 - v2
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
toll2 (5 : 5): [ 1 1 1 1 1 ]


tmp_d1 (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
------------------------------ Fine diff_vv_d

125: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
val = 0

ind1 (0 : 5): [ ]
------------------------------ Fine which_v_indxlt_d

127: diff_vv_d	<=>	ris <- v1 - v2
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
toll2 (5 : 5): [ 1 1 1 1 1 ]


tmp_d1 (5 : 5): [ 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 ]
------------------------------ Fine diff_vv_d

128: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (5 : 5): [ 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 ]
val = 0


ind2 (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxgt_d

130: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (0 : 5): [ ]
ind2 (5 : 5): [ 1 2 3 4 5 ]


tmp_i1 (0 : 5): [ ]
------------------------------ Fine interseca_i

132: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
tmp_i1 (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

134: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
ind (0 : 5): [ ]
val = 0


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
val = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
ind (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (5 : 5): [ 0 0 0 0 0 ]
S2 (5 : 5): [ 1 1 1 1 1 ]


ris (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
ris (5 : 5): [ 1 1 1 1 1 ]
div = 2.000


ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (1095 interne); stringhe deallocate: 0 (785 interne)

95: which_v_indxne_d	<=>	ris <- which(v != val)
ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
val = -1.#INF


indok (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxne_d

97: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkOUT (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 0 0 0 0 0
 ]
riga = 4
indok (5 : 5): [ 1 2 3 4 5 ]
val = 1


checkOUT (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
------------------------------ Fine aggiungi_riga_indx_i

104: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 5
incr = 1


tmp_i1 (5 : 12): [ 1 2 3 4 5 ]
------------------------------ Fine seq_i

105: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (5 : 12): [ 1 2 3 4 5 ]
indok (5 : 5): [ 1 2 3 4 5 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (5 : 12): [ 1 2 3 4 5 ]
st = 1
end = 5


indInf (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (5 : 5): [ 1 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (5 : 5): [ 1 2 3 4 5 ]
indx = 1


indInf (4 : 5): [ 2 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (4 : 5): [ 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (4 : 5): [ 2 3 4 5 ]
indx = 1


indInf (3 : 5): [ 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (3 : 5): [ 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 5): [ 3 4 5 ]
indx = 1


indInf (2 : 5): [ 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 4
indInf (2 : 5): [ 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 5): [ 4 5 ]
indx = 1


indInf (1 : 5): [ 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 5
indInf (1 : 5): [ 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 5): [ 5 ]
indx = 1


indInf (0 : 5): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 5): [ ]
------------------------------ Fine setdiff_i

107: copia_v_indx_d	<=>	ris <- v[indx]
ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
indok (5 : 5): [ 1 2 3 4 5 ]


tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine copia_v_indx_d

111: min_v_d	<=>	ris <- min(v)
tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]


min = 0.5
------------------------------ Fine min_v_d

112: assegna1_vs_indx_d	<=>	v[indx] <- val
ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
indInf (0 : 5): [ ]
val = -1


ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine assegna1_vs_indx_d

128: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 0 0 0 0 ]
h (5 : 5): [ 1 2 3 4 5 ]


tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
s = 1


ind (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


old1 (5 : 5): [ 5 5 5 5 5 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


old2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (5 : 5): [ 5 5 5 5 5 ]
s = -1


new1 (5 : 5): [ 4 4 4 4 4 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (5 : 5): [ 0 0 0 0 0 ]
s = 1


new2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


toll1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


toll2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (5 : 5): [ 5 5 5 5 5 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (5 : 5): [ 4 4 4 4 4 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (5 : 5): [ 5.000000070923065 5 5 5 5 ]
val = 0


S1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (5 : 5): [ 0 0 0 0 0 ]
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (5 : 5): [ 1 1 1 1 1 ]
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


tmpm_d (5 x 2 : 5 x 2): [
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
 ]


m (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

140: InitVett_d
S2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
val = 0


S2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
val = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 0 0 0 0 0 ]
ind (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (5 : 5): [ 0 0 0 0 0 ]
S2 (5 : 5): [ 0 0 0 0 0 ]


ris (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
ris (5 : 5): [ 0 0 0 0 0 ]
div = 2.000


ris (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (1180 interne); stringhe deallocate: 0 (870 interne)

131: which_v_indxne_d	<=>	ris <- which(v != val)
ris (5 : 5): [ 0 0 0 0 0 ]
val = -1.#INF


indok (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxne_d

133: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkIN (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 0 0 0 0 0
 ]
riga = 4
indok (5 : 5): [ 1 2 3 4 5 ]
val = 1


checkIN (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
------------------------------ Fine aggiungi_riga_indx_i

141: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 5
incr = 1


tmp_i1 (5 : 12): [ 1 2 3 4 5 ]
------------------------------ Fine seq_i

142: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (5 : 12): [ 1 2 3 4 5 ]
indok (5 : 5): [ 1 2 3 4 5 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (5 : 12): [ 1 2 3 4 5 ]
st = 1
end = 5


indInf (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (5 : 5): [ 1 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (5 : 5): [ 1 2 3 4 5 ]
indx = 1


indInf (4 : 5): [ 2 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (4 : 5): [ 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (4 : 5): [ 2 3 4 5 ]
indx = 1


indInf (3 : 5): [ 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (3 : 5): [ 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 5): [ 3 4 5 ]
indx = 1


indInf (2 : 5): [ 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 4
indInf (2 : 5): [ 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 5): [ 4 5 ]
indx = 1


indInf (1 : 5): [ 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 5
indInf (1 : 5): [ 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 5): [ 5 ]
indx = 1


indInf (0 : 5): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 5): [ ]
------------------------------ Fine setdiff_i

144: copia_v_indx_d	<=>	ris <- v[indx]
ris (5 : 5): [ 0 0 0 0 0 ]
indok (5 : 5): [ 1 2 3 4 5 ]


tmp_d1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine copia_v_indx_d

148: min_v_d	<=>	ris <- min(v)
tmp_d1 (5 : 5): [ 0 0 0 0 0 ]


min = 0
------------------------------ Fine min_v_d

149: assegna1_vs_indx_d	<=>	v[indx] <- val
ris (5 : 5): [ 0 0 0 0 0 ]
indInf (0 : 5): [ ]
val = -1


ris (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

159: somma_vv_d	<=>	ris <- v1 + v2
ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
ris (5 : 5): [ 0 0 0 0 0 ]


tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (4 x 5 : 4 x 5): [
	 0.5 0.5 0.5 0.5 0.5
	 0.5 0.5 0.5 0.5 0.5
	 0.5 0.5 0.5 0.5 0.5
	 0 0 0 0 0
 ]
riga = 4
tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]


ris (4 x 5 : 4 x 5): [
	 0.5 0.5 0.5 0.5 0.5
	 0.5 0.5 0.5 0.5 0.5
	 0.5 0.5 0.5 0.5 0.5
	 0.5 0.5 0.5 0.5 0.5
 ]
------------------------------ Fine aggiungi_mv_riga_d

168: somma_m_d	<=>	ris <- sum(m)
ris (4 x 5 : 4 x 5): [
	 0.5 0.5 0.5 0.5 0.5
	 0.5 0.5 0.5 0.5 0.5
	 0.5 0.5 0.5 0.5 0.5
	 0.5 0.5 0.5 0.5 0.5
 ]


ris: 10
------------------------------ Fine somma_m_d

173: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
checkIN (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]


aus (5 : 5): [ 4 4 4 4 4 ]
------------------------------ Fine somma_colonne_i

175: which_v_indxne_i	<=>	ris <- which(v != val)
aus (5 : 5): [ 4 4 4 4 4 ]
val = 0


tmp_i1 (5 : 12): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxne_i

186: somma_righe_i	<=>	ris <- apply(m, 1, sum)
checkIN (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]


rs (4 : 4): [ 5 5 5 5 ]
------------------------------ Fine somma_righe_i

188: ordine_i	<=>	ris <- order(v, decreasing=decr)
rs (4 : 4): [ 5 5 5 5 ]
decr = 0


ord_ind (4 : 4): [ 1 2 3 4 ]
------------------------------ Fine ordine_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
r = 1
val = 0


I_add (5 : 20): [ 1 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
I (0 : 0): [ ]
I_add (5 : 20): [ 1 2 3 4 5 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (5 : 5): [ 1 2 3 4 5 ]


ris (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine unione1_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
r = 2
val = 0


I_add (5 : 20): [ 1 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
ris (5 : 5): [ 1 2 3 4 5 ]
I_add (5 : 20): [ 1 2 3 4 5 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (10 : 10): [ 1 2 3 4 5 1 2 3 4 5 ]


ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine unione1_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
r = 3
val = 0


I_add (5 : 20): [ 1 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
ris (5 : 10): [ 1 2 3 4 5 ]
I_add (5 : 20): [ 1 2 3 4 5 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (10 : 10): [ 1 2 3 4 5 1 2 3 4 5 ]


ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine unione1_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
r = 4
val = 0


I_add (5 : 20): [ 1 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
ris (5 : 10): [ 1 2 3 4 5 ]
I_add (5 : 20): [ 1 2 3 4 5 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (10 : 10): [ 1 2 3 4 5 1 2 3 4 5 ]


ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine unione1_i

216: assegna1_mindxlt_i	<=>	m1[which(m2<val1)] <- val2
checkOUT (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
checkOUT (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
val1 = 0
val2 = 0


checkOUT (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
------------------------------ Fine assegna1_mindxlt_i

218: assegna1_m_indxgt_i	<=>	m1[which(m2>val1)] <- val2
checkOUT (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
checkOUT (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
val1 = 0
val2 = 1


checkOUT (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
------------------------------ Fine assegna1_m_indxgt_i

220: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
checkOUT (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]


aus (5 : 5): [ 4 4 4 4 4 ]
------------------------------ Fine somma_colonne_i

222: which_v_indxne_i	<=>	ris <- which(v != val)
aus (5 : 5): [ 4 4 4 4 4 ]
val = 0


tmp_i1 (5 : 12): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxne_i

232: somma_righe_i	<=>	ris <- apply(m, 1, sum)
checkOUT (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]


rs (4 : 4): [ 5 5 5 5 ]
------------------------------ Fine somma_righe_i

234: ordine_i	<=>	ris <- order(v, decreasing=decr)
rs (4 : 4): [ 5 5 5 5 ]
decr = 0


ord_ind (4 : 4): [ 1 2 3 4 ]
------------------------------ Fine ordine_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
r = 1
val = 0


I_add (5 : 20): [ 1 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (0 : 10): [ ]
I_add (5 : 20): [ 1 2 3 4 5 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (5 : 5): [ 1 2 3 4 5 ]


ris (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine unione1_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
r = 2
val = 0


I_add (5 : 20): [ 1 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (5 : 5): [ 1 2 3 4 5 ]
I_add (5 : 20): [ 1 2 3 4 5 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (10 : 10): [ 1 2 3 4 5 1 2 3 4 5 ]


ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine unione1_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
r = 3
val = 0


I_add (5 : 20): [ 1 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (5 : 10): [ 1 2 3 4 5 ]
I_add (5 : 20): [ 1 2 3 4 5 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (10 : 10): [ 1 2 3 4 5 1 2 3 4 5 ]


ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine unione1_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
r = 4
val = 0


I_add (5 : 20): [ 1 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (5 : 10): [ 1 2 3 4 5 ]
I_add (5 : 20): [ 1 2 3 4 5 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (10 : 10): [ 1 2 3 4 5 1 2 3 4 5 ]


ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine unione1_i


Stringhe allocate: 5 (1285 interne); stringhe deallocate: 0 (1050 interne)


Stringhe allocate: 5 (1290 interne); stringhe deallocate: 0 (1065 interne)


*** module2 ***
44: seq_i	<=>	ris <- seq(da, a, incr)
da = 2
a = 5
incr = 1


tmp1_i (4 : 4): [ 2 3 4 5 ]
------------------------------ Fine seq_i


*** sampleB ***

***sample***
tmp1_i (4 : 4): [ 2 3 4 5 ]
k = 1, replace = 0


ris (1 : 1): [ 3 ]
*****************************************


Stringhe allocate: 5 (1300 interne); stringhe deallocate: 0 (1065 interne)


Stringhe allocate: 5 (1300 interne); stringhe deallocate: 0 (1065 interne)


*** mod2 ***
17: InitMatr_i
ris (3 x 3 : 3 x 3): [
	 79852272 1071644672 0
	 1071644672 0 1071644672
	 0 1071644672 0
 ]
val = 0


ris (3 x 3 : 3 x 3): [
	 0 0 0
	 0 0 0
	 0 0 0
 ]
------------------------------ Fine InitMatr_i


*** triangola ***
27: diag_i	<=>	ris <- diag(m)
ris (3 x 3 : 3 x 3): [
	 0 0 0
	 1 0 0
	 1 0 0
 ]


Dmem (3 : 3): [ 0 0 0 ]
------------------------------ Fine diag_i

29: assegna1_s_diag_i	<=>	diag_i(m) <- s
ris (3 x 3 : 3 x 3): [
	 0 0 0
	 1 0 0
	 1 0 0
 ]
val = 0


ris (3 x 3 : 3 x 3): [
	 0 0 0
	 1 0 0
	 1 0 0
 ]
------------------------------ Fine assegna1_s_diag_i

33: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
ris (3 x 3 : 3 x 3): [
	 0 0 0
	 1 0 0
	 1 0 0
 ]
r = 1
val = 0


tmp1_i (0 : 9): [ ]
------------------------------ Fine which_m_rowindxne_i

34: which_m_colindxne_i	<=>	ris <- which(m[, c] != val)
ris (3 x 3 : 3 x 3): [
	 0 0 0
	 1 0 0
	 1 0 0
 ]
c = 1, val = 0


tmp2_i (2 : 9): [ 2 3 ]
------------------------------ Fine which_m_colindxne_i

35: unione_i	<=>	ris <- union(v1, v2)
tmp1_i (0 : 9): [ ]
tmp2_i (2 : 9): [ 2 3 ]
4876: elimina_doppi_i	<=>	ris <- union(v, v)
ind (2 : 2): [ 2 3 ]


ris (2 : 2): [ 2 3 ]
------------------------------ Fine elimina_doppi_i



ris (2 : 2): [ 2 3 ]
------------------------------ Fine unione_i

33: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
ris (3 x 3 : 3 x 3): [
	 0 0 0
	 1 0 0
	 1 0 0
 ]
r = 2
val = 0


tmp1_i (1 : 9): [ 1 ]
------------------------------ Fine which_m_rowindxne_i

34: which_m_colindxne_i	<=>	ris <- which(m[, c] != val)
ris (3 x 3 : 3 x 3): [
	 0 0 0
	 1 0 0
	 1 0 0
 ]
c = 2, val = 0


tmp2_i (0 : 9): [ ]
------------------------------ Fine which_m_colindxne_i

35: unione_i	<=>	ris <- union(v1, v2)
tmp1_i (1 : 9): [ 1 ]
tmp2_i (0 : 9): [ ]
4876: elimina_doppi_i	<=>	ris <- union(v, v)
ind (1 : 1): [ 1 ]


ris (1 : 2): [ 1 ]
------------------------------ Fine elimina_doppi_i



ris (1 : 2): [ 1 ]
------------------------------ Fine unione_i

33: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
ris (3 x 3 : 3 x 3): [
	 0 0 0
	 1 0 0
	 1 0 0
 ]
r = 3
val = 0


tmp1_i (1 : 9): [ 1 ]
------------------------------ Fine which_m_rowindxne_i

34: which_m_colindxne_i	<=>	ris <- which(m[, c] != val)
ris (3 x 3 : 3 x 3): [
	 0 0 0
	 1 0 0
	 1 0 0
 ]
c = 3, val = 0


tmp2_i (0 : 9): [ ]
------------------------------ Fine which_m_colindxne_i

35: unione_i	<=>	ris <- union(v1, v2)
tmp1_i (1 : 9): [ 1 ]
tmp2_i (0 : 9): [ ]
4876: elimina_doppi_i	<=>	ris <- union(v, v)
ind (1 : 1): [ 1 ]


ris (1 : 2): [ 1 ]
------------------------------ Fine elimina_doppi_i



ris (1 : 2): [ 1 ]
------------------------------ Fine unione_i

152: assegna1_v_diag_i	<=>	diag(m) <- v
ris (3 x 3 : 3 x 3): [
	 0 0 0
	 1 0 0
	 1 0 0
 ]
Dmem (3 : 3): [ 0 0 0 ]


ris (3 x 3 : 3 x 3): [
	 0 0 0
	 1 0 0
	 1 0 0
 ]
------------------------------ Fine assegna1_v_diag_i


Stringhe allocate: 5 (1345 interne); stringhe deallocate: 0 (1105 interne)


Stringhe allocate: 5 (1345 interne); stringhe deallocate: 0 (1105 interne)


*** probmod ***
46: InitMatr_i
checkOUT (3 x 5 : 3 x 5): [
	 38206704 34 16 0 0
	 79853088 0 9 0 34
	 0 140 2 35 1
 ]
val = 0


checkOUT (3 x 5 : 3 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine InitMatr_i

48: InitMatr_i
checkIN (3 x 5 : 3 x 5): [
	 38206448 35 18 0 0
	 38203952 0 1 0 35
	 0 35 0 4975 1
 ]
val = 0


checkIN (3 x 5 : 3 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine InitMatr_i

50: InitMatr_d
ris (3 x 5 : 3 x 5): [
	 0 0 4.940656458412465e-324 -4.476581186467084e+168 1.773988481251908e-311
	 1.89127801295242e-304 2.186008891502079e+229 4.940656458412465e-324 4.566283898407781e-298 -1.#QNAN
	 5.075813931988931e-311 1.358077306217774e-312 9.030048846596381e-286 2.41907520170041e-312 0
 ]
val = 0


ris (3 x 5 : 3 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine InitMatr_d

52: somma_righe_i	<=>	ris <- apply(m, 1, sum)
ris (3 x 3 : 3 x 3): [
	 0 0 0
	 1 0 0
	 1 0 0
 ]


M_in (3 : 3): [ 0 1 1 ]
------------------------------ Fine somma_righe_i

54: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
ris (3 x 3 : 3 x 3): [
	 0 0 0
	 1 0 0
	 1 0 0
 ]


M_out (3 : 3): [ 2 0 0 ]
------------------------------ Fine somma_colonne_i

57: InitMatr_i
memory (3 x 3 : 3 x 3): [
	 79856064 4 1954
	 2 5 2146959360
	 3 2146959360 1954
 ]
val = -2147483648


memory (3 x 3 : 3 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
------------------------------ Fine InitMatr_i

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (3 x 3 : 3 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 0


tmp_i1 (0 : 9): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (3 x 3 : 3 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 2


tmp_i2 (0 : 9): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 9): [ ]
tmp_i2 (0 : 9): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

92: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sout (5 : 5): [ 0 0 0 0 0 ]
h (5 : 5): [ 1 2 3 4 5 ]


tmp_i1 (5 : 9): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 9): [ 0 0 0 0 0 ]
s = 2


ind (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 9): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 2 2 2 2 2 ]
s = 1


tmp_i1 (5 : 5): [ 3 3 3 3 3 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (5 : 5): [ 3 3 3 3 3 ]


T2 (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 9): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


old1 (5 : 5): [ 5 5 5 5 5 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 2 2 2 2 2 ]
s = 1


tmp_i1 (5 : 5): [ 3 3 3 3 3 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 3 3 3 3 3 ]


old2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (5 : 5): [ 5 5 5 5 5 ]
s = -1


new1 (5 : 5): [ 4 4 4 4 4 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (5 : 5): [ 0 0 0 0 0 ]
s = 1


new2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 9): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


toll1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 2 2 2 2 2 ]
s = 1


tmp_i1 (5 : 5): [ 3 3 3 3 3 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 3 3 3 3 3 ]


toll2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (5 : 5): [ 5 5 5 5 5 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (5 : 5): [ 4 4 4 4 4 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (5 : 5): [ 1.614835739135742 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 ]
val = 0


S1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (5 : 5): [ 0 0 0 0 0 ]
T2 (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]


a (5 : 5): [ -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 ]


a (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (5 : 5): [ 1 1 1 1 1 ]
T2 (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]


b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]


b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]


tmpm_d (5 x 2 : 5 x 2): [
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
 ]


m (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
complemento = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxNA_d

115: assegna1_vs_indx_d	<=>	v[indx] <- val
a (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
ind (0 : 5): [ ]
val = 0


a (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
------------------------------ Fine assegna1_vs_indx_d

117: assegna1_vs_indx_d	<=>	v[indx] <- val
b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]
ind (0 : 5): [ ]
val = 0


b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine assegna1_vs_indx_d

119: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]


tmpm_d (5 x 2 : 5 x 2): [
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
 ]
------------------------------ Fine cbind2v_d

120: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
 ]


m (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
------------------------------ Fine max_righe_d

122: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]
m (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
T2 (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine f_aux_d

124: diff_vv_d	<=>	ris <- v1 - v2
a (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
toll2 (5 : 5): [ 1 1 1 1 1 ]


tmp_d1 (5 : 5): [ -0.2132755425131789 -0.2132755425131789 -0.2132755425131789 -0.2132755425131789 -0.2132755425131789 ]
------------------------------ Fine diff_vv_d

125: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (5 : 5): [ -0.2132755425131789 -0.2132755425131789 -0.2132755425131789 -0.2132755425131789 -0.2132755425131789 ]
val = 0

ind1 (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxlt_d

127: diff_vv_d	<=>	ris <- v1 - v2
b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]
toll2 (5 : 5): [ 1 1 1 1 1 ]


tmp_d1 (5 : 5): [ -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 ]
------------------------------ Fine diff_vv_d

128: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (5 : 5): [ -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 ]
val = 0


ind2 (0 : 5): [ ]
------------------------------ Fine which_v_indxgt_d

130: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (5 : 5): [ 1 2 3 4 5 ]
ind2 (0 : 5): [ ]
2459: esiste_v_i	<=>	elem %IN% v
elem = 1
ind2 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 1
tmp_i1 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 2
ind2 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 2
tmp_i1 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 3
ind2 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 3
tmp_i1 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 4
ind2 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 4
tmp_i1 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 5
ind2 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 5
tmp_i1 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i



tmp_i1 (0 : 5): [ ]
------------------------------ Fine interseca_i

132: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
tmp_i1 (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

134: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
ind (0 : 5): [ ]
val = 0


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
val = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
ind (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (5 : 5): [ 0 0 0 0 0 ]
S2 (5 : 5): [ 1 1 1 1 1 ]


ris (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
ris (5 : 5): [ 1 1 1 1 1 ]
div = 2.000


ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (1505 interne); stringhe deallocate: 0 (1205 interne)

95: which_v_indxne_d	<=>	ris <- which(v != val)
ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
val = -1.#INF


indok (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxne_d

97: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkOUT (3 x 5 : 3 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 1
indok (5 : 5): [ 1 2 3 4 5 ]
val = 1


checkOUT (3 x 5 : 3 x 5): [
	 1 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_riga_indx_i

104: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 5
incr = 1


tmp_i1 (5 : 9): [ 1 2 3 4 5 ]
------------------------------ Fine seq_i

105: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (5 : 9): [ 1 2 3 4 5 ]
indok (5 : 5): [ 1 2 3 4 5 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (5 : 9): [ 1 2 3 4 5 ]
st = 1
end = 5


indInf (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (5 : 5): [ 1 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (5 : 5): [ 1 2 3 4 5 ]
indx = 1


indInf (4 : 5): [ 2 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (4 : 5): [ 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (4 : 5): [ 2 3 4 5 ]
indx = 1


indInf (3 : 5): [ 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (3 : 5): [ 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 5): [ 3 4 5 ]
indx = 1


indInf (2 : 5): [ 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 4
indInf (2 : 5): [ 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 5): [ 4 5 ]
indx = 1


indInf (1 : 5): [ 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 5
indInf (1 : 5): [ 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 5): [ 5 ]
indx = 1


indInf (0 : 5): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 5): [ ]
------------------------------ Fine setdiff_i

107: copia_v_indx_d	<=>	ris <- v[indx]
ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
indok (5 : 5): [ 1 2 3 4 5 ]


tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine copia_v_indx_d

111: min_v_d	<=>	ris <- min(v)
tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]


min = 0.5
------------------------------ Fine min_v_d

112: assegna1_vs_indx_d	<=>	v[indx] <- val
ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
indInf (0 : 5): [ ]
val = -1


ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine assegna1_vs_indx_d

155: InitVett_d
S_in (5 : 5): [ 3.94549599597346e-316 0 0 0 0 ]
val = 0


S_in (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

156: aggiungi_ms_riga_i	<=>	m[riga,] <- val # riga <= dim(m)[0] + 1
checkIN (3 x 5 : 3 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 1, val = 1


checkIN (3 x 5 : 3 x 5): [
	 1 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_ms_riga_i

159: somma_vv_d	<=>	ris <- v1 + v2
ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
S_in (5 : 5): [ 0 0 0 0 0 ]


tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (3 x 5 : 3 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 1
tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]


ris (3 x 5 : 3 x 5): [
	 0.5 0.5 0.5 0.5 0.5
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_d

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (3 x 3 : 3 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 1


tmp_i1 (0 : 9): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (3 x 3 : 3 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 0


tmp_i2 (0 : 9): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 9): [ ]
tmp_i2 (0 : 9): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

119: InitVett_d
ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
val = 0


ris (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

122: InitVett_i
tmp_i1 (5 : 9): [ 1 2 3 4 5 ]
val = 1


tmp_i1 (5 : 9): [ 1 1 1 1 1 ]
------------------------------ Fine InitVett_i

123: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
checkOUT (3 x 5 : 3 x 5): [
	 1 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 2
tmp_i1 (5 : 9): [ 1 1 1 1 1 ]


checkOUT (3 x 5 : 3 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_i

128: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 0 0 0 0 ]
h (5 : 5): [ 1 2 3 4 5 ]


tmp_i1 (5 : 9): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 9): [ 0 0 0 0 0 ]
s = 1


ind (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 9): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 9): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


old1 (5 : 5): [ 5 5 5 5 5 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


old2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (5 : 5): [ 5 5 5 5 5 ]
s = -1


new1 (5 : 5): [ 4 4 4 4 4 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (5 : 5): [ 0 0 0 0 0 ]
s = 1


new2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 9): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


toll1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


toll2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (5 : 5): [ 5 5 5 5 5 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (5 : 5): [ 4 4 4 4 4 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
val = 0


S1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (5 : 5): [ 0 0 0 0 0 ]
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (5 : 5): [ 1 1 1 1 1 ]
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


tmpm_d (5 x 2 : 5 x 2): [
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
 ]


m (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

140: InitVett_d
S2 (5 : 5): [ 5.842414621812633e-308 0 0 0 0 ]
val = 0


S2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
val = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 0 0 0 0 0 ]
ind (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (5 : 5): [ 0 0 0 0 0 ]
S2 (5 : 5): [ 0 0 0 0 0 ]


S_in (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
S_in (5 : 5): [ 0 0 0 0 0 ]
div = 2.000


S_in (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (1610 interne); stringhe deallocate: 0 (1290 interne)

131: which_v_indxne_d	<=>	ris <- which(v != val)
S_in (5 : 5): [ 0 0 0 0 0 ]
val = -1.#INF


indok (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxne_d

133: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkIN (3 x 5 : 3 x 5): [
	 1 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 2
indok (5 : 5): [ 1 2 3 4 5 ]
val = 1


checkIN (3 x 5 : 3 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_riga_indx_i

141: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 5
incr = 1


tmp_i1 (5 : 9): [ 1 2 3 4 5 ]
------------------------------ Fine seq_i

142: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (5 : 9): [ 1 2 3 4 5 ]
indok (5 : 5): [ 1 2 3 4 5 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (5 : 9): [ 1 2 3 4 5 ]
st = 1
end = 5


indInf (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (5 : 5): [ 1 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (5 : 5): [ 1 2 3 4 5 ]
indx = 1


indInf (4 : 5): [ 2 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (4 : 5): [ 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (4 : 5): [ 2 3 4 5 ]
indx = 1


indInf (3 : 5): [ 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (3 : 5): [ 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 5): [ 3 4 5 ]
indx = 1


indInf (2 : 5): [ 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 4
indInf (2 : 5): [ 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 5): [ 4 5 ]
indx = 1


indInf (1 : 5): [ 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 5
indInf (1 : 5): [ 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 5): [ 5 ]
indx = 1


indInf (0 : 5): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 5): [ ]
------------------------------ Fine setdiff_i

144: copia_v_indx_d	<=>	ris <- v[indx]
S_in (5 : 5): [ 0 0 0 0 0 ]
indok (5 : 5): [ 1 2 3 4 5 ]


tmp_d1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine copia_v_indx_d

148: min_v_d	<=>	ris <- min(v)
tmp_d1 (5 : 5): [ 0 0 0 0 0 ]


min = 0
------------------------------ Fine min_v_d

149: assegna1_vs_indx_d	<=>	v[indx] <- val
S_in (5 : 5): [ 0 0 0 0 0 ]
indInf (0 : 5): [ ]
val = -1


S_in (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

159: somma_vv_d	<=>	ris <- v1 + v2
ris (5 : 5): [ 0 0 0 0 0 ]
S_in (5 : 5): [ 0 0 0 0 0 ]


tmp_d1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (3 x 5 : 3 x 5): [
	 0.5 0.5 0.5 0.5 0.5
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 2
tmp_d1 (5 : 5): [ 0 0 0 0 0 ]


ris (3 x 5 : 3 x 5): [
	 0.5 0.5 0.5 0.5 0.5
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_d

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (3 x 3 : 3 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 1


tmp_i1 (0 : 9): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (3 x 3 : 3 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 0


tmp_i2 (0 : 9): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 9): [ ]
tmp_i2 (0 : 9): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

119: InitVett_d
ris (5 : 5): [ 0 0 0 0 0 ]
val = 0


ris (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

122: InitVett_i
tmp_i1 (5 : 9): [ 1 2 3 4 5 ]
val = 1


tmp_i1 (5 : 9): [ 1 1 1 1 1 ]
------------------------------ Fine InitVett_i

123: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
checkOUT (3 x 5 : 3 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 0 0 0 0 0
 ]
riga = 3
tmp_i1 (5 : 9): [ 1 1 1 1 1 ]


checkOUT (3 x 5 : 3 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
------------------------------ Fine aggiungi_mv_riga_i

128: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 0 0 0 0 ]
h (5 : 5): [ 1 2 3 4 5 ]


tmp_i1 (5 : 9): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 9): [ 0 0 0 0 0 ]
s = 1


ind (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 9): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 9): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


old1 (5 : 5): [ 5 5 5 5 5 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


old2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (5 : 5): [ 5 5 5 5 5 ]
s = -1


new1 (5 : 5): [ 4 4 4 4 4 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (5 : 5): [ 0 0 0 0 0 ]
s = 1


new2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 9): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


toll1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


toll2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (5 : 5): [ 5 5 5 5 5 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (5 : 5): [ 4 4 4 4 4 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (5 : 5): [ 5.000000070924806 5 5 5 5 ]
val = 0


S1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (5 : 5): [ 0 0 0 0 0 ]
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (5 : 5): [ 1 1 1 1 1 ]
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


tmpm_d (5 x 2 : 5 x 2): [
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
 ]


m (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

140: InitVett_d
S2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
val = 0


S2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
val = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 0 0 0 0 0 ]
ind (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (5 : 5): [ 0 0 0 0 0 ]
S2 (5 : 5): [ 0 0 0 0 0 ]


S_in (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
S_in (5 : 5): [ 0 0 0 0 0 ]
div = 2.000


S_in (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (1695 interne); stringhe deallocate: 0 (1375 interne)

131: which_v_indxne_d	<=>	ris <- which(v != val)
S_in (5 : 5): [ 0 0 0 0 0 ]
val = -1.#INF


indok (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxne_d

133: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkIN (3 x 5 : 3 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 0 0 0 0 0
 ]
riga = 3
indok (5 : 5): [ 1 2 3 4 5 ]
val = 1


checkIN (3 x 5 : 3 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
------------------------------ Fine aggiungi_riga_indx_i

141: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 5
incr = 1


tmp_i1 (5 : 9): [ 1 2 3 4 5 ]
------------------------------ Fine seq_i

142: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (5 : 9): [ 1 2 3 4 5 ]
indok (5 : 5): [ 1 2 3 4 5 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (5 : 9): [ 1 2 3 4 5 ]
st = 1
end = 5


indInf (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (5 : 5): [ 1 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (5 : 5): [ 1 2 3 4 5 ]
indx = 1


indInf (4 : 5): [ 2 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (4 : 5): [ 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (4 : 5): [ 2 3 4 5 ]
indx = 1


indInf (3 : 5): [ 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (3 : 5): [ 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 5): [ 3 4 5 ]
indx = 1


indInf (2 : 5): [ 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 4
indInf (2 : 5): [ 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 5): [ 4 5 ]
indx = 1


indInf (1 : 5): [ 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 5
indInf (1 : 5): [ 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 5): [ 5 ]
indx = 1


indInf (0 : 5): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 5): [ ]
------------------------------ Fine setdiff_i

144: copia_v_indx_d	<=>	ris <- v[indx]
S_in (5 : 5): [ 0 0 0 0 0 ]
indok (5 : 5): [ 1 2 3 4 5 ]


tmp_d1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine copia_v_indx_d

148: min_v_d	<=>	ris <- min(v)
tmp_d1 (5 : 5): [ 0 0 0 0 0 ]


min = 0
------------------------------ Fine min_v_d

149: assegna1_vs_indx_d	<=>	v[indx] <- val
S_in (5 : 5): [ 0 0 0 0 0 ]
indInf (0 : 5): [ ]
val = -1


S_in (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

159: somma_vv_d	<=>	ris <- v1 + v2
ris (5 : 5): [ 0 0 0 0 0 ]
S_in (5 : 5): [ 0 0 0 0 0 ]


tmp_d1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (3 x 5 : 3 x 5): [
	 0.5 0.5 0.5 0.5 0.5
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 3
tmp_d1 (5 : 5): [ 0 0 0 0 0 ]


ris (3 x 5 : 3 x 5): [
	 0.5 0.5 0.5 0.5 0.5
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_d

168: somma_m_d	<=>	ris <- sum(m)
ris (3 x 5 : 3 x 5): [
	 0.5 0.5 0.5 0.5 0.5
	 0 0 0 0 0
	 0 0 0 0 0
 ]


ris: 2.5
------------------------------ Fine somma_m_d

173: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
checkIN (3 x 5 : 3 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]


aus (5 : 5): [ 3 3 3 3 3 ]
------------------------------ Fine somma_colonne_i

175: which_v_indxne_i	<=>	ris <- which(v != val)
aus (5 : 5): [ 3 3 3 3 3 ]
val = 0


tmp_i1 (5 : 9): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxne_i

186: somma_righe_i	<=>	ris <- apply(m, 1, sum)
checkIN (3 x 5 : 3 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]


rs (3 : 3): [ 5 5 5 ]
------------------------------ Fine somma_righe_i

188: ordine_i	<=>	ris <- order(v, decreasing=decr)
rs (3 : 3): [ 5 5 5 ]
decr = 0


ord_ind (3 : 3): [ 1 2 3 ]
------------------------------ Fine ordine_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (3 x 5 : 3 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
r = 1
val = 0


I_add (5 : 15): [ 1 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
I (0 : 0): [ ]
I_add (5 : 15): [ 1 2 3 4 5 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (5 : 5): [ 1 2 3 4 5 ]


ris (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine unione1_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (3 x 5 : 3 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
r = 2
val = 0


I_add (5 : 15): [ 1 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
ris (5 : 5): [ 1 2 3 4 5 ]
I_add (5 : 15): [ 1 2 3 4 5 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (10 : 10): [ 1 2 3 4 5 1 2 3 4 5 ]


ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine unione1_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (3 x 5 : 3 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
r = 3
val = 0


I_add (5 : 15): [ 1 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
ris (5 : 10): [ 1 2 3 4 5 ]
I_add (5 : 15): [ 1 2 3 4 5 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (10 : 10): [ 1 2 3 4 5 1 2 3 4 5 ]


ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine unione1_i

216: assegna1_mindxlt_i	<=>	m1[which(m2<val1)] <- val2
checkOUT (3 x 5 : 3 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
checkOUT (3 x 5 : 3 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
val1 = 0
val2 = 0


checkOUT (3 x 5 : 3 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
------------------------------ Fine assegna1_mindxlt_i

218: assegna1_m_indxgt_i	<=>	m1[which(m2>val1)] <- val2
checkOUT (3 x 5 : 3 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
checkOUT (3 x 5 : 3 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
val1 = 0
val2 = 1


checkOUT (3 x 5 : 3 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
------------------------------ Fine assegna1_m_indxgt_i

220: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
checkOUT (3 x 5 : 3 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]


aus (5 : 5): [ 3 3 3 3 3 ]
------------------------------ Fine somma_colonne_i

222: which_v_indxne_i	<=>	ris <- which(v != val)
aus (5 : 5): [ 3 3 3 3 3 ]
val = 0


tmp_i1 (5 : 9): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxne_i

232: somma_righe_i	<=>	ris <- apply(m, 1, sum)
checkOUT (3 x 5 : 3 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]


rs (3 : 3): [ 5 5 5 ]
------------------------------ Fine somma_righe_i

234: ordine_i	<=>	ris <- order(v, decreasing=decr)
rs (3 : 3): [ 5 5 5 ]
decr = 0


ord_ind (3 : 3): [ 1 2 3 ]
------------------------------ Fine ordine_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (3 x 5 : 3 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
r = 1
val = 0


I_add (5 : 15): [ 1 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (0 : 10): [ ]
I_add (5 : 15): [ 1 2 3 4 5 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (5 : 5): [ 1 2 3 4 5 ]


ris (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine unione1_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (3 x 5 : 3 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
r = 2
val = 0


I_add (5 : 15): [ 1 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (5 : 5): [ 1 2 3 4 5 ]
I_add (5 : 15): [ 1 2 3 4 5 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (10 : 10): [ 1 2 3 4 5 1 2 3 4 5 ]


ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine unione1_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (3 x 5 : 3 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
r = 3
val = 0


I_add (5 : 15): [ 1 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (5 : 10): [ 1 2 3 4 5 ]
I_add (5 : 15): [ 1 2 3 4 5 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (10 : 10): [ 1 2 3 4 5 1 2 3 4 5 ]


ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine unione1_i


Stringhe allocate: 5 (1780 interne); stringhe deallocate: 0 (1535 interne)


Stringhe allocate: 5 (1785 interne); stringhe deallocate: 0 (1545 interne)


*** module3 ***
51: seq_i	<=>	ris <- seq(da, a, incr)
da = 2
a = 5
incr = 1


tmp1_i (4 : 4): [ 2 3 4 5 ]
------------------------------ Fine seq_i


*** sampleB ***

***sample***
tmp1_i (4 : 4): [ 2 3 4 5 ]
k = 1, replace = 0


ris (1 : 1): [ 5 ]
*****************************************


Stringhe allocate: 5 (1795 interne); stringhe deallocate: 0 (1545 interne)


Stringhe allocate: 5 (1795 interne); stringhe deallocate: 0 (1545 interne)

54: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 4
incr = 1


tmp1_i (4 : 4): [ 1 2 3 4 ]
------------------------------ Fine seq_i


*** sampleB ***

***sample***
tmp1_i (4 : 4): [ 1 2 3 4 ]
k = 1, replace = 0


ris (1 : 1): [ 2 ]
*****************************************


Stringhe allocate: 5 (1800 interne); stringhe deallocate: 0 (1545 interne)


Stringhe allocate: 5 (1800 interne); stringhe deallocate: 0 (1545 interne)


*** mod3 ***
33: InitMatr_i
ris (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
val = 0


ris (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine InitMatr_i

34: copia_v_d	<=>	ris[st:end] <- v[st:end]
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
st = 1
end = 7


STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
------------------------------ Fine copia_v_d

35: copia_v_d	<=>	ris[st:end] <- v[st:end]
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
st = 1
end = 7


STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
------------------------------ Fine copia_v_d

39: segmento_v_d	<=>	ris <- v[st:end]
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
start = 2
end = 4


tmp1_d (3 : 3): [ 3.614836360604185 0.7867244574868211 0.3224199317354524 ]
------------------------------ Fine segmento_v_d

40: somma_v_d	<=>	ris <- sum(v, na.rm=canc_NA)
tmp1_d (3 : 3): [ 3.614836360604185 0.7867244574868211 0.3224199317354524 ]
canc_NA = 1



ris: 4.723980749826459
------------------------------ Fine somma_v_d

43: segmento_v_d	<=>	ris <- v[st:end]
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
start = 2
end = 4


p (3 : 3): [ 3.614836360604185 0.7867244574868211 0.3224199317354524 ]
------------------------------ Fine segmento_v_d

44: dividi1_vs_d	<=>	v <- v / div
p (3 : 3): [ 3.614836360604185 0.7867244574868211 0.3224199317354524 ]
div = 4.724


p (3 : 3): [ 0.7652097991163449 0.166538455415112 0.068251745468543 ]
------------------------------ Fine dividi1_vs_d

61: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 3
incr = 1


tmp1_i (3 : 3): [ 1 2 3 ]
------------------------------ Fine seq_i


*** sampleB_p ***

*** sample_p ***
tmp1_i (3 : 3): [ 1 2 3 ]
k = 2, replace = 1
p (3 : 3): [ 0.7652097991163449 0.166538455415112 0.068251745468543 ]


ris (2 : 2): [ 1 1 ]
*****************************************


Stringhe allocate: 5 (1845 interne); stringhe deallocate: 0 (1545 interne)

64: somma_v_i	<=>	ris <- sum(v, na.rm=canc_NA)
ris (2 : 2): [ 1 1 ]
canc_NA = 0



ris: 2
------------------------------ Fine somma_v_i

68: segmento1_v_d	<=>	v <- v[st:end]
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
start = 1
end = 4


STout (4 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 ]
------------------------------ Fine segmento1_v_d

78: dividi1_vs_d	<=>	v <- v / div
STout (4 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 ]
div = 1.575


STout (4 : 7): [ 1.#QNAN 2.295629397349035 0.499615366245336 0.204755236405629 ]
------------------------------ Fine dividi1_vs_d

80: max_v_i		<=>	ris <- max(v)
ris (2 : 2): [ 1 1 ]


max = 1
------------------------------ Fine max_v_i

82: seq_i	<=>	ris <- seq(da, a, incr)
da = 0
a = 4
incr = 1


tmp2_i (5 : 5): [ 0 1 2 3 4 ]
------------------------------ Fine seq_i


*** hist1 ***
ris (2 : 2): [ 1 1 ]
tmp2_i (5 : 5): [ 0 1 2 3 4 ]
right = 0
include_border = 1
naok = 0
29: InitVett_i
tmp1_i (4 : 10): [ 2425208 2425208 0 0 ]
val = 0


tmp1_i (4 : 10): [ 0 0 0 0 ]
------------------------------ Fine InitVett_i



tmp1_i (4 : 10): [ 0 2 0 0 ]

Stringhe allocate: 5 (1850 interne); stringhe deallocate: 0 (1545 interne)

84: dividi_vs_i	ris <- v / div
tmp1_i (4 : 10): [ 0 2 0 0 ]
div = 5.000


Freq_out (4 : 4): [ 0 0.4 0 0 ]
------------------------------ Fine dividi_vs_i

87: InitVett_d
tmp3_d (3 : 3): [ 2.161448158068498e-314 0 3.904790520291375e-316 ]
val = 1.#INF


tmp3_d (3 : 3): [ 1.#INF 1.#INF 1.#INF ]
------------------------------ Fine InitVett_d


***score***
31: somma_vs_i	<=>	ris <- v + s
ris (2 : 2): [ 1 1 ]
s = 1


ind (2 : 2): [ 2 2 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
ris (2 : 2): [ 1 1 ]
s = 1


tmp_i1 (2 : 2): [ 2 2 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (4 : 7): [ 1.#QNAN 2.295629397349035 0.499615366245336 0.204755236405629 ]
tmp_i1 (2 : 2): [ 2 2 ]


T1 (2 : 2): [ 2.295629397349035 2.295629397349035 ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (2 : 2): [ 2 2 ]
s = 1


tmp_i1 (2 : 2): [ 3 3 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (4 : 7): [ 1.#QNAN 2.295629397349035 0.499615366245336 0.204755236405629 ]
tmp_i1 (2 : 2): [ 3 3 ]


T2 (2 : 2): [ 0.499615366245336 0.499615366245336 ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
ris (2 : 2): [ 1 1 ]
s = 1


tmp_i1 (2 : 2): [ 2 2 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (4 : 4): [ 0 0.4 0 0 ]
tmp_i1 (2 : 2): [ 2 2 ]


old1 (2 : 2): [ 0.4 0.4 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (2 : 2): [ 2 2 ]
s = 1


tmp_i1 (2 : 2): [ 3 3 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (4 : 4): [ 0 0.4 0 0 ]
tmp_i1 (2 : 2): [ 3 3 ]


old2 (2 : 2): [ 0 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (2 : 2): [ 0.4 0.4 ]
s = -1


new1 (2 : 2): [ -0.6 -0.6 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (2 : 2): [ 0 0 ]
s = 1


new2 (2 : 2): [ 1 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
ris (2 : 2): [ 1 1 ]
s = 1


tmp_i1 (2 : 2): [ 2 2 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
tmp3_d (3 : 3): [ 1.#INF 1.#INF 1.#INF ]
tmp_i1 (2 : 2): [ 2 2 ]


toll1 (2 : 2): [ 1.#INF 1.#INF ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (2 : 2): [ 2 2 ]
s = 1


tmp_i1 (2 : 2): [ 3 3 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
tmp3_d (3 : 3): [ 1.#INF 1.#INF 1.#INF ]
tmp_i1 (2 : 2): [ 3 3 ]


toll2 (2 : 2): [ 1.#INF 1.#INF ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (2 : 2): [ 0.4 0.4 ]
T1 (2 : 2): [ 2.295629397349035 2.295629397349035 ]


a (2 : 2): [ -1.895629397349035 -1.895629397349035 ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (2 : 2): [ -1.895629397349035 -1.895629397349035 ]


a (2 : 2): [ 1.895629397349035 1.895629397349035 ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (2 : 2): [ -0.6 -0.6 ]
T1 (2 : 2): [ 2.295629397349035 2.295629397349035 ]


b (2 : 2): [ -2.895629397349035 -2.895629397349035 ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (2 : 2): [ -2.895629397349035 -2.895629397349035 ]


b (2 : 2): [ 2.895629397349035 2.895629397349035 ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (2 : 2): [ 2.295629397349035 2.295629397349035 ]
complemento = 0


ind (0 : 2): [ ]
------------------------------ Fine which_v_indxNA_d

68: assegna1_vs_indx_d	<=>	v[indx] <- val
a (2 : 2): [ 1.895629397349035 1.895629397349035 ]
ind (0 : 2): [ ]
val = 0


a (2 : 2): [ 1.895629397349035 1.895629397349035 ]
------------------------------ Fine assegna1_vs_indx_d

70: assegna1_vs_indx_d	<=>	v[indx] <- val
b (2 : 2): [ 2.895629397349035 2.895629397349035 ]
ind (0 : 2): [ ]
val = 0


b (2 : 2): [ 2.895629397349035 2.895629397349035 ]
------------------------------ Fine assegna1_vs_indx_d

78: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (2 : 2): [ 1.895629397349035 1.895629397349035 ]
b (2 : 2): [ 2.895629397349035 2.895629397349035 ]


tmpm_d (2 x 2 : 2 x 2): [
	 1.895629397349035 2.895629397349035
	 1.895629397349035 2.895629397349035
 ]
------------------------------ Fine cbind2v_d

79: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (2 x 2 : 2 x 2): [
	 1.895629397349035 2.895629397349035
	 1.895629397349035 2.895629397349035
 ]


m (2 : 2): [ 2.895629397349035 2.895629397349035 ]
------------------------------ Fine max_righe_d

81: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (2 : 2): [ 1.895629397349035 1.895629397349035 ]
b (2 : 2): [ 2.895629397349035 2.895629397349035 ]
m (2 : 2): [ 2.895629397349035 2.895629397349035 ]
T1 (2 : 2): [ 2.295629397349035 2.295629397349035 ]


S1 (2 : 2): [ -1.261366229537256 -1.261366229537256 ]
------------------------------ Fine f_aux_d

83: diff_vv_d	<=>	ris <- v1 - v2
a (2 : 2): [ 1.895629397349035 1.895629397349035 ]
toll1 (2 : 2): [ 1.#INF 1.#INF ]


tmp_d1 (2 : 2): [ -1.#INF -1.#INF ]
------------------------------ Fine diff_vv_d

84: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (2 : 2): [ -1.#INF -1.#INF ]
val = 0

ind1 (2 : 2): [ 1 2 ]
------------------------------ Fine which_v_indxlt_d

86: diff_vv_d	<=>	ris <- v1 - v2
b (2 : 2): [ 2.895629397349035 2.895629397349035 ]
toll1 (2 : 2): [ 1.#INF 1.#INF ]


tmp_d1 (2 : 2): [ -1.#INF -1.#INF ]
------------------------------ Fine diff_vv_d

87: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (2 : 2): [ -1.#INF -1.#INF ]
val = 0


ind2 (0 : 2): [ ]
------------------------------ Fine which_v_indxgt_d

89: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (2 : 2): [ 1 2 ]
ind2 (0 : 2): [ ]
2459: esiste_v_i	<=>	elem %IN% v
elem = 1
ind2 (0 : 2): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 1
tmp_i1 (0 : 2): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 2
ind2 (0 : 2): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 2
tmp_i1 (0 : 2): [ ]


indx = 0
------------------------------ Fine esiste_v_i



tmp_i1 (0 : 2): [ ]
------------------------------ Fine interseca_i

91: assegna1_vs_indx_d	<=>	v[indx] <- val
S1 (2 : 2): [ -1.261366229537256 -1.261366229537256 ]
tmp_i1 (0 : 2): [ ]
val = -1.#INF


S1 (2 : 2): [ -1.261366229537256 -1.261366229537256 ]
------------------------------ Fine assegna1_vs_indx_d

93: assegna1_vs_indx_d	<=>	v[indx] <- val
S1 (2 : 2): [ -1.261366229537256 -1.261366229537256 ]
ind (0 : 2): [ ]
val = 0


S1 (2 : 2): [ -1.261366229537256 -1.261366229537256 ]
------------------------------ Fine assegna1_vs_indx_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (2 : 2): [ 0 0 ]
T2 (2 : 2): [ 0.499615366245336 0.499615366245336 ]


a (2 : 2): [ -0.499615366245336 -0.499615366245336 ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (2 : 2): [ -0.499615366245336 -0.499615366245336 ]


a (2 : 2): [ 0.499615366245336 0.499615366245336 ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (2 : 2): [ 1 1 ]
T2 (2 : 2): [ 0.499615366245336 0.499615366245336 ]


b (2 : 2): [ 0.500384633754664 0.500384633754664 ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (2 : 2): [ 0.500384633754664 0.500384633754664 ]


b (2 : 2): [ 0.500384633754664 0.500384633754664 ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (2 : 2): [ 0.499615366245336 0.499615366245336 ]
b (2 : 2): [ 0.500384633754664 0.500384633754664 ]


tmpm_d (2 x 2 : 2 x 2): [
	 0.499615366245336 0.500384633754664
	 0.499615366245336 0.500384633754664
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (2 x 2 : 2 x 2): [
	 0.499615366245336 0.500384633754664
	 0.499615366245336 0.500384633754664
 ]


m (2 : 2): [ 0.500384633754664 0.500384633754664 ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (2 : 2): [ 0.499615366245336 0.499615366245336 ]
complemento = 0


ind (0 : 2): [ ]
------------------------------ Fine which_v_indxNA_d

115: assegna1_vs_indx_d	<=>	v[indx] <- val
a (2 : 2): [ 0.499615366245336 0.499615366245336 ]
ind (0 : 2): [ ]
val = 0


a (2 : 2): [ 0.499615366245336 0.499615366245336 ]
------------------------------ Fine assegna1_vs_indx_d

117: assegna1_vs_indx_d	<=>	v[indx] <- val
b (2 : 2): [ 0.500384633754664 0.500384633754664 ]
ind (0 : 2): [ ]
val = 0


b (2 : 2): [ 0.500384633754664 0.500384633754664 ]
------------------------------ Fine assegna1_vs_indx_d

119: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (2 : 2): [ 0.499615366245336 0.499615366245336 ]
b (2 : 2): [ 0.500384633754664 0.500384633754664 ]


tmpm_d (2 x 2 : 2 x 2): [
	 0.499615366245336 0.500384633754664
	 0.499615366245336 0.500384633754664
 ]
------------------------------ Fine cbind2v_d

120: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (2 x 2 : 2 x 2): [
	 0.499615366245336 0.500384633754664
	 0.499615366245336 0.500384633754664
 ]


m (2 : 2): [ 0.500384633754664 0.500384633754664 ]
------------------------------ Fine max_righe_d

122: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (2 : 2): [ 0.499615366245336 0.499615366245336 ]
b (2 : 2): [ 0.500384633754664 0.500384633754664 ]
m (2 : 2): [ 0.500384633754664 0.500384633754664 ]
T2 (2 : 2): [ 0.499615366245336 0.499615366245336 ]


S2 (2 : 2): [ -1.001539719474822 -1.001539719474822 ]
------------------------------ Fine f_aux_d

124: diff_vv_d	<=>	ris <- v1 - v2
a (2 : 2): [ 0.499615366245336 0.499615366245336 ]
toll2 (2 : 2): [ 1.#INF 1.#INF ]


tmp_d1 (2 : 2): [ -1.#INF -1.#INF ]
------------------------------ Fine diff_vv_d

125: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (2 : 2): [ -1.#INF -1.#INF ]
val = 0

ind1 (2 : 2): [ 1 2 ]
------------------------------ Fine which_v_indxlt_d

127: diff_vv_d	<=>	ris <- v1 - v2
b (2 : 2): [ 0.500384633754664 0.500384633754664 ]
toll2 (2 : 2): [ 1.#INF 1.#INF ]


tmp_d1 (2 : 2): [ -1.#INF -1.#INF ]
------------------------------ Fine diff_vv_d

128: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (2 : 2): [ -1.#INF -1.#INF ]
val = 0


ind2 (0 : 2): [ ]
------------------------------ Fine which_v_indxgt_d

130: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (2 : 2): [ 1 2 ]
ind2 (0 : 2): [ ]
2459: esiste_v_i	<=>	elem %IN% v
elem = 1
ind2 (0 : 2): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 1
tmp_i1 (0 : 2): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 2
ind2 (0 : 2): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 2
tmp_i1 (0 : 2): [ ]


indx = 0
------------------------------ Fine esiste_v_i



tmp_i1 (0 : 2): [ ]
------------------------------ Fine interseca_i

132: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (2 : 2): [ -1.001539719474822 -1.001539719474822 ]
tmp_i1 (0 : 2): [ ]
val = -1.#INF


S2 (2 : 2): [ -1.001539719474822 -1.001539719474822 ]
------------------------------ Fine assegna1_vs_indx_d

134: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (2 : 2): [ -1.001539719474822 -1.001539719474822 ]
ind (0 : 2): [ ]
val = 0


S2 (2 : 2): [ -1.001539719474822 -1.001539719474822 ]
------------------------------ Fine assegna1_vs_indx_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (2 : 2): [ 0.499615366245336 0.499615366245336 ]
val = 0


ind (0 : 2): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (2 : 2): [ -1.001539719474822 -1.001539719474822 ]
ind (0 : 2): [ ]
val = -1.#INF


S2 (2 : 2): [ -1.001539719474822 -1.001539719474822 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (2 : 2): [ -1.261366229537256 -1.261366229537256 ]
S2 (2 : 2): [ -1.001539719474822 -1.001539719474822 ]


ris (2 : 2): [ -2.262905949012077 -2.262905949012077 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
ris (2 : 2): [ -2.262905949012077 -2.262905949012077 ]
div = 2.000


ris (2 : 2): [ -1.131452974506039 -1.131452974506039 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (1965 interne); stringhe deallocate: 0 (1645 interne)

90: which_v_indxne_d	<=>	ris <- which(v != val)
ris (2 : 2): [ -1.131452974506039 -1.131452974506039 ]
val = -1.#INF


indok (2 : 2): [ 1 2 ]
------------------------------ Fine which_v_indxne_d

92: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 2
incr = 1


tmp3_i (2 : 2): [ 1 2 ]
------------------------------ Fine seq_i

93: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp3_i (2 : 2): [ 1 2 ]
indok (2 : 2): [ 1 2 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp3_i (2 : 2): [ 1 2 ]
st = 1
end = 2


indInf (2 : 2): [ 1 2 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (2 : 2): [ 1 2 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 2): [ 1 2 ]
indx = 1


indInf (1 : 2): [ 2 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (1 : 2): [ 2 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 2): [ 2 ]
indx = 1


indInf (0 : 2): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 2): [ ]
------------------------------ Fine setdiff_i

95: assegna_v_indx_d	<=>	ris <-v[indx] senza sforamento dei limiti
ris (2 : 2): [ -1.131452974506039 -1.131452974506039 ]
indok (2 : 2): [ 1 2 ]


tmp1_d (2 : 3): [ -1.131452974506039 -1.131452974506039 ]
------------------------------ Fine assegna_v_indx_d

96: min_v_d	<=>	ris <- min(v)
tmp1_d (2 : 3): [ -1.131452974506039 -1.131452974506039 ]


min = -1.131452974506039
------------------------------ Fine min_v_d

99: assegna1_v_indx_d	<=>	v[indx] <- val
ris (2 : 2): [ -1.131452974506039 -1.131452974506039 ]
indInf (0 : 2): [ ]
val = -1


ris (2 : 2): [ -1.131452974506039 -1.131452974506039 ]
------------------------------ Fine assegna1_v_indx_d

101: somma_v_d	<=>	ris <- sum(v, na.rm=canc_NA)
ris (2 : 2): [ -1.131452974506039 -1.131452974506039 ]
canc_NA = 0



ris: -2.262905949012077
------------------------------ Fine somma_v_d

101: dividi_vs_d	ris <- v / div
ris (2 : 2): [ -1.131452974506039 -1.131452974506039 ]
div = -2.263


p (2 : 3): [ 0.5 0.5 ]
------------------------------ Fine dividi_vs_d

119: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 2
incr = 1


tmp2_i (2 : 5): [ 1 2 ]
------------------------------ Fine seq_i


*** sampleB_p ***

*** sample_p ***
tmp2_i (2 : 5): [ 1 2 ]
k = 1, replace = 0
p (2 : 3): [ 0.5 0.5 ]


ris (1 : 1): [ 1 ]
*****************************************


Stringhe allocate: 5 (1985 interne); stringhe deallocate: 0 (1645 interne)

64: somma_v_i	<=>	ris <- sum(v, na.rm=canc_NA)
ris (2 : 2): [ 2 1 ]
canc_NA = 0



ris: 3
------------------------------ Fine somma_v_i

68: segmento1_v_d	<=>	v <- v[st:end]
STout (4 : 7): [ 1.#QNAN 2.295629397349035 0.499615366245336 0.204755236405629 ]
start = 1
end = 4


STout (4 : 7): [ 1.#QNAN 2.295629397349035 0.499615366245336 0.204755236405629 ]
------------------------------ Fine segmento1_v_d

78: dividi1_vs_d	<=>	v <- v / div
STout (4 : 7): [ 1.#QNAN 2.295629397349035 0.499615366245336 0.204755236405629 ]
div = 1.575


STout (4 : 7): [ 1.#QNAN 1.457856955132618 0.3172845483739683 0.1300313743317969 ]
------------------------------ Fine dividi1_vs_d

80: max_v_i		<=>	ris <- max(v)
ris (2 : 2): [ 2 1 ]


max = 2
------------------------------ Fine max_v_i

82: seq_i	<=>	ris <- seq(da, a, incr)
da = 0
a = 4
incr = 1


tmp2_i (5 : 5): [ 0 1 2 3 4 ]
------------------------------ Fine seq_i


*** hist1 ***
ris (2 : 2): [ 2 1 ]
tmp2_i (5 : 5): [ 0 1 2 3 4 ]
right = 0
include_border = 1
naok = 0
29: InitVett_i
tmp1_i (4 : 10): [ 0 2 0 0 ]
val = 0


tmp1_i (4 : 10): [ 0 0 0 0 ]
------------------------------ Fine InitVett_i



tmp1_i (4 : 10): [ 0 1 1 0 ]

Stringhe allocate: 5 (1985 interne); stringhe deallocate: 0 (1645 interne)

84: dividi_vs_i	ris <- v / div
tmp1_i (4 : 10): [ 0 1 1 0 ]
div = 5.000


Freq_out (4 : 4): [ 0 0.2 0.2 0 ]
------------------------------ Fine dividi_vs_i

87: InitVett_d
tmp3_d (3 : 3): [ 1.#INF 1.#INF 1.#INF ]
val = 1.#INF


tmp3_d (3 : 3): [ 1.#INF 1.#INF 1.#INF ]
------------------------------ Fine InitVett_d


***score***
31: somma_vs_i	<=>	ris <- v + s
ris (2 : 2): [ 2 1 ]
s = 1


ind (2 : 2): [ 3 2 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
ris (2 : 2): [ 2 1 ]
s = 1


tmp_i1 (2 : 2): [ 3 2 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (4 : 7): [ 1.#QNAN 1.457856955132618 0.3172845483739683 0.1300313743317969 ]
tmp_i1 (2 : 2): [ 3 2 ]


T1 (2 : 2): [ 0.3172845483739683 1.457856955132618 ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (2 : 2): [ 3 2 ]
s = 1


tmp_i1 (2 : 2): [ 4 3 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (4 : 7): [ 1.#QNAN 1.457856955132618 0.3172845483739683 0.1300313743317969 ]
tmp_i1 (2 : 2): [ 4 3 ]


T2 (2 : 2): [ 0.1300313743317969 0.3172845483739683 ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
ris (2 : 2): [ 2 1 ]
s = 1


tmp_i1 (2 : 2): [ 3 2 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (4 : 4): [ 0 0.2 0.2 0 ]
tmp_i1 (2 : 2): [ 3 2 ]


old1 (2 : 2): [ 0.2 0.2 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (2 : 2): [ 3 2 ]
s = 1


tmp_i1 (2 : 2): [ 4 3 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (4 : 4): [ 0 0.2 0.2 0 ]
tmp_i1 (2 : 2): [ 4 3 ]


old2 (2 : 2): [ 0 0.2 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (2 : 2): [ 0.2 0.2 ]
s = -1


new1 (2 : 2): [ -0.8 -0.8 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (2 : 2): [ 0 0.2 ]
s = 1


new2 (2 : 2): [ 1 1.2 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
ris (2 : 2): [ 2 1 ]
s = 1


tmp_i1 (2 : 2): [ 3 2 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
tmp3_d (3 : 3): [ 1.#INF 1.#INF 1.#INF ]
tmp_i1 (2 : 2): [ 3 2 ]


toll1 (2 : 2): [ 1.#INF 1.#INF ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (2 : 2): [ 3 2 ]
s = 1


tmp_i1 (2 : 2): [ 4 3 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
tmp3_d (3 : 3): [ 1.#INF 1.#INF 1.#INF ]
tmp_i1 (2 : 2): [ 4 3 ]
ATTENZIONE (assegna_vindxNA_d, linea scoremodular.c # 56): assegnato NA per via di un elemento specificato alla posizione 4 che e` al di fuori dei limiti dell'array (3)!


toll2 (2 : 2): [ 1.#QNAN 1.#INF ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (2 : 2): [ 0.2 0.2 ]
T1 (2 : 2): [ 0.3172845483739683 1.457856955132618 ]


a (2 : 2): [ -0.1172845483739683 -1.257856955132618 ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (2 : 2): [ -0.1172845483739683 -1.257856955132618 ]


a (2 : 2): [ 0.1172845483739683 1.257856955132618 ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (2 : 2): [ -0.8 -0.8 ]
T1 (2 : 2): [ 0.3172845483739683 1.457856955132618 ]


b (2 : 2): [ -1.117284548373968 -2.257856955132619 ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (2 : 2): [ -1.117284548373968 -2.257856955132619 ]


b (2 : 2): [ 1.117284548373968 2.257856955132619 ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (2 : 2): [ 0.3172845483739683 1.457856955132618 ]
complemento = 0


ind (0 : 2): [ ]
------------------------------ Fine which_v_indxNA_d

68: assegna1_vs_indx_d	<=>	v[indx] <- val
a (2 : 2): [ 0.1172845483739683 1.257856955132618 ]
ind (0 : 2): [ ]
val = 0


a (2 : 2): [ 0.1172845483739683 1.257856955132618 ]
------------------------------ Fine assegna1_vs_indx_d

70: assegna1_vs_indx_d	<=>	v[indx] <- val
b (2 : 2): [ 1.117284548373968 2.257856955132619 ]
ind (0 : 2): [ ]
val = 0


b (2 : 2): [ 1.117284548373968 2.257856955132619 ]
------------------------------ Fine assegna1_vs_indx_d

78: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (2 : 2): [ 0.1172845483739683 1.257856955132618 ]
b (2 : 2): [ 1.117284548373968 2.257856955132619 ]


tmpm_d (2 x 2 : 2 x 2): [
	 0.1172845483739683 1.117284548373968
	 1.257856955132618 2.257856955132619
 ]
------------------------------ Fine cbind2v_d

79: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (2 x 2 : 2 x 2): [
	 0.1172845483739683 1.117284548373968
	 1.257856955132618 2.257856955132619
 ]


m (2 : 2): [ 1.117284548373968 2.257856955132619 ]
------------------------------ Fine max_righe_d

81: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (2 : 2): [ 0.1172845483739683 1.257856955132618 ]
b (2 : 2): [ 1.117284548373968 2.257856955132619 ]
m (2 : 2): [ 1.117284548373968 2.257856955132619 ]
T1 (2 : 2): [ 0.3172845483739683 1.457856955132618 ]


S1 (2 : 2): [ -3.521396027949896 -1.548750683106098 ]
------------------------------ Fine f_aux_d

83: diff_vv_d	<=>	ris <- v1 - v2
a (2 : 2): [ 0.1172845483739683 1.257856955132618 ]
toll1 (2 : 2): [ 1.#INF 1.#INF ]


tmp_d1 (2 : 2): [ -1.#INF -1.#INF ]
------------------------------ Fine diff_vv_d

84: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (2 : 2): [ -1.#INF -1.#INF ]
val = 0

ind1 (2 : 2): [ 1 2 ]
------------------------------ Fine which_v_indxlt_d

86: diff_vv_d	<=>	ris <- v1 - v2
b (2 : 2): [ 1.117284548373968 2.257856955132619 ]
toll1 (2 : 2): [ 1.#INF 1.#INF ]


tmp_d1 (2 : 2): [ -1.#INF -1.#INF ]
------------------------------ Fine diff_vv_d

87: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (2 : 2): [ -1.#INF -1.#INF ]
val = 0


ind2 (0 : 2): [ ]
------------------------------ Fine which_v_indxgt_d

89: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (2 : 2): [ 1 2 ]
ind2 (0 : 2): [ ]
2459: esiste_v_i	<=>	elem %IN% v
elem = 1
ind2 (0 : 2): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 1
tmp_i1 (0 : 2): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 2
ind2 (0 : 2): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 2
tmp_i1 (0 : 2): [ ]


indx = 0
------------------------------ Fine esiste_v_i



tmp_i1 (0 : 2): [ ]
------------------------------ Fine interseca_i

91: assegna1_vs_indx_d	<=>	v[indx] <- val
S1 (2 : 2): [ -3.521396027949896 -1.548750683106098 ]
tmp_i1 (0 : 2): [ ]
val = -1.#INF


S1 (2 : 2): [ -3.521396027949896 -1.548750683106098 ]
------------------------------ Fine assegna1_vs_indx_d

93: assegna1_vs_indx_d	<=>	v[indx] <- val
S1 (2 : 2): [ -3.521396027949896 -1.548750683106098 ]
ind (0 : 2): [ ]
val = 0


S1 (2 : 2): [ -3.521396027949896 -1.548750683106098 ]
------------------------------ Fine assegna1_vs_indx_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (2 : 2): [ 0 0.2 ]
T2 (2 : 2): [ 0.1300313743317969 0.3172845483739683 ]


a (2 : 2): [ -0.1300313743317969 -0.1172845483739683 ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (2 : 2): [ -0.1300313743317969 -0.1172845483739683 ]


a (2 : 2): [ 0.1300313743317969 0.1172845483739683 ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (2 : 2): [ 1 1.2 ]
T2 (2 : 2): [ 0.1300313743317969 0.3172845483739683 ]


b (2 : 2): [ 0.8699686256682031 0.8827154516260316 ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (2 : 2): [ 0.8699686256682031 0.8827154516260316 ]


b (2 : 2): [ 0.8699686256682031 0.8827154516260316 ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (2 : 2): [ 0.1300313743317969 0.1172845483739683 ]
b (2 : 2): [ 0.8699686256682031 0.8827154516260316 ]


tmpm_d (2 x 2 : 2 x 2): [
	 0.1300313743317969 0.8699686256682031
	 0.1172845483739683 0.8827154516260316
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (2 x 2 : 2 x 2): [
	 0.1300313743317969 0.8699686256682031
	 0.1172845483739683 0.8827154516260316
 ]


m (2 : 2): [ 0.8699686256682031 0.8827154516260316 ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (2 : 2): [ 0.1300313743317969 0.3172845483739683 ]
complemento = 0


ind (0 : 2): [ ]
------------------------------ Fine which_v_indxNA_d

115: assegna1_vs_indx_d	<=>	v[indx] <- val
a (2 : 2): [ 0.1300313743317969 0.1172845483739683 ]
ind (0 : 2): [ ]
val = 0


a (2 : 2): [ 0.1300313743317969 0.1172845483739683 ]
------------------------------ Fine assegna1_vs_indx_d

117: assegna1_vs_indx_d	<=>	v[indx] <- val
b (2 : 2): [ 0.8699686256682031 0.8827154516260316 ]
ind (0 : 2): [ ]
val = 0


b (2 : 2): [ 0.8699686256682031 0.8827154516260316 ]
------------------------------ Fine assegna1_vs_indx_d

119: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (2 : 2): [ 0.1300313743317969 0.1172845483739683 ]
b (2 : 2): [ 0.8699686256682031 0.8827154516260316 ]


tmpm_d (2 x 2 : 2 x 2): [
	 0.1300313743317969 0.8699686256682031
	 0.1172845483739683 0.8827154516260316
 ]
------------------------------ Fine cbind2v_d

120: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (2 x 2 : 2 x 2): [
	 0.1300313743317969 0.8699686256682031
	 0.1172845483739683 0.8827154516260316
 ]


m (2 : 2): [ 0.8699686256682031 0.8827154516260316 ]
------------------------------ Fine max_righe_d

122: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (2 : 2): [ 0.1300313743317969 0.1172845483739683 ]
b (2 : 2): [ 0.8699686256682031 0.8827154516260316 ]
m (2 : 2): [ 0.8699686256682031 0.8827154516260316 ]
T2 (2 : 2): [ 0.1300313743317969 0.3172845483739683 ]


S2 (2 : 2): [ -6.690451670904683 -2.782094041924842 ]
------------------------------ Fine f_aux_d

124: diff_vv_d	<=>	ris <- v1 - v2
a (2 : 2): [ 0.1300313743317969 0.1172845483739683 ]
toll2 (2 : 2): [ 1.#QNAN 1.#INF ]


tmp_d1 (2 : 2): [ 1.#QNAN -1.#INF ]
------------------------------ Fine diff_vv_d

125: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (2 : 2): [ 1.#QNAN -1.#INF ]
val = 0

ind1 (1 : 2): [ 2 ]
------------------------------ Fine which_v_indxlt_d

127: diff_vv_d	<=>	ris <- v1 - v2
b (2 : 2): [ 0.8699686256682031 0.8827154516260316 ]
toll2 (2 : 2): [ 1.#QNAN 1.#INF ]


tmp_d1 (2 : 2): [ 1.#QNAN -1.#INF ]
------------------------------ Fine diff_vv_d

128: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (2 : 2): [ 1.#QNAN -1.#INF ]
val = 0


ind2 (0 : 2): [ ]
------------------------------ Fine which_v_indxgt_d

130: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (1 : 2): [ 2 ]
ind2 (0 : 2): [ ]
2459: esiste_v_i	<=>	elem %IN% v
elem = 2
ind2 (0 : 2): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 2
tmp_i1 (0 : 2): [ ]


indx = 0
------------------------------ Fine esiste_v_i



tmp_i1 (0 : 2): [ ]
------------------------------ Fine interseca_i

132: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (2 : 2): [ -6.690451670904683 -2.782094041924842 ]
tmp_i1 (0 : 2): [ ]
val = -1.#INF


S2 (2 : 2): [ -6.690451670904683 -2.782094041924842 ]
------------------------------ Fine assegna1_vs_indx_d

134: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (2 : 2): [ -6.690451670904683 -2.782094041924842 ]
ind (0 : 2): [ ]
val = 0


S2 (2 : 2): [ -6.690451670904683 -2.782094041924842 ]
------------------------------ Fine assegna1_vs_indx_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (2 : 2): [ 0.1300313743317969 0.3172845483739683 ]
val = 0


ind (0 : 2): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (2 : 2): [ -6.690451670904683 -2.782094041924842 ]
ind (0 : 2): [ ]
val = -1.#INF


S2 (2 : 2): [ -6.690451670904683 -2.782094041924842 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (2 : 2): [ -3.521396027949896 -1.548750683106098 ]
S2 (2 : 2): [ -6.690451670904683 -2.782094041924842 ]


ris (2 : 2): [ -10.21184769885458 -4.33084472503094 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
ris (2 : 2): [ -10.21184769885458 -4.33084472503094 ]
div = 2.000


ris (2 : 2): [ -5.105923849427289 -2.16542236251547 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (2086 interne); stringhe deallocate: 0 (1746 interne)

90: which_v_indxne_d	<=>	ris <- which(v != val)
ris (2 : 2): [ -5.105923849427289 -2.16542236251547 ]
val = -1.#INF


indok (2 : 2): [ 1 2 ]
------------------------------ Fine which_v_indxne_d

92: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 2
incr = 1


tmp3_i (2 : 2): [ 1 2 ]
------------------------------ Fine seq_i

93: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp3_i (2 : 2): [ 1 2 ]
indok (2 : 2): [ 1 2 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp3_i (2 : 2): [ 1 2 ]
st = 1
end = 2


indInf (2 : 2): [ 1 2 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (2 : 2): [ 1 2 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 2): [ 1 2 ]
indx = 1


indInf (1 : 2): [ 2 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (1 : 2): [ 2 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 2): [ 2 ]
indx = 1


indInf (0 : 2): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 2): [ ]
------------------------------ Fine setdiff_i

95: assegna_v_indx_d	<=>	ris <-v[indx] senza sforamento dei limiti
ris (2 : 2): [ -5.105923849427289 -2.16542236251547 ]
indok (2 : 2): [ 1 2 ]


tmp1_d (2 : 3): [ -5.105923849427289 -2.16542236251547 ]
------------------------------ Fine assegna_v_indx_d

96: min_v_d	<=>	ris <- min(v)
tmp1_d (2 : 3): [ -5.105923849427289 -2.16542236251547 ]


min = -5.105923849427289
------------------------------ Fine min_v_d

99: assegna1_v_indx_d	<=>	v[indx] <- val
ris (2 : 2): [ -5.105923849427289 -2.16542236251547 ]
indInf (0 : 2): [ ]
val = -1


ris (2 : 2): [ -5.105923849427289 -2.16542236251547 ]
------------------------------ Fine assegna1_v_indx_d

101: somma_v_d	<=>	ris <- sum(v, na.rm=canc_NA)
ris (2 : 2): [ -5.105923849427289 -2.16542236251547 ]
canc_NA = 0



ris: -7.27134621194276
------------------------------ Fine somma_v_d

101: dividi_vs_d	ris <- v / div
ris (2 : 2): [ -5.105923849427289 -2.16542236251547 ]
div = -7.271


p (2 : 3): [ 0.7021978737638855 0.2978021262361144 ]
------------------------------ Fine dividi_vs_d

119: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 2
incr = 1


tmp2_i (2 : 5): [ 1 2 ]
------------------------------ Fine seq_i


*** sampleB_p ***

*** sample_p ***
tmp2_i (2 : 5): [ 1 2 ]
k = 1, replace = 0
p (2 : 3): [ 0.7021978737638855 0.2978021262361144 ]


ris (1 : 1): [ 2 ]
*****************************************


Stringhe allocate: 5 (2086 interne); stringhe deallocate: 0 (1746 interne)

64: somma_v_i	<=>	ris <- sum(v, na.rm=canc_NA)
ris (2 : 2): [ 2 2 ]
canc_NA = 0



ris: 4
------------------------------ Fine somma_v_i

131: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 2
incr = 1


tmp1_i (2 : 10): [ 1 2 ]
------------------------------ Fine seq_i

133: assegna1_m_vv_i	<=>	m[vr, vc] <- val
ris (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
tmp1_i (2 : 10): [ 1 2 ]
scalare_i (1 : 1): [ 4 ]
val = 1


ris (5 x 5 : 5 x 5): [
	 0 0 0 1 0
	 0 0 0 1 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine assegna1_m_vv_i

135: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 2
incr = 1


indS (2 : 2): [ 1 2 ]
------------------------------ Fine seq_i

137: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 3
incr = 1


tmp2_i (3 : 5): [ 1 2 3 ]
------------------------------ Fine seq_i

138: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp2_i (3 : 5): [ 1 2 3 ]
indS (2 : 2): [ 1 2 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp2_i (3 : 5): [ 1 2 3 ]
st = 1
end = 3


indBS (3 : 3): [ 1 2 3 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indBS (3 : 3): [ 1 2 3 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indBS (3 : 3): [ 1 2 3 ]
indx = 1


indBS (2 : 3): [ 2 3 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indBS (2 : 3): [ 2 3 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indBS (2 : 3): [ 2 3 ]
indx = 1


indBS (1 : 3): [ 3 ]
------------------------------ Fine elimina1_indx_i



indBS (1 : 3): [ 3 ]
------------------------------ Fine setdiff_i

150: segmento_v_d	<=>	ris <- v[st:end]
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
start = 1
end = 3


tmp1_d (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine segmento_v_d

151: somma_v_d	<=>	ris <- sum(v, na.rm=canc_NA)
tmp1_d (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
canc_NA = 1



ris: 0
------------------------------ Fine somma_v_d

153: somma_righe_i	<=>	ris <- apply(m, 1, sum)
ris (5 x 5 : 5 x 5): [
	 0 0 0 1 0
	 0 0 0 1 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]


Sin (5 : 5): [ 1 1 0 0 0 ]
------------------------------ Fine somma_righe_i

206: InitVett_d
p_sc (2 : 2): [ -3.52139474658112 -1.548750683106098 ]
val = 0.5


p_sc (2 : 2): [ 0.5 0.5 ]
------------------------------ Fine InitVett_d

211: which_v_indxeq_i	<=>	ris <- which(v==val)
tmp1_i (2 : 10): [ 1 2 ]
val = 5


ind (0 : 2): [ ]
------------------------------ Fine which_v_indxeq_i

213: assegna1_vs_indx_d	<=>	v[indx] <- val
p_sc (2 : 2): [ 0.5 0.5 ]
ind (0 : 2): [ ]
val = 0


p_sc (2 : 2): [ 0.5 0.5 ]
------------------------------ Fine assegna1_vs_indx_d

215: somma_v_d	<=>	ris <- sum(v, na.rm=canc_NA)
p_sc (2 : 2): [ 0.5 0.5 ]
canc_NA = 0



ris: 1
------------------------------ Fine somma_v_d

215: dividi1_vs_d	<=>	v <- v / div
p_sc (2 : 2): [ 0.5 0.5 ]
div = 1.000


p_sc (2 : 2): [ 0.5 0.5 ]
------------------------------ Fine dividi1_vs_d


*** sampleB_p ***

*** sample_p ***
indS (2 : 2): [ 1 2 ]
k = 1, replace = 0
p_sc (2 : 2): [ 0.5 0.5 ]


ris (1 : 1): [ 1 ]
*****************************************


Stringhe allocate: 5 (2116 interne); stringhe deallocate: 0 (1746 interne)

221: segmento_v_i	<=>	ris <- v[st:end]
indBS (1 : 3): [ 3 ]
start = 1
end = 1


ind (1 : 2): [ 3 ]
------------------------------ Fine segmento_v_i

223: accoda1_vv_i	<=>	v1 <- c(v1, v2)
indS (2 : 2): [ 1 2 ]
ind (1 : 2): [ 3 ]
ATTENZIONE (accoda_vv_i, linea mod3.c # 223): ingrandito il vettore da 2 a 3!


indS (3 : 6): [ 1 2 3 ]
------------------------------ Fine accoda_vv_i

225: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 3
incr = 1


tmp1_i (3 : 10): [ 1 2 3 ]
------------------------------ Fine seq_i

226: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp1_i (3 : 10): [ 1 2 3 ]
indS (3 : 6): [ 1 2 3 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp1_i (3 : 10): [ 1 2 3 ]
st = 1
end = 3


indBS (3 : 3): [ 1 2 3 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indBS (3 : 3): [ 1 2 3 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indBS (3 : 3): [ 1 2 3 ]
indx = 1


indBS (2 : 3): [ 2 3 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indBS (2 : 3): [ 2 3 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indBS (2 : 3): [ 2 3 ]
indx = 1


indBS (1 : 3): [ 3 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indBS (1 : 3): [ 3 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indBS (1 : 3): [ 3 ]
indx = 1


indBS (0 : 3): [ ]
------------------------------ Fine elimina1_indx_i



indBS (0 : 3): [ ]
------------------------------ Fine setdiff_i

228: accoda1_vv_i	<=>	v1 <- c(v1, v2)
ris (1 : 1): [ 1 ]
ind (1 : 2): [ 3 ]
ATTENZIONE (accoda_vv_i, linea mod3.c # 228): ingrandito il vettore da 1 a 2!


ind1 (2 : 4): [ 1 3 ]
------------------------------ Fine accoda_vv_i

233: assegna1_m_vv_i	<=>	m[vr, vc] <- val
ris (5 x 5 : 5 x 5): [
	 0 0 0 1 0
	 0 0 0 1 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
ind1 (2 : 4): [ 1 3 ]
scalare_i (1 : 1): [ 5 ]
val = 1


ris (5 x 5 : 5 x 5): [
	 0 0 0 1 1
	 0 0 0 1 0
	 0 0 0 0 1
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine assegna1_m_vv_i


*** triangola ***
27: diag_i	<=>	ris <- diag(m)
ris (5 x 5 : 5 x 5): [
	 0 0 0 1 1
	 0 0 0 1 0
	 0 0 0 0 1
	 0 0 0 0 0
	 0 0 0 0 0
 ]


Dmem (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine diag_i

29: assegna1_s_diag_i	<=>	diag_i(m) <- s
ris (5 x 5 : 5 x 5): [
	 0 0 0 1 1
	 0 0 0 1 0
	 0 0 0 0 1
	 0 0 0 0 0
	 0 0 0 0 0
 ]
val = 0


ris (5 x 5 : 5 x 5): [
	 0 0 0 1 1
	 0 0 0 1 0
	 0 0 0 0 1
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine assegna1_s_diag_i

33: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
ris (5 x 5 : 5 x 5): [
	 0 0 0 1 1
	 0 0 0 1 0
	 0 0 0 0 1
	 0 0 0 0 0
	 0 0 0 0 0
 ]
r = 1
val = 0


tmp1_i (2 : 25): [ 4 5 ]
------------------------------ Fine which_m_rowindxne_i

34: which_m_colindxne_i	<=>	ris <- which(m[, c] != val)
ris (5 x 5 : 5 x 5): [
	 0 0 0 1 1
	 0 0 0 1 0
	 0 0 0 0 1
	 0 0 0 0 0
	 0 0 0 0 0
 ]
c = 1, val = 0


tmp2_i (0 : 25): [ ]
------------------------------ Fine which_m_colindxne_i

35: unione_i	<=>	ris <- union(v1, v2)
tmp1_i (2 : 25): [ 4 5 ]
tmp2_i (0 : 25): [ ]
4876: elimina_doppi_i	<=>	ris <- union(v, v)
ind (2 : 2): [ 4 5 ]


ris (2 : 2): [ 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (2 : 2): [ 4 5 ]
------------------------------ Fine unione_i

33: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
ris (5 x 5 : 5 x 5): [
	 0 0 0 1 1
	 0 0 0 1 0
	 0 0 0 0 1
	 0 0 0 0 0
	 0 0 0 0 0
 ]
r = 2
val = 0


tmp1_i (1 : 25): [ 4 ]
------------------------------ Fine which_m_rowindxne_i

34: which_m_colindxne_i	<=>	ris <- which(m[, c] != val)
ris (5 x 5 : 5 x 5): [
	 0 0 0 1 1
	 0 0 0 1 0
	 0 0 0 0 1
	 0 0 0 0 0
	 0 0 0 0 0
 ]
c = 2, val = 0


tmp2_i (0 : 25): [ ]
------------------------------ Fine which_m_colindxne_i

35: unione_i	<=>	ris <- union(v1, v2)
tmp1_i (1 : 25): [ 4 ]
tmp2_i (0 : 25): [ ]
4876: elimina_doppi_i	<=>	ris <- union(v, v)
ind (1 : 1): [ 4 ]


ris (1 : 2): [ 4 ]
------------------------------ Fine elimina_doppi_i



ris (1 : 2): [ 4 ]
------------------------------ Fine unione_i

33: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
ris (5 x 5 : 5 x 5): [
	 0 0 0 1 1
	 0 0 0 1 0
	 0 0 0 0 1
	 0 0 0 0 0
	 0 0 0 0 0
 ]
r = 3
val = 0


tmp1_i (1 : 25): [ 5 ]
------------------------------ Fine which_m_rowindxne_i

34: which_m_colindxne_i	<=>	ris <- which(m[, c] != val)
ris (5 x 5 : 5 x 5): [
	 0 0 0 1 1
	 0 0 0 1 0
	 0 0 0 0 1
	 0 0 0 0 0
	 0 0 0 0 0
 ]
c = 3, val = 0


tmp2_i (0 : 25): [ ]
------------------------------ Fine which_m_colindxne_i

35: unione_i	<=>	ris <- union(v1, v2)
tmp1_i (1 : 25): [ 5 ]
tmp2_i (0 : 25): [ ]
4876: elimina_doppi_i	<=>	ris <- union(v, v)
ind (1 : 1): [ 5 ]


ris (1 : 2): [ 5 ]
------------------------------ Fine elimina_doppi_i



ris (1 : 2): [ 5 ]
------------------------------ Fine unione_i

33: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
ris (5 x 5 : 5 x 5): [
	 0 0 0 1 1
	 0 0 0 1 0
	 0 0 0 0 1
	 0 0 0 0 0
	 0 0 0 0 0
 ]
r = 4
val = 0


tmp1_i (0 : 25): [ ]
------------------------------ Fine which_m_rowindxne_i

34: which_m_colindxne_i	<=>	ris <- which(m[, c] != val)
ris (5 x 5 : 5 x 5): [
	 0 0 0 1 1
	 0 0 0 1 0
	 0 0 0 0 1
	 0 0 0 0 0
	 0 0 0 0 0
 ]
c = 4, val = 0


tmp2_i (2 : 25): [ 1 2 ]
------------------------------ Fine which_m_colindxne_i

35: unione_i	<=>	ris <- union(v1, v2)
tmp1_i (0 : 25): [ ]
tmp2_i (2 : 25): [ 1 2 ]
4876: elimina_doppi_i	<=>	ris <- union(v, v)
ind (2 : 2): [ 1 2 ]


ris (2 : 2): [ 1 2 ]
------------------------------ Fine elimina_doppi_i



ris (2 : 2): [ 1 2 ]
------------------------------ Fine unione_i

33: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
ris (5 x 5 : 5 x 5): [
	 0 0 0 1 1
	 0 0 0 1 0
	 0 0 0 0 1
	 0 0 0 0 0
	 0 0 0 0 0
 ]
r = 5
val = 0


tmp1_i (0 : 25): [ ]
------------------------------ Fine which_m_rowindxne_i

34: which_m_colindxne_i	<=>	ris <- which(m[, c] != val)
ris (5 x 5 : 5 x 5): [
	 0 0 0 1 1
	 0 0 0 1 0
	 0 0 0 0 1
	 0 0 0 0 0
	 0 0 0 0 0
 ]
c = 5, val = 0


tmp2_i (2 : 25): [ 1 3 ]
------------------------------ Fine which_m_colindxne_i

35: unione_i	<=>	ris <- union(v1, v2)
tmp1_i (0 : 25): [ ]
tmp2_i (2 : 25): [ 1 3 ]
4876: elimina_doppi_i	<=>	ris <- union(v, v)
ind (2 : 2): [ 1 3 ]


ris (2 : 2): [ 1 3 ]
------------------------------ Fine elimina_doppi_i



ris (2 : 2): [ 1 3 ]
------------------------------ Fine unione_i

152: assegna1_v_diag_i	<=>	diag(m) <- v
ris (5 x 5 : 5 x 5): [
	 0 0 0 1 1
	 0 0 0 1 0
	 0 0 0 0 1
	 0 0 0 0 0
	 0 0 0 0 0
 ]
Dmem (5 : 5): [ 0 0 0 0 0 ]


ris (5 x 5 : 5 x 5): [
	 0 0 0 1 1
	 0 0 0 1 0
	 0 0 0 0 1
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine assegna1_v_diag_i


Stringhe allocate: 5 (2178 interne); stringhe deallocate: 0 (1808 interne)



*****************************************
*****************************************


Stringhe allocate: 5 (2178 interne); stringhe deallocate: 0 (1918 interne)


*** probmod ***
46: InitMatr_i
checkOUT (5 x 5 : 5 x 5): [
	 0 0 0 197904 7079168
	 3 0 0 263424 788224
	 0 0 0 263696 6358016
	 0 0 0 7537664 1246482
	 0 0 1024 591360 6620416
 ]
val = 0


checkOUT (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine InitMatr_i

48: InitMatr_i
checkIN (5 x 5 : 5 x 5): [
	 2425208 460304 6358016 16647680 263424
	 2425208 7537664 329216 7603456 329232
	 168440882 6751744 6882560 16385792 7537664
	 394512 7210240 198400 1024 1050112
	 6489344 3933952 132352 197904 7079168
 ]
val = 0


checkIN (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine InitMatr_i

50: InitMatr_d
ris (5 x 5 : 5 x 5): [
	 5.842414621812633e-308 1.291585842497064e-306 4.006331809948833e-311 2.645029560655252e-308 9.767631537706406e-309
	 1.871148047909527e-306 5.34626145244887e-307 4.199514550156972e-309 1.53303374045799e-308 1.0245769794762e-306
	 2.04950162672215e-306 9.767292017731005e-309 5.595618022245272e-309 1.380588795656204e-306 5.12375406659815e-307
	 8.371528034857974e-309 1.116339549111447e-308 1.254863434669324e-308 1.426480946340134e-306 6.985949694597004e-309
	 1.115830269927341e-308 7.068614633812813e-304 1.811675129992085e-308 8.371528034857974e-309 8.382053167980467e-309
 ]
val = 0


ris (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine InitMatr_d

52: somma_righe_i	<=>	ris <- apply(m, 1, sum)
ris (5 x 5 : 5 x 5): [
	 0 0 0 1 1
	 0 0 0 1 0
	 0 0 0 0 1
	 0 0 0 0 0
	 0 0 0 0 0
 ]


M_in (5 : 5): [ 2 1 1 0 0 ]
------------------------------ Fine somma_righe_i

54: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
ris (5 x 5 : 5 x 5): [
	 0 0 0 1 1
	 0 0 0 1 0
	 0 0 0 0 1
	 0 0 0 0 0
	 0 0 0 0 0
 ]


M_out (5 : 5): [ 0 0 0 2 2 ]
------------------------------ Fine somma_colonne_i

57: InitMatr_i
memory (5 x 3 : 5 x 3): [
	 79860680 255 0
	 79860968 26 153
	 0 5 0
	 153 458757 153
	 0 0 1
 ]
val = -2147483648


memory (5 x 3 : 5 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
------------------------------ Fine InitMatr_i

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (5 x 3 : 5 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 2


tmp_i1 (0 : 15): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (5 x 3 : 5 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 0


tmp_i2 (0 : 15): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 15): [ ]
tmp_i2 (0 : 15): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

119: InitVett_d
S_out (5 : 5): [ 8.958887433552787e+073 5.044436727413776e+180 6.017442310274418e+175 6.805945318276925e+212 6.871118703102738e-313 ]
val = 0


S_out (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

122: InitVett_i
tmp_i1 (5 : 15): [ 79860848 79855392 0 223 0 ]
val = 1


tmp_i1 (5 : 15): [ 1 1 1 1 1 ]
------------------------------ Fine InitVett_i

123: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
checkOUT (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 1
tmp_i1 (5 : 15): [ 1 1 1 1 1 ]


checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_i

128: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 0 0 0 0 ]
h (5 : 5): [ 1 2 3 4 5 ]


tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 2


ind (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 2 2 2 2 2 ]
s = 1


tmp_i1 (5 : 5): [ 3 3 3 3 3 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
tmp_i1 (5 : 5): [ 3 3 3 3 3 ]


T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


old1 (5 : 5): [ 5 5 5 5 5 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 2 2 2 2 2 ]
s = 1


tmp_i1 (5 : 5): [ 3 3 3 3 3 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 3 3 3 3 3 ]


old2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (5 : 5): [ 5 5 5 5 5 ]
s = -1


new1 (5 : 5): [ 4 4 4 4 4 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (5 : 5): [ 0 0 0 0 0 ]
s = 1


new2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


toll1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 2 2 2 2 2 ]
s = 1


tmp_i1 (5 : 5): [ 3 3 3 3 3 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 3 3 3 3 3 ]


toll2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (5 : 5): [ 5 5 5 5 5 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (5 : 5): [ 4 4 4 4 4 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (5 : 5): [ 1.000000017730887 1 1 1 1 ]
val = 0


S1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (5 : 5): [ 0 0 0 0 0 ]
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (5 : 5): [ 1 1 1 1 1 ]
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


tmpm_d (5 x 2 : 5 x 2): [
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
 ]


m (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

140: InitVett_d
S2 (5 : 5): [ 3.94550073900366e-316 0 0 0 0 ]
val = 0


S2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
val = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 0 0 0 0 0 ]
ind (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (5 : 5): [ 0 0 0 0 0 ]
S2 (5 : 5): [ 0 0 0 0 0 ]


ris (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
ris (5 : 5): [ 0 0 0 0 0 ]
div = 2.000


ris (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (2328 interne); stringhe deallocate: 0 (2003 interne)

131: which_v_indxne_d	<=>	ris <- which(v != val)
ris (5 : 5): [ 0 0 0 0 0 ]
val = -1.#INF


indok (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxne_d

133: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkIN (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 1
indok (5 : 5): [ 1 2 3 4 5 ]
val = 1


checkIN (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_riga_indx_i

141: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 5
incr = 1


tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
------------------------------ Fine seq_i

142: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
indok (5 : 5): [ 1 2 3 4 5 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
st = 1
end = 5


indInf (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (5 : 5): [ 1 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (5 : 5): [ 1 2 3 4 5 ]
indx = 1


indInf (4 : 5): [ 2 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (4 : 5): [ 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (4 : 5): [ 2 3 4 5 ]
indx = 1


indInf (3 : 5): [ 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (3 : 5): [ 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 5): [ 3 4 5 ]
indx = 1


indInf (2 : 5): [ 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 4
indInf (2 : 5): [ 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 5): [ 4 5 ]
indx = 1


indInf (1 : 5): [ 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 5
indInf (1 : 5): [ 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 5): [ 5 ]
indx = 1


indInf (0 : 5): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 5): [ ]
------------------------------ Fine setdiff_i

144: copia_v_indx_d	<=>	ris <- v[indx]
ris (5 : 5): [ 0 0 0 0 0 ]
indok (5 : 5): [ 1 2 3 4 5 ]


tmp_d1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine copia_v_indx_d

148: min_v_d	<=>	ris <- min(v)
tmp_d1 (5 : 5): [ 0 0 0 0 0 ]


min = 0
------------------------------ Fine min_v_d

149: assegna1_vs_indx_d	<=>	v[indx] <- val
ris (5 : 5): [ 0 0 0 0 0 ]
indInf (0 : 5): [ ]
val = -1


ris (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

159: somma_vv_d	<=>	ris <- v1 + v2
S_out (5 : 5): [ 0 0 0 0 0 ]
ris (5 : 5): [ 0 0 0 0 0 ]


tmp_d1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 1
tmp_d1 (5 : 5): [ 0 0 0 0 0 ]


ris (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_d

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (5 x 3 : 5 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 1


tmp_i1 (0 : 15): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (5 x 3 : 5 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 0


tmp_i2 (0 : 15): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 15): [ ]
tmp_i2 (0 : 15): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

119: InitVett_d
S_out (5 : 5): [ 0 0 0 0 0 ]
val = 0


S_out (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

122: InitVett_i
tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
val = 1


tmp_i1 (5 : 15): [ 1 1 1 1 1 ]
------------------------------ Fine InitVett_i

123: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 2
tmp_i1 (5 : 15): [ 1 1 1 1 1 ]


checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_i

128: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 0 0 0 0 ]
h (5 : 5): [ 1 2 3 4 5 ]


tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


ind (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


old1 (5 : 5): [ 5 5 5 5 5 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


old2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (5 : 5): [ 5 5 5 5 5 ]
s = -1


new1 (5 : 5): [ 4 4 4 4 4 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (5 : 5): [ 0 0 0 0 0 ]
s = 1


new2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


toll1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


toll2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (5 : 5): [ 5 5 5 5 5 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (5 : 5): [ 4 4 4 4 4 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
val = 0


S1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (5 : 5): [ 0 0 0 0 0 ]
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (5 : 5): [ 1 1 1 1 1 ]
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


tmpm_d (5 x 2 : 5 x 2): [
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
 ]


m (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

140: InitVett_d
S2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
val = 0


S2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
val = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 0 0 0 0 0 ]
ind (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (5 : 5): [ 0 0 0 0 0 ]
S2 (5 : 5): [ 0 0 0 0 0 ]


ris (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
ris (5 : 5): [ 0 0 0 0 0 ]
div = 2.000


ris (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (2428 interne); stringhe deallocate: 0 (2088 interne)

131: which_v_indxne_d	<=>	ris <- which(v != val)
ris (5 : 5): [ 0 0 0 0 0 ]
val = -1.#INF


indok (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxne_d

133: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkIN (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 2
indok (5 : 5): [ 1 2 3 4 5 ]
val = 1


checkIN (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_riga_indx_i

141: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 5
incr = 1


tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
------------------------------ Fine seq_i

142: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
indok (5 : 5): [ 1 2 3 4 5 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
st = 1
end = 5


indInf (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (5 : 5): [ 1 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (5 : 5): [ 1 2 3 4 5 ]
indx = 1


indInf (4 : 5): [ 2 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (4 : 5): [ 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (4 : 5): [ 2 3 4 5 ]
indx = 1


indInf (3 : 5): [ 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (3 : 5): [ 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 5): [ 3 4 5 ]
indx = 1


indInf (2 : 5): [ 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 4
indInf (2 : 5): [ 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 5): [ 4 5 ]
indx = 1


indInf (1 : 5): [ 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 5
indInf (1 : 5): [ 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 5): [ 5 ]
indx = 1


indInf (0 : 5): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 5): [ ]
------------------------------ Fine setdiff_i

144: copia_v_indx_d	<=>	ris <- v[indx]
ris (5 : 5): [ 0 0 0 0 0 ]
indok (5 : 5): [ 1 2 3 4 5 ]


tmp_d1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine copia_v_indx_d

148: min_v_d	<=>	ris <- min(v)
tmp_d1 (5 : 5): [ 0 0 0 0 0 ]


min = 0
------------------------------ Fine min_v_d

149: assegna1_vs_indx_d	<=>	v[indx] <- val
ris (5 : 5): [ 0 0 0 0 0 ]
indInf (0 : 5): [ ]
val = -1


ris (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

159: somma_vv_d	<=>	ris <- v1 + v2
S_out (5 : 5): [ 0 0 0 0 0 ]
ris (5 : 5): [ 0 0 0 0 0 ]


tmp_d1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 2
tmp_d1 (5 : 5): [ 0 0 0 0 0 ]


ris (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_d

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (5 x 3 : 5 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 1


tmp_i1 (0 : 15): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (5 x 3 : 5 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 0


tmp_i2 (0 : 15): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 15): [ ]
tmp_i2 (0 : 15): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

119: InitVett_d
S_out (5 : 5): [ 0 0 0 0 0 ]
val = 0


S_out (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

122: InitVett_i
tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
val = 1


tmp_i1 (5 : 15): [ 1 1 1 1 1 ]
------------------------------ Fine InitVett_i

123: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 3
tmp_i1 (5 : 15): [ 1 1 1 1 1 ]


checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_i

128: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 0 0 0 0 ]
h (5 : 5): [ 1 2 3 4 5 ]


tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


ind (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


old1 (5 : 5): [ 5 5 5 5 5 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


old2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (5 : 5): [ 5 5 5 5 5 ]
s = -1


new1 (5 : 5): [ 4 4 4 4 4 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (5 : 5): [ 0 0 0 0 0 ]
s = 1


new2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


toll1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


toll2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (5 : 5): [ 5 5 5 5 5 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (5 : 5): [ 4 4 4 4 4 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (5 : 5): [ 5.000000070923548 5 5 5 5 ]
val = 0


S1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (5 : 5): [ 0 0 0 0 0 ]
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (5 : 5): [ 1 1 1 1 1 ]
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


tmpm_d (5 x 2 : 5 x 2): [
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
 ]


m (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

140: InitVett_d
S2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
val = 0


S2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
val = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 0 0 0 0 0 ]
ind (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (5 : 5): [ 0 0 0 0 0 ]
S2 (5 : 5): [ 0 0 0 0 0 ]


ris (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
ris (5 : 5): [ 0 0 0 0 0 ]
div = 2.000


ris (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (2513 interne); stringhe deallocate: 0 (2173 interne)

131: which_v_indxne_d	<=>	ris <- which(v != val)
ris (5 : 5): [ 0 0 0 0 0 ]
val = -1.#INF


indok (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxne_d

133: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkIN (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 3
indok (5 : 5): [ 1 2 3 4 5 ]
val = 1


checkIN (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_riga_indx_i

141: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 5
incr = 1


tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
------------------------------ Fine seq_i

142: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
indok (5 : 5): [ 1 2 3 4 5 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
st = 1
end = 5


indInf (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (5 : 5): [ 1 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (5 : 5): [ 1 2 3 4 5 ]
indx = 1


indInf (4 : 5): [ 2 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (4 : 5): [ 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (4 : 5): [ 2 3 4 5 ]
indx = 1


indInf (3 : 5): [ 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (3 : 5): [ 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 5): [ 3 4 5 ]
indx = 1


indInf (2 : 5): [ 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 4
indInf (2 : 5): [ 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 5): [ 4 5 ]
indx = 1


indInf (1 : 5): [ 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 5
indInf (1 : 5): [ 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 5): [ 5 ]
indx = 1


indInf (0 : 5): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 5): [ ]
------------------------------ Fine setdiff_i

144: copia_v_indx_d	<=>	ris <- v[indx]
ris (5 : 5): [ 0 0 0 0 0 ]
indok (5 : 5): [ 1 2 3 4 5 ]


tmp_d1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine copia_v_indx_d

148: min_v_d	<=>	ris <- min(v)
tmp_d1 (5 : 5): [ 0 0 0 0 0 ]


min = 0
------------------------------ Fine min_v_d

149: assegna1_vs_indx_d	<=>	v[indx] <- val
ris (5 : 5): [ 0 0 0 0 0 ]
indInf (0 : 5): [ ]
val = -1


ris (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

159: somma_vv_d	<=>	ris <- v1 + v2
S_out (5 : 5): [ 0 0 0 0 0 ]
ris (5 : 5): [ 0 0 0 0 0 ]


tmp_d1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 3
tmp_d1 (5 : 5): [ 0 0 0 0 0 ]


ris (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_d

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (5 x 3 : 5 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 0


tmp_i1 (0 : 15): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (5 x 3 : 5 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 2


tmp_i2 (0 : 15): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 15): [ ]
tmp_i2 (0 : 15): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

92: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sout (5 : 5): [ 0 0 0 0 0 ]
h (5 : 5): [ 1 2 3 4 5 ]


tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 2


ind (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 2 2 2 2 2 ]
s = 1


tmp_i1 (5 : 5): [ 3 3 3 3 3 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (5 : 5): [ 3 3 3 3 3 ]


T2 (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


old1 (5 : 5): [ 5 5 5 5 5 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 2 2 2 2 2 ]
s = 1


tmp_i1 (5 : 5): [ 3 3 3 3 3 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 3 3 3 3 3 ]


old2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (5 : 5): [ 5 5 5 5 5 ]
s = -1


new1 (5 : 5): [ 4 4 4 4 4 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (5 : 5): [ 0 0 0 0 0 ]
s = 1


new2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


toll1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 2 2 2 2 2 ]
s = 1


tmp_i1 (5 : 5): [ 3 3 3 3 3 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 3 3 3 3 3 ]


toll2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (5 : 5): [ 5 5 5 5 5 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (5 : 5): [ 4 4 4 4 4 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (5 : 5): [ 5.000000070926433 5 5 5 5 ]
val = 0


S1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (5 : 5): [ 0 0 0 0 0 ]
T2 (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]


a (5 : 5): [ -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 ]


a (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (5 : 5): [ 1 1 1 1 1 ]
T2 (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]


b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]


b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]


tmpm_d (5 x 2 : 5 x 2): [
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
 ]


m (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
complemento = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxNA_d

115: assegna1_vs_indx_d	<=>	v[indx] <- val
a (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
ind (0 : 5): [ ]
val = 0


a (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
------------------------------ Fine assegna1_vs_indx_d

117: assegna1_vs_indx_d	<=>	v[indx] <- val
b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]
ind (0 : 5): [ ]
val = 0


b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine assegna1_vs_indx_d

119: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]


tmpm_d (5 x 2 : 5 x 2): [
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
 ]
------------------------------ Fine cbind2v_d

120: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
 ]


m (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
------------------------------ Fine max_righe_d

122: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]
m (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
T2 (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine f_aux_d

124: diff_vv_d	<=>	ris <- v1 - v2
a (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
toll2 (5 : 5): [ 1 1 1 1 1 ]


tmp_d1 (5 : 5): [ -0.2132755425131789 -0.2132755425131789 -0.2132755425131789 -0.2132755425131789 -0.2132755425131789 ]
------------------------------ Fine diff_vv_d

125: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (5 : 5): [ -0.2132755425131789 -0.2132755425131789 -0.2132755425131789 -0.2132755425131789 -0.2132755425131789 ]
val = 0

ind1 (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxlt_d

127: diff_vv_d	<=>	ris <- v1 - v2
b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]
toll2 (5 : 5): [ 1 1 1 1 1 ]


tmp_d1 (5 : 5): [ -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 ]
------------------------------ Fine diff_vv_d

128: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (5 : 5): [ -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 ]
val = 0


ind2 (0 : 5): [ ]
------------------------------ Fine which_v_indxgt_d

130: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (5 : 5): [ 1 2 3 4 5 ]
ind2 (0 : 5): [ ]
2459: esiste_v_i	<=>	elem %IN% v
elem = 1
ind2 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 1
tmp_i1 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 2
ind2 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 2
tmp_i1 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 3
ind2 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 3
tmp_i1 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 4
ind2 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 4
tmp_i1 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 5
ind2 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 5
tmp_i1 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i



tmp_i1 (0 : 5): [ ]
------------------------------ Fine interseca_i

132: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
tmp_i1 (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

134: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
ind (0 : 5): [ ]
val = 0


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
val = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
ind (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (5 : 5): [ 0 0 0 0 0 ]
S2 (5 : 5): [ 1 1 1 1 1 ]


S_out (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
S_out (5 : 5): [ 1 1 1 1 1 ]
div = 2.000


S_out (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (2613 interne); stringhe deallocate: 0 (2273 interne)

95: which_v_indxne_d	<=>	ris <- which(v != val)
S_out (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
val = -1.#INF


indok (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxne_d

97: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 4
indok (5 : 5): [ 1 2 3 4 5 ]
val = 1


checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_riga_indx_i

104: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 5
incr = 1


tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
------------------------------ Fine seq_i

105: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
indok (5 : 5): [ 1 2 3 4 5 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
st = 1
end = 5


indInf (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (5 : 5): [ 1 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (5 : 5): [ 1 2 3 4 5 ]
indx = 1


indInf (4 : 5): [ 2 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (4 : 5): [ 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (4 : 5): [ 2 3 4 5 ]
indx = 1


indInf (3 : 5): [ 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (3 : 5): [ 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 5): [ 3 4 5 ]
indx = 1


indInf (2 : 5): [ 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 4
indInf (2 : 5): [ 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 5): [ 4 5 ]
indx = 1


indInf (1 : 5): [ 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 5
indInf (1 : 5): [ 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 5): [ 5 ]
indx = 1


indInf (0 : 5): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 5): [ ]
------------------------------ Fine setdiff_i

107: copia_v_indx_d	<=>	ris <- v[indx]
S_out (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
indok (5 : 5): [ 1 2 3 4 5 ]


tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine copia_v_indx_d

111: min_v_d	<=>	ris <- min(v)
tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]


min = 0.5
------------------------------ Fine min_v_d

112: assegna1_vs_indx_d	<=>	v[indx] <- val
S_out (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
indInf (0 : 5): [ ]
val = -1


S_out (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine assegna1_vs_indx_d

155: InitVett_d
ris (5 : 5): [ 0 0 0 0 0 ]
val = 0


ris (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

156: aggiungi_ms_riga_i	<=>	m[riga,] <- val # riga <= dim(m)[0] + 1
checkIN (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 4, val = 1


checkIN (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_ms_riga_i

159: somma_vv_d	<=>	ris <- v1 + v2
S_out (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
ris (5 : 5): [ 0 0 0 0 0 ]


tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 4
tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]


ris (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0.5 0.5 0.5 0.5 0.5
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_d

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (5 x 3 : 5 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 0


tmp_i1 (0 : 15): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (5 x 3 : 5 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 2


tmp_i2 (0 : 15): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 15): [ ]
tmp_i2 (0 : 15): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

92: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sout (5 : 5): [ 0 0 0 0 0 ]
h (5 : 5): [ 1 2 3 4 5 ]


tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 2


ind (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 2 2 2 2 2 ]
s = 1


tmp_i1 (5 : 5): [ 3 3 3 3 3 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (5 : 5): [ 3 3 3 3 3 ]


T2 (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


old1 (5 : 5): [ 5 5 5 5 5 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 2 2 2 2 2 ]
s = 1


tmp_i1 (5 : 5): [ 3 3 3 3 3 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 3 3 3 3 3 ]


old2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (5 : 5): [ 5 5 5 5 5 ]
s = -1


new1 (5 : 5): [ 4 4 4 4 4 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (5 : 5): [ 0 0 0 0 0 ]
s = 1


new2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


toll1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 2 2 2 2 2 ]
s = 1


tmp_i1 (5 : 5): [ 3 3 3 3 3 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 3 3 3 3 3 ]


toll2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (5 : 5): [ 5 5 5 5 5 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (5 : 5): [ 4 4 4 4 4 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (5 : 5): [ 5.000000070923946 5 5 5 5 ]
val = 0


S1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (5 : 5): [ 0 0 0 0 0 ]
T2 (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]


a (5 : 5): [ -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 ]


a (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (5 : 5): [ 1 1 1 1 1 ]
T2 (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]


b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]


b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]


tmpm_d (5 x 2 : 5 x 2): [
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
 ]


m (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
complemento = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxNA_d

115: assegna1_vs_indx_d	<=>	v[indx] <- val
a (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
ind (0 : 5): [ ]
val = 0


a (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
------------------------------ Fine assegna1_vs_indx_d

117: assegna1_vs_indx_d	<=>	v[indx] <- val
b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]
ind (0 : 5): [ ]
val = 0


b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine assegna1_vs_indx_d

119: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]


tmpm_d (5 x 2 : 5 x 2): [
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
 ]
------------------------------ Fine cbind2v_d

120: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
 ]


m (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
------------------------------ Fine max_righe_d

122: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]
m (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
T2 (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine f_aux_d

124: diff_vv_d	<=>	ris <- v1 - v2
a (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
toll2 (5 : 5): [ 1 1 1 1 1 ]


tmp_d1 (5 : 5): [ -0.2132755425131789 -0.2132755425131789 -0.2132755425131789 -0.2132755425131789 -0.2132755425131789 ]
------------------------------ Fine diff_vv_d

125: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (5 : 5): [ -0.2132755425131789 -0.2132755425131789 -0.2132755425131789 -0.2132755425131789 -0.2132755425131789 ]
val = 0

ind1 (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxlt_d

127: diff_vv_d	<=>	ris <- v1 - v2
b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]
toll2 (5 : 5): [ 1 1 1 1 1 ]


tmp_d1 (5 : 5): [ -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 ]
------------------------------ Fine diff_vv_d

128: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (5 : 5): [ -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 ]
val = 0


ind2 (0 : 5): [ ]
------------------------------ Fine which_v_indxgt_d

130: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (5 : 5): [ 1 2 3 4 5 ]
ind2 (0 : 5): [ ]
2459: esiste_v_i	<=>	elem %IN% v
elem = 1
ind2 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 1
tmp_i1 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 2
ind2 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 2
tmp_i1 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 3
ind2 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 3
tmp_i1 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 4
ind2 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 4
tmp_i1 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 5
ind2 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 5
tmp_i1 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i



tmp_i1 (0 : 5): [ ]
------------------------------ Fine interseca_i

132: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
tmp_i1 (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

134: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
ind (0 : 5): [ ]
val = 0


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
val = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
ind (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (5 : 5): [ 0 0 0 0 0 ]
S2 (5 : 5): [ 1 1 1 1 1 ]


S_out (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
S_out (5 : 5): [ 1 1 1 1 1 ]
div = 2.000


S_out (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (2713 interne); stringhe deallocate: 0 (2373 interne)

95: which_v_indxne_d	<=>	ris <- which(v != val)
S_out (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
val = -1.#INF


indok (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxne_d

97: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 0 0 0 0 0
 ]
riga = 5
indok (5 : 5): [ 1 2 3 4 5 ]
val = 1


checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
------------------------------ Fine aggiungi_riga_indx_i

104: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 5
incr = 1


tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
------------------------------ Fine seq_i

105: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
indok (5 : 5): [ 1 2 3 4 5 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
st = 1
end = 5


indInf (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (5 : 5): [ 1 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (5 : 5): [ 1 2 3 4 5 ]
indx = 1


indInf (4 : 5): [ 2 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (4 : 5): [ 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (4 : 5): [ 2 3 4 5 ]
indx = 1


indInf (3 : 5): [ 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (3 : 5): [ 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 5): [ 3 4 5 ]
indx = 1


indInf (2 : 5): [ 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 4
indInf (2 : 5): [ 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 5): [ 4 5 ]
indx = 1


indInf (1 : 5): [ 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 5
indInf (1 : 5): [ 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 5): [ 5 ]
indx = 1


indInf (0 : 5): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 5): [ ]
------------------------------ Fine setdiff_i

107: copia_v_indx_d	<=>	ris <- v[indx]
S_out (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
indok (5 : 5): [ 1 2 3 4 5 ]


tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine copia_v_indx_d

111: min_v_d	<=>	ris <- min(v)
tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]


min = 0.5
------------------------------ Fine min_v_d

112: assegna1_vs_indx_d	<=>	v[indx] <- val
S_out (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
indInf (0 : 5): [ ]
val = -1


S_out (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine assegna1_vs_indx_d

155: InitVett_d
ris (5 : 5): [ 0 0 0 0 0 ]
val = 0


ris (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

156: aggiungi_ms_riga_i	<=>	m[riga,] <- val # riga <= dim(m)[0] + 1
checkIN (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 0 0 0 0 0
 ]
riga = 5, val = 1


checkIN (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
------------------------------ Fine aggiungi_ms_riga_i

159: somma_vv_d	<=>	ris <- v1 + v2
S_out (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
ris (5 : 5): [ 0 0 0 0 0 ]


tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0.5 0.5 0.5 0.5 0.5
	 0 0 0 0 0
 ]
riga = 5
tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]


ris (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0.5 0.5 0.5 0.5 0.5
	 0.5 0.5 0.5 0.5 0.5
 ]
------------------------------ Fine aggiungi_mv_riga_d

168: somma_m_d	<=>	ris <- sum(m)
ris (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0.5 0.5 0.5 0.5 0.5
	 0.5 0.5 0.5 0.5 0.5
 ]


ris: 5
------------------------------ Fine somma_m_d

173: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
checkIN (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]


aus (5 : 5): [ 5 5 5 5 5 ]
------------------------------ Fine somma_colonne_i

175: which_v_indxne_i	<=>	ris <- which(v != val)
aus (5 : 5): [ 5 5 5 5 5 ]
val = 0


tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxne_i

186: somma_righe_i	<=>	ris <- apply(m, 1, sum)
checkIN (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]


rs (5 : 5): [ 5 5 5 5 5 ]
------------------------------ Fine somma_righe_i

188: ordine_i	<=>	ris <- order(v, decreasing=decr)
rs (5 : 5): [ 5 5 5 5 5 ]
decr = 0


ord_ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine ordine_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
r = 1
val = 0


I_add (5 : 25): [ 1 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
I (0 : 0): [ ]
I_add (5 : 25): [ 1 2 3 4 5 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (5 : 5): [ 1 2 3 4 5 ]


ris (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine unione1_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
r = 2
val = 0


I_add (5 : 25): [ 1 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
ris (5 : 5): [ 1 2 3 4 5 ]
I_add (5 : 25): [ 1 2 3 4 5 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (10 : 10): [ 1 2 3 4 5 1 2 3 4 5 ]


ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine unione1_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
r = 3
val = 0


I_add (5 : 25): [ 1 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
ris (5 : 10): [ 1 2 3 4 5 ]
I_add (5 : 25): [ 1 2 3 4 5 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (10 : 10): [ 1 2 3 4 5 1 2 3 4 5 ]


ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine unione1_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
r = 4
val = 0


I_add (5 : 25): [ 1 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
ris (5 : 10): [ 1 2 3 4 5 ]
I_add (5 : 25): [ 1 2 3 4 5 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (10 : 10): [ 1 2 3 4 5 1 2 3 4 5 ]


ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine unione1_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
r = 5
val = 0


I_add (5 : 25): [ 1 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
ris (5 : 10): [ 1 2 3 4 5 ]
I_add (5 : 25): [ 1 2 3 4 5 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (10 : 10): [ 1 2 3 4 5 1 2 3 4 5 ]


ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine unione1_i

216: assegna1_mindxlt_i	<=>	m1[which(m2<val1)] <- val2
checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
val1 = 0
val2 = 0


checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
------------------------------ Fine assegna1_mindxlt_i

218: assegna1_m_indxgt_i	<=>	m1[which(m2>val1)] <- val2
checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
val1 = 0
val2 = 1


checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
------------------------------ Fine assegna1_m_indxgt_i

220: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]


aus (5 : 5): [ 5 5 5 5 5 ]
------------------------------ Fine somma_colonne_i

222: which_v_indxne_i	<=>	ris <- which(v != val)
aus (5 : 5): [ 5 5 5 5 5 ]
val = 0


tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxne_i

232: somma_righe_i	<=>	ris <- apply(m, 1, sum)
checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]


rs (5 : 5): [ 5 5 5 5 5 ]
------------------------------ Fine somma_righe_i

234: ordine_i	<=>	ris <- order(v, decreasing=decr)
rs (5 : 5): [ 5 5 5 5 5 ]
decr = 0


ord_ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine ordine_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
r = 1
val = 0


I_add (5 : 25): [ 1 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (0 : 10): [ ]
I_add (5 : 25): [ 1 2 3 4 5 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (5 : 5): [ 1 2 3 4 5 ]


ris (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine unione1_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
r = 2
val = 0


I_add (5 : 25): [ 1 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (5 : 5): [ 1 2 3 4 5 ]
I_add (5 : 25): [ 1 2 3 4 5 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (10 : 10): [ 1 2 3 4 5 1 2 3 4 5 ]


ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine unione1_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
r = 3
val = 0


I_add (5 : 25): [ 1 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (5 : 10): [ 1 2 3 4 5 ]
I_add (5 : 25): [ 1 2 3 4 5 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (10 : 10): [ 1 2 3 4 5 1 2 3 4 5 ]


ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine unione1_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
r = 4
val = 0


I_add (5 : 25): [ 1 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (5 : 10): [ 1 2 3 4 5 ]
I_add (5 : 25): [ 1 2 3 4 5 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (10 : 10): [ 1 2 3 4 5 1 2 3 4 5 ]


ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine unione1_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
r = 5
val = 0


I_add (5 : 25): [ 1 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (5 : 10): [ 1 2 3 4 5 ]
I_add (5 : 25): [ 1 2 3 4 5 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (10 : 10): [ 1 2 3 4 5 1 2 3 4 5 ]


ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine unione1_i


Stringhe allocate: 5 (2838 interne); stringhe deallocate: 0 (2573 interne)

90: seq_i	<=>	ris <- seq(da, a, incr)
da = 4
a = 5
incr = 1


ris->indices (2 : 2): [ 4 5 ]
------------------------------ Fine seq_i


Stringhe allocate: 5 (2843 interne); stringhe deallocate: 0 (2588 interne)

143: vettore3s_d		<=>	ris <- c(el1, el2, el3)
el1 = 2.5, el2 = 0.8333333333333334, el3 = 1


prob_mod (3 : 3): [ 2.5 0.8333333333333334 1 ]
------------------------------ Fine vettore3s_d

145: assegna1_v_indxeq_d	<=>	v[which(v==val1)] <- val2
prob_mod (3 : 3): [ 2.5 0.8333333333333334 1 ]
prob_mod (3 : 3): [ 2.5 0.8333333333333334 1 ]
val1 = 0
val2 = 1.#QNAN


prob_mod (3 : 3): [ 2.5 0.8333333333333334 1 ]
------------------------------ Fine assegna1_v_indxeq_d

147: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
prob_mod (3 : 3): [ 2.5 0.8333333333333334 1 ]
complemento = 1


ind (3 : 3): [ 1 2 3 ]
------------------------------ Fine which_v_indxNA_d

153: copia_v_indx_d	<=>	ris <- v[indx]
prob_mod (3 : 3): [ 2.5 0.8333333333333334 1 ]
ind (3 : 3): [ 1 2 3 ]


tmp1_d (3 : 16): [ 2.5 0.8333333333333334 1 ]
------------------------------ Fine copia_v_indx_d

154: min_v_d	<=>	ris <- min(v)
tmp1_d (3 : 16): [ 2.5 0.8333333333333334 1 ]


min = 0.8333333333333334
------------------------------ Fine min_v_d

160: assegna1_v_indxNA_d	<=>	v1[which(is.na(v2))] <- val oppure v1[which(!is.na(v2))] <- val
prob_mod (3 : 3): [ 2.5 0.8333333333333334 1 ]
prob_mod (3 : 3): [ 2.5 0.8333333333333334 1 ]
val = 0
complemento = 0


prob_mod (3 : 3): [ 2.5 0.8333333333333334 1 ]
------------------------------ Fine assegna1_v_indxNA_d

162: somma_v_d	<=>	ris <- sum(v, na.rm=canc_NA)
prob_mod (3 : 3): [ 2.5 0.8333333333333334 1 ]
canc_NA = 0



ris: 4.333333333333334
------------------------------ Fine somma_v_d

162: dividi1_vs_d	<=>	v <- v / div
prob_mod (3 : 3): [ 2.5 0.8333333333333334 1 ]
div = 4.333


prob_mod (3 : 3): [ 0.5769230769230769 0.1923076923076923 0.2307692307692307 ]
------------------------------ Fine dividi1_vs_d

164: vettore3s_i		<=>	ris <- c(el1, el2, el3)
el1 = 1, el2 = 2, el3 = 3


tmp1_i (3 : 3): [ 1 2 3 ]
------------------------------ Fine vettore3s_i


*** sampleB_p ***

*** sample_p ***
tmp1_i (3 : 3): [ 1 2 3 ]
k = 1, replace = 0
prob_mod (3 : 3): [ 0.5769230769230769 0.1923076923076923 0.2307692307692307 ]


ris (1 : 1): [ 3 ]
*****************************************


Stringhe allocate: 5 (2863 interne); stringhe deallocate: 0 (2588 interne)


*** assign_nodes ***
35: copia_v_i	<=>	ris[st:end] <- v[st:end]
h (5 : 5): [ 1 2 3 4 5 ]
st = 1
end = 5


or_h (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine copia_v_i

37: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 5
incr = 1


aus_h (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine seq_i

43: InitVett_i
index (5 : 5): [ 79858648 2 3 4 5 ]
val = 0


index (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_i

45: somma_righe_i	<=>	ris <- apply(m, 1, sum)
ris (5 x 5 : 5 x 5): [
	 0 0 0 1 1
	 0 0 0 1 0
	 0 0 0 0 1
	 0 0 0 0 0
	 0 0 0 0 0
 ]


M_in (5 : 5): [ 2 1 1 0 0 ]
------------------------------ Fine somma_righe_i

47: ordine_i	<=>	ris <- order(v, decreasing=decr)
M_in (5 : 5): [ 2 1 1 0 0 ]
decr = 1


Ord (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine ordine_i

52: riga_d	<=>	ris <- m[r,]
ris (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0.5 0.5 0.5 0.5 0.5
	 0.5 0.5 0.5 0.5 0.5
 ]
r = 1

p (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine riga_d

54: which_v_indxle_d	<=>	ris <- which(v<=val)
p (5 : 5): [ 0 0 0 0 0 ]
val = 0


tmp_i (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxle_d

57: min_v_d	<=>	ris <- min(v)
p (5 : 5): [ 0 0 0 0 0 ]


min = 0
------------------------------ Fine min_v_d

58: somma1_vs_d	<=>	v <- v + s
p (5 : 5): [ 0 0 0 0 0 ]
s = 0.04


p (5 : 5): [ 0.04 0.04 0.04 0.04 0.04 ]
------------------------------ Fine somma1_vs_d

61: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 0 0 0 0 ]
h (5 : 5): [ 1 2 3 4 5 ]


Sin_h (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_i

66: which_v_indxgt_i	<=>	ris <- which(v > val)
Sin_h (5 : 5): [ 0 0 0 0 0 ]
val = 3


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxgt_i

72: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
p (5 : 5): [ 0.04 0.04 0.04 0.04 0.04 ]
aus_h (5 : 5): [ 1 2 3 4 5 ]


tmp_d (5 : 5): [ 0.04 0.04 0.04 0.04 0.04 ]
------------------------------ Fine assegna_v_indxNA_d

73: somma_v_d	<=>	ris <- sum(v, na.rm=canc_NA)
tmp_d (5 : 5): [ 0.04 0.04 0.04 0.04 0.04 ]
canc_NA = 0



ris: 0.2
------------------------------ Fine somma_v_d

74: dividi_vs_d	ris <- v / div
tmp_d (5 : 5): [ 0.04 0.04 0.04 0.04 0.04 ]
div = 0.200


p (5 : 5): [ 0.2 0.2 0.2 0.2 0.2 ]
------------------------------ Fine dividi_vs_d


*** sampleB_p ***

*** sample_p ***
h (5 : 5): [ 1 2 3 4 5 ]
k = 1, replace = 0
p (5 : 5): [ 0.2 0.2 0.2 0.2 0.2 ]


ris (1 : 1): [ 5 ]
*****************************************


Stringhe allocate: 5 (2923 interne); stringhe deallocate: 0 (2588 interne)

81: setdiff1_i	<=>	v1 <- setdiff(v1, v2)
h (5 : 5): [ 1 2 3 4 5 ]
ris (1 : 1): [ 5 ]
2048: esiste_v_i	<=>	elem %IN% v
elem = 5
h (5 : 5): [ 1 2 3 4 5 ]


indx = 5
------------------------------ Fine esiste_v_i

2050: elimina1_indx_i	<=>	v <- v[-indx]
h (5 : 5): [ 1 2 3 4 5 ]
indx = 5


h (4 : 5): [ 1 2 3 4 ]
------------------------------ Fine elimina1_indx_i



h (4 : 5): [ 1 2 3 4 ]
------------------------------ Fine setdiff1_i

83: which_vv_eq_i	<=>	ris <- which(v1 == v2)
or_h (5 : 5): [ 1 2 3 4 5 ]
ris (1 : 1): [ 5 ]
2017: esiste_v_i	<=>	elem %IN% v
elem = 5
or_h (5 : 5): [ 1 2 3 4 5 ]


indx = 5
------------------------------ Fine esiste_v_i



tmp_i (1 : 5): [ 5 ]
------------------------------ Fine which_vv_eq_i

84: setdiff1_i	<=>	v1 <- setdiff(v1, v2)
aus_h (5 : 5): [ 1 2 3 4 5 ]
tmp_i (1 : 5): [ 5 ]
2048: esiste_v_i	<=>	elem %IN% v
elem = 5
aus_h (5 : 5): [ 1 2 3 4 5 ]


indx = 5
------------------------------ Fine esiste_v_i

2050: elimina1_indx_i	<=>	v <- v[-indx]
aus_h (5 : 5): [ 1 2 3 4 5 ]
indx = 5


aus_h (4 : 5): [ 1 2 3 4 ]
------------------------------ Fine elimina1_indx_i



aus_h (4 : 5): [ 1 2 3 4 ]
------------------------------ Fine setdiff1_i

52: riga_d	<=>	ris <- m[r,]
ris (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0.5 0.5 0.5 0.5 0.5
	 0.5 0.5 0.5 0.5 0.5
 ]
r = 2

p (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine riga_d

54: which_v_indxle_d	<=>	ris <- which(v<=val)
p (5 : 5): [ 0 0 0 0 0 ]
val = 0


tmp_i (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxle_d

57: min_v_d	<=>	ris <- min(v)
p (5 : 5): [ 0 0 0 0 0 ]


min = 0
------------------------------ Fine min_v_d

58: somma1_vs_d	<=>	v <- v + s
p (5 : 5): [ 0 0 0 0 0 ]
s = 0.04


p (5 : 5): [ 0.04 0.04 0.04 0.04 0.04 ]
------------------------------ Fine somma1_vs_d

61: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 0 0 0 0 ]
h (4 : 5): [ 1 2 3 4 ]


Sin_h (4 : 5): [ 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_i

66: which_v_indxgt_i	<=>	ris <- which(v > val)
Sin_h (4 : 5): [ 0 0 0 0 ]
val = 4


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxgt_i

72: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
p (5 : 5): [ 0.04 0.04 0.04 0.04 0.04 ]
aus_h (4 : 5): [ 1 2 3 4 ]


tmp_d (4 : 5): [ 0.04 0.04 0.04 0.04 ]
------------------------------ Fine assegna_v_indxNA_d

73: somma_v_d	<=>	ris <- sum(v, na.rm=canc_NA)
tmp_d (4 : 5): [ 0.04 0.04 0.04 0.04 ]
canc_NA = 0



ris: 0.16
------------------------------ Fine somma_v_d

74: dividi_vs_d	ris <- v / div
tmp_d (4 : 5): [ 0.04 0.04 0.04 0.04 ]
div = 0.160


p (4 : 5): [ 0.25 0.25 0.25 0.25 ]
------------------------------ Fine dividi_vs_d


*** sampleB_p ***

*** sample_p ***
h (4 : 5): [ 1 2 3 4 ]
k = 1, replace = 0
p (4 : 5): [ 0.25 0.25 0.25 0.25 ]


ris (1 : 1): [ 3 ]
*****************************************


Stringhe allocate: 5 (2923 interne); stringhe deallocate: 0 (2588 interne)

81: setdiff1_i	<=>	v1 <- setdiff(v1, v2)
h (4 : 5): [ 1 2 3 4 ]
ris (1 : 1): [ 3 ]
2048: esiste_v_i	<=>	elem %IN% v
elem = 3
h (4 : 5): [ 1 2 3 4 ]


indx = 3
------------------------------ Fine esiste_v_i

2050: elimina1_indx_i	<=>	v <- v[-indx]
h (4 : 5): [ 1 2 3 4 ]
indx = 3


h (3 : 5): [ 1 2 4 ]
------------------------------ Fine elimina1_indx_i



h (3 : 5): [ 1 2 4 ]
------------------------------ Fine setdiff1_i

83: which_vv_eq_i	<=>	ris <- which(v1 == v2)
or_h (5 : 5): [ 1 2 3 4 5 ]
ris (1 : 1): [ 3 ]
2017: esiste_v_i	<=>	elem %IN% v
elem = 3
or_h (5 : 5): [ 1 2 3 4 5 ]


indx = 3
------------------------------ Fine esiste_v_i



tmp_i (1 : 5): [ 3 ]
------------------------------ Fine which_vv_eq_i

84: setdiff1_i	<=>	v1 <- setdiff(v1, v2)
aus_h (4 : 5): [ 1 2 3 4 ]
tmp_i (1 : 5): [ 3 ]
2048: esiste_v_i	<=>	elem %IN% v
elem = 3
aus_h (4 : 5): [ 1 2 3 4 ]


indx = 3
------------------------------ Fine esiste_v_i

2050: elimina1_indx_i	<=>	v <- v[-indx]
aus_h (4 : 5): [ 1 2 3 4 ]
indx = 3


aus_h (3 : 5): [ 1 2 4 ]
------------------------------ Fine elimina1_indx_i



aus_h (3 : 5): [ 1 2 4 ]
------------------------------ Fine setdiff1_i

52: riga_d	<=>	ris <- m[r,]
ris (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0.5 0.5 0.5 0.5 0.5
	 0.5 0.5 0.5 0.5 0.5
 ]
r = 3

p (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine riga_d

54: which_v_indxle_d	<=>	ris <- which(v<=val)
p (5 : 5): [ 0 0 0 0 0 ]
val = 0


tmp_i (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxle_d

57: min_v_d	<=>	ris <- min(v)
p (5 : 5): [ 0 0 0 0 0 ]


min = 0
------------------------------ Fine min_v_d

58: somma1_vs_d	<=>	v <- v + s
p (5 : 5): [ 0 0 0 0 0 ]
s = 0.04


p (5 : 5): [ 0.04 0.04 0.04 0.04 0.04 ]
------------------------------ Fine somma1_vs_d

61: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 0 0 0 0 ]
h (3 : 5): [ 1 2 4 ]


Sin_h (3 : 5): [ 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_i

66: which_v_indxgt_i	<=>	ris <- which(v > val)
Sin_h (3 : 5): [ 0 0 0 ]
val = 4


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxgt_i

72: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
p (5 : 5): [ 0.04 0.04 0.04 0.04 0.04 ]
aus_h (3 : 5): [ 1 2 4 ]


tmp_d (3 : 5): [ 0.04 0.04 0.04 ]
------------------------------ Fine assegna_v_indxNA_d

73: somma_v_d	<=>	ris <- sum(v, na.rm=canc_NA)
tmp_d (3 : 5): [ 0.04 0.04 0.04 ]
canc_NA = 0



ris: 0.12
------------------------------ Fine somma_v_d

74: dividi_vs_d	ris <- v / div
tmp_d (3 : 5): [ 0.04 0.04 0.04 ]
div = 0.120


p (3 : 5): [ 0.3333333333333334 0.3333333333333334 0.3333333333333334 ]
------------------------------ Fine dividi_vs_d


*** sampleB_p ***

*** sample_p ***
h (3 : 5): [ 1 2 4 ]
k = 1, replace = 0
p (3 : 5): [ 0.3333333333333334 0.3333333333333334 0.3333333333333334 ]


ris (1 : 1): [ 4 ]
*****************************************


Stringhe allocate: 5 (2923 interne); stringhe deallocate: 0 (2588 interne)

81: setdiff1_i	<=>	v1 <- setdiff(v1, v2)
h (3 : 5): [ 1 2 4 ]
ris (1 : 1): [ 4 ]
2048: esiste_v_i	<=>	elem %IN% v
elem = 4
h (3 : 5): [ 1 2 4 ]


indx = 3
------------------------------ Fine esiste_v_i

2050: elimina1_indx_i	<=>	v <- v[-indx]
h (3 : 5): [ 1 2 4 ]
indx = 3


h (2 : 5): [ 1 2 ]
------------------------------ Fine elimina1_indx_i



h (2 : 5): [ 1 2 ]
------------------------------ Fine setdiff1_i

83: which_vv_eq_i	<=>	ris <- which(v1 == v2)
or_h (5 : 5): [ 1 2 3 4 5 ]
ris (1 : 1): [ 4 ]
2017: esiste_v_i	<=>	elem %IN% v
elem = 4
or_h (5 : 5): [ 1 2 3 4 5 ]


indx = 4
------------------------------ Fine esiste_v_i



tmp_i (1 : 5): [ 4 ]
------------------------------ Fine which_vv_eq_i

84: setdiff1_i	<=>	v1 <- setdiff(v1, v2)
aus_h (3 : 5): [ 1 2 4 ]
tmp_i (1 : 5): [ 4 ]
2048: esiste_v_i	<=>	elem %IN% v
elem = 4
aus_h (3 : 5): [ 1 2 4 ]


indx = 3
------------------------------ Fine esiste_v_i

2050: elimina1_indx_i	<=>	v <- v[-indx]
aus_h (3 : 5): [ 1 2 4 ]
indx = 3


aus_h (2 : 5): [ 1 2 ]
------------------------------ Fine elimina1_indx_i



aus_h (2 : 5): [ 1 2 ]
------------------------------ Fine setdiff1_i

52: riga_d	<=>	ris <- m[r,]
ris (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0.5 0.5 0.5 0.5 0.5
	 0.5 0.5 0.5 0.5 0.5
 ]
r = 4

p (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine riga_d

54: which_v_indxle_d	<=>	ris <- which(v<=val)
p (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
val = 0


tmp_i (0 : 5): [ ]
------------------------------ Fine which_v_indxle_d

61: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 0 0 0 0 ]
h (2 : 5): [ 1 2 ]


Sin_h (2 : 5): [ 0 0 ]
------------------------------ Fine assegna_v_indxNA_i

66: which_v_indxgt_i	<=>	ris <- which(v > val)
Sin_h (2 : 5): [ 0 0 ]
val = 5


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxgt_i

72: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
p (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
aus_h (2 : 5): [ 1 2 ]


tmp_d (2 : 5): [ 0.5 0.5 ]
------------------------------ Fine assegna_v_indxNA_d

73: somma_v_d	<=>	ris <- sum(v, na.rm=canc_NA)
tmp_d (2 : 5): [ 0.5 0.5 ]
canc_NA = 0



ris: 1
------------------------------ Fine somma_v_d

74: dividi_vs_d	ris <- v / div
tmp_d (2 : 5): [ 0.5 0.5 ]
div = 1.000


p (2 : 5): [ 0.5 0.5 ]
------------------------------ Fine dividi_vs_d


*** sampleB_p ***

*** sample_p ***
h (2 : 5): [ 1 2 ]
k = 1, replace = 0
p (2 : 5): [ 0.5 0.5 ]


ris (1 : 1): [ 1 ]
*****************************************


Stringhe allocate: 5 (2923 interne); stringhe deallocate: 0 (2588 interne)

81: setdiff1_i	<=>	v1 <- setdiff(v1, v2)
h (2 : 5): [ 1 2 ]
ris (1 : 1): [ 1 ]
2048: esiste_v_i	<=>	elem %IN% v
elem = 1
h (2 : 5): [ 1 2 ]


indx = 1
------------------------------ Fine esiste_v_i

2050: elimina1_indx_i	<=>	v <- v[-indx]
h (2 : 5): [ 1 2 ]
indx = 1


h (1 : 5): [ 2 ]
------------------------------ Fine elimina1_indx_i



h (1 : 5): [ 2 ]
------------------------------ Fine setdiff1_i

83: which_vv_eq_i	<=>	ris <- which(v1 == v2)
or_h (5 : 5): [ 1 2 3 4 5 ]
ris (1 : 1): [ 1 ]
2017: esiste_v_i	<=>	elem %IN% v
elem = 1
or_h (5 : 5): [ 1 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i



tmp_i (1 : 5): [ 1 ]
------------------------------ Fine which_vv_eq_i

84: setdiff1_i	<=>	v1 <- setdiff(v1, v2)
aus_h (2 : 5): [ 1 2 ]
tmp_i (1 : 5): [ 1 ]
2048: esiste_v_i	<=>	elem %IN% v
elem = 1
aus_h (2 : 5): [ 1 2 ]


indx = 1
------------------------------ Fine esiste_v_i

2050: elimina1_indx_i	<=>	v <- v[-indx]
aus_h (2 : 5): [ 1 2 ]
indx = 1


aus_h (1 : 5): [ 2 ]
------------------------------ Fine elimina1_indx_i



aus_h (1 : 5): [ 2 ]
------------------------------ Fine setdiff1_i

52: riga_d	<=>	ris <- m[r,]
ris (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0.5 0.5 0.5 0.5 0.5
	 0.5 0.5 0.5 0.5 0.5
 ]
r = 5

p (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine riga_d

54: which_v_indxle_d	<=>	ris <- which(v<=val)
p (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
val = 0


tmp_i (0 : 5): [ ]
------------------------------ Fine which_v_indxle_d

61: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 0 0 0 0 ]
h (1 : 5): [ 2 ]


Sin_h (1 : 5): [ 0 ]
------------------------------ Fine assegna_v_indxNA_i

66: which_v_indxgt_i	<=>	ris <- which(v > val)
Sin_h (1 : 5): [ 0 ]
val = 5


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxgt_i

72: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
p (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
aus_h (1 : 5): [ 2 ]


tmp_d (1 : 5): [ 0.5 ]
------------------------------ Fine assegna_v_indxNA_d

73: somma_v_d	<=>	ris <- sum(v, na.rm=canc_NA)
tmp_d (1 : 5): [ 0.5 ]
canc_NA = 0



ris: 0.5
------------------------------ Fine somma_v_d

74: dividi_vs_d	ris <- v / div
tmp_d (1 : 5): [ 0.5 ]
div = 0.500


p (1 : 5): [ 1 ]
------------------------------ Fine dividi_vs_d


*** sampleB_p ***
25: rep_v_i	<=>	ris <- rep(v, rip)
h (1 : 5): [ 2 ]
rip = 1


ris (1 : 1): [ 2 ]
------------------------------ Fine rep_v_i

81: setdiff1_i	<=>	v1 <- setdiff(v1, v2)
h (1 : 5): [ 2 ]
ris (1 : 1): [ 2 ]
2048: esiste_v_i	<=>	elem %IN% v
elem = 2
h (1 : 5): [ 2 ]


indx = 1
------------------------------ Fine esiste_v_i

2050: elimina1_indx_i	<=>	v <- v[-indx]
h (1 : 5): [ 2 ]
indx = 1


h (0 : 5): [ ]
------------------------------ Fine elimina1_indx_i



h (0 : 5): [ ]
------------------------------ Fine setdiff1_i

83: which_vv_eq_i	<=>	ris <- which(v1 == v2)
or_h (5 : 5): [ 1 2 3 4 5 ]
ris (1 : 1): [ 2 ]
2017: esiste_v_i	<=>	elem %IN% v
elem = 2
or_h (5 : 5): [ 1 2 3 4 5 ]


indx = 2
------------------------------ Fine esiste_v_i



tmp_i (1 : 5): [ 2 ]
------------------------------ Fine which_vv_eq_i

84: setdiff1_i	<=>	v1 <- setdiff(v1, v2)
aus_h (1 : 5): [ 2 ]
tmp_i (1 : 5): [ 2 ]
2048: esiste_v_i	<=>	elem %IN% v
elem = 2
aus_h (1 : 5): [ 2 ]


indx = 1
------------------------------ Fine esiste_v_i

2050: elimina1_indx_i	<=>	v <- v[-indx]
aus_h (1 : 5): [ 2 ]
indx = 1


aus_h (0 : 5): [ ]
------------------------------ Fine elimina1_indx_i



aus_h (0 : 5): [ ]
------------------------------ Fine setdiff1_i

101: which_m_rowindxeq_i	<=>	ris <- which(m[r,] == val)
ris (5 x 5 : 5 x 5): [
	 0 0 0 1 1
	 0 0 0 1 0
	 0 0 0 0 1
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 1
val = 1


ind (2 : 35): [ 4 5 ]
------------------------------ Fine which_m_rowindxeq_i

103: copia_v_indx_i	<=>	ris <- v[indx]
index (5 : 5): [ 5 3 4 1 2 ]
ind (2 : 35): [ 4 5 ]


co (2 : 2): [ 1 2 ]
------------------------------ Fine copia_v_indx_i

105: assegna1_m_vv_i	<=>	m[vr, vc] <- val
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
ri (1 : 1): [ 5 ]
co (2 : 2): [ 1 2 ]
val = 1


Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 1 1 0 0 0
 ]
------------------------------ Fine assegna1_m_vv_i

107: esiste_v_i	<=>	elem %IN% v
elem = 1
ris->indices (2 : 2): [ 4 5 ]


indx = 0
------------------------------ Fine esiste_v_i

101: which_m_rowindxeq_i	<=>	ris <- which(m[r,] == val)
ris (5 x 5 : 5 x 5): [
	 0 0 0 1 1
	 0 0 0 1 0
	 0 0 0 0 1
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 2
val = 1


ind (1 : 35): [ 4 ]
------------------------------ Fine which_m_rowindxeq_i

103: copia_v_indx_i	<=>	ris <- v[indx]
index (5 : 5): [ 5 3 4 1 2 ]
ind (1 : 35): [ 4 ]


co (1 : 2): [ 1 ]
------------------------------ Fine copia_v_indx_i

105: assegna1_m_vv_i	<=>	m[vr, vc] <- val
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 1 1 0 0 0
 ]
ri (1 : 1): [ 3 ]
co (1 : 2): [ 1 ]
val = 1


Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 1 0 0 0 0
	 0 0 0 0 0
	 1 1 0 0 0
 ]
------------------------------ Fine assegna1_m_vv_i

107: esiste_v_i	<=>	elem %IN% v
elem = 2
ris->indices (2 : 2): [ 4 5 ]


indx = 0
------------------------------ Fine esiste_v_i

101: which_m_rowindxeq_i	<=>	ris <- which(m[r,] == val)
ris (5 x 5 : 5 x 5): [
	 0 0 0 1 1
	 0 0 0 1 0
	 0 0 0 0 1
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 3
val = 1


ind (1 : 35): [ 5 ]
------------------------------ Fine which_m_rowindxeq_i

103: copia_v_indx_i	<=>	ris <- v[indx]
index (5 : 5): [ 5 3 4 1 2 ]
ind (1 : 35): [ 5 ]


co (1 : 2): [ 2 ]
------------------------------ Fine copia_v_indx_i

105: assegna1_m_vv_i	<=>	m[vr, vc] <- val
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 1 0 0 0 0
	 0 0 0 0 0
	 1 1 0 0 0
 ]
ri (1 : 1): [ 4 ]
co (1 : 2): [ 2 ]
val = 1


Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 1 0 0 0 0
	 0 1 0 0 0
	 1 1 0 0 0
 ]
------------------------------ Fine assegna1_m_vv_i

107: esiste_v_i	<=>	elem %IN% v
elem = 3
ris->indices (2 : 2): [ 4 5 ]


indx = 0
------------------------------ Fine esiste_v_i

101: which_m_rowindxeq_i	<=>	ris <- which(m[r,] == val)
ris (5 x 5 : 5 x 5): [
	 0 0 0 1 1
	 0 0 0 1 0
	 0 0 0 0 1
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 4
val = 1


ind (0 : 35): [ ]
------------------------------ Fine which_m_rowindxeq_i

103: copia_v_indx_i	<=>	ris <- v[indx]
index (5 : 5): [ 5 3 4 1 2 ]
ind (0 : 35): [ ]


co (0 : 2): [ ]
------------------------------ Fine copia_v_indx_i

105: assegna1_m_vv_i	<=>	m[vr, vc] <- val
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 1 0 0 0 0
	 0 1 0 0 0
	 1 1 0 0 0
 ]
ri (1 : 1): [ 1 ]
co (0 : 2): [ ]
val = 1


Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 1 0 0 0 0
	 0 1 0 0 0
	 1 1 0 0 0
 ]
------------------------------ Fine assegna1_m_vv_i

107: esiste_v_i	<=>	elem %IN% v
elem = 4
ris->indices (2 : 2): [ 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

109: accoda1_vv_i	<=>	v1 <- c(v1, v2)
ris (0 : 1): [ ]
ri (1 : 1): [ 1 ]


ris (1 : 1): [ 1 ]
------------------------------ Fine accoda_vv_i

101: which_m_rowindxeq_i	<=>	ris <- which(m[r,] == val)
ris (5 x 5 : 5 x 5): [
	 0 0 0 1 1
	 0 0 0 1 0
	 0 0 0 0 1
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 5
val = 1


ind (0 : 35): [ ]
------------------------------ Fine which_m_rowindxeq_i

103: copia_v_indx_i	<=>	ris <- v[indx]
index (5 : 5): [ 5 3 4 1 2 ]
ind (0 : 35): [ ]


co (0 : 2): [ ]
------------------------------ Fine copia_v_indx_i

105: assegna1_m_vv_i	<=>	m[vr, vc] <- val
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 1 0 0 0 0
	 0 1 0 0 0
	 1 1 0 0 0
 ]
ri (1 : 1): [ 2 ]
co (0 : 2): [ ]
val = 1


Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 1 0 0 0 0
	 0 1 0 0 0
	 1 1 0 0 0
 ]
------------------------------ Fine assegna1_m_vv_i

107: esiste_v_i	<=>	elem %IN% v
elem = 5
ris->indices (2 : 2): [ 4 5 ]


indx = 2
------------------------------ Fine esiste_v_i

109: accoda1_vv_i	<=>	v1 <- c(v1, v2)
ris (1 : 1): [ 1 ]
ri (1 : 1): [ 2 ]
ATTENZIONE (accoda_vv_i, linea assign_nodes.c # 109): ingrandito il vettore da 1 a 2!


ris (2 : 4): [ 1 2 ]
------------------------------ Fine accoda_vv_i


Stringhe allocate: 5 (2939 interne); stringhe deallocate: 0 (2659 interne)

332: accoda1_vv_i	<=>	v1 <- c(v1, v2)
h_new (0 : 0): [ ]
ris (2 : 4): [ 1 2 ]
ATTENZIONE (accoda_vv_i, linea connectivity_modular.c # 332): ingrandito il vettore da 0 a 2!


h_new (2 : 4): [ 1 2 ]
------------------------------ Fine accoda_vv_i

334: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 1 0 0 0 0
	 0 1 0 0 0
	 1 1 0 0 0
 ]


Sout (5 : 5): [ 2 2 0 0 0 ]
------------------------------ Fine somma_colonne_i

336: max_v_i		<=>	ris <- max(v)
Sout (5 : 5): [ 2 2 0 0 0 ]


max = 2
------------------------------ Fine max_v_i

338: seq_i	<=>	ris <- seq(da, a, incr)
da = 0
a = 3
incr = 1


tmp2_i (4 : 4): [ 0 1 2 3 ]
------------------------------ Fine seq_i


*** hist1 ***
Sout (5 : 5): [ 2 2 0 0 0 ]
tmp2_i (4 : 4): [ 0 1 2 3 ]
right = 0
include_border = 1
naok = 0
29: InitVett_i
tmp1_i (3 : 3): [ 1 2 3 ]
val = 0


tmp1_i (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i



tmp1_i (3 : 3): [ 3 0 2 ]

Stringhe allocate: 5 (2950 interne); stringhe deallocate: 0 (2665 interne)

340: promuovi_i	(implicita)
tmp1_i (3 : 3): [ 3 0 2 ]
ATTENZIONE (promuovi_i, linea connectivity_modular.c # 340): il vettore e` stato promosso da intero a double: i calcoli saranno rallentati!

tmp1_d (3 : 16): [ 3 0 2 ]
------------------------------ Fine promuovi_i

341: assegna1_v_segmv_d	<=>	v1[st:end] <- v2
Freq_out (7 : 7): [ 5 0 0 0 0 0 0 ]
start = 1
end = 3
tmp1_d (3 : 16): [ 3 0 2 ]


Freq_out (7 : 7): [ 3 0 2 0 0 0 0 ]
------------------------------ Fine assegna1_v_segmv_d

343: somma_righe_i	<=>	ris <- apply(m, 1, sum)
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 1 0 0 0 0
	 0 1 0 0 0
	 1 1 0 0 0
 ]


Sin (5 : 5): [ 0 0 1 1 2 ]
------------------------------ Fine somma_righe_i

345: max_v_i		<=>	ris <- max(v)
Sin (5 : 5): [ 0 0 1 1 2 ]


max = 2
------------------------------ Fine max_v_i

347: seq_i	<=>	ris <- seq(da, a, incr)
da = 0
a = 3
incr = 1


tmp2_i (4 : 4): [ 0 1 2 3 ]
------------------------------ Fine seq_i


*** hist1 ***
Sin (5 : 5): [ 0 0 1 1 2 ]
tmp2_i (4 : 4): [ 0 1 2 3 ]
right = 0
include_border = 1
naok = 0
29: InitVett_i
tmp1_i (3 : 3): [ 3 0 2 ]
val = 0


tmp1_i (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i



tmp1_i (3 : 3): [ 2 2 1 ]

Stringhe allocate: 5 (2951 interne); stringhe deallocate: 0 (2666 interne)

349: promuovi_i	(implicita)
tmp1_i (3 : 3): [ 2 2 1 ]
ATTENZIONE (promuovi_i, linea connectivity_modular.c # 349): il vettore e` stato promosso da intero a double: i calcoli saranno rallentati!

tmp1_d (3 : 16): [ 2 2 1 ]
------------------------------ Fine promuovi_i

350: assegna1_v_segmv_d	<=>	v1[st:end] <- v2
Freq_in (7 : 7): [ 5 0 0 0 0 0 0 ]
start = 1
end = 3
tmp1_d (3 : 16): [ 2 2 1 ]


Freq_in (7 : 7): [ 2 2 1 0 0 0 0 ]
------------------------------ Fine assegna1_v_segmv_d

362: copia_v_i	<=>	ris[st:end] <- v[st:end]
h_new (2 : 4): [ 1 2 ]
st = 1
end = 2


h (2 : 5): [ 1 2 ]
------------------------------ Fine copia_v_i

368: copia_v_indx_i	<=>	ris <- v[indx]
Sin (5 : 5): [ 0 0 1 1 2 ]
h (2 : 5): [ 1 2 ]


tmp1_i (2 : 3): [ 0 0 ]
------------------------------ Fine copia_v_indx_i

369: which_v_indxne_i	<=>	ris <- which(v != val)
tmp1_i (2 : 3): [ 0 0 ]
val = 5


tmp2_i (2 : 4): [ 1 2 ]
------------------------------ Fine which_v_indxne_i

370: copia_v_indx_i	<=>	ris <- v[indx]
h (2 : 5): [ 1 2 ]
tmp2_i (2 : 4): [ 1 2 ]


h (2 : 5): [ 1 2 ]
------------------------------ Fine copia_v_indx_i

110: somma_righe_i	<=>	ris <- apply(m, 1, sum)
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 1 0 0 0 0
	 0 1 0 0 0
	 1 1 0 0 0
 ]


Sin (5 : 5): [ 0 0 1 1 2 ]
------------------------------ Fine somma_righe_i

112: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 1 0 0 0 0
	 0 1 0 0 0
	 1 1 0 0 0
 ]


Sout (5 : 5): [ 2 2 0 0 0 ]
------------------------------ Fine somma_colonne_i


*** cluster_coeff ***
19: trasponi_i	<=>	ris <- t(m)
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 1 0 0 0 0
	 0 1 0 0 0
	 1 1 0 0 0
 ]


tmpm_i (5 x 5 : 5 x 5): [
	 0 0 1 0 1
	 0 0 0 1 1
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine trasponi_i

20: somma1_m_i	<=>	m1 <- m1 + m2
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 1 0 1
	 0 0 0 1 1
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 1 0 0 0 0
	 0 1 0 0 0
	 1 1 0 0 0
 ]


tmpm_i (5 x 5 : 5 x 5): [
	 0 0 1 0 1
	 0 0 0 1 1
	 1 0 0 0 0
	 0 1 0 0 0
	 1 1 0 0 0
 ]
------------------------------ Fine somma1_m_i

22: which_m_indxne_i	<=>	ris <- which(m!=val)
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 1 0 1
	 0 0 0 1 1
	 1 0 0 0 0
	 0 1 0 0 0
	 1 1 0 0 0
 ]
val = 0


ind (8 : 25): [ 3 5 9 10 11 17 21 22 ]
------------------------------ Fine which_m_indxne_i

24: assegna1_ms_indx_i	<=>	m[indx] = val
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 1 0 1
	 0 0 0 1 1
	 1 0 0 0 0
	 0 1 0 0 0
	 1 1 0 0 0
 ]
ind (8 : 25): [ 3 5 9 10 11 17 21 22 ]
val = 1


tmpm_i (5 x 5 : 5 x 5): [
	 0 0 1 0 1
	 0 0 0 1 1
	 1 0 0 0 0
	 0 1 0 0 0
	 1 1 0 0 0
 ]
------------------------------ Fine assegna1_ms_indx_i

26: assegna1_s_diag_i	<=>	diag_i(m) <- s
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 1 0 1
	 0 0 0 1 1
	 1 0 0 0 0
	 0 1 0 0 0
	 1 1 0 0 0
 ]
val = 0


tmpm_i (5 x 5 : 5 x 5): [
	 0 0 1 0 1
	 0 0 0 1 1
	 1 0 0 0 0
	 0 1 0 0 0
	 1 1 0 0 0
 ]
------------------------------ Fine assegna1_s_diag_i

31: InitVett_d
ris (5 : 5): [ 0 0 0 0 0 ]
val = 0


ris (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

35: somma_riga_i	<=>	ris <- sum(m[riga, ])
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 1 0 1
	 0 0 0 1 1
	 1 0 0 0 0
	 0 1 0 0 0
	 1 1 0 0 0
 ]
riga = 1


ris: 2
------------------------------ Fine somma_riga_i

37: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 1 0 1
	 0 0 0 1 1
	 1 0 0 0 0
	 0 1 0 0 0
	 1 1 0 0 0
 ]
r = 1
val = 0


neighbours (2 : 25): [ 3 5 ]
------------------------------ Fine which_m_rowindxne_i

35: somma_riga_i	<=>	ris <- sum(m[riga, ])
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 1 0 1
	 0 0 0 1 1
	 1 0 0 0 0
	 0 1 0 0 0
	 1 1 0 0 0
 ]
riga = 2


ris: 2
------------------------------ Fine somma_riga_i

37: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 1 0 1
	 0 0 0 1 1
	 1 0 0 0 0
	 0 1 0 0 0
	 1 1 0 0 0
 ]
r = 2
val = 0


neighbours (2 : 25): [ 4 5 ]
------------------------------ Fine which_m_rowindxne_i

35: somma_riga_i	<=>	ris <- sum(m[riga, ])
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 1 0 1
	 0 0 0 1 1
	 1 0 0 0 0
	 0 1 0 0 0
	 1 1 0 0 0
 ]
riga = 3


ris: 1
------------------------------ Fine somma_riga_i

37: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 1 0 1
	 0 0 0 1 1
	 1 0 0 0 0
	 0 1 0 0 0
	 1 1 0 0 0
 ]
r = 3
val = 0


neighbours (1 : 25): [ 1 ]
------------------------------ Fine which_m_rowindxne_i

35: somma_riga_i	<=>	ris <- sum(m[riga, ])
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 1 0 1
	 0 0 0 1 1
	 1 0 0 0 0
	 0 1 0 0 0
	 1 1 0 0 0
 ]
riga = 4


ris: 1
------------------------------ Fine somma_riga_i

37: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 1 0 1
	 0 0 0 1 1
	 1 0 0 0 0
	 0 1 0 0 0
	 1 1 0 0 0
 ]
r = 4
val = 0


neighbours (1 : 25): [ 2 ]
------------------------------ Fine which_m_rowindxne_i

35: somma_riga_i	<=>	ris <- sum(m[riga, ])
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 1 0 1
	 0 0 0 1 1
	 1 0 0 0 0
	 0 1 0 0 0
	 1 1 0 0 0
 ]
riga = 5


ris: 2
------------------------------ Fine somma_riga_i

37: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 1 0 1
	 0 0 0 1 1
	 1 0 0 0 0
	 0 1 0 0 0
	 1 1 0 0 0
 ]
r = 5
val = 0


neighbours (2 : 25): [ 1 2 ]
------------------------------ Fine which_m_rowindxne_i

69: media_v_d	<=>	ris <- mean(v)
ris (5 : 5): [ 0 0 0 0 0 ]


media = 0.000
------------------------------ Fine media_v_d


Stringhe allocate: 5 (2967 interne); stringhe deallocate: 0 (2682 interne)


*** module1 ***
44: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 2
incr = 1


tmp1_i (2 : 2): [ 1 2 ]
------------------------------ Fine seq_i


*** sampleB ***

***sample***
tmp1_i (2 : 2): [ 1 2 ]
k = 1, replace = 0


ris (1 : 1): [ 2 ]
*****************************************


Stringhe allocate: 5 (2982 interne); stringhe deallocate: 0 (2682 interne)


Stringhe allocate: 5 (2982 interne); stringhe deallocate: 0 (2682 interne)


*** mod1 ***
18: InitMatr_i
ris (2 x 2 : 2 x 2): [
	 38207472 1936024687
	 1851747943 25390
 ]
val = 0


ris (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
------------------------------ Fine InitMatr_i

21: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 1
incr = 1


x (1 : 1): [ 1 ]
------------------------------ Fine seq_i

23: somma_vs_i	<=>	ris <- v + s
x (1 : 1): [ 1 ]
s = 1


tmp1_i (1 : 1): [ 2 ]
------------------------------ Fine somma_vs_i

24: cbind2v_i	<=>	ris <- cbind(v1, v2)
x (1 : 1): [ 1 ]
tmp1_i (1 : 1): [ 2 ]


ind (1 x 2 : 1 x 2): [
	 1 2
 ]
------------------------------ Fine cbind2v_i

26: assegna1_ms_indx2_i	<=>	m[indxm] <- val
ris (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
ind (1 x 2 : 1 x 2): [
	 1 2
 ]
val = 1


ris (2 x 2 : 2 x 2): [
	 0 1
	 0 0
 ]
------------------------------ Fine assegna1_ms_indx2_i

29: vettore2s_i		<=>	ris <- c(el1, el2)
el1 = 1, el2 = -1


tmp1_i (2 : 4): [ 1 -1 ]
------------------------------ Fine vettore2s_i


*** sampleB ***

***sample***
tmp1_i (2 : 4): [ 1 -1 ]
k = 1, replace = 0


ris (1 : 1): [ -1 ]
*****************************************


Stringhe allocate: 5 (3007 interne); stringhe deallocate: 0 (2682 interne)


Stringhe allocate: 5 (3007 interne); stringhe deallocate: 0 (2682 interne)


Stringhe allocate: 5 (3007 interne); stringhe deallocate: 0 (2702 interne)


*** probmod ***
46: InitMatr_i
checkOUT (2 x 2 : 2 x 2): [
	 38205712 1936024687
	 1845519150 1056989998
 ]
val = 0


checkOUT (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
------------------------------ Fine InitMatr_i

48: InitMatr_i
checkIN (2 x 2 : 2 x 2): [
	 79854816 1918959715
	 778334061 1056989998
 ]
val = 0


checkIN (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
------------------------------ Fine InitMatr_i

50: InitMatr_d
ris (2 x 2 : 2 x 2): [
	 6.218345866838227e+175 0
	 5.387842123834802e-310 3.904820559482642e-316
 ]
val = 0


ris (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
------------------------------ Fine InitMatr_d

52: somma_righe_i	<=>	ris <- apply(m, 1, sum)
ris (2 x 2 : 2 x 2): [
	 0 1
	 1 0
 ]


M_in (2 : 2): [ 1 1 ]
------------------------------ Fine somma_righe_i

54: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
ris (2 x 2 : 2 x 2): [
	 0 1
	 1 0
 ]


M_out (2 : 2): [ 1 1 ]
------------------------------ Fine somma_colonne_i

57: InitMatr_i
memory (2 x 3 : 2 x 3): [
	 79858992 0 79032784
	 5 0 0
 ]
val = -2147483648


memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
------------------------------ Fine InitMatr_i

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 1


tmp_i1 (0 : 6): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 1


tmp_i2 (0 : 6): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 6): [ ]
tmp_i2 (0 : 6): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

92: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sout (5 : 5): [ 2 2 0 0 0 ]
h (2 : 5): [ 1 2 ]


tmp_i1 (2 : 6): [ 2 2 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (2 : 6): [ 2 2 ]
s = 1


ind (2 : 2): [ 3 3 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (2 : 6): [ 2 2 ]
s = 1


tmp_i1 (2 : 2): [ 3 3 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (2 : 2): [ 3 3 ]


T1 (2 : 2): [ 0.7867244574868211 0.7867244574868211 ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (2 : 2): [ 3 3 ]
s = 1


tmp_i1 (2 : 2): [ 4 4 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (2 : 2): [ 4 4 ]


T2 (2 : 2): [ 0.3224199317354524 0.3224199317354524 ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (2 : 6): [ 2 2 ]
s = 1


tmp_i1 (2 : 2): [ 3 3 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 3 0 2 0 0 0 0 ]
tmp_i1 (2 : 2): [ 3 3 ]


old1 (2 : 2): [ 2 2 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (2 : 2): [ 3 3 ]
s = 1


tmp_i1 (2 : 2): [ 4 4 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 3 0 2 0 0 0 0 ]
tmp_i1 (2 : 2): [ 4 4 ]


old2 (2 : 2): [ 0 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (2 : 2): [ 2 2 ]
s = -1


new1 (2 : 2): [ 1 1 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (2 : 2): [ 0 0 ]
s = 1


new2 (2 : 2): [ 1 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (2 : 6): [ 2 2 ]
s = 1


tmp_i1 (2 : 2): [ 3 3 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (2 : 2): [ 3 3 ]


toll1 (2 : 2): [ 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (2 : 2): [ 3 3 ]
s = 1


tmp_i1 (2 : 2): [ 4 4 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (2 : 2): [ 4 4 ]


toll2 (2 : 2): [ 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (2 : 2): [ 2 2 ]
T1 (2 : 2): [ 0.7867244574868211 0.7867244574868211 ]


a (2 : 2): [ 1.213275542513179 1.213275542513179 ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (2 : 2): [ 1.213275542513179 1.213275542513179 ]


a (2 : 2): [ 1.213275542513179 1.213275542513179 ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (2 : 2): [ 1 1 ]
T1 (2 : 2): [ 0.7867244574868211 0.7867244574868211 ]


b (2 : 2): [ 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (2 : 2): [ 0.2132755425131789 0.2132755425131789 ]


b (2 : 2): [ 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (2 : 2): [ 0.7867244574868211 0.7867244574868211 ]
complemento = 0


ind (0 : 2): [ ]
------------------------------ Fine which_v_indxNA_d

68: assegna1_vs_indx_d	<=>	v[indx] <- val
a (2 : 2): [ 1.213275542513179 1.213275542513179 ]
ind (0 : 2): [ ]
val = 0


a (2 : 2): [ 1.213275542513179 1.213275542513179 ]
------------------------------ Fine assegna1_vs_indx_d

70: assegna1_vs_indx_d	<=>	v[indx] <- val
b (2 : 2): [ 0.2132755425131789 0.2132755425131789 ]
ind (0 : 2): [ ]
val = 0


b (2 : 2): [ 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine assegna1_vs_indx_d

78: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (2 : 2): [ 1.213275542513179 1.213275542513179 ]
b (2 : 2): [ 0.2132755425131789 0.2132755425131789 ]


tmpm_d (2 x 2 : 2 x 2): [
	 1.213275542513179 0.2132755425131789
	 1.213275542513179 0.2132755425131789
 ]
------------------------------ Fine cbind2v_d

79: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (2 x 2 : 2 x 2): [
	 1.213275542513179 0.2132755425131789
	 1.213275542513179 0.2132755425131789
 ]


m (2 : 2): [ 1.213275542513179 1.213275542513179 ]
------------------------------ Fine max_righe_d

81: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (2 : 2): [ 1.213275542513179 1.213275542513179 ]
b (2 : 2): [ 0.2132755425131789 0.2132755425131789 ]
m (2 : 2): [ 1.213275542513179 1.213275542513179 ]
T1 (2 : 2): [ 0.7867244574868211 0.7867244574868211 ]


S1 (2 : 2): [ 1.542186124973118 1.542186124973118 ]
------------------------------ Fine f_aux_d

83: diff_vv_d	<=>	ris <- v1 - v2
a (2 : 2): [ 1.213275542513179 1.213275542513179 ]
toll1 (2 : 2): [ 1 1 ]


tmp_d1 (2 : 2): [ 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine diff_vv_d

84: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (2 : 2): [ 0.2132755425131789 0.2132755425131789 ]
val = 0

ind1 (0 : 2): [ ]
------------------------------ Fine which_v_indxlt_d

86: diff_vv_d	<=>	ris <- v1 - v2
b (2 : 2): [ 0.2132755425131789 0.2132755425131789 ]
toll1 (2 : 2): [ 1 1 ]


tmp_d1 (2 : 2): [ -0.7867244574868211 -0.7867244574868211 ]
------------------------------ Fine diff_vv_d

87: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (2 : 2): [ -0.7867244574868211 -0.7867244574868211 ]
val = 0


ind2 (0 : 2): [ ]
------------------------------ Fine which_v_indxgt_d

89: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (0 : 2): [ ]
ind2 (0 : 2): [ ]


tmp_i1 (0 : 2): [ ]
------------------------------ Fine interseca_i

91: assegna1_vs_indx_d	<=>	v[indx] <- val
S1 (2 : 2): [ 1.542186124973118 1.542186124973118 ]
tmp_i1 (0 : 2): [ ]
val = -1.#INF


S1 (2 : 2): [ 1.542186124973118 1.542186124973118 ]
------------------------------ Fine assegna1_vs_indx_d

93: assegna1_vs_indx_d	<=>	v[indx] <- val
S1 (2 : 2): [ 1.542186124973118 1.542186124973118 ]
ind (0 : 2): [ ]
val = 0


S1 (2 : 2): [ 1.542186124973118 1.542186124973118 ]
------------------------------ Fine assegna1_vs_indx_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (2 : 2): [ 0 0 ]
T2 (2 : 2): [ 0.3224199317354524 0.3224199317354524 ]


a (2 : 2): [ -0.3224199317354524 -0.3224199317354524 ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (2 : 2): [ -0.3224199317354524 -0.3224199317354524 ]


a (2 : 2): [ 0.3224199317354524 0.3224199317354524 ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (2 : 2): [ 1 1 ]
T2 (2 : 2): [ 0.3224199317354524 0.3224199317354524 ]


b (2 : 2): [ 0.6775800682645476 0.6775800682645476 ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (2 : 2): [ 0.6775800682645476 0.6775800682645476 ]


b (2 : 2): [ 0.6775800682645476 0.6775800682645476 ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (2 : 2): [ 0.3224199317354524 0.3224199317354524 ]
b (2 : 2): [ 0.6775800682645476 0.6775800682645476 ]


tmpm_d (2 x 2 : 2 x 2): [
	 0.3224199317354524 0.6775800682645476
	 0.3224199317354524 0.6775800682645476
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (2 x 2 : 2 x 2): [
	 0.3224199317354524 0.6775800682645476
	 0.3224199317354524 0.6775800682645476
 ]


m (2 : 2): [ 0.6775800682645476 0.6775800682645476 ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (2 : 2): [ 0.3224199317354524 0.3224199317354524 ]
complemento = 0


ind (0 : 2): [ ]
------------------------------ Fine which_v_indxNA_d

115: assegna1_vs_indx_d	<=>	v[indx] <- val
a (2 : 2): [ 0.3224199317354524 0.3224199317354524 ]
ind (0 : 2): [ ]
val = 0


a (2 : 2): [ 0.3224199317354524 0.3224199317354524 ]
------------------------------ Fine assegna1_vs_indx_d

117: assegna1_vs_indx_d	<=>	v[indx] <- val
b (2 : 2): [ 0.6775800682645476 0.6775800682645476 ]
ind (0 : 2): [ ]
val = 0


b (2 : 2): [ 0.6775800682645476 0.6775800682645476 ]
------------------------------ Fine assegna1_vs_indx_d

119: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (2 : 2): [ 0.3224199317354524 0.3224199317354524 ]
b (2 : 2): [ 0.6775800682645476 0.6775800682645476 ]


tmpm_d (2 x 2 : 2 x 2): [
	 0.3224199317354524 0.6775800682645476
	 0.3224199317354524 0.6775800682645476
 ]
------------------------------ Fine cbind2v_d

120: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (2 x 2 : 2 x 2): [
	 0.3224199317354524 0.6775800682645476
	 0.3224199317354524 0.6775800682645476
 ]


m (2 : 2): [ 0.6775800682645476 0.6775800682645476 ]
------------------------------ Fine max_righe_d

122: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (2 : 2): [ 0.3224199317354524 0.3224199317354524 ]
b (2 : 2): [ 0.6775800682645476 0.6775800682645476 ]
m (2 : 2): [ 0.6775800682645476 0.6775800682645476 ]
T2 (2 : 2): [ 0.3224199317354524 0.3224199317354524 ]


S2 (2 : 2): [ -2.101545225871788 -2.101545225871788 ]
------------------------------ Fine f_aux_d

124: diff_vv_d	<=>	ris <- v1 - v2
a (2 : 2): [ 0.3224199317354524 0.3224199317354524 ]
toll2 (2 : 2): [ 1 1 ]


tmp_d1 (2 : 2): [ -0.6775800682645476 -0.6775800682645476 ]
------------------------------ Fine diff_vv_d

125: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (2 : 2): [ -0.6775800682645476 -0.6775800682645476 ]
val = 0

ind1 (2 : 2): [ 1 2 ]
------------------------------ Fine which_v_indxlt_d

127: diff_vv_d	<=>	ris <- v1 - v2
b (2 : 2): [ 0.6775800682645476 0.6775800682645476 ]
toll2 (2 : 2): [ 1 1 ]


tmp_d1 (2 : 2): [ -0.3224199317354524 -0.3224199317354524 ]
------------------------------ Fine diff_vv_d

128: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (2 : 2): [ -0.3224199317354524 -0.3224199317354524 ]
val = 0


ind2 (0 : 2): [ ]
------------------------------ Fine which_v_indxgt_d

130: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (2 : 2): [ 1 2 ]
ind2 (0 : 2): [ ]
2459: esiste_v_i	<=>	elem %IN% v
elem = 1
ind2 (0 : 2): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 1
tmp_i1 (0 : 2): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 2
ind2 (0 : 2): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 2
tmp_i1 (0 : 2): [ ]


indx = 0
------------------------------ Fine esiste_v_i



tmp_i1 (0 : 2): [ ]
------------------------------ Fine interseca_i

132: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (2 : 2): [ -2.101545225871788 -2.101545225871788 ]
tmp_i1 (0 : 2): [ ]
val = -1.#INF


S2 (2 : 2): [ -2.101545225871788 -2.101545225871788 ]
------------------------------ Fine assegna1_vs_indx_d

134: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (2 : 2): [ -2.101545225871788 -2.101545225871788 ]
ind (0 : 2): [ ]
val = 0


S2 (2 : 2): [ -2.101545225871788 -2.101545225871788 ]
------------------------------ Fine assegna1_vs_indx_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (2 : 2): [ 0.3224199317354524 0.3224199317354524 ]
val = 0


ind (0 : 2): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (2 : 2): [ -2.101545225871788 -2.101545225871788 ]
ind (0 : 2): [ ]
val = -1.#INF


S2 (2 : 2): [ -2.101545225871788 -2.101545225871788 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (2 : 2): [ 1.542186124973118 1.542186124973118 ]
S2 (2 : 2): [ -2.101545225871788 -2.101545225871788 ]


ris (2 : 2): [ -0.55935910089867 -0.55935910089867 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
ris (2 : 2): [ -0.55935910089867 -0.55935910089867 ]
div = 2.000


ris (2 : 2): [ -0.279679550449335 -0.279679550449335 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (3167 interne); stringhe deallocate: 0 (2802 interne)

95: which_v_indxne_d	<=>	ris <- which(v != val)
ris (2 : 2): [ -0.279679550449335 -0.279679550449335 ]
val = -1.#INF


indok (2 : 2): [ 1 2 ]
------------------------------ Fine which_v_indxne_d

97: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkOUT (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
riga = 1
indok (2 : 2): [ 1 2 ]
val = 1


checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 0 0
 ]
------------------------------ Fine aggiungi_riga_indx_i

104: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 2
incr = 1


tmp_i1 (2 : 6): [ 1 2 ]
------------------------------ Fine seq_i

105: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (2 : 6): [ 1 2 ]
indok (2 : 2): [ 1 2 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (2 : 6): [ 1 2 ]
st = 1
end = 2


indInf (2 : 2): [ 1 2 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (2 : 2): [ 1 2 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 2): [ 1 2 ]
indx = 1


indInf (1 : 2): [ 2 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (1 : 2): [ 2 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 2): [ 2 ]
indx = 1


indInf (0 : 2): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 2): [ ]
------------------------------ Fine setdiff_i

107: copia_v_indx_d	<=>	ris <- v[indx]
ris (2 : 2): [ -0.279679550449335 -0.279679550449335 ]
indok (2 : 2): [ 1 2 ]


tmp_d1 (2 : 2): [ -0.279679550449335 -0.279679550449335 ]
------------------------------ Fine copia_v_indx_d

111: min_v_d	<=>	ris <- min(v)
tmp_d1 (2 : 2): [ -0.279679550449335 -0.279679550449335 ]


min = -0.279679550449335
------------------------------ Fine min_v_d

112: assegna1_vs_indx_d	<=>	v[indx] <- val
ris (2 : 2): [ -0.279679550449335 -0.279679550449335 ]
indInf (0 : 2): [ ]
val = -1.279679550449335


ris (2 : 2): [ -0.279679550449335 -0.279679550449335 ]
------------------------------ Fine assegna1_vs_indx_d

128: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 0 1 1 2 ]
h (2 : 5): [ 1 2 ]


tmp_i1 (2 : 6): [ 0 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (2 : 6): [ 0 0 ]
s = 1


ind (2 : 2): [ 1 1 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (2 : 6): [ 0 0 ]
s = 1


tmp_i1 (2 : 2): [ 1 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
tmp_i1 (2 : 2): [ 1 1 ]


T1 (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (2 : 2): [ 1 1 ]
s = 1


tmp_i1 (2 : 2): [ 2 2 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
tmp_i1 (2 : 2): [ 2 2 ]


T2 (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (2 : 6): [ 0 0 ]
s = 1


tmp_i1 (2 : 2): [ 1 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 2 2 1 0 0 0 0 ]
tmp_i1 (2 : 2): [ 1 1 ]


old1 (2 : 2): [ 2 2 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (2 : 2): [ 1 1 ]
s = 1


tmp_i1 (2 : 2): [ 2 2 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 2 2 1 0 0 0 0 ]
tmp_i1 (2 : 2): [ 2 2 ]


old2 (2 : 2): [ 2 2 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (2 : 2): [ 2 2 ]
s = -1


new1 (2 : 2): [ 1 1 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (2 : 2): [ 2 2 ]
s = 1


new2 (2 : 2): [ 3 3 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (2 : 6): [ 0 0 ]
s = 1


tmp_i1 (2 : 2): [ 1 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (2 : 2): [ 1 1 ]


toll1 (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (2 : 2): [ 1 1 ]
s = 1


tmp_i1 (2 : 2): [ 2 2 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (2 : 2): [ 2 2 ]


toll2 (2 : 2): [ 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (2 : 2): [ 2 2 ]
T1 (2 : 2): [ 1.#QNAN 1.#QNAN ]


a (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (2 : 2): [ 1.#QNAN 1.#QNAN ]


a (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (2 : 2): [ 1 1 ]
T1 (2 : 2): [ 1.#QNAN 1.#QNAN ]


b (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (2 : 2): [ 1.#QNAN 1.#QNAN ]


b (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (2 : 2): [ 1.#QNAN 1.#QNAN ]
complemento = 0


ind (2 : 2): [ 1 2 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (2 : 2): [ 6.218345866839082e+175 5.387842123834802e-310 ]
val = 0


S1 (2 : 2): [ 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (2 : 2): [ 2 2 ]
T2 (2 : 2): [ 1.#QNAN 1.#QNAN ]


a (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (2 : 2): [ 1.#QNAN 1.#QNAN ]


a (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (2 : 2): [ 3 3 ]
T2 (2 : 2): [ 1.#QNAN 1.#QNAN ]


b (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (2 : 2): [ 1.#QNAN 1.#QNAN ]


b (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (2 : 2): [ 1.#QNAN 1.#QNAN ]
b (2 : 2): [ 1.#QNAN 1.#QNAN ]


tmpm_d (2 x 2 : 2 x 2): [
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (2 x 2 : 2 x 2): [
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
 ]


m (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (2 : 2): [ 1.#QNAN 1.#QNAN ]
complemento = 0


ind (2 : 2): [ 1 2 ]
------------------------------ Fine which_v_indxNA_d

140: InitVett_d
S2 (2 : 2): [ 5.842414621812633e-308 0 ]
val = 0


S2 (2 : 2): [ 0 0 ]
------------------------------ Fine InitVett_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (2 : 2): [ 1.#QNAN 1.#QNAN ]
val = 0


ind (0 : 2): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (2 : 2): [ 0 0 ]
ind (0 : 2): [ ]
val = -1.#INF


S2 (2 : 2): [ 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (2 : 2): [ 0 0 ]
S2 (2 : 2): [ 0 0 ]


ris (2 : 2): [ 0 0 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
ris (2 : 2): [ 0 0 ]
div = 2.000


ris (2 : 2): [ 0 0 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (3272 interne); stringhe deallocate: 0 (2887 interne)

131: which_v_indxne_d	<=>	ris <- which(v != val)
ris (2 : 2): [ 0 0 ]
val = -1.#INF


indok (2 : 2): [ 1 2 ]
------------------------------ Fine which_v_indxne_d

133: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkIN (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
riga = 1
indok (2 : 2): [ 1 2 ]
val = 1


checkIN (2 x 2 : 2 x 2): [
	 1 1
	 0 0
 ]
------------------------------ Fine aggiungi_riga_indx_i

141: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 2
incr = 1


tmp_i1 (2 : 6): [ 1 2 ]
------------------------------ Fine seq_i

142: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (2 : 6): [ 1 2 ]
indok (2 : 2): [ 1 2 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (2 : 6): [ 1 2 ]
st = 1
end = 2


indInf (2 : 2): [ 1 2 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (2 : 2): [ 1 2 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 2): [ 1 2 ]
indx = 1


indInf (1 : 2): [ 2 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (1 : 2): [ 2 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 2): [ 2 ]
indx = 1


indInf (0 : 2): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 2): [ ]
------------------------------ Fine setdiff_i

144: copia_v_indx_d	<=>	ris <- v[indx]
ris (2 : 2): [ 0 0 ]
indok (2 : 2): [ 1 2 ]


tmp_d1 (2 : 2): [ 0 0 ]
------------------------------ Fine copia_v_indx_d

148: min_v_d	<=>	ris <- min(v)
tmp_d1 (2 : 2): [ 0 0 ]


min = 0
------------------------------ Fine min_v_d

149: assegna1_vs_indx_d	<=>	v[indx] <- val
ris (2 : 2): [ 0 0 ]
indInf (0 : 2): [ ]
val = -1


ris (2 : 2): [ 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

159: somma_vv_d	<=>	ris <- v1 + v2
ris (2 : 2): [ -0.279679550449335 -0.279679550449335 ]
ris (2 : 2): [ 0 0 ]


tmp_d1 (2 : 2): [ -0.279679550449335 -0.279679550449335 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
riga = 1
tmp_d1 (2 : 2): [ -0.279679550449335 -0.279679550449335 ]


ris (2 x 2 : 2 x 2): [
	 -0.279679550449335 -0.279679550449335
	 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_d

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 1


tmp_i1 (0 : 6): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 1


tmp_i2 (0 : 6): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 6): [ ]
tmp_i2 (0 : 6): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

92: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sout (5 : 5): [ 2 2 0 0 0 ]
h (2 : 5): [ 1 2 ]


tmp_i1 (2 : 6): [ 2 2 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (2 : 6): [ 2 2 ]
s = 1


ind (2 : 2): [ 3 3 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (2 : 6): [ 2 2 ]
s = 1


tmp_i1 (2 : 2): [ 3 3 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (2 : 2): [ 3 3 ]


T1 (2 : 2): [ 0.7867244574868211 0.7867244574868211 ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (2 : 2): [ 3 3 ]
s = 1


tmp_i1 (2 : 2): [ 4 4 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (2 : 2): [ 4 4 ]


T2 (2 : 2): [ 0.3224199317354524 0.3224199317354524 ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (2 : 6): [ 2 2 ]
s = 1


tmp_i1 (2 : 2): [ 3 3 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 3 0 2 0 0 0 0 ]
tmp_i1 (2 : 2): [ 3 3 ]


old1 (2 : 2): [ 2 2 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (2 : 2): [ 3 3 ]
s = 1


tmp_i1 (2 : 2): [ 4 4 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 3 0 2 0 0 0 0 ]
tmp_i1 (2 : 2): [ 4 4 ]


old2 (2 : 2): [ 0 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (2 : 2): [ 2 2 ]
s = -1


new1 (2 : 2): [ 1 1 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (2 : 2): [ 0 0 ]
s = 1


new2 (2 : 2): [ 1 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (2 : 6): [ 2 2 ]
s = 1


tmp_i1 (2 : 2): [ 3 3 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (2 : 2): [ 3 3 ]


toll1 (2 : 2): [ 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (2 : 2): [ 3 3 ]
s = 1


tmp_i1 (2 : 2): [ 4 4 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (2 : 2): [ 4 4 ]


toll2 (2 : 2): [ 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (2 : 2): [ 2 2 ]
T1 (2 : 2): [ 0.7867244574868211 0.7867244574868211 ]


a (2 : 2): [ 1.213275542513179 1.213275542513179 ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (2 : 2): [ 1.213275542513179 1.213275542513179 ]


a (2 : 2): [ 1.213275542513179 1.213275542513179 ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (2 : 2): [ 1 1 ]
T1 (2 : 2): [ 0.7867244574868211 0.7867244574868211 ]


b (2 : 2): [ 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (2 : 2): [ 0.2132755425131789 0.2132755425131789 ]


b (2 : 2): [ 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (2 : 2): [ 0.7867244574868211 0.7867244574868211 ]
complemento = 0


ind (0 : 2): [ ]
------------------------------ Fine which_v_indxNA_d

68: assegna1_vs_indx_d	<=>	v[indx] <- val
a (2 : 2): [ 1.213275542513179 1.213275542513179 ]
ind (0 : 2): [ ]
val = 0


a (2 : 2): [ 1.213275542513179 1.213275542513179 ]
------------------------------ Fine assegna1_vs_indx_d

70: assegna1_vs_indx_d	<=>	v[indx] <- val
b (2 : 2): [ 0.2132755425131789 0.2132755425131789 ]
ind (0 : 2): [ ]
val = 0


b (2 : 2): [ 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine assegna1_vs_indx_d

78: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (2 : 2): [ 1.213275542513179 1.213275542513179 ]
b (2 : 2): [ 0.2132755425131789 0.2132755425131789 ]


tmpm_d (2 x 2 : 2 x 2): [
	 1.213275542513179 0.2132755425131789
	 1.213275542513179 0.2132755425131789
 ]
------------------------------ Fine cbind2v_d

79: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (2 x 2 : 2 x 2): [
	 1.213275542513179 0.2132755425131789
	 1.213275542513179 0.2132755425131789
 ]


m (2 : 2): [ 1.213275542513179 1.213275542513179 ]
------------------------------ Fine max_righe_d

81: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (2 : 2): [ 1.213275542513179 1.213275542513179 ]
b (2 : 2): [ 0.2132755425131789 0.2132755425131789 ]
m (2 : 2): [ 1.213275542513179 1.213275542513179 ]
T1 (2 : 2): [ 0.7867244574868211 0.7867244574868211 ]


S1 (2 : 2): [ 1.542186124973118 1.542186124973118 ]
------------------------------ Fine f_aux_d

83: diff_vv_d	<=>	ris <- v1 - v2
a (2 : 2): [ 1.213275542513179 1.213275542513179 ]
toll1 (2 : 2): [ 1 1 ]


tmp_d1 (2 : 2): [ 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine diff_vv_d

84: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (2 : 2): [ 0.2132755425131789 0.2132755425131789 ]
val = 0

ind1 (0 : 2): [ ]
------------------------------ Fine which_v_indxlt_d

86: diff_vv_d	<=>	ris <- v1 - v2
b (2 : 2): [ 0.2132755425131789 0.2132755425131789 ]
toll1 (2 : 2): [ 1 1 ]


tmp_d1 (2 : 2): [ -0.7867244574868211 -0.7867244574868211 ]
------------------------------ Fine diff_vv_d

87: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (2 : 2): [ -0.7867244574868211 -0.7867244574868211 ]
val = 0


ind2 (0 : 2): [ ]
------------------------------ Fine which_v_indxgt_d

89: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (0 : 2): [ ]
ind2 (0 : 2): [ ]


tmp_i1 (0 : 2): [ ]
------------------------------ Fine interseca_i

91: assegna1_vs_indx_d	<=>	v[indx] <- val
S1 (2 : 2): [ 1.542186124973118 1.542186124973118 ]
tmp_i1 (0 : 2): [ ]
val = -1.#INF


S1 (2 : 2): [ 1.542186124973118 1.542186124973118 ]
------------------------------ Fine assegna1_vs_indx_d

93: assegna1_vs_indx_d	<=>	v[indx] <- val
S1 (2 : 2): [ 1.542186124973118 1.542186124973118 ]
ind (0 : 2): [ ]
val = 0


S1 (2 : 2): [ 1.542186124973118 1.542186124973118 ]
------------------------------ Fine assegna1_vs_indx_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (2 : 2): [ 0 0 ]
T2 (2 : 2): [ 0.3224199317354524 0.3224199317354524 ]


a (2 : 2): [ -0.3224199317354524 -0.3224199317354524 ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (2 : 2): [ -0.3224199317354524 -0.3224199317354524 ]


a (2 : 2): [ 0.3224199317354524 0.3224199317354524 ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (2 : 2): [ 1 1 ]
T2 (2 : 2): [ 0.3224199317354524 0.3224199317354524 ]


b (2 : 2): [ 0.6775800682645476 0.6775800682645476 ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (2 : 2): [ 0.6775800682645476 0.6775800682645476 ]


b (2 : 2): [ 0.6775800682645476 0.6775800682645476 ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (2 : 2): [ 0.3224199317354524 0.3224199317354524 ]
b (2 : 2): [ 0.6775800682645476 0.6775800682645476 ]


tmpm_d (2 x 2 : 2 x 2): [
	 0.3224199317354524 0.6775800682645476
	 0.3224199317354524 0.6775800682645476
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (2 x 2 : 2 x 2): [
	 0.3224199317354524 0.6775800682645476
	 0.3224199317354524 0.6775800682645476
 ]


m (2 : 2): [ 0.6775800682645476 0.6775800682645476 ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (2 : 2): [ 0.3224199317354524 0.3224199317354524 ]
complemento = 0


ind (0 : 2): [ ]
------------------------------ Fine which_v_indxNA_d

115: assegna1_vs_indx_d	<=>	v[indx] <- val
a (2 : 2): [ 0.3224199317354524 0.3224199317354524 ]
ind (0 : 2): [ ]
val = 0


a (2 : 2): [ 0.3224199317354524 0.3224199317354524 ]
------------------------------ Fine assegna1_vs_indx_d

117: assegna1_vs_indx_d	<=>	v[indx] <- val
b (2 : 2): [ 0.6775800682645476 0.6775800682645476 ]
ind (0 : 2): [ ]
val = 0


b (2 : 2): [ 0.6775800682645476 0.6775800682645476 ]
------------------------------ Fine assegna1_vs_indx_d

119: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (2 : 2): [ 0.3224199317354524 0.3224199317354524 ]
b (2 : 2): [ 0.6775800682645476 0.6775800682645476 ]


tmpm_d (2 x 2 : 2 x 2): [
	 0.3224199317354524 0.6775800682645476
	 0.3224199317354524 0.6775800682645476
 ]
------------------------------ Fine cbind2v_d

120: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (2 x 2 : 2 x 2): [
	 0.3224199317354524 0.6775800682645476
	 0.3224199317354524 0.6775800682645476
 ]


m (2 : 2): [ 0.6775800682645476 0.6775800682645476 ]
------------------------------ Fine max_righe_d

122: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (2 : 2): [ 0.3224199317354524 0.3224199317354524 ]
b (2 : 2): [ 0.6775800682645476 0.6775800682645476 ]
m (2 : 2): [ 0.6775800682645476 0.6775800682645476 ]
T2 (2 : 2): [ 0.3224199317354524 0.3224199317354524 ]


S2 (2 : 2): [ -2.101545225871788 -2.101545225871788 ]
------------------------------ Fine f_aux_d

124: diff_vv_d	<=>	ris <- v1 - v2
a (2 : 2): [ 0.3224199317354524 0.3224199317354524 ]
toll2 (2 : 2): [ 1 1 ]


tmp_d1 (2 : 2): [ -0.6775800682645476 -0.6775800682645476 ]
------------------------------ Fine diff_vv_d

125: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (2 : 2): [ -0.6775800682645476 -0.6775800682645476 ]
val = 0

ind1 (2 : 2): [ 1 2 ]
------------------------------ Fine which_v_indxlt_d

127: diff_vv_d	<=>	ris <- v1 - v2
b (2 : 2): [ 0.6775800682645476 0.6775800682645476 ]
toll2 (2 : 2): [ 1 1 ]


tmp_d1 (2 : 2): [ -0.3224199317354524 -0.3224199317354524 ]
------------------------------ Fine diff_vv_d

128: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (2 : 2): [ -0.3224199317354524 -0.3224199317354524 ]
val = 0


ind2 (0 : 2): [ ]
------------------------------ Fine which_v_indxgt_d

130: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (2 : 2): [ 1 2 ]
ind2 (0 : 2): [ ]
2459: esiste_v_i	<=>	elem %IN% v
elem = 1
ind2 (0 : 2): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 1
tmp_i1 (0 : 2): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 2
ind2 (0 : 2): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 2
tmp_i1 (0 : 2): [ ]


indx = 0
------------------------------ Fine esiste_v_i



tmp_i1 (0 : 2): [ ]
------------------------------ Fine interseca_i

132: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (2 : 2): [ -2.101545225871788 -2.101545225871788 ]
tmp_i1 (0 : 2): [ ]
val = -1.#INF


S2 (2 : 2): [ -2.101545225871788 -2.101545225871788 ]
------------------------------ Fine assegna1_vs_indx_d

134: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (2 : 2): [ -2.101545225871788 -2.101545225871788 ]
ind (0 : 2): [ ]
val = 0


S2 (2 : 2): [ -2.101545225871788 -2.101545225871788 ]
------------------------------ Fine assegna1_vs_indx_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (2 : 2): [ 0.3224199317354524 0.3224199317354524 ]
val = 0


ind (0 : 2): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (2 : 2): [ -2.101545225871788 -2.101545225871788 ]
ind (0 : 2): [ ]
val = -1.#INF


S2 (2 : 2): [ -2.101545225871788 -2.101545225871788 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (2 : 2): [ 1.542186124973118 1.542186124973118 ]
S2 (2 : 2): [ -2.101545225871788 -2.101545225871788 ]


ris (2 : 2): [ -0.55935910089867 -0.55935910089867 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
ris (2 : 2): [ -0.55935910089867 -0.55935910089867 ]
div = 2.000


ris (2 : 2): [ -0.279679550449335 -0.279679550449335 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (3372 interne); stringhe deallocate: 0 (2987 interne)

95: which_v_indxne_d	<=>	ris <- which(v != val)
ris (2 : 2): [ -0.279679550449335 -0.279679550449335 ]
val = -1.#INF


indok (2 : 2): [ 1 2 ]
------------------------------ Fine which_v_indxne_d

97: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 0 0
 ]
riga = 2
indok (2 : 2): [ 1 2 ]
val = 1


checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
------------------------------ Fine aggiungi_riga_indx_i

104: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 2
incr = 1


tmp_i1 (2 : 6): [ 1 2 ]
------------------------------ Fine seq_i

105: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (2 : 6): [ 1 2 ]
indok (2 : 2): [ 1 2 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (2 : 6): [ 1 2 ]
st = 1
end = 2


indInf (2 : 2): [ 1 2 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (2 : 2): [ 1 2 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 2): [ 1 2 ]
indx = 1


indInf (1 : 2): [ 2 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (1 : 2): [ 2 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 2): [ 2 ]
indx = 1


indInf (0 : 2): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 2): [ ]
------------------------------ Fine setdiff_i

107: copia_v_indx_d	<=>	ris <- v[indx]
ris (2 : 2): [ -0.279679550449335 -0.279679550449335 ]
indok (2 : 2): [ 1 2 ]


tmp_d1 (2 : 2): [ -0.279679550449335 -0.279679550449335 ]
------------------------------ Fine copia_v_indx_d

111: min_v_d	<=>	ris <- min(v)
tmp_d1 (2 : 2): [ -0.279679550449335 -0.279679550449335 ]


min = -0.279679550449335
------------------------------ Fine min_v_d

112: assegna1_vs_indx_d	<=>	v[indx] <- val
ris (2 : 2): [ -0.279679550449335 -0.279679550449335 ]
indInf (0 : 2): [ ]
val = -1.279679550449335


ris (2 : 2): [ -0.279679550449335 -0.279679550449335 ]
------------------------------ Fine assegna1_vs_indx_d

128: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 0 1 1 2 ]
h (2 : 5): [ 1 2 ]


tmp_i1 (2 : 6): [ 0 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (2 : 6): [ 0 0 ]
s = 1


ind (2 : 2): [ 1 1 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (2 : 6): [ 0 0 ]
s = 1


tmp_i1 (2 : 2): [ 1 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
tmp_i1 (2 : 2): [ 1 1 ]


T1 (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (2 : 2): [ 1 1 ]
s = 1


tmp_i1 (2 : 2): [ 2 2 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
tmp_i1 (2 : 2): [ 2 2 ]


T2 (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (2 : 6): [ 0 0 ]
s = 1


tmp_i1 (2 : 2): [ 1 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 2 2 1 0 0 0 0 ]
tmp_i1 (2 : 2): [ 1 1 ]


old1 (2 : 2): [ 2 2 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (2 : 2): [ 1 1 ]
s = 1


tmp_i1 (2 : 2): [ 2 2 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 2 2 1 0 0 0 0 ]
tmp_i1 (2 : 2): [ 2 2 ]


old2 (2 : 2): [ 2 2 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (2 : 2): [ 2 2 ]
s = -1


new1 (2 : 2): [ 1 1 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (2 : 2): [ 2 2 ]
s = 1


new2 (2 : 2): [ 3 3 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (2 : 6): [ 0 0 ]
s = 1


tmp_i1 (2 : 2): [ 1 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (2 : 2): [ 1 1 ]


toll1 (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (2 : 2): [ 1 1 ]
s = 1


tmp_i1 (2 : 2): [ 2 2 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (2 : 2): [ 2 2 ]


toll2 (2 : 2): [ 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (2 : 2): [ 2 2 ]
T1 (2 : 2): [ 1.#QNAN 1.#QNAN ]


a (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (2 : 2): [ 1.#QNAN 1.#QNAN ]


a (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (2 : 2): [ 1 1 ]
T1 (2 : 2): [ 1.#QNAN 1.#QNAN ]


b (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (2 : 2): [ 1.#QNAN 1.#QNAN ]


b (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (2 : 2): [ 1.#QNAN 1.#QNAN ]
complemento = 0


ind (2 : 2): [ 1 2 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (2 : 2): [ 6.218345866839256e+175 -3.125653738386077e-005 ]
val = 0


S1 (2 : 2): [ 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (2 : 2): [ 2 2 ]
T2 (2 : 2): [ 1.#QNAN 1.#QNAN ]


a (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (2 : 2): [ 1.#QNAN 1.#QNAN ]


a (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (2 : 2): [ 3 3 ]
T2 (2 : 2): [ 1.#QNAN 1.#QNAN ]


b (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (2 : 2): [ 1.#QNAN 1.#QNAN ]


b (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (2 : 2): [ 1.#QNAN 1.#QNAN ]
b (2 : 2): [ 1.#QNAN 1.#QNAN ]


tmpm_d (2 x 2 : 2 x 2): [
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (2 x 2 : 2 x 2): [
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
 ]


m (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (2 : 2): [ 1.#QNAN 1.#QNAN ]
complemento = 0


ind (2 : 2): [ 1 2 ]
------------------------------ Fine which_v_indxNA_d

140: InitVett_d
S2 (2 : 2): [ 6.218345837556383e+175 5.387842123834802e-310 ]
val = 0


S2 (2 : 2): [ 0 0 ]
------------------------------ Fine InitVett_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (2 : 2): [ 1.#QNAN 1.#QNAN ]
val = 0


ind (0 : 2): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (2 : 2): [ 0 0 ]
ind (0 : 2): [ ]
val = -1.#INF


S2 (2 : 2): [ 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (2 : 2): [ 0 0 ]
S2 (2 : 2): [ 0 0 ]


ris (2 : 2): [ 0 0 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
ris (2 : 2): [ 0 0 ]
div = 2.000


ris (2 : 2): [ 0 0 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (3457 interne); stringhe deallocate: 0 (3072 interne)

131: which_v_indxne_d	<=>	ris <- which(v != val)
ris (2 : 2): [ 0 0 ]
val = -1.#INF


indok (2 : 2): [ 1 2 ]
------------------------------ Fine which_v_indxne_d

133: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkIN (2 x 2 : 2 x 2): [
	 1 1
	 0 0
 ]
riga = 2
indok (2 : 2): [ 1 2 ]
val = 1


checkIN (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
------------------------------ Fine aggiungi_riga_indx_i

141: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 2
incr = 1


tmp_i1 (2 : 6): [ 1 2 ]
------------------------------ Fine seq_i

142: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (2 : 6): [ 1 2 ]
indok (2 : 2): [ 1 2 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (2 : 6): [ 1 2 ]
st = 1
end = 2


indInf (2 : 2): [ 1 2 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (2 : 2): [ 1 2 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 2): [ 1 2 ]
indx = 1


indInf (1 : 2): [ 2 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (1 : 2): [ 2 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 2): [ 2 ]
indx = 1


indInf (0 : 2): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 2): [ ]
------------------------------ Fine setdiff_i

144: copia_v_indx_d	<=>	ris <- v[indx]
ris (2 : 2): [ 0 0 ]
indok (2 : 2): [ 1 2 ]


tmp_d1 (2 : 2): [ 0 0 ]
------------------------------ Fine copia_v_indx_d

148: min_v_d	<=>	ris <- min(v)
tmp_d1 (2 : 2): [ 0 0 ]


min = 0
------------------------------ Fine min_v_d

149: assegna1_vs_indx_d	<=>	v[indx] <- val
ris (2 : 2): [ 0 0 ]
indInf (0 : 2): [ ]
val = -1


ris (2 : 2): [ 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

159: somma_vv_d	<=>	ris <- v1 + v2
ris (2 : 2): [ -0.279679550449335 -0.279679550449335 ]
ris (2 : 2): [ 0 0 ]


tmp_d1 (2 : 2): [ -0.279679550449335 -0.279679550449335 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (2 x 2 : 2 x 2): [
	 -0.279679550449335 -0.279679550449335
	 0 0
 ]
riga = 2
tmp_d1 (2 : 2): [ -0.279679550449335 -0.279679550449335 ]


ris (2 x 2 : 2 x 2): [
	 -0.279679550449335 -0.279679550449335
	 -0.279679550449335 -0.279679550449335
 ]
------------------------------ Fine aggiungi_mv_riga_d

168: somma_m_d	<=>	ris <- sum(m)
ris (2 x 2 : 2 x 2): [
	 -0.279679550449335 -0.279679550449335
	 -0.279679550449335 -0.279679550449335
 ]


ris: -1.11871820179734
------------------------------ Fine somma_m_d

173: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
checkIN (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]


aus (2 : 2): [ 2 2 ]
------------------------------ Fine somma_colonne_i

175: which_v_indxne_i	<=>	ris <- which(v != val)
aus (2 : 2): [ 2 2 ]
val = 0


tmp_i1 (2 : 6): [ 1 2 ]
------------------------------ Fine which_v_indxne_i

186: somma_righe_i	<=>	ris <- apply(m, 1, sum)
checkIN (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]


rs (2 : 2): [ 2 2 ]
------------------------------ Fine somma_righe_i

188: ordine_i	<=>	ris <- order(v, decreasing=decr)
rs (2 : 2): [ 2 2 ]
decr = 0


ord_ind (2 : 2): [ 1 2 ]
------------------------------ Fine ordine_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
r = 1
val = 0


I_add (2 : 4): [ 1 2 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
I (0 : 0): [ ]
I_add (2 : 4): [ 1 2 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (2 : 2): [ 1 2 ]


ris (2 : 2): [ 1 2 ]
------------------------------ Fine elimina_doppi_i



ris (2 : 2): [ 1 2 ]
------------------------------ Fine unione1_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
r = 2
val = 0


I_add (2 : 4): [ 1 2 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
ris (2 : 2): [ 1 2 ]
I_add (2 : 4): [ 1 2 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (4 : 4): [ 1 2 1 2 ]


ris (2 : 4): [ 1 2 ]
------------------------------ Fine elimina_doppi_i



ris (2 : 4): [ 1 2 ]
------------------------------ Fine unione1_i

216: assegna1_mindxlt_i	<=>	m1[which(m2<val1)] <- val2
checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
val1 = 0
val2 = 0


checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
------------------------------ Fine assegna1_mindxlt_i

218: assegna1_m_indxgt_i	<=>	m1[which(m2>val1)] <- val2
checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
val1 = 0
val2 = 1


checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
------------------------------ Fine assegna1_m_indxgt_i

220: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]


aus (2 : 2): [ 2 2 ]
------------------------------ Fine somma_colonne_i

222: which_v_indxne_i	<=>	ris <- which(v != val)
aus (2 : 2): [ 2 2 ]
val = 0


tmp_i1 (2 : 6): [ 1 2 ]
------------------------------ Fine which_v_indxne_i

232: somma_righe_i	<=>	ris <- apply(m, 1, sum)
checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]


rs (2 : 2): [ 2 2 ]
------------------------------ Fine somma_righe_i

234: ordine_i	<=>	ris <- order(v, decreasing=decr)
rs (2 : 2): [ 2 2 ]
decr = 0


ord_ind (2 : 2): [ 1 2 ]
------------------------------ Fine ordine_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
r = 1
val = 0


I_add (2 : 4): [ 1 2 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (0 : 4): [ ]
I_add (2 : 4): [ 1 2 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (2 : 2): [ 1 2 ]


ris (2 : 2): [ 1 2 ]
------------------------------ Fine elimina_doppi_i



ris (2 : 2): [ 1 2 ]
------------------------------ Fine unione1_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
r = 2
val = 0


I_add (2 : 4): [ 1 2 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (2 : 2): [ 1 2 ]
I_add (2 : 4): [ 1 2 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (4 : 4): [ 1 2 1 2 ]


ris (2 : 4): [ 1 2 ]
------------------------------ Fine elimina_doppi_i



ris (2 : 4): [ 1 2 ]
------------------------------ Fine unione1_i


Stringhe allocate: 5 (3522 interne); stringhe deallocate: 0 (3212 interne)


Stringhe allocate: 5 (3527 interne); stringhe deallocate: 0 (3227 interne)


*** module2 ***
44: seq_i	<=>	ris <- seq(da, a, incr)
da = 2
a = 2
incr = 1


tmp1_i (1 : 1): [ 2 ]
------------------------------ Fine seq_i


*** sampleB ***
58: rep_v_i	<=>	ris <- rep(v, rip)
tmp1_i (1 : 1): [ 2 ]
rip = 1


ris (1 : 1): [ 2 ]
------------------------------ Fine rep_v_i


Stringhe allocate: 5 (3537 interne); stringhe deallocate: 0 (3227 interne)


*** mod2 ***
17: InitMatr_i
ris (2 x 2 : 2 x 2): [
	 79863632 1918959715
	 778334061 25390
 ]
val = 0


ris (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
------------------------------ Fine InitMatr_i


Stringhe allocate: 5 (3542 interne); stringhe deallocate: 0 (3227 interne)


*** probmod ***
46: InitMatr_i
checkOUT (2 x 2 : 2 x 2): [
	 38204480 1918959715
	 778657656 25390
 ]
val = 0


checkOUT (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
------------------------------ Fine InitMatr_i

48: InitMatr_i
checkIN (2 x 2 : 2 x 2): [
	 79863744 1918959715
	 778334061 25390
 ]
val = 0


checkIN (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
------------------------------ Fine InitMatr_i

50: InitMatr_d
ris (2 x 2 : 2 x 2): [
	 6.218345866833357e+175 0
	 5.387842123834802e-310 0
 ]
val = 0


ris (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
------------------------------ Fine InitMatr_d

52: somma_righe_i	<=>	ris <- apply(m, 1, sum)
ris (2 x 2 : 2 x 2): [
	 0 0
	 1 0
 ]


M_in (2 : 2): [ 0 1 ]
------------------------------ Fine somma_righe_i

54: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
ris (2 x 2 : 2 x 2): [
	 0 0
	 1 0
 ]


M_out (2 : 2): [ 1 0 ]
------------------------------ Fine somma_colonne_i

57: InitMatr_i
memory (2 x 3 : 2 x 3): [
	 79857640 0 79037328
	 2 0 0
 ]
val = -2147483648


memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
------------------------------ Fine InitMatr_i

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 0


tmp_i1 (0 : 6): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 1


tmp_i2 (0 : 6): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 6): [ ]
tmp_i2 (0 : 6): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

92: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sout (5 : 5): [ 2 2 0 0 0 ]
h (2 : 5): [ 1 2 ]


tmp_i1 (2 : 6): [ 2 2 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (2 : 6): [ 2 2 ]
s = 1


ind (2 : 2): [ 3 3 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (2 : 6): [ 2 2 ]
s = 1


tmp_i1 (2 : 2): [ 3 3 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (2 : 2): [ 3 3 ]


T1 (2 : 2): [ 0.7867244574868211 0.7867244574868211 ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (2 : 2): [ 3 3 ]
s = 1


tmp_i1 (2 : 2): [ 4 4 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (2 : 2): [ 4 4 ]


T2 (2 : 2): [ 0.3224199317354524 0.3224199317354524 ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (2 : 6): [ 2 2 ]
s = 1


tmp_i1 (2 : 2): [ 3 3 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 3 0 2 0 0 0 0 ]
tmp_i1 (2 : 2): [ 3 3 ]


old1 (2 : 2): [ 2 2 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (2 : 2): [ 3 3 ]
s = 1


tmp_i1 (2 : 2): [ 4 4 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 3 0 2 0 0 0 0 ]
tmp_i1 (2 : 2): [ 4 4 ]


old2 (2 : 2): [ 0 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (2 : 2): [ 2 2 ]
s = -1


new1 (2 : 2): [ 1 1 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (2 : 2): [ 0 0 ]
s = 1


new2 (2 : 2): [ 1 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (2 : 6): [ 2 2 ]
s = 1


tmp_i1 (2 : 2): [ 3 3 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (2 : 2): [ 3 3 ]


toll1 (2 : 2): [ 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (2 : 2): [ 3 3 ]
s = 1


tmp_i1 (2 : 2): [ 4 4 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (2 : 2): [ 4 4 ]


toll2 (2 : 2): [ 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (2 : 2): [ 2 2 ]
T1 (2 : 2): [ 0.7867244574868211 0.7867244574868211 ]


a (2 : 2): [ 1.213275542513179 1.213275542513179 ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (2 : 2): [ 1.213275542513179 1.213275542513179 ]


a (2 : 2): [ 1.213275542513179 1.213275542513179 ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (2 : 2): [ 1 1 ]
T1 (2 : 2): [ 0.7867244574868211 0.7867244574868211 ]


b (2 : 2): [ 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (2 : 2): [ 0.2132755425131789 0.2132755425131789 ]


b (2 : 2): [ 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (2 : 2): [ 0.7867244574868211 0.7867244574868211 ]
complemento = 0


ind (0 : 2): [ ]
------------------------------ Fine which_v_indxNA_d

68: assegna1_vs_indx_d	<=>	v[indx] <- val
a (2 : 2): [ 1.213275542513179 1.213275542513179 ]
ind (0 : 2): [ ]
val = 0


a (2 : 2): [ 1.213275542513179 1.213275542513179 ]
------------------------------ Fine assegna1_vs_indx_d

70: assegna1_vs_indx_d	<=>	v[indx] <- val
b (2 : 2): [ 0.2132755425131789 0.2132755425131789 ]
ind (0 : 2): [ ]
val = 0


b (2 : 2): [ 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine assegna1_vs_indx_d

78: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (2 : 2): [ 1.213275542513179 1.213275542513179 ]
b (2 : 2): [ 0.2132755425131789 0.2132755425131789 ]


tmpm_d (2 x 2 : 2 x 2): [
	 1.213275542513179 0.2132755425131789
	 1.213275542513179 0.2132755425131789
 ]
------------------------------ Fine cbind2v_d

79: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (2 x 2 : 2 x 2): [
	 1.213275542513179 0.2132755425131789
	 1.213275542513179 0.2132755425131789
 ]


m (2 : 2): [ 1.213275542513179 1.213275542513179 ]
------------------------------ Fine max_righe_d

81: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (2 : 2): [ 1.213275542513179 1.213275542513179 ]
b (2 : 2): [ 0.2132755425131789 0.2132755425131789 ]
m (2 : 2): [ 1.213275542513179 1.213275542513179 ]
T1 (2 : 2): [ 0.7867244574868211 0.7867244574868211 ]


S1 (2 : 2): [ 1.542186124973118 1.542186124973118 ]
------------------------------ Fine f_aux_d

83: diff_vv_d	<=>	ris <- v1 - v2
a (2 : 2): [ 1.213275542513179 1.213275542513179 ]
toll1 (2 : 2): [ 1 1 ]


tmp_d1 (2 : 2): [ 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine diff_vv_d

84: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (2 : 2): [ 0.2132755425131789 0.2132755425131789 ]
val = 0

ind1 (0 : 2): [ ]
------------------------------ Fine which_v_indxlt_d

86: diff_vv_d	<=>	ris <- v1 - v2
b (2 : 2): [ 0.2132755425131789 0.2132755425131789 ]
toll1 (2 : 2): [ 1 1 ]


tmp_d1 (2 : 2): [ -0.7867244574868211 -0.7867244574868211 ]
------------------------------ Fine diff_vv_d

87: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (2 : 2): [ -0.7867244574868211 -0.7867244574868211 ]
val = 0


ind2 (0 : 2): [ ]
------------------------------ Fine which_v_indxgt_d

89: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (0 : 2): [ ]
ind2 (0 : 2): [ ]


tmp_i1 (0 : 2): [ ]
------------------------------ Fine interseca_i

91: assegna1_vs_indx_d	<=>	v[indx] <- val
S1 (2 : 2): [ 1.542186124973118 1.542186124973118 ]
tmp_i1 (0 : 2): [ ]
val = -1.#INF


S1 (2 : 2): [ 1.542186124973118 1.542186124973118 ]
------------------------------ Fine assegna1_vs_indx_d

93: assegna1_vs_indx_d	<=>	v[indx] <- val
S1 (2 : 2): [ 1.542186124973118 1.542186124973118 ]
ind (0 : 2): [ ]
val = 0


S1 (2 : 2): [ 1.542186124973118 1.542186124973118 ]
------------------------------ Fine assegna1_vs_indx_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (2 : 2): [ 0 0 ]
T2 (2 : 2): [ 0.3224199317354524 0.3224199317354524 ]


a (2 : 2): [ -0.3224199317354524 -0.3224199317354524 ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (2 : 2): [ -0.3224199317354524 -0.3224199317354524 ]


a (2 : 2): [ 0.3224199317354524 0.3224199317354524 ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (2 : 2): [ 1 1 ]
T2 (2 : 2): [ 0.3224199317354524 0.3224199317354524 ]


b (2 : 2): [ 0.6775800682645476 0.6775800682645476 ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (2 : 2): [ 0.6775800682645476 0.6775800682645476 ]


b (2 : 2): [ 0.6775800682645476 0.6775800682645476 ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (2 : 2): [ 0.3224199317354524 0.3224199317354524 ]
b (2 : 2): [ 0.6775800682645476 0.6775800682645476 ]


tmpm_d (2 x 2 : 2 x 2): [
	 0.3224199317354524 0.6775800682645476
	 0.3224199317354524 0.6775800682645476
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (2 x 2 : 2 x 2): [
	 0.3224199317354524 0.6775800682645476
	 0.3224199317354524 0.6775800682645476
 ]


m (2 : 2): [ 0.6775800682645476 0.6775800682645476 ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (2 : 2): [ 0.3224199317354524 0.3224199317354524 ]
complemento = 0


ind (0 : 2): [ ]
------------------------------ Fine which_v_indxNA_d

115: assegna1_vs_indx_d	<=>	v[indx] <- val
a (2 : 2): [ 0.3224199317354524 0.3224199317354524 ]
ind (0 : 2): [ ]
val = 0


a (2 : 2): [ 0.3224199317354524 0.3224199317354524 ]
------------------------------ Fine assegna1_vs_indx_d

117: assegna1_vs_indx_d	<=>	v[indx] <- val
b (2 : 2): [ 0.6775800682645476 0.6775800682645476 ]
ind (0 : 2): [ ]
val = 0


b (2 : 2): [ 0.6775800682645476 0.6775800682645476 ]
------------------------------ Fine assegna1_vs_indx_d

119: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (2 : 2): [ 0.3224199317354524 0.3224199317354524 ]
b (2 : 2): [ 0.6775800682645476 0.6775800682645476 ]


tmpm_d (2 x 2 : 2 x 2): [
	 0.3224199317354524 0.6775800682645476
	 0.3224199317354524 0.6775800682645476
 ]
------------------------------ Fine cbind2v_d

120: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (2 x 2 : 2 x 2): [
	 0.3224199317354524 0.6775800682645476
	 0.3224199317354524 0.6775800682645476
 ]


m (2 : 2): [ 0.6775800682645476 0.6775800682645476 ]
------------------------------ Fine max_righe_d

122: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (2 : 2): [ 0.3224199317354524 0.3224199317354524 ]
b (2 : 2): [ 0.6775800682645476 0.6775800682645476 ]
m (2 : 2): [ 0.6775800682645476 0.6775800682645476 ]
T2 (2 : 2): [ 0.3224199317354524 0.3224199317354524 ]


S2 (2 : 2): [ -2.101545225871788 -2.101545225871788 ]
------------------------------ Fine f_aux_d

124: diff_vv_d	<=>	ris <- v1 - v2
a (2 : 2): [ 0.3224199317354524 0.3224199317354524 ]
toll2 (2 : 2): [ 1 1 ]


tmp_d1 (2 : 2): [ -0.6775800682645476 -0.6775800682645476 ]
------------------------------ Fine diff_vv_d

125: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (2 : 2): [ -0.6775800682645476 -0.6775800682645476 ]
val = 0

ind1 (2 : 2): [ 1 2 ]
------------------------------ Fine which_v_indxlt_d

127: diff_vv_d	<=>	ris <- v1 - v2
b (2 : 2): [ 0.6775800682645476 0.6775800682645476 ]
toll2 (2 : 2): [ 1 1 ]


tmp_d1 (2 : 2): [ -0.3224199317354524 -0.3224199317354524 ]
------------------------------ Fine diff_vv_d

128: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (2 : 2): [ -0.3224199317354524 -0.3224199317354524 ]
val = 0


ind2 (0 : 2): [ ]
------------------------------ Fine which_v_indxgt_d

130: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (2 : 2): [ 1 2 ]
ind2 (0 : 2): [ ]
2459: esiste_v_i	<=>	elem %IN% v
elem = 1
ind2 (0 : 2): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 1
tmp_i1 (0 : 2): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 2
ind2 (0 : 2): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 2
tmp_i1 (0 : 2): [ ]


indx = 0
------------------------------ Fine esiste_v_i



tmp_i1 (0 : 2): [ ]
------------------------------ Fine interseca_i

132: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (2 : 2): [ -2.101545225871788 -2.101545225871788 ]
tmp_i1 (0 : 2): [ ]
val = -1.#INF


S2 (2 : 2): [ -2.101545225871788 -2.101545225871788 ]
------------------------------ Fine assegna1_vs_indx_d

134: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (2 : 2): [ -2.101545225871788 -2.101545225871788 ]
ind (0 : 2): [ ]
val = 0


S2 (2 : 2): [ -2.101545225871788 -2.101545225871788 ]
------------------------------ Fine assegna1_vs_indx_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (2 : 2): [ 0.3224199317354524 0.3224199317354524 ]
val = 0


ind (0 : 2): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (2 : 2): [ -2.101545225871788 -2.101545225871788 ]
ind (0 : 2): [ ]
val = -1.#INF


S2 (2 : 2): [ -2.101545225871788 -2.101545225871788 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (2 : 2): [ 1.542186124973118 1.542186124973118 ]
S2 (2 : 2): [ -2.101545225871788 -2.101545225871788 ]


ris (2 : 2): [ -0.55935910089867 -0.55935910089867 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
ris (2 : 2): [ -0.55935910089867 -0.55935910089867 ]
div = 2.000


ris (2 : 2): [ -0.279679550449335 -0.279679550449335 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (3702 interne); stringhe deallocate: 0 (3327 interne)

95: which_v_indxne_d	<=>	ris <- which(v != val)
ris (2 : 2): [ -0.279679550449335 -0.279679550449335 ]
val = -1.#INF


indok (2 : 2): [ 1 2 ]
------------------------------ Fine which_v_indxne_d

97: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkOUT (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
riga = 1
indok (2 : 2): [ 1 2 ]
val = 1


checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 0 0
 ]
------------------------------ Fine aggiungi_riga_indx_i

104: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 2
incr = 1


tmp_i1 (2 : 6): [ 1 2 ]
------------------------------ Fine seq_i

105: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (2 : 6): [ 1 2 ]
indok (2 : 2): [ 1 2 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (2 : 6): [ 1 2 ]
st = 1
end = 2


indInf (2 : 2): [ 1 2 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (2 : 2): [ 1 2 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 2): [ 1 2 ]
indx = 1


indInf (1 : 2): [ 2 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (1 : 2): [ 2 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 2): [ 2 ]
indx = 1


indInf (0 : 2): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 2): [ ]
------------------------------ Fine setdiff_i

107: copia_v_indx_d	<=>	ris <- v[indx]
ris (2 : 2): [ -0.279679550449335 -0.279679550449335 ]
indok (2 : 2): [ 1 2 ]


tmp_d1 (2 : 2): [ -0.279679550449335 -0.279679550449335 ]
------------------------------ Fine copia_v_indx_d

111: min_v_d	<=>	ris <- min(v)
tmp_d1 (2 : 2): [ -0.279679550449335 -0.279679550449335 ]


min = -0.279679550449335
------------------------------ Fine min_v_d

112: assegna1_vs_indx_d	<=>	v[indx] <- val
ris (2 : 2): [ -0.279679550449335 -0.279679550449335 ]
indInf (0 : 2): [ ]
val = -1.279679550449335


ris (2 : 2): [ -0.279679550449335 -0.279679550449335 ]
------------------------------ Fine assegna1_vs_indx_d

155: InitVett_d
S_in (2 : 2): [ 6.21834586683397e+175 2.048428433988699 ]
val = 0


S_in (2 : 2): [ 0 0 ]
------------------------------ Fine InitVett_d

156: aggiungi_ms_riga_i	<=>	m[riga,] <- val # riga <= dim(m)[0] + 1
checkIN (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
riga = 1, val = 1


checkIN (2 x 2 : 2 x 2): [
	 1 1
	 0 0
 ]
------------------------------ Fine aggiungi_ms_riga_i

159: somma_vv_d	<=>	ris <- v1 + v2
ris (2 : 2): [ -0.279679550449335 -0.279679550449335 ]
S_in (2 : 2): [ 0 0 ]


tmp_d1 (2 : 2): [ -0.279679550449335 -0.279679550449335 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
riga = 1
tmp_d1 (2 : 2): [ -0.279679550449335 -0.279679550449335 ]


ris (2 x 2 : 2 x 2): [
	 -0.279679550449335 -0.279679550449335
	 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_d

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 1


tmp_i1 (0 : 6): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 0


tmp_i2 (0 : 6): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 6): [ ]
tmp_i2 (0 : 6): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

119: InitVett_d
ris (2 : 2): [ -0.279679550449335 -0.279679550449335 ]
val = 0


ris (2 : 2): [ 0 0 ]
------------------------------ Fine InitVett_d

122: InitVett_i
tmp_i1 (2 : 6): [ 1 2 ]
val = 1


tmp_i1 (2 : 6): [ 1 1 ]
------------------------------ Fine InitVett_i

123: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 0 0
 ]
riga = 2
tmp_i1 (2 : 6): [ 1 1 ]


checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
------------------------------ Fine aggiungi_mv_riga_i

128: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 0 1 1 2 ]
h (2 : 5): [ 1 2 ]


tmp_i1 (2 : 6): [ 0 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (2 : 6): [ 0 0 ]
s = 1


ind (2 : 2): [ 1 1 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (2 : 6): [ 0 0 ]
s = 1


tmp_i1 (2 : 2): [ 1 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
tmp_i1 (2 : 2): [ 1 1 ]


T1 (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (2 : 2): [ 1 1 ]
s = 1


tmp_i1 (2 : 2): [ 2 2 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
tmp_i1 (2 : 2): [ 2 2 ]


T2 (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (2 : 6): [ 0 0 ]
s = 1


tmp_i1 (2 : 2): [ 1 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 2 2 1 0 0 0 0 ]
tmp_i1 (2 : 2): [ 1 1 ]


old1 (2 : 2): [ 2 2 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (2 : 2): [ 1 1 ]
s = 1


tmp_i1 (2 : 2): [ 2 2 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 2 2 1 0 0 0 0 ]
tmp_i1 (2 : 2): [ 2 2 ]


old2 (2 : 2): [ 2 2 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (2 : 2): [ 2 2 ]
s = -1


new1 (2 : 2): [ 1 1 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (2 : 2): [ 2 2 ]
s = 1


new2 (2 : 2): [ 3 3 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (2 : 6): [ 0 0 ]
s = 1


tmp_i1 (2 : 2): [ 1 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (2 : 2): [ 1 1 ]


toll1 (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (2 : 2): [ 1 1 ]
s = 1


tmp_i1 (2 : 2): [ 2 2 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (2 : 2): [ 2 2 ]


toll2 (2 : 2): [ 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (2 : 2): [ 2 2 ]
T1 (2 : 2): [ 1.#QNAN 1.#QNAN ]


a (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (2 : 2): [ 1.#QNAN 1.#QNAN ]


a (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (2 : 2): [ 1 1 ]
T1 (2 : 2): [ 1.#QNAN 1.#QNAN ]


b (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (2 : 2): [ 1.#QNAN 1.#QNAN ]


b (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (2 : 2): [ 1.#QNAN 1.#QNAN ]
complemento = 0


ind (2 : 2): [ 1 2 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (2 : 2): [ 5.067822985094328e+173 3.125653738386077e-005 ]
val = 0


S1 (2 : 2): [ 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (2 : 2): [ 2 2 ]
T2 (2 : 2): [ 1.#QNAN 1.#QNAN ]


a (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (2 : 2): [ 1.#QNAN 1.#QNAN ]


a (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (2 : 2): [ 3 3 ]
T2 (2 : 2): [ 1.#QNAN 1.#QNAN ]


b (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (2 : 2): [ 1.#QNAN 1.#QNAN ]


b (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (2 : 2): [ 1.#QNAN 1.#QNAN ]
b (2 : 2): [ 1.#QNAN 1.#QNAN ]


tmpm_d (2 x 2 : 2 x 2): [
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (2 x 2 : 2 x 2): [
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
 ]


m (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (2 : 2): [ 1.#QNAN 1.#QNAN ]
complemento = 0


ind (2 : 2): [ 1 2 ]
------------------------------ Fine which_v_indxNA_d

140: InitVett_d
S2 (2 : 2): [ 5.842414621812633e-308 0 ]
val = 0


S2 (2 : 2): [ 0 0 ]
------------------------------ Fine InitVett_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (2 : 2): [ 1.#QNAN 1.#QNAN ]
val = 0


ind (0 : 2): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (2 : 2): [ 0 0 ]
ind (0 : 2): [ ]
val = -1.#INF


S2 (2 : 2): [ 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (2 : 2): [ 0 0 ]
S2 (2 : 2): [ 0 0 ]


S_in (2 : 2): [ 0 0 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
S_in (2 : 2): [ 0 0 ]
div = 2.000


S_in (2 : 2): [ 0 0 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (3807 interne); stringhe deallocate: 0 (3412 interne)

131: which_v_indxne_d	<=>	ris <- which(v != val)
S_in (2 : 2): [ 0 0 ]
val = -1.#INF


indok (2 : 2): [ 1 2 ]
------------------------------ Fine which_v_indxne_d

133: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkIN (2 x 2 : 2 x 2): [
	 1 1
	 0 0
 ]
riga = 2
indok (2 : 2): [ 1 2 ]
val = 1


checkIN (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
------------------------------ Fine aggiungi_riga_indx_i

141: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 2
incr = 1


tmp_i1 (2 : 6): [ 1 2 ]
------------------------------ Fine seq_i

142: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (2 : 6): [ 1 2 ]
indok (2 : 2): [ 1 2 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (2 : 6): [ 1 2 ]
st = 1
end = 2


indInf (2 : 2): [ 1 2 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (2 : 2): [ 1 2 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 2): [ 1 2 ]
indx = 1


indInf (1 : 2): [ 2 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (1 : 2): [ 2 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 2): [ 2 ]
indx = 1


indInf (0 : 2): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 2): [ ]
------------------------------ Fine setdiff_i

144: copia_v_indx_d	<=>	ris <- v[indx]
S_in (2 : 2): [ 0 0 ]
indok (2 : 2): [ 1 2 ]


tmp_d1 (2 : 2): [ 0 0 ]
------------------------------ Fine copia_v_indx_d

148: min_v_d	<=>	ris <- min(v)
tmp_d1 (2 : 2): [ 0 0 ]


min = 0
------------------------------ Fine min_v_d

149: assegna1_vs_indx_d	<=>	v[indx] <- val
S_in (2 : 2): [ 0 0 ]
indInf (0 : 2): [ ]
val = -1


S_in (2 : 2): [ 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

159: somma_vv_d	<=>	ris <- v1 + v2
ris (2 : 2): [ 0 0 ]
S_in (2 : 2): [ 0 0 ]


tmp_d1 (2 : 2): [ 0 0 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (2 x 2 : 2 x 2): [
	 -0.279679550449335 -0.279679550449335
	 0 0
 ]
riga = 2
tmp_d1 (2 : 2): [ 0 0 ]


ris (2 x 2 : 2 x 2): [
	 -0.279679550449335 -0.279679550449335
	 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_d

168: somma_m_d	<=>	ris <- sum(m)
ris (2 x 2 : 2 x 2): [
	 -0.279679550449335 -0.279679550449335
	 0 0
 ]


ris: -0.55935910089867
------------------------------ Fine somma_m_d

173: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
checkIN (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]


aus (2 : 2): [ 2 2 ]
------------------------------ Fine somma_colonne_i

175: which_v_indxne_i	<=>	ris <- which(v != val)
aus (2 : 2): [ 2 2 ]
val = 0


tmp_i1 (2 : 6): [ 1 2 ]
------------------------------ Fine which_v_indxne_i

186: somma_righe_i	<=>	ris <- apply(m, 1, sum)
checkIN (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]


rs (2 : 2): [ 2 2 ]
------------------------------ Fine somma_righe_i

188: ordine_i	<=>	ris <- order(v, decreasing=decr)
rs (2 : 2): [ 2 2 ]
decr = 0


ord_ind (2 : 2): [ 1 2 ]
------------------------------ Fine ordine_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
r = 1
val = 0


I_add (2 : 4): [ 1 2 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
I (0 : 0): [ ]
I_add (2 : 4): [ 1 2 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (2 : 2): [ 1 2 ]


ris (2 : 2): [ 1 2 ]
------------------------------ Fine elimina_doppi_i



ris (2 : 2): [ 1 2 ]
------------------------------ Fine unione1_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
r = 2
val = 0


I_add (2 : 4): [ 1 2 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
ris (2 : 2): [ 1 2 ]
I_add (2 : 4): [ 1 2 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (4 : 4): [ 1 2 1 2 ]


ris (2 : 4): [ 1 2 ]
------------------------------ Fine elimina_doppi_i



ris (2 : 4): [ 1 2 ]
------------------------------ Fine unione1_i

216: assegna1_mindxlt_i	<=>	m1[which(m2<val1)] <- val2
checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
val1 = 0
val2 = 0


checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
------------------------------ Fine assegna1_mindxlt_i

218: assegna1_m_indxgt_i	<=>	m1[which(m2>val1)] <- val2
checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
val1 = 0
val2 = 1


checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
------------------------------ Fine assegna1_m_indxgt_i

220: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]


aus (2 : 2): [ 2 2 ]
------------------------------ Fine somma_colonne_i

222: which_v_indxne_i	<=>	ris <- which(v != val)
aus (2 : 2): [ 2 2 ]
val = 0


tmp_i1 (2 : 6): [ 1 2 ]
------------------------------ Fine which_v_indxne_i

232: somma_righe_i	<=>	ris <- apply(m, 1, sum)
checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]


rs (2 : 2): [ 2 2 ]
------------------------------ Fine somma_righe_i

234: ordine_i	<=>	ris <- order(v, decreasing=decr)
rs (2 : 2): [ 2 2 ]
decr = 0


ord_ind (2 : 2): [ 1 2 ]
------------------------------ Fine ordine_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
r = 1
val = 0


I_add (2 : 4): [ 1 2 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (0 : 4): [ ]
I_add (2 : 4): [ 1 2 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (2 : 2): [ 1 2 ]


ris (2 : 2): [ 1 2 ]
------------------------------ Fine elimina_doppi_i



ris (2 : 2): [ 1 2 ]
------------------------------ Fine unione1_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
r = 2
val = 0


I_add (2 : 4): [ 1 2 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (2 : 2): [ 1 2 ]
I_add (2 : 4): [ 1 2 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (4 : 4): [ 1 2 1 2 ]


ris (2 : 4): [ 1 2 ]
------------------------------ Fine elimina_doppi_i



ris (2 : 4): [ 1 2 ]
------------------------------ Fine unione1_i


Stringhe allocate: 5 (3872 interne); stringhe deallocate: 0 (3552 interne)


Stringhe allocate: 5 (3877 interne); stringhe deallocate: 0 (3562 interne)


*** module3 ***
51: seq_i	<=>	ris <- seq(da, a, incr)
da = 2
a = 2
incr = 1


tmp1_i (1 : 1): [ 2 ]
------------------------------ Fine seq_i


*** sampleB ***
58: rep_v_i	<=>	ris <- rep(v, rip)
tmp1_i (1 : 1): [ 2 ]
rip = 1


ris (1 : 1): [ 2 ]
------------------------------ Fine rep_v_i


Stringhe allocate: 5 (3887 interne); stringhe deallocate: 0 (3562 interne)

54: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 1
incr = 1


tmp1_i (1 : 1): [ 1 ]
------------------------------ Fine seq_i


*** sampleB ***
58: rep_v_i	<=>	ris <- rep(v, rip)
tmp1_i (1 : 1): [ 1 ]
rip = 1


ris (1 : 1): [ 1 ]
------------------------------ Fine rep_v_i


Stringhe allocate: 5 (3892 interne); stringhe deallocate: 0 (3562 interne)


*** mod3 ***
33: InitMatr_i
ris (2 x 2 : 2 x 2): [
	 79865688 1918959715
	 778334061 50357038
 ]
val = 0


ris (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
------------------------------ Fine InitMatr_i

34: copia_v_d	<=>	ris[st:end] <- v[st:end]
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
st = 1
end = 7


STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
------------------------------ Fine copia_v_d

35: copia_v_d	<=>	ris[st:end] <- v[st:end]
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
st = 1
end = 7


STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
------------------------------ Fine copia_v_d

39: segmento_v_d	<=>	ris <- v[st:end]
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
start = 2
end = 2


tmp1_d (1 : 1): [ 3.614836360604185 ]
------------------------------ Fine segmento_v_d

40: somma_v_d	<=>	ris <- sum(v, na.rm=canc_NA)
tmp1_d (1 : 1): [ 3.614836360604185 ]
canc_NA = 1



ris: 3.614836360604185
------------------------------ Fine somma_v_d

43: segmento_v_d	<=>	ris <- v[st:end]
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
start = 2
end = 2


p (1 : 1): [ 3.614836360604185 ]
------------------------------ Fine segmento_v_d

44: dividi1_vs_d	<=>	v <- v / div
p (1 : 1): [ 3.614836360604185 ]
div = 3.615


p (1 : 1): [ 1 ]
------------------------------ Fine dividi1_vs_d

61: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 1
incr = 1


tmp1_i (1 : 1): [ 1 ]
------------------------------ Fine seq_i


*** sampleB_p ***
25: rep_v_i	<=>	ris <- rep(v, rip)
tmp1_i (1 : 1): [ 1 ]
rip = 1


ris (1 : 1): [ 1 ]
------------------------------ Fine rep_v_i

64: somma_v_i	<=>	ris <- sum(v, na.rm=canc_NA)
ris (1 : 1): [ 1 ]
canc_NA = 0



ris: 1
------------------------------ Fine somma_v_i

131: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 1
incr = 1


tmp1_i (1 : 1): [ 1 ]
------------------------------ Fine seq_i

133: assegna1_m_vv_i	<=>	m[vr, vc] <- val
ris (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
tmp1_i (1 : 1): [ 1 ]
scalare_i (1 : 1): [ 2 ]
val = 1


ris (2 x 2 : 2 x 2): [
	 0 1
	 0 0
 ]
------------------------------ Fine assegna1_m_vv_i

135: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 1
incr = 1


indS (1 : 1): [ 1 ]
------------------------------ Fine seq_i

137: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 1
incr = 1


tmp2_i (1 : 1): [ 1 ]
------------------------------ Fine seq_i

138: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp2_i (1 : 1): [ 1 ]
indS (1 : 1): [ 1 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp2_i (1 : 1): [ 1 ]
st = 1
end = 1


indBS (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indBS (1 : 1): [ 1 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indBS (1 : 1): [ 1 ]
indx = 1


indBS (0 : 1): [ ]
------------------------------ Fine elimina1_indx_i



indBS (0 : 1): [ ]
------------------------------ Fine setdiff_i



*****************************************
*****************************************


Stringhe allocate: 5 (3952 interne); stringhe deallocate: 0 (3617 interne)


*** probmod ***
46: InitMatr_i
checkOUT (2 x 2 : 2 x 2): [
	 38207016 99
	 771777326 2
 ]
val = 0


checkOUT (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
------------------------------ Fine InitMatr_i

48: InitMatr_i
checkIN (2 x 2 : 2 x 2): [
	 38206616 1918959715
	 771777326 25390
 ]
val = 0


checkIN (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
------------------------------ Fine InitMatr_i

50: InitMatr_d
ris (2 x 2 : 2 x 2): [
	 6.218345866838924e+175 1.096269788827096e-297
	 3.207340199330375e-294 3.207340211159211e-294
 ]
val = 0


ris (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
------------------------------ Fine InitMatr_d

52: somma_righe_i	<=>	ris <- apply(m, 1, sum)
ris (2 x 2 : 2 x 2): [
	 0 1
	 0 0
 ]


M_in (2 : 2): [ 1 0 ]
------------------------------ Fine somma_righe_i

54: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
ris (2 x 2 : 2 x 2): [
	 0 1
	 0 0
 ]


M_out (2 : 2): [ 0 1 ]
------------------------------ Fine somma_colonne_i

57: InitMatr_i
memory (2 x 3 : 2 x 3): [
	 79860328 0 79037808
	 1 0 0
 ]
val = -2147483648


memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
------------------------------ Fine InitMatr_i

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 1


tmp_i1 (0 : 6): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 0


tmp_i2 (0 : 6): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 6): [ ]
tmp_i2 (0 : 6): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

119: InitVett_d
S_out (2 : 2): [ 3.287239484603619e-085 5.38784212246792e-310 ]
val = 0


S_out (2 : 2): [ 0 0 ]
------------------------------ Fine InitVett_d

122: InitVett_i
tmp_i1 (2 : 6): [ 79857640 1 ]
val = 1


tmp_i1 (2 : 6): [ 1 1 ]
------------------------------ Fine InitVett_i

123: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
checkOUT (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
riga = 1
tmp_i1 (2 : 6): [ 1 1 ]


checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_i

128: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 0 1 1 2 ]
h (2 : 5): [ 1 2 ]


tmp_i1 (2 : 6): [ 0 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (2 : 6): [ 0 0 ]
s = 1


ind (2 : 2): [ 1 1 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (2 : 6): [ 0 0 ]
s = 1


tmp_i1 (2 : 2): [ 1 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
tmp_i1 (2 : 2): [ 1 1 ]


T1 (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (2 : 2): [ 1 1 ]
s = 1


tmp_i1 (2 : 2): [ 2 2 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
tmp_i1 (2 : 2): [ 2 2 ]


T2 (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (2 : 6): [ 0 0 ]
s = 1


tmp_i1 (2 : 2): [ 1 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 2 2 1 0 0 0 0 ]
tmp_i1 (2 : 2): [ 1 1 ]


old1 (2 : 2): [ 2 2 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (2 : 2): [ 1 1 ]
s = 1


tmp_i1 (2 : 2): [ 2 2 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 2 2 1 0 0 0 0 ]
tmp_i1 (2 : 2): [ 2 2 ]


old2 (2 : 2): [ 2 2 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (2 : 2): [ 2 2 ]
s = -1


new1 (2 : 2): [ 1 1 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (2 : 2): [ 2 2 ]
s = 1


new2 (2 : 2): [ 3 3 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (2 : 6): [ 0 0 ]
s = 1


tmp_i1 (2 : 2): [ 1 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (2 : 2): [ 1 1 ]


toll1 (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (2 : 2): [ 1 1 ]
s = 1


tmp_i1 (2 : 2): [ 2 2 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (2 : 2): [ 2 2 ]


toll2 (2 : 2): [ 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (2 : 2): [ 2 2 ]
T1 (2 : 2): [ 1.#QNAN 1.#QNAN ]


a (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (2 : 2): [ 1.#QNAN 1.#QNAN ]


a (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (2 : 2): [ 1 1 ]
T1 (2 : 2): [ 1.#QNAN 1.#QNAN ]


b (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (2 : 2): [ 1.#QNAN 1.#QNAN ]


b (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (2 : 2): [ 1.#QNAN 1.#QNAN ]
complemento = 0


ind (2 : 2): [ 1 2 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (2 : 2): [ 6.218345837554971e+175 3.125653738386077e-005 ]
val = 0


S1 (2 : 2): [ 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (2 : 2): [ 2 2 ]
T2 (2 : 2): [ 1.#QNAN 1.#QNAN ]


a (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (2 : 2): [ 1.#QNAN 1.#QNAN ]


a (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (2 : 2): [ 3 3 ]
T2 (2 : 2): [ 1.#QNAN 1.#QNAN ]


b (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (2 : 2): [ 1.#QNAN 1.#QNAN ]


b (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (2 : 2): [ 1.#QNAN 1.#QNAN ]
b (2 : 2): [ 1.#QNAN 1.#QNAN ]


tmpm_d (2 x 2 : 2 x 2): [
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (2 x 2 : 2 x 2): [
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
 ]


m (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (2 : 2): [ 1.#QNAN 1.#QNAN ]
complemento = 0


ind (2 : 2): [ 1 2 ]
------------------------------ Fine which_v_indxNA_d

140: InitVett_d
S2 (2 : 2): [ 5.006279180561196e+173 2.048428433988699 ]
val = 0


S2 (2 : 2): [ 0 0 ]
------------------------------ Fine InitVett_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (2 : 2): [ 1.#QNAN 1.#QNAN ]
val = 0


ind (0 : 2): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (2 : 2): [ 0 0 ]
ind (0 : 2): [ ]
val = -1.#INF


S2 (2 : 2): [ 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (2 : 2): [ 0 0 ]
S2 (2 : 2): [ 0 0 ]


ris (2 : 2): [ 0 0 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
ris (2 : 2): [ 0 0 ]
div = 2.000


ris (2 : 2): [ 0 0 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (4102 interne); stringhe deallocate: 0 (3702 interne)

131: which_v_indxne_d	<=>	ris <- which(v != val)
ris (2 : 2): [ 0 0 ]
val = -1.#INF


indok (2 : 2): [ 1 2 ]
------------------------------ Fine which_v_indxne_d

133: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkIN (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
riga = 1
indok (2 : 2): [ 1 2 ]
val = 1


checkIN (2 x 2 : 2 x 2): [
	 1 1
	 0 0
 ]
------------------------------ Fine aggiungi_riga_indx_i

141: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 2
incr = 1


tmp_i1 (2 : 6): [ 1 2 ]
------------------------------ Fine seq_i

142: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (2 : 6): [ 1 2 ]
indok (2 : 2): [ 1 2 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (2 : 6): [ 1 2 ]
st = 1
end = 2


indInf (2 : 2): [ 1 2 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (2 : 2): [ 1 2 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 2): [ 1 2 ]
indx = 1


indInf (1 : 2): [ 2 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (1 : 2): [ 2 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 2): [ 2 ]
indx = 1


indInf (0 : 2): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 2): [ ]
------------------------------ Fine setdiff_i

144: copia_v_indx_d	<=>	ris <- v[indx]
ris (2 : 2): [ 0 0 ]
indok (2 : 2): [ 1 2 ]


tmp_d1 (2 : 2): [ 0 0 ]
------------------------------ Fine copia_v_indx_d

148: min_v_d	<=>	ris <- min(v)
tmp_d1 (2 : 2): [ 0 0 ]


min = 0
------------------------------ Fine min_v_d

149: assegna1_vs_indx_d	<=>	v[indx] <- val
ris (2 : 2): [ 0 0 ]
indInf (0 : 2): [ ]
val = -1


ris (2 : 2): [ 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

159: somma_vv_d	<=>	ris <- v1 + v2
S_out (2 : 2): [ 0 0 ]
ris (2 : 2): [ 0 0 ]


tmp_d1 (2 : 2): [ 0 0 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
riga = 1
tmp_d1 (2 : 2): [ 0 0 ]


ris (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_d

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 0


tmp_i1 (0 : 6): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 1


tmp_i2 (0 : 6): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 6): [ ]
tmp_i2 (0 : 6): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

92: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sout (5 : 5): [ 2 2 0 0 0 ]
h (2 : 5): [ 1 2 ]


tmp_i1 (2 : 6): [ 2 2 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (2 : 6): [ 2 2 ]
s = 1


ind (2 : 2): [ 3 3 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (2 : 6): [ 2 2 ]
s = 1


tmp_i1 (2 : 2): [ 3 3 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (2 : 2): [ 3 3 ]


T1 (2 : 2): [ 0.7867244574868211 0.7867244574868211 ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (2 : 2): [ 3 3 ]
s = 1


tmp_i1 (2 : 2): [ 4 4 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (2 : 2): [ 4 4 ]


T2 (2 : 2): [ 0.3224199317354524 0.3224199317354524 ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (2 : 6): [ 2 2 ]
s = 1


tmp_i1 (2 : 2): [ 3 3 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 3 0 2 0 0 0 0 ]
tmp_i1 (2 : 2): [ 3 3 ]


old1 (2 : 2): [ 2 2 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (2 : 2): [ 3 3 ]
s = 1


tmp_i1 (2 : 2): [ 4 4 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 3 0 2 0 0 0 0 ]
tmp_i1 (2 : 2): [ 4 4 ]


old2 (2 : 2): [ 0 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (2 : 2): [ 2 2 ]
s = -1


new1 (2 : 2): [ 1 1 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (2 : 2): [ 0 0 ]
s = 1


new2 (2 : 2): [ 1 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (2 : 6): [ 2 2 ]
s = 1


tmp_i1 (2 : 2): [ 3 3 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (2 : 2): [ 3 3 ]


toll1 (2 : 2): [ 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (2 : 2): [ 3 3 ]
s = 1


tmp_i1 (2 : 2): [ 4 4 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (2 : 2): [ 4 4 ]


toll2 (2 : 2): [ 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (2 : 2): [ 2 2 ]
T1 (2 : 2): [ 0.7867244574868211 0.7867244574868211 ]


a (2 : 2): [ 1.213275542513179 1.213275542513179 ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (2 : 2): [ 1.213275542513179 1.213275542513179 ]


a (2 : 2): [ 1.213275542513179 1.213275542513179 ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (2 : 2): [ 1 1 ]
T1 (2 : 2): [ 0.7867244574868211 0.7867244574868211 ]


b (2 : 2): [ 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (2 : 2): [ 0.2132755425131789 0.2132755425131789 ]


b (2 : 2): [ 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (2 : 2): [ 0.7867244574868211 0.7867244574868211 ]
complemento = 0


ind (0 : 2): [ ]
------------------------------ Fine which_v_indxNA_d

68: assegna1_vs_indx_d	<=>	v[indx] <- val
a (2 : 2): [ 1.213275542513179 1.213275542513179 ]
ind (0 : 2): [ ]
val = 0


a (2 : 2): [ 1.213275542513179 1.213275542513179 ]
------------------------------ Fine assegna1_vs_indx_d

70: assegna1_vs_indx_d	<=>	v[indx] <- val
b (2 : 2): [ 0.2132755425131789 0.2132755425131789 ]
ind (0 : 2): [ ]
val = 0


b (2 : 2): [ 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine assegna1_vs_indx_d

78: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (2 : 2): [ 1.213275542513179 1.213275542513179 ]
b (2 : 2): [ 0.2132755425131789 0.2132755425131789 ]


tmpm_d (2 x 2 : 2 x 2): [
	 1.213275542513179 0.2132755425131789
	 1.213275542513179 0.2132755425131789
 ]
------------------------------ Fine cbind2v_d

79: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (2 x 2 : 2 x 2): [
	 1.213275542513179 0.2132755425131789
	 1.213275542513179 0.2132755425131789
 ]


m (2 : 2): [ 1.213275542513179 1.213275542513179 ]
------------------------------ Fine max_righe_d

81: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (2 : 2): [ 1.213275542513179 1.213275542513179 ]
b (2 : 2): [ 0.2132755425131789 0.2132755425131789 ]
m (2 : 2): [ 1.213275542513179 1.213275542513179 ]
T1 (2 : 2): [ 0.7867244574868211 0.7867244574868211 ]


S1 (2 : 2): [ 1.542186124973118 1.542186124973118 ]
------------------------------ Fine f_aux_d

83: diff_vv_d	<=>	ris <- v1 - v2
a (2 : 2): [ 1.213275542513179 1.213275542513179 ]
toll1 (2 : 2): [ 1 1 ]


tmp_d1 (2 : 2): [ 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine diff_vv_d

84: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (2 : 2): [ 0.2132755425131789 0.2132755425131789 ]
val = 0

ind1 (0 : 2): [ ]
------------------------------ Fine which_v_indxlt_d

86: diff_vv_d	<=>	ris <- v1 - v2
b (2 : 2): [ 0.2132755425131789 0.2132755425131789 ]
toll1 (2 : 2): [ 1 1 ]


tmp_d1 (2 : 2): [ -0.7867244574868211 -0.7867244574868211 ]
------------------------------ Fine diff_vv_d

87: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (2 : 2): [ -0.7867244574868211 -0.7867244574868211 ]
val = 0


ind2 (0 : 2): [ ]
------------------------------ Fine which_v_indxgt_d

89: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (0 : 2): [ ]
ind2 (0 : 2): [ ]


tmp_i1 (0 : 2): [ ]
------------------------------ Fine interseca_i

91: assegna1_vs_indx_d	<=>	v[indx] <- val
S1 (2 : 2): [ 1.542186124973118 1.542186124973118 ]
tmp_i1 (0 : 2): [ ]
val = -1.#INF


S1 (2 : 2): [ 1.542186124973118 1.542186124973118 ]
------------------------------ Fine assegna1_vs_indx_d

93: assegna1_vs_indx_d	<=>	v[indx] <- val
S1 (2 : 2): [ 1.542186124973118 1.542186124973118 ]
ind (0 : 2): [ ]
val = 0


S1 (2 : 2): [ 1.542186124973118 1.542186124973118 ]
------------------------------ Fine assegna1_vs_indx_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (2 : 2): [ 0 0 ]
T2 (2 : 2): [ 0.3224199317354524 0.3224199317354524 ]


a (2 : 2): [ -0.3224199317354524 -0.3224199317354524 ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (2 : 2): [ -0.3224199317354524 -0.3224199317354524 ]


a (2 : 2): [ 0.3224199317354524 0.3224199317354524 ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (2 : 2): [ 1 1 ]
T2 (2 : 2): [ 0.3224199317354524 0.3224199317354524 ]


b (2 : 2): [ 0.6775800682645476 0.6775800682645476 ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (2 : 2): [ 0.6775800682645476 0.6775800682645476 ]


b (2 : 2): [ 0.6775800682645476 0.6775800682645476 ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (2 : 2): [ 0.3224199317354524 0.3224199317354524 ]
b (2 : 2): [ 0.6775800682645476 0.6775800682645476 ]


tmpm_d (2 x 2 : 2 x 2): [
	 0.3224199317354524 0.6775800682645476
	 0.3224199317354524 0.6775800682645476
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (2 x 2 : 2 x 2): [
	 0.3224199317354524 0.6775800682645476
	 0.3224199317354524 0.6775800682645476
 ]


m (2 : 2): [ 0.6775800682645476 0.6775800682645476 ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (2 : 2): [ 0.3224199317354524 0.3224199317354524 ]
complemento = 0


ind (0 : 2): [ ]
------------------------------ Fine which_v_indxNA_d

115: assegna1_vs_indx_d	<=>	v[indx] <- val
a (2 : 2): [ 0.3224199317354524 0.3224199317354524 ]
ind (0 : 2): [ ]
val = 0


a (2 : 2): [ 0.3224199317354524 0.3224199317354524 ]
------------------------------ Fine assegna1_vs_indx_d

117: assegna1_vs_indx_d	<=>	v[indx] <- val
b (2 : 2): [ 0.6775800682645476 0.6775800682645476 ]
ind (0 : 2): [ ]
val = 0


b (2 : 2): [ 0.6775800682645476 0.6775800682645476 ]
------------------------------ Fine assegna1_vs_indx_d

119: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (2 : 2): [ 0.3224199317354524 0.3224199317354524 ]
b (2 : 2): [ 0.6775800682645476 0.6775800682645476 ]


tmpm_d (2 x 2 : 2 x 2): [
	 0.3224199317354524 0.6775800682645476
	 0.3224199317354524 0.6775800682645476
 ]
------------------------------ Fine cbind2v_d

120: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (2 x 2 : 2 x 2): [
	 0.3224199317354524 0.6775800682645476
	 0.3224199317354524 0.6775800682645476
 ]


m (2 : 2): [ 0.6775800682645476 0.6775800682645476 ]
------------------------------ Fine max_righe_d

122: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (2 : 2): [ 0.3224199317354524 0.3224199317354524 ]
b (2 : 2): [ 0.6775800682645476 0.6775800682645476 ]
m (2 : 2): [ 0.6775800682645476 0.6775800682645476 ]
T2 (2 : 2): [ 0.3224199317354524 0.3224199317354524 ]


S2 (2 : 2): [ -2.101545225871788 -2.101545225871788 ]
------------------------------ Fine f_aux_d

124: diff_vv_d	<=>	ris <- v1 - v2
a (2 : 2): [ 0.3224199317354524 0.3224199317354524 ]
toll2 (2 : 2): [ 1 1 ]


tmp_d1 (2 : 2): [ -0.6775800682645476 -0.6775800682645476 ]
------------------------------ Fine diff_vv_d

125: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (2 : 2): [ -0.6775800682645476 -0.6775800682645476 ]
val = 0

ind1 (2 : 2): [ 1 2 ]
------------------------------ Fine which_v_indxlt_d

127: diff_vv_d	<=>	ris <- v1 - v2
b (2 : 2): [ 0.6775800682645476 0.6775800682645476 ]
toll2 (2 : 2): [ 1 1 ]


tmp_d1 (2 : 2): [ -0.3224199317354524 -0.3224199317354524 ]
------------------------------ Fine diff_vv_d

128: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (2 : 2): [ -0.3224199317354524 -0.3224199317354524 ]
val = 0


ind2 (0 : 2): [ ]
------------------------------ Fine which_v_indxgt_d

130: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (2 : 2): [ 1 2 ]
ind2 (0 : 2): [ ]
2459: esiste_v_i	<=>	elem %IN% v
elem = 1
ind2 (0 : 2): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 1
tmp_i1 (0 : 2): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 2
ind2 (0 : 2): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 2
tmp_i1 (0 : 2): [ ]


indx = 0
------------------------------ Fine esiste_v_i



tmp_i1 (0 : 2): [ ]
------------------------------ Fine interseca_i

132: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (2 : 2): [ -2.101545225871788 -2.101545225871788 ]
tmp_i1 (0 : 2): [ ]
val = -1.#INF


S2 (2 : 2): [ -2.101545225871788 -2.101545225871788 ]
------------------------------ Fine assegna1_vs_indx_d

134: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (2 : 2): [ -2.101545225871788 -2.101545225871788 ]
ind (0 : 2): [ ]
val = 0


S2 (2 : 2): [ -2.101545225871788 -2.101545225871788 ]
------------------------------ Fine assegna1_vs_indx_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (2 : 2): [ 0.3224199317354524 0.3224199317354524 ]
val = 0


ind (0 : 2): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (2 : 2): [ -2.101545225871788 -2.101545225871788 ]
ind (0 : 2): [ ]
val = -1.#INF


S2 (2 : 2): [ -2.101545225871788 -2.101545225871788 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (2 : 2): [ 1.542186124973118 1.542186124973118 ]
S2 (2 : 2): [ -2.101545225871788 -2.101545225871788 ]


S_out (2 : 2): [ -0.55935910089867 -0.55935910089867 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
S_out (2 : 2): [ -0.55935910089867 -0.55935910089867 ]
div = 2.000


S_out (2 : 2): [ -0.279679550449335 -0.279679550449335 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (4217 interne); stringhe deallocate: 0 (3802 interne)

95: which_v_indxne_d	<=>	ris <- which(v != val)
S_out (2 : 2): [ -0.279679550449335 -0.279679550449335 ]
val = -1.#INF


indok (2 : 2): [ 1 2 ]
------------------------------ Fine which_v_indxne_d

97: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 0 0
 ]
riga = 2
indok (2 : 2): [ 1 2 ]
val = 1


checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
------------------------------ Fine aggiungi_riga_indx_i

104: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 2
incr = 1


tmp_i1 (2 : 6): [ 1 2 ]
------------------------------ Fine seq_i

105: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (2 : 6): [ 1 2 ]
indok (2 : 2): [ 1 2 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (2 : 6): [ 1 2 ]
st = 1
end = 2


indInf (2 : 2): [ 1 2 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (2 : 2): [ 1 2 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 2): [ 1 2 ]
indx = 1


indInf (1 : 2): [ 2 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (1 : 2): [ 2 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 2): [ 2 ]
indx = 1


indInf (0 : 2): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 2): [ ]
------------------------------ Fine setdiff_i

107: copia_v_indx_d	<=>	ris <- v[indx]
S_out (2 : 2): [ -0.279679550449335 -0.279679550449335 ]
indok (2 : 2): [ 1 2 ]


tmp_d1 (2 : 2): [ -0.279679550449335 -0.279679550449335 ]
------------------------------ Fine copia_v_indx_d

111: min_v_d	<=>	ris <- min(v)
tmp_d1 (2 : 2): [ -0.279679550449335 -0.279679550449335 ]


min = -0.279679550449335
------------------------------ Fine min_v_d

112: assegna1_vs_indx_d	<=>	v[indx] <- val
S_out (2 : 2): [ -0.279679550449335 -0.279679550449335 ]
indInf (0 : 2): [ ]
val = -1.279679550449335


S_out (2 : 2): [ -0.279679550449335 -0.279679550449335 ]
------------------------------ Fine assegna1_vs_indx_d

155: InitVett_d
ris (2 : 2): [ 0 0 ]
val = 0


ris (2 : 2): [ 0 0 ]
------------------------------ Fine InitVett_d

156: aggiungi_ms_riga_i	<=>	m[riga,] <- val # riga <= dim(m)[0] + 1
checkIN (2 x 2 : 2 x 2): [
	 1 1
	 0 0
 ]
riga = 2, val = 1


checkIN (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
------------------------------ Fine aggiungi_ms_riga_i

159: somma_vv_d	<=>	ris <- v1 + v2
S_out (2 : 2): [ -0.279679550449335 -0.279679550449335 ]
ris (2 : 2): [ 0 0 ]


tmp_d1 (2 : 2): [ -0.279679550449335 -0.279679550449335 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
riga = 2
tmp_d1 (2 : 2): [ -0.279679550449335 -0.279679550449335 ]


ris (2 x 2 : 2 x 2): [
	 0 0
	 -0.279679550449335 -0.279679550449335
 ]
------------------------------ Fine aggiungi_mv_riga_d

168: somma_m_d	<=>	ris <- sum(m)
ris (2 x 2 : 2 x 2): [
	 0 0
	 -0.279679550449335 -0.279679550449335
 ]


ris: -0.55935910089867
------------------------------ Fine somma_m_d

173: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
checkIN (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]


aus (2 : 2): [ 2 2 ]
------------------------------ Fine somma_colonne_i

175: which_v_indxne_i	<=>	ris <- which(v != val)
aus (2 : 2): [ 2 2 ]
val = 0


tmp_i1 (2 : 6): [ 1 2 ]
------------------------------ Fine which_v_indxne_i

186: somma_righe_i	<=>	ris <- apply(m, 1, sum)
checkIN (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]


rs (2 : 2): [ 2 2 ]
------------------------------ Fine somma_righe_i

188: ordine_i	<=>	ris <- order(v, decreasing=decr)
rs (2 : 2): [ 2 2 ]
decr = 0


ord_ind (2 : 2): [ 1 2 ]
------------------------------ Fine ordine_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
r = 1
val = 0


I_add (2 : 4): [ 1 2 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
I (0 : 0): [ ]
I_add (2 : 4): [ 1 2 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (2 : 2): [ 1 2 ]


ris (2 : 2): [ 1 2 ]
------------------------------ Fine elimina_doppi_i



ris (2 : 2): [ 1 2 ]
------------------------------ Fine unione1_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
r = 2
val = 0


I_add (2 : 4): [ 1 2 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
ris (2 : 2): [ 1 2 ]
I_add (2 : 4): [ 1 2 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (4 : 4): [ 1 2 1 2 ]


ris (2 : 4): [ 1 2 ]
------------------------------ Fine elimina_doppi_i



ris (2 : 4): [ 1 2 ]
------------------------------ Fine unione1_i

216: assegna1_mindxlt_i	<=>	m1[which(m2<val1)] <- val2
checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
val1 = 0
val2 = 0


checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
------------------------------ Fine assegna1_mindxlt_i

218: assegna1_m_indxgt_i	<=>	m1[which(m2>val1)] <- val2
checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
val1 = 0
val2 = 1


checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
------------------------------ Fine assegna1_m_indxgt_i

220: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]


aus (2 : 2): [ 2 2 ]
------------------------------ Fine somma_colonne_i

222: which_v_indxne_i	<=>	ris <- which(v != val)
aus (2 : 2): [ 2 2 ]
val = 0


tmp_i1 (2 : 6): [ 1 2 ]
------------------------------ Fine which_v_indxne_i

232: somma_righe_i	<=>	ris <- apply(m, 1, sum)
checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]


rs (2 : 2): [ 2 2 ]
------------------------------ Fine somma_righe_i

234: ordine_i	<=>	ris <- order(v, decreasing=decr)
rs (2 : 2): [ 2 2 ]
decr = 0


ord_ind (2 : 2): [ 1 2 ]
------------------------------ Fine ordine_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
r = 1
val = 0


I_add (2 : 4): [ 1 2 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (0 : 4): [ ]
I_add (2 : 4): [ 1 2 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (2 : 2): [ 1 2 ]


ris (2 : 2): [ 1 2 ]
------------------------------ Fine elimina_doppi_i



ris (2 : 2): [ 1 2 ]
------------------------------ Fine unione1_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
r = 2
val = 0


I_add (2 : 4): [ 1 2 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (2 : 2): [ 1 2 ]
I_add (2 : 4): [ 1 2 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (4 : 4): [ 1 2 1 2 ]


ris (2 : 4): [ 1 2 ]
------------------------------ Fine elimina_doppi_i



ris (2 : 4): [ 1 2 ]
------------------------------ Fine unione1_i


Stringhe allocate: 5 (4282 interne); stringhe deallocate: 0 (3942 interne)

90: seq_i	<=>	ris <- seq(da, a, incr)
da = 2
a = 2
incr = 1


ris->indices (1 : 1): [ 2 ]
------------------------------ Fine seq_i


Stringhe allocate: 5 (4287 interne); stringhe deallocate: 0 (3957 interne)

143: vettore3s_d		<=>	ris <- c(el1, el2, el3)
el1 = -0.55935910089867, el2 = -0.279679550449335, el3 = -0.279679550449335


prob_mod (3 : 3): [ -0.55935910089867 -0.279679550449335 -0.279679550449335 ]
------------------------------ Fine vettore3s_d

145: assegna1_v_indxeq_d	<=>	v[which(v==val1)] <- val2
prob_mod (3 : 3): [ -0.55935910089867 -0.279679550449335 -0.279679550449335 ]
prob_mod (3 : 3): [ -0.55935910089867 -0.279679550449335 -0.279679550449335 ]
val1 = 0
val2 = 1.#QNAN


prob_mod (3 : 3): [ -0.55935910089867 -0.279679550449335 -0.279679550449335 ]
------------------------------ Fine assegna1_v_indxeq_d

147: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
prob_mod (3 : 3): [ -0.55935910089867 -0.279679550449335 -0.279679550449335 ]
complemento = 1


ind (3 : 3): [ 1 2 3 ]
------------------------------ Fine which_v_indxNA_d

153: copia_v_indx_d	<=>	ris <- v[indx]
prob_mod (3 : 3): [ -0.55935910089867 -0.279679550449335 -0.279679550449335 ]
ind (3 : 3): [ 1 2 3 ]


tmp1_d (3 : 16): [ -0.55935910089867 -0.279679550449335 -0.279679550449335 ]
------------------------------ Fine copia_v_indx_d

154: min_v_d	<=>	ris <- min(v)
tmp1_d (3 : 16): [ -0.55935910089867 -0.279679550449335 -0.279679550449335 ]


min = -0.55935910089867
------------------------------ Fine min_v_d

157: somma1_vs_d	<=>	v <- v + s
prob_mod (3 : 3): [ -0.55935910089867 -0.279679550449335 -0.279679550449335 ]
s = 0.6704702120097812


prob_mod (3 : 3): [ 0.1111111111111112 0.3907906615604462 0.3907906615604462 ]
------------------------------ Fine somma1_vs_d

160: assegna1_v_indxNA_d	<=>	v1[which(is.na(v2))] <- val oppure v1[which(!is.na(v2))] <- val
prob_mod (3 : 3): [ 0.1111111111111112 0.3907906615604462 0.3907906615604462 ]
prob_mod (3 : 3): [ 0.1111111111111112 0.3907906615604462 0.3907906615604462 ]
val = 0
complemento = 0


prob_mod (3 : 3): [ 0.1111111111111112 0.3907906615604462 0.3907906615604462 ]
------------------------------ Fine assegna1_v_indxNA_d

162: somma_v_d	<=>	ris <- sum(v, na.rm=canc_NA)
prob_mod (3 : 3): [ 0.1111111111111112 0.3907906615604462 0.3907906615604462 ]
canc_NA = 0



ris: 0.8926924342320035
------------------------------ Fine somma_v_d

162: dividi1_vs_d	<=>	v <- v / div
prob_mod (3 : 3): [ 0.1111111111111112 0.3907906615604462 0.3907906615604462 ]
div = 0.893


prob_mod (3 : 3): [ 0.1244674054022892 0.4377662972988554 0.4377662972988554 ]
------------------------------ Fine dividi1_vs_d

164: vettore3s_i		<=>	ris <- c(el1, el2, el3)
el1 = 1, el2 = 2, el3 = 3


tmp1_i (3 : 3): [ 1 2 3 ]
------------------------------ Fine vettore3s_i


*** sampleB_p ***

*** sample_p ***
tmp1_i (3 : 3): [ 1 2 3 ]
k = 1, replace = 0
prob_mod (3 : 3): [ 0.1244674054022892 0.4377662972988554 0.4377662972988554 ]


ris (1 : 1): [ 3 ]
*****************************************


Stringhe allocate: 5 (4287 interne); stringhe deallocate: 0 (3957 interne)


*** assign_nodes ***
35: copia_v_i	<=>	ris[st:end] <- v[st:end]
h (2 : 5): [ 1 2 ]
st = 1
end = 2


or_h (2 : 2): [ 1 2 ]
------------------------------ Fine copia_v_i

37: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 2
incr = 1


aus_h (2 : 2): [ 1 2 ]
------------------------------ Fine seq_i

43: InitVett_i
index (2 : 2): [ 79865128 25390 ]
val = 0


index (2 : 2): [ 0 0 ]
------------------------------ Fine InitVett_i

45: somma_righe_i	<=>	ris <- apply(m, 1, sum)
ris (2 x 2 : 2 x 2): [
	 0 1
	 0 0
 ]


M_in (2 : 2): [ 1 0 ]
------------------------------ Fine somma_righe_i

47: ordine_i	<=>	ris <- order(v, decreasing=decr)
M_in (2 : 2): [ 1 0 ]
decr = 1


Ord (2 : 2): [ 1 2 ]
------------------------------ Fine ordine_i

52: riga_d	<=>	ris <- m[r,]
ris (2 x 2 : 2 x 2): [
	 0 0
	 -0.279679550449335 -0.279679550449335
 ]
r = 1

p (2 : 2): [ 0 0 ]
------------------------------ Fine riga_d

54: which_v_indxle_d	<=>	ris <- which(v<=val)
p (2 : 2): [ 0 0 ]
val = 0


tmp_i (2 : 2): [ 1 2 ]
------------------------------ Fine which_v_indxle_d

57: min_v_d	<=>	ris <- min(v)
p (2 : 2): [ 0 0 ]


min = 0
------------------------------ Fine min_v_d

58: somma1_vs_d	<=>	v <- v + s
p (2 : 2): [ 0 0 ]
s = 0.25


p (2 : 2): [ 0.25 0.25 ]
------------------------------ Fine somma1_vs_d

61: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 0 1 1 2 ]
h (2 : 5): [ 1 2 ]


Sin_h (2 : 2): [ 0 0 ]
------------------------------ Fine assegna_v_indxNA_i

66: which_v_indxgt_i	<=>	ris <- which(v > val)
Sin_h (2 : 2): [ 0 0 ]
val = 4


ind (0 : 2): [ ]
------------------------------ Fine which_v_indxgt_i

72: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
p (2 : 2): [ 0.25 0.25 ]
aus_h (2 : 2): [ 1 2 ]


tmp_d (2 : 2): [ 0.25 0.25 ]
------------------------------ Fine assegna_v_indxNA_d

73: somma_v_d	<=>	ris <- sum(v, na.rm=canc_NA)
tmp_d (2 : 2): [ 0.25 0.25 ]
canc_NA = 0



ris: 0.5
------------------------------ Fine somma_v_d

74: dividi_vs_d	ris <- v / div
tmp_d (2 : 2): [ 0.25 0.25 ]
div = 0.500


p (2 : 2): [ 0.5 0.5 ]
------------------------------ Fine dividi_vs_d


*** sampleB_p ***

*** sample_p ***
h (2 : 5): [ 1 2 ]
k = 1, replace = 0
p (2 : 2): [ 0.5 0.5 ]


ris (1 : 1): [ 1 ]
*****************************************


Stringhe allocate: 5 (4342 interne); stringhe deallocate: 0 (3957 interne)

81: setdiff1_i	<=>	v1 <- setdiff(v1, v2)
h (2 : 5): [ 1 2 ]
ris (1 : 1): [ 1 ]
2048: esiste_v_i	<=>	elem %IN% v
elem = 1
h (2 : 5): [ 1 2 ]


indx = 1
------------------------------ Fine esiste_v_i

2050: elimina1_indx_i	<=>	v <- v[-indx]
h (2 : 5): [ 1 2 ]
indx = 1


h (1 : 5): [ 2 ]
------------------------------ Fine elimina1_indx_i



h (1 : 5): [ 2 ]
------------------------------ Fine setdiff1_i

83: which_vv_eq_i	<=>	ris <- which(v1 == v2)
or_h (2 : 2): [ 1 2 ]
ris (1 : 1): [ 1 ]
2017: esiste_v_i	<=>	elem %IN% v
elem = 1
or_h (2 : 2): [ 1 2 ]


indx = 1
------------------------------ Fine esiste_v_i



tmp_i (1 : 2): [ 1 ]
------------------------------ Fine which_vv_eq_i

84: setdiff1_i	<=>	v1 <- setdiff(v1, v2)
aus_h (2 : 2): [ 1 2 ]
tmp_i (1 : 2): [ 1 ]
2048: esiste_v_i	<=>	elem %IN% v
elem = 1
aus_h (2 : 2): [ 1 2 ]


indx = 1
------------------------------ Fine esiste_v_i

2050: elimina1_indx_i	<=>	v <- v[-indx]
aus_h (2 : 2): [ 1 2 ]
indx = 1


aus_h (1 : 2): [ 2 ]
------------------------------ Fine elimina1_indx_i



aus_h (1 : 2): [ 2 ]
------------------------------ Fine setdiff1_i

52: riga_d	<=>	ris <- m[r,]
ris (2 x 2 : 2 x 2): [
	 0 0
	 -0.279679550449335 -0.279679550449335
 ]
r = 2

p (2 : 2): [ -0.279679550449335 -0.279679550449335 ]
------------------------------ Fine riga_d

54: which_v_indxle_d	<=>	ris <- which(v<=val)
p (2 : 2): [ -0.279679550449335 -0.279679550449335 ]
val = 0


tmp_i (2 : 2): [ 1 2 ]
------------------------------ Fine which_v_indxle_d

57: min_v_d	<=>	ris <- min(v)
p (2 : 2): [ -0.279679550449335 -0.279679550449335 ]


min = -0.279679550449335
------------------------------ Fine min_v_d

58: somma1_vs_d	<=>	v <- v + s
p (2 : 2): [ -0.279679550449335 -0.279679550449335 ]
s = 0.529679550449335


p (2 : 2): [ 0.25 0.25 ]
------------------------------ Fine somma1_vs_d

61: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 0 1 1 2 ]
h (1 : 5): [ 2 ]


Sin_h (1 : 2): [ 0 ]
------------------------------ Fine assegna_v_indxNA_i

66: which_v_indxgt_i	<=>	ris <- which(v > val)
Sin_h (1 : 2): [ 0 ]
val = 5


ind (0 : 2): [ ]
------------------------------ Fine which_v_indxgt_i

72: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
p (2 : 2): [ 0.25 0.25 ]
aus_h (1 : 2): [ 2 ]


tmp_d (1 : 2): [ 0.25 ]
------------------------------ Fine assegna_v_indxNA_d

73: somma_v_d	<=>	ris <- sum(v, na.rm=canc_NA)
tmp_d (1 : 2): [ 0.25 ]
canc_NA = 0



ris: 0.25
------------------------------ Fine somma_v_d

74: dividi_vs_d	ris <- v / div
tmp_d (1 : 2): [ 0.25 ]
div = 0.250


p (1 : 2): [ 1 ]
------------------------------ Fine dividi_vs_d


*** sampleB_p ***
25: rep_v_i	<=>	ris <- rep(v, rip)
h (1 : 5): [ 2 ]
rip = 1


ris (1 : 1): [ 2 ]
------------------------------ Fine rep_v_i

81: setdiff1_i	<=>	v1 <- setdiff(v1, v2)
h (1 : 5): [ 2 ]
ris (1 : 1): [ 2 ]
2048: esiste_v_i	<=>	elem %IN% v
elem = 2
h (1 : 5): [ 2 ]


indx = 1
------------------------------ Fine esiste_v_i

2050: elimina1_indx_i	<=>	v <- v[-indx]
h (1 : 5): [ 2 ]
indx = 1


h (0 : 5): [ ]
------------------------------ Fine elimina1_indx_i



h (0 : 5): [ ]
------------------------------ Fine setdiff1_i

83: which_vv_eq_i	<=>	ris <- which(v1 == v2)
or_h (2 : 2): [ 1 2 ]
ris (1 : 1): [ 2 ]
2017: esiste_v_i	<=>	elem %IN% v
elem = 2
or_h (2 : 2): [ 1 2 ]


indx = 2
------------------------------ Fine esiste_v_i



tmp_i (1 : 2): [ 2 ]
------------------------------ Fine which_vv_eq_i

84: setdiff1_i	<=>	v1 <- setdiff(v1, v2)
aus_h (1 : 2): [ 2 ]
tmp_i (1 : 2): [ 2 ]
2048: esiste_v_i	<=>	elem %IN% v
elem = 2
aus_h (1 : 2): [ 2 ]


indx = 1
------------------------------ Fine esiste_v_i

2050: elimina1_indx_i	<=>	v <- v[-indx]
aus_h (1 : 2): [ 2 ]
indx = 1


aus_h (0 : 2): [ ]
------------------------------ Fine elimina1_indx_i



aus_h (0 : 2): [ ]
------------------------------ Fine setdiff1_i

101: which_m_rowindxeq_i	<=>	ris <- which(m[r,] == val)
ris (2 x 2 : 2 x 2): [
	 0 1
	 0 0
 ]
riga = 1
val = 1


ind (1 : 8): [ 2 ]
------------------------------ Fine which_m_rowindxeq_i

103: copia_v_indx_i	<=>	ris <- v[indx]
index (2 : 2): [ 1 2 ]
ind (1 : 8): [ 2 ]


co (1 : 1): [ 2 ]
------------------------------ Fine copia_v_indx_i

105: assegna1_m_vv_i	<=>	m[vr, vc] <- val
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 1 0 0 0 0
	 0 1 0 0 0
	 1 1 0 0 0
 ]
ri (1 : 1): [ 1 ]
co (1 : 1): [ 2 ]
val = 1


Mdiscr (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 0 0 0 0 0
	 1 0 0 0 0
	 0 1 0 0 0
	 1 1 0 0 0
 ]
------------------------------ Fine assegna1_m_vv_i

107: esiste_v_i	<=>	elem %IN% v
elem = 1
ris->indices (1 : 1): [ 2 ]


indx = 0
------------------------------ Fine esiste_v_i

101: which_m_rowindxeq_i	<=>	ris <- which(m[r,] == val)
ris (2 x 2 : 2 x 2): [
	 0 1
	 0 0
 ]
riga = 2
val = 1


ind (0 : 8): [ ]
------------------------------ Fine which_m_rowindxeq_i

103: copia_v_indx_i	<=>	ris <- v[indx]
index (2 : 2): [ 1 2 ]
ind (0 : 8): [ ]


co (0 : 1): [ ]
------------------------------ Fine copia_v_indx_i

105: assegna1_m_vv_i	<=>	m[vr, vc] <- val
Mdiscr (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 0 0 0 0 0
	 1 0 0 0 0
	 0 1 0 0 0
	 1 1 0 0 0
 ]
ri (1 : 1): [ 2 ]
co (0 : 1): [ ]
val = 1


Mdiscr (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 0 0 0 0 0
	 1 0 0 0 0
	 0 1 0 0 0
	 1 1 0 0 0
 ]
------------------------------ Fine assegna1_m_vv_i

107: esiste_v_i	<=>	elem %IN% v
elem = 2
ris->indices (1 : 1): [ 2 ]


indx = 1
------------------------------ Fine esiste_v_i

109: accoda1_vv_i	<=>	v1 <- c(v1, v2)
ris (0 : 4): [ ]
ri (1 : 1): [ 2 ]


ris (1 : 4): [ 2 ]
------------------------------ Fine accoda_vv_i


Stringhe allocate: 5 (4352 interne); stringhe deallocate: 0 (4022 interne)

332: accoda1_vv_i	<=>	v1 <- c(v1, v2)
h_new (0 : 4): [ ]
ris (1 : 4): [ 2 ]


h_new (1 : 4): [ 2 ]
------------------------------ Fine accoda_vv_i

334: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
Mdiscr (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 0 0 0 0 0
	 1 0 0 0 0
	 0 1 0 0 0
	 1 1 0 0 0
 ]


Sout (5 : 5): [ 2 3 0 0 0 ]
------------------------------ Fine somma_colonne_i

336: max_v_i		<=>	ris <- max(v)
Sout (5 : 5): [ 2 3 0 0 0 ]


max = 3
------------------------------ Fine max_v_i

338: seq_i	<=>	ris <- seq(da, a, incr)
da = 0
a = 4
incr = 1


tmp2_i (5 : 13): [ 0 1 2 3 4 ]
------------------------------ Fine seq_i


*** hist1 ***
Sout (5 : 5): [ 2 3 0 0 0 ]
tmp2_i (5 : 13): [ 0 1 2 3 4 ]
right = 0
include_border = 1
naok = 0
29: InitVett_i
tmp1_i (4 : 10): [ 79858312 1330207310 673203534 1868784481 ]
val = 0


tmp1_i (4 : 10): [ 0 0 0 0 ]
------------------------------ Fine InitVett_i



tmp1_i (4 : 10): [ 3 0 1 1 ]

Stringhe allocate: 5 (4352 interne); stringhe deallocate: 0 (4022 interne)

340: promuovi_i	(implicita)
tmp1_i (4 : 10): [ 3 0 1 1 ]
ATTENZIONE (promuovi_i, linea connectivity_modular.c # 340): il vettore e` stato promosso da intero a double: i calcoli saranno rallentati!

tmp1_d (4 : 16): [ 3 0 1 1 ]
------------------------------ Fine promuovi_i

341: assegna1_v_segmv_d	<=>	v1[st:end] <- v2
Freq_out (7 : 7): [ 3 0 2 0 0 0 0 ]
start = 1
end = 4
tmp1_d (4 : 16): [ 3 0 1 1 ]


Freq_out (7 : 7): [ 3 0 1 1 0 0 0 ]
------------------------------ Fine assegna1_v_segmv_d

343: somma_righe_i	<=>	ris <- apply(m, 1, sum)
Mdiscr (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 0 0 0 0 0
	 1 0 0 0 0
	 0 1 0 0 0
	 1 1 0 0 0
 ]


Sin (5 : 5): [ 1 0 1 1 2 ]
------------------------------ Fine somma_righe_i

345: max_v_i		<=>	ris <- max(v)
Sin (5 : 5): [ 1 0 1 1 2 ]


max = 2
------------------------------ Fine max_v_i

347: seq_i	<=>	ris <- seq(da, a, incr)
da = 0
a = 3
incr = 1


tmp2_i (4 : 13): [ 0 1 2 3 ]
------------------------------ Fine seq_i


*** hist1 ***
Sin (5 : 5): [ 1 0 1 1 2 ]
tmp2_i (4 : 13): [ 0 1 2 3 ]
right = 0
include_border = 1
naok = 0
29: InitVett_i
tmp1_i (3 : 10): [ 3 0 1 ]
val = 0


tmp1_i (3 : 10): [ 0 0 0 ]
------------------------------ Fine InitVett_i



tmp1_i (3 : 10): [ 1 3 1 ]

Stringhe allocate: 5 (4353 interne); stringhe deallocate: 0 (4023 interne)

349: promuovi_i	(implicita)
tmp1_i (3 : 10): [ 1 3 1 ]
ATTENZIONE (promuovi_i, linea connectivity_modular.c # 349): il vettore e` stato promosso da intero a double: i calcoli saranno rallentati!

tmp1_d (3 : 16): [ 1 3 1 ]
------------------------------ Fine promuovi_i

350: assegna1_v_segmv_d	<=>	v1[st:end] <- v2
Freq_in (7 : 7): [ 2 2 1 0 0 0 0 ]
start = 1
end = 3
tmp1_d (3 : 16): [ 1 3 1 ]


Freq_in (7 : 7): [ 1 3 1 0 0 0 0 ]
------------------------------ Fine assegna1_v_segmv_d

362: copia_v_i	<=>	ris[st:end] <- v[st:end]
h_new (1 : 4): [ 2 ]
st = 1
end = 1


h (1 : 5): [ 2 ]
------------------------------ Fine copia_v_i

368: copia_v_indx_i	<=>	ris <- v[indx]
Sin (5 : 5): [ 1 0 1 1 2 ]
h (1 : 5): [ 2 ]


tmp1_i (1 : 10): [ 0 ]
------------------------------ Fine copia_v_indx_i

369: which_v_indxne_i	<=>	ris <- which(v != val)
tmp1_i (1 : 10): [ 0 ]
val = 5


tmp2_i (1 : 13): [ 1 ]
------------------------------ Fine which_v_indxne_i

370: copia_v_indx_i	<=>	ris <- v[indx]
h (1 : 5): [ 2 ]
tmp2_i (1 : 13): [ 1 ]


h (1 : 5): [ 2 ]
------------------------------ Fine copia_v_indx_i

381: somma_righe_i	<=>	ris <- apply(m, 1, sum)
Mdiscr (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 0 0 0 0 0
	 1 0 0 0 0
	 0 1 0 0 0
	 1 1 0 0 0
 ]


Sr (5 : 5): [ 1 0 1 1 2 ]
------------------------------ Fine somma_righe_i

383: which_v_indxeq_i	<=>	ris <- which(v==val)
Sr (5 : 5): [ 1 0 1 1 2 ]
val = 0


ind (1 : 11): [ 2 ]
------------------------------ Fine which_v_indxeq_i

395: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
Mdiscr (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 0 0 0 0 0
	 1 0 0 0 0
	 0 1 0 0 0
	 1 1 0 0 0
 ]


Sout (5 : 5): [ 2 3 0 0 0 ]
------------------------------ Fine somma_colonne_i


***score***
31: somma_vs_i	<=>	ris <- v + s
Sout (5 : 5): [ 2 3 0 0 0 ]
s = 1


ind (5 : 5): [ 3 4 1 1 1 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
Sout (5 : 5): [ 2 3 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 3 4 1 1 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (5 : 5): [ 3 4 1 1 1 ]


T1 (5 : 5): [ 0.7867244574868211 0.3224199317354524 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 3 4 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 4 5 2 2 2 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (5 : 5): [ 4 5 2 2 2 ]


T2 (5 : 5): [ 0.3224199317354524 0.1712208549059974 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
Sout (5 : 5): [ 2 3 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 3 4 1 1 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 3 0 1 1 0 0 0 ]
tmp_i1 (5 : 5): [ 3 4 1 1 1 ]


old1 (5 : 5): [ 1 1 3 3 3 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 3 4 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 4 5 2 2 2 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 3 0 1 1 0 0 0 ]
tmp_i1 (5 : 5): [ 4 5 2 2 2 ]


old2 (5 : 5): [ 1 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (5 : 5): [ 1 1 3 3 3 ]
s = -1


new1 (5 : 5): [ 0 0 2 2 2 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (5 : 5): [ 1 0 0 0 0 ]
s = 1


new2 (5 : 5): [ 2 1 1 1 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
Sout (5 : 5): [ 2 3 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 3 4 1 1 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 3 4 1 1 1 ]


toll1 (5 : 5): [ 1 1 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 3 4 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 4 5 2 2 2 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 4 5 2 2 2 ]


toll2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (5 : 5): [ 1 1 3 3 3 ]
T1 (5 : 5): [ 0.7867244574868211 0.3224199317354524 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 0.2132755425131789 0.6775800682645476 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 0.2132755425131789 0.6775800682645476 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 0.2132755425131789 0.6775800682645476 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (5 : 5): [ 0 0 2 2 2 ]
T1 (5 : 5): [ 0.7867244574868211 0.3224199317354524 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ -0.7867244574868211 -0.3224199317354524 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ -0.7867244574868211 -0.3224199317354524 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 0.7867244574868211 0.3224199317354524 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (5 : 5): [ 0.7867244574868211 0.3224199317354524 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (3 : 5): [ 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

68: assegna1_vs_indx_d	<=>	v[indx] <- val
a (5 : 5): [ 0.2132755425131789 0.6775800682645476 1.#QNAN 1.#QNAN 1.#QNAN ]
ind (3 : 5): [ 3 4 5 ]
val = 0


a (5 : 5): [ 0.2132755425131789 0.6775800682645476 0 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

70: assegna1_vs_indx_d	<=>	v[indx] <- val
b (5 : 5): [ 0.7867244574868211 0.3224199317354524 1.#QNAN 1.#QNAN 1.#QNAN ]
ind (3 : 5): [ 3 4 5 ]
val = 0


b (5 : 5): [ 0.7867244574868211 0.3224199317354524 0 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

78: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 0.2132755425131789 0.6775800682645476 0 0 0 ]
b (5 : 5): [ 0.7867244574868211 0.3224199317354524 0 0 0 ]


tmpm_d (5 x 2 : 5 x 2): [
	 0.2132755425131789 0.7867244574868211
	 0.6775800682645476 0.3224199317354524
	 0 0
	 0 0
	 0 0
 ]
------------------------------ Fine cbind2v_d

79: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 0.2132755425131789 0.7867244574868211
	 0.6775800682645476 0.3224199317354524
	 0 0
	 0 0
	 0 0
 ]


m (5 : 5): [ 0.7867244574868211 0.6775800682645476 0 0 0 ]
------------------------------ Fine max_righe_d

81: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (5 : 5): [ 0.2132755425131789 0.6775800682645476 0 0 0 ]
b (5 : 5): [ 0.7867244574868211 0.3224199317354524 0 0 0 ]
m (5 : 5): [ 0.7867244574868211 0.6775800682645476 0 0 0 ]
T1 (5 : 5): [ 0.7867244574868211 0.3224199317354524 1.#QNAN 1.#QNAN 1.#QNAN ]


S1 (5 : 5): [ -1 2.101545225871788 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine f_aux_d

83: diff_vv_d	<=>	ris <- v1 - v2
a (5 : 5): [ 0.2132755425131789 0.6775800682645476 0 0 0 ]
toll1 (5 : 5): [ 1 1 1.#QNAN 1.#QNAN 1.#QNAN ]


tmp_d1 (5 : 5): [ -0.7867244574868211 -0.3224199317354524 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

84: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (5 : 5): [ -0.7867244574868211 -0.3224199317354524 1.#QNAN 1.#QNAN 1.#QNAN ]
val = 0

ind1 (2 : 5): [ 1 2 ]
------------------------------ Fine which_v_indxlt_d

86: diff_vv_d	<=>	ris <- v1 - v2
b (5 : 5): [ 0.7867244574868211 0.3224199317354524 0 0 0 ]
toll1 (5 : 5): [ 1 1 1.#QNAN 1.#QNAN 1.#QNAN ]


tmp_d1 (5 : 5): [ -0.2132755425131789 -0.6775800682645476 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

87: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (5 : 5): [ -0.2132755425131789 -0.6775800682645476 1.#QNAN 1.#QNAN 1.#QNAN ]
val = 0


ind2 (0 : 5): [ ]
------------------------------ Fine which_v_indxgt_d

89: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (2 : 5): [ 1 2 ]
ind2 (0 : 5): [ ]
2459: esiste_v_i	<=>	elem %IN% v
elem = 1
ind2 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 1
tmp_i1 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 2
ind2 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 2
tmp_i1 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i



tmp_i1 (0 : 5): [ ]
------------------------------ Fine interseca_i

91: assegna1_vs_indx_d	<=>	v[indx] <- val
S1 (5 : 5): [ -1 2.101545225871788 1.#QNAN 1.#QNAN 1.#QNAN ]
tmp_i1 (0 : 5): [ ]
val = -1.#INF


S1 (5 : 5): [ -1 2.101545225871788 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna1_vs_indx_d

93: assegna1_vs_indx_d	<=>	v[indx] <- val
S1 (5 : 5): [ -1 2.101545225871788 1.#QNAN 1.#QNAN 1.#QNAN ]
ind (3 : 5): [ 3 4 5 ]
val = 0


S1 (5 : 5): [ -1 2.101545225871788 0 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (5 : 5): [ 1 0 0 0 0 ]
T2 (5 : 5): [ 0.3224199317354524 0.1712208549059974 3.614836360604185 3.614836360604185 3.614836360604185 ]


a (5 : 5): [ 0.6775800682645476 -0.1712208549059974 -3.614836360604185 -3.614836360604185 -3.614836360604185 ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 0.6775800682645476 -0.1712208549059974 -3.614836360604185 -3.614836360604185 -3.614836360604185 ]


a (5 : 5): [ 0.6775800682645476 0.1712208549059974 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (5 : 5): [ 2 1 1 1 1 ]
T2 (5 : 5): [ 0.3224199317354524 0.1712208549059974 3.614836360604185 3.614836360604185 3.614836360604185 ]


b (5 : 5): [ 1.677580068264548 0.8287791450940025 -2.614836360604185 -2.614836360604185 -2.614836360604185 ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.677580068264548 0.8287791450940025 -2.614836360604185 -2.614836360604185 -2.614836360604185 ]


b (5 : 5): [ 1.677580068264548 0.8287791450940025 2.614836360604185 2.614836360604185 2.614836360604185 ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 0.6775800682645476 0.1712208549059974 3.614836360604185 3.614836360604185 3.614836360604185 ]
b (5 : 5): [ 1.677580068264548 0.8287791450940025 2.614836360604185 2.614836360604185 2.614836360604185 ]


tmpm_d (5 x 2 : 5 x 2): [
	 0.6775800682645476 1.677580068264548
	 0.1712208549059974 0.8287791450940025
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 0.6775800682645476 1.677580068264548
	 0.1712208549059974 0.8287791450940025
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]


m (5 : 5): [ 1.677580068264548 0.8287791450940025 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (5 : 5): [ 0.3224199317354524 0.1712208549059974 3.614836360604185 3.614836360604185 3.614836360604185 ]
complemento = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxNA_d

115: assegna1_vs_indx_d	<=>	v[indx] <- val
a (5 : 5): [ 0.6775800682645476 0.1712208549059974 3.614836360604185 3.614836360604185 3.614836360604185 ]
ind (0 : 5): [ ]
val = 0


a (5 : 5): [ 0.6775800682645476 0.1712208549059974 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine assegna1_vs_indx_d

117: assegna1_vs_indx_d	<=>	v[indx] <- val
b (5 : 5): [ 1.677580068264548 0.8287791450940025 2.614836360604185 2.614836360604185 2.614836360604185 ]
ind (0 : 5): [ ]
val = 0


b (5 : 5): [ 1.677580068264548 0.8287791450940025 2.614836360604185 2.614836360604185 2.614836360604185 ]
------------------------------ Fine assegna1_vs_indx_d

119: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 0.6775800682645476 0.1712208549059974 3.614836360604185 3.614836360604185 3.614836360604185 ]
b (5 : 5): [ 1.677580068264548 0.8287791450940025 2.614836360604185 2.614836360604185 2.614836360604185 ]


tmpm_d (5 x 2 : 5 x 2): [
	 0.6775800682645476 1.677580068264548
	 0.1712208549059974 0.8287791450940025
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]
------------------------------ Fine cbind2v_d

120: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 0.6775800682645476 1.677580068264548
	 0.1712208549059974 0.8287791450940025
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]


m (5 : 5): [ 1.677580068264548 0.8287791450940025 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine max_righe_d

122: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (5 : 5): [ 0.6775800682645476 0.1712208549059974 3.614836360604185 3.614836360604185 3.614836360604185 ]
b (5 : 5): [ 1.677580068264548 0.8287791450940025 2.614836360604185 2.614836360604185 2.614836360604185 ]
m (5 : 5): [ 1.677580068264548 0.8287791450940025 3.614836360604185 3.614836360604185 3.614836360604185 ]
T2 (5 : 5): [ 0.3224199317354524 0.1712208549059974 3.614836360604185 3.614836360604185 3.614836360604185 ]


S2 (5 : 5): [ -5.203090451743575 -4.840410039705815 1 1 1 ]
------------------------------ Fine f_aux_d

124: diff_vv_d	<=>	ris <- v1 - v2
a (5 : 5): [ 0.6775800682645476 0.1712208549059974 3.614836360604185 3.614836360604185 3.614836360604185 ]
toll2 (5 : 5): [ 1 1 1 1 1 ]


tmp_d1 (5 : 5): [ -0.3224199317354524 -0.8287791450940025 2.614836360604185 2.614836360604185 2.614836360604185 ]
------------------------------ Fine diff_vv_d

125: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (5 : 5): [ -0.3224199317354524 -0.8287791450940025 2.614836360604185 2.614836360604185 2.614836360604185 ]
val = 0

ind1 (2 : 5): [ 1 2 ]
------------------------------ Fine which_v_indxlt_d

127: diff_vv_d	<=>	ris <- v1 - v2
b (5 : 5): [ 1.677580068264548 0.8287791450940025 2.614836360604185 2.614836360604185 2.614836360604185 ]
toll2 (5 : 5): [ 1 1 1 1 1 ]


tmp_d1 (5 : 5): [ 0.6775800682645476 -0.1712208549059975 1.614836360604185 1.614836360604185 1.614836360604185 ]
------------------------------ Fine diff_vv_d

128: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (5 : 5): [ 0.6775800682645476 -0.1712208549059975 1.614836360604185 1.614836360604185 1.614836360604185 ]
val = 0


ind2 (4 : 5): [ 1 3 4 5 ]
------------------------------ Fine which_v_indxgt_d

130: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (2 : 5): [ 1 2 ]
ind2 (4 : 5): [ 1 3 4 5 ]
2459: esiste_v_i	<=>	elem %IN% v
elem = 1
ind2 (4 : 5): [ 1 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 1
tmp_i1 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 2
ind2 (4 : 5): [ 1 3 4 5 ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 2
tmp_i1 (1 : 5): [ 1 ]


indx = 0
------------------------------ Fine esiste_v_i



tmp_i1 (1 : 5): [ 1 ]
------------------------------ Fine interseca_i

132: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ -5.203090451743575 -4.840410039705815 1 1 1 ]
tmp_i1 (1 : 5): [ 1 ]
val = -1.#INF


S2 (5 : 5): [ -1.#INF -4.840410039705815 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

134: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ -1.#INF -4.840410039705815 1 1 1 ]
ind (0 : 5): [ ]
val = 0


S2 (5 : 5): [ -1.#INF -4.840410039705815 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (5 : 5): [ 0.3224199317354524 0.1712208549059974 3.614836360604185 3.614836360604185 3.614836360604185 ]
val = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ -1.#INF -4.840410039705815 1 1 1 ]
ind (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ -1.#INF -4.840410039705815 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (5 : 5): [ -1 2.101545225871788 0 0 0 ]
S2 (5 : 5): [ -1.#INF -4.840410039705815 1 1 1 ]


ris (5 : 5): [ -1.#INF -2.738864813834027 1 1 1 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
ris (5 : 5): [ -1.#INF -2.738864813834027 1 1 1 ]
div = 2.000


ris (5 : 5): [ -1.#INF -1.369432406917014 0.5 0.5 0.5 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (4464 interne); stringhe deallocate: 0 (4124 interne)

399: which_v_indxeq_d	<=>	ris <- which(v==val)
ris (5 : 5): [ -1.#INF -1.369432406917014 0.5 0.5 0.5 ]
val = -1.#INF


ind_Sc (1 : 5): [ 1 ]
------------------------------ Fine which_v_indxeq_d

401: assegna1_v_indx_d	<=>	v[indx] <- val
ris (5 : 5): [ -1.#INF -1.369432406917014 0.5 0.5 0.5 ]
ind_Sc (1 : 5): [ 1 ]
val = 0


ris (5 : 5): [ 0 -1.369432406917014 0.5 0.5 0.5 ]
------------------------------ Fine assegna1_v_indx_d

403: which_v_indxle_d	<=>	ris <- which(v<=val)
ris (5 : 5): [ 0 -1.369432406917014 0.5 0.5 0.5 ]
val = 0


tmp1_i (2 : 10): [ 1 2 ]
------------------------------ Fine which_v_indxle_d

405: min_v_d	<=>	ris <- min(v)
ris (5 : 5): [ 0 -1.369432406917014 0.5 0.5 0.5 ]


min = -1.369432406917014
------------------------------ Fine min_v_d

405: somma1_vs_d	<=>	v <- v + s
ris (5 : 5): [ 0 -1.369432406917014 0.5 0.5 0.5 ]
s = 1.409432406917014


ris (5 : 5): [ 1.409432406917014 0.04000000000000004 1.909432406917014 1.909432406917014 1.909432406917014 ]
------------------------------ Fine somma1_vs_d

407: assegna1_v_indx_d	<=>	v[indx] <- val
ris (5 : 5): [ 1.409432406917014 0.04000000000000004 1.909432406917014 1.909432406917014 1.909432406917014 ]
ind_Sc (1 : 5): [ 1 ]
val = 0


ris (5 : 5): [ 0 0.04000000000000004 1.909432406917014 1.909432406917014 1.909432406917014 ]
------------------------------ Fine assegna1_v_indx_d

409: somma_v_d	<=>	ris <- sum(v, na.rm=canc_NA)
ris (5 : 5): [ 0 0.04000000000000004 1.909432406917014 1.909432406917014 1.909432406917014 ]
canc_NA = 0



ris: 5.768297220751041
------------------------------ Fine somma_v_d

429: somma_v_d	<=>	ris <- sum(v, na.rm=canc_NA)
ris (5 : 5): [ 0 0.04000000000000004 1.909432406917014 1.909432406917014 1.909432406917014 ]
canc_NA = 0



ris: 5.768297220751041
------------------------------ Fine somma_v_d

429: dividi_vs_d	ris <- v / div
ris (5 : 5): [ 0 0.04000000000000004 1.909432406917014 1.909432406917014 1.909432406917014 ]
div = 5.768


p_out (5 : 5): [ 0 0.006934455432723346 0.3310218481890922 0.3310218481890922 0.3310218481890922 ]
------------------------------ Fine dividi_vs_d

431: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 5
incr = 1


tmp1_i (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine seq_i


*** sampleB_p ***

*** sample_p ***
tmp1_i (5 : 10): [ 1 2 3 4 5 ]
k = 1, replace = 0
p_out (5 : 5): [ 0 0.006934455432723346 0.3310218481890922 0.3310218481890922 0.3310218481890922 ]


ris (1 : 1): [ 3 ]
*****************************************


Stringhe allocate: 5 (4479 interne); stringhe deallocate: 0 (4124 interne)

435: assegna1_ms_rigaindx_i	<=>	m[riga, indx] <- val
Mdiscr (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 0 0 0 0 0
	 1 0 0 0 0
	 0 1 0 0 0
	 1 1 0 0 0
 ]
riga = 2
ris (1 : 1): [ 3 ]
val = 1


Mdiscr (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 0 0 1 0 0
	 1 0 0 0 0
	 0 1 0 0 0
	 1 1 0 0 0
 ]
------------------------------ Fine assegna1_ms_rigaindx_i

437: copia_v_indx_i	<=>	ris <- v[indx]
Sout (5 : 5): [ 2 3 0 0 0 ]
ris (1 : 1): [ 3 ]


a1 (1 : 1): [ 0 ]
------------------------------ Fine copia_v_indx_i

439: somma_vs_i	<=>	ris <- v + s
a1 (1 : 1): [ 0 ]
s = 1


a2 (1 : 1): [ 1 ]
------------------------------ Fine somma_vs_i

441: incr1_v_i	<=>	v <- v + s
a1 (1 : 1): [ 0 ]
s = 1


a1 (1 : 1): [ 1 ]
------------------------------ Fine incr1_v_i

442: incr1_v_indx_d	<=>	v[indx] <- v[indx] + s
Freq_out (7 : 7): [ 3 0 1 1 0 0 0 ]
a1 (1 : 1): [ 1 ]
val = -1


Freq_out (7 : 7): [ 2 0 1 1 0 0 0 ]
------------------------------ Fine incr1_v_indx_d

444: incr1_v_i	<=>	v <- v + s
a2 (1 : 1): [ 1 ]
s = 1


a2 (1 : 1): [ 2 ]
------------------------------ Fine incr1_v_i

445: incr1_v_indx_d	<=>	v[indx] <- v[indx] + s
Freq_out (7 : 7): [ 2 0 1 1 0 0 0 ]
a2 (1 : 1): [ 2 ]
val = 1


Freq_out (7 : 7): [ 2 1 1 1 0 0 0 ]
------------------------------ Fine incr1_v_indx_d

453: which_m_indxeq_i	<=>	ris <- which(m == val)
Mdiscr (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 0 0 1 0 0
	 1 0 0 0 0
	 0 1 0 0 0
	 1 1 0 0 0
 ]
val = 1


ind (6 : 47): [ 3 5 6 9 10 12 ]
------------------------------ Fine which_m_indxeq_i

459: abs_v_d	<=>	ris <- abs(v)
tmp1_d (6 : 16): [ 1 1 1 1 1 1 ]


tmp2_d (6 : 16): [ 1 1 1 1 1 1 ]
------------------------------ Fine abs_v_d

463: InitMatr_d
M (5 x 5 : 5 x 5): [
	 5.842414621812633e-308 0 0 0 0
	 2.130443901705442e-313 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
val = 0


M (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine InitMatr_d

465: assegna1_mv_indx_d	<=>	m[indx] <- v
M (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
ind (6 : 47): [ 3 5 6 9 10 12 ]
tmp2_d (6 : 16): [ 1 1 1 1 1 1 ]


M (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 0 0 1 0 0
	 1 0 0 0 0
	 0 1 0 0 0
	 1 1 0 0 0
 ]
------------------------------ Fine assegna1_mv_indx_d


Stringhe allocate: 5 (4499 interne); stringhe deallocate: 0 (4314 interne)


*** createRules ***
50: which_m_rowindxne_d	<=>	ris <- which(m[r, ] != val)
M (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 0 0 1 0 0
	 1 0 0 0 0
	 0 1 0 0 0
	 1 1 0 0 0
 ]
r = 1
val = 0


op (1 : 25): [ 2 ]
------------------------------ Fine which_m_rowindxne_d

62: copia_v_i	<=>	ris[st:end] <- v[st:end]
op (1 : 25): [ 2 ]
st = 1
end = 1


ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

50: which_m_rowindxne_d	<=>	ris <- which(m[r, ] != val)
M (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 0 0 1 0 0
	 1 0 0 0 0
	 0 1 0 0 0
	 1 1 0 0 0
 ]
r = 2
val = 0


op (1 : 25): [ 3 ]
------------------------------ Fine which_m_rowindxne_d

62: copia_v_i	<=>	ris[st:end] <- v[st:end]
op (1 : 25): [ 3 ]
st = 1
end = 1


ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

50: which_m_rowindxne_d	<=>	ris <- which(m[r, ] != val)
M (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 0 0 1 0 0
	 1 0 0 0 0
	 0 1 0 0 0
	 1 1 0 0 0
 ]
r = 3
val = 0


op (1 : 25): [ 1 ]
------------------------------ Fine which_m_rowindxne_d

62: copia_v_i	<=>	ris[st:end] <- v[st:end]
op (1 : 25): [ 1 ]
st = 1
end = 1


ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

50: which_m_rowindxne_d	<=>	ris <- which(m[r, ] != val)
M (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 0 0 1 0 0
	 1 0 0 0 0
	 0 1 0 0 0
	 1 1 0 0 0
 ]
r = 4
val = 0


op (1 : 25): [ 2 ]
------------------------------ Fine which_m_rowindxne_d

62: copia_v_i	<=>	ris[st:end] <- v[st:end]
op (1 : 25): [ 2 ]
st = 1
end = 1


ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

50: which_m_rowindxne_d	<=>	ris <- which(m[r, ] != val)
M (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 0 0 1 0 0
	 1 0 0 0 0
	 0 1 0 0 0
	 1 1 0 0 0
 ]
r = 5
val = 0


op (2 : 25): [ 1 2 ]
------------------------------ Fine which_m_rowindxne_d


*** create_logicRule ***
50: op_ss_seqdiv_d	<=>	ris <- (da:a) / div
da = 1
a = 2
div = 2.000


x (2 : 2): [ 0.5 1 ]
------------------------------ Fine op_ss_seqdiv_d

54: InitVett_d
pr_and (2 : 2): [ 6.218345866834302e+175 -2.048428433988699 ]
val = 0.5


pr_and (2 : 2): [ 0.5 0.5 ]
------------------------------ Fine InitVett_d

77: complementa_d	<=>	ris <- 1 - v
pr_and (2 : 2): [ 0.5 0.5 ]


pr_or (2 : 2): [ 0.5 0.5 ]
------------------------------ Fine complementa_d

80: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 0.5, el2 = 0.5


prob (2 : 2): [ 0.5 0.5 ]
------------------------------ Fine vettore2s_d

81: vettore2s_i		<=>	ris <- c(el1, el2)
el1 = -2, el2 = -3


tmp_i (2 : 2): [ -2 -3 ]
------------------------------ Fine vettore2s_i


*** sample_p ***
tmp_i (2 : 2): [ -2 -3 ]
k = 1, replace = 0
prob (2 : 2): [ 0.5 0.5 ]


ris (1 : 1): [ -2 ]
*****************************************


Stringhe allocate: 0 (90 interne); stringhe deallocate: 0 (25 interne)

84: vettore3v_i		<=>	ris <- c(v1, v2, v3)
ris (1 : 1): [ -2 ]
scalare_i (1 : 1): [ 0 ]
scalare_i (1 : 1): [ 0 ]


ris (3 : 3): [ -2 0 0 ]
------------------------------ Fine vettore3v_i

87: vettore2s_i		<=>	ris <- c(el1, el2)
el1 = 2, el2 = 3


o (2 : 2): [ 2 3 ]
------------------------------ Fine vettore2s_i

92: InitVett_d
pr_or (2 : 2): [ 0.5 0.5 ]
val = 0


pr_or (2 : 2): [ 0 0 ]
------------------------------ Fine InitVett_d

95: InitVett_d
pr_and (2 : 2): [ 0.5 0.5 ]
val = 1


pr_and (2 : 2): [ 1 1 ]
------------------------------ Fine InitVett_d


Stringhe allocate: 0 (110 interne); stringhe deallocate: 0 (75 interne)

56: copia_v_i	<=>	ris[st:end] <- v[st:end]
ris (3 : 3): [ -2 1 2 ]
st = 1
end = 3


ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i


Stringhe allocate: 0 (115 interne); stringhe deallocate: 0 (85 interne)

55: InitMatr_i
reg (5 x 3 : 5 x 3): [
	 79864016 79 0
	 79855648 5 199
	 0 25 0
	 50 2 50
	 0 0 1
 ]
val = 0


reg (5 x 3 : 5 x 3): [
	 0 0 0
	 0 0 0
	 0 0 0
	 0 0 0
	 0 0 0
 ]
------------------------------ Fine InitMatr_i

59: assegna1_mv_riga_i	<=>	m[riga,] <- v
reg (5 x 3 : 5 x 3): [
	 0 0 0
	 0 0 0
	 0 0 0
	 0 0 0
	 0 0 0
 ]
riga = 1
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]


reg (5 x 3 : 5 x 3): [
	 2 0 0
	 0 0 0
	 0 0 0
	 0 0 0
	 0 0 0
 ]
------------------------------ Fine assegna1_mv_riga_i

59: assegna1_mv_riga_i	<=>	m[riga,] <- v
reg (5 x 3 : 5 x 3): [
	 2 0 0
	 0 0 0
	 0 0 0
	 0 0 0
	 0 0 0
 ]
riga = 2
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]


reg (5 x 3 : 5 x 3): [
	 2 0 0
	 3 0 0
	 0 0 0
	 0 0 0
	 0 0 0
 ]
------------------------------ Fine assegna1_mv_riga_i

59: assegna1_mv_riga_i	<=>	m[riga,] <- v
reg (5 x 3 : 5 x 3): [
	 2 0 0
	 3 0 0
	 0 0 0
	 0 0 0
	 0 0 0
 ]
riga = 3
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]


reg (5 x 3 : 5 x 3): [
	 2 0 0
	 3 0 0
	 1 0 0
	 0 0 0
	 0 0 0
 ]
------------------------------ Fine assegna1_mv_riga_i

59: assegna1_mv_riga_i	<=>	m[riga,] <- v
reg (5 x 3 : 5 x 3): [
	 2 0 0
	 3 0 0
	 1 0 0
	 0 0 0
	 0 0 0
 ]
riga = 4
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]


reg (5 x 3 : 5 x 3): [
	 2 0 0
	 3 0 0
	 1 0 0
	 2 0 0
	 0 0 0
 ]
------------------------------ Fine assegna1_mv_riga_i

59: assegna1_mv_riga_i	<=>	m[riga,] <- v
reg (5 x 3 : 5 x 3): [
	 2 0 0
	 3 0 0
	 1 0 0
	 2 0 0
	 0 0 0
 ]
riga = 5
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]


reg (5 x 3 : 5 x 3): [
	 2 0 0
	 3 0 0
	 1 0 0
	 2 0 0
	 -2 1 2
 ]
------------------------------ Fine assegna1_mv_riga_i


*** write_m_i ***
reg (5 x 3 : 5 x 3): [
	 2 0 0
	 3 0 0
	 1 0 0
	 2 0 0
	 -2 1 2
 ]

Stringhe allocate: 0 (120 interne); stringhe deallocate: 0 (85 interne)


*** createNEG1 ***
17: InitMatr_i
ris (5 x 5 : 5 x 5): [
	 79861520 1 1 1 1
	 2 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
val = 0


ris (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine InitMatr_i

19: which_m_indxeq_i	<=>	ris <- which(m == val)
Mdiscr (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 0 0 1 0 0
	 1 0 0 0 0
	 0 1 0 0 0
	 1 1 0 0 0
 ]
val = 1


ind (6 : 25): [ 3 5 6 9 10 12 ]
------------------------------ Fine which_m_indxeq_i

22: vettore2s_i		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 1


tmp_i (2 : 2): [ -1 1 ]
------------------------------ Fine vettore2s_i


***sample***
tmp_i (2 : 2): [ -1 1 ]
k = 6, replace = 1


ris (6 : 6): [ 1 1 1 -1 -1 -1 ]
*****************************************


Stringhe allocate: 0 (140 interne); stringhe deallocate: 0 (85 interne)


Stringhe allocate: 0 (140 interne); stringhe deallocate: 0 (100 interne)

74: moltiplica_mm_di	<=>	ris <- m1 * m2
M (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 0 0 1 0 0
	 1 0 0 0 0
	 0 1 0 0 0
	 1 1 0 0 0
 ]
ris (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 0 0 -1 0 0
	 1 0 0 0 0
	 0 -1 0 0 0
	 1 -1 0 0 0
 ]


tmpm1_d (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 0 0 -1 0 0
	 1 0 0 0 0
	 0 -1 0 0 0
	 1 -1 0 0 0
 ]
------------------------------ Fine moltiplica_mm_di


*** write_m_d ***
tmpm1_d (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 0 0 -1 0 0
	 1 0 0 0 0
	 0 -1 0 0 0
	 1 -1 0 0 0
 ]

Stringhe allocate: 0 (145 interne); stringhe deallocate: 0 (100 interne)


*** lsoda ***
116: copia_v_d	<=>	ris[st:end] <- v[st:end]
parm1[j][i] (5 : 5): [ 0.8988629876690203 0.86013003877782 0.7529666664997292 0.6820456255132146 0.8224436778595854 ]
st = 1
end = 5


y (5 : 5): [ 0.8988629876690203 0.86013003877782 0.7529666664997292 0.6820456255132146 0.8224436778595854 ]
------------------------------ Fine copia_v_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 5.842414657162951e-308 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.86013003877782


ris (2 : 2): [ 1 0.86013003877782 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (195 interne); stringhe deallocate: 0 (115 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 5.841302730096658e-308 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529666664997292


ris (2 : 2): [ -1 0.7529666664997292 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (215 interne); stringhe deallocate: 0 (135 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 5.842414657140548e-308 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8988629876690203


ris (2 : 2): [ 1 0.8988629876690203 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (235 interne); stringhe deallocate: 0 (155 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7529664128275098 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.86013003877782


ris (2 : 2): [ -1 0.86013003877782 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (255 interne); stringhe deallocate: 0 (175 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870043289923e-314 0 0.06825173010839181 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 1851487313 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.03873294889120027


ris (2 : 2): [ 1 0.03873294889120027 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (275 interne); stringhe deallocate: 0 (195 interne)


Stringhe allocate: 1 (275 interne); stringhe deallocate: 0 (200 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.86013003877782 0.2470333335002708 0.8988629876690203 0.13986996122218 0.03873294889120027 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9530433555553926 0.5373515027064136 0.9563721624308594 0.6597936229356807 0.7786327100555114 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8601298374599846 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601299715019439


ris (2 : 2): [ 1 0.8601299715019439 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (310 interne); stringhe deallocate: 0 (230 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 5.841302731372841e-308 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529667192242999


ris (2 : 2): [ -1 0.7529667192242999 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (330 interne); stringhe deallocate: 0 (250 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 4.283447308680162e-314 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8988630017671476


ris (2 : 2): [ 1 0.8988630017671476 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (350 interne); stringhe deallocate: 0 (270 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7529664082022833 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8601299715019439


ris (2 : 2): [ -1 0.8601299715019439 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (370 interne); stringhe deallocate: 0 (290 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870557118195e-314 0 3.904695659687373e-316 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 1245520092 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.03873303026520369


ris (2 : 2): [ 1 0.03873303026520369 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (390 interne); stringhe deallocate: 0 (310 interne)


Stringhe allocate: 1 (390 interne); stringhe deallocate: 0 (315 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8601299715019439 0.2470332807757001 0.8988630017671476 0.1398700284980561 0.03873303026520369 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9530433329697755 0.5373514703106324 0.9563721685124194 0.6597936495452408 0.7786327287948852 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8601298420875967 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601299378640142


ris (2 : 2): [ 1 0.8601299378640142 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (425 interne); stringhe deallocate: 0 (345 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529667455865716


ris (2 : 2): [ -1 0.7529667455865716 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (445 interne); stringhe deallocate: 0 (365 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 1.#QNAN ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8988630088162005


ris (2 : 2): [ 1 0.8988630088162005 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (465 interne); stringhe deallocate: 0 (385 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7529664080592475 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8601299378640142


ris (2 : 2): [ -1 0.8601299378640142 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (485 interne); stringhe deallocate: 0 (405 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869940524268e-314 0 3.90471621281824e-316 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 942536556 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.03873307095218637


ris (2 : 2): [ 1 0.03873307095218637 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (505 interne); stringhe deallocate: 0 (425 interne)


Stringhe allocate: 1 (505 interne); stringhe deallocate: 0 (430 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8601299378640142 0.2470332544134284 0.8988630088162005 0.1398700621359859 0.03873307095218637 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9530433216769697 0.5373514541127502 0.9563721715531948 0.6597936628500177 0.7786327381645677 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8601298374625355 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.860129790374635


ris (2 : 2): [ 1 0.860129790374635 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (540 interne); stringhe deallocate: 0 (460 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529668611749847


ris (2 : 2): [ -1 0.7529668611749847 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (560 interne); stringhe deallocate: 0 (480 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8988630397235792


ris (2 : 2): [ 1 0.8988630397235792 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (580 interne); stringhe deallocate: 0 (500 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7529664080593639 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.860129790374635


ris (2 : 2): [ -1 0.860129790374635 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (600 interne); stringhe deallocate: 0 (520 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161449723268464e-314 0 3.904849017663842e-316 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 -385929670 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.03873324934894418


ris (2 : 2): [ 1 0.03873324934894418 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (620 interne); stringhe deallocate: 0 (540 interne)


Stringhe allocate: 1 (620 interne); stringhe deallocate: 0 (545 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.860129790374635 0.2470331388250153 0.8988630397235792 0.139870209625365 0.03873324934894418 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9530432721623614 0.5373513830912721 0.9563721848858221 0.6597937211863448 0.778632779247019 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8601293606253435 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601297696743741


ris (2 : 2): [ 1 0.8601297696743741 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (655 interne); stringhe deallocate: 0 (575 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529668773979152


ris (2 : 2): [ -1 0.7529668773979152 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (675 interne); stringhe deallocate: 0 (595 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8988630440614532


ris (2 : 2): [ 1 0.8988630440614532 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (695 interne); stringhe deallocate: 0 (615 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7529664082023198 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8601297696743741


ris (2 : 2): [ -1 0.8601297696743741 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (715 interne); stringhe deallocate: 0 (635 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870098625275e-314 0 3.904819768977608e-316 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 -572381045 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.03873327438707919


ris (2 : 2): [ 1 0.03873327438707919 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (735 interne); stringhe deallocate: 0 (655 interne)


Stringhe allocate: 1 (735 interne); stringhe deallocate: 0 (660 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8601297696743741 0.2470331226020848 0.8988630440614532 0.139870230325626 0.03873327438707919 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9530432652129437 0.5373513731233481 0.9563721867570665 0.6597937293738985 0.7786327850129756 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8601293606228264 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601299042260825


ris (2 : 2): [ 1 0.8601299042260825 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (770 interne); stringhe deallocate: 0 (690 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529667719488464


ris (2 : 2): [ -1 0.7529667719488464 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (790 interne); stringhe deallocate: 0 (710 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8988630158652559


ris (2 : 2): [ 1 0.8988630158652559 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (810 interne); stringhe deallocate: 0 (730 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7529664128275098 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8601299042260825


ris (2 : 2): [ -1 0.8601299042260825 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (830 interne); stringhe deallocate: 0 (750 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869798233362e-314 0 3.904829255038008e-316 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 639553003 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.03873311163917337


ris (2 : 2): [ 1 0.03873311163917337 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (850 interne); stringhe deallocate: 0 (770 interne)


Stringhe allocate: 1 (850 interne); stringhe deallocate: 0 (775 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8601299042260825 0.2470332280511536 0.8988630158652559 0.1398700957739175 0.03873311163917337 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9530433103841632 0.5373514379148661 0.9563721745939712 0.6597936761547952 0.7786327475342513 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8601298420875967 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601297696743741


ris (2 : 2): [ 1 0.8601297696743741 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (885 interne); stringhe deallocate: 0 (805 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529668773979152


ris (2 : 2): [ -1 0.7529668773979152 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (905 interne); stringhe deallocate: 0 (825 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8988630440614532


ris (2 : 2): [ 1 0.8988630440614532 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (925 interne); stringhe deallocate: 0 (845 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7529664082022833 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8601297696743741


ris (2 : 2): [ -1 0.8601297696743741 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (945 interne); stringhe deallocate: 0 (865 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161448569131115e-314 0 3.904904353016176e-316 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 -572381045 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.03873327438707919


ris (2 : 2): [ 1 0.03873327438707919 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (965 interne); stringhe deallocate: 0 (885 interne)


Stringhe allocate: 1 (965 interne); stringhe deallocate: 0 (890 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8601297696743741 0.2470331226020848 0.8988630440614532 0.139870230325626 0.03873327438707919 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9530432652129437 0.5373513731233481 0.9563721867570665 0.6597937293738985 0.7786327850129756 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8601293606253773 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601297696743741


ris (2 : 2): [ 1 0.8601297696743741 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1000 interne); stringhe deallocate: 0 (920 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529668773979152


ris (2 : 2): [ -1 0.7529668773979152 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1020 interne); stringhe deallocate: 0 (940 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8988630440614532


ris (2 : 2): [ 1 0.8988630440614532 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1040 interne); stringhe deallocate: 0 (960 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7529664080592475 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8601297696743741


ris (2 : 2): [ -1 0.8601297696743741 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1060 interne); stringhe deallocate: 0 (980 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870043289923e-314 0 0.8601298419958177 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 -572381045 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.03873327438707919


ris (2 : 2): [ 1 0.03873327438707919 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1080 interne); stringhe deallocate: 0 (1000 interne)


Stringhe allocate: 1 (1080 interne); stringhe deallocate: 0 (1005 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8601297696743741 0.2470331226020848 0.8988630440614532 0.139870230325626 0.03873327438707919 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9530432652129437 0.5373513731233481 0.9563721867570665 0.6597937293738985 0.7786327850129756 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8601293606253435 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601294332951393


ris (2 : 2): [ 1 0.8601294332951393 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1115 interne); stringhe deallocate: 0 (1035 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529671410205269


ris (2 : 2): [ -1 0.7529671410205269 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1135 interne); stringhe deallocate: 0 (1055 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8988631145518989


ris (2 : 2): [ 1 0.8988631145518989 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1155 interne); stringhe deallocate: 0 (1075 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7529668848965221 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8601294332951393


ris (2 : 2): [ -1 0.8601294332951393 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1175 interne); stringhe deallocate: 0 (1095 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870557118195e-314 0 0.8601298419962848 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 692751458 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.03873368125675969


ris (2 : 2): [ 1 0.03873368125675969 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1195 interne); stringhe deallocate: 0 (1115 interne)


Stringhe allocate: 1 (1195 interne); stringhe deallocate: 0 (1120 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8601294332951393 0.2470328589794731 0.8988631145518989 0.1398705667048608 0.03873368125675969 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9530431522849069 0.5373512111445906 0.9563722171647842 0.659793862421642 0.7786328787097672 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8601293606228264 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601292651057263


ris (2 : 2): [ 1 0.8601292651057263 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1230 interne); stringhe deallocate: 0 (1150 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529672728314927


ris (2 : 2): [ -1 0.7529672728314927 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1250 interne); stringhe deallocate: 0 (1170 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8988631497968533


ris (2 : 2): [ 1 0.8988631497968533 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1270 interne); stringhe deallocate: 0 (1190 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.752966885039478 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8601292651057263


ris (2 : 2): [ -1 0.8601292651057263 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1290 interne); stringhe deallocate: 0 (1210 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869940524268e-314 0 0.8601298419957413 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 -822164097 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.03873388469112704


ris (2 : 2): [ 1 0.03873388469112704 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1310 interne); stringhe deallocate: 0 (1230 interne)


Stringhe allocate: 1 (1310 interne); stringhe deallocate: 0 (1235 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8601292651057263 0.2470327271685073 0.8988631497968533 0.1398707348942737 0.03873388469112704 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9530430958209571 0.5373511301554208 0.9563722323685271 0.6597939289454329 0.7786329255580541 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8601288884132803 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601285276599767


ris (2 : 2): [ 1 0.8601285276599767 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1345 interne); stringhe deallocate: 0 (1265 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529678507716517


ris (2 : 2): [ -1 0.7529678507716517 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1365 interne); stringhe deallocate: 0 (1285 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8988633043322415


ris (2 : 2): [ 1 0.8988633043322415 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1385 interne); stringhe deallocate: 0 (1305 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7529678433389844 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8601285276599767


ris (2 : 2): [ -1 0.8601285276599767 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1405 interne); stringhe deallocate: 0 (1325 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161449723268464e-314 0 0.8601293651586293 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 1125449689 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.03873477667226477


ris (2 : 2): [ 1 0.03873477667226477 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1425 interne); stringhe deallocate: 0 (1345 interne)


Stringhe allocate: 1 (1425 interne); stringhe deallocate: 0 (1350 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8601285276599767 0.2470321492283483 0.8988633043322415 0.1398714723400233 0.03873477667226477 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9530428482483007 0.5373507750492015 0.9563722990310146 0.6597942206266152 0.7786331309697 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8601284069510609 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601284241588888


ris (2 : 2): [ 1 0.8601284241588888 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1460 interne); stringhe deallocate: 0 (1380 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529679318859438


ris (2 : 2): [ -1 0.7529679318859438 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1480 interne); stringhe deallocate: 0 (1400 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.898863326021327


ris (2 : 2): [ 1 0.898863326021327 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1500 interne); stringhe deallocate: 0 (1420 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7529678387137579 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8601284241588888


ris (2 : 2): [ -1 0.8601284241588888 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1520 interne); stringhe deallocate: 0 (1440 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870098625275e-314 0 0.8601293651589277 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 193194767 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.03873490186243822


ris (2 : 2): [ 1 0.03873490186243822 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1540 interne); stringhe deallocate: 0 (1460 interne)


Stringhe allocate: 1 (1540 interne); stringhe deallocate: 0 (1465 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8601284241588888 0.2470320681140562 0.898863326021327 0.1398715758411112 0.03873490186243822 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9530428135012846 0.5373507252098035 0.9563723083871136 0.6597942615642974 0.7786331597993674 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8601284069510271 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601290969162679


ris (2 : 2): [ 1 0.8601290969162679 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1575 interne); stringhe deallocate: 0 (1495 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.752967404642534


ris (2 : 2): [ -1 0.752967404642534 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1595 interne); stringhe deallocate: 0 (1515 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8988631850418674


ris (2 : 2): [ 1 0.8988631850418674 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1615 interne); stringhe deallocate: 0 (1535 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7529673617335639 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8601290969162679


ris (2 : 2): [ -1 0.8601290969162679 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1635 interne); stringhe deallocate: 0 (1555 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869798233362e-314 0 0.8601298419960202 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 1957887235 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.03873408812559942


ris (2 : 2): [ 1 0.03873408812559942 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1655 interne); stringhe deallocate: 0 (1575 interne)


Stringhe allocate: 1 (1655 interne); stringhe deallocate: 0 (1580 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8601290969162679 0.247032595357466 0.8988631850418674 0.1398709030837321 0.03873408812559942 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9530430393569922 0.5373510491662045 0.9563722475722959 0.6597939954692417 0.7786329724063652 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8601288837856682 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601284241588888


ris (2 : 2): [ 1 0.8601284241588888 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1690 interne); stringhe deallocate: 0 (1610 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529679318859437


ris (2 : 2): [ -1 0.7529679318859437 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1710 interne); stringhe deallocate: 0 (1630 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.898863326021327


ris (2 : 2): [ 1 0.898863326021327 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1730 interne); stringhe deallocate: 0 (1650 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7529678385708385 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8601284241588888


ris (2 : 2): [ -1 0.8601284241588888 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1750 interne); stringhe deallocate: 0 (1670 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161448569131115e-314 0 0.8601293651588833 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 193194767 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.03873490186243822


ris (2 : 2): [ 1 0.03873490186243822 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1770 interne); stringhe deallocate: 0 (1690 interne)


Stringhe allocate: 1 (1770 interne); stringhe deallocate: 0 (1695 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8601284241588888 0.2470320681140563 0.898863326021327 0.1398715758411112 0.03873490186243822 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9530428135012846 0.5373507252098037 0.9563723083871136 0.6597942615642974 0.7786331597993674 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8601284115761221 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601284241588888


ris (2 : 2): [ 1 0.8601284241588888 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1805 interne); stringhe deallocate: 0 (1725 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529679318859437


ris (2 : 2): [ -1 0.7529679318859437 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1825 interne); stringhe deallocate: 0 (1745 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.898863326021327


ris (2 : 2): [ 1 0.898863326021327 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1845 interne); stringhe deallocate: 0 (1765 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7529678387137944 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8601284241588888


ris (2 : 2): [ -1 0.8601284241588888 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1865 interne); stringhe deallocate: 0 (1785 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870043289923e-314 0 0.860129365159052 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 193194767 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.03873490186243822


ris (2 : 2): [ 1 0.03873490186243822 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1885 interne); stringhe deallocate: 0 (1805 interne)


Stringhe allocate: 1 (1885 interne); stringhe deallocate: 0 (1810 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8601284241588888 0.2470320681140563 0.898863326021327 0.1398715758411112 0.03873490186243822 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9530428135012846 0.5373507252098037 0.9563723083871136 0.6597942615642974 0.7786331597993674 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8601284069510609 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601267422663498


ris (2 : 2): [ 1 0.8601267422663498 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1920 interne); stringhe deallocate: 0 (1840 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529692499929568


ris (2 : 2): [ -1 0.7529692499929568 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1940 interne); stringhe deallocate: 0 (1860 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8988636784687829


ris (2 : 2): [ 1 0.8988636784687829 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1960 interne); stringhe deallocate: 0 (1880 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7529687970133008 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8601267422663498


ris (2 : 2): [ -1 0.8601267422663498 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1980 interne); stringhe deallocate: 0 (1900 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870557118195e-314 0 0.8601293651586595 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 -2071044569 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.03873693620243313


ris (2 : 2): [ 1 0.03873693620243313 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2000 interne); stringhe deallocate: 0 (1920 interne)


Stringhe allocate: 1 (2000 interne); stringhe deallocate: 0 (1925 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8601267422663498 0.2470307500070432 0.8988636784687829 0.1398732577336502 0.03873693620243313 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9530422488623209 0.5373499153197302 0.956372460423643 0.6597949268015773 0.7786336282813892 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8601264996023943 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.860125901325192


ris (2 : 2): [ 1 0.860125901325192 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2035 interne); stringhe deallocate: 0 (1955 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529699090379624


ris (2 : 2): [ -1 0.7529699090379624 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2055 interne); stringhe deallocate: 0 (1975 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8988638546857992


ris (2 : 2): [ 1 0.8988638546857992 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2075 interne); stringhe deallocate: 0 (1995 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7529697460623908 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.860125901325192


ris (2 : 2): [ -1 0.860125901325192 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2095 interne); stringhe deallocate: 0 (2015 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869940524268e-314 0 0.8601288883219684 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 -1055634547 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.03873795336060726


ris (2 : 2): [ 1 0.03873795336060726 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2115 interne); stringhe deallocate: 0 (2035 interne)


Stringhe allocate: 1 (2115 interne); stringhe deallocate: 0 (2040 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.860125901325192 0.2470300909620377 0.8988638546857992 0.1398740986748081 0.03873795336060726 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9530419665445553 0.5373495103799167 0.9563725364390125 0.6597952594181954 0.7786338625196773 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8601255459255608 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.860122214125102


ris (2 : 2): [ 1 0.860122214125102 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2150 interne); stringhe deallocate: 0 (2070 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.752972798691099


ris (2 : 2): [ -1 0.752972798691099 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2170 interne); stringhe deallocate: 0 (2090 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8988646273251137


ris (2 : 2): [ 1 0.8988646273251137 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2190 interne); stringhe deallocate: 0 (2110 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7529726069423042 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.860122214125102


ris (2 : 2): [ -1 0.860122214125102 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2210 interne); stringhe deallocate: 0 (2130 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161449723268464e-314 0 0.8601284114842667 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 92757919 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.03874241320001171


ris (2 : 2): [ 1 0.03874241320001171 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2230 interne); stringhe deallocate: 0 (2150 interne)


Stringhe allocate: 1 (2230 interne); stringhe deallocate: 0 (2155 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.860122214125102 0.247027201308901 0.8988646273251137 0.139877785874898 0.03874241320001171 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9530407286908939 0.5373477348781038 0.9563728697352187 0.6597967178127724 0.7786348895626425 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8601222126930654 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601216966250825


ris (2 : 2): [ 1 0.8601216966250825 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2265 interne); stringhe deallocate: 0 (2185 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529732042535455


ris (2 : 2): [ -1 0.7529732042535455 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2285 interne); stringhe deallocate: 0 (2205 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8988647357634252


ris (2 : 2): [ 1 0.8988647357634252 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2305 interne); stringhe deallocate: 0 (2225 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7529730837795787 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8601216966250825


ris (2 : 2): [ -1 0.8601216966250825 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2325 interne); stringhe deallocate: 0 (2245 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870098625275e-314 0 0.8601284114843129 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 -273500575 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.03874303913834265


ris (2 : 2): [ 1 0.03874303913834265 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2345 interne); stringhe deallocate: 0 (2265 interne)


Stringhe allocate: 1 (2345 interne); stringhe deallocate: 0 (2270 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8601216966250825 0.2470267957464545 0.8988647357634252 0.1398783033749175 0.03874303913834265 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9530405549576333 0.5373474856866525 0.956372916512644 0.6597969224990394 0.7786350337080928 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8601212543936878 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601250603828983


ris (2 : 2): [ 1 0.8601250603828983 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2380 interne); stringhe deallocate: 0 (2300 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.752970568084857


ris (2 : 2): [ -1 0.752970568084857 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2400 interne); stringhe deallocate: 0 (2320 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.898864030904307


ris (2 : 2): [ 1 0.898864030904307 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2420 interne); stringhe deallocate: 0 (2340 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7529702228995854 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8601250603828983


ris (2 : 2): [ -1 0.8601250603828983 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2440 interne); stringhe deallocate: 0 (2360 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869798233362e-314 0 0.8601288883217695 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 -40234756 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.03873897052140873


ris (2 : 2): [ 1 0.03873897052140873 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2460 interne); stringhe deallocate: 0 (2380 interne)


Stringhe allocate: 1 (2460 interne); stringhe deallocate: 0 (2385 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8601250603828983 0.247029431915143 0.898864030904307 0.1398749396171017 0.03873897052140873 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9530416842264082 0.5373491054389425 0.9563726124550255 0.6597955920352627 0.7786340967585704 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8601245922537615 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601216966250825


ris (2 : 2): [ 1 0.8601216966250825 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2495 interne); stringhe deallocate: 0 (2415 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529732042535451


ris (2 : 2): [ -1 0.7529732042535451 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2515 interne); stringhe deallocate: 0 (2435 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8988647357634244


ris (2 : 2): [ 1 0.8988647357634244 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2535 interne); stringhe deallocate: 0 (2455 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7529730885477246 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8601216966250825


ris (2 : 2): [ -1 0.8601216966250825 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2555 interne); stringhe deallocate: 0 (2475 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161448569131115e-314 0 0.8601284114845456 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 -273500575 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.03874303913834187


ris (2 : 2): [ 1 0.03874303913834187 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2575 interne); stringhe deallocate: 0 (2495 interne)


Stringhe allocate: 1 (2575 interne); stringhe deallocate: 0 (2500 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8601216966250825 0.2470267957464549 0.8988647357634244 0.1398783033749175 0.03874303913834187 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9530405549576333 0.5373474856866528 0.9563729165126438 0.6597969224990394 0.7786350337080926 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.860121254391137 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601216966250825


ris (2 : 2): [ 1 0.8601216966250825 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2610 interne); stringhe deallocate: 0 (2530 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529732042535451


ris (2 : 2): [ -1 0.7529732042535451 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2630 interne); stringhe deallocate: 0 (2550 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8988647357634244


ris (2 : 2): [ 1 0.8988647357634244 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2650 interne); stringhe deallocate: 0 (2570 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7529730839224982 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8601216966250825


ris (2 : 2): [ -1 0.8601216966250825 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2670 interne); stringhe deallocate: 0 (2590 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870043289923e-314 0 0.8601284114845669 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 -273500575 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.03874303913834187


ris (2 : 2): [ 1 0.03874303913834187 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2690 interne); stringhe deallocate: 0 (2610 interne)


Stringhe allocate: 1 (2690 interne); stringhe deallocate: 0 (2615 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8601216966250825 0.2470267957464549 0.8988647357634244 0.1398783033749175 0.03874303913834187 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9530405549576333 0.5373474856866528 0.9563729165126438 0.6597969224990394 0.7786350337080926 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.860121259018749 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601132872532621


ris (2 : 2): [ 1 0.8601132872532621 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2725 interne); stringhe deallocate: 0 (2645 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529797946374837


ris (2 : 2): [ -1 0.7529797946374837 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2745 interne); stringhe deallocate: 0 (2665 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8988664978813893


ris (2 : 2): [ 1 0.8988664978813893 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2765 interne); stringhe deallocate: 0 (2685 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7529797594996772 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8601132872532621


ris (2 : 2): [ -1 0.8601132872532621 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2785 interne); stringhe deallocate: 0 (2705 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870557118195e-314 0 0.8601265041361028 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 1291023159 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.0387532106281272


ris (2 : 2): [ 1 0.0387532106281272 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2805 interne); stringhe deallocate: 0 (2725 interne)


Stringhe allocate: 1 (2805 interne); stringhe deallocate: 0 (2730 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8601132872532621 0.2470202053625163 0.8988664978813893 0.1398867127467379 0.0387532106281272 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9530377317933232 0.5373434363291428 0.956373676643822 0.6598002486494951 0.7786373760697973 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8601131481619984 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601090826951442


ris (2 : 2): [ 1 0.8601090826951442 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2840 interne); stringhe deallocate: 0 (2760 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529830896169326


ris (2 : 2): [ -1 0.7529830896169326 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2860 interne); stringhe deallocate: 0 (2780 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8988673787725887


ris (2 : 2): [ 1 0.8988673787725887 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2880 interne); stringhe deallocate: 0 (2800 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7529826205227428 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8601090826951442


ris (2 : 2): [ -1 0.8601090826951442 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2900 interne); stringhe deallocate: 0 (2820 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869940524268e-314 0 0.8601255504613938 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 2074436077 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.03875829607744452


ris (2 : 2): [ 1 0.03875829607744452 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2920 interne); stringhe deallocate: 0 (2840 interne)


Stringhe allocate: 1 (2920 interne); stringhe deallocate: 0 (2845 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8601090826951442 0.2470169103830674 0.8988673787725887 0.1398909173048558 0.03875829607744452 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9530363202540702 0.5373414117809676 0.956374056637034 0.6598019116741773 0.7786385471825825 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8601088566275408 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8600906474111395


ris (2 : 2): [ 1 0.8600906474111395 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2955 interne); stringhe deallocate: 0 (2875 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529975366912203


ris (2 : 2): [ -1 0.7529975366912203 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2975 interne); stringhe deallocate: 0 (2895 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8988712410286056


ris (2 : 2): [ 1 0.8988712410286056 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2995 interne); stringhe deallocate: 0 (2915 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.752997402617603 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8600906474111395


ris (2 : 2): [ -1 0.8600906474111395 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3015 interne); stringhe deallocate: 0 (2935 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161449723268464e-314 0 0.8601222126017536 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 -767083023 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.03878059361746611


ris (2 : 2): [ 1 0.03878059361746611 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3035 interne); stringhe deallocate: 0 (2955 interne)


Stringhe allocate: 1 (3035 interne); stringhe deallocate: 0 (2960 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8600906474111395 0.2470024633087797 0.8988712410286056 0.1399093525888605 0.03878059361746611 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9530301312262854 0.5373325350039376 0.956375722712334 0.6598092033636878 0.778643682015823 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8600902599758538 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8600880600465485


ris (2 : 2): [ 1 0.8600880600465485 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3070 interne); stringhe deallocate: 0 (2990 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529995642781519


ris (2 : 2): [ -1 0.7529995642781519 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3090 interne); stringhe deallocate: 0 (3010 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8988717830423224


ris (2 : 2): [ 1 0.8988717830423224 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3110 interne); stringhe deallocate: 0 (3030 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7529993145914258 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8600880600465485


ris (2 : 2): [ -1 0.8600880600465485 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3130 interne); stringhe deallocate: 0 (3050 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870098625275e-314 0 0.8601212589268936 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 1697812337 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.03878372299577393


ris (2 : 2): [ 1 0.03878372299577393 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3150 interne); stringhe deallocate: 0 (3070 interne)


Stringhe allocate: 1 (3150 interne); stringhe deallocate: 0 (3075 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8600880600465485 0.2470004357218482 0.8988717830423224 0.1399119399534515 0.03878372299577393 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9530292626054745 0.5373312891851136 0.9563759565227447 0.659810226741426 0.7786444026709151 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8600878804176748 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601048781086279


ris (2 : 2): [ 1 0.8601048781086279 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3185 interne); stringhe deallocate: 0 (3105 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529863846435976


ris (2 : 2): [ -1 0.7529863846435976 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3205 interne); stringhe deallocate: 0 (3125 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.898868259701057


ris (2 : 2): [ 1 0.898868259701057 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3225 interne); stringhe deallocate: 0 (3145 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7529859585257697 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8601048781086279


ris (2 : 2): [ -1 0.8601048781086279 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3245 interne); stringhe deallocate: 0 (3165 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869798233362e-314 0 0.8601245967870472 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 -1437374091 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.03876338159242909


ris (2 : 2): [ 1 0.03876338159242909 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3265 interne); stringhe deallocate: 0 (3185 interne)


Stringhe allocate: 1 (3265 interne); stringhe deallocate: 0 (3190 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8601048781086279 0.2470136153564024 0.898868259701057 0.1398951218913721 0.03876338159242909 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9530349087052833 0.5373393872037812 0.9563744366463227 0.659803574710092 0.7786397183104901 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8601045650931507 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8600880600465475


ris (2 : 2): [ 1 0.8600880600465475 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3300 interne); stringhe deallocate: 0 (3220 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529995642780872


ris (2 : 2): [ -1 0.7529995642780872 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3320 interne); stringhe deallocate: 0 (3240 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.898871783042225


ris (2 : 2): [ 1 0.898871783042225 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3340 interne); stringhe deallocate: 0 (3260 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7529993098231635 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8600880600465475


ris (2 : 2): [ -1 0.8600880600465475 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3360 interne); stringhe deallocate: 0 (3280 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161448569131115e-314 0 0.8601212589272382 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 1697812328 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.03878372299567756


ris (2 : 2): [ 1 0.03878372299567756 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3380 interne); stringhe deallocate: 0 (3300 interne)


Stringhe allocate: 1 (3380 interne); stringhe deallocate: 0 (3305 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8600880600465475 0.2470004357219128 0.898871783042225 0.1399119399534525 0.03878372299567756 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9530292626054742 0.5373312891851533 0.9563759565227027 0.6598102267414264 0.7786444026708929 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8600878757925798 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8600880600465475


ris (2 : 2): [ 1 0.8600880600465475 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3415 interne); stringhe deallocate: 0 (3335 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529995642780872


ris (2 : 2): [ -1 0.7529995642780872 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3435 interne); stringhe deallocate: 0 (3355 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.898871783042225


ris (2 : 2): [ 1 0.898871783042225 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3455 interne); stringhe deallocate: 0 (3375 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7529993098232799 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8600880600465475


ris (2 : 2): [ -1 0.8600880600465475 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3475 interne); stringhe deallocate: 0 (3395 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870043289923e-314 0 0.8601212589271725 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 1697812328 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.03878372299567756


ris (2 : 2): [ 1 0.03878372299567756 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3495 interne); stringhe deallocate: 0 (3415 interne)


Stringhe allocate: 1 (3495 interne); stringhe deallocate: 0 (3420 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8600880600465475 0.2470004357219128 0.898871783042225 0.1399119399534525 0.03878372299567756 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9530292626054742 0.5373312891851533 0.9563759565227027 0.6598102267414264 0.7786444026708929 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8600878757900627 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8600460154593133


ris (2 : 2): [ 1 0.8600460154593133 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3530 interne); stringhe deallocate: 0 (3450 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7530325124198039


ris (2 : 2): [ -1 0.7530325124198039 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3550 interne); stringhe deallocate: 0 (3470 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8988805906494833


ris (2 : 2): [ 1 0.8988805906494833 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3570 interne); stringhe deallocate: 0 (3490 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7530322117301518 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8600460154593133


ris (2 : 2): [ -1 0.8600460154593133 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3590 interne); stringhe deallocate: 0 (3510 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870557118195e-314 0 0.8601131526955044 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 950959574 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.03883457519017008


ris (2 : 2): [ 1 0.03883457519017008 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3610 interne); stringhe deallocate: 0 (3530 interne)


Stringhe allocate: 1 (3610 interne); stringhe deallocate: 0 (3535 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8600460154593133 0.2469674875801962 0.8988805906494833 0.1399539845406868 0.03883457519017008 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9530151475466272 0.5373110447189212 0.9563797558919938 0.6598268565951151 0.7786561132693884 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8600459187477529 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8600249963605143


ris (2 : 2): [ 1 0.8600249963605143 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3645 interne); stringhe deallocate: 0 (3565 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7530489811781103


ris (2 : 2): [ -1 0.7530489811781103 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3665 interne); stringhe deallocate: 0 (3585 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8988849902592213


ris (2 : 2): [ 1 0.8988849902592213 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3685 interne); stringhe deallocate: 0 (3605 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7530489056558789 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8600249963605143


ris (2 : 2): [ -1 0.8600249963605143 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3705 interne); stringhe deallocate: 0 (3625 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869940524268e-314 0 0.8601088611612493 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 606309561 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.03885999389870698


ris (2 : 2): [ 1 0.03885999389870698 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3725 interne); stringhe deallocate: 0 (3645 interne)


Stringhe allocate: 1 (3725 interne); stringhe deallocate: 0 (3650 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8600249963605143 0.2469510188218898 0.8988849902592213 0.1399750036394857 0.03885999389870698 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9530080910897567 0.537300925750019 0.9563816537675053 0.6598351702583162 0.7786619668671126 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8600249332877308 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8599328378517546


ris (2 : 2): [ 1 0.8599328378517546 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3760 interne); stringhe deallocate: 0 (3680 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7531211867730709


ris (2 : 2): [ -1 0.7531211867730709 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3780 interne); stringhe deallocate: 0 (3700 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8989042780381269


ris (2 : 2): [ 1 0.8989042780381269 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3800 interne); stringhe deallocate: 0 (3720 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7531209034415412 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8599328378517546


ris (2 : 2): [ -1 0.8599328378517546 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3820 interne); stringhe deallocate: 0 (3740 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161449723268464e-314 0 0.8600902645116868 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 -555053730 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.03897144018637233


ris (2 : 2): [ 1 0.03897144018637233 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3840 interne); stringhe deallocate: 0 (3760 interne)


Stringhe allocate: 1 (3840 interne); stringhe deallocate: 0 (3765 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8599328378517546 0.2468788132269291 0.8989042780381269 0.1400671621482454 0.03897144018637233 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.952977151963939 0.5372565601605567 0.9563899740062167 0.6598716216214442 0.7786876314965685 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8599324268790056 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8599199044165328


ris (2 : 2): [ 1 0.8599199044165328 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3875 interne); stringhe deallocate: 0 (3795 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7531313190802613


ris (2 : 2): [ -1 0.7531313190802613 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3895 interne); stringhe deallocate: 0 (3815 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8989069836683359


ris (2 : 2): [ 1 0.8989069836683359 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3915 interne); stringhe deallocate: 0 (3835 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7531309168788276 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8599199044165328


ris (2 : 2): [ -1 0.8599199044165328 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3935 interne); stringhe deallocate: 0 (3855 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870098625275e-314 0 0.860087880326363 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 -1084964829 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.03898707925180311


ris (2 : 2): [ 1 0.03898707925180311 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3955 interne); stringhe deallocate: 0 (3875 interne)


Stringhe allocate: 1 (3955 interne); stringhe deallocate: 0 (3880 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8599199044165328 0.2468686809197387 0.8989069836683359 0.1400800955834672 0.03898707925180311 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9529728099972017 0.537250334524145 0.9563911411436727 0.6598767371701885 0.7786912329697779 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.859919552273217 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8600039765517344


ris (2 : 2): [ 1 0.8600039765517344 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3990 interne); stringhe deallocate: 0 (3910 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7530654511156385


ris (2 : 2): [ -1 0.7530654511156385 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4010 interne); stringhe deallocate: 0 (3930 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8988893907989053


ris (2 : 2): [ 1 0.8988893907989053 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4030 interne); stringhe deallocate: 0 (3950 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7530651133511119 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8600039765517344


ris (2 : 2): [ -1 0.8600039765517344 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4050 interne); stringhe deallocate: 0 (3970 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869798233362e-314 0 0.8601045696263565 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 255264608 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.03888541424717085


ris (2 : 2): [ 1 0.03888541424717085 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4070 interne); stringhe deallocate: 0 (3990 interne)


Stringhe allocate: 1 (4070 interne); stringhe deallocate: 0 (3995 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8600039765517344 0.2469345488843615 0.8988893907989053 0.1399960234482656 0.03888541424717085 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9530010343945339 0.5372908060565624 0.956383552044171 0.6598434842023353 0.7786678208424906 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8600039570778311 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8599199044164033


ris (2 : 2): [ 1 0.8599199044164033 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4105 interne); stringhe deallocate: 0 (4025 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7531313190721884


ris (2 : 2): [ -1 0.7531313190721884 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4125 interne); stringhe deallocate: 0 (4045 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.898906983656152


ris (2 : 2): [ 1 0.898906983656152 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4145 interne); stringhe deallocate: 0 (4065 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7531309170218998 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8599199044164033


ris (2 : 2): [ -1 0.8599199044164033 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4165 interne); stringhe deallocate: 0 (4085 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161448569131115e-314 0 0.8600878803258656 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 -1084965995 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.03898707923974865


ris (2 : 2): [ 1 0.03898707923974865 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4185 interne); stringhe deallocate: 0 (4105 interne)


Stringhe allocate: 1 (4185 interne); stringhe deallocate: 0 (4110 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8599199044164033 0.2468686809278116 0.898906983656152 0.1400800955835967 0.03898707923974865 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9529728099971582 0.5372503345291052 0.9563911411384169 0.6598767371702397 0.7786912329670019 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8599195522757679 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8599199044164033


ris (2 : 2): [ 1 0.8599199044164033 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4220 interne); stringhe deallocate: 0 (4140 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7531313190721884


ris (2 : 2): [ -1 0.7531313190721884 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4240 interne); stringhe deallocate: 0 (4160 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.898906983656152


ris (2 : 2): [ 1 0.898906983656152 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4260 interne); stringhe deallocate: 0 (4180 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7531309216470898 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8599199044164033


ris (2 : 2): [ -1 0.8599199044164033 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4280 interne); stringhe deallocate: 0 (4200 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870043289923e-314 0 0.860087880326164 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 -1084965995 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.03898707923974865


ris (2 : 2): [ 1 0.03898707923974865 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4300 interne); stringhe deallocate: 0 (4220 interne)


Stringhe allocate: 1 (4300 interne); stringhe deallocate: 0 (4225 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8599199044164033 0.2468686809278116 0.898906983656152 0.1400800955835967 0.03898707923974865 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9529728099971582 0.5372503345291052 0.9563911411384169 0.6598767371702397 0.7786912329670019 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8599195522757341 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8597097382773202


ris (2 : 2): [ 1 0.8597097382773202 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4335 interne); stringhe deallocate: 0 (4255 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7532959653555847


ris (2 : 2): [ -1 0.7532959653555847 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4355 interne); stringhe deallocate: 0 (4275 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8989509471648256


ris (2 : 2): [ 1 0.8989509471648256 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4375 interne); stringhe deallocate: 0 (4295 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7532959026786017 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8597097382773202


ris (2 : 2): [ -1 0.8597097382773202 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4395 interne); stringhe deallocate: 0 (4315 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870557118195e-314 0 0.8600459186561764 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 -12679780 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.03924120888750537


ris (2 : 2): [ 1 0.03924120888750537 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4415 interne); stringhe deallocate: 0 (4335 interne)


Stringhe allocate: 1 (4415 interne); stringhe deallocate: 0 (4340 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8597097382773202 0.2467040346444153 0.8989509471648256 0.1402902617226798 0.03924120888750537 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9529022537706391 0.5371491702160123 0.956410105835625 0.6599598639737875 0.7787497557171093 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8597092670864495 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8596047350791298


ris (2 : 2): [ 1 0.8596047350791298 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4450 interne); stringhe deallocate: 0 (4370 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7533781557402386


ris (2 : 2): [ -1 0.7533781557402386 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4470 interne); stringhe deallocate: 0 (4390 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8989728241575056


ris (2 : 2): [ 1 0.8989728241575056 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4490 interne); stringhe deallocate: 0 (4410 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7533779185267768 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8596047350791298


ris (2 : 2): [ -1 0.8596047350791298 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4510 interne); stringhe deallocate: 0 (4430 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869940524268e-314 0 0.8600249378212368 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 -904603146 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.03936808907837575


ris (2 : 2): [ 1 0.03936808907837575 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4530 interne); stringhe deallocate: 0 (4450 interne)


Stringhe allocate: 1 (4530 interne); stringhe deallocate: 0 (4455 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8596047350791298 0.2466218442597614 0.8989728241575056 0.1403952649208702 0.03936808907837575 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9528670024715046 0.5370986696299388 0.9564195429928155 0.6600013957841255 0.7787789745735844 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8596043675392568 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8591443903333277


ris (2 : 2): [ 1 0.8591443903333277 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4565 interne); stringhe deallocate: 0 (4485 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.753738440355383


ris (2 : 2): [ -1 0.753738440355383 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4585 interne); stringhe deallocate: 0 (4505 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8990686771097696


ris (2 : 2): [ 1 0.8990686771097696 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4605 interne); stringhe deallocate: 0 (4525 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7537384074184947 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8591443903333277


ris (2 : 2): [ -1 0.8591443903333277 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4625 interne); stringhe deallocate: 0 (4545 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161449723268464e-314 0 0.8599324314127141 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 1616953477 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.03992428677644189


ris (2 : 2): [ 1 0.03992428677644189 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4645 interne); stringhe deallocate: 0 (4565 interne)


Stringhe allocate: 1 (4645 interne); stringhe deallocate: 0 (4570 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8591443903333277 0.2462615596446171 0.8990686771097696 0.1408556096666723 0.03992428677644189 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9527124571755619 0.5368772984282502 0.9564608914263466 0.6601834754826702 0.778907059663937 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8591442150565296 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8590798078606752


ris (2 : 2): [ 1 0.8590798078606752 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4680 interne); stringhe deallocate: 0 (4600 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7537889618372203


ris (2 : 2): [ -1 0.7537889618372203 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4700 interne); stringhe deallocate: 0 (4620 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.899082095256086


ris (2 : 2): [ 1 0.899082095256086 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4720 interne); stringhe deallocate: 0 (4640 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7537889523002201 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8590798078606752


ris (2 : 2): [ -1 0.8590798078606752 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4740 interne); stringhe deallocate: 0 (4660 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870098625275e-314 0 0.8599195568090501 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 -269661108 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.04000228739541079


ris (2 : 2): [ 1 0.04000228739541079 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4760 interne); stringhe deallocate: 0 (4680 interne)


Stringhe allocate: 1 (4760 interne); stringhe deallocate: 0 (4685 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8590798078606752 0.2462110381627797 0.899082095256086 0.1409201921393248 0.04000228739541079 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9526907757782183 0.5368462563002343 0.9564666796604903 0.660209019723718 0.7789250221912235 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8590793652029802 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8594997141291858


ris (2 : 2): [ 1 0.8594997141291858 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4795 interne); stringhe deallocate: 0 (4715 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.753460375458366


ris (2 : 2): [ -1 0.753460375458366 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4815 interne); stringhe deallocate: 0 (4735 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8989947241771212


ris (2 : 2): [ 1 0.8989947241771212 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4835 interne); stringhe deallocate: 0 (4755 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.75345993928625 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8594997141291858


ris (2 : 2): [ -1 0.8594997141291858 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4855 interne); stringhe deallocate: 0 (4775 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869798233362e-314 0 0.8600039569865192 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 -1956420094 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.03949501004793543


ris (2 : 2): [ 1 0.03949501004793543 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4875 interne); stringhe deallocate: 0 (4795 interne)


Stringhe allocate: 1 (4875 interne); stringhe deallocate: 0 (4800 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8594997141291858 0.246539624541634 0.8989947241771212 0.1405002858708142 0.03949501004793543 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9528317452128147 0.5370481510203748 0.9564289900832181 0.6600429346157969 0.7788082028208608 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8594994587368401 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8590798078443412


ris (2 : 2): [ 1 0.8590798078443412 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4910 interne); stringhe deallocate: 0 (4830 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7537889608280185


ris (2 : 2): [ -1 0.7537889608280185 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4930 interne); stringhe deallocate: 0 (4850 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8990820937326723


ris (2 : 2): [ 1 0.8990820937326723 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4950 interne); stringhe deallocate: 0 (4870 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7537889523001837 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8590798078443412


ris (2 : 2): [ -1 0.8590798078443412 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4970 interne); stringhe deallocate: 0 (4890 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161448569131115e-314 0 0.8599195568089737 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 -269808231 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.0400022858883311


ris (2 : 2): [ 1 0.0400022858883311 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4990 interne); stringhe deallocate: 0 (4910 interne)


Stringhe allocate: 1 (4990 interne); stringhe deallocate: 0 (4915 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8590798078443412 0.2462110391719815 0.8990820937326723 0.1409201921556588 0.0400022858883311 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9526907757727348 0.5368462569203225 0.9564666790033298 0.6602090197301785 0.7789250218441627 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8590793698280752 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8590798078443412


ris (2 : 2): [ 1 0.8590798078443412 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5025 interne); stringhe deallocate: 0 (4945 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7537889608280185


ris (2 : 2): [ -1 0.7537889608280185 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5045 interne); stringhe deallocate: 0 (4965 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8990820937326723


ris (2 : 2): [ 1 0.8990820937326723 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5065 interne); stringhe deallocate: 0 (4985 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7537889521571479 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8590798078443412


ris (2 : 2): [ -1 0.8590798078443412 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5085 interne); stringhe deallocate: 0 (5005 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870043289923e-314 0 0.8599195568090199 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 -269808231 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.0400022858883311


ris (2 : 2): [ 1 0.0400022858883311 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5105 interne); stringhe deallocate: 0 (5025 interne)


Stringhe allocate: 1 (5105 interne); stringhe deallocate: 0 (5030 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8590798078443412 0.2462110391719815 0.8990820937326723 0.1409201921556588 0.0400022858883311 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9526907757727348 0.5368462569203225 0.9564666790033298 0.6602090197301785 0.7789250218441627 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.859079365203014 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8580303971220288


ris (2 : 2): [ 1 0.8580303971220288 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5140 interne); stringhe deallocate: 0 (5060 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7546098346407961


ris (2 : 2): [ -1 0.7546098346407961 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5160 interne); stringhe deallocate: 0 (5080 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8993000526465882


ris (2 : 2): [ 1 0.8993000526465882 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5180 interne); stringhe deallocate: 0 (5100 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7546095889065319 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8580303971220288


ris (2 : 2): [ -1 0.8580303971220288 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5200 interne); stringhe deallocate: 0 (5120 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870557118195e-314 0 0.8597092716225507 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 701734335 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.04126965552455941


ris (2 : 2): [ 1 0.04126965552455941 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5220 interne); stringhe deallocate: 0 (5140 interne)


Stringhe allocate: 1 (5220 interne); stringhe deallocate: 0 (5145 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8580303971220288 0.2453901653592039 0.8993000526465882 0.1419696028779712 0.04126965552455941 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9523384713484437 0.5363418839475923 0.9565607007256836 0.6606240921073713 0.7792168805752053 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8580303234549334 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8575076886495079


ris (2 : 2): [ 1 0.8575076886495079 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5255 interne); stringhe deallocate: 0 (5175 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7550169597101281


ris (2 : 2): [ -1 0.7550169597101281 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5275 interne); stringhe deallocate: 0 (5195 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8994064237438598


ris (2 : 2): [ 1 0.8994064237438598 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5295 interne); stringhe deallocate: 0 (5215 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7550168079825932 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8575076886495079


ris (2 : 2): [ -1 0.8575076886495079 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5315 interne); stringhe deallocate: 0 (5235 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869940524268e-314 0 0.8596043674476803 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 -153473386 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.04189873509435194


ris (2 : 2): [ 1 0.04189873509435194 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5335 interne); stringhe deallocate: 0 (5255 interne)


Stringhe allocate: 1 (5335 interne); stringhe deallocate: 0 (5260 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8575076886495079 0.244983040289872 0.8994064237438598 0.1424923113504921 0.04189873509435194 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9521629895246276 0.5360917323672938 0.9566065864093405 0.6608308384685957 0.7793617494119806 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8575072330898674 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8552171616975053


ris (2 : 2): [ 1 0.8552171616975053 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5370 interne); stringhe deallocate: 0 (5290 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7567999301753836


ris (2 : 2): [ -1 0.7567999301753836 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5390 interne); stringhe deallocate: 0 (5310 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.899871237685264


ris (2 : 2): [ 1 0.899871237685264 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5410 interne); stringhe deallocate: 0 (5330 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7567997067423047 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8552171616975053


ris (2 : 2): [ -1 0.8552171616975053 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5430 interne); stringhe deallocate: 0 (5350 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161449723268464e-314 0 0.8591442195900356 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 1636761556 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.04465407598775872


ris (2 : 2): [ 1 0.04465407598775872 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5450 interne); stringhe deallocate: 0 (5370 interne)


Stringhe allocate: 1 (5450 interne); stringhe deallocate: 0 (5375 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8552171616975053 0.2432000698246164 0.899871237685264 0.1447828383024947 0.04465407598775872 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9513940219869508 0.534996214274436 0.9568070948747189 0.6617368083112677 0.7799962685560031 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8552169888466299 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8548963681851097


ris (2 : 2): [ 1 0.8548963681851097 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5485 interne); stringhe deallocate: 0 (5405 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7570491153021994


ris (2 : 2): [ -1 0.7570491153021994 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5505 interne); stringhe deallocate: 0 (5425 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8999356976269074


ris (2 : 2): [ 1 0.8999356976269074 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5525 interne); stringhe deallocate: 0 (5445 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7570490879508185 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8548963681851097


ris (2 : 2): [ -1 0.8548963681851097 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5545 interne); stringhe deallocate: 0 (5465 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870098625275e-314 0 0.8590793697366888 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 -1596301307 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.04503932944179767


ris (2 : 2): [ 1 0.04503932944179767 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5565 interne); stringhe deallocate: 0 (5485 interne)


Stringhe allocate: 1 (5565 interne); stringhe deallocate: 0 (5490 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8548963681851097 0.2429508846978006 0.8999356976269074 0.1451036318148903 0.04503932944179767 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9512863263332874 0.5348431064018058 0.9568349011920989 0.6618636914495347 0.7800849874119797 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.854896072814098 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8569845361678462


ris (2 : 2): [ 1 0.8569845361678462 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5600 interne); stringhe deallocate: 0 (5520 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.755424799775283


ris (2 : 2): [ -1 0.755424799775283 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5620 interne); stringhe deallocate: 0 (5540 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8995133429890272


ris (2 : 2): [ 1 0.8995133429890272 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5640 interne); stringhe deallocate: 0 (5560 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7554245036097846 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8569845361678462


ris (2 : 2): [ -1 0.8569845361678462 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5660 interne); stringhe deallocate: 0 (5580 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869798233362e-314 0 0.8594994632726731 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 -712992613 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.04252880682118099


ris (2 : 2): [ 1 0.04252880682118099 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5680 interne); stringhe deallocate: 0 (5600 interne)


Stringhe allocate: 1 (5680 interne); stringhe deallocate: 0 (5605 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8569845361678462 0.244575200224717 0.8995133429890272 0.1430154638321538 0.04252880682118099 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9519873586396467 0.5358411414690842 0.9566527085495309 0.6610377604483131 0.7795068467296072 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8569841427298357 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8548963660547498


ris (2 : 2): [ 1 0.8548963660547498 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5715 interne); stringhe deallocate: 0 (5635 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.757048989088937


ris (2 : 2): [ -1 0.757048989088937 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5735 interne); stringhe deallocate: 0 (5655 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8999355069351972


ris (2 : 2): [ 1 0.8999355069351972 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5755 interne); stringhe deallocate: 0 (5675 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7570486109707408 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8548963660547498


ris (2 : 2): [ -1 0.8548963660547498 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5775 interne); stringhe deallocate: 0 (5695 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161448569131115e-314 0 0.8590793697367634 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 -1615489883 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.04503914088044736


ris (2 : 2): [ 1 0.04503914088044736 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5795 interne); stringhe deallocate: 0 (5715 interne)


Stringhe allocate: 1 (5795 interne); stringhe deallocate: 0 (5720 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8548963660547498 0.242951010911063 0.8999355069351972 0.1451036339452502 0.04503914088044736 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9512863256180906 0.5348431839515551 0.9568348189327285 0.6618636922921538 0.7800849439887551 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8548960728115471 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8548963660547498


ris (2 : 2): [ 1 0.8548963660547498 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5830 interne); stringhe deallocate: 0 (5750 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.757048989088937


ris (2 : 2): [ -1 0.757048989088937 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5850 interne); stringhe deallocate: 0 (5770 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8999355069351972


ris (2 : 2): [ 1 0.8999355069351972 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5870 interne); stringhe deallocate: 0 (5790 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7570486111136967 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8548963660547498


ris (2 : 2): [ -1 0.8548963660547498 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5890 interne); stringhe deallocate: 0 (5810 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870043289923e-314 0 0.8590793697362198 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 -1615489883 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.04503914088044736


ris (2 : 2): [ 1 0.04503914088044736 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5910 interne); stringhe deallocate: 0 (5830 interne)


Stringhe allocate: 1 (5910 interne); stringhe deallocate: 0 (5835 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8548963660547498 0.242951010911063 0.8999355069351972 0.1451036339452502 0.04503914088044736 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9512863256180906 0.5348431839515551 0.9568348189327285 0.6618636922921538 0.7800849439887551 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8548960774391592 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8496848162324825


ris (2 : 2): [ 1 0.8496848162324825 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5945 interne); stringhe deallocate: 0 (5865 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7610947953413282


ris (2 : 2): [ -1 0.7610947953413282 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5965 interne); stringhe deallocate: 0 (5885 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9009794020882669


ris (2 : 2): [ 1 0.9009794020882669 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5985 interne); stringhe deallocate: 0 (5905 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7610945790262402 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8496848162324825


ris (2 : 2): [ -1 0.8496848162324825 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6005 interne); stringhe deallocate: 0 (5925 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870557118195e-314 0 0.8580303279882191 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 909380225 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.05129458585578439


ris (2 : 2): [ 1 0.05129458585578439 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6025 interne); stringhe deallocate: 0 (5945 interne)


Stringhe allocate: 1 (6025 interne); stringhe deallocate: 0 (5950 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8496848162324825 0.2389052046586718 0.9009794020882669 0.1503151837675175 0.05129458585578439 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9495367227021304 0.532357302084153 0.9572851277477477 0.6639250113997193 0.7815254915452222 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.849684719512096 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8471289723157353


ris (2 : 2): [ 1 0.8471289723157353 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6060 interne); stringhe deallocate: 0 (5980 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7630357856422901


ris (2 : 2): [ -1 0.7630357856422901 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6080 interne); stringhe deallocate: 0 (6000 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9014374629719444


ris (2 : 2): [ 1 0.9014374629719444 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6100 interne); stringhe deallocate: 0 (6020 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7630357784720587 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8471289723157353


ris (2 : 2): [ -1 0.8471289723157353 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6120 interne); stringhe deallocate: 0 (6040 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869940524268e-314 0 0.8575072376259687 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 938664625 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.05430849065620913


ris (2 : 2): [ 1 0.05430849065620913 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6140 interne); stringhe deallocate: 0 (6060 interne)


Stringhe allocate: 1 (6140 interne); stringhe deallocate: 0 (6065 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8471289723157353 0.2369642143577099 0.9014374629719444 0.1528710276842648 0.05430849065620913 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9486786838994745 0.5311646911945158 0.9574827231222725 0.6649359217970517 0.7822195545915434 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8471288723440935 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8359563473352135


ris (2 : 2): [ 1 0.8359563473352135 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6175 interne); stringhe deallocate: 0 (6095 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7715056480391328


ris (2 : 2): [ -1 0.7715056480391328 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6195 interne); stringhe deallocate: 0 (6115 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9034245669619121


ris (2 : 2): [ 1 0.9034245669619121 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6215 interne); stringhe deallocate: 0 (6135 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7715053599330268 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8359563473352135


ris (2 : 2): [ -1 0.8359563473352135 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6235 interne); stringhe deallocate: 0 (6155 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161449723268464e-314 0 0.8552169887550534 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 -2036988151 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.06746821962669858


ris (2 : 2): [ 1 0.06746821962669858 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6255 interne); stringhe deallocate: 0 (6175 interne)


Stringhe allocate: 1 (6255 interne); stringhe deallocate: 0 (6180 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8359563473352135 0.2284943519608672 0.9034245669619121 0.1640436526647865 0.06746821962669858 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9449278500954246 0.5259605177768547 0.9583399073331683 0.6693550190213767 0.7852500688854027 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.835956100887719 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8344055072759073


ris (2 : 2): [ 1 0.8344055072759073 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6290 interne); stringhe deallocate: 0 (6210 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7726759008119474


ris (2 : 2): [ -1 0.7726759008119474 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6310 interne); stringhe deallocate: 0 (6230 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9036960084420891


ris (2 : 2): [ 1 0.9036960084420891 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6330 interne); stringhe deallocate: 0 (6250 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7726755183193736 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8344055072759073


ris (2 : 2): [ -1 0.8344055072759073 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6350 interne); stringhe deallocate: 0 (6270 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870098625275e-314 0 0.854896077347604 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 766199332 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.06929050116618174


ris (2 : 2): [ 1 0.06929050116618174 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6370 interne); stringhe deallocate: 0 (6290 interne)


Stringhe allocate: 1 (6370 interne); stringhe deallocate: 0 (6295 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8344055072759073 0.2273240991880526 0.9036960084420891 0.1655944927240927 0.06929050116618174 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9444072076027908 0.5252414744102829 0.9584570000229141 0.6699684212445248 0.7856697166049891 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8344054310768545 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.844562042658377


ris (2 : 2): [ 1 0.844562042658377 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6405 interne); stringhe deallocate: 0 (6325 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.76499238414309


ris (2 : 2): [ -1 0.76499238414309 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6425 interne); stringhe deallocate: 0 (6345 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9019059086737888


ris (2 : 2): [ 1 0.9019059086737888 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6445 interne); stringhe deallocate: 0 (6365 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7649922413322026 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.844562042658377


ris (2 : 2): [ -1 0.844562042658377 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6465 interne); stringhe deallocate: 0 (6385 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869798233362e-314 0 0.8569841472635442 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 -99277737 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.05734386601541186


ris (2 : 2): [ 1 0.05734386601541186 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6485 interne); stringhe deallocate: 0 (6405 interne)


Stringhe allocate: 1 (6485 interne); stringhe deallocate: 0 (6410 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.844562042658377 0.23500761585691 0.9019059086737888 0.155437957341623 0.05734386601541186 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.947816923431525 0.5299624900925599 0.9576847982332432 0.6659512169263204 0.7829185620280886 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8445615810843616 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8344051897778716


ris (2 : 2): [ 1 0.8344051897778716 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6520 interne); stringhe deallocate: 0 (6440 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7726600826780478


ris (2 : 2): [ -1 0.7726600826780478 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6540 interne); stringhe deallocate: 0 (6460 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9036720159798055


ris (2 : 2): [ 1 0.9036720159798055 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6560 interne); stringhe deallocate: 0 (6480 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7726597874612988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8344051897778716


ris (2 : 2): [ -1 0.8344051897778716 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6580 interne); stringhe deallocate: 0 (6500 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161448569131115e-314 0 0.8548960773473802 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 -2093568739 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.06926682620193392


ris (2 : 2): [ 1 0.06926682620193392 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6600 interne); stringhe deallocate: 0 (6520 interne)


Stringhe allocate: 1 (6600 interne); stringhe deallocate: 0 (6525 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8344051897778716 0.2273399173219523 0.9036720159798055 0.1655948102221284 0.06926682620193392 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9444071010134829 0.5252511936132759 0.9584466503079753 0.6699685468242065 0.785664264568878 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8344049496146013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8344051897778716


ris (2 : 2): [ 1 0.8344051897778716 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6635 interne); stringhe deallocate: 0 (6555 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7726600826780478


ris (2 : 2): [ -1 0.7726600826780478 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6655 interne); stringhe deallocate: 0 (6575 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9036720159798055


ris (2 : 2): [ 1 0.9036720159798055 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6675 interne); stringhe deallocate: 0 (6595 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7726597828360724 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8344051897778716


ris (2 : 2): [ -1 0.8344051897778716 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6695 interne); stringhe deallocate: 0 (6615 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870043289923e-314 0 0.8548960773478473 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 -2093568739 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.06926682620193392


ris (2 : 2): [ 1 0.06926682620193392 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6715 interne); stringhe deallocate: 0 (6635 interne)


Stringhe allocate: 1 (6715 interne); stringhe deallocate: 0 (6640 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8344051897778716 0.2273399173219523 0.9036720159798055 0.1655948102221284 0.06926682620193392 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9444071010134829 0.5252511936132759 0.9584466503079753 0.6699685468242065 0.785664264568878 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8344049496120842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8342541514440424


ris (2 : 2): [ 1 0.8342541514440424 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6750 interne); stringhe deallocate: 0 (6670 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7727729640521979


ris (2 : 2): [ -1 0.7727729640521979 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6770 interne); stringhe deallocate: 0 (6690 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9036968613638057


ris (2 : 2): [ 1 0.9036968613638057 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6790 interne); stringhe deallocate: 0 (6710 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7727727930995307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8342541514440424


ris (2 : 2): [ -1 0.8342541514440424 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6810 interne); stringhe deallocate: 0 (6730 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870557118195e-314 0 0.8496847240453018 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 -1021303811 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.06944270991976331


ris (2 : 2): [ 1 0.06944270991976331 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6830 interne); stringhe deallocate: 0 (6750 interne)


Stringhe allocate: 1 (6830 interne); stringhe deallocate: 0 (6755 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8342541514440424 0.2272270359478021 0.9036968613638057 0.1657458485559576 0.06944270991976331 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9443563949628259 0.5251818354325668 0.9584573679508295 0.6700282868658668 0.785704768299778 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8342537968605459 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8341786771704129


ris (2 : 2): [ 1 0.8341786771704129 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6865 interne); stringhe deallocate: 0 (6785 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7728293349068284


ris (2 : 2): [ -1 0.7728293349068284 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6885 interne); stringhe deallocate: 0 (6805 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9037092322149307


ris (2 : 2): [ 1 0.9037092322149307 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6905 interne); stringhe deallocate: 0 (6825 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7728290598843151 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8341786771704129


ris (2 : 2): [ -1 0.8341786771704129 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6925 interne); stringhe deallocate: 0 (6845 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869940524268e-314 0 0.8471288768773793 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 2066675066 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.06953055504451777


ris (2 : 2): [ 1 0.06953055504451777 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6945 interne); stringhe deallocate: 0 (6865 interne)


Stringhe allocate: 1 (6945 interne); stringhe deallocate: 0 (6870 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8341786771704129 0.2271706650931716 0.9037092322149307 0.1658213228295871 0.06953055504451777 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.944331057008911 0.5251471992496569 0.9584627044094713 0.6700581391301006 0.7857249978886101 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8341784519644886 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8338477817792717


ris (2 : 2): [ 1 0.8338477817792717 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6980 interne); stringhe deallocate: 0 (6900 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7730764527004996


ris (2 : 2): [ -1 0.7730764527004996 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7000 interne); stringhe deallocate: 0 (6920 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9037634392116325


ris (2 : 2): [ 1 0.9037634392116325 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7020 interne); stringhe deallocate: 0 (6940 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7730760616752201 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8338477817792717


ris (2 : 2): [ -1 0.8338477817792717 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7040 interne); stringhe deallocate: 0 (6960 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161449723268464e-314 0 0.8359561054238203 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 -1961709291 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.06991565743236083


ris (2 : 2): [ 1 0.06991565743236083 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7060 interne); stringhe deallocate: 0 (6980 interne)


Stringhe allocate: 1 (7060 interne); stringhe deallocate: 0 (6985 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8338477817792717 0.2269235472995004 0.9037634392116325 0.1661522182207283 0.06991565743236083 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.94421996998855 0.5249953616172847 0.958486087877034 0.6701890178544008 0.7858136819560081 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8338475269766619 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8338013556607863


ris (2 : 2): [ 1 0.8338013556607863 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7095 interne); stringhe deallocate: 0 (7015 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7731111122721111


ris (2 : 2): [ -1 0.7731111122721111 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7115 interne); stringhe deallocate: 0 (7035 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9037710298372423


ris (2 : 2): [ 1 0.9037710298372423 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7135 interne); stringhe deallocate: 0 (7055 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.773110875412959 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8338013556607863


ris (2 : 2): [ -1 0.8338013556607863 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7155 interne); stringhe deallocate: 0 (7075 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870098625275e-314 0 0.834405430985278 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 775785895 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.06996967417645605


ris (2 : 2): [ 1 0.06996967417645605 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7175 interne); stringhe deallocate: 0 (7095 interne)


Stringhe allocate: 1 (7175 interne); stringhe deallocate: 0 (7100 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8338013556607863 0.226888887727889 0.9037710298372423 0.1661986443392137 0.06996967417645605 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9442043839776608 0.5249740655899354 0.9584893622725645 0.6702073807307787 0.7858261213090871 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8338012737697991 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8341031929228142


ris (2 : 2): [ 1 0.8341031929228142 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7210 interne); stringhe deallocate: 0 (7130 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7728857212114276


ris (2 : 2): [ -1 0.7728857212114276 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7230 interne); stringhe deallocate: 0 (7150 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9037216144895621


ris (2 : 2): [ 1 0.9037216144895621 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7250 interne); stringhe deallocate: 0 (7170 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7728853268119025 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8341031929228142


ris (2 : 2): [ -1 0.8341031929228142 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7270 interne); stringhe deallocate: 0 (7190 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869798233362e-314 0 0.8445615856178677 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 769849118 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.06961842156674791


ris (2 : 2): [ 1 0.06961842156674791 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7290 interne); stringhe deallocate: 0 (7210 interne)


Stringhe allocate: 1 (7290 interne); stringhe deallocate: 0 (7215 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8341031929228142 0.2271142787885724 0.9037216144895621 0.1658968070771858 0.06961842156674791 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9443057157065706 0.5251125535737573 0.9584680457959125 0.6700879953393286 0.7857452324050023 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8341031163185537 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8338013556744175


ris (2 : 2): [ 1 0.8338013556744175 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7325 interne); stringhe deallocate: 0 (7245 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7731111118617755


ris (2 : 2): [ -1 0.7731111118617755 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7345 interne); stringhe deallocate: 0 (7265 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9037710292562993


ris (2 : 2): [ 1 0.9037710292562993 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7365 interne); stringhe deallocate: 0 (7285 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7731108706446968 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8338013556744175


ris (2 : 2): [ -1 0.8338013556744175 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7385 interne); stringhe deallocate: 0 (7305 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161448569131115e-314 0 0.8344049541483098 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 775908674 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.06996967358188178


ris (2 : 2): [ 1 0.06996967358188178 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7405 interne); stringhe deallocate: 0 (7325 interne)


Stringhe allocate: 1 (7405 interne); stringhe deallocate: 0 (7330 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8338013556744175 0.2268888881382245 0.9037710292562993 0.1661986443255825 0.06996967358188178 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9442043839822372 0.5249740658420596 0.958489362021961 0.6702073807253872 0.7858261211721643 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8338012737723499 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8338013556744175


ris (2 : 2): [ 1 0.8338013556744175 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7440 interne); stringhe deallocate: 0 (7360 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7731111118617755


ris (2 : 2): [ -1 0.7731111118617755 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7460 interne); stringhe deallocate: 0 (7380 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9037710292562993


ris (2 : 2): [ 1 0.9037710292562993 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7480 interne); stringhe deallocate: 0 (7400 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7731108706448131 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8338013556744175


ris (2 : 2): [ -1 0.8338013556744175 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7500 interne); stringhe deallocate: 0 (7420 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870043289923e-314 0 0.8344049541479173 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 775908674 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.06996967358188178


ris (2 : 2): [ 1 0.06996967358188178 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7520 interne); stringhe deallocate: 0 (7440 interne)


Stringhe allocate: 1 (7520 interne); stringhe deallocate: 0 (7445 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8338013556744175 0.2268888881382245 0.9037710292562993 0.1661986443255825 0.06996967358188178 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9442043839822372 0.5249740658420596 0.958489362021961 0.6702073807253872 0.7858261211721643 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8338012737723162 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8330469620732358


ris (2 : 2): [ 1 0.8330469620732358 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7555 interne); stringhe deallocate: 0 (7475 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7736742782920124


ris (2 : 2): [ -1 0.7736742782920124 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7575 interne); stringhe deallocate: 0 (7495 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9038943360106305


ris (2 : 2): [ 1 0.9038943360106305 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7595 interne); stringhe deallocate: 0 (7515 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7736740154716069 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8330469620732358


ris (2 : 2): [ -1 0.8330469620732358 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7615 interne); stringhe deallocate: 0 (7535 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870557118195e-314 0 0.8342537967692341 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 440688601 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.07084737393739471


ris (2 : 2): [ 1 0.07084737393739471 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7635 interne); stringhe deallocate: 0 (7555 interne)


Stringhe allocate: 1 (7635 interne); stringhe deallocate: 0 (7560 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8330469620732358 0.2263257217079876 0.9038943360106305 0.1669530379267642 0.07084737393739471 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9439511216534823 0.5246280371076317 0.9585425533010503 0.6705057652746621 0.7860282441398236 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8330469173855217 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8326708875061202


ris (2 : 2): [ 1 0.8326708875061202 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7670 interne); stringhe deallocate: 0 (7590 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7739541185788436


ris (2 : 2): [ -1 0.7739541185788436 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7690 interne); stringhe deallocate: 0 (7610 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9039546974420574


ris (2 : 2): [ 1 0.9039546974420574 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7710 interne); stringhe deallocate: 0 (7630 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7739539235086621 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8326708875061202


ris (2 : 2): [ -1 0.8326708875061202 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7730 interne); stringhe deallocate: 0 (7650 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869940524268e-314 0 0.8341784564976944 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 1791324494 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.07128380993593719


ris (2 : 2): [ 1 0.07128380993593719 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7750 interne); stringhe deallocate: 0 (7670 interne)


Stringhe allocate: 1 (7750 interne); stringhe deallocate: 0 (7675 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8326708875061202 0.2260458814211565 0.9039546974420574 0.1673291124938798 0.07128380993593719 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.943824867241324 0.5244560936552257 0.9585685916293045 0.6706545136734115 0.7861287496696034 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8326706974953115 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8310227005177228


ris (2 : 2): [ 1 0.8310227005177228 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7785 interne); stringhe deallocate: 0 (7705 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7751799827476795


ris (2 : 2): [ -1 0.7751799827476795 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7805 interne); stringhe deallocate: 0 (7725 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.904218555211797


ris (2 : 2): [ 1 0.904218555211797 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7825 interne); stringhe deallocate: 0 (7745 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7751798672171759 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8310227005177228


ris (2 : 2): [ -1 0.8310227005177228 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7845 interne); stringhe deallocate: 0 (7765 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161449723268464e-314 0 0.8338475315099476 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 -350314097 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.07319585469407419


ris (2 : 2): [ 1 0.07319585469407419 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7865 interne); stringhe deallocate: 0 (7785 interne)


Stringhe allocate: 1 (7865 interne); stringhe deallocate: 0 (7790 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8310227005177228 0.2248200172523205 0.904218555211797 0.1689772994822772 0.07319585469407419 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9432715437849067 0.5237028807431131 0.9586824129065426 0.6713064194304107 0.7865690686900808 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8310222668143421 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8307917586809315


ris (2 : 2): [ 1 0.8307917586809315 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7900 interne); stringhe deallocate: 0 (7820 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7753514688493137


ris (2 : 2): [ -1 0.7753514688493137 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7920 interne); stringhe deallocate: 0 (7840 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.904255189901144


ris (2 : 2): [ 1 0.904255189901144 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7940 interne); stringhe deallocate: 0 (7860 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.775351051613935 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8307917586809315


ris (2 : 2): [ -1 0.8307917586809315 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7960 interne); stringhe deallocate: 0 (7880 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870098625275e-314 0 0.8338012783059003 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 -1725283068 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.07346343122021248


ris (2 : 2): [ 1 0.07346343122021248 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7980 interne); stringhe deallocate: 0 (7900 interne)


Stringhe allocate: 1 (7980 interne); stringhe deallocate: 0 (7905 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8307917586809315 0.2246485311506863 0.904255189901144 0.1692082413190685 0.07346343122021248 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9431940128152629 0.5235975138115374 0.9586982161445401 0.6713977636249687 0.7866306880812538 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.830791477629738 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8322945638613924


ris (2 : 2): [ 1 0.8322945638613924 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8015 interne); stringhe deallocate: 0 (7935 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7742343376538969


ris (2 : 2): [ -1 0.7742343376538969 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8035 interne); stringhe deallocate: 0 (7955 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9040153339418301


ris (2 : 2): [ 1 0.9040153339418301 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8055 interne); stringhe deallocate: 0 (7975 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7742342989895397 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8322945638613924


ris (2 : 2): [ -1 0.8322945638613924 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8075 interne); stringhe deallocate: 0 (7995 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869798233362e-314 0 0.8341031162269772 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 898468705 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.07172077008043765


ris (2 : 2): [ 1 0.07172077008043765 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8095 interne); stringhe deallocate: 0 (8015 interne)


Stringhe allocate: 1 (8095 interne); stringhe deallocate: 0 (8020 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8322945638613924 0.2257656623461031 0.9040153339418301 0.1677054361386076 0.07172077008043765 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9436985292097182 0.5242839174623684 0.9585947486147827 0.6708033605895806 0.7862293759033751 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8322944683498772 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8307917603598202


ris (2 : 2): [ 1 0.8307917603598202 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8130 interne); stringhe deallocate: 0 (8050 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7753514175360612


ris (2 : 2): [ -1 0.7753514175360612 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8150 interne); stringhe deallocate: 0 (8070 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9042551172062976


ris (2 : 2): [ 1 0.9042551172062976 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8170 interne); stringhe deallocate: 0 (8090 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7753510517570073 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8307917603598202


ris (2 : 2): [ -1 0.8307917603598202 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8190 interne); stringhe deallocate: 0 (8110 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161448569131115e-314 0 0.8338012783058559 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 -1710160983 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.07346335684647742


ris (2 : 2): [ 1 0.07346335684647742 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8210 interne); stringhe deallocate: 0 (8130 interne)


Stringhe allocate: 1 (8210 interne); stringhe deallocate: 0 (8135 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8307917603598202 0.2246485824639388 0.9042551172062976 0.1692082396401798 0.07346335684647742 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9431940133788934 0.5235975453401565 0.9586981847859022 0.6713977629609196 0.7866306709539507 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.830791482254833 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8307917603598202


ris (2 : 2): [ 1 0.8307917603598202 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8245 interne); stringhe deallocate: 0 (8165 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7753514175360612


ris (2 : 2): [ -1 0.7753514175360612 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8265 interne); stringhe deallocate: 0 (8185 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9042551172062976


ris (2 : 2): [ 1 0.9042551172062976 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8285 interne); stringhe deallocate: 0 (8205 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7753510563821973 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8307917603598202


ris (2 : 2): [ -1 0.8307917603598202 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8305 interne); stringhe deallocate: 0 (8225 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870043289923e-314 0 0.8338012783060247 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 -1710160983 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.07346335684647742


ris (2 : 2): [ 1 0.07346335684647742 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8325 interne); stringhe deallocate: 0 (8245 interne)


Stringhe allocate: 1 (8325 interne); stringhe deallocate: 0 (8250 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8307917603598202 0.2246485824639388 0.9042551172062976 0.1692082396401798 0.07346335684647742 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9431940133788934 0.5235975453401565 0.9586981847859022 0.6713977629609196 0.7866306709539507 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8307914776297718 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8270397384731425


ris (2 : 2): [ 1 0.8270397384731425 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8360 interne); stringhe deallocate: 0 (8280 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7781363921573652


ris (2 : 2): [ -1 0.7781363921573652 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8380 interne); stringhe deallocate: 0 (8300 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9048488632529501


ris (2 : 2): [ 1 0.9048488632529501 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8400 interne); stringhe deallocate: 0 (8320 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7781362575980353 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8270397384731425


ris (2 : 2): [ -1 0.8270397384731425 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8420 interne); stringhe deallocate: 0 (8340 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870557118195e-314 0 0.8330469219213548 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 178749786 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.07780912477980762


ris (2 : 2): [ 1 0.07780912477980762 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8440 interne); stringhe deallocate: 0 (8360 interne)


Stringhe allocate: 1 (8440 interne); stringhe deallocate: 0 (8365 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8270397384731425 0.2218636078426348 0.9048488632529501 0.1729602615268575 0.07780912477980762 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9419343979751167 0.521886361590766 0.9589543111582722 0.6728817964386323 0.7876314447441469 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8270397228689959 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8251917698157807


ris (2 : 2): [ 1 0.8251917698157807 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8475 interne); stringhe deallocate: 0 (8395 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7794856655865424


ris (2 : 2): [ -1 0.7794856655865424 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8495 interne); stringhe deallocate: 0 (8415 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9051139434056466


ris (2 : 2): [ 1 0.9051139434056466 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8515 interne); stringhe deallocate: 0 (8435 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7794852297755561 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8251917698157807


ris (2 : 2): [ -1 0.8251917698157807 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8535 interne); stringhe deallocate: 0 (8455 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869940524268e-314 0 0.8326706974039997 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 -1844891588 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.07992217358986586


ris (2 : 2): [ 1 0.07992217358986586 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8555 interne); stringhe deallocate: 0 (8475 interne)


Stringhe allocate: 1 (8555 interne); stringhe deallocate: 0 (8480 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8251917698157807 0.2205143344134576 0.9051139434056466 0.1748082301842193 0.07992217358986586 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9413140045294457 0.5210573218042521 0.9590686597392526 0.673612721640062 0.7881180523814976 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8251915020412834 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8171078123338724


ris (2 : 2): [ 1 0.8171078123338724 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8590 interne); stringhe deallocate: 0 (8510 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7853785125831986


ris (2 : 2): [ -1 0.7853785125831986 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8610 interne); stringhe deallocate: 0 (8530 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9062631183388934


ris (2 : 2): [ 1 0.9062631183388934 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8630 interne); stringhe deallocate: 0 (8550 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7853784602139049 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8171078123338724


ris (2 : 2): [ -1 0.8171078123338724 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8650 interne); stringhe deallocate: 0 (8570 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161449723268464e-314 0 0.8310222713475479 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 1214838394 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.08915530600502097


ris (2 : 2): [ 1 0.08915530600502097 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8670 interne); stringhe deallocate: 0 (8590 interne)


Stringhe allocate: 1 (8670 interne); stringhe deallocate: 0 (8595 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8171078123338724 0.2146214874168014 0.9062631183388934 0.1828921876661276 0.08915530600502097 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9386000871602951 0.5174365548711584 0.9595643834725398 0.6768101612867111 0.7902443225975462 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8171076863258779 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8159826875487732


ris (2 : 2): [ 1 0.8159826875487732 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8705 interne); stringhe deallocate: 0 (8625 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7861946679764366


ris (2 : 2): [ -1 0.7861946679764366 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8725 interne); stringhe deallocate: 0 (8645 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9064190183975412


ris (2 : 2): [ 1 0.9064190183975412 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8745 interne); stringhe deallocate: 0 (8665 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7861943287345463 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8159826875487732


ris (2 : 2): [ -1 0.8159826875487732 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8765 interne); stringhe deallocate: 0 (8685 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870098625275e-314 0 0.8307914821630238 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 -1180436178 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.09043633084876801


ris (2 : 2): [ 1 0.09043633084876801 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8785 interne); stringhe deallocate: 0 (8705 interne)


Stringhe allocate: 1 (8785 interne); stringhe deallocate: 0 (8710 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8159826875487732 0.2138053320235634 0.9064190183975412 0.1840173124512268 0.09043633084876801 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9382223642809286 0.5169350810569259 0.9596316346427982 0.6772551807717041 0.7905393259451432 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8159823460074573 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8233376196856387


ris (2 : 2): [ 1 0.8233376196856387 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8820 interne); stringhe deallocate: 0 (8740 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7808434850980217


ris (2 : 2): [ -1 0.7808434850980217 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8840 interne); stringhe deallocate: 0 (8760 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9053846202452898


ris (2 : 2): [ 1 0.9053846202452898 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8860 interne); stringhe deallocate: 0 (8780 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7808432667703809 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8233376196856387


ris (2 : 2): [ -1 0.8233376196856387 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8880 interne); stringhe deallocate: 0 (8800 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869798233362e-314 0 0.8322944728859785 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 583252163 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.08204700055965108


ris (2 : 2): [ 1 0.08204700055965108 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8900 interne); stringhe deallocate: 0 (8820 interne)


Stringhe allocate: 1 (8900 interne); stringhe deallocate: 0 (8825 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8233376196856387 0.2191565149019783 0.9053846202452898 0.1766623803143613 0.08204700055965108 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9406915358617829 0.5202230310122015 0.9591854225832551 0.6743460917932604 0.7886073723757279 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8233375591727068 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8159828827191968


ris (2 : 2): [ 1 0.8159828827191968 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8935 interne); stringhe deallocate: 0 (8855 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7861882401418773


ris (2 : 2): [ -1 0.7861882401418773 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8955 interne); stringhe deallocate: 0 (8875 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9063043636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9064098855483863


ris (2 : 2): [ 1 0.9064098855483863 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8975 interne); stringhe deallocate: 0 (8895 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7861881298514533 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8159828827191968


ris (2 : 2): [ -1 0.8159828827191968 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8995 interne); stringhe deallocate: 0 (8915 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161448569131115e-314 0 0.8307914821632565 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 577502716 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.09042700282918947


ris (2 : 2): [ 1 0.09042700282918947 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9015 interne); stringhe deallocate: 0 (8935 interne)


Stringhe allocate: 1 (9015 interne); stringhe deallocate: 0 (8940 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8159828827191968 0.2138117598581227 0.9064098855483863 0.1840171172808032 0.09042700282918947 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.938222429802847 0.5169390305385324 0.9596276949727379 0.6772551035761409 0.7905371778236485 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8159828228420647 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8159828827191968


ris (2 : 2): [ 1 0.8159828827191968 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9050 interne); stringhe deallocate: 0 (8970 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7861882401418773


ris (2 : 2): [ -1 0.7861882401418773 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9070 interne); stringhe deallocate: 0 (8990 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9063043683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9064098855483863


ris (2 : 2): [ 1 0.9064098855483863 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9090 interne); stringhe deallocate: 0 (9010 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7861881297084175 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8159828827191968


ris (2 : 2): [ -1 0.8159828827191968 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9110 interne); stringhe deallocate: 0 (9030 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870043289923e-314 0 0.8307914821632778 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 577502716 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.09042700282918947


ris (2 : 2): [ 1 0.09042700282918947 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9130 interne); stringhe deallocate: 0 (9050 interne)


Stringhe allocate: 1 (9130 interne); stringhe deallocate: 0 (9055 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8159828827191968 0.2138117598581227 0.9064098855483863 0.1840171172808032 0.09042700282918947 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.938222429802847 0.5169390305385324 0.9596276949727379 0.6772551035761409 0.7905371778236485 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8159828274696768 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.814132960412464


ris (2 : 2): [ 1 0.814132960412464 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9165 interne); stringhe deallocate: 0 (9085 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7875225668079184


ris (2 : 2): [ -1 0.7875225668079184 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9185 interne); stringhe deallocate: 0 (9105 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9066555723232012


ris (2 : 2): [ 1 0.9066555723232012 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9205 interne); stringhe deallocate: 0 (9125 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7875223200771861 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.814132960412464


ris (2 : 2): [ -1 0.814132960412464 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9225 interne); stringhe deallocate: 0 (9145 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870557118195e-314 0 0.8270397274027044 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 -1863178633 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.09252261191073719


ris (2 : 2): [ 1 0.09252261191073719 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9245 interne); stringhe deallocate: 0 (9165 interne)


Stringhe allocate: 1 (9245 interne); stringhe deallocate: 0 (9170 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.814132960412464 0.2124774331920816 0.9066555723232012 0.185867039587536 0.09252261191073719 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.937601380484978 0.5161191745549835 0.9597336777623959 0.6779868015025595 0.7910197693185199 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8141326946707874 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8132151678916798


ris (2 : 2): [ 1 0.8132151678916798 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9280 interne); stringhe deallocate: 0 (9200 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7881790988316455


ris (2 : 2): [ -1 0.7881790988316455 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9300 interne); stringhe deallocate: 0 (9220 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9063043636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9067708852285222


ris (2 : 2): [ 1 0.9067708852285222 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9320 interne); stringhe deallocate: 0 (9240 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7881789249869877 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8132151678916798


ris (2 : 2): [ -1 0.8132151678916798 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9340 interne); stringhe deallocate: 0 (9260 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869940524268e-314 0 0.8251915065771165 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 -791243047 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.09355571733684243


ris (2 : 2): [ 1 0.09355571733684243 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9360 interne); stringhe deallocate: 0 (9280 interne)


Stringhe allocate: 1 (9360 interne); stringhe deallocate: 0 (9285 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8132151678916798 0.2118209011683545 0.9067708852285222 0.1867848321083202 0.09355571733684243 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9372932624538024 0.515715778803596 0.9597834207060227 0.6783498150636675 0.7912576800511723 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8132147831412127 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8091957840360466


ris (2 : 2): [ 1 0.8091957840360466 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9395 interne); stringhe deallocate: 0 (9315 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7910513223177366


ris (2 : 2): [ -1 0.7910513223177366 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9415 interne); stringhe deallocate: 0 (9335 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9063043636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9072724276656742


ris (2 : 2): [ 1 0.9072724276656742 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9435 interne); stringhe deallocate: 0 (9355 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7910509198160352 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8091957840360466


ris (2 : 2): [ -1 0.8091957840360466 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9455 interne); stringhe deallocate: 0 (9375 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161449723268464e-314 0 0.8171076862345661 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 -1903174040 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.09807664362962754


ris (2 : 2): [ 1 0.09807664362962754 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9475 interne); stringhe deallocate: 0 (9395 interne)


Stringhe allocate: 1 (9475 interne); stringhe deallocate: 0 (9400 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8091957840360466 0.2089486776822634 0.9072724276656742 0.1908042159639534 0.09807664362962754 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9359438892435278 0.5139509863647638 0.959999772875004 0.6799395979545183 0.7922987905316764 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8091955227322014 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8086340792137525


ris (2 : 2): [ 1 0.8086340792137525 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9510 interne); stringhe deallocate: 0 (9430 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7914512947193598


ris (2 : 2): [ -1 0.7914512947193598 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9530 interne); stringhe deallocate: 0 (9450 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9063043683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9073409082615876


ris (2 : 2): [ 1 0.9073409082615876 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9550 interne); stringhe deallocate: 0 (9470 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7914509815665412 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8086340792137525


ris (2 : 2): [ -1 0.8086340792137525 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9570 interne); stringhe deallocate: 0 (9490 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870098625275e-314 0 0.8159823505406632 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 -1818956104 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.09870682904783512


ris (2 : 2): [ 1 0.09870682904783512 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9590 interne); stringhe deallocate: 0 (9510 interne)


Stringhe allocate: 1 (9590 interne); stringhe deallocate: 0 (9515 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8086340792137525 0.2085487052806402 0.9073409082615876 0.1913659207862475 0.09870682904783512 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9357553157042716 0.5137052296283732 0.9600293135965095 0.6801617685031063 0.7924439140309477 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8086338131874502 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8122957920798705


ris (2 : 2): [ 1 0.8122957920798705 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9625 interne); stringhe deallocate: 0 (9545 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7888378590928724


ris (2 : 2): [ -1 0.7888378590928724 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9645 interne); stringhe deallocate: 0 (9565 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9063043636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9068876909222916


ris (2 : 2): [ 1 0.9068876909222916 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9665 interne); stringhe deallocate: 0 (9585 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.788837436959394 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8122957920798705


ris (2 : 2): [ -1 0.8122957920798705 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9685 interne); stringhe deallocate: 0 (9605 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869798233362e-314 0 0.8233375637059925 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 -1095423315 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.09459189884242114


ris (2 : 2): [ 1 0.09459189884242114 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9705 interne); stringhe deallocate: 0 (9625 interne)


Stringhe allocate: 1 (9705 interne); stringhe deallocate: 0 (9630 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8122957920798705 0.2111621409071276 0.9068876909222916 0.1877042079201295 0.09459189884242114 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9369846128858117 0.515311013946806 0.9598338075991835 0.6787134548622968 0.791496299164889 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8122954411002308 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8086341313065428


ris (2 : 2): [ 1 0.8086341313065428 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9740 interne); stringhe deallocate: 0 (9660 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7914504831878974


ris (2 : 2): [ -1 0.7914504831878974 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9760 interne); stringhe deallocate: 0 (9680 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9063043636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9073398045131625


ris (2 : 2): [ 1 0.9073398045131625 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9780 interne); stringhe deallocate: 0 (9700 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7914500277493053 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8086341313065428


ris (2 : 2): [ -1 0.8086341313065428 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9800 interne); stringhe deallocate: 0 (9720 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161448569131115e-314 0 0.815982827378166 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 -1349745962 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.09870567320661972


ris (2 : 2): [ 1 0.09870567320661972 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9820 interne); stringhe deallocate: 0 (9740 interne)


Stringhe allocate: 1 (9820 interne); stringhe deallocate: 0 (9745 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8086341313065428 0.2085495168121027 0.9073398045131625 0.1913658686934572 0.09870567320661972 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9357553331926773 0.513705728261086 0.9600288374685727 0.6801617478988968 0.7924436478557603 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8086338085623552 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8086341313065428


ris (2 : 2): [ 1 0.8086341313065428 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9855 interne); stringhe deallocate: 0 (9775 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7914504831878974


ris (2 : 2): [ -1 0.7914504831878974 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9875 interne); stringhe deallocate: 0 (9795 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9063043636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9073398045131625


ris (2 : 2): [ 1 0.9073398045131625 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9895 interne); stringhe deallocate: 0 (9815 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7914500278922612 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8086341313065428


ris (2 : 2): [ -1 0.8086341313065428 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9915 interne); stringhe deallocate: 0 (9835 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870043289923e-314 0 0.8159828273781002 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 -1349745962 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.09870567320661972


ris (2 : 2): [ 1 0.09870567320661972 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9935 interne); stringhe deallocate: 0 (9855 interne)


Stringhe allocate: 1 (9935 interne); stringhe deallocate: 0 (9860 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8086341313065428 0.2085495168121027 0.9073398045131625 0.1913658686934572 0.09870567320661972 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9357553331926773 0.513705728261086 0.9600288374685727 0.6801617478988968 0.7924436478557603 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8086338085598381 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8024870166546683


ris (2 : 2): [ 1 0.8024870166546683 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9970 interne); stringhe deallocate: 0 (9890 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7958201887930636


ris (2 : 2): [ -1 0.7958201887930636 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9990 interne); stringhe deallocate: 0 (9910 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9063043683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9080791973170018


ris (2 : 2): [ 1 0.9080791973170018 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10010 interne); stringhe deallocate: 0 (9930 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7958197682352246 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8024870166546683


ris (2 : 2): [ -1 0.8024870166546683 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10030 interne); stringhe deallocate: 0 (9950 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870557118195e-314 0 0.8141326992042934 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 1082122898 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.1055921806623336


ris (2 : 2): [ 1 0.1055921806623336 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10050 interne); stringhe deallocate: 0 (9970 interne)


Stringhe allocate: 1 (10050 interne); stringhe deallocate: 0 (9975 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.8024870166546683 0.2041798112069364 0.9080791973170018 0.1975129833453317 0.1055921806623336 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.93369164578942 0.5110208315428244 0.9603477920075907 0.6825931100311679 0.7940295208875006 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8024869053810537 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7994946416823595


ris (2 : 2): [ 1 0.7994946416823595 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10085 interne); stringhe deallocate: 0 (10005 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.797886917513651


ris (2 : 2): [ -1 0.797886917513651 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10105 interne); stringhe deallocate: 0 (10025 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9063043636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9083668382510566


ris (2 : 2): [ 1 0.9083668382510566 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10125 interne); stringhe deallocate: 0 (10045 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7978868526908087 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7994946416823595


ris (2 : 2): [ -1 0.7994946416823595 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10145 interne); stringhe deallocate: 0 (10065 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869940524268e-314 0 0.8132147876749212 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 -915715187 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.1088721965686971


ris (2 : 2): [ 1 0.1088721965686971 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10165 interne); stringhe deallocate: 0 (10085 interne)


Stringhe allocate: 1 (10165 interne); stringhe deallocate: 0 (10090 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.7994946416823595 0.202113082486349 0.9083668382510566 0.2005053583176405 0.1088721965686971 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9326870563379619 0.5097509626635841 0.9604718727141486 0.6837766811218761 0.7947848658577967 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7994942707511097 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7864266085608602


ris (2 : 2): [ 1 0.7864266085608602 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10200 interne); stringhe deallocate: 0 (10120 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8068975316525391


ris (2 : 2): [ -1 0.8068975316525391 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10220 interne); stringhe deallocate: 0 (10140 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9063043636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9096104647920703


ris (2 : 2): [ 1 0.9096104647920703 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10240 interne); stringhe deallocate: 0 (10160 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8068971674891792 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7864266085608602


ris (2 : 2): [ -1 0.7864266085608602 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10260 interne); stringhe deallocate: 0 (10180 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161449723268464e-314 0 0.8091955272680345 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 579806090 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.1231838562312101


ris (2 : 2): [ 1 0.1231838562312101 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10280 interne); stringhe deallocate: 0 (10200 interne)


Stringhe allocate: 1 (10280 interne); stringhe deallocate: 0 (10205 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.7864266085608602 0.1931024683474609 0.9096104647920703 0.2135733914391398 0.1231838562312101 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9282999028740251 0.5042145328632746 0.9610083403779397 0.6889454672393089 0.7980806547964107 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7864265484305193 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7846189787375745


ris (2 : 2): [ 1 0.7846189787375745 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10315 interne); stringhe deallocate: 0 (10235 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8081404018815936


ris (2 : 2): [ -1 0.8081404018815936 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10335 interne); stringhe deallocate: 0 (10255 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9063043636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9097821178982972


ris (2 : 2): [ 1 0.9097821178982972 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10355 interne); stringhe deallocate: 0 (10275 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8081402819607311 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7846189787375745


ris (2 : 2): [ -1 0.7846189787375745 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10375 interne); stringhe deallocate: 0 (10295 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870098625275e-314 0 0.8086338130961384 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 1118828079 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.1251631391607228


ris (2 : 2): [ 1 0.1251631391607228 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10395 interne); stringhe deallocate: 0 (10315 interne)


Stringhe allocate: 1 (10395 interne); stringhe deallocate: 0 (10320 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.7846189787375745 0.1918595981184064 0.9097821178982972 0.2153810212624255 0.1251631391607228 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9276930518378355 0.5034508708455705 0.9610823869971161 0.6896604372618967 0.7985364578925785 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7846188587612542 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.796484708412103


ris (2 : 2): [ 1 0.796484708412103 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10430 interne); stringhe deallocate: 0 (10350 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7999748580152954


ris (2 : 2): [ -1 0.7999748580152954 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10450 interne); stringhe deallocate: 0 (10370 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9063043683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.908666144402841


ris (2 : 2): [ 1 0.908666144402841 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10470 interne); stringhe deallocate: 0 (10390 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7999744457694584 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.796484708412103


ris (2 : 2): [ -1 0.796484708412103 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10490 interne); stringhe deallocate: 0 (10410 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869798233362e-314 0 0.8122954456334366 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 2144115786 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.112181435990738


ris (2 : 2): [ 1 0.112181435990738 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10510 interne); stringhe deallocate: 0 (10430 interne)


Stringhe allocate: 1 (10510 interne); stringhe deallocate: 0 (10435 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.796484708412103 0.2000251419847046 0.908666144402841 0.2035152915878971 0.112181435990738 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9316765722773499 0.5084680605398889 0.9606009854877271 0.6849671970286735 0.7955469406233779 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7964844792335928 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7846210504279981


ris (2 : 2): [ 1 0.7846210504279981 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10545 interne); stringhe deallocate: 0 (10465 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8081094168110936


ris (2 : 2): [ -1 0.8081094168110936 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10565 interne); stringhe deallocate: 0 (10485 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9063043636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9097401352234277


ris (2 : 2): [ 1 0.9097401352234277 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10585 interne); stringhe deallocate: 0 (10505 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8081092923135937 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7846210504279981


ris (2 : 2): [ -1 0.7846210504279981 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10605 interne); stringhe deallocate: 0 (10525 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161448569131115e-314 0 0.808633813095641 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 -1695879961 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.1251190847954296


ris (2 : 2): [ 1 0.1251190847954296 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10625 interne); stringhe deallocate: 0 (10545 interne)


Stringhe allocate: 1 (10625 interne); stringhe deallocate: 0 (10550 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.7846210504279981 0.1918905831889064 0.9097401352234277 0.2153789495720019 0.1251190847954296 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9276937473383544 0.5034699091336424 0.9610642767793263 0.689659617848248 0.7985263127456665 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7846207661124378 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7846210504279981


ris (2 : 2): [ 1 0.7846210504279981 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10660 interne); stringhe deallocate: 0 (10580 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8081094168110936


ris (2 : 2): [ -1 0.8081094168110936 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10680 interne); stringhe deallocate: 0 (10600 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9063043636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9097401352234277


ris (2 : 2): [ 1 0.9097401352234277 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10700 interne); stringhe deallocate: 0 (10620 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8081092876883673 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7846210504279981


ris (2 : 2): [ -1 0.7846210504279981 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10720 interne); stringhe deallocate: 0 (10640 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870043289923e-314 0 0.8086338130959394 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 -1695879961 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.1251190847954296


ris (2 : 2): [ 1 0.1251190847954296 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10740 interne); stringhe deallocate: 0 (10660 interne)


Stringhe allocate: 1 (10740 interne); stringhe deallocate: 0 (10665 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.7846210504279981 0.1918905831889064 0.9097401352234277 0.2153789495720019 0.1251190847954296 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9276937473383544 0.5034699091336424 0.9610642767793263 0.689659617848248 0.7985263127456665 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7846207661124041 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7787610915966494


ris (2 : 2): [ 1 0.7787610915966494 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10775 interne); stringhe deallocate: 0 (10695 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8120741471099064


ris (2 : 2): [ -1 0.8120741471099064 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10795 interne); stringhe deallocate: 0 (10715 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9063043636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9102073013194879


ris (2 : 2): [ 1 0.9102073013194879 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10815 interne); stringhe deallocate: 0 (10735 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8120737116786323 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7787610915966494


ris (2 : 2): [ -1 0.7787610915966494 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10835 interne); stringhe deallocate: 0 (10755 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870557118195e-314 0 0.8024869052894772 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 1635369342 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.1314462097228385


ris (2 : 2): [ 1 0.1314462097228385 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10855 interne); stringhe deallocate: 0 (10775 interne)


Stringhe allocate: 1 (10855 interne); stringhe deallocate: 0 (10780 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.7787610915966494 0.1879258528900936 0.9102073013194879 0.2212389084033506 0.1314462097228385 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9257264628628366 0.5010338431077093 0.9612657999021375 0.6919774015249953 0.7999833672621042 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7787609142727288 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7759113958840364


ris (2 : 2): [ 1 0.7759113958840364 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10890 interne); stringhe deallocate: 0 (10810 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8139467732539369


ris (2 : 2): [ -1 0.8139467732539369 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10910 interne); stringhe deallocate: 0 (10830 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9063043683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9103696199134582


ris (2 : 2): [ 1 0.9103696199134582 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10930 interne); stringhe deallocate: 0 (10850 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8139467280361705 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7759113958840364


ris (2 : 2): [ -1 0.7759113958840364 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10950 interne); stringhe deallocate: 0 (10870 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869940524268e-314 0 0.7994942752846157 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 582831351 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.1344582240294219


ris (2 : 2): [ 1 0.1344582240294219 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10970 interne); stringhe deallocate: 0 (10890 interne)


Stringhe allocate: 1 (10970 interne); stringhe deallocate: 0 (10895 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.7759113958840364 0.1860532267460631 0.9103696199134582 0.2240886041159637 0.1344582240294219 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9247697731834855 0.4998832374964997 0.9613358198591143 0.6931045388303049 0.8006769949523004 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.775911340042919 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7634671726202774


ris (2 : 2): [ 1 0.7634671726202774 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11005 interne); stringhe deallocate: 0 (10925 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8221106940922125


ris (2 : 2): [ -1 0.8221106940922125 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11025 interne); stringhe deallocate: 0 (10945 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9063043636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9110672011663348


ris (2 : 2): [ 1 0.9110672011663348 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11045 interne); stringhe deallocate: 0 (10965 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8221106571647221 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7634671726202774


ris (2 : 2): [ -1 0.7634671726202774 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11065 interne); stringhe deallocate: 0 (10985 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161449723268464e-314 0 0.7864265529642278 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 -1254152097 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.1476000285460574


ris (2 : 2): [ 1 0.1476000285460574 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11085 interne); stringhe deallocate: 0 (11005 interne)


Stringhe allocate: 1 (11085 interne); stringhe deallocate: 0 (11010 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.7634671726202774 0.1778893059077875 0.9110672011663348 0.2365328273797226 0.1476000285460574 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9205920429397669 0.4948670450461619 0.961636737998679 0.6980265900563712 0.8037033814777432 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7634668392630726 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7617459955696637


ris (2 : 2): [ 1 0.7617459955696637 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11120 interne); stringhe deallocate: 0 (11040 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8232367775154473


ris (2 : 2): [ -1 0.8232367775154473 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11140 interne); stringhe deallocate: 0 (11060 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9063043636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9111633623363874


ris (2 : 2): [ 1 0.9111633623363874 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11160 interne); stringhe deallocate: 0 (11080 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8232364743204297 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7617459955696637


ris (2 : 2): [ -1 0.7617459955696637 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11180 interne); stringhe deallocate: 0 (11100 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870098625275e-314 0 0.7846188632970872 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 593138898 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.1494173667667237


ris (2 : 2): [ 1 0.1494173667667237 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11200 interne); stringhe deallocate: 0 (11120 interne)


Stringhe allocate: 1 (11200 interne); stringhe deallocate: 0 (11125 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.7617459955696637 0.1767632224845527 0.9111633623363874 0.2382540044303363 0.1494173667667237 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9200142155200288 0.494175140840085 0.9616782193892286 0.6987073654999397 0.8041218908153487 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7617459339590837 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7730445448617032


ris (2 : 2): [ 1 0.7730445448617032 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11235 interne); stringhe deallocate: 0 (11155 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8158389795931811


ris (2 : 2): [ -1 0.8158389795931811 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11255 interne); stringhe deallocate: 0 (11175 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9063043636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9105418746107862


ris (2 : 2): [ 1 0.9105418746107862 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11275 interne); stringhe deallocate: 0 (11195 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.81583881802284 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7730445448617032


ris (2 : 2): [ -1 0.7730445448617032 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11295 interne); stringhe deallocate: 0 (11215 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869798233362e-314 0 0.7964844791422809 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 -372176910 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.137497329749083


ris (2 : 2): [ 1 0.137497329749083 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11315 interne); stringhe deallocate: 0 (11235 interne)


Stringhe allocate: 1 (11315 interne); stringhe deallocate: 0 (11240 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.7730445448617032 0.1841610204068189 0.9105418746107862 0.2269554551382969 0.137497329749083 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9238073241847506 0.4987206011430337 0.9614101259888124 0.6942384615581716 0.8013768614423046 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7730441135830315 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7617493907071249


ris (2 : 2): [ 1 0.7617493907071249 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11350 interne); stringhe deallocate: 0 (11270 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8232071535418832


ris (2 : 2): [ -1 0.8232071535418832 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11370 interne); stringhe deallocate: 0 (11290 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9063043683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9111256212130685


ris (2 : 2): [ 1 0.9111256212130685 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11390 interne); stringhe deallocate: 0 (11310 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8232069056483589 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7617493907071249


ris (2 : 2): [ -1 0.7617493907071249 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11410 interne); stringhe deallocate: 0 (11330 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161448569131115e-314 0 0.7846207706456436 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 1109047436 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.1493762305059436


ris (2 : 2): [ 1 0.1493762305059436 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11430 interne); stringhe deallocate: 0 (11350 interne)


Stringhe allocate: 1 (11430 interne); stringhe deallocate: 0 (11355 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.7617493907071249 0.1767928464581168 0.9111256212130685 0.2382506092928751 0.1493762305059436 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9200153553234663 0.4941933428236031 0.9616619388648203 0.6987060226246032 0.8041124176699237 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7617492764442861 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7617493907071249


ris (2 : 2): [ 1 0.7617493907071249 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11465 interne); stringhe deallocate: 0 (11385 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8232071535418832


ris (2 : 2): [ -1 0.8232071535418832 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11485 interne); stringhe deallocate: 0 (11405 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9063043636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9111256212130685


ris (2 : 2): [ 1 0.9111256212130685 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11505 interne); stringhe deallocate: 0 (11425 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8232069056484752 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7617493907071249


ris (2 : 2): [ -1 0.7617493907071249 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11525 interne); stringhe deallocate: 0 (11445 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870043289923e-314 0 0.7846207706456898 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 1109047436 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.1493762305059436


ris (2 : 2): [ 1 0.1493762305059436 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11545 interne); stringhe deallocate: 0 (11465 interne)


Stringhe allocate: 1 (11545 interne); stringhe deallocate: 0 (11470 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.7617493907071249 0.1767928464581168 0.9111256212130685 0.2382506092928751 0.1493762305059436 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9200153553234663 0.4941933428236031 0.9616619388648203 0.6987060226246032 0.8041124176699237 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7617492718192249 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7561727908097967


ris (2 : 2): [ 1 0.7561727908097967 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11580 interne); stringhe deallocate: 0 (11500 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8267960286027966


ris (2 : 2): [ -1 0.8267960286027966 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11600 interne); stringhe deallocate: 0 (11520 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9063043636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9113569385854604


ris (2 : 2): [ 1 0.9113569385854604 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11620 interne); stringhe deallocate: 0 (11540 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8267955822440678 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7561727908097967


ris (2 : 2): [ -1 0.7561727908097967 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11640 interne); stringhe deallocate: 0 (11560 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870557118195e-314 0 0.77876091880883 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 1205134953 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.1551841477756637


ris (2 : 2): [ 1 0.1551841477756637 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11660 interne); stringhe deallocate: 0 (11580 interne)


Stringhe allocate: 1 (11660 interne); stringhe deallocate: 0 (11585 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.7561727908097967 0.1732039713972035 0.9113569385854604 0.2438272091902033 0.1551841477756637 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9181431990984945 0.491988215123031 0.9617617230735589 0.7009117296245623 0.8054499054208424 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7561726612540056 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7534635454017116


ris (2 : 2): [ 1 0.7534635454017116 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11695 interne); stringhe deallocate: 0 (11615 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8284887206428041


ris (2 : 2): [ -1 0.8284887206428041 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11715 interne); stringhe deallocate: 0 (11635 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9063043636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9114110216129449


ris (2 : 2): [ 1 0.9114110216129449 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11735 interne); stringhe deallocate: 0 (11655 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8284883587808789 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7534635454017116


ris (2 : 2): [ -1 0.7534635454017116 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11755 interne); stringhe deallocate: 0 (11675 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869940524268e-314 0 0.7759113399513424 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 -1798877086 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.1579474762112333


ris (2 : 2): [ 1 0.1579474762112333 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11775 interne); stringhe deallocate: 0 (11695 interne)


Stringhe allocate: 1 (11775 interne); stringhe deallocate: 0 (11700 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.7534635454017116 0.1715112793571959 0.9114110216129449 0.2465364545982884 0.1579474762112333 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9172336608943725 0.4909481671852773 0.9617850530640734 0.7019833147608894 0.8060862639918587 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7534632725185784 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7416332940540527


ris (2 : 2): [ 1 0.7416332940540527 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11810 interne); stringhe deallocate: 0 (11730 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8358677784619503


ris (2 : 2): [ -1 0.8358677784619503 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11830 interne); stringhe deallocate: 0 (11750 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9063043683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9116370756270175


ris (2 : 2): [ 1 0.9116370756270175 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11850 interne); stringhe deallocate: 0 (11770 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8358674091788458 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7416332940540527


ris (2 : 2): [ -1 0.7416332940540527 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11870 interne); stringhe deallocate: 0 (11790 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161449723268464e-314 0 0.7634668437965786 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 -1091385358 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.1700037815729648


ris (2 : 2): [ 1 0.1700037815729648 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11890 interne); stringhe deallocate: 0 (11810 interne)


Stringhe allocate: 1 (11890 interne); stringhe deallocate: 0 (11815 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.7416332940540527 0.1641322215380497 0.9116370756270175 0.2583667059459474 0.1700037815729648 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9132620511121982 0.4864142214432427 0.9618825667989615 0.7066625222868422 0.8088626741908676 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7416329472511709 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7399971802683364


ris (2 : 2): [ 1 0.7399971802683364 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11925 interne); stringhe deallocate: 0 (11845 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8368855967661523


ris (2 : 2): [ -1 0.8368855967661523 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11945 interne); stringhe deallocate: 0 (11865 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9063043636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9116680535944733


ris (2 : 2): [ 1 0.9116680535944733 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11965 interne); stringhe deallocate: 0 (11885 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8368854563685737 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7399971802683364


ris (2 : 2): [ -1 0.7399971802683364 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11985 interne); stringhe deallocate: 0 (11905 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870098625275e-314 0 0.7617459384927923 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 -1861464157 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.171670873326137


ris (2 : 2): [ 1 0.171670873326137 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12005 interne); stringhe deallocate: 0 (11925 interne)


Stringhe allocate: 1 (12005 interne); stringhe deallocate: 0 (11930 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.7399971802683364 0.1631144032338477 0.9116680535944733 0.2600028197316636 0.171670873326137 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9127127808283181 0.485788839032696 0.9618959298764465 0.7073096527420167 0.8092465837226287 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7399969143363148 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7507375933478381


ris (2 : 2): [ 1 0.7507375933478381 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12040 interne); stringhe deallocate: 0 (11960 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8301994525858643


ris (2 : 2): [ -1 0.8301994525858643 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12060 interne); stringhe deallocate: 0 (11980 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9063043636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9114734967191847


ris (2 : 2): [ 1 0.9114734967191847 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12080 interne); stringhe deallocate: 0 (12000 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8301992457363658 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7507375933478381


ris (2 : 2): [ -1 0.7507375933478381 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12100 interne); stringhe deallocate: 0 (12020 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869798233362e-314 0 0.7730441181188645 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 -664153963 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.1607359033713466


ris (2 : 2): [ 1 0.1607359033713466 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12120 interne); stringhe deallocate: 0 (12040 interne)


Stringhe allocate: 1 (12120 interne); stringhe deallocate: 0 (12045 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.7507375933478381 0.1698005474141358 0.9114734967191847 0.2492624066521619 0.1607359033713466 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9163185139947214 0.4898970349135021 0.9618120031758507 0.703061507860176 0.8067284024724504 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7507371944876482 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7400017250653225


ris (2 : 2): [ 1 0.7400017250653225 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12155 interne); stringhe deallocate: 0 (12075 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8368573717479825


ris (2 : 2): [ -1 0.8368573717479825 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12175 interne); stringhe deallocate: 0 (12095 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9063043636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9116341756985152


ris (2 : 2): [ 1 0.9116341756985152 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12195 interne); stringhe deallocate: 0 (12115 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8368573231193119 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7400017250653225


ris (2 : 2): [ -1 0.7400017250653225 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12215 interne); stringhe deallocate: 0 (12135 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161448569131115e-314 0 0.7617492763529743 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 419722205 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.1716324506331928


ris (2 : 2): [ 1 0.1716324506331928 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12235 interne); stringhe deallocate: 0 (12155 interne)


Stringhe allocate: 1 (12235 interne); stringhe deallocate: 0 (12160 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.7400017250653225 0.1631426282520175 0.9116341756985152 0.2599982749346775 0.1716324506331928 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9127143065913503 0.4858061814501273 0.9618813158463503 0.707307855142994 0.8092377354765563 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7400016827053459 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7400017250653225


ris (2 : 2): [ 1 0.7400017250653225 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12270 interne); stringhe deallocate: 0 (12190 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8368573717479825


ris (2 : 2): [ -1 0.8368573717479825 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12290 interne); stringhe deallocate: 0 (12210 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9063043683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9116341756985152


ris (2 : 2): [ 1 0.9116341756985152 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12310 interne); stringhe deallocate: 0 (12230 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8368573277445019 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7400017250653225


ris (2 : 2): [ -1 0.7400017250653225 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12330 interne); stringhe deallocate: 0 (12250 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870043289923e-314 0 0.7617492763524307 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 419722205 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.1716324506331928


ris (2 : 2): [ 1 0.1716324506331928 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12350 interne); stringhe deallocate: 0 (12270 interne)


Stringhe allocate: 1 (12350 interne); stringhe deallocate: 0 (12275 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.7400017250653225 0.1631426282520175 0.9116341756985152 0.2599982749346775 0.1716324506331928 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9127143065913503 0.4858061814501273 0.9618813158463503 0.707307855142994 0.8092377354765563 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.740001687332958 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7347035946226016


ris (2 : 2): [ 1 0.7347035946226016 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12385 interne); stringhe deallocate: 0 (12305 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8400981070822297


ris (2 : 2): [ -1 0.8400981070822297 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12405 interne); stringhe deallocate: 0 (12325 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9063043636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9116622814930043


ris (2 : 2): [ 1 0.9116622814930043 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12425 interne); stringhe deallocate: 0 (12345 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.840097908446424 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7347035946226016


ris (2 : 2): [ -1 0.7347035946226016 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12445 interne); stringhe deallocate: 0 (12365 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870557118195e-314 0 0.7561726657872914 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 484772865 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.1769586868704027


ris (2 : 2): [ 1 0.1769586868704027 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12465 interne); stringhe deallocate: 0 (12385 interne)


Stringhe allocate: 1 (12465 interne); stringhe deallocate: 0 (12390 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.7347035946226016 0.1599018929177704 0.9116622814930043 0.2652964053773984 0.1769586868704027 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9109356371383374 0.4838149627159893 0.9618934399442296 0.7094034193970844 0.8104642983552853 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7347035450431019 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7321320701225049


ris (2 : 2): [ 1 0.7321320701225049 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12500 interne); stringhe deallocate: 0 (12420 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8416243251133503


ris (2 : 2): [ -1 0.8416243251133503 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12520 interne); stringhe deallocate: 0 (12440 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9063043636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9116234440776974


ris (2 : 2): [ 1 0.9116234440776974 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12540 interne); stringhe deallocate: 0 (12460 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8416242640467964 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7321320701225049


ris (2 : 2): [ -1 0.7321320701225049 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12560 interne); stringhe deallocate: 0 (12480 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869940524268e-314 0 0.7534632770546796 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 1009839374 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.1794913739551924


ris (2 : 2): [ 1 0.1794913739551924 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12580 interne); stringhe deallocate: 0 (12500 interne)


Stringhe allocate: 1 (12580 interne); stringhe deallocate: 0 (12505 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.7321320701225049 0.1583756748866497 0.9116234440776974 0.2678679298774951 0.1794913739551924 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9100723341061743 0.4828772021084411 0.9618766865083948 0.7104205319199224 0.8110475432252625 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7321319622488787 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7209037777799902


ris (2 : 2): [ 1 0.7209037777799902 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12615 interne); stringhe deallocate: 0 (12535 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8482772568887377


ris (2 : 2): [ -1 0.8482772568887377 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12635 interne); stringhe deallocate: 0 (12555 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9063043636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.911444758705894


ris (2 : 2): [ 1 0.911444758705894 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12655 interne); stringhe deallocate: 0 (12575 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8482770960781627 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7209037777799902


ris (2 : 2): [ -1 0.7209037777799902 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12675 interne); stringhe deallocate: 0 (12595 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161449723268464e-314 0 0.7416329471595944 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 -861661227 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.1905409809259039


ris (2 : 2): [ 1 0.1905409809259039 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12695 interne); stringhe deallocate: 0 (12615 interne)


Stringhe allocate: 1 (12695 interne); stringhe deallocate: 0 (12620 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.7209037777799902 0.1517227431112623 0.911444758705894 0.2790962222200099 0.1905409809259039 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9063028118539298 0.4787894130662142 0.9617996063554681 0.7148616472004605 0.8135921238880832 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7209034008449944 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7193510406373539


ris (2 : 2): [ 1 0.7193510406373539 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12730 interne); stringhe deallocate: 0 (12650 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8491949069523489


ris (2 : 2): [ -1 0.8491949069523489 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12750 interne); stringhe deallocate: 0 (12670 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9063043683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9114197919364825


ris (2 : 2): [ 1 0.9114197919364825 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12770 interne); stringhe deallocate: 0 (12690 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8491945309135014 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7193510406373539


ris (2 : 2): [ -1 0.7193510406373539 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12790 interne); stringhe deallocate: 0 (12710 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870098625275e-314 0 0.7399969188698208 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 2033987883 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.1920687512991286


ris (2 : 2): [ 1 0.1920687512991286 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12810 interne); stringhe deallocate: 0 (12730 interne)


Stringhe allocate: 1 (12810 interne); stringhe deallocate: 0 (12735 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.7193510406373539 0.1508050930476511 0.9114197919364825 0.2806489593626461 0.1920687512991286 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9057815324792478 0.4782255774518905 0.9617888363501514 0.7154757997750876 0.8139439495194601 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7193508236854971 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7295443252105601


ris (2 : 2): [ 1 0.7295443252105601 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12845 interne); stringhe deallocate: 0 (12765 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8431671325504053


ris (2 : 2): [ -1 0.8431671325504053 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12865 interne); stringhe deallocate: 0 (12785 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9063043636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9115916228871511


ris (2 : 2): [ 1 0.9115916228871511 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12885 interne); stringhe deallocate: 0 (12805 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8431668370218457 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7295443252105601


ris (2 : 2): [ -1 0.7295443252105601 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12905 interne); stringhe deallocate: 0 (12825 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869798233362e-314 0 0.7507371990213567 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 1463312437 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.182047297676591


ris (2 : 2): [ 1 0.182047297676591 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12925 interne); stringhe deallocate: 0 (12845 interne)


Stringhe allocate: 1 (12925 interne); stringhe deallocate: 0 (12850 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.7295443252105601 0.1568328674495947 0.9115916228871511 0.2704556747894399 0.182047297676591 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9092035856152062 0.4819292484019577 0.9618629596867256 0.7114440600860941 0.8116361391902008 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7295441669913441 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7193565738368754


ris (2 : 2): [ 1 0.7193565738368754 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12960 interne); stringhe deallocate: 0 (12880 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.849168099644234


ris (2 : 2): [ -1 0.849168099644234 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12980 interne); stringhe deallocate: 0 (12900 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9063043636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.911389430785329


ris (2 : 2): [ 1 0.911389430785329 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13000 interne); stringhe deallocate: 0 (12920 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8491678280326056 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7193565738368754


ris (2 : 2): [ -1 0.7193565738368754 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13020 interne); stringhe deallocate: 0 (12940 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161448569131115e-314 0 0.740001687241179 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 333010937 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.1920328569484536


ris (2 : 2): [ 1 0.1920328569484536 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13040 interne); stringhe deallocate: 0 (12960 interne)


Stringhe allocate: 1 (13040 interne); stringhe deallocate: 0 (12965 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.7193565738368754 0.150831900355766 0.911389430785329 0.2806434261631247 0.1920328569484536 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9057833900652533 0.4782420487797296 0.9617757393509381 0.7154736112341951 0.8139356835177033 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7193565411063005 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7193565738368754


ris (2 : 2): [ 1 0.7193565738368754 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13075 interne); stringhe deallocate: 0 (12995 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.849168099644234


ris (2 : 2): [ -1 0.849168099644234 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13095 interne); stringhe deallocate: 0 (13015 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9063043636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.911389430785329


ris (2 : 2): [ 1 0.911389430785329 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13115 interne); stringhe deallocate: 0 (13035 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8491678278895698 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7193565738368754


ris (2 : 2): [ -1 0.7193565738368754 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13135 interne); stringhe deallocate: 0 (13055 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870043289923e-314 0 0.7400016872416462 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 333010937 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.1920328569484536


ris (2 : 2): [ 1 0.1920328569484536 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13155 interne); stringhe deallocate: 0 (13075 interne)


Stringhe allocate: 1 (13155 interne); stringhe deallocate: 0 (13080 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.7193565738368754 0.150831900355766 0.911389430785329 0.2806434261631247 0.1920328569484536 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9057833900652533 0.4782420487797296 0.9617757393509381 0.7154736112341951 0.8139356835177033 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7193565411037834 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7143310876020683


ris (2 : 2): [ 1 0.7143310876020683 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13190 interne); stringhe deallocate: 0 (13110 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8520869929773108


ris (2 : 2): [ -1 0.8520869929773108 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13210 interne); stringhe deallocate: 0 (13130 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9063043683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9112435575125419


ris (2 : 2): [ 1 0.9112435575125419 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13230 interne); stringhe deallocate: 0 (13150 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8520865481350475 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7143310876020683


ris (2 : 2): [ -1 0.7143310876020683 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13250 interne); stringhe deallocate: 0 (13170 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870557118195e-314 0 0.7347035495763077 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 -562525384 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.1969124699104736


ris (2 : 2): [ 1 0.1969124699104736 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13270 interne); stringhe deallocate: 0 (13190 interne)


Stringhe allocate: 1 (13270 interne); stringhe deallocate: 0 (13195 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.7143310876020683 0.1479130070226892 0.9112435575125419 0.2856689123979317 0.1969124699104736 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.904096251753159 0.4764485807891932 0.961712813471439 0.7174613367964364 0.8150593948694389 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7143306820839346 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7118941290981905


ris (2 : 2): [ 1 0.7118941290981905 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13305 interne); stringhe deallocate: 0 (13225 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8534594867179818


ris (2 : 2): [ -1 0.8534594867179818 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13325 interne); stringhe deallocate: 0 (13245 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9063043636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9111255029292613


ris (2 : 2): [ 1 0.9111255029292613 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13345 interne); stringhe deallocate: 0 (13265 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8534593624564701 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7118941290981905


ris (2 : 2): [ -1 0.7118941290981905 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13365 interne); stringhe deallocate: 0 (13285 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869940524268e-314 0 0.7321319667821644 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 844504509 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.1992313738310708


ris (2 : 2): [ 1 0.1992313738310708 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13385 interne); stringhe deallocate: 0 (13305 interne)


Stringhe allocate: 1 (13385 interne); stringhe deallocate: 0 (13310 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.7118941290981905 0.1465405132820182 0.9111255029292613 0.2881058709018095 0.1992313738310708 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9032781247372296 0.475605273648363 0.961661887840308 0.7184252245648933 0.8155934082593207 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7118940395804554 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7012539342311689


ris (2 : 2): [ 1 0.7012539342311689 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13420 interne); stringhe deallocate: 0 (13340 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8594419276438228


ris (2 : 2): [ -1 0.8594419276438228 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13440 interne); stringhe deallocate: 0 (13360 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9063043636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9106018333594316


ris (2 : 2): [ 1 0.9106018333594316 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13460 interne); stringhe deallocate: 0 (13380 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8594417660684766 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7012539342311689


ris (2 : 2): [ -1 0.7012539342311689 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13480 interne); stringhe deallocate: 0 (13400 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161449723268464e-314 0 0.7209034053810957 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 389470917 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.2093478991282627


ris (2 : 2): [ 1 0.2093478991282627 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13500 interne); stringhe deallocate: 0 (13420 interne)


Stringhe allocate: 1 (13500 interne); stringhe deallocate: 0 (13425 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.7012539342311689 0.1405580723561772 0.9106018333594316 0.2987460657688311 0.2093478991282627 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8997060364716267 0.4719294571379797 0.9614359906103438 0.7226337302370256 0.8179231123577926 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7012538952322771 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6997826346967592


ris (2 : 2): [ 1 0.6997826346967592 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13535 interne); stringhe deallocate: 0 (13455 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.860267080024717


ris (2 : 2): [ -1 0.860267080024717 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13555 interne); stringhe deallocate: 0 (13475 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9063043636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9105291867512253


ris (2 : 2): [ 1 0.9105291867512253 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13575 interne); stringhe deallocate: 0 (13495 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8602666897269415 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6997826346967592


ris (2 : 2): [ -1 0.6997826346967592 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13595 interne); stringhe deallocate: 0 (13515 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870098625275e-314 0 0.7193508235939206 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 -1924490759 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.2107465520544661


ris (2 : 2): [ 1 0.2107465520544661 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13615 interne); stringhe deallocate: 0 (13535 interne)


Stringhe allocate: 1 (13615 interne); stringhe deallocate: 0 (13540 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.6997826346967592 0.139732919975283 0.9105291867512253 0.3002173653032408 0.2107465520544661 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8992120970402785 0.4714224552665243 0.9614046527810988 0.7232156718756285 0.8182452039217233 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6997823757595452 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7094414666166982


ris (2 : 2): [ 1 0.7094414666166982 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13650 interne); stringhe deallocate: 0 (13570 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8548472071236782


ris (2 : 2): [ -1 0.8548472071236782 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13670 interne); stringhe deallocate: 0 (13590 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9063043683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9110132413841691


ris (2 : 2): [ 1 0.9110132413841691 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13690 interne); stringhe deallocate: 0 (13610 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.854846958443769 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7094414666166982


ris (2 : 2): [ -1 0.7094414666166982 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13710 interne); stringhe deallocate: 0 (13630 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869798233362e-314 0 0.7295441715248501 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 -1758367592 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.2015717747674709


ris (2 : 2): [ 1 0.2015717747674709 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13730 interne); stringhe deallocate: 0 (13650 interne)


Stringhe allocate: 1 (13730 interne); stringhe deallocate: 0 (13655 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.7094414666166982 0.1451527928763218 0.9110132413841691 0.2905585333833018 0.2015717747674709 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9024547256379539 0.4747526107232648 0.961613461172942 0.7193953237119661 0.8161323721321351 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7094411938637197 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6997890074280203


ris (2 : 2): [ 1 0.6997890074280203 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13765 interne); stringhe deallocate: 0 (13685 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8602416932517977


ris (2 : 2): [ -1 0.8602416932517977 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13785 interne); stringhe deallocate: 0 (13705 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9063043636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9105020249702354


ris (2 : 2): [ 1 0.9105020249702354 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13805 interne); stringhe deallocate: 0 (13725 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8602414172146373 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6997890074280203


ris (2 : 2): [ -1 0.6997890074280203 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13825 interne); stringhe deallocate: 0 (13745 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161448569131115e-314 0 0.7193565456400091 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 -358605341 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.2107130175422151


ris (2 : 2): [ 1 0.2107130175422151 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13845 interne); stringhe deallocate: 0 (13765 interne)


Stringhe allocate: 1 (13845 interne); stringhe deallocate: 0 (13770 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.6997890074280203 0.1397583067482023 0.9105020249702354 0.3002109925719797 0.2107130175422151 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8992142364708851 0.471438053768908 0.9613929359057254 0.7232131512755836 0.8182374813600396 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6997885746451527 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6997890074280203


ris (2 : 2): [ 1 0.6997890074280203 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13880 interne); stringhe deallocate: 0 (13800 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8602416932517977


ris (2 : 2): [ -1 0.8602416932517977 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13900 interne); stringhe deallocate: 0 (13820 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9063043636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9105020249702354


ris (2 : 2): [ 1 0.9105020249702354 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13920 interne); stringhe deallocate: 0 (13840 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8602414173575932 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6997890074280203


ris (2 : 2): [ -1 0.6997890074280203 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13940 interne); stringhe deallocate: 0 (13860 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870043289923e-314 0 0.7193565456396165 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 -358605341 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.2107130175422151


ris (2 : 2): [ 1 0.2107130175422151 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13960 interne); stringhe deallocate: 0 (13880 interne)


Stringhe allocate: 1 (13960 interne); stringhe deallocate: 0 (13885 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.6997890074280203 0.1397583067482023 0.9105020249702354 0.3002109925719797 0.2107130175422151 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8992142364708851 0.471438053768908 0.9613929359057254 0.7232131512755836 0.8182374813600396 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6997885746451189 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6950295489339833


ris (2 : 2): [ 1 0.6950295489339833 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13995 interne); stringhe deallocate: 0 (13915 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8628636262625951


ris (2 : 2): [ -1 0.8628636262625951 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14015 interne); stringhe deallocate: 0 (13935 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9063043636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9102083084717035


ris (2 : 2): [ 1 0.9102083084717035 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14035 interne); stringhe deallocate: 0 (13955 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8628635495157422 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6950295489339833


ris (2 : 2): [ -1 0.6950295489339833 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14055 interne); stringhe deallocate: 0 (13975 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870557118195e-314 0 0.7143306819926227 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 -1681024426 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.2151787595377203


ris (2 : 2): [ 1 0.2151787595377203 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14075 interne); stringhe deallocate: 0 (13995 interne)


Stringhe allocate: 1 (14075 interne); stringhe deallocate: 0 (14000 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.6950295489339833 0.137136373737405 0.9102083084717035 0.3049704510660167 0.2151787595377203 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8976164080429614 0.4698270483666518 0.961266234361019 0.7250956551506315 0.8192658836151632 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6950292629665764 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6927236448583379


ris (2 : 2): [ 1 0.6927236448583379 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14110 interne); stringhe deallocate: 0 (14030 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8640944397474036


ris (2 : 2): [ -1 0.8640944397474036 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14130 interne); stringhe deallocate: 0 (14050 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9063043683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9100232745347624


ris (2 : 2): [ 1 0.9100232745347624 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14150 interne); stringhe deallocate: 0 (14070 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.864094261595838 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6927236448583379


ris (2 : 2): [ -1 0.6927236448583379 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14170 interne); stringhe deallocate: 0 (14090 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869940524268e-314 0 0.7118940441136612 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 -956652627 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.2172996296764245


ris (2 : 2): [ 1 0.2172996296764245 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14190 interne); stringhe deallocate: 0 (14110 interne)


Stringhe allocate: 1 (14190 interne); stringhe deallocate: 0 (14115 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.6927236448583379 0.1359055602525964 0.9100232745347624 0.3072763551416621 0.2172996296764245 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8968422781521878 0.4690707944253685 0.9611864156046648 0.7260077070916936 0.8197542924026979 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6927232830971182 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6826561372304772


ris (2 : 2): [ 1 0.6826561372304772 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14225 interne); stringhe deallocate: 0 (14145 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8694589439476217


ris (2 : 2): [ -1 0.8694589439476217 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14245 interne); stringhe deallocate: 0 (14165 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9063043636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9092079822522364


ris (2 : 2): [ 1 0.9092079822522364 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14265 interne); stringhe deallocate: 0 (14185 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8694586794825874 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6826561372304772


ris (2 : 2): [ -1 0.6826561372304772 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14285 interne); stringhe deallocate: 0 (14205 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161449723268464e-314 0 0.7012538997655629 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 -1359334945 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.2265518450217592


ris (2 : 2): [ 1 0.2265518450217592 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14305 interne); stringhe deallocate: 0 (14225 interne)


Stringhe allocate: 1 (14305 interne); stringhe deallocate: 0 (14230 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.6826561372304772 0.1305410560523783 0.9092079822522364 0.3173438627695228 0.2265518450217592 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8934624504036557 0.465774659393929 0.9608347200339373 0.7299896983508393 0.821884957169182 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6826558155509144 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6812641249512429


ris (2 : 2): [ 1 0.6812641249512429 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14340 interne); stringhe deallocate: 0 (14260 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8701988454498246


ris (2 : 2): [ -1 0.8701988454498246 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14360 interne); stringhe deallocate: 0 (14280 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9063043636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9090950356993761


ris (2 : 2): [ 1 0.9090950356993761 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14380 interne); stringhe deallocate: 0 (14300 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.870198730752235 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6812641249512429


ris (2 : 2): [ -1 0.6812641249512429 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14400 interne); stringhe deallocate: 0 (14320 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870098625275e-314 0 0.6997823802956464 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 1813205265 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.2278309107481332


ris (2 : 2): [ 1 0.2278309107481332 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14420 interne); stringhe deallocate: 0 (14340 interne)


Stringhe allocate: 1 (14420 interne); stringhe deallocate: 0 (14345 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.6812641249512429 0.1298011545501754 0.9090950356993761 0.3187358750487571 0.2278309107481332 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8929951290067855 0.465320038580858 0.9607859978723011 0.7305402795804175 0.822179509357548 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6812639278860857 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6904025767707194


ris (2 : 2): [ 1 0.6904025767707194 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14455 interne); stringhe deallocate: 0 (14375 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8653392024443245


ris (2 : 2): [ -1 0.8653392024443245 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14475 interne); stringhe deallocate: 0 (14395 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9063043636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9098429489135191


ris (2 : 2): [ 1 0.9098429489135191 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14495 interne); stringhe deallocate: 0 (14415 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8653388065787846 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6904025767707194


ris (2 : 2): [ -1 0.6904025767707194 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14515 interne); stringhe deallocate: 0 (14435 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869798233362e-314 0 0.7094411937721432 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 621395300 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.2194403721427998


ris (2 : 2): [ 1 0.2194403721427998 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14535 interne); stringhe deallocate: 0 (14455 interne)


Stringhe allocate: 1 (14535 interne); stringhe deallocate: 0 (14460 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.6904025767707194 0.1346607975556755 0.9098429489135191 0.3095974232292806 0.2194403721427998 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8960630574534066 0.4683059696106199 0.9611086278914247 0.7269257568392996 0.8202472775286356 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6904025120205315 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6812712004516131


ris (2 : 2): [ 1 0.6812712004516131 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14570 interne); stringhe deallocate: 0 (14490 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8701748688590212


ris (2 : 2): [ -1 0.8701748688590212 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14590 interne); stringhe deallocate: 0 (14510 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9063043683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9090707825511957


ris (2 : 2): [ 1 0.9090707825511957 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14610 interne); stringhe deallocate: 0 (14530 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8701744168253125 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6812712004516131


ris (2 : 2): [ -1 0.6812712004516131 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14630 interne); stringhe deallocate: 0 (14550 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161448569131115e-314 0 0.6997885791786587 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 1119137486 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.2277995820995826


ris (2 : 2): [ 1 0.2277995820995826 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14650 interne); stringhe deallocate: 0 (14570 interne)


Stringhe allocate: 1 (14650 interne); stringhe deallocate: 0 (14575 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.6812712004516131 0.1298251311409788 0.9090707825511957 0.318728799548387 0.2277995820995826 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8929975043685303 0.4653347706190729 0.9607755357043473 0.7305374810148071 0.8221722947775629 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6812710850685537 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6812712004516131


ris (2 : 2): [ 1 0.6812712004516131 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14685 interne); stringhe deallocate: 0 (14605 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8701748688590212


ris (2 : 2): [ -1 0.8701748688590212 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14705 interne); stringhe deallocate: 0 (14625 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9063043636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9090707825511957


ris (2 : 2): [ 1 0.9090707825511957 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14725 interne); stringhe deallocate: 0 (14645 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8701744122000861 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6812712004516131


ris (2 : 2): [ -1 0.6812712004516131 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14745 interne); stringhe deallocate: 0 (14665 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870043289923e-314 0 0.6997885791788274 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 1119137486 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.2277995820995826


ris (2 : 2): [ 1 0.2277995820995826 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14765 interne); stringhe deallocate: 0 (14685 interne)


Stringhe allocate: 1 (14765 interne); stringhe deallocate: 0 (14690 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.6812712004516131 0.1298251311409788 0.9090707825511957 0.318728799548387 0.2277995820995826 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8929975043685303 0.4653347706190729 0.9607755357043473 0.7305374810148071 0.8221722947775629 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6812710804434925 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6767704945921895


ris (2 : 2): [ 1 0.6767704945921895 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14800 interne); stringhe deallocate: 0 (14720 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8725233212652338


ris (2 : 2): [ -1 0.8725233212652338 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14820 interne); stringhe deallocate: 0 (14740 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9063043636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9086525441169786


ris (2 : 2): [ 1 0.9086525441169786 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14840 interne); stringhe deallocate: 0 (14760 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8725233118983589 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6767704945921895


ris (2 : 2): [ -1 0.6767704945921895 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14860 interne); stringhe deallocate: 0 (14780 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870557118195e-314 0 0.6950292675024095 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 -1733985674 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.2318820495247891


ris (2 : 2): [ 1 0.2318820495247891 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14880 interne); stringhe deallocate: 0 (14800 interne)


Stringhe allocate: 1 (14880 interne); stringhe deallocate: 0 (14805 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.6767704945921895 0.1274766787347662 0.9086525441169786 0.3232295054078105 0.2318820495247891 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8914865434520902 0.4638918010627305 0.9605951186833908 0.7323176407181495 0.823112433887878 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6767702145071795 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6745918396995799


ris (2 : 2): [ 1 0.6745918396995799 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14915 interne); stringhe deallocate: 0 (14835 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8736238030257187


ris (2 : 2): [ -1 0.8736238030257187 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14935 interne); stringhe deallocate: 0 (14855 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9063043636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9084114372834266


ris (2 : 2): [ 1 0.9084114372834266 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14955 interne); stringhe deallocate: 0 (14875 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8736233752224498 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6745918396995799


ris (2 : 2): [ -1 0.6745918396995799 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14975 interne); stringhe deallocate: 0 (14895 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869940524268e-314 0 0.6927232830058063 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 -1607135301 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.2338195975838466


ris (2 : 2): [ 1 0.2338195975838466 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14995 interne); stringhe deallocate: 0 (14915 interne)


Stringhe allocate: 1 (14995 interne); stringhe deallocate: 0 (14920 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.6745918396995799 0.1263761969742813 0.9084114372834266 0.3254081603004201 0.2338195975838466 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8907551332031285 0.4632156273947059 0.9604911115595043 0.7331793619166573 0.8235586259866045 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6745915455288323 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6650803346557109


ris (2 : 2): [ 1 0.6650803346557109 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15030 interne); stringhe deallocate: 0 (14950 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8784198881960303


ris (2 : 2): [ -1 0.8784198881960303 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15050 interne); stringhe deallocate: 0 (14970 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9063043683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9073520753901135


ris (2 : 2): [ 1 0.9073520753901135 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15070 interne); stringhe deallocate: 0 (14990 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8784198803397709 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6650803346557109


ris (2 : 2): [ -1 0.6650803346557109 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15090 interne); stringhe deallocate: 0 (15010 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161449723268464e-314 0 0.6826558200841202 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 -1915624591 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.2422717407344026


ris (2 : 2): [ 1 0.2422717407344026 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15110 interne); stringhe deallocate: 0 (15030 interne)


Stringhe allocate: 1 (15110 interne); stringhe deallocate: 0 (15035 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.6650803346557109 0.1215801118039697 0.9073520753901135 0.3349196653442891 0.2422717407344026 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8875619646587505 0.4602687484747511 0.9600341308009948 0.7369414380278482 0.8255050445404322 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6650800793617666 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6637652855557396


ris (2 : 2): [ 1 0.6637652855557396 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15145 interne); stringhe deallocate: 0 (15065 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8790813677830388


ris (2 : 2): [ -1 0.8790813677830388 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15165 interne); stringhe deallocate: 0 (15085 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9063043636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9072054048963989


ris (2 : 2): [ 1 0.9072054048963989 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15185 interne); stringhe deallocate: 0 (15105 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8790812581033887 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6637652855557396


ris (2 : 2): [ -1 0.6637652855557396 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15205 interne); stringhe deallocate: 0 (15125 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870098625275e-314 0 0.6812639324193714 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 -1305095433 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.2434401193406593


ris (2 : 2): [ 1 0.2434401193406593 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15225 interne); stringhe deallocate: 0 (15145 interne)


Stringhe allocate: 1 (15225 interne); stringhe deallocate: 0 (15150 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.6637652855557396 0.1209186322169612 0.9072054048963989 0.3362347144442605 0.2434401193406593 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8871204810658833 0.4598623127711063 0.9599708610214306 0.7374615780878311 0.8257741069257473 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6637649578543812 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6723985782866021


ris (2 : 2): [ 1 0.6723985782866021 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15260 interne); stringhe deallocate: 0 (15180 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8747370390309973


ris (2 : 2): [ -1 0.8747370390309973 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15280 interne); stringhe deallocate: 0 (15200 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9063043636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9081740794978106


ris (2 : 2): [ 1 0.9081740794978106 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15300 interne); stringhe deallocate: 0 (15220 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8747367901297736 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6723985782866021


ris (2 : 2): [ -1 0.6723985782866021 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15320 interne); stringhe deallocate: 0 (15240 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869798233362e-314 0 0.6904025165566328 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 99861873 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.2357755012112085


ris (2 : 2): [ 1 0.2357755012112085 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15340 interne); stringhe deallocate: 0 (15260 interne)


Stringhe allocate: 1 (15340 interne); stringhe deallocate: 0 (15265 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.6723985782866021 0.1252629609690027 0.9081740794978106 0.3276014217133979 0.2357755012112085 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8900188193052525 0.4625316170820456 0.9603887216759399 0.73404686041761 0.8240090451337938 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6723985714407732 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6637729387891791


ris (2 : 2): [ 1 0.6637729387891791 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15375 interne); stringhe deallocate: 0 (15295 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8790587802235464


ris (2 : 2): [ -1 0.8790587802235464 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15395 interne); stringhe deallocate: 0 (15315 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9063043636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9071837940435029


ris (2 : 2): [ 1 0.9071837940435029 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15415 interne); stringhe deallocate: 0 (15335 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8790583651515327 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6637729387891791


ris (2 : 2): [ -1 0.6637729387891791 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15435 interne); stringhe deallocate: 0 (15355 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161448569131115e-314 0 0.6812710849769772 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 -1090373636 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.2434108552543238


ris (2 : 2): [ 1 0.2434108552543238 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15455 interne); stringhe deallocate: 0 (15375 interne)


Stringhe allocate: 1 (15455 interne); stringhe deallocate: 0 (15380 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.6637729387891791 0.1209412197764536 0.9071837940435029 0.3362270612108209 0.2434108552543238 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8871230503821135 0.459876191340931 0.9599615386699181 0.7374585510120356 0.8257673677875678 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6637725872463616 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6637729387891791


ris (2 : 2): [ 1 0.6637729387891791 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15490 interne); stringhe deallocate: 0 (15410 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8790587802235464


ris (2 : 2): [ -1 0.8790587802235464 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15510 interne); stringhe deallocate: 0 (15430 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9063043683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9071837940435029


ris (2 : 2): [ 1 0.9071837940435029 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15530 interne); stringhe deallocate: 0 (15450 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.879058365151649 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6637729387891791


ris (2 : 2): [ -1 0.6637729387891791 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15550 interne); stringhe deallocate: 0 (15470 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870043289923e-314 0 0.6812710849769985 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 -1090373636 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.2434108552543238


ris (2 : 2): [ 1 0.2434108552543238 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15570 interne); stringhe deallocate: 0 (15490 interne)


Stringhe allocate: 1 (15570 interne); stringhe deallocate: 0 (15495 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.6637729387891791 0.1209412197764536 0.9071837940435029 0.3362270612108209 0.2434108552543238 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8871230503821135 0.459876191340931 0.9599615386699181 0.7374585510120356 0.8257673677875678 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6637725918739736 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6595231728433895


ris (2 : 2): [ 1 0.6595231728433895 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15605 interne); stringhe deallocate: 0 (15525 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8811558539467121


ris (2 : 2): [ -1 0.8811558539467121 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15625 interne); stringhe deallocate: 0 (15545 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9063043636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9066617988460816


ris (2 : 2): [ 1 0.9066617988460816 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15645 interne); stringhe deallocate: 0 (15565 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8811554951163823 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6595231728433895


ris (2 : 2): [ -1 0.6595231728433895 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15665 interne); stringhe deallocate: 0 (15585 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870557118195e-314 0 0.676770219040888 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 1464475872 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.2471386260026921


ris (2 : 2): [ 1 0.2471386260026921 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15685 interne); stringhe deallocate: 0 (15605 interne)


Stringhe allocate: 1 (15685 interne); stringhe deallocate: 0 (15610 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.6595231728433895 0.1188441460532879 0.9066617988460816 0.3404768271566105 0.2471386260026921 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8856963341183386 0.4585876774532623 0.9597363637200149 0.7391394567014158 0.8266258248699663 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6595230144950062 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6574677255375657


ris (2 : 2): [ 1 0.6574677255375657 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15720 interne); stringhe deallocate: 0 (15640 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8821366716401229


ris (2 : 2): [ -1 0.8821366716401229 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15740 interne); stringhe deallocate: 0 (15660 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9063043636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9063743170568013


ris (2 : 2): [ 1 0.9063743170568013 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15760 interne); stringhe deallocate: 0 (15680 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8821363537759961 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6574677255375657


ris (2 : 2): [ -1 0.6574677255375657 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15780 interne); stringhe deallocate: 0 (15700 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869940524268e-314 0 0.6745915500646653 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 -1049919543 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.2489065915192356


ris (2 : 2): [ 1 0.2489065915192356 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15800 interne); stringhe deallocate: 0 (15720 interne)


Stringhe allocate: 1 (15800 interne); stringhe deallocate: 0 (15725 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.6574677255375657 0.1178633283598771 0.9063743170568013 0.3425322744624343 0.2489065915192356 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8850062866809129 0.4579850294846811 0.9596123516643123 0.7399524457259062 0.8270329643164511 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6574673695059587 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6484945136566603


ris (2 : 2): [ 1 0.6484945136566603 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15835 interne); stringhe deallocate: 0 (15755 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8864108830833621


ris (2 : 2): [ -1 0.8864108830833621 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15855 interne); stringhe deallocate: 0 (15775 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9063043636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9051131664153922


ris (2 : 2): [ 1 0.9051131664153922 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15875 interne); stringhe deallocate: 0 (15795 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8864107174369025 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6484945136566603


ris (2 : 2): [ -1 0.6484945136566603 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15895 interne); stringhe deallocate: 0 (15815 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161449723268464e-314 0 0.6650800792704548 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 -1862709739 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.2566186527587319


ris (2 : 2): [ 1 0.2566186527587319 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15915 interne); stringhe deallocate: 0 (15835 interne)


Stringhe allocate: 1 (15915 interne); stringhe deallocate: 0 (15840 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.6484945136566603 0.1135891169166379 0.9051131664153922 0.3515054863433397 0.2566186527587319 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8819938319970334 0.4553588076486971 0.9590683245661659 0.7435016112787929 0.8288089516391248 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6484942478603752 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6472539641645991


ris (2 : 2): [ 1 0.6472539641645991 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15950 interne); stringhe deallocate: 0 (15870 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8870003605055945


ris (2 : 2): [ -1 0.8870003605055945 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15970 interne); stringhe deallocate: 0 (15890 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9063043683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9049386183802138


ris (2 : 2): [ 1 0.9049386183802138 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15990 interne); stringhe deallocate: 0 (15910 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8870000880214057 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6472539641645991


ris (2 : 2): [ -1 0.6472539641645991 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16010 interne); stringhe deallocate: 0 (15930 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870098625275e-314 0 0.663764962387587 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 -234265910 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.2576846542156147


ris (2 : 2): [ 1 0.2576846542156147 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16030 interne); stringhe deallocate: 0 (15950 interne)


Stringhe allocate: 1 (16030 interne); stringhe deallocate: 0 (15955 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.6472539641645991 0.1129996394944055 0.9049386183802138 0.3527460358354009 0.2576846542156147 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8815773591467827 0.454996612540045 0.9589930291510527 0.7439922845831026 0.8290544378994881 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6472535222023428 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6553982413482128


ris (2 : 2): [ 1 0.6553982413482128 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16065 interne); stringhe deallocate: 0 (15985 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8831291280415372


ris (2 : 2): [ -1 0.8831291280415372 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16085 interne); stringhe deallocate: 0 (16005 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9063043636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9060897385903995


ris (2 : 2): [ 1 0.9060897385903995 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16105 interne); stringhe deallocate: 0 (16025 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8831291239712291 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6553982413482128


ris (2 : 2): [ -1 0.6553982413482128 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16125 interne); stringhe deallocate: 0 (16045 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869798233362e-314 0 0.6723985759740589 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 -1148302941 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.2506914972421868


ris (2 : 2): [ 1 0.2506914972421868 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16145 interne); stringhe deallocate: 0 (16065 interne)


Stringhe allocate: 1 (16145 interne); stringhe deallocate: 0 (16070 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.6553982413482128 0.1168708719584628 0.9060897385903995 0.3446017586517872 0.2506914972421868 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8843115268310204 0.4573752302954578 0.9594895920254649 0.7407709867449503 0.8274440048719766 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6553978962393909 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6472620813618819


ris (2 : 2): [ 1 0.6472620813618819 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16180 interne); stringhe deallocate: 0 (16100 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.886979132084427


ris (2 : 2): [ -1 0.886979132084427 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16200 interne); stringhe deallocate: 0 (16120 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9049194058545701


ris (2 : 2): [ 1 0.9049194058545701 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16220 interne); stringhe deallocate: 0 (16140 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.886979107329517 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6472620813618819


ris (2 : 2): [ -1 0.6472620813618819 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16240 interne); stringhe deallocate: 0 (16160 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161448569131115e-314 0 0.6637725917824628 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 -135496626 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.2576573244926882


ris (2 : 2): [ 1 0.2576573244926882 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16260 interne); stringhe deallocate: 0 (16180 interne)


Stringhe allocate: 1 (16260 interne); stringhe deallocate: 0 (16185 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.6472620813618819 0.113020867915573 0.9049194058545701 0.3527379186381181 0.2576573244926882 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8815800842232993 0.4550096560087535 0.958984741374612 0.7439890739961507 0.8290481442200238 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6472616238089373 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6472620813618819


ris (2 : 2): [ 1 0.6472620813618819 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16295 interne); stringhe deallocate: 0 (16215 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.886979132084427


ris (2 : 2): [ -1 0.886979132084427 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16315 interne); stringhe deallocate: 0 (16235 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9049194058545701


ris (2 : 2): [ 1 0.9049194058545701 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16335 interne); stringhe deallocate: 0 (16255 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.886979111954707 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6472620813618819


ris (2 : 2): [ -1 0.6472620813618819 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16355 interne); stringhe deallocate: 0 (16275 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870043289923e-314 0 0.6637725917823971 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 -135496626 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.2576573244926882


ris (2 : 2): [ 1 0.2576573244926882 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16375 interne); stringhe deallocate: 0 (16295 interne)


Stringhe allocate: 1 (16375 interne); stringhe deallocate: 0 (16300 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.6472620813618819 0.113020867915573 0.9049194058545701 0.3527379186381181 0.2576573244926882 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8815800842232993 0.4550096560087535 0.958984741374612 0.7439890739961507 0.8290481442200238 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6472616238064202 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.643255014939851


ris (2 : 2): [ 1 0.643255014939851 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16410 interne); stringhe deallocate: 0 (16330 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8888455835387749


ris (2 : 2): [ -1 0.8888455835387749 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16430 interne); stringhe deallocate: 0 (16350 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9043120996645188


ris (2 : 2): [ 1 0.9043120996645188 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16450 interne); stringhe deallocate: 0 (16370 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8888454479666876 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.643255014939851


ris (2 : 2): [ -1 0.643255014939851 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16470 interne); stringhe deallocate: 0 (16390 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870557118195e-314 0 0.6595230190285122 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 -1970998552 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.2610570847246677


ris (2 : 2): [ 1 0.2610570847246677 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16490 interne); stringhe deallocate: 0 (16410 interne)


Stringhe allocate: 1 (16490 interne); stringhe deallocate: 0 (16415 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.643255014939851 0.1111544164612252 0.9043120996645188 0.356744985060149 0.2610570847246677 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8802348461778955 0.453862844338272 0.9587227655143049 0.7455739849847638 0.8298310647499081 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6432547657936514 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6413185492032583


ris (2 : 2): [ 1 0.6413185492032583 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16525 interne); stringhe deallocate: 0 (16445 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8897167421286371


ris (2 : 2): [ -1 0.8897167421286371 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16545 interne); stringhe deallocate: 0 (16465 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9039868448531062


ris (2 : 2): [ 1 0.9039868448531062 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16565 interne); stringhe deallocate: 0 (16485 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8897166293116889 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6413185492032583


ris (2 : 2): [ -1 0.6413185492032583 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16585 interne); stringhe deallocate: 0 (16505 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869940524268e-314 0 0.6574673740396673 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 2053418330 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.262668295649848


ris (2 : 2): [ 1 0.262668295649848 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16605 interne); stringhe deallocate: 0 (16525 interne)


Stringhe allocate: 1 (16605 interne); stringhe deallocate: 0 (16530 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.6413185492032583 0.110283257871363 0.9039868448531062 0.3586814507967417 0.262668295649848 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8795847428084671 0.4533275746770296 0.9585824591738876 0.7463399133477489 0.8302021056543317 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6413183254691273 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6328651224337648


ris (2 : 2): [ 1 0.6328651224337648 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16640 interne); stringhe deallocate: 0 (16560 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8935127322731902


ris (2 : 2): [ -1 0.8935127322731902 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16660 interne); stringhe deallocate: 0 (16580 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9025614051183352


ris (2 : 2): [ 1 0.9025614051183352 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16680 interne); stringhe deallocate: 0 (16600 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8935127299282604 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6328651224337648


ris (2 : 2): [ -1 0.6328651224337648 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16700 interne); stringhe deallocate: 0 (16620 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161449723268464e-314 0 0.6484942523962083 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 1534343629 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.2696962826845704


ris (2 : 2): [ 1 0.2696962826845704 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16720 interne); stringhe deallocate: 0 (16640 interne)


Stringhe allocate: 1 (16720 interne); stringhe deallocate: 0 (16645 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.6328651224337648 0.1064872677268098 0.9025614051183352 0.3671348775662352 0.2696962826845704 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8767467885280402 0.4509951883785992 0.9579675620973389 0.7496834888135172 0.8318205595916085 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6328649563284685 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6316965004922417


ris (2 : 2): [ 1 0.6316965004922417 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16755 interne); stringhe deallocate: 0 (16675 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8940362288645904


ris (2 : 2): [ -1 0.8940362288645904 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16775 interne); stringhe deallocate: 0 (16695 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9023641643605759


ris (2 : 2): [ 1 0.9023641643605759 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16795 interne); stringhe deallocate: 0 (16715 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8940358204337651 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6316965004922417


ris (2 : 2): [ -1 0.6316965004922417 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16815 interne); stringhe deallocate: 0 (16735 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870098625275e-314 0 0.6472535221110309 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 -1806461932 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.2706676638683342


ris (2 : 2): [ 1 0.2706676638683342 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16835 interne); stringhe deallocate: 0 (16755 interne)


Stringhe allocate: 1 (16835 interne); stringhe deallocate: 0 (16760 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.6316965004922417 0.1059637711354096 0.9023641643605759 0.3683034995077583 0.2706676638683342 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8763544629384799 0.4506735341512274 0.9578824776406875 0.7501457126854429 0.8320442560346572 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6316962284511956 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6393686235698622


ris (2 : 2): [ 1 0.6393686235698622 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16870 interne); stringhe deallocate: 0 (16790 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8905985000820774


ris (2 : 2): [ -1 0.8905985000820774 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16890 interne); stringhe deallocate: 0 (16810 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9036637502791198


ris (2 : 2): [ 1 0.9036637502791198 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16910 interne); stringhe deallocate: 0 (16830 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8905983059854687 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6393686235698622


ris (2 : 2): [ -1 0.6393686235698622 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16930 interne); stringhe deallocate: 0 (16850 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869798233362e-314 0 0.6553979007725967 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 805979749 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.2642951267092576


ris (2 : 2): [ 1 0.2642951267092576 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16950 interne); stringhe deallocate: 0 (16870 interne)


Stringhe allocate: 1 (16950 interne); stringhe deallocate: 0 (16875 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.6393686235698622 0.1094014999179226 0.9036637502791198 0.3606313764301378 0.2642951267092576 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8789301207304974 0.4527857924039414 0.9584430847028758 0.7471111654903029 0.8305767436723556 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6393685429542959 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6317049786341753


ris (2 : 2): [ 1 0.6317049786341753 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16985 interne); stringhe deallocate: 0 (16905 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8940163227174746


ris (2 : 2): [ -1 0.8940163227174746 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17005 interne); stringhe deallocate: 0 (16925 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9023471267177362


ris (2 : 2): [ 1 0.9023471267177362 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17025 interne); stringhe deallocate: 0 (16945 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8940162701102423 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6317049786341753


ris (2 : 2): [ -1 0.6317049786341753 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17045 interne); stringhe deallocate: 0 (16965 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161448569131115e-314 0 0.647261628342223 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 1543407742 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.2706421480835609


ris (2 : 2): [ 1 0.2706421480835609 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17065 interne); stringhe deallocate: 0 (16985 interne)


Stringhe allocate: 1 (17065 interne); stringhe deallocate: 0 (16990 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.6317049786341753 0.1059836772825255 0.9023471267177362 0.3682950213658247 0.2706421480835609 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8763573091900471 0.4506857651694913 0.9578751280512816 0.7501423593344129 0.8320383800815393 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6317048115225941 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6317049786341753


ris (2 : 2): [ 1 0.6317049786341753 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17100 interne); stringhe deallocate: 0 (17020 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8940163227174746


ris (2 : 2): [ -1 0.8940163227174746 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17120 interne); stringhe deallocate: 0 (17040 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9023471267177362


ris (2 : 2): [ 1 0.9023471267177362 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17140 interne); stringhe deallocate: 0 (17060 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8940162699672065 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6317049786341753


ris (2 : 2): [ -1 0.6317049786341753 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17160 interne); stringhe deallocate: 0 (17080 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870043289923e-314 0 0.6472616283425214 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 1543407742 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.2706421480835609


ris (2 : 2): [ 1 0.2706421480835609 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17180 interne); stringhe deallocate: 0 (17100 interne)


Stringhe allocate: 1 (17180 interne); stringhe deallocate: 0 (17105 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.6317049786341753 0.1059836772825255 0.9023471267177362 0.3682950213658247 0.2706421480835609 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8763573091900471 0.4506857651694913 0.9578751280512816 0.7501423593344129 0.8320383800815393 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6317048115225603 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6279320430746658


ris (2 : 2): [ 1 0.6279320430746658 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17215 interne); stringhe deallocate: 0 (17135 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8956716015389878


ris (2 : 2): [ -1 0.8956716015389878 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17235 interne); stringhe deallocate: 0 (17155 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9016708526892004


ris (2 : 2): [ 1 0.9016708526892004 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17255 interne); stringhe deallocate: 0 (17175 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8956713717434459 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6279320430746658


ris (2 : 2): [ -1 0.6279320430746658 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17275 interne); stringhe deallocate: 0 (17195 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870557118195e-314 0 0.6432547657020749 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 -257706106 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.2737388096145347


ris (2 : 2): [ 1 0.2737388096145347 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17295 interne); stringhe deallocate: 0 (17215 interne)


Stringhe allocate: 1 (17295 interne); stringhe deallocate: 0 (17220 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.6279320430746658 0.1043283984610122 0.9016708526892004 0.3720679569253342 0.2737388096145347 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8750906727226294 0.4496687051940013 0.957583401285885 0.751634664776299 0.8327515009257379 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6279315990871819 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6261101952785481


ris (2 : 2): [ 1 0.6261101952785481 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17330 interne); stringhe deallocate: 0 (17250 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8964424642572648


ris (2 : 2): [ -1 0.8964424642572648 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17350 interne); stringhe deallocate: 0 (17270 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9013154338055056


ris (2 : 2): [ 1 0.9013154338055056 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17370 interne); stringhe deallocate: 0 (17290 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8964424175712162 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6261101952785481


ris (2 : 2): [ -1 0.6261101952785481 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17390 interne); stringhe deallocate: 0 (17310 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869940524268e-314 0 0.6413183300026333 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 1066220467 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.2752052385269576


ris (2 : 2): [ 1 0.2752052385269576 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17410 interne); stringhe deallocate: 0 (17330 interne)


Stringhe allocate: 1 (17410 interne); stringhe deallocate: 0 (17335 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.6261101952785481 0.1035575357427352 0.9013154338055056 0.373889804721452 0.2752052385269576 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8744790484793181 0.4491950607498344 0.9574300829608776 0.752355258419512 0.8330892004171174 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.626110085770458 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6181574507621195


ris (2 : 2): [ 1 0.6181574507621195 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17445 interne); stringhe deallocate: 0 (17365 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8998010842981822


ris (2 : 2): [ -1 0.8998010842981822 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17465 interne); stringhe deallocate: 0 (17385 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8997588730415789


ris (2 : 2): [ 1 0.8997588730415789 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17485 interne); stringhe deallocate: 0 (17405 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8998007863016309 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6181574507621195


ris (2 : 2): [ -1 0.6181574507621195 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17505 interne); stringhe deallocate: 0 (17425 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161449723268464e-314 0 0.632864960862177 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 576301634 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.2816014222794594


ris (2 : 2): [ 1 0.2816014222794594 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17525 interne); stringhe deallocate: 0 (17445 interne)


Stringhe allocate: 1 (17525 interne); stringhe deallocate: 0 (17450 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.6181574507621195 0.1001989157018178 0.8997588730415789 0.3818425492378805 0.2816014222794594 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8718091814588823 0.4471314096162007 0.9567586237333412 0.7555007995326868 0.8345621582820989 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6181573910208851 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6170581037819268


ris (2 : 2): [ 1 0.6170581037819268 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17560 interne); stringhe deallocate: 0 (17480 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9002642354735884


ris (2 : 2): [ -1 0.9002642354735884 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17580 interne); stringhe deallocate: 0 (17500 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.899543525076414


ris (2 : 2): [ 1 0.899543525076414 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17600 interne); stringhe deallocate: 0 (17520 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9002637905570197 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6170581037819268


ris (2 : 2): [ -1 0.6170581037819268 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17620 interne); stringhe deallocate: 0 (17540 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870098625275e-314 0 0.6316962329870286 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 -1561381779 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.2824854212944872


ris (2 : 2): [ 1 0.2824854212944872 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17640 interne); stringhe deallocate: 0 (17560 interne)


Stringhe allocate: 1 (17640 interne); stringhe deallocate: 0 (17565 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.6170581037819268 0.09973576452641164 0.899543525076414 0.3829418962180732 0.2824854212944872 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8714401126122258 0.4468468336783076 0.9566657283053617 0.7559356231481943 0.8347657317490607 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6170578045340349 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.624275467672937


ris (2 : 2): [ 1 0.624275467672937 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17675 interne); stringhe deallocate: 0 (17595 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8972229598249204


ris (2 : 2): [ -1 0.8972229598249204 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17695 interne); stringhe deallocate: 0 (17615 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9009615247382461


ris (2 : 2): [ 1 0.9009615247382461 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17715 interne); stringhe deallocate: 0 (17635 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8972225230189643 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.624275467672937


ris (2 : 2): [ -1 0.624275467672937 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17735 interne); stringhe deallocate: 0 (17655 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869798233362e-314 0 0.6393685428629841 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 -1951713734 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.2766860570653091


ris (2 : 2): [ 1 0.2766860570653091 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17755 interne); stringhe deallocate: 0 (17675 interne)


Stringhe allocate: 1 (17755 interne); stringhe deallocate: 0 (17680 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.624275467672937 0.1027770401750796 0.9009615247382461 0.375724532327063 0.2766860570653091 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.873863100272308 0.448715497553234 0.9572774159308282 0.7530809464009384 0.8334302136520517 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6242752117580803 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6170668500432174


ris (2 : 2): [ 1 0.6170668500432174 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17790 interne); stringhe deallocate: 0 (17710 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9002456092866394


ris (2 : 2): [ -1 0.9002456092866394 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17810 interne); stringhe deallocate: 0 (17730 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8995284577142129


ris (2 : 2): [ 1 0.8995284577142129 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17830 interne); stringhe deallocate: 0 (17750 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9002451937649303 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6170668500432174


ris (2 : 2): [ -1 0.6170668500432174 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17850 interne); stringhe deallocate: 0 (17770 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161448569131115e-314 0 0.6317048160557999 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 -91474929 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.2824616076709955


ris (2 : 2): [ 1 0.2824616076709955 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17870 interne); stringhe deallocate: 0 (17790 interne)


Stringhe allocate: 1 (17870 interne); stringhe deallocate: 0 (17795 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.6170668500432174 0.09975439071336056 0.8995284577142129 0.3829331499567826 0.2824616076709955 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8714430488758671 0.4468582782452262 0.956659228643017 0.7559321637481822 0.8347602477815305 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6170663922279775 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6170668500432174


ris (2 : 2): [ 1 0.6170668500432174 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17905 interne); stringhe deallocate: 0 (17825 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9002456092866394


ris (2 : 2): [ -1 0.9002456092866394 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17925 interne); stringhe deallocate: 0 (17845 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8995284577142129


ris (2 : 2): [ 1 0.8995284577142129 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17945 interne); stringhe deallocate: 0 (17865 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9002451939078862 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6170668500432174


ris (2 : 2): [ -1 0.6170668500432174 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17965 interne); stringhe deallocate: 0 (17885 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870043289923e-314 0 0.6317048160558461 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 -91474929 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.2824616076709955


ris (2 : 2): [ 1 0.2824616076709955 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17985 interne); stringhe deallocate: 0 (17905 interne)


Stringhe allocate: 1 (17985 interne); stringhe deallocate: 0 (17910 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.6170668500432174 0.09975439071336056 0.8995284577142129 0.3829331499567826 0.2824616076709955 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8714430488758671 0.4468582782452262 0.956659228643017 0.7559321637481822 0.8347602477815305 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6170663876029163 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6135192378269304


ris (2 : 2): [ 1 0.6135192378269304 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18020 interne); stringhe deallocate: 0 (17940 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9017079020570318


ris (2 : 2): [ -1 0.9017079020570318 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18040 interne); stringhe deallocate: 0 (17960 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8987976548696779


ris (2 : 2): [ 1 0.8987976548696779 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18060 interne); stringhe deallocate: 0 (17980 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9017076580972852 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6135192378269304


ris (2 : 2): [ -1 0.6135192378269304 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18080 interne); stringhe deallocate: 0 (18000 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870557118195e-314 0 0.6279316036232832 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 415096661 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.2852784170427475


ris (2 : 2): [ 1 0.2852784170427475 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18100 interne); stringhe deallocate: 0 (18020 interne)


Stringhe allocate: 1 (18100 interne); stringhe deallocate: 0 (18025 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.6135192378269304 0.09829209794296823 0.8987976548696779 0.3864807621730696 0.2852784170427475 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8702520571574743 0.4459597955063153 0.9563439795857076 0.7573353472726724 0.8354089223160375 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6135191959830095 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6118075487114674


ris (2 : 2): [ 1 0.6118075487114674 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18135 interne); stringhe deallocate: 0 (18055 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9023872134878758


ris (2 : 2): [ -1 0.9023872134878758 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18155 interne); stringhe deallocate: 0 (18075 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8984187821905926


ris (2 : 2): [ 1 0.8984187821905926 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18175 interne); stringhe deallocate: 0 (18095 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9023871464224982 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6118075487114674


ris (2 : 2): [ -1 0.6118075487114674 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18195 interne); stringhe deallocate: 0 (18115 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869940524268e-314 0 0.6261100856788815 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 1822764154 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.2866112334791252


ris (2 : 2): [ 1 0.2866112334791252 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18215 interne); stringhe deallocate: 0 (18135 interne)


Stringhe allocate: 1 (18215 interne); stringhe deallocate: 0 (18140 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.6118075487114674 0.09761278651212424 0.8984187821905926 0.3881924512885326 0.2866112334791252 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8696774149934801 0.4455424033073547 0.9561805439124407 0.7580123699627061 0.8357158525932941 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6118073505825432 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6043359715575606


ris (2 : 2): [ 1 0.6043359715575606 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18250 interne); stringhe deallocate: 0 (18170 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9053466142712128


ris (2 : 2): [ -1 0.9053466142712128 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18270 interne); stringhe deallocate: 0 (18190 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8967603484492949


ris (2 : 2): [ 1 0.8967603484492949 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18290 interne); stringhe deallocate: 0 (18210 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.905346397683271 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6043359715575606


ris (2 : 2): [ -1 0.6043359715575606 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18310 interne); stringhe deallocate: 0 (18230 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161449723268464e-314 0 0.6181573955543911 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 1681152769 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.2924243768917343


ris (2 : 2): [ 1 0.2924243768917343 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18330 interne); stringhe deallocate: 0 (18250 interne)


Stringhe allocate: 1 (18330 interne); stringhe deallocate: 0 (18255 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.6043359715575606 0.09465338572878723 0.8967603484492949 0.3956640284424394 0.2924243768917343 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8671690837635947 0.4437240461526282 0.955465139371443 0.760967595428496 0.8370545438568962 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6043357937782705 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6033031914876565


ris (2 : 2): [ 1 0.6033031914876565 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18365 interne); stringhe deallocate: 0 (18285 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9057546833231096


ris (2 : 2): [ -1 0.9057546833231096 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18385 interne); stringhe deallocate: 0 (18305 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8965309364874695


ris (2 : 2): [ 1 0.8965309364874695 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18405 interne); stringhe deallocate: 0 (18325 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9057545702908092 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6033031914876565


ris (2 : 2): [ -1 0.6033031914876565 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18425 interne); stringhe deallocate: 0 (18345 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870098625275e-314 0 0.6170578090677434 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 2124439954 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.293227744999813


ris (2 : 2): [ 1 0.293227744999813 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18445 interne); stringhe deallocate: 0 (18365 interne)


Stringhe allocate: 1 (18445 interne); stringhe deallocate: 0 (18370 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.6033031914876565 0.0942453166768904 0.8965309364874695 0.3966968085123435 0.293227744999813 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8668223625226063 0.4434733145571251 0.9553661771065287 0.7613760899003151 0.8372395490754856 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6033029598685413 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6100835592322784


ris (2 : 2): [ 1 0.6100835592322784 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18480 interne); stringhe deallocate: 0 (18400 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9030752606480205


ris (2 : 2): [ -1 0.9030752606480205 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18500 interne); stringhe deallocate: 0 (18420 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8980408524499601


ris (2 : 2): [ 1 0.8980408524499601 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18520 interne); stringhe deallocate: 0 (18440 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9030752224418217 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6100835592322784


ris (2 : 2): [ -1 0.6100835592322784 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18540 interne); stringhe deallocate: 0 (18460 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869798233362e-314 0 0.6242752162939134 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 -187212938 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.2879572932176817


ris (2 : 2): [ 1 0.2879572932176817 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18560 interne); stringhe deallocate: 0 (18480 interne)


Stringhe allocate: 1 (18560 interne); stringhe deallocate: 0 (18485 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.6100835592322784 0.09692473935197954 0.8980408524499601 0.3899164407677216 0.2879572932176817 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.869098643395253 0.4451196435772489 0.9560175149979331 0.7586942578033461 0.8360258326306665 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6100831074209978 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6033121226560237


ris (2 : 2): [ 1 0.6033121226560237 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18595 interne); stringhe deallocate: 0 (18515 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.905737290636449


ris (2 : 2): [ -1 0.905737290636449 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18615 interne); stringhe deallocate: 0 (18535 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8965176521120075


ris (2 : 2): [ 1 0.8965176521120075 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18635 interne); stringhe deallocate: 0 (18555 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9057369320841016 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6033121226560237


ris (2 : 2): [ -1 0.6033121226560237 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18655 interne); stringhe deallocate: 0 (18575 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161448569131115e-314 0 0.6170663921366657 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 964874391 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.2932055294559838


ris (2 : 2): [ 1 0.2932055294559838 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18675 interne); stringhe deallocate: 0 (18595 interne)


Stringhe allocate: 1 (18675 interne); stringhe deallocate: 0 (18600 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.6033121226560237 0.09426270936355097 0.8965176521120075 0.3966878773439763 0.2932055294559838 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8668253608625917 0.4434840012192384 0.9553604465776007 0.7613725573641914 0.837234433124901 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6033120197719963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6033121226560237


ris (2 : 2): [ 1 0.6033121226560237 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18710 interne); stringhe deallocate: 0 (18630 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.905737290636449


ris (2 : 2): [ -1 0.905737290636449 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18730 interne); stringhe deallocate: 0 (18650 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8965176521120075


ris (2 : 2): [ 1 0.8965176521120075 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18750 interne); stringhe deallocate: 0 (18670 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9057369274588751 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6033121226560237


ris (2 : 2): [ -1 0.6033121226560237 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18770 interne); stringhe deallocate: 0 (18690 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870043289923e-314 0 0.6170663921361221 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 964874391 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.2932055294559838


ris (2 : 2): [ 1 0.2932055294559838 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18790 interne); stringhe deallocate: 0 (18710 interne)


Stringhe allocate: 1 (18790 interne); stringhe deallocate: 0 (18715 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.6033121226560237 0.09426270936355097 0.8965176521120075 0.3966878773439763 0.2932055294559838 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8668253608625917 0.4434840012192384 0.9553604465776007 0.7613725573641914 0.837234433124901 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6033120243996084 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5999808674194291


ris (2 : 2): [ 1 0.5999808674194291 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18825 interne); stringhe deallocate: 0 (18745 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9070235683652081


ris (2 : 2): [ -1 0.9070235683652081 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18845 interne); stringhe deallocate: 0 (18765 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8957450370138712


ris (2 : 2): [ 1 0.8957450370138712 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18865 interne); stringhe deallocate: 0 (18785 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9070234339686714 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5999808674194291


ris (2 : 2): [ -1 0.5999808674194291 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18885 interne); stringhe deallocate: 0 (18805 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870557118195e-314 0 0.6135192005162953 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 326719840 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.2957641695944421


ris (2 : 2): [ 1 0.2957641695944421 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18905 interne); stringhe deallocate: 0 (18825 interne)


Stringhe allocate: 1 (18905 interne); stringhe deallocate: 0 (18830 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5999808674194291 0.09297643163479186 0.8957450370138712 0.4000191325805709 0.2957641695944421 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8657070037376438 0.4426936681476842 0.9550271608177381 0.7626901654281171 0.8378236546453312 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5999808353873402 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5983748195403916


ris (2 : 2): [ 1 0.5983748195403916 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18940 interne); stringhe deallocate: 0 (18860 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9076194790866573


ris (2 : 2): [ -1 0.9076194790866573 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18960 interne); stringhe deallocate: 0 (18880 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8953486084473243


ris (2 : 2): [ 1 0.8953486084473243 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18980 interne); stringhe deallocate: 0 (18900 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9076194804165416 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5983748195403916


ris (2 : 2): [ -1 0.5983748195403916 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19000 interne); stringhe deallocate: 0 (18920 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869940524268e-314 0 0.6118073551186445 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 -216686377 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.2969737889069327


ris (2 : 2): [ 1 0.2969737889069327 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19020 interne); stringhe deallocate: 0 (18940 interne)


Stringhe allocate: 1 (19020 interne); stringhe deallocate: 0 (18945 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5983748195403916 0.0923805209133427 0.8953486084473243 0.4016251804596084 0.2969737889069327 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8651678270727043 0.4423275201997529 0.9548561519980147 0.7633254039451854 0.8381022142284997 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5983743710013201 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5913646458440455


ris (2 : 2): [ 1 0.5913646458440455 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19055 interne); stringhe deallocate: 0 (18975 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9102152187781596


ris (2 : 2): [ -1 0.9102152187781596 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19075 interne); stringhe deallocate: 0 (18995 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8936140063902092


ris (2 : 2): [ 1 0.8936140063902092 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19095 interne); stringhe deallocate: 0 (19015 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9102149052115971 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5913646458440455


ris (2 : 2): [ -1 0.5913646458440455 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19115 interne); stringhe deallocate: 0 (19035 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161449723268464e-314 0 0.604335793686694 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 -1933761215 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3022493605461637


ris (2 : 2): [ 1 0.3022493605461637 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19135 interne); stringhe deallocate: 0 (19055 interne)


Stringhe allocate: 1 (19135 interne); stringhe deallocate: 0 (19060 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5913646458440455 0.08978478122184042 0.8936140063902092 0.4086353541559545 0.3022493605461637 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8628143965656967 0.4407326088695854 0.9541078904560654 0.7660981309612239 0.8393171097097684 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5913643879360588 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5903956915329803


ris (2 : 2): [ 1 0.5903956915329803 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19170 interne); stringhe deallocate: 0 (19090 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9105731116300275


ris (2 : 2): [ -1 0.9105731116300275 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19190 interne); stringhe deallocate: 0 (19110 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8933740834887145


ris (2 : 2): [ 1 0.8933740834887145 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19210 interne); stringhe deallocate: 0 (19130 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9105730145425977 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5903956915329803


ris (2 : 2): [ -1 0.5903956915329803 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19230 interne); stringhe deallocate: 0 (19150 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870098625275e-314 0 0.6033029644020473 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 -2124764247 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3029783919557342


ris (2 : 2): [ 1 0.3029783919557342 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19250 interne); stringhe deallocate: 0 (19170 interne)


Stringhe allocate: 1 (19250 interne); stringhe deallocate: 0 (19175 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5903956915329803 0.08942688836997248 0.8933740834887145 0.4096043084670197 0.3029783919557342 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8624891026807896 0.4405127072491345 0.9540043940492181 0.7664813804942559 0.8394849961542636 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5903954594582022 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5967570468288943


ris (2 : 2): [ 1 0.5967570468288943 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19285 interne); stringhe deallocate: 0 (19205 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.90822329434344


ris (2 : 2): [ -1 0.90822329434344 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19305 interne); stringhe deallocate: 0 (19225 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.894952631148293


ris (2 : 2): [ 1 0.894952631148293 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19325 interne); stringhe deallocate: 0 (19245 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9082231564017462 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5967570468288943


ris (2 : 2): [ -1 0.5967570468288943 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19345 interne); stringhe deallocate: 0 (19265 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869798233362e-314 0 0.6100831119547063 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 1006187612 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.2981955843193987


ris (2 : 2): [ 1 0.2981955843193987 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19365 interne); stringhe deallocate: 0 (19285 interne)


Stringhe allocate: 1 (19365 interne); stringhe deallocate: 0 (19290 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5967570468288943 0.09177670565656004 0.894952631148293 0.4032429531711057 0.2981955843193987 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8646247141888357 0.4419565154347053 0.9546853378431861 0.7639652799735521 0.8383835778090076 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5967569393607288 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5904047334155217


ris (2 : 2): [ 1 0.5904047334155217 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19400 interne); stringhe deallocate: 0 (19320 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9105569029507368


ris (2 : 2): [ -1 0.9105569029507368 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19420 interne); stringhe deallocate: 0 (19340 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8933624107124583


ris (2 : 2): [ 1 0.8933624107124583 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19440 interne); stringhe deallocate: 0 (19360 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9105567973109565 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5904047334155217


ris (2 : 2): [ -1 0.5904047334155217 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19460 interne); stringhe deallocate: 0 (19380 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161448569131115e-314 0 0.6033120243078294 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 2007862113 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3029576772969366


ris (2 : 2): [ 1 0.3029576772969366 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19480 interne); stringhe deallocate: 0 (19400 interne)


Stringhe allocate: 1 (19480 interne); stringhe deallocate: 0 (19405 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5904047334155217 0.08944309704926323 0.8933624107124583 0.4095952665844783 0.3029576772969366 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8624921381893427 0.4405226664165859 0.9539993587216487 0.7664778041674651 0.8394802258379661 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.590404514739113 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5904047334155217


ris (2 : 2): [ 1 0.5904047334155217 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19515 interne); stringhe deallocate: 0 (19435 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9105569029507368


ris (2 : 2): [ -1 0.9105569029507368 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19535 interne); stringhe deallocate: 0 (19455 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8933624107124583


ris (2 : 2): [ 1 0.8933624107124583 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19555 interne); stringhe deallocate: 0 (19475 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9105567973110729 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5904047334155217


ris (2 : 2): [ -1 0.5904047334155217 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19575 interne); stringhe deallocate: 0 (19495 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870043289923e-314 0 0.6033120243082966 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 2007862113 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3029576772969366


ris (2 : 2): [ 1 0.3029576772969366 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19595 interne); stringhe deallocate: 0 (19515 interne)


Stringhe allocate: 1 (19595 interne); stringhe deallocate: 0 (19520 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5904047334155217 0.08944309704926323 0.8933624107124583 0.4095952665844783 0.3029576772969366 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8624921381893427 0.4405226664165859 0.9539993587216487 0.7664778041674651 0.8394802258379661 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5904045147365959 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5872807811593519


ris (2 : 2): [ 1 0.5872807811593519 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19630 interne); stringhe deallocate: 0 (19550 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9116829712605998


ris (2 : 2): [ -1 0.9116829712605998 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19650 interne); stringhe deallocate: 0 (19570 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8925591436814773


ris (2 : 2): [ 1 0.8925591436814773 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19670 interne); stringhe deallocate: 0 (19590 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9116826099845463 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5872807811593519


ris (2 : 2): [ -1 0.5872807811593519 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19690 interne); stringhe deallocate: 0 (19610 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870557118195e-314 0 0.599980839920546 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 278184590 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3052783625221254


ris (2 : 2): [ 1 0.3052783625221254 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19710 interne); stringhe deallocate: 0 (19630 interne)


Stringhe allocate: 1 (19710 interne); stringhe deallocate: 0 (19635 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5872807811593519 0.08831702873940017 0.8925591436814773 0.4127192188406481 0.3052783625221254 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8614433760815026 0.4398307714966821 0.9536528505270265 0.7677134178901338 0.8400146494391096 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5872807591408193 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5857758320996098


ris (2 : 2): [ 1 0.5857758320996098 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19745 interne); stringhe deallocate: 0 (19665 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9122030635647683


ris (2 : 2): [ -1 0.9122030635647683 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19765 interne); stringhe deallocate: 0 (19685 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8921503237096952


ris (2 : 2): [ 1 0.8921503237096952 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19785 interne); stringhe deallocate: 0 (19705 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9122028439493359 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5857758320996098


ris (2 : 2): [ -1 0.5857758320996098 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19805 interne); stringhe deallocate: 0 (19725 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869940524268e-314 0 0.5983743755346058 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 -181078566 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3063744916100853


ris (2 : 2): [ 1 0.3063744916100853 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19825 interne); stringhe deallocate: 0 (19745 interne)


Stringhe allocate: 1 (19825 interne); stringhe deallocate: 0 (19750 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5857758320996098 0.08779693643523168 0.8921503237096952 0.4142241679003902 0.3063744916100853 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8609381399515425 0.4395112089799294 0.9534764963821605 0.7683086688919576 0.8402670737007664 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5857753796073109 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5792071935028214


ris (2 : 2): [ 1 0.5792071935028214 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19860 interne); stringhe deallocate: 0 (19780 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9144682200114384


ris (2 : 2): [ -1 0.9144682200114384 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19880 interne); stringhe deallocate: 0 (19800 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8903620590960489


ris (2 : 2): [ 1 0.8903620590960489 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19900 interne); stringhe deallocate: 0 (19820 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9144678158255744 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5792071935028214


ris (2 : 2): [ -1 0.5792071935028214 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19920 interne); stringhe deallocate: 0 (19840 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161449723268464e-314 0 0.5913643924721601 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 -2043249822 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3111548655932276


ris (2 : 2): [ 1 0.3111548655932276 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19940 interne); stringhe deallocate: 0 (19860 interne)


Stringhe allocate: 1 (19940 interne); stringhe deallocate: 0 (19865 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5792071935028214 0.08553177998856165 0.8903620590960489 0.4207928064971787 0.3111548655932276 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8587329400331371 0.4381194193127209 0.9527050862297677 0.7709067559700854 0.8413679316073686 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5792069477530291 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5782993105286954


ris (2 : 2): [ 1 0.5782993105286954 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19975 interne); stringhe deallocate: 0 (19895 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9147805006360866


ris (2 : 2): [ -1 0.9147805006360866 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19995 interne); stringhe deallocate: 0 (19915 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8901147358525856


ris (2 : 2): [ 1 0.8901147358525856 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20015 interne); stringhe deallocate: 0 (19935 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9147801440211616 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5782993105286954


ris (2 : 2): [ -1 0.5782993105286954 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20035 interne); stringhe deallocate: 0 (19955 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870098625275e-314 0 0.5903954593666256 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 -1908366177 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3118154253238902


ris (2 : 2): [ 1 0.3118154253238902 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20055 interne); stringhe deallocate: 0 (19975 interne)


Stringhe allocate: 1 (20055 interne); stringhe deallocate: 0 (19980 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5782993105286954 0.08521949936391338 0.8901147358525856 0.4217006894713046 0.3118154253238902 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8584281487996168 0.437927543406183 0.9525983975107299 0.7712658500180791 0.8415200499154439 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5782990498012932 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5842597269835157


ris (2 : 2): [ 1 0.5842597269835157 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20090 interne); stringhe deallocate: 0 (20010 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9127302916716378


ris (2 : 2): [ -1 0.9127302916716378 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20110 interne); stringhe deallocate: 0 (20030 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8917415309283622


ris (2 : 2): [ 1 0.8917415309283622 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20130 interne); stringhe deallocate: 0 (20050 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9127302210781627 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5842597269835157


ris (2 : 2): [ -1 0.5842597269835157 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20150 interne); stringhe deallocate: 0 (20070 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869798233362e-314 0 0.5967569438942348 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 1954050922 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3074818039448465


ris (2 : 2): [ 1 0.3074818039448465 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20170 interne); stringhe deallocate: 0 (20090 interne)


Stringhe allocate: 1 (20170 interne); stringhe deallocate: 0 (20095 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5842597269835157 0.08726970832836223 0.8917415309283622 0.4157402730164843 0.3074818039448465 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8604291585501392 0.439187261981707 0.9533001539665366 0.7689083324376325 0.8405220733185994 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5842595189064443 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5783083973552781


ris (2 : 2): [ 1 0.5783083973552781 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20205 interne); stringhe deallocate: 0 (20125 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9147654243845994


ris (2 : 2): [ -1 0.9147654243845994 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20225 interne); stringhe deallocate: 0 (20145 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8901045179112689


ris (2 : 2): [ 1 0.8901045179112689 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20245 interne); stringhe deallocate: 0 (20165 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9147653622123295 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5783083973552781


ris (2 : 2): [ -1 0.5783083973552781 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20265 interne); stringhe deallocate: 0 (20185 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161448569131115e-314 0 0.5904045192728216 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 -1665887178 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3117961205559908


ris (2 : 2): [ 1 0.3117961205559908 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20285 interne); stringhe deallocate: 0 (20205 interne)


Stringhe allocate: 1 (20285 interne); stringhe deallocate: 0 (20210 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5783083973552781 0.0852345756154006 0.8901045179112689 0.4216916026447219 0.3117961205559908 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8584311993966231 0.4379368067712239 0.9525939897605524 0.7712622559146165 0.8415156042786691 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5783081097098499 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5783083973552781


ris (2 : 2): [ 1 0.5783083973552781 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20320 interne); stringhe deallocate: 0 (20240 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9147654243845994


ris (2 : 2): [ -1 0.9147654243845994 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20340 interne); stringhe deallocate: 0 (20260 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8901045179112689


ris (2 : 2): [ 1 0.8901045179112689 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20360 interne); stringhe deallocate: 0 (20280 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9147653668375195 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5783083973552781


ris (2 : 2): [ -1 0.5783083973552781 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20380 interne); stringhe deallocate: 0 (20300 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870043289923e-314 0 0.590404519272429 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 -1665887178 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3117961205559908


ris (2 : 2): [ 1 0.3117961205559908 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20400 interne); stringhe deallocate: 0 (20320 interne)


Stringhe allocate: 1 (20400 interne); stringhe deallocate: 0 (20325 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5783083973552781 0.0852345756154006 0.8901045179112689 0.4216916026447219 0.3117961205559908 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8584311993966231 0.4379368067712239 0.9525939897605524 0.7712622559146165 0.8415156042786691 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5783081097098162 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5753826694420761


ris (2 : 2): [ 1 0.5753826694420761 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20435 interne); stringhe deallocate: 0 (20355 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9157459755049614


ris (2 : 2): [ -1 0.9157459755049614 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20455 interne); stringhe deallocate: 0 (20375 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8892803550372442


ris (2 : 2): [ 1 0.8892803550372442 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20475 interne); stringhe deallocate: 0 (20395 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9157457394095587 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5753826694420761


ris (2 : 2): [ -1 0.5753826694420761 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20495 interne); stringhe deallocate: 0 (20415 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870557118195e-314 0 0.5872807590495075 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 -360838290 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3138976855951682


ris (2 : 2): [ 1 0.3138976855951682 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20515 interne); stringhe deallocate: 0 (20435 interne)


Stringhe allocate: 1 (20515 interne); stringhe deallocate: 0 (20440 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5753826694420761 0.0842540244950386 0.8892803550372442 0.4246173305579239 0.3138976855951682 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8574489844581084 0.4373343225942498 0.9522384676507951 0.7724194661604541 0.8419995673530595 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5753822369045647 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5739742810841163


ris (2 : 2): [ 1 0.5739742810841163 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20550 interne); stringhe deallocate: 0 (20470 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9161972897907492


ris (2 : 2): [ -1 0.9161972897907492 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20570 interne); stringhe deallocate: 0 (20490 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8888636468913472


ris (2 : 2): [ 1 0.8888636468913472 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20590 interne); stringhe deallocate: 0 (20510 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9161968272181831 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5739742810841163


ris (2 : 2): [ -1 0.5739742810841163 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20610 interne); stringhe deallocate: 0 (20530 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869940524268e-314 0 0.5857753841405167 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 1337985893 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3148893658072309


ris (2 : 2): [ 1 0.3148893658072309 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20630 interne); stringhe deallocate: 0 (20550 interne)


Stringhe allocate: 1 (20630 interne); stringhe deallocate: 0 (20555 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5739742810841163 0.08380271020925079 0.8888636468913472 0.4260257189158837 0.3148893658072309 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8569761653425043 0.4370570196465675 0.9520587107558274 0.7729765246041307 0.8422279383981116 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5739741414040029 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5678273321718467


ris (2 : 2): [ 1 0.5678273321718467 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20665 interne); stringhe deallocate: 0 (20585 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9181625758045188


ris (2 : 2): [ -1 0.9181625758045188 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20685 interne); stringhe deallocate: 0 (20605 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8870413415177348


ris (2 : 2): [ 1 0.8870413415177348 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20705 interne); stringhe deallocate: 0 (20625 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9181623499844127 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5678273321718467


ris (2 : 2): [ -1 0.5678273321718467 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20725 interne); stringhe deallocate: 0 (20645 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161449723268464e-314 0 0.5792069522863148 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 967737103 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3192140093458882


ris (2 : 2): [ 1 0.3192140093458882 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20745 interne); stringhe deallocate: 0 (20665 interne)


Stringhe allocate: 1 (20745 interne); stringhe deallocate: 0 (20670 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5678273321718467 0.08183742419548123 0.8870413415177348 0.4321726678281533 0.3192140093458882 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8549125335807559 0.435849480639231 0.951272616318104 0.775407821181581 0.8432238475151714 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5678272289725452 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5669777703169312


ris (2 : 2): [ 1 0.5669777703169312 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20780 interne); stringhe deallocate: 0 (20700 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9184334820604646


ris (2 : 2): [ -1 0.9184334820604646 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20800 interne); stringhe deallocate: 0 (20720 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8867893296684269


ris (2 : 2): [ 1 0.8867893296684269 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20820 interne); stringhe deallocate: 0 (20740 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.918433193633228 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5669777703169312


ris (2 : 2): [ -1 0.5669777703169312 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20840 interne); stringhe deallocate: 0 (20760 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870098625275e-314 0 0.5782990543373945 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 -1868415172 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3198115593514957


ris (2 : 2): [ 1 0.3198115593514957 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20860 interne); stringhe deallocate: 0 (20780 interne)


Stringhe allocate: 1 (20860 interne); stringhe deallocate: 0 (20785 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5669777703169312 0.0815665179395354 0.8867893296684269 0.4330222296830688 0.3198115593514957 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8546273217053368 0.4356830265612525 0.9511639050582625 0.7757438475354141 0.843361455503706 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5669775051565935 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5725552962469129


ris (2 : 2): [ 1 0.5725552962469129 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20895 interne); stringhe deallocate: 0 (20815 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.916655030175525


ris (2 : 2): [ -1 0.916655030175525 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20915 interne); stringhe deallocate: 0 (20835 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8884466025046127


ris (2 : 2): [ 1 0.8884466025046127 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20935 interne); stringhe deallocate: 0 (20855 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9166545956583203 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5725552962469129


ris (2 : 2): [ -1 0.5725552962469129 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20955 interne); stringhe deallocate: 0 (20875 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869798233362e-314 0 0.5842595188148678 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 2081490642 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3158913062576998


ris (2 : 2): [ 1 0.3158913062576998 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20975 interne); stringhe deallocate: 0 (20895 interne)


Stringhe allocate: 1 (20975 interne); stringhe deallocate: 0 (20900 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5725552962469129 0.08334496982447504 0.8884466025046127 0.4274447037530871 0.3158913062576998 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8564997888146879 0.4367757682836732 0.9518788088154375 0.7735377742626824 0.8424586722425206 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5725550693935784 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5669868441484958


ris (2 : 2): [ 1 0.5669868441484958 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21010 interne); stringhe deallocate: 0 (20930 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9184194853715869


ris (2 : 2): [ -1 0.9184194853715869 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21030 interne); stringhe deallocate: 0 (20950 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8867804232450508


ris (2 : 2): [ 1 0.8867804232450508 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21050 interne); stringhe deallocate: 0 (20970 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9184193653556037 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5669868441484958


ris (2 : 2): [ -1 0.5669868441484958 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21070 interne); stringhe deallocate: 0 (20990 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161448569131115e-314 0 0.5783081142433559 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 -1742984890 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.319793579096555


ris (2 : 2): [ 1 0.319793579096555 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21090 interne); stringhe deallocate: 0 (21010 interne)


Stringhe allocate: 1 (21090 interne); stringhe deallocate: 0 (21015 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5669868441484958 0.08158051462841309 0.8867804232450508 0.4330131558515042 0.319793579096555 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.854630367939702 0.4356916266060678 0.9511600630623066 0.775740258571858 0.8433573148850255 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5669865696876943 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5669868441484958


ris (2 : 2): [ 1 0.5669868441484958 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21125 interne); stringhe deallocate: 0 (21045 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9184194853715869


ris (2 : 2): [ -1 0.9184194853715869 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21145 interne); stringhe deallocate: 0 (21065 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8867804232450508


ris (2 : 2): [ 1 0.8867804232450508 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21165 interne); stringhe deallocate: 0 (21085 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9184193652125678 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5669868441484958


ris (2 : 2): [ -1 0.5669868441484958 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21185 interne); stringhe deallocate: 0 (21105 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870043289923e-314 0 0.5783081142435247 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 -1742984890 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.319793579096555


ris (2 : 2): [ 1 0.319793579096555 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21205 interne); stringhe deallocate: 0 (21125 interne)


Stringhe allocate: 1 (21205 interne); stringhe deallocate: 0 (21130 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5669868441484958 0.08158051462841309 0.8867804232450508 0.4330131558515042 0.319793579096555 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.854630367939702 0.4356916266060678 0.9511600630623066 0.775740258571858 0.8433573148850255 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5669865650626331 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5642502926765383


ris (2 : 2): [ 1 0.5642502926765383 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21240 interne); stringhe deallocate: 0 (21160 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9192681511831734


ris (2 : 2): [ -1 0.9192681511831734 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21260 interne); stringhe deallocate: 0 (21180 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8859438553316428


ris (2 : 2): [ 1 0.8859438553316428 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21280 interne); stringhe deallocate: 0 (21200 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9192681353542858 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5642502926765383


ris (2 : 2): [ -1 0.5642502926765383 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21300 interne); stringhe deallocate: 0 (21220 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870557118195e-314 0 0.5753822414403977 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 -1590051922 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3216935626551045


ris (2 : 2): [ 1 0.3216935626551045 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21320 interne); stringhe deallocate: 0 (21240 interne)


Stringhe allocate: 1 (21320 interne); stringhe deallocate: 0 (21245 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5642502926765383 0.0807318488168266 0.8859438553316428 0.4357497073234617 0.3216935626551045 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8537116626412216 0.4351701772778258 0.9507991897459951 0.7768226440484164 0.8437948563682274 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5642499966116716 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5629339568267835


ris (2 : 2): [ 1 0.5629339568267835 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21355 interne); stringhe deallocate: 0 (21275 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.919657212679594


ris (2 : 2): [ -1 0.919657212679594 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21375 interne); stringhe deallocate: 0 (21295 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.885523166940865


ris (2 : 2): [ 1 0.885523166940865 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21395 interne); stringhe deallocate: 0 (21315 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9196567577811772 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5629339568267835


ris (2 : 2): [ -1 0.5629339568267835 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21415 interne); stringhe deallocate: 0 (21335 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869940524268e-314 0 0.5739741413126911 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 315367434 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3225892101140815


ris (2 : 2): [ 1 0.3225892101140815 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21435 interne); stringhe deallocate: 0 (21355 interne)


Stringhe allocate: 1 (21435 interne); stringhe deallocate: 0 (21360 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5629339568267835 0.08034278732040601 0.885523166940865 0.4370660431732165 0.3225892101140815 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8532697470653072 0.4349311245751205 0.9506177158784459 0.7773432930552587 0.8440011123202136 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5629339260525139 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.557188986625256


ris (2 : 2): [ 1 0.557188986625256 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21470 interne); stringhe deallocate: 0 (21390 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9213510927519066


ris (2 : 2): [ -1 0.9213510927519066 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21490 interne); stringhe deallocate: 0 (21410 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8836838464049429


ris (2 : 2): [ 1 0.8836838464049429 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21510 interne); stringhe deallocate: 0 (21430 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9213509648294629 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.557188986625256


ris (2 : 2): [ -1 0.557188986625256 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21530 interne); stringhe deallocate: 0 (21450 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161449723268464e-314 0 0.567827233505751 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 -9968066 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.326494859779687


ris (2 : 2): [ 1 0.326494859779687 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21550 interne); stringhe deallocate: 0 (21470 interne)


Stringhe allocate: 1 (21550 interne); stringhe deallocate: 0 (21475 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.557188986625256 0.07864890724809337 0.8836838464049429 0.442811013374744 0.326494859779687 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8513410661624113 0.4338903466696469 0.9498242815488239 0.7796155953938462 0.8449005326019661 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5571885197609365 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5563950151684668


ris (2 : 2): [ 1 0.5563950151684668 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21585 interne); stringhe deallocate: 0 (21505 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9215845524297961


ris (2 : 2): [ -1 0.9215845524297961 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21605 interne); stringhe deallocate: 0 (21525 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8834294986550354


ris (2 : 2): [ 1 0.8834294986550354 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21625 interne); stringhe deallocate: 0 (21545 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9215841335745978 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5563950151684668


ris (2 : 2): [ -1 0.5563950151684668 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21645 interne); stringhe deallocate: 0 (21565 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870098625275e-314 0 0.5669775096898793 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 -348534103 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3270344834865686


ris (2 : 2): [ 1 0.3270344834865686 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21665 interne); stringhe deallocate: 0 (21585 interne)


Stringhe allocate: 1 (21665 interne); stringhe deallocate: 0 (21590 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5563950151684668 0.07841544757020391 0.8834294986550354 0.4436049848315332 0.3270344834865686 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8510745168971521 0.433746901051189 0.9497145626431207 0.7799296341329077 0.8450248009178772 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5563945812674671 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5616075727949217


ris (2 : 2): [ 1 0.5616075727949217 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21700 interne); stringhe deallocate: 0 (21620 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9200520462240605


ris (2 : 2): [ -1 0.9200520462240605 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21720 interne); stringhe deallocate: 0 (21640 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8851018331875846


ris (2 : 2): [ 1 0.8851018331875846 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21740 interne); stringhe deallocate: 0 (21660 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9200515788050971 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5616075727949217


ris (2 : 2): [ -1 0.5616075727949217 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21760 interne); stringhe deallocate: 0 (21680 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869798233362e-314 0 0.5725550739296796 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 1909121620 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3234942603926629


ris (2 : 2): [ 1 0.3234942603926629 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21780 interne); stringhe deallocate: 0 (21700 interne)


Stringhe allocate: 1 (21780 interne); stringhe deallocate: 0 (21705 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5616075727949217 0.07994795377593955 0.8851018331875846 0.4383924272050783 0.3234942603926629 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8528244581495391 0.4346885253284929 0.9504359636185475 0.7778679164095563 0.8442095336191668 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5616073650809099 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5564040253165211


ris (2 : 2): [ 1 0.5564040253165211 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21815 interne); stringhe deallocate: 0 (21735 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9215715818269982


ris (2 : 2): [ -1 0.9215715818269982 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21835 interne); stringhe deallocate: 0 (21755 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8834217728006529


ris (2 : 2): [ 1 0.8834217728006529 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21855 interne); stringhe deallocate: 0 (21775 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9215712588284069 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5564040253165211


ris (2 : 2): [ -1 0.5564040253165211 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21875 interne); stringhe deallocate: 0 (21795 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161448569131115e-314 0 0.5669865695961178 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 -796713887 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3270177474841318


ris (2 : 2): [ 1 0.3270177474841318 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21895 interne); stringhe deallocate: 0 (21815 interne)


Stringhe allocate: 1 (21895 interne); stringhe deallocate: 0 (21820 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5564040253165211 0.07842841817300184 0.8834217728006529 0.4435959746834789 0.3270177474841318 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8510775417519163 0.4337548706335895 0.9497112299134671 0.779926070358027 0.8450209468343531 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5564036411709221 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5564040253165211


ris (2 : 2): [ 1 0.5564040253165211 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21930 interne); stringhe deallocate: 0 (21850 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9215715818269982


ris (2 : 2): [ -1 0.9215715818269982 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21950 interne); stringhe deallocate: 0 (21870 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8834217728006529


ris (2 : 2): [ 1 0.8834217728006529 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21970 interne); stringhe deallocate: 0 (21890 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9215712589713627 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5564040253165211


ris (2 : 2): [ -1 0.5564040253165211 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21990 interne); stringhe deallocate: 0 (21910 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870043289923e-314 0 0.5669865695961391 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 -796713887 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3270177474841318


ris (2 : 2): [ 1 0.3270177474841318 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22010 interne); stringhe deallocate: 0 (21930 interne)


Stringhe allocate: 1 (22010 interne); stringhe deallocate: 0 (21935 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5564040253165211 0.07842841817300184 0.8834217728006529 0.4435959746834789 0.3270177474841318 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8510775417519163 0.4337548706335895 0.9497112299134671 0.779926070358027 0.8450209468343531 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5564036457985342 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5538476814445635


ris (2 : 2): [ 1 0.5538476814445635 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22045 interne); stringhe deallocate: 0 (21965 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9223009873221196


ris (2 : 2): [ -1 0.9223009873221196 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22065 interne); stringhe deallocate: 0 (21985 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8825801522926245


ris (2 : 2): [ 1 0.8825801522926245 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22085 interne); stringhe deallocate: 0 (22005 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9223008244486035 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5538476814445635


ris (2 : 2): [ -1 0.5538476814445635 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22105 interne); stringhe deallocate: 0 (22025 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870557118195e-314 0 0.5642500011453802 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 -975658389 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.328732470848061


ris (2 : 2): [ 1 0.328732470848061 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22125 interne); stringhe deallocate: 0 (22045 interne)


Stringhe allocate: 1 (22125 interne); stringhe deallocate: 0 (22050 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5538476814445635 0.07769901267788038 0.8825801522926245 0.4461523185554365 0.328732470848061 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8502193351060806 0.4333066989265944 0.9493481770412016 0.7809371785021455 0.8454158253060948 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.553847317168346 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5526189420924047


ris (2 : 2): [ 1 0.5526189420924047 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22160 interne); stringhe deallocate: 0 (22080 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9226338328561269


ris (2 : 2): [ -1 0.9226338328561269 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22180 interne); stringhe deallocate: 0 (22100 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8821588565072671


ris (2 : 2): [ 1 0.8821588565072671 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22200 interne); stringhe deallocate: 0 (22120 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9226336521598029 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5526189420924047


ris (2 : 2): [ -1 0.5526189420924047 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22220 interne); stringhe deallocate: 0 (22140 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869940524268e-314 0 0.562933930588347 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 -345113633 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3295399144148624


ris (2 : 2): [ 1 0.3295399144148624 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22240 interne); stringhe deallocate: 0 (22160 interne)


Stringhe allocate: 1 (22240 interne); stringhe deallocate: 0 (22165 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5526189420924047 0.07736616714387312 0.8821588565072671 0.4473810579075953 0.3295399144148624 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8498068271138695 0.433102187235718 0.949166441159663 0.7814231805535892 0.8456017690497817 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5526185078116228 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5472564709030462


ris (2 : 2): [ 1 0.5472564709030462 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22275 interne); stringhe deallocate: 0 (22195 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9240826400556714


ris (2 : 2): [ -1 0.9240826400556714 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22295 interne); stringhe deallocate: 0 (22215 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.880317212975524


ris (2 : 2): [ 1 0.880317212975524 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22315 interne); stringhe deallocate: 0 (22235 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9240822833033882 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5472564709030462


ris (2 : 2): [ -1 0.5472564709030462 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22335 interne); stringhe deallocate: 0 (22255 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161449723268464e-314 0 0.5571885196696247 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 10596823 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3330607420724778


ris (2 : 2): [ 1 0.3330607420724778 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22355 interne); stringhe deallocate: 0 (22275 interne)


Stringhe allocate: 1 (22355 interne); stringhe deallocate: 0 (22280 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5472564709030462 0.07591735994432858 0.880317212975524 0.4527435290969538 0.3330607420724778 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8480065574149083 0.4322119904932071 0.9483720047509603 0.7835441934390777 0.8464125698319669 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5472564739651116 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5465153918989634


ris (2 : 2): [ 1 0.5465153918989634 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22390 interne); stringhe deallocate: 0 (22310 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9242822869606469


ris (2 : 2): [ -1 0.9242822869606469 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22410 interne); stringhe deallocate: 0 (22330 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8800625593658783


ris (2 : 2): [ 1 0.8800625593658783 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22430 interne); stringhe deallocate: 0 (22350 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9242820780727916 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5465153918989634


ris (2 : 2): [ -1 0.5465153918989634 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22450 interne); stringhe deallocate: 0 (22370 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870098625275e-314 0 0.5563945858006729 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 -656478472 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3335471674669149


ris (2 : 2): [ 1 0.3335471674669149 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22470 interne); stringhe deallocate: 0 (22390 interne)


Stringhe allocate: 1 (22470 interne); stringhe deallocate: 0 (22395 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5465153918989634 0.07571771303935315 0.8800625593658783 0.4534846081010366 0.3335471674669149 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8477577650151964 0.4320893205999891 0.9482621539054394 0.7838373116790309 0.8465245872689554 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5465149968117178 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5513806898249073


ris (2 : 2): [ 1 0.5513806898249073 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22505 interne); stringhe deallocate: 0 (22425 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9229718487395101


ris (2 : 2): [ -1 0.9229718487395101 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22525 interne); stringhe deallocate: 0 (22445 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8817366547741401


ris (2 : 2): [ 1 0.8817366547741401 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22545 interne); stringhe deallocate: 0 (22465 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9229717297050053 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5513806898249073


ris (2 : 2): [ -1 0.5513806898249073 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22565 interne); stringhe deallocate: 0 (22485 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869798233362e-314 0 0.5616073696141957 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 500053095 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3303559649492328


ris (2 : 2): [ 1 0.3303559649492328 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22585 interne); stringhe deallocate: 0 (22505 interne)


Stringhe allocate: 1 (22585 interne); stringhe deallocate: 0 (22510 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5513806898249073 0.0770281512604899 0.8817366547741401 0.4486193101750927 0.3303559649492328 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8493911254796547 0.4328944987051811 0.9489843144761696 0.7819129452389565 0.8457896948660706 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5513806385489612 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5465242943611824


ris (2 : 2): [ 1 0.5465242943611824 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22620 interne); stringhe deallocate: 0 (22540 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9242702889200177


ris (2 : 2): [ -1 0.9242702889200177 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22640 interne); stringhe deallocate: 0 (22560 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8800558945080552


ris (2 : 2): [ 1 0.8800558945080552 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22660 interne); stringhe deallocate: 0 (22580 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9242701619119824 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5465242943611824


ris (2 : 2): [ -1 0.5465242943611824 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22680 interne); stringhe deallocate: 0 (22600 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161448569131115e-314 0 0.5564036457070234 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 -2074606031 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3335316001468728


ris (2 : 2): [ 1 0.3335316001468728 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22700 interne); stringhe deallocate: 0 (22620 interne)


Stringhe allocate: 1 (22700 interne); stringhe deallocate: 0 (22625 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5465242943611824 0.07572971107998228 0.8800558945080552 0.4534757056388176 0.3335316001468728 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8477607537180562 0.4320966926068979 0.948259278861696 0.7838337904970212 0.8465210023177752 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5465240520926287 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5465242943611824


ris (2 : 2): [ 1 0.5465242943611824 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22735 interne); stringhe deallocate: 0 (22655 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9242702889200177


ris (2 : 2): [ -1 0.9242702889200177 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22755 interne); stringhe deallocate: 0 (22675 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8800558945080552


ris (2 : 2): [ 1 0.8800558945080552 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22775 interne); stringhe deallocate: 0 (22695 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.924270157286756 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5465242943611824


ris (2 : 2): [ -1 0.5465242943611824 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22795 interne); stringhe deallocate: 0 (22715 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870043289923e-314 0 0.5564036457069577 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 -2074606031 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3335316001468728


ris (2 : 2): [ 1 0.3335316001468728 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22815 interne); stringhe deallocate: 0 (22735 interne)


Stringhe allocate: 1 (22815 interne); stringhe deallocate: 0 (22740 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5465242943611824 0.07572971107998228 0.8800558945080552 0.4534757056388176 0.3335316001468728 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8477607537180562 0.4320966926068979 0.948259278861696 0.7838337904970212 0.8465210023177752 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5465240520901116 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5441393101410827


ris (2 : 2): [ 1 0.5441393101410827 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22850 interne); stringhe deallocate: 0 (22770 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9248921055480048


ris (2 : 2): [ -1 0.9248921055480048 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22870 interne); stringhe deallocate: 0 (22790 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8792155513644024


ris (2 : 2): [ 1 0.8792155513644024 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22890 interne); stringhe deallocate: 0 (22810 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9248919527980171 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5441393101410827


ris (2 : 2): [ -1 0.5441393101410827 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22910 interne); stringhe deallocate: 0 (22830 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870557118195e-314 0 0.553847321701852 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 -676281290 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3350762412233197


ris (2 : 2): [ 1 0.3350762412233197 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22930 interne); stringhe deallocate: 0 (22850 interne)


Stringhe allocate: 1 (22930 interne); stringhe deallocate: 0 (22855 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5441393101410827 0.07510789445199517 0.8792155513644024 0.4558606898589173 0.3350762412233197 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8469600753232769 0.4317146271831153 0.9478967770107056 0.784777120928811 0.8468767130525139 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5441389172523916 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5429937826257318


ris (2 : 2): [ 1 0.5429937826257318 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22965 interne); stringhe deallocate: 0 (22885 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9251743101192056


ris (2 : 2): [ -1 0.9251743101192056 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22985 interne); stringhe deallocate: 0 (22905 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8787965409115187


ris (2 : 2): [ 1 0.8787965409115187 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23005 interne); stringhe deallocate: 0 (22925 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9251742403957897 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5429937826257318


ris (2 : 2): [ -1 0.5429937826257318 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23025 interne); stringhe deallocate: 0 (22945 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869940524268e-314 0 0.5526185123453313 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 2135548444 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3358027582857869


ris (2 : 2): [ 1 0.3358027582857869 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23045 interne); stringhe deallocate: 0 (22965 interne)


Stringhe allocate: 1 (23045 interne); stringhe deallocate: 0 (22970 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5429937826257318 0.07482568988079441 0.8787965409115187 0.4570062173742682 0.3358027582857869 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8465755029120898 0.4315412310334526 0.9477160269612741 0.7852302102853679 0.847044020475598 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5429935497733265 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5379946453853833


ris (2 : 2): [ 1 0.5379946453853833 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23080 interne); stringhe deallocate: 0 (23000 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9264023621366903


ris (2 : 2): [ -1 0.9264023621366903 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23100 interne); stringhe deallocate: 0 (23020 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8769651728953762


ris (2 : 2): [ 1 0.8769651728953762 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23120 interne); stringhe deallocate: 0 (23040 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9264020962211186 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5379946453853833


ris (2 : 2): [ -1 0.5379946453853833 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23140 interne); stringhe deallocate: 0 (23060 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161449723268464e-314 0 0.5472564785009446 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 -1947513203 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3389705275099929


ris (2 : 2): [ 1 0.3389705275099929 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23160 interne); stringhe deallocate: 0 (23080 interne)


Stringhe allocate: 1 (23160 interne); stringhe deallocate: 0 (23085 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5379946453853833 0.07359763786330975 0.8769651728953762 0.4620053546146167 0.3389705275099929 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8448972103904242 0.4307866738322304 0.9469260231387753 0.7872075140560895 0.8477735164960049 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5379943890066912 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5373038050928236


ris (2 : 2): [ 1 0.5373038050928236 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23195 interne); stringhe deallocate: 0 (23115 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9265715520620821


ris (2 : 2): [ -1 0.9265715520620821 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23215 interne); stringhe deallocate: 0 (23135 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8767119539831488


ris (2 : 2): [ 1 0.8767119539831488 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23235 interne); stringhe deallocate: 0 (23155 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9265713780374707 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5373038050928236


ris (2 : 2): [ -1 0.5373038050928236 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23255 interne); stringhe deallocate: 0 (23175 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870098625275e-314 0 0.5465149967204059 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 -1076069588 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3394081488903252


ris (2 : 2): [ 1 0.3394081488903252 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23275 interne); stringhe deallocate: 0 (23195 interne)


Stringhe allocate: 1 (23275 interne); stringhe deallocate: 0 (23200 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5373038050928236 0.07342844793791792 0.8767119539831488 0.4626961949071764 0.3394081488903252 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8446652839517359 0.4306827177499464 0.9468167911838512 0.78748076142854 0.8478742950037819 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5373034519619377 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5418392629810627


ris (2 : 2): [ 1 0.5418392629810627 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23310 interne); stringhe deallocate: 0 (23230 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9254611324840122


ris (2 : 2): [ -1 0.9254611324840122 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23330 interne); stringhe deallocate: 0 (23250 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8783764072065116


ris (2 : 2): [ 1 0.8783764072065116 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23350 interne); stringhe deallocate: 0 (23270 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9254608196707892 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5418392629810627


ris (2 : 2): [ -1 0.5418392629810627 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23370 interne); stringhe deallocate: 0 (23290 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869798233362e-314 0 0.5513806430821671 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 1262889012 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3365371442254489


ris (2 : 2): [ 1 0.3365371442254489 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23390 interne); stringhe deallocate: 0 (23310 interne)


Stringhe allocate: 1 (23390 interne); stringhe deallocate: 0 (23315 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5418392629810627 0.07453886751598782 0.8783764072065116 0.4581607370189373 0.3365371442254489 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8461879116953244 0.4313649975533109 0.9475347923705251 0.7856868562898727 0.8472131399986783 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5418391316383779 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5373125620085233


ris (2 : 2): [ 1 0.5373125620085233 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23425 interne); stringhe deallocate: 0 (23345 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9265604734803605


ris (2 : 2): [ -1 0.9265604734803605 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23445 interne); stringhe deallocate: 0 (23365 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8767062410140329


ris (2 : 2): [ 1 0.8767062410140329 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23465 interne); stringhe deallocate: 0 (23385 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9265604060145698 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5373125620085233


ris (2 : 2): [ -1 0.5373125620085233 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23485 interne); stringhe deallocate: 0 (23405 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161448569131115e-314 0 0.5465240566259144 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 489803648 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3393936790055097


ris (2 : 2): [ 1 0.3393936790055097 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23505 interne); stringhe deallocate: 0 (23425 interne)


Stringhe allocate: 1 (23505 interne); stringhe deallocate: 0 (23430 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5373125620085233 0.07343952651963948 0.8767062410140329 0.4626874379914767 0.3393936790055097 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8446682237922374 0.4306895248098253 0.9468143267597706 0.7874772978144 0.84787096277765 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5373125118704945 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5373125620085233


ris (2 : 2): [ 1 0.5373125620085233 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23540 interne); stringhe deallocate: 0 (23460 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9265604734803605


ris (2 : 2): [ -1 0.9265604734803605 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23560 interne); stringhe deallocate: 0 (23480 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8767062410140329


ris (2 : 2): [ 1 0.8767062410140329 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23580 interne); stringhe deallocate: 0 (23500 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9265604060146861 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5373125620085233


ris (2 : 2): [ -1 0.5373125620085233 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23600 interne); stringhe deallocate: 0 (23520 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870043289923e-314 0 0.5465240566262128 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 489803648 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3393936790055097


ris (2 : 2): [ 1 0.3393936790055097 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23620 interne); stringhe deallocate: 0 (23540 interne)


Stringhe allocate: 1 (23620 interne); stringhe deallocate: 0 (23545 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5373125620085233 0.07343952651963948 0.8767062410140329 0.4626874379914767 0.3393936790055097 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8446682237922374 0.4306895248098253 0.9468143267597706 0.7874772978144 0.84787096277765 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5373125118704607 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5350902462619777


ris (2 : 2): [ 1 0.5350902462619777 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23655 interne); stringhe deallocate: 0 (23575 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9270854719392605


ris (2 : 2): [ -1 0.9270854719392605 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23675 interne); stringhe deallocate: 0 (23595 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8758725884133636


ris (2 : 2): [ 1 0.8758725884133636 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23695 interne); stringhe deallocate: 0 (23615 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9270854038688237 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5350902462619777


ris (2 : 2): [ -1 0.5350902462619777 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23715 interne); stringhe deallocate: 0 (23635 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870557118195e-314 0 0.5441389171608151 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 -1803333077 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3407823421513859


ris (2 : 2): [ 1 0.3407823421513859 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23735 interne); stringhe deallocate: 0 (23655 interne)


Stringhe allocate: 1 (23735 interne); stringhe deallocate: 0 (23660 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5350902462619777 0.0729145280607395 0.8758725884133636 0.4649097537380224 0.3407823421513859 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.843922155877137 0.4303669477836461 0.9464547110324237 0.7883562881469544 0.8481907538251989 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5350899738735588 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5340236336090104


ris (2 : 2): [ 1 0.5340236336090104 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23770 interne); stringhe deallocate: 0 (23690 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9273221749060017


ris (2 : 2): [ -1 0.9273221749060017 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23790 interne); stringhe deallocate: 0 (23710 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8754583260076809


ris (2 : 2): [ 1 0.8754583260076809 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23810 interne); stringhe deallocate: 0 (23730 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9273219197244824 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5340236336090104


ris (2 : 2): [ -1 0.5340236336090104 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23830 interne); stringhe deallocate: 0 (23750 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869940524268e-314 0 0.5429935543068325 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 -1154184829 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3414346923986705


ris (2 : 2): [ 1 0.3414346923986705 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23850 interne); stringhe deallocate: 0 (23770 interne)


Stringhe allocate: 1 (23850 interne); stringhe deallocate: 0 (23775 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5340236336090104 0.07267782509399834 0.8754583260076809 0.4659763663909896 0.3414346923986705 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8435640764820485 0.4302215093774855 0.9462760091652283 0.7887781643866362 0.8483409815961076 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5340232937782705 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5293690509180312


ris (2 : 2): [ 1 0.5293690509180312 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23885 interne); stringhe deallocate: 0 (23805 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.928351888393566


ris (2 : 2): [ -1 0.928351888393566 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23905 interne); stringhe deallocate: 0 (23825 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8736479569929473


ris (2 : 2): [ 1 0.8736479569929473 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23925 interne); stringhe deallocate: 0 (23845 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9283518833609747 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5293690509180312


ris (2 : 2): [ -1 0.5293690509180312 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23945 interne); stringhe deallocate: 0 (23865 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161449723268464e-314 0 0.5379943935403997 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 1562813405 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3442789060749161


ris (2 : 2): [ 1 0.3442789060749161 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23965 interne); stringhe deallocate: 0 (23885 interne)


Stringhe allocate: 1 (23965 interne); stringhe deallocate: 0 (23890 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5293690509180312 0.07164811160643403 0.8736479569929473 0.4706309490819688 0.3442789060749161 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8420014565846199 0.429588818159056 0.9454950637576605 0.7906191868398159 0.8489959669852429 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5293688816519886 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.528725849534593


ris (2 : 2): [ 1 0.528725849534593 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24000 interne); stringhe deallocate: 0 (23920 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9284937148668712


ris (2 : 2): [ -1 0.9284937148668712 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24020 interne); stringhe deallocate: 0 (23940 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8733976541026208


ris (2 : 2): [ 1 0.8733976541026208 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24040 interne); stringhe deallocate: 0 (23960 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9284935038539253 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.528725849534593


ris (2 : 2): [ -1 0.528725849534593 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24060 interne); stringhe deallocate: 0 (23980 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870098625275e-314 0 0.5373034564977708 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 2030674156 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3446718045680278


ris (2 : 2): [ 1 0.3446718045680278 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24080 interne); stringhe deallocate: 0 (24000 interne)


Stringhe allocate: 1 (24080 interne); stringhe deallocate: 0 (24005 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.528725849534593 0.07150628513312884 0.8733976541026208 0.471274150465407 0.3446718045680278 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8417855233105669 0.4295016751185066 0.9453870896976149 0.7908735916420168 0.8490864463942096 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5287256283255388 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5329485339528396


ris (2 : 2): [ 1 0.5329485339528396 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24115 interne); stringhe deallocate: 0 (24035 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9275629891473413


ris (2 : 2): [ -1 0.9275629891473413 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24135 interne); stringhe deallocate: 0 (24055 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8750427615469749


ris (2 : 2): [ 1 0.8750427615469749 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24155 interne); stringhe deallocate: 0 (24075 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9275627177212291 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5329485339528396


ris (2 : 2): [ -1 0.5329485339528396 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24175 interne); stringhe deallocate: 0 (24095 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869798233362e-314 0 0.5418391315470661 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 360245817 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3420942275941353


ris (2 : 2): [ 1 0.3420942275941353 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24195 interne); stringhe deallocate: 0 (24115 interne)


Stringhe allocate: 1 (24195 interne); stringhe deallocate: 0 (24120 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5329485339528396 0.07243701085265875 0.8750427615469749 0.4670514660471604 0.3420942275941353 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8432031478605188 0.4300735448634646 0.9460967456258638 0.7892033974822372 0.8484928639670624 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5329484981960686 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5287344286628812


ris (2 : 2): [ 1 0.5287344286628812 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24230 interne); stringhe deallocate: 0 (24150 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9284835034462268


ris (2 : 2): [ -1 0.9284835034462268 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24250 interne); stringhe deallocate: 0 (24170 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8733927935394621


ris (2 : 2): [ 1 0.8733927935394621 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24270 interne); stringhe deallocate: 0 (24190 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9284834904166752 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5287344286628812


ris (2 : 2): [ -1 0.5287344286628812 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24290 interne); stringhe deallocate: 0 (24210 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161448569131115e-314 0 0.5373125164037003 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 1995180752 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3446583648765809


ris (2 : 2): [ 1 0.3446583648765809 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24310 interne); stringhe deallocate: 0 (24230 interne)


Stringhe allocate: 1 (24310 interne); stringhe deallocate: 0 (24235 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5287344286628812 0.07151649655377323 0.8733927935394621 0.4712655713371188 0.3446583648765809 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8417884034649128 0.4295079493649329 0.9453849929789646 0.7908701983479546 0.8490833514082015 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5287342160194815 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5287344286628812


ris (2 : 2): [ 1 0.5287344286628812 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24345 interne); stringhe deallocate: 0 (24265 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9284835034462268


ris (2 : 2): [ -1 0.9284835034462268 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24365 interne); stringhe deallocate: 0 (24285 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8733927935394621


ris (2 : 2): [ 1 0.8733927935394621 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24385 interne); stringhe deallocate: 0 (24305 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9284834950418652 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5287344286628812


ris (2 : 2): [ -1 0.5287344286628812 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24405 interne); stringhe deallocate: 0 (24325 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870043289923e-314 0 0.5373125164037464 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 1995180752 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3446583648765809


ris (2 : 2): [ 1 0.3446583648765809 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24425 interne); stringhe deallocate: 0 (24345 interne)


Stringhe allocate: 1 (24425 interne); stringhe deallocate: 0 (24350 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5287344286628812 0.07151649655377323 0.8733927935394621 0.4712655713371188 0.3446583648765809 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8417884034649128 0.4295079493649329 0.9453849929789646 0.7908701983479546 0.8490833514082015 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5287342113944202 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5266662774151618


ris (2 : 2): [ 1 0.5266662774151618 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24460 interne); stringhe deallocate: 0 (24380 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9289216055611869


ris (2 : 2): [ -1 0.9289216055611869 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24480 interne); stringhe deallocate: 0 (24400 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.872570424233777


ris (2 : 2): [ 1 0.872570424233777 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24500 interne); stringhe deallocate: 0 (24420 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9289212269278693 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5266662774151618


ris (2 : 2): [ -1 0.5266662774151618 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24520 interne); stringhe deallocate: 0 (24440 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870557118195e-314 0 0.5350899784096601 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 1017966354 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3459041468186151


ris (2 : 2): [ 1 0.3459041468186151 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24540 interne); stringhe deallocate: 0 (24460 interne)


Stringhe allocate: 1 (24540 interne); stringhe deallocate: 0 (24465 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5266662774151618 0.07107839443881314 0.872570424233777 0.4733337225848382 0.3459041468186151 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8410940911054308 0.4292387644273185 0.9450302445672471 0.7916882121499227 0.8493702387742583 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5266661686392595 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5256743840923454


ris (2 : 2): [ 1 0.5256743840923454 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24575 interne); stringhe deallocate: 0 (24495 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9291175362789832


ris (2 : 2): [ -1 0.9291175362789832 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24595 interne); stringhe deallocate: 0 (24515 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8721629882330804


ris (2 : 2): [ 1 0.8721629882330804 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24615 interne); stringhe deallocate: 0 (24535 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.929117206856855 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5256743840923454


ris (2 : 2): [ -1 0.5256743840923454 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24635 interne); stringhe deallocate: 0 (24555 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869940524268e-314 0 0.534023293686694 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 369143979 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.346488604140735


ris (2 : 2): [ 1 0.346488604140735 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24655 interne); stringhe deallocate: 0 (24575 interne)


Stringhe allocate: 1 (24655 interne); stringhe deallocate: 0 (24580 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5256743840923454 0.07088246372101681 0.8721629882330804 0.4743256159076547 0.346488604140735 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8407610962173254 0.429118377886725 0.9448544874309769 0.7920805347274125 0.8495048316882011 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5256743473476799 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5213460219987545


ris (2 : 2): [ 1 0.5213460219987545 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24690 interne); stringhe deallocate: 0 (24610 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9299695387909972


ris (2 : 2): [ -1 0.9299695387909972 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24710 interne); stringhe deallocate: 0 (24630 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8703826658623672


ris (2 : 2): [ 1 0.8703826658623672 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24730 interne); stringhe deallocate: 0 (24650 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9299693148586803 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5213460219987545


ris (2 : 2): [ -1 0.5213460219987545 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24750 interne); stringhe deallocate: 0 (24670 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161449723268464e-314 0 0.5293688861854946 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 -632533870 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3490366438636128


ris (2 : 2): [ 1 0.3490366438636128 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24770 interne); stringhe deallocate: 0 (24690 interne)


Stringhe allocate: 1 (24770 interne); stringhe deallocate: 0 (24695 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5213460219987545 0.0700304612090028 0.8703826658623672 0.4786539780012455 0.3490366438636128 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8393079939351749 0.4285948783755102 0.9440865033525469 0.7937925274728065 0.8500916120708989 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.521345624253124 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5207479218505345


ris (2 : 2): [ 1 0.5207479218505345 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24805 interne); stringhe deallocate: 0 (24725 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9300868484952692


ris (2 : 2): [ -1 0.9300868484952692 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24825 interne); stringhe deallocate: 0 (24745 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.870136528643048


ris (2 : 2): [ 1 0.870136528643048 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24845 interne); stringhe deallocate: 0 (24765 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9300866169425541 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5207479218505345


ris (2 : 2): [ -1 0.5207479218505345 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24865 interne); stringhe deallocate: 0 (24785 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870098625275e-314 0 0.5287256328592473 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 -1950753993 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3493886067925135


ris (2 : 2): [ 1 0.3493886067925135 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24885 interne); stringhe deallocate: 0 (24805 interne)


Stringhe allocate: 1 (24885 interne); stringhe deallocate: 0 (24810 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5207479218505345 0.06991315150473076 0.870136528643048 0.4792520781494655 0.3493886067925135 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8391072018869263 0.4285227992771728 0.9439803262530193 0.7940290934283877 0.8501726645522482 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5207476658316761 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5246744922975923


ris (2 : 2): [ 1 0.5246744922975923 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24920 interne); stringhe deallocate: 0 (24840 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9293171147954445


ris (2 : 2): [ -1 0.9293171147954445 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24940 interne); stringhe deallocate: 0 (24860 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8717541055339669


ris (2 : 2): [ 1 0.8717541055339669 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24960 interne); stringhe deallocate: 0 (24880 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9293170063944043 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5246744922975923


ris (2 : 2): [ -1 0.5246744922975923 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24980 interne); stringhe deallocate: 0 (24900 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869798233362e-314 0 0.5329485027319016 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 690935170 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3470796132363746


ris (2 : 2): [ 1 0.3470796132363746 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25000 interne); stringhe deallocate: 0 (24920 interne)


Stringhe allocate: 1 (25000 interne); stringhe deallocate: 0 (24925 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5246744922975923 0.07068288520455546 0.8717541055339669 0.4753255077024077 0.3470796132363746 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8404254161107533 0.4289957500137513 0.9446781062271958 0.7924760209325363 0.8496409333903071 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5246744198294451 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.520756296073132


ris (2 : 2): [ 1 0.520756296073132 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25035 interne); stringhe deallocate: 0 (24955 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9300774530559698


ris (2 : 2): [ -1 0.9300774530559698 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25055 interne); stringhe deallocate: 0 (24975 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8701324298547948


ris (2 : 2): [ 1 0.8701324298547948 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25075 interne); stringhe deallocate: 0 (24995 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9300770801993537 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.520756296073132


ris (2 : 2): [ -1 0.520756296073132 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25095 interne); stringhe deallocate: 0 (25015 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161448569131115e-314 0 0.5287342159281696 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 463093514 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3493761337816628


ris (2 : 2): [ 1 0.3493761337816628 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25115 interne); stringhe deallocate: 0 (25035 interne)


Stringhe allocate: 1 (25115 interne); stringhe deallocate: 0 (25040 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.520756296073132 0.06992254694403022 0.8701324298547948 0.479243703926868 0.3493761337816628 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8391100132510647 0.428528572156726 0.9439785581439559 0.7940257811804691 0.850169792180199 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5207562488979729 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.520756296073132


ris (2 : 2): [ 1 0.520756296073132 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25150 interne); stringhe deallocate: 0 (25070 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9300774530559698


ris (2 : 2): [ -1 0.9300774530559698 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25170 interne); stringhe deallocate: 0 (25090 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8701324298547948


ris (2 : 2): [ 1 0.8701324298547948 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25190 interne); stringhe deallocate: 0 (25110 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9300770800563178 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.520756296073132


ris (2 : 2): [ -1 0.520756296073132 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25210 interne); stringhe deallocate: 0 (25130 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870043289923e-314 0 0.528734215927626 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 463093514 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3493761337816628


ris (2 : 2): [ 1 0.3493761337816628 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25230 interne); stringhe deallocate: 0 (25150 interne)


Stringhe allocate: 1 (25230 interne); stringhe deallocate: 0 (25155 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.520756296073132 0.06992254694403022 0.8701324298547948 0.479243703926868 0.3493761337816628 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8391100132510647 0.428528572156726 0.9439785581439559 0.7940257811804691 0.850169792180199 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.520756253525585 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5188340180316095


ris (2 : 2): [ 1 0.5188340180316095 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25265 interne); stringhe deallocate: 0 (25185 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9304377824534192


ris (2 : 2): [ -1 0.9304377824534192 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25285 interne); stringhe deallocate: 0 (25205 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8693252039237482


ris (2 : 2): [ 1 0.8693252039237482 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25305 interne); stringhe deallocate: 0 (25225 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9304375689480358 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5188340180316095


ris (2 : 2): [ -1 0.5188340180316095 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25325 interne); stringhe deallocate: 0 (25245 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870557118195e-314 0 0.5266661731725453 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 -865079317 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3504911858921388


ris (2 : 2): [ 1 0.3504911858921388 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25345 interne); stringhe deallocate: 0 (25265 interne)


Stringhe allocate: 1 (25345 interne); stringhe deallocate: 0 (25270 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5188340180316095 0.06956221754658076 0.8693252039237482 0.4811659819683906 0.3504911858921388 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8384646729240157 0.4283071734392561 0.9436303421843423 0.794786097898562 0.8504265741676376 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5188336414786487 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5179127613606634


ris (2 : 2): [ 1 0.5179127613606634 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25380 interne); stringhe deallocate: 0 (25300 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9305972852382202


ris (2 : 2): [ -1 0.9305972852382202 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25400 interne); stringhe deallocate: 0 (25320 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8689263298875438


ris (2 : 2): [ 1 0.8689263298875438 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25420 interne); stringhe deallocate: 0 (25340 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9305968327018315 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5179127613606634


ris (2 : 2): [ -1 0.5179127613606634 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25440 interne); stringhe deallocate: 0 (25360 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869940524268e-314 0 0.5256743518837812 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 -930663415 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3510135685268804


ris (2 : 2): [ 1 0.3510135685268804 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25460 interne); stringhe deallocate: 0 (25380 interne)


Stringhe allocate: 1 (25460 interne); stringhe deallocate: 0 (25385 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5179127613606634 0.06940271476177984 0.8689263298875438 0.4820872386393366 0.3510135685268804 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.838155391920705 0.428209169467785 0.9434582784535577 0.7951504816315314 0.8505468720890459 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5179123920889666 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5138927809319802


ris (2 : 2): [ 1 0.5138927809319802 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25495 interne); stringhe deallocate: 0 (25415 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.931290524217792


ris (2 : 2): [ -1 0.931290524217792 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25515 interne); stringhe deallocate: 0 (25435 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8671836072624118


ris (2 : 2): [ 1 0.8671836072624118 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25535 interne); stringhe deallocate: 0 (25455 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9312901585550488 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5138927809319802


ris (2 : 2): [ -1 0.5138927809319802 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25555 interne); stringhe deallocate: 0 (25475 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161449723268464e-314 0 0.5213456241615475 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 1173887852 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3532908263304316


ris (2 : 2): [ 1 0.3532908263304316 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25575 interne); stringhe deallocate: 0 (25495 interne)


Stringhe allocate: 1 (25575 interne); stringhe deallocate: 0 (25500 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5138927809319802 0.06870947578220799 0.8671836072624118 0.4861072190680198 0.3532908263304316 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8368058184310541 0.4277832197060841 0.9427065139129116 0.796740500484326 0.851071294920241 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5138926548427971 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5133373132599913


ris (2 : 2): [ 1 0.5133373132599913 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25610 interne); stringhe deallocate: 0 (25530 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.931385932010728


ris (2 : 2): [ -1 0.931385932010728 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25630 interne); stringhe deallocate: 0 (25550 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8669426787688157


ris (2 : 2): [ 1 0.8669426787688157 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25650 interne); stringhe deallocate: 0 (25570 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.931385521361463 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5133373132599913


ris (2 : 2): [ -1 0.5133373132599913 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25670 interne); stringhe deallocate: 0 (25590 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870098625275e-314 0 0.5207476703651821 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 1602786521 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3536053655088244


ris (2 : 2): [ 1 0.3536053655088244 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25690 interne); stringhe deallocate: 0 (25610 interne)


Stringhe allocate: 1 (25690 interne); stringhe deallocate: 0 (25615 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5133373132599913 0.06861406798927205 0.8669426787688157 0.4866626867400087 0.3536053655088244 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8366193388056495 0.4277245978918715 0.9426025837201746 0.7969602040590694 0.8511437291989588 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5133371441811025 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5169839774382331


ris (2 : 2): [ 1 0.5169839774382331 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25725 interne); stringhe deallocate: 0 (25645 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9307600125143205


ris (2 : 2): [ -1 0.9307600125143205 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25745 interne); stringhe deallocate: 0 (25665 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8685258947290229


ris (2 : 2): [ 1 0.8685258947290229 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25765 interne); stringhe deallocate: 0 (25685 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9307599108668647 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5169839774382331


ris (2 : 2): [ -1 0.5169839774382331 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25785 interne); stringhe deallocate: 0 (25705 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869798233362e-314 0 0.5246744243631536 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 -76224737 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3515419172907898


ris (2 : 2): [ 1 0.3515419172907898 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25805 interne); stringhe deallocate: 0 (25725 interne)


Stringhe allocate: 1 (25805 interne); stringhe deallocate: 0 (25730 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5169839774382331 0.0692399874856795 0.8685258947290229 0.4830160225617669 0.3515419172907898 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8378435838953766 0.4281091842584709 0.9432855412958122 0.7955178426107789 0.8506685439323461 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5169835133048206 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5133454601100458


ris (2 : 2): [ 1 0.5133454601100458 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25840 interne); stringhe deallocate: 0 (25760 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.931377302741477


ris (2 : 2): [ -1 0.931377302741477 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25860 interne); stringhe deallocate: 0 (25780 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.866939259263098


ris (2 : 2): [ 1 0.866939259263098 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25880 interne); stringhe deallocate: 0 (25800 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9313769381496959 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5133454601100458


ris (2 : 2): [ -1 0.5133454601100458 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25900 interne); stringhe deallocate: 0 (25820 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161448569131115e-314 0 0.5207562534338059 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 1968644228 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3535937991530522


ris (2 : 2): [ 1 0.3535937991530522 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25920 interne); stringhe deallocate: 0 (25840 interne)


Stringhe allocate: 1 (25920 interne); stringhe deallocate: 0 (25845 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5133454601100458 0.06862269725852299 0.866939259263098 0.4866545398899542 0.3535937991530522 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8366220738370888 0.4277299000103175 0.9426011086356672 0.7969569817435862 0.851141065617773 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.513345245787697 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5133454601100458


ris (2 : 2): [ 1 0.5133454601100458 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25955 interne); stringhe deallocate: 0 (25875 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.931377302741477


ris (2 : 2): [ -1 0.931377302741477 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25975 interne); stringhe deallocate: 0 (25895 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.866939259263098


ris (2 : 2): [ 1 0.866939259263098 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25995 interne); stringhe deallocate: 0 (25915 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9313769382926518 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5133454601100458


ris (2 : 2): [ -1 0.5133454601100458 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26015 interne); stringhe deallocate: 0 (25935 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870043289923e-314 0 0.5207562534342731 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 1968644228 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3535937991530522


ris (2 : 2): [ 1 0.3535937991530522 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26035 interne); stringhe deallocate: 0 (25955 interne)


Stringhe allocate: 1 (26035 interne); stringhe deallocate: 0 (25960 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5133454601100458 0.06862269725852299 0.866939259263098 0.4866545398899542 0.3535937991530522 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8366220738370888 0.4277299000103175 0.9426011086356672 0.7969569817435862 0.851141065617773 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5133452457851799 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5115609976490452


ris (2 : 2): [ 1 0.5115609976490452 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26070 interne); stringhe deallocate: 0 (25990 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9316682340875352


ris (2 : 2): [ -1 0.9316682340875352 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26090 interne); stringhe deallocate: 0 (26010 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8661503839622203


ris (2 : 2): [ 1 0.8661503839622203 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26110 interne); stringhe deallocate: 0 (26030 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9316678135843457 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5115609976490452


ris (2 : 2): [ -1 0.5115609976490452 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26130 interne); stringhe deallocate: 0 (26050 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870557118195e-314 0 0.5188336460118546 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 727317022 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3545893863131752


ris (2 : 2): [ 1 0.3545893863131752 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26150 interne); stringhe deallocate: 0 (26070 interne)


Stringhe allocate: 1 (26150 interne); stringhe deallocate: 0 (26075 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5115609976490452 0.06833176591246482 0.8661503839622203 0.4884390023509548 0.3545893863131752 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.836023000465124 0.4275511418314261 0.9422608086535365 0.7976627884024572 0.8513703363821104 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5115609257667959 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5107064170966225


ris (2 : 2): [ 1 0.5107064170966225 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26185 interne); stringhe deallocate: 0 (26105 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9317952924035207


ris (2 : 2): [ -1 0.9317952924035207 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26205 interne); stringhe deallocate: 0 (26125 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8657615024446524


ris (2 : 2): [ 1 0.8657615024446524 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26225 interne); stringhe deallocate: 0 (26145 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9317951244803595 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5107064170966225


ris (2 : 2): [ -1 0.5107064170966225 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26245 interne); stringhe deallocate: 0 (26165 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869940524268e-314 0 0.5179123966222523 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 -68603444 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.35505508534803


ris (2 : 2): [ 1 0.35505508534803 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26265 interne); stringhe deallocate: 0 (26185 interne)


Stringhe allocate: 1 (26265 interne); stringhe deallocate: 0 (26190 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5107064170966225 0.06820470759647934 0.8657615024446524 0.4892935829033775 0.35505508534803 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8357361037304802 0.4274730728523136 0.9420930554315352 0.7980007997967139 0.8514775808082629 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5107059521170765 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5069775147528297


ris (2 : 2): [ 1 0.5069775147528297 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26300 interne); stringhe deallocate: 0 (26220 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9323471407776638


ris (2 : 2): [ -1 0.9323471407776638 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26320 interne); stringhe deallocate: 0 (26240 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8640626029926386


ris (2 : 2): [ 1 0.8640626029926386 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26340 interne); stringhe deallocate: 0 (26260 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9323468249293647 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5069775147528297


ris (2 : 2): [ -1 0.5069775147528297 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26360 interne); stringhe deallocate: 0 (26280 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161449723268464e-314 0 0.5138926593788984 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 -390760736 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3570850882398089


ris (2 : 2): [ 1 0.3570850882398089 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26380 interne); stringhe deallocate: 0 (26300 interne)


Stringhe allocate: 1 (26380 interne); stringhe deallocate: 0 (26305 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5069775147528297 0.06765285922233622 0.8640626029926386 0.4930224852471703 0.3570850882398089 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8344842499371701 0.4271339983190171 0.9413601950510426 0.7994756888246695 0.8519450640515658 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5069770855398943 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5064622852297326


ris (2 : 2): [ 1 0.5064622852297326 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26415 interne); stringhe deallocate: 0 (26335 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9324230442471918


ris (2 : 2): [ -1 0.9324230442471918 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26435 interne); stringhe deallocate: 0 (26355 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.863827742490253


ris (2 : 2): [ 1 0.863827742490253 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26455 interne); stringhe deallocate: 0 (26375 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9324226420376354 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5064622852297326


ris (2 : 2): [ -1 0.5064622852297326 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26475 interne); stringhe deallocate: 0 (26395 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870098625275e-314 0 0.513337144089526 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 1693909779 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3573654572605204


ris (2 : 2): [ 1 0.3573654572605204 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26495 interne); stringhe deallocate: 0 (26415 interne)


Stringhe allocate: 1 (26495 interne); stringhe deallocate: 0 (26420 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5064622852297326 0.0675769557528082 0.863827742490253 0.4935377147702674 0.3573654572605204 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.834311278919576 0.4270873606288259 0.941258882429547 0.7996794770444815 0.852009629387731 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5064621014065178 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5098447626818651


ris (2 : 2): [ 1 0.5098447626818651 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26530 interne); stringhe deallocate: 0 (26450 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9319251893213033


ris (2 : 2): [ -1 0.9319251893213033 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26550 interne); stringhe deallocate: 0 (26470 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8653709720294212


ris (2 : 2): [ 1 0.8653709720294212 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26570 interne); stringhe deallocate: 0 (26490 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9319248241874272 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5098447626818651


ris (2 : 2): [ -1 0.5098447626818651 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26590 interne); stringhe deallocate: 0 (26510 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869798233362e-314 0 0.5169835178383266 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 -155702019 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3555262093475561


ris (2 : 2): [ 1 0.3555262093475561 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26610 interne); stringhe deallocate: 0 (26530 interne)


Stringhe allocate: 1 (26610 interne); stringhe deallocate: 0 (26535 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5098447626818651 0.0680748106786967 0.8653709720294212 0.4901552373181349 0.3555262093475561 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.835446832184007 0.4273932597390791 0.9419245909186054 0.7983416091086902 0.8515860745331676 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5098443119972647 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5064701864473911


ris (2 : 2): [ 1 0.5064701864473911 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26645 interne); stringhe deallocate: 0 (26565 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9324151329017298


ris (2 : 2): [ -1 0.9324151329017298 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26665 interne); stringhe deallocate: 0 (26585 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8638249272556612


ris (2 : 2): [ 1 0.8638249272556612 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26685 interne); stringhe deallocate: 0 (26605 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.93241501741125 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5064701864473911


ris (2 : 2): [ -1 0.5064701864473911 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26705 interne); stringhe deallocate: 0 (26625 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161448569131115e-314 0 0.5133452503214055 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 -152692448 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3573547408082701


ris (2 : 2): [ 1 0.3573547408082701 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26725 interne); stringhe deallocate: 0 (26645 interne)


Stringhe allocate: 1 (26725 interne); stringhe deallocate: 0 (26650 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5064701864473911 0.06758486709827016 0.8638249272556612 0.4935298135526089 0.3573547408082701 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8343139314881835 0.4270922216303182 0.9412576680116533 0.7996763518837351 0.8520071615282638 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5064697308035999 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5064701864473911


ris (2 : 2): [ 1 0.5064701864473911 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26760 interne); stringhe deallocate: 0 (26680 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9324151329017298


ris (2 : 2): [ -1 0.9324151329017298 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26780 interne); stringhe deallocate: 0 (26700 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8638249272556612


ris (2 : 2): [ 1 0.8638249272556612 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26800 interne); stringhe deallocate: 0 (26720 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9324150127860236 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5064701864473911


ris (2 : 2): [ -1 0.5064701864473911 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26820 interne); stringhe deallocate: 0 (26740 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870043289923e-314 0 0.513345250321013 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 -152692448 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3573547408082701


ris (2 : 2): [ 1 0.3573547408082701 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26840 interne); stringhe deallocate: 0 (26760 interne)


Stringhe allocate: 1 (26840 interne); stringhe deallocate: 0 (26765 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5064701864473911 0.06758486709827016 0.8638249272556612 0.4935298135526089 0.3573547408082701 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8343139314881835 0.4270922216303182 0.9412576680116533 0.7996763518837351 0.8520071615282638 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5064697308035662 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5048157325340872


ris (2 : 2): [ 1 0.5048157325340872 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26875 interne); stringhe deallocate: 0 (26795 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9326443395243629


ris (2 : 2): [ -1 0.9326443395243629 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26895 interne); stringhe deallocate: 0 (26815 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8630570295983379


ris (2 : 2): [ 1 0.8630570295983379 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26915 interne); stringhe deallocate: 0 (26835 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9326438944789253 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5048157325340872


ris (2 : 2): [ -1 0.5048157325340872 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26935 interne); stringhe deallocate: 0 (26855 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870557118195e-314 0 0.5115609256754841 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 1387769758 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3582412970642507


ris (2 : 2): [ 1 0.3582412970642507 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26955 interne); stringhe deallocate: 0 (26875 interne)


Stringhe allocate: 1 (26955 interne); stringhe deallocate: 0 (26880 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5048157325340872 0.06735566047563713 0.8630570295983379 0.4951842674659128 0.3582412970642507 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8337585041220916 0.426951389234611 0.9409264172312388 0.8003307363912973 0.8522113238945318 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5048155826992424 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5040239970917355


ris (2 : 2): [ 1 0.5040239970917355 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26990 interne); stringhe deallocate: 0 (26910 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.932742599319341


ris (2 : 2): [ -1 0.932742599319341 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27010 interne); stringhe deallocate: 0 (26930 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8626793004808033


ris (2 : 2): [ 1 0.8626793004808033 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27030 interne); stringhe deallocate: 0 (26950 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9327425997707897 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5040239970917355


ris (2 : 2): [ -1 0.5040239970917355 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27050 interne); stringhe deallocate: 0 (26970 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869940524268e-314 0 0.5107059566502823 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 -285405184 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3586553033890678


ris (2 : 2): [ 1 0.3586553033890678 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27070 interne); stringhe deallocate: 0 (26990 interne)


Stringhe allocate: 1 (27070 interne); stringhe deallocate: 0 (26995 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5040239970917355 0.067257400680659 0.8626793004808033 0.4959760029082645 0.3586553033890678 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8334927055236232 0.4268910150527068 0.9407634748602403 0.8006438907217967 0.852306664162399 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5040235608070791 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5005694366137989


ris (2 : 2): [ 1 0.5005694366137989 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27105 interne); stringhe deallocate: 0 (27025 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9331689573677516


ris (2 : 2): [ -1 0.9331689573677516 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27125 interne); stringhe deallocate: 0 (27045 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8610292677209331


ris (2 : 2): [ 1 0.8610292677209331 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27145 interne); stringhe deallocate: 0 (27065 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9331688923331791 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5005694366137989


ris (2 : 2): [ -1 0.5005694366137989 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27165 interne); stringhe deallocate: 0 (27085 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161449723268464e-314 0 0.50697709007318 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 838092008 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3604598311071342


ris (2 : 2): [ 1 0.3604598311071342 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27185 interne); stringhe deallocate: 0 (27105 interne)


Stringhe allocate: 1 (27185 interne); stringhe deallocate: 0 (27110 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5005694366137989 0.06683104263224837 0.8610292677209331 0.4994305633862011 0.3604598311071342 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8323329528029 0.4266290460716321 0.9400516942808832 0.8020102695849489 0.8527222234079981 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5005693478079945 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.500092129716514


ris (2 : 2): [ 1 0.500092129716514 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27220 interne); stringhe deallocate: 0 (27140 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9332275508771286


ris (2 : 2): [ -1 0.9332275508771286 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27240 interne); stringhe deallocate: 0 (27160 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8608011714003288


ris (2 : 2): [ 1 0.8608011714003288 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27260 interne); stringhe deallocate: 0 (27180 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9332275479288281 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.500092129716514


ris (2 : 2): [ -1 0.500092129716514 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27280 interne); stringhe deallocate: 0 (27200 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870098625275e-314 0 0.5064621059426191 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 902025796 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3607090416838148


ris (2 : 2): [ 1 0.3607090416838148 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27300 interne); stringhe deallocate: 0 (27220 interne)


Stringhe allocate: 1 (27300 interne); stringhe deallocate: 0 (27225 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.500092129716514 0.06677244912287139 0.8608011714003288 0.499907870283486 0.3607090416838148 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.832172713033968 0.4265930442135545 0.9399532995488649 0.8021990583063658 0.8527796133600637 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5000920338125994 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5032256229980889


ris (2 : 2): [ 1 0.5032256229980889 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27335 interne); stringhe deallocate: 0 (27255 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9328433466203973


ris (2 : 2): [ -1 0.9328433466203973 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27355 interne); stringhe deallocate: 0 (27275 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8622998581065731


ris (2 : 2): [ 1 0.8622998581065731 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27375 interne); stringhe deallocate: 0 (27295 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.93284321255409 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5032256229980889


ris (2 : 2): [ -1 0.5032256229980889 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27395 interne); stringhe deallocate: 0 (27315 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869798233362e-314 0 0.5098443119056881 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 -1624692978 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3590742351084841


ris (2 : 2): [ 1 0.3590742351084841 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27415 interne); stringhe deallocate: 0 (27335 interne)


Stringhe allocate: 1 (27415 interne); stringhe deallocate: 0 (27340 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5032256229980889 0.06715665337960275 0.8622998581065731 0.4967743770019111 0.3590742351084841 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.833224678220823 0.4268291124619099 0.940599793435525 0.8009596708314268 0.8524031386845331 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.503225330776635 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5000997708315625


ris (2 : 2): [ 1 0.5000997708315625 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27450 interne); stringhe deallocate: 0 (27370 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9332203109246388


ris (2 : 2): [ -1 0.9332203109246388 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27470 interne); stringhe deallocate: 0 (27390 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8607988922994152


ris (2 : 2): [ 1 0.8607988922994152 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27490 interne); stringhe deallocate: 0 (27410 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9332199137660346 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5000997708315625


ris (2 : 2): [ -1 0.5000997708315625 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27510 interne); stringhe deallocate: 0 (27430 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161448569131115e-314 0 0.5064697353371059 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 1007594831 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3606991214678527


ris (2 : 2): [ 1 0.3606991214678527 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27530 interne); stringhe deallocate: 0 (27450 interne)


Stringhe allocate: 1 (27530 interne); stringhe deallocate: 0 (27455 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5000997708315625 0.06677968907536125 0.8607988922994152 0.4999002291684375 0.3606991214678527 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8321752782818552 0.4265974926882201 0.9399523164048885 0.8021960360237455 0.8527773288634499 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5000996678322256 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5000997708315625


ris (2 : 2): [ 1 0.5000997708315625 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27565 interne); stringhe deallocate: 0 (27485 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9332203109246388


ris (2 : 2): [ -1 0.9332203109246388 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27585 interne); stringhe deallocate: 0 (27505 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8607988922994152


ris (2 : 2): [ 1 0.8607988922994152 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27605 interne); stringhe deallocate: 0 (27525 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.933219913766151 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.5000997708315625


ris (2 : 2): [ -1 0.5000997708315625 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27625 interne); stringhe deallocate: 0 (27545 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870043289923e-314 0 0.5064697353372747 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 1007594831 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3606991214678527


ris (2 : 2): [ 1 0.3606991214678527 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27645 interne); stringhe deallocate: 0 (27565 interne)


Stringhe allocate: 1 (27645 interne); stringhe deallocate: 0 (27570 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.5000997708315625 0.06677968907536125 0.8607988922994152 0.4999002291684375 0.3606991214678527 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8321752782818552 0.4265974926882201 0.9399523164048885 0.8021960360237455 0.8527773288634499 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5000996632071644 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4985677823005988


ris (2 : 2): [ 1 0.4985677823005988 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27680 interne); stringhe deallocate: 0 (27600 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9333948106829653


ris (2 : 2): [ -1 0.9333948106829653 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27700 interne); stringhe deallocate: 0 (27620 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8600540849631465


ris (2 : 2): [ 1 0.8600540849631465 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27720 interne); stringhe deallocate: 0 (27640 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9333944363090092 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4985677823005988


ris (2 : 2): [ -1 0.4985677823005988 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27740 interne); stringhe deallocate: 0 (27660 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870557118195e-314 0 0.5048155872350755 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 -671842275 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3614863026625477


ris (2 : 2): [ 1 0.3614863026625477 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27760 interne); stringhe deallocate: 0 (27680 interne)


Stringhe allocate: 1 (27760 interne); stringhe deallocate: 0 (27685 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4985677823005988 0.06660518931703474 0.8600540849631465 0.5014322176994013 0.3614863026625477 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8316609645570704 0.4264902740628018 0.9396310261794991 0.8028019819206751 0.8529586064465772 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4985675832972909 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4978351961499523


ris (2 : 2): [ 1 0.4978351961499523 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27795 interne); stringhe deallocate: 0 (27715 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.933467602814483


ris (2 : 2): [ -1 0.933467602814483 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27815 interne); stringhe deallocate: 0 (27735 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8596884286085861


ris (2 : 2): [ 1 0.8596884286085861 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27835 interne); stringhe deallocate: 0 (27755 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9334673970194043 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4978351961499523


ris (2 : 2): [ -1 0.4978351961499523 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27855 interne); stringhe deallocate: 0 (27775 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869940524268e-314 0 0.5040235607157673 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 663798060 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3618532324586338


ris (2 : 2): [ 1 0.3618532324586338 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27875 interne); stringhe deallocate: 0 (27795 interne)


Stringhe allocate: 1 (27875 interne); stringhe deallocate: 0 (27800 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4978351961499523 0.06653239718551696 0.8596884286085861 0.5021648038500477 0.3618532324586338 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8314150233478188 0.426445548085199 0.9394732916797821 0.8030917409907723 0.8530431056026293 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4978351614210324 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4946388332194184


ris (2 : 2): [ 1 0.4946388332194184 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27910 interne); stringhe deallocate: 0 (27830 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9337829960642889


ris (2 : 2): [ -1 0.9337829960642889 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27930 interne); stringhe deallocate: 0 (27850 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8580912620465019


ris (2 : 2): [ 1 0.8580912620465019 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27950 interne); stringhe deallocate: 0 (27870 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9337825817557501 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4946388332194184


ris (2 : 2): [ -1 0.4946388332194184 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27970 interne); stringhe deallocate: 0 (27890 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161449723268464e-314 0 0.5005693523412003 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 -1560243337 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3634524288270835


ris (2 : 2): [ 1 0.3634524288270835 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27990 interne); stringhe deallocate: 0 (27910 interne)


Stringhe allocate: 1 (27990 interne); stringhe deallocate: 0 (27915 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4946388332194184 0.06621700393571106 0.8580912620465019 0.5053611667805815 0.3634524288270835 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8303419517866808 0.4262517596752053 0.9387843161827264 0.8043559952353104 0.8534113797110203 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4946386858448237 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4941972155751403


ris (2 : 2): [ 1 0.4941972155751403 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28025 interne); stringhe deallocate: 0 (27945 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9338262842518917


ris (2 : 2): [ -1 0.9338262842518917 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28045 interne); stringhe deallocate: 0 (27965 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8578704818175086


ris (2 : 2): [ 1 0.8578704818175086 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28065 interne); stringhe deallocate: 0 (27985 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9338259737941108 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4941972155751403


ris (2 : 2): [ -1 0.4941972155751403 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28085 interne); stringhe deallocate: 0 (28005 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870098625275e-314 0 0.5000920383458851 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 1537923306 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3636732662423683


ris (2 : 2): [ 1 0.3636732662423683 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28105 interne); stringhe deallocate: 0 (28025 interne)


Stringhe allocate: 1 (28105 interne); stringhe deallocate: 0 (28030 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4941972155751403 0.06617371574810826 0.8578704818175086 0.5058027844248597 0.3636732662423683 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8301936934864593 0.4262251619307951 0.938689077419518 0.8045306678220521 0.8534622356933237 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.494197132323797 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4970963881876601


ris (2 : 2): [ 1 0.4970963881876601 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28140 interne); stringhe deallocate: 0 (28060 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9335425636539917


ris (2 : 2): [ -1 0.9335425636539917 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28160 interne); stringhe deallocate: 0 (28080 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8593210151330146


ris (2 : 2): [ 1 0.8593210151330146 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28180 interne); stringhe deallocate: 0 (28100 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9335422556850963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4970963881876601


ris (2 : 2): [ -1 0.4970963881876601 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28200 interne); stringhe deallocate: 0 (28120 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869798233362e-314 0 0.5032253353127363 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 1586393653 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3622246269453546


ris (2 : 2): [ 1 0.3622246269453546 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28220 interne); stringhe deallocate: 0 (28140 interne)


Stringhe allocate: 1 (28220 interne); stringhe deallocate: 0 (28145 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4970963881876601 0.06645743634600831 0.8593210151330146 0.50290361181234 0.3622246269453546 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8311669933741557 0.4263994895791622 0.9393147992044411 0.8033839609678293 0.8531286329188219 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4970963022456552 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4942045855166469


ris (2 : 2): [ 1 0.4942045855166469 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28255 interne); stringhe deallocate: 0 (28175 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9338196709878247


ris (2 : 2): [ -1 0.9338196709878247 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28275 interne); stringhe deallocate: 0 (28195 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8578686770263981


ris (2 : 2): [ 1 0.8578686770263981 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28295 interne); stringhe deallocate: 0 (28215 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9338192982169682 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4942045855166469


ris (2 : 2): [ -1 0.4942045855166469 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28315 interne); stringhe deallocate: 0 (28235 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161448569131115e-314 0 0.5000996677406491 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 1159000421 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3636640915097513


ris (2 : 2): [ 1 0.3636640915097513 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28335 interne); stringhe deallocate: 0 (28255 interne)


Stringhe allocate: 1 (28335 interne); stringhe deallocate: 0 (28260 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4942045855166469 0.0661803290121753 0.8578686770263981 0.5057954144833532 0.3636640915097513 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8301961676969323 0.4262292253466393 0.9386882988802712 0.8045277527964326 0.8534601228718211 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4942045232984738 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4942045855166469


ris (2 : 2): [ 1 0.4942045855166469 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28370 interne); stringhe deallocate: 0 (28290 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9338196709878247


ris (2 : 2): [ -1 0.9338196709878247 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28390 interne); stringhe deallocate: 0 (28310 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8578686770263981


ris (2 : 2): [ 1 0.8578686770263981 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28410 interne); stringhe deallocate: 0 (28330 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9338193028421582 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4942045855166469


ris (2 : 2): [ -1 0.4942045855166469 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28430 interne); stringhe deallocate: 0 (28350 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870043289923e-314 0 0.5000996677406704 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 1159000421 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3636640915097513


ris (2 : 2): [ 1 0.3636640915097513 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28450 interne); stringhe deallocate: 0 (28370 interne)


Stringhe allocate: 1 (28450 interne); stringhe deallocate: 0 (28375 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4942045855166469 0.0661803290121753 0.8578686770263981 0.5057954144833532 0.3636640915097513 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8301961676969323 0.4262292253466393 0.9386882988802712 0.8045277527964326 0.8534601228718211 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4942045256122798 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4927877930743025


ris (2 : 2): [ 1 0.4927877930743025 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28485 interne); stringhe deallocate: 0 (28405 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9339458702895196


ris (2 : 2): [ -1 0.9339458702895196 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28505 interne); stringhe deallocate: 0 (28425 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8571486181285627


ris (2 : 2): [ 1 0.8571486181285627 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28525 interne); stringhe deallocate: 0 (28445 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9339456600638556 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4927877930743025


ris (2 : 2): [ -1 0.4927877930743025 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28545 interne); stringhe deallocate: 0 (28465 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870557118195e-314 0 0.4985675855641452 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 -808988361 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3643608250542602


ris (2 : 2): [ 1 0.3643608250542602 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28565 interne); stringhe deallocate: 0 (28485 interne)


Stringhe allocate: 1 (28565 interne); stringhe deallocate: 0 (28490 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4927877930743025 0.06605412971048041 0.8571486181285627 0.5072122069256975 0.3643608250542602 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8297205271920973 0.4261516841753149 0.9383776844779772 0.8050881352992306 0.853620571538384 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4927876016841486 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4921107997204154


ris (2 : 2): [ 1 0.4921107997204154 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28600 interne); stringhe deallocate: 0 (28520 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9339962320019096


ris (2 : 2): [ -1 0.9339962320019096 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28620 interne); stringhe deallocate: 0 (28540 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.856795743617824


ris (2 : 2): [ 1 0.856795743617824 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28640 interne); stringhe deallocate: 0 (28560 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9339962046595893 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4921107997204154


ris (2 : 2): [ -1 0.4921107997204154 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28660 interne); stringhe deallocate: 0 (28580 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869940524268e-314 0 0.4978351636889489 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 1270067087 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3646849438974085


ris (2 : 2): [ 1 0.3646849438974085 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28680 interne); stringhe deallocate: 0 (28600 interne)


Stringhe allocate: 1 (28680 interne); stringhe deallocate: 0 (28605 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4921107997204154 0.06600376799809038 0.856795743617824 0.5078892002795845 0.3646849438974085 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8294932493982661 0.4261207402151171 0.9382254637283033 0.8053559058058273 0.8536952118892053 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4921107313380624 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4891570997874373


ris (2 : 2): [ 1 0.4891570997874373 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28715 interne); stringhe deallocate: 0 (28635 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9342139049753847


ris (2 : 2): [ -1 0.9342139049753847 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28735 interne); stringhe deallocate: 0 (28655 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8552545219073694


ris (2 : 2): [ 1 0.8552545219073694 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28755 interne); stringhe deallocate: 0 (28675 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9342136424038463 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4891570997874373


ris (2 : 2): [ -1 0.4891570997874373 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28775 interne); stringhe deallocate: 0 (28695 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161449723268464e-314 0 0.4946386857991678 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 -1802740163 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3660974221199321


ris (2 : 2): [ 1 0.3660974221199321 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28795 interne); stringhe deallocate: 0 (28715 interne)


Stringhe allocate: 1 (28795 interne); stringhe deallocate: 0 (28720 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4891570997874373 0.0657860950246153 0.8552545219073694 0.5108429002125627 0.3660974221199321 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8285016437930526 0.4259869944883006 0.9375606213635546 0.8065241797967712 0.8540204872389273 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4891569635603146 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4887490226026182


ris (2 : 2): [ 1 0.4887490226026182 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28830 interne); stringhe deallocate: 0 (28750 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9342437156847764


ris (2 : 2): [ -1 0.9342437156847764 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28850 interne); stringhe deallocate: 0 (28770 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8550414824307264


ris (2 : 2): [ 1 0.8550414824307264 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28870 interne); stringhe deallocate: 0 (28790 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.934243683287769 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4887490226026182


ris (2 : 2): [ -1 0.4887490226026182 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28890 interne); stringhe deallocate: 0 (28810 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870098625275e-314 0 0.4941971345903999 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 -83759370 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3662924598281082


ris (2 : 2): [ 1 0.3662924598281082 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28910 interne); stringhe deallocate: 0 (28830 interne)


Stringhe allocate: 1 (28910 interne); stringhe deallocate: 0 (28835 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4887490226026182 0.06575628431522362 0.8550414824307264 0.5112509773973818 0.3662924598281082 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8283646455762369 0.4259686777678972 0.93746872175659 0.8066855861590081 0.8540654018844944 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4887487932666987 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4914279829648132


ris (2 : 2): [ 1 0.4914279829648132 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28945 interne); stringhe deallocate: 0 (28865 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9340484735536423


ris (2 : 2): [ -1 0.9340484735536423 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28965 interne); stringhe deallocate: 0 (28885 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8564410859795899


ris (2 : 2): [ 1 0.8564410859795899 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28985 interne); stringhe deallocate: 0 (28905 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9340481846780957 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4914279829648132


ris (2 : 2): [ -1 0.4914279829648132 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29005 interne); stringhe deallocate: 0 (28925 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869798233362e-314 0 0.497096304512298 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 1523258461 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3650131030147767


ris (2 : 2): [ 1 0.3650131030147767 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29025 interne); stringhe deallocate: 0 (28945 interne)


Stringhe allocate: 1 (29025 interne); stringhe deallocate: 0 (28950 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4914279829648132 0.06595152644635771 0.8564410859795899 0.5085720170351868 0.3650131030147767 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8292640165927839 0.4260886412172721 0.9380724737844943 0.805625979636701 0.8537707826625909 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4914279005275324 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4887561133352182


ris (2 : 2): [ 1 0.4887561133352182 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29060 interne); stringhe deallocate: 0 (28980 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9342376863078894


ris (2 : 2): [ -1 0.9342376863078894 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29080 interne); stringhe deallocate: 0 (29000 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8550400959216161


ris (2 : 2): [ 1 0.8550400959216161 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29100 interne); stringhe deallocate: 0 (29020 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9342374844046759 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4887561133352182


ris (2 : 2): [ -1 0.4887561133352182 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29120 interne); stringhe deallocate: 0 (29040 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161448569131115e-314 0 0.4942045255665244 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 -1197495469 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3662839825863979


ris (2 : 2): [ 1 0.3662839825863979 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29140 interne); stringhe deallocate: 0 (29060 interne)


Stringhe allocate: 1 (29140 interne); stringhe deallocate: 0 (29065 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4887561133352182 0.06576231369211061 0.8550400959216161 0.5112438866647817 0.3662839825863979 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8283670260516917 0.425972382423469 0.9374681236531572 0.8066827815686092 0.854063449686069 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4887559435115243 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4887561133352182


ris (2 : 2): [ 1 0.4887561133352182 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29175 interne); stringhe deallocate: 0 (29095 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9342376863078894


ris (2 : 2): [ -1 0.9342376863078894 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29195 interne); stringhe deallocate: 0 (29115 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8550400959216161


ris (2 : 2): [ 1 0.8550400959216161 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29215 interne); stringhe deallocate: 0 (29135 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9342374842616401 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4887561133352182


ris (2 : 2): [ -1 0.4887561133352182 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29235 interne); stringhe deallocate: 0 (29155 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870043289923e-314 0 0.4942045255664915 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 -1197495469 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3662839825863979


ris (2 : 2): [ 1 0.3662839825863979 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29255 interne); stringhe deallocate: 0 (29175 interne)


Stringhe allocate: 1 (29255 interne); stringhe deallocate: 0 (29180 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4887561133352182 0.06576231369211061 0.8550400959216161 0.5112438866647817 0.3662839825863979 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8283670260516917 0.425972382423469 0.9374681236531572 0.8066827815686092 0.854063449686069 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4887559435102657 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.487447528647539


ris (2 : 2): [ 1 0.487447528647539 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29290 interne); stringhe deallocate: 0 (29210 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9343214222076435


ris (2 : 2): [ -1 0.9343214222076435 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29310 interne); stringhe deallocate: 0 (29230 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8543460431682587


ris (2 : 2): [ 1 0.8543460431682587 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29330 interne); stringhe deallocate: 0 (29250 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9343214076016002 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.487447528647539


ris (2 : 2): [ -1 0.487447528647539 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29350 interne); stringhe deallocate: 0 (29270 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870557118195e-314 0 0.4927876039509016 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 511945016 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3668985145207196


ris (2 : 2): [ 1 0.3668985145207196 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29370 interne); stringhe deallocate: 0 (29290 interne)


Stringhe allocate: 1 (29370 interne); stringhe deallocate: 0 (29295 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.487447528647539 0.06567857779235653 0.8543460431682587 0.512552471352461 0.3668985145207196 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8279277126682598 0.425920932220008 0.937168727615149 0.8072003647660403 0.8542049683917483 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4874475046619624 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4868227136902226


ris (2 : 2): [ 1 0.4868227136902226 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29405 interne); stringhe deallocate: 0 (29325 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9343521176347729


ris (2 : 2): [ -1 0.9343521176347729 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29425 interne); stringhe deallocate: 0 (29345 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8540064738590338


ris (2 : 2): [ 1 0.8540064738590338 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29445 interne); stringhe deallocate: 0 (29365 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9343519253226811 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4868227136902226


ris (2 : 2): [ -1 0.4868227136902226 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29465 interne); stringhe deallocate: 0 (29385 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869940524268e-314 0 0.4921107336049166 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 1955592048 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3671837601688113


ris (2 : 2): [ 1 0.3671837601688113 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29485 interne); stringhe deallocate: 0 (29405 interne)


Stringhe allocate: 1 (29485 interne); stringhe deallocate: 0 (29410 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4868227136902226 0.06564788236522712 0.8540064738590338 0.5131772863097774 0.3671837601688113 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8277179520195971 0.4259020718987387 0.9370222463782122 0.8074474972034405 0.8542706567517245 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4868226072536066 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4840967639104658


ris (2 : 2): [ 1 0.4840967639104658 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29520 interne); stringhe deallocate: 0 (29440 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9344841233404464


ris (2 : 2): [ -1 0.9344841233404464 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29540 interne); stringhe deallocate: 0 (29460 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8525234662802526


ris (2 : 2): [ 1 0.8525234662802526 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29560 interne); stringhe deallocate: 0 (29480 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9344840138406934 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4840967639104658


ris (2 : 2): [ -1 0.4840967639104658 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29580 interne); stringhe deallocate: 0 (29500 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161449723268464e-314 0 0.4891569658282311 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 -28962157 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3684267023697868


ris (2 : 2): [ 1 0.3684267023697868 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29600 interne); stringhe deallocate: 0 (29520 interne)


Stringhe allocate: 1 (29600 interne); stringhe deallocate: 0 (29525 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4840967639104658 0.06551587665955361 0.8525234662802526 0.5159032360895342 0.3684267023697868 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8268028058834045 0.4258209630740308 0.9363825160532829 0.8085256894032479 0.8545568901623779 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4840965292201425 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4837201645845436


ris (2 : 2): [ 1 0.4837201645845436 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29635 interne); stringhe deallocate: 0 (29555 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9345021199651288


ris (2 : 2): [ -1 0.9345021199651288 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29655 interne); stringhe deallocate: 0 (29575 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8523184803822632


ris (2 : 2): [ 1 0.8523184803822632 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29675 interne); stringhe deallocate: 0 (29595 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9345016521903204 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4837201645845436


ris (2 : 2): [ -1 0.4837201645845436 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29695 interne); stringhe deallocate: 0 (29615 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870098625275e-314 0 0.4887487932210428 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 1809029958 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3685983157977196


ris (2 : 2): [ 1 0.3685983157977196 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29715 interne); stringhe deallocate: 0 (29635 interne)


Stringhe allocate: 1 (29715 interne); stringhe deallocate: 0 (29640 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4837201645845436 0.06549788003487123 0.8523184803822632 0.5162798354154564 0.3685983157977196 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8266763753010915 0.4258099053317215 0.9362940905475722 0.8086746453593251 0.8545964105010973 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4837200662824825 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4861924553709658


ris (2 : 2): [ 1 0.4861924553709658 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29750 interne); stringhe deallocate: 0 (29670 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9343844317207719


ris (2 : 2): [ -1 0.9343844317207719 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29770 interne); stringhe deallocate: 0 (29690 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8536651108975286


ris (2 : 2): [ 1 0.8536651108975286 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29790 interne); stringhe deallocate: 0 (29710 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9343843501063667 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4861924553709658


ris (2 : 2): [ -1 0.4861924553709658 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29810 interne); stringhe deallocate: 0 (29730 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869798233362e-314 0 0.4914279027941353 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 -170371632 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3674726555265628


ris (2 : 2): [ 1 0.3674726555265628 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29830 interne); stringhe deallocate: 0 (29750 interne)


Stringhe allocate: 1 (29830 interne); stringhe deallocate: 0 (29755 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4861924553709658 0.0656155682792281 0.8536651108975286 0.5138075446290342 0.3674726555265628 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8275063639448812 0.4258822170180461 0.9368749914070259 0.8076967826483642 0.8543371855923305 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4861922308429927 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4837269707707668


ris (2 : 2): [ 1 0.4837269707707668 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29865 interne); stringhe deallocate: 0 (29785 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9344966336258186


ris (2 : 2): [ -1 0.9344966336258186 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29885 interne); stringhe deallocate: 0 (29805 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8523174614454501


ris (2 : 2): [ 1 0.8523174614454501 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29905 interne); stringhe deallocate: 0 (29825 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9344964068386608 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4837269707707668


ris (2 : 2): [ -1 0.4837269707707668 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29925 interne); stringhe deallocate: 0 (29845 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161448569131115e-314 0 0.4887559457781672 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 -135670672 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3685904906746833


ris (2 : 2): [ 1 0.3685904906746833 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29945 interne); stringhe deallocate: 0 (29865 interne)


Stringhe allocate: 1 (29945 interne); stringhe deallocate: 0 (29870 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4837269707707668 0.06550336637418142 0.8523174614454501 0.5162730292292332 0.3685904906746833 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8266786602496516 0.4258132763264155 0.9362936510051262 0.8086719533152711 0.8545946084771144 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4837267420039728 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4837269707707668


ris (2 : 2): [ 1 0.4837269707707668 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29980 interne); stringhe deallocate: 0 (29900 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9344966336258186


ris (2 : 2): [ -1 0.9344966336258186 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30000 interne); stringhe deallocate: 0 (29920 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8523174614454501


ris (2 : 2): [ 1 0.8523174614454501 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30020 interne); stringhe deallocate: 0 (29940 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9344964069816166 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4837269707707668


ris (2 : 2): [ -1 0.4837269707707668 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30040 interne); stringhe deallocate: 0 (29960 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870043289923e-314 0 0.4887559457783164 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 -135670672 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3685904906746833


ris (2 : 2): [ 1 0.3685904906746833 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30060 interne); stringhe deallocate: 0 (29980 interne)


Stringhe allocate: 1 (30060 interne); stringhe deallocate: 0 (29985 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4837269707707668 0.06550336637418142 0.8523174614454501 0.5162730292292332 0.3685904906746833 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8266786602496516 0.4258132763264155 0.9362936510051262 0.8086719533152711 0.8545946084771144 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4837267420039559 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4825198909643224


ris (2 : 2): [ 1 0.4825198909643224 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30095 interne); stringhe deallocate: 0 (30015 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9345432139649639


ris (2 : 2): [ -1 0.9345432139649639 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30115 interne); stringhe deallocate: 0 (30035 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8516503211181647


ris (2 : 2): [ 1 0.8516503211181647 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30135 interne); stringhe deallocate: 0 (30055 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9345431416483105 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4825198909643224


ris (2 : 2): [ -1 0.4825198909643224 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30155 interne); stringhe deallocate: 0 (30075 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870557118195e-314 0 0.4874475046161741 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 467082939 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3691304301538423


ris (2 : 2): [ 1 0.3691304301538423 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30175 interne); stringhe deallocate: 0 (30095 interne)


Stringhe allocate: 1 (30175 interne); stringhe deallocate: 0 (30100 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4825198909643224 0.06545678603503613 0.8516503211181647 0.5174801090356775 0.3691304301538423 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8262734237228649 0.4257846557713925 0.9360058642773615 0.8091493883881833 0.854718949511271 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4825198671552853 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4819439836646856


ris (2 : 2): [ 1 0.4819439836646856 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30210 interne); stringhe deallocate: 0 (30130 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9345567536457546


ris (2 : 2): [ -1 0.9345567536457546 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30230 interne); stringhe deallocate: 0 (30150 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8513244177486548


ris (2 : 2): [ 1 0.8513244177486548 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30250 interne); stringhe deallocate: 0 (30170 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9345564884635138 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4819439836646856


ris (2 : 2): [ -1 0.4819439836646856 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30270 interne); stringhe deallocate: 0 (30190 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869940524268e-314 0 0.4868226095203596 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 -1810497398 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3693804340839691


ris (2 : 2): [ 1 0.3693804340839691 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30290 interne); stringhe deallocate: 0 (30210 interne)


Stringhe allocate: 1 (30290 interne); stringhe deallocate: 0 (30215 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4819439836646856 0.06544324635424537 0.8513244177486548 0.5180560163353144 0.3693804340839691 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8260800821785777 0.4257763365279912 0.9358652781661001 0.809377176428481 0.8547765221623088 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4819438501819819 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4794314995903454


ris (2 : 2): [ 1 0.4794314995903454 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30325 interne); stringhe deallocate: 0 (30245 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9346140387569906


ris (2 : 2): [ -1 0.9346140387569906 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30345 interne); stringhe deallocate: 0 (30265 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.849901184972011


ris (2 : 2): [ 1 0.849901184972011 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30365 interne); stringhe deallocate: 0 (30285 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9346137087794624 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4794314995903454


ris (2 : 2): [ -1 0.4794314995903454 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30385 interne); stringhe deallocate: 0 (30305 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161449723268464e-314 0 0.4840965314869967 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 1960471255 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3704696853816655


ris (2 : 2): [ 1 0.3704696853816655 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30405 interne); stringhe deallocate: 0 (30325 interne)


Stringhe allocate: 1 (30405 interne); stringhe deallocate: 0 (30330 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4794314995903454 0.06538596124300944 0.849901184972011 0.5205685004096545 0.3704696853816655 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8252365999875436 0.4257411385945239 0.9352513331130339 0.8103709367505569 0.8550273625583896 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4794313928828791 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4790844026084268


ris (2 : 2): [ 1 0.4790844026084268 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30440 interne); stringhe deallocate: 0 (30360 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9346217319917374


ris (2 : 2): [ -1 0.9346217319917374 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30460 interne); stringhe deallocate: 0 (30380 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8497044675765982


ris (2 : 2): [ 1 0.8497044675765982 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30480 interne); stringhe deallocate: 0 (30400 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.93462133817411 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4790844026084268


ris (2 : 2): [ -1 0.4790844026084268 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30500 interne); stringhe deallocate: 0 (30420 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870098625275e-314 0 0.4837200685503991 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 -1605466785 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3706200649681714


ris (2 : 2): [ 1 0.3706200649681714 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30520 interne); stringhe deallocate: 0 (30440 interne)


Stringhe allocate: 1 (30520 interne); stringhe deallocate: 0 (30445 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4790844026084268 0.06537826800826263 0.8497044675765982 0.5209155973915731 0.3706200649681714 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8251200738269203 0.4257364116077218 0.9351664744210844 0.8105082236739113 0.8550619930198097 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4790842554316903 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4813629948345564


ris (2 : 2): [ 1 0.4813629948345564 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30555 interne); stringhe deallocate: 0 (30475 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9345716763768743


ris (2 : 2): [ -1 0.9345716763768743 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30575 interne); stringhe deallocate: 0 (30495 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8509967235462705


ris (2 : 2): [ 1 0.8509967235462705 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30595 interne); stringhe deallocate: 0 (30515 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9345712704154545 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4813629948345564


ris (2 : 2): [ -1 0.4813629948345564 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30615 interne); stringhe deallocate: 0 (30535 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869798233362e-314 0 0.4861922307973368 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 -1139512551 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3696337287117141


ris (2 : 2): [ 1 0.3696337287117141 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30635 interne); stringhe deallocate: 0 (30555 interne)


Stringhe allocate: 1 (30635 interne); stringhe deallocate: 0 (30560 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4813629948345564 0.06542832362312567 0.8509967235462705 0.5186370051654436 0.3696337287117141 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8258850346810001 0.4257671674911199 0.9357239195368063 0.8096069743614702 0.8548348526181762 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4813628217909054 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4790909212962813


ris (2 : 2): [ 1 0.4790909212962813 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30670 interne); stringhe deallocate: 0 (30590 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.934616749816102


ris (2 : 2): [ -1 0.934616749816102 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30690 interne); stringhe deallocate: 0 (30610 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.849703770378976


ris (2 : 2): [ 1 0.849703770378976 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30710 interne); stringhe deallocate: 0 (30630 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9346165745706738 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4790909212962813


ris (2 : 2): [ -1 0.4790909212962813 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30730 interne); stringhe deallocate: 0 (30650 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161448569131115e-314 0 0.4837267442705757 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 -139343007 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3706128490826947


ris (2 : 2): [ 1 0.3706128490826947 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30750 interne); stringhe deallocate: 0 (30670 interne)


Stringhe allocate: 1 (30750 interne); stringhe deallocate: 0 (30675 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4790909212962813 0.06538325018389801 0.849703770378976 0.5209090787037187 0.3706128490826947 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8251222622575537 0.4257394728269942 0.9351661736684329 0.8105056453438005 0.8550603312953069 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4790906950458735 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4790909212962813


ris (2 : 2): [ 1 0.4790909212962813 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30785 interne); stringhe deallocate: 0 (30705 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.934616749816102


ris (2 : 2): [ -1 0.934616749816102 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30805 interne); stringhe deallocate: 0 (30725 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.849703770378976


ris (2 : 2): [ 1 0.849703770378976 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30825 interne); stringhe deallocate: 0 (30745 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9346165699454474 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4790909212962813


ris (2 : 2): [ -1 0.4790909212962813 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30845 interne); stringhe deallocate: 0 (30765 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870043289923e-314 0 0.4837267442705988 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 -139343007 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3706128490826947


ris (2 : 2): [ 1 0.3706128490826947 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30865 interne); stringhe deallocate: 0 (30785 interne)


Stringhe allocate: 1 (30865 interne); stringhe deallocate: 0 (30790 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4790909212962813 0.06538325018389801 0.849703770378976 0.5209090787037187 0.3706128490826947 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8251222622575537 0.4257394728269942 0.9351661736684329 0.8105056453438005 0.8550603312953069 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4790906927333429 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4779789311752968


ris (2 : 2): [ 1 0.4779789311752968 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30900 interne); stringhe deallocate: 0 (30820 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9346309913864234


ris (2 : 2): [ -1 0.9346309913864234 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30920 interne); stringhe deallocate: 0 (30840 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8490641415894685


ris (2 : 2): [ 1 0.8490641415894685 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30940 interne); stringhe deallocate: 0 (30860 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9346308749171577 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4779789311752968


ris (2 : 2): [ -1 0.4779789311752968 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30960 interne); stringhe deallocate: 0 (30880 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870557118195e-314 0 0.4825198694233359 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 -245052485 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3710852104141717


ris (2 : 2): [ 1 0.3710852104141717 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30980 interne); stringhe deallocate: 0 (30900 interne)


Stringhe allocate: 1 (30980 interne); stringhe deallocate: 0 (30905 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4779789311752968 0.06536900861357664 0.8490641415894685 0.5220210688247031 0.3710852104141717 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8247489489007706 0.4257307223186365 0.934890254691888 0.8109454696881857 0.8551691099616546 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4779787084803964 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4774488049624874


ris (2 : 2): [ 1 0.4774488049624874 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31015 interne); stringhe deallocate: 0 (30935 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9346296507905536


ris (2 : 2): [ -1 0.9346296507905536 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31035 interne); stringhe deallocate: 0 (30955 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8487521231319756


ris (2 : 2): [ 1 0.8487521231319756 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31055 interne); stringhe deallocate: 0 (30975 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9346294444057994 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4774488049624874


ris (2 : 2): [ -1 0.4774488049624874 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31075 interne); stringhe deallocate: 0 (30995 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869940524268e-314 0 0.4819438501361937 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 1857355947 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3713033181694882


ris (2 : 2): [ 1 0.3713033181694882 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31095 interne); stringhe deallocate: 0 (31015 interne)


Stringhe allocate: 1 (31095 interne); stringhe deallocate: 0 (31020 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4774488049624874 0.0653703492094464 0.8487521231319756 0.5225511950375126 0.3713033181694882 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.824570976819645 0.4257315460266334 0.934755658165173 0.8111551499808343 0.8552193373387967 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.477448703977795 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4751361326194316


ris (2 : 2): [ 1 0.4751361326194316 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31130 interne); stringhe deallocate: 0 (31050 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.934622136500764


ris (2 : 2): [ -1 0.934622136500764 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31150 interne); stringhe deallocate: 0 (31070 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8473896081645721


ris (2 : 2): [ 1 0.8473896081645721 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31170 interne); stringhe deallocate: 0 (31090 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.934621815154224 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4751361326194316


ris (2 : 2): [ -1 0.4751361326194316 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31190 interne); stringhe deallocate: 0 (31110 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161449723268464e-314 0 0.4794313951496321 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 1638917483 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3722534755451405


ris (2 : 2): [ 1 0.3722534755451405 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31210 interne); stringhe deallocate: 0 (31130 interne)


Stringhe allocate: 1 (31210 interne); stringhe deallocate: 0 (31135 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4751361326194316 0.06537786349923602 0.8473896081645721 0.5248638673805683 0.3722534755451405 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8237945747102797 0.4257361630635277 0.9341679051723433 0.8120698789679601 0.855438146215088 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4751360460743159 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4748166498108419


ris (2 : 2): [ 1 0.4748166498108419 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31245 interne); stringhe deallocate: 0 (31165 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9346208954977047


ris (2 : 2): [ -1 0.9346208954977047 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31265 interne); stringhe deallocate: 0 (31185 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8472012888668473


ris (2 : 2): [ 1 0.8472012888668473 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31285 interne); stringhe deallocate: 0 (31205 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9346208661050977 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4748166498108419


ris (2 : 2): [ -1 0.4748166498108419 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31305 interne); stringhe deallocate: 0 (31225 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870098625275e-314 0 0.4790842576985446 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 1604463260 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3723846390560054


ris (2 : 2): [ 1 0.3723846390560054 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31325 interne); stringhe deallocate: 0 (31245 interne)


Stringhe allocate: 1 (31325 interne); stringhe deallocate: 0 (31250 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4748166498108419 0.06537910450229534 0.8472012888668473 0.5251833501891581 0.3723846390560054 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8236873190814226 0.4257369255782924 0.9340866691980653 0.812196243684857 0.8554683514644058 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4748165628657892 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4769139410921399


ris (2 : 2): [ 1 0.4769139410921399 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31360 interne); stringhe deallocate: 0 (31280 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.93462948121456


ris (2 : 2): [ -1 0.93462948121456 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31380 interne); stringhe deallocate: 0 (31300 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8484383280858823


ris (2 : 2): [ 1 0.8484383280858823 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31400 interne); stringhe deallocate: 0 (31320 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9346294445487189 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4769139410921399


ris (2 : 2): [ -1 0.4769139410921399 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31420 interne); stringhe deallocate: 0 (31340 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869798233362e-314 0 0.4813628240588219 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 218092112 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3715243869937424


ris (2 : 2): [ 1 0.3715243869937424 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31440 interne); stringhe deallocate: 0 (31360 interne)


Stringhe allocate: 1 (31440 interne); stringhe deallocate: 0 (31365 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4769139410921399 0.06537051878543998 0.8484383280858823 0.5230860589078601 0.3715243869937424 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8243914142290307 0.4257316502199292 0.9346202952650297 0.8113667041544475 0.8552702466115736 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4769139311061288 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4748228801457284


ris (2 : 2): [ 1 0.4748228801457284 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31475 interne); stringhe deallocate: 0 (31395 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.934616380591217


ris (2 : 2): [ -1 0.934616380591217 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31495 interne); stringhe deallocate: 0 (31415 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8472008720440919


ris (2 : 2): [ 1 0.8472008720440919 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31515 interne); stringhe deallocate: 0 (31435 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9346160929652534 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4748228801457284


ris (2 : 2): [ -1 0.4748228801457284 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31535 interne); stringhe deallocate: 0 (31455 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161448569131115e-314 0 0.4790906950002176 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 -2123918239 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3723779918983635


ris (2 : 2): [ 1 0.3723779918983635 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31555 interne); stringhe deallocate: 0 (31475 interne)


Stringhe allocate: 1 (31555 interne); stringhe deallocate: 0 (31480 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4748228801457284 0.06538361940878301 0.8472008720440919 0.5251771198542716 0.3723779918983635 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8236894107072261 0.4257396996914037 0.9340864893917308 0.8121937794067083 0.8554668207105207 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4748227617475704 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4748228801457284


ris (2 : 2): [ 1 0.4748228801457284 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31590 interne); stringhe deallocate: 0 (31510 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.934616380591217


ris (2 : 2): [ -1 0.934616380591217 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31610 interne); stringhe deallocate: 0 (31530 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8472008720440919


ris (2 : 2): [ 1 0.8472008720440919 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31630 interne); stringhe deallocate: 0 (31550 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9346160929653697 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4748228801457284


ris (2 : 2): [ -1 0.4748228801457284 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31650 interne); stringhe deallocate: 0 (31570 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870043289923e-314 0 0.4790906949999458 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 -2123918239 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3723779918983635


ris (2 : 2): [ 1 0.3723779918983635 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31670 interne); stringhe deallocate: 0 (31590 interne)


Stringhe allocate: 1 (31670 interne); stringhe deallocate: 0 (31595 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4748228801457284 0.06538361940878301 0.8472008720440919 0.5251771198542716 0.3723779918983635 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8236894107072261 0.4257396996914037 0.9340864893917308 0.8121937794067083 0.8554668207105207 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4748227640613765 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4737998524053826


ris (2 : 2): [ 1 0.4737998524053826 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31705 interne); stringhe deallocate: 0 (31625 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9346026453251777


ris (2 : 2): [ -1 0.9346026453251777 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31725 interne); stringhe deallocate: 0 (31645 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8465890866532132


ris (2 : 2): [ 1 0.8465890866532132 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31745 interne); stringhe deallocate: 0 (31665 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9346022648307377 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4737998524053826


ris (2 : 2): [ -1 0.4737998524053826 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31765 interne); stringhe deallocate: 0 (31685 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870557118195e-314 0 0.4779787107470392 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 -1648651947 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3727892342478306


ris (2 : 2): [ 1 0.3727892342478306 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31785 interne); stringhe deallocate: 0 (31705 interne)


Stringhe allocate: 1 (31785 interne); stringhe deallocate: 0 (31710 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4737998524053826 0.06539735467482233 0.8465890866532132 0.5262001475946174 0.3727892342478306 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.823345963483529 0.4257481391090775 0.933822581322417 0.8125984165493361 0.855561524470841 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4737997076259211 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4733125244568312


ris (2 : 2): [ 1 0.4733125244568312 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31820 interne); stringhe deallocate: 0 (31740 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9345884823950033


ris (2 : 2): [ -1 0.9345884823950033 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31840 interne); stringhe deallocate: 0 (31760 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8462910491071906


ris (2 : 2): [ 1 0.8462910491071906 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31860 interne); stringhe deallocate: 0 (31780 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9345884411783398 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4733125244568312


ris (2 : 2): [ -1 0.4733125244568312 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31880 interne); stringhe deallocate: 0 (31800 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869940524268e-314 0 0.4774487062458457 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 -1655368937 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3729785246503594


ris (2 : 2): [ 1 0.3729785246503594 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31900 interne); stringhe deallocate: 0 (31820 interne)


Stringhe allocate: 1 (31900 interne); stringhe deallocate: 0 (31825 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4733125244568312 0.06541151760499675 0.8462910491071906 0.5266874755431688 0.3729785246503594 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8231823594830123 0.4257568412982368 0.9336940157918788 0.8127911688871737 0.8556051155867249 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4733123800502206 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4711866383888931


ris (2 : 2): [ 1 0.4711866383888931 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31935 interne); stringhe deallocate: 0 (31855 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9345251409762895


ris (2 : 2): [ -1 0.9345251409762895 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31955 interne); stringhe deallocate: 0 (31875 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8449896592483226


ris (2 : 2): [ 1 0.8449896592483226 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31975 interne); stringhe deallocate: 0 (31895 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9345250172110724 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4711866383888931


ris (2 : 2): [ -1 0.4711866383888931 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31995 interne); stringhe deallocate: 0 (31915 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161449723268464e-314 0 0.4751360460285277 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 9195902 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3738030208594295


ris (2 : 2): [ 1 0.3738030208594295 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32015 interne); stringhe deallocate: 0 (31935 interne)


Stringhe allocate: 1 (32015 interne); stringhe deallocate: 0 (31940 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4711866383888931 0.06547485902371053 0.8449896592483226 0.5288133616111069 0.3738030208594295 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8224686645956352 0.4257957604343529 0.9331326305574503 0.8136320184850466 0.8557949863319677 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4711866399976925 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4708929686315069


ris (2 : 2): [ 1 0.4708929686315069 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32050 interne); stringhe deallocate: 0 (31970 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9345162039091649


ris (2 : 2): [ -1 0.9345162039091649 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32070 interne); stringhe deallocate: 0 (31990 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.844809793644277


ris (2 : 2): [ 1 0.844809793644277 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32090 interne); stringhe deallocate: 0 (32010 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9345159571620307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4708929686315069


ris (2 : 2): [ -1 0.4708929686315069 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32110 interne); stringhe deallocate: 0 (32030 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870098625275e-314 0 0.4748165651325422 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 1124864837 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3739168250127701


ris (2 : 2): [ 1 0.3739168250127701 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32130 interne); stringhe deallocate: 0 (32050 interne)


Stringhe allocate: 1 (32130 interne); stringhe deallocate: 0 (32055 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4708929686315069 0.0654837960908351 0.844809793644277 0.5291070313684931 0.3739168250127701 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8223700748322491 0.4258012516743497 0.933055041283487 0.8137481733915253 0.8558211939471985 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4708929106220454 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4728207850900624


ris (2 : 2): [ 1 0.4728207850900624 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32165 interne); stringhe deallocate: 0 (32085 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9345753001576963


ris (2 : 2): [ -1 0.9345753001576963 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32185 interne); stringhe deallocate: 0 (32105 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8459912589217014


ris (2 : 2): [ 1 0.8459912589217014 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32205 interne); stringhe deallocate: 0 (32125 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9345750849697643 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4728207850900624


ris (2 : 2): [ -1 0.4728207850900624 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32225 interne); stringhe deallocate: 0 (32145 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869798233362e-314 0 0.4769139333729831 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 473246937 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.373170473831639


ris (2 : 2): [ 1 0.373170473831639 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32245 interne); stringhe deallocate: 0 (32165 interne)


Stringhe allocate: 1 (32245 interne); stringhe deallocate: 0 (32170 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4728207850900624 0.0654246998423037 0.8459912589217014 0.5271792149099377 0.373170473831639 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.823017274496908 0.4257649409161247 0.9335646942189364 0.8129856660688628 0.8556493189847483 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.47282076094013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4708989115914329


ris (2 : 2): [ 1 0.4708989115914329 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32280 interne); stringhe deallocate: 0 (32200 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9345121213433382


ris (2 : 2): [ -1 0.9345121213433382 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32300 interne); stringhe deallocate: 0 (32220 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.84480961992418


ris (2 : 2): [ 1 0.84480961992418 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32320 interne); stringhe deallocate: 0 (32240 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9345116657706791 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4708989115914329


ris (2 : 2): [ -1 0.4708989115914329 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32340 interne); stringhe deallocate: 0 (32260 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161448569131115e-314 0 0.474822764015487 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 809530870 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3739107083327471


ris (2 : 2): [ 1 0.3739107083327471 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32360 interne); stringhe deallocate: 0 (32280 interne)


Stringhe allocate: 1 (32360 interne); stringhe deallocate: 0 (32285 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4708989115914329 0.06548787865666184 0.84480961992418 0.5291010884085671 0.3739107083327471 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.822372069981556 0.425803760142558 0.9330549663452227 0.8137458227785083 0.8558197853554044 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4708988687739755 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4708989115914329


ris (2 : 2): [ 1 0.4708989115914329 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32395 interne); stringhe deallocate: 0 (32315 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9345121213433382


ris (2 : 2): [ -1 0.9345121213433382 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32415 interne); stringhe deallocate: 0 (32335 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.84480961992418


ris (2 : 2): [ 1 0.84480961992418 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32435 interne); stringhe deallocate: 0 (32355 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9345116703958691 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4708989115914329


ris (2 : 2): [ -1 0.4708989115914329 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32455 interne); stringhe deallocate: 0 (32375 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870043289923e-314 0 0.4748227640157205 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 809530870 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3739107083327471


ris (2 : 2): [ 1 0.3739107083327471 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32475 interne); stringhe deallocate: 0 (32395 interne)


Stringhe allocate: 1 (32475 interne); stringhe deallocate: 0 (32400 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4708989115914329 0.06548787865666184 0.84480961992418 0.5291010884085671 0.3739107083327471 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.822372069981556 0.425803760142558 0.9330549663452227 0.8137458227785083 0.8558197853554044 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4708988687727169 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4699590052842159


ris (2 : 2): [ 1 0.4699590052842159 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32510 interne); stringhe deallocate: 0 (32430 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9344743505489201


ris (2 : 2): [ -1 0.9344743505489201 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32530 interne); stringhe deallocate: 0 (32450 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8442257784918958


ris (2 : 2): [ 1 0.8442257784918958 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32550 interne); stringhe deallocate: 0 (32470 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9344739956351447 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4699590052842159


ris (2 : 2): [ -1 0.4699590052842159 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32570 interne); stringhe deallocate: 0 (32490 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870557118195e-314 0 0.473799709892524 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 -276168082 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.37426677320768


ris (2 : 2): [ 1 0.37426677320768 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32590 interne); stringhe deallocate: 0 (32510 interne)


Stringhe allocate: 1 (32590 interne); stringhe deallocate: 0 (32515 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4699590052842159 0.06552564945107986 0.8442257784918958 0.5300409947157841 0.37426677320768 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8220565279888823 0.4258269678117106 0.9328031125620551 0.8141175829835263 0.8559017824615336 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4699587866291255 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4695116353015439


ris (2 : 2): [ 1 0.4695116353015439 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32625 interne); stringhe deallocate: 0 (32545 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9344492222707975


ris (2 : 2): [ -1 0.9344492222707975 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32645 interne); stringhe deallocate: 0 (32565 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8439417117914859


ris (2 : 2): [ 1 0.8439417117914859 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32665 interne); stringhe deallocate: 0 (32585 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9344491999598823 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4695116353015439


ris (2 : 2): [ -1 0.4695116353015439 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32685 interne); stringhe deallocate: 0 (32605 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869940524268e-314 0 0.4733123823168635 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 -2018669819 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.374430076489942


ris (2 : 2): [ 1 0.374430076489942 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32705 interne); stringhe deallocate: 0 (32625 interne)


Stringhe allocate: 1 (32705 interne); stringhe deallocate: 0 (32630 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4695116353015439 0.06555077772920248 0.8439417117914859 0.5304883646984562 0.374430076489942 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8219063385341348 0.4258424074860419 0.9326805736855484 0.8142945307869404 0.8559393890818704 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4695115110622004 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4675601331143972


ris (2 : 2): [ 1 0.4675601331143972 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32740 interne); stringhe deallocate: 0 (32660 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9343381493939353


ris (2 : 2): [ -1 0.9343381493939353 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32760 interne); stringhe deallocate: 0 (32680 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8427013923615373


ris (2 : 2): [ 1 0.8427013923615373 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32780 interne); stringhe deallocate: 0 (32700 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9343380969021373 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4675601331143972


ris (2 : 2): [ -1 0.4675601331143972 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32800 interne); stringhe deallocate: 0 (32720 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161449723268464e-314 0 0.4711866422657431 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 1445523851 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3751412592471401


ris (2 : 2): [ 1 0.3751412592471401 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32820 interne); stringhe deallocate: 0 (32740 interne)


Stringhe allocate: 1 (32820 interne); stringhe deallocate: 0 (32745 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4675601331143972 0.06566185060606467 0.8427013923615373 0.5324398668856027 0.3751412592471401 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8212511871811637 0.4259106544641043 0.9321455326221781 0.8150664065022283 0.8561031652140437 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4675600549922372 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4672905615579921


ris (2 : 2): [ 1 0.4672905615579921 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32855 interne); stringhe deallocate: 0 (32775 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.934322633438281


ris (2 : 2): [ -1 0.934322633438281 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32875 interne); stringhe deallocate: 0 (32795 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.842529972239676


ris (2 : 2): [ 1 0.842529972239676 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32895 interne); stringhe deallocate: 0 (32815 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9343223614188725 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4672905615579921


ris (2 : 2): [ -1 0.4672905615579921 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32915 interne); stringhe deallocate: 0 (32835 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870098625275e-314 0 0.4708929105762572 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 -1410875572 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3752394106816839


ris (2 : 2): [ 1 0.3752394106816839 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32935 interne); stringhe deallocate: 0 (32855 interne)


Stringhe allocate: 1 (32935 interne); stringhe deallocate: 0 (32860 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4672905615579921 0.06567736656171896 0.842529972239676 0.5327094384420079 0.3752394106816839 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8211606875798492 0.4259201879984385 0.9320715865063074 0.8151730298712883 0.8561257682118725 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4672904035780148 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4690601628944573


ris (2 : 2): [ 1 0.4690601628944573 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32970 interne); stringhe deallocate: 0 (32890 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9344249043028803


ris (2 : 2): [ -1 0.9344249043028803 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32990 interne); stringhe deallocate: 0 (32910 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8436559245674965


ris (2 : 2): [ 1 0.8436559245674965 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33010 interne); stringhe deallocate: 0 (32930 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9344248860330762 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4690601628944573


ris (2 : 2): [ -1 0.4690601628944573 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33030 interne); stringhe deallocate: 0 (32950 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869798233362e-314 0 0.472820763206883 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 -354468488 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3745957616730392


ris (2 : 2): [ 1 0.3745957616730392 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33050 interne); stringhe deallocate: 0 (32970 interne)


Stringhe allocate: 1 (33050 interne); stringhe deallocate: 0 (32975 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4690601628944573 0.06557509569711972 0.8436559245674965 0.5309398371055427 0.3745957616730392 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8217547718280968 0.4258573492780424 0.9325572926205832 0.8144731012181947 0.8559775442229667 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4690599485859126 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4672962197109837


ris (2 : 2): [ 1 0.4672962197109837 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33085 interne); stringhe deallocate: 0 (33005 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9343189502232769


ris (2 : 2): [ -1 0.9343189502232769 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33105 interne); stringhe deallocate: 0 (33025 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8425300080943026


ris (2 : 2): [ 1 0.8425300080943026 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33125 interne); stringhe deallocate: 0 (33045 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9343185467215704 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4672962197109837


ris (2 : 2): [ -1 0.4672962197109837 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33145 interne); stringhe deallocate: 0 (33065 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161448569131115e-314 0 0.4708988710408297 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 1733099438 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3752337883833189


ris (2 : 2): [ 1 0.3752337883833189 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33165 interne); stringhe deallocate: 0 (33085 interne)


Stringhe allocate: 1 (33165 interne); stringhe deallocate: 0 (33090 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4672962197109837 0.06568104977672307 0.8425300080943026 0.5327037802890163 0.3752337883833189 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8211625871147881 0.4259224510918298 0.9320716019730468 0.8151707919076743 0.8561244734697393 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4672961256251886 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4672962197109837


ris (2 : 2): [ 1 0.4672962197109837 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33200 interne); stringhe deallocate: 0 (33120 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9343189502232769


ris (2 : 2): [ -1 0.9343189502232769 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33220 interne); stringhe deallocate: 0 (33140 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8425300080943026


ris (2 : 2): [ 1 0.8425300080943026 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33240 interne); stringhe deallocate: 0 (33160 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9343185465785346 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4672962197109837


ris (2 : 2): [ -1 0.4672962197109837 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33260 interne); stringhe deallocate: 0 (33180 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870043289923e-314 0 0.4708988710406334 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 1733099438 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3752337883833189


ris (2 : 2): [ 1 0.3752337883833189 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33280 interne); stringhe deallocate: 0 (33200 interne)


Stringhe allocate: 1 (33280 interne); stringhe deallocate: 0 (33205 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4672962197109837 0.06568104977672307 0.8425300080943026 0.5327037802890163 0.3752337883833189 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8211625871147881 0.4259224510918298 0.9320716019730468 0.8151707919076743 0.8561244734697393 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4672961256251718 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4664338772012225


ris (2 : 2): [ 1 0.4664338772012225 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33315 interne); stringhe deallocate: 0 (33235 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9342606968948013


ris (2 : 2): [ -1 0.9342606968948013 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33335 interne); stringhe deallocate: 0 (33255 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8419740121989932


ris (2 : 2): [ 1 0.8419740121989932 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33355 interne); stringhe deallocate: 0 (33275 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9342603724453502 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4664338772012225


ris (2 : 2): [ -1 0.4664338772012225 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33375 interne); stringhe deallocate: 0 (33295 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870557118195e-314 0 0.4699587865834696 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 2048186566 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3755401349977706


ris (2 : 2): [ 1 0.3755401349977706 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33395 interne); stringhe deallocate: 0 (33315 interne)


Stringhe allocate: 1 (33395 interne); stringhe deallocate: 0 (33320 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4664338772012225 0.06573930310519871 0.8419740121989932 0.5335661227987775 0.3755401349977706 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8208730845635147 0.4259582439311156 0.9318317600195365 0.8155118733811817 0.8561950211076165 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4664337656233029 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4660237654934042


ris (2 : 2): [ 1 0.4660237654934042 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33430 interne); stringhe deallocate: 0 (33350 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9342262749188343


ris (2 : 2): [ -1 0.9342262749188343 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33450 interne); stringhe deallocate: 0 (33370 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8417038153966544


ris (2 : 2): [ 1 0.8417038153966544 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33470 interne); stringhe deallocate: 0 (33390 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9342260403129155 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4660237654934042


ris (2 : 2): [ -1 0.4660237654934042 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33490 interne); stringhe deallocate: 0 (33410 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869940524268e-314 0 0.4695115133288033 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 1476197642 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3756800499032502


ris (2 : 2): [ 1 0.3756800499032502 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33510 interne); stringhe deallocate: 0 (33430 interne)


Stringhe allocate: 1 (33510 interne); stringhe deallocate: 0 (33435 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4660237654934042 0.06577372508116575 0.8417038153966544 0.5339762345065958 0.3756800499032502 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8207354033238952 0.425979393971567 0.9317152042509564 0.8156740844562731 0.8562272416892052 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4660236879810542 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4642348593843598


ris (2 : 2): [ 1 0.4642348593843598 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33545 interne); stringhe deallocate: 0 (33465 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.934074757817995


ris (2 : 2): [ -1 0.934074757817995 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33565 interne); stringhe deallocate: 0 (33485 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8405241159447098


ris (2 : 2): [ 1 0.8405241159447098 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33585 interne); stringhe deallocate: 0 (33505 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9340744107217969 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4642348593843598


ris (2 : 2): [ -1 0.4642348593843598 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33605 interne); stringhe deallocate: 0 (33525 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161449723268464e-314 0 0.4675600572588801 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 548275157 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.37628925656035


ris (2 : 2): [ 1 0.37628925656035 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33625 interne); stringhe deallocate: 0 (33545 interne)


Stringhe allocate: 1 (33625 interne); stringhe deallocate: 0 (33550 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4642348593843598 0.06592524218200502 0.8405241159447098 0.5357651406156403 0.37628925656035 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8201348381462603 0.4260724912654266 0.9312063130460094 0.8163816487068264 0.8563675340528546 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4642348310695246 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4639877562599046


ris (2 : 2): [ 1 0.4639877562599046 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33660 interne); stringhe deallocate: 0 (33580 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9340536685585668


ris (2 : 2): [ -1 0.9340536685585668 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33680 interne); stringhe deallocate: 0 (33600 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8403610784373086


ris (2 : 2): [ 1 0.8403610784373086 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33700 interne); stringhe deallocate: 0 (33620 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9340534252616095 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4639877562599046


ris (2 : 2): [ -1 0.4639877562599046 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33720 interne); stringhe deallocate: 0 (33640 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870098625275e-314 0 0.4672904058460654 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 -1279763061 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.376373322177404


ris (2 : 2): [ 1 0.376373322177404 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33740 interne); stringhe deallocate: 0 (33660 interne)


Stringhe allocate: 1 (33740 interne); stringhe deallocate: 0 (33665 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4639877562599046 0.06594633144143325 0.8403610784373086 0.5360122437400954 0.376373322177404 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8200518815667717 0.4260854492283984 0.9311359829687544 0.8164793851593883 0.8563868932702576 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4639875910029794 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4656098435501878


ris (2 : 2): [ 1 0.4656098435501878 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33775 interne); stringhe deallocate: 0 (33695 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9341925111672039


ris (2 : 2): [ -1 0.9341925111672039 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33795 interne); stringhe deallocate: 0 (33715 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8414319369811066


ris (2 : 2): [ 1 0.8414319369811066 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33815 interne); stringhe deallocate: 0 (33735 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9341921847316108 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4656098435501878


ris (2 : 2): [ -1 0.4656098435501878 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33835 interne); stringhe deallocate: 0 (33755 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869798233362e-314 0 0.4690599485401243 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 984586579 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3758220934309188


ris (2 : 2): [ 1 0.3758220934309188 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33855 interne); stringhe deallocate: 0 (33775 interne)


Stringhe allocate: 1 (33855 interne); stringhe deallocate: 0 (33780 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4656098435501878 0.06580748883279608 0.8414319369811066 0.5343901564498121 0.3758220934309188 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8205964429256396 0.426000139576452 0.9315979230788247 0.8158378025899743 0.8562599524647778 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4656097910139279 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4639931335424649


ris (2 : 2): [ 1 0.4639931335424649 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33890 interne); stringhe deallocate: 0 (33810 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9340503536043054


ris (2 : 2): [ -1 0.9340503536043054 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33910 interne); stringhe deallocate: 0 (33830 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8403612937618468


ris (2 : 2): [ 1 0.8403612937618468 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33930 interne); stringhe deallocate: 0 (33850 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9340500872585826 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4639931335424649


ris (2 : 2): [ -1 0.4639931335424649 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33950 interne); stringhe deallocate: 0 (33870 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161448569131115e-314 0 0.4672961278919416 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 1099467367 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3763681602193819


ris (2 : 2): [ 1 0.3763681602193819 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33970 interne); stringhe deallocate: 0 (33890 interne)


Stringhe allocate: 1 (33970 interne); stringhe deallocate: 0 (33895 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4639931335424649 0.06594964639569456 0.8403612937618468 0.536006866457535 0.3763681602193819 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8200536868088914 0.4260874860497821 0.9311360758540767 0.8164772582881761 0.8563857045385136 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4639930769428462 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4639931335424649


ris (2 : 2): [ 1 0.4639931335424649 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34005 interne); stringhe deallocate: 0 (33925 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9340503536043054


ris (2 : 2): [ -1 0.9340503536043054 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34025 interne); stringhe deallocate: 0 (33945 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8403612937618468


ris (2 : 2): [ 1 0.8403612937618468 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34045 interne); stringhe deallocate: 0 (33965 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9340500874015385 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4639931335424649


ris (2 : 2): [ -1 0.4639931335424649 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34065 interne); stringhe deallocate: 0 (33985 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870043289923e-314 0 0.467296127892026 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 1099467367 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3763681602193819


ris (2 : 2): [ 1 0.3763681602193819 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34085 interne); stringhe deallocate: 0 (34005 interne)


Stringhe allocate: 1 (34085 interne); stringhe deallocate: 0 (34010 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4639931335424649 0.06594964639569456 0.8403612937618468 0.536006866457535 0.3763681602193819 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8200536868088914 0.4260874860497821 0.9311360758540767 0.8164772582881761 0.8563857045385136 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4639930746303156 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4632030761635045


ris (2 : 2): [ 1 0.4632030761635045 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34120 interne); stringhe deallocate: 0 (34040 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9339748128513153


ris (2 : 2): [ -1 0.9339748128513153 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34140 interne); stringhe deallocate: 0 (34060 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8398328750013316


ris (2 : 2): [ 1 0.8398328750013316 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34160 interne); stringhe deallocate: 0 (34080 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9339747517557324 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4632030761635045


ris (2 : 2): [ -1 0.4632030761635045 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34180 interne); stringhe deallocate: 0 (34100 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870557118195e-314 0 0.4664337678912194 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 -2082350934 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3766297988378271


ris (2 : 2): [ 1 0.3766297988378271 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34200 interne); stringhe deallocate: 0 (34120 interne)


Stringhe allocate: 1 (34200 interne); stringhe deallocate: 0 (34125 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4632030761635045 0.06602518714868466 0.8398328750013316 0.5367969238364955 0.3766297988378271 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8197884515638786 0.426133900874515 0.9309081299486074 0.8167897488959346 0.8564459565068331 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4632029554591561 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4628276611388897


ris (2 : 2): [ 1 0.4628276611388897 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34235 interne); stringhe deallocate: 0 (34155 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9339325981832719


ris (2 : 2): [ -1 0.9339325981832719 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34255 interne); stringhe deallocate: 0 (34175 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8395763698767155


ris (2 : 2): [ 1 0.8395763698767155 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34275 interne); stringhe deallocate: 0 (34195 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9339323086234259 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4628276611388897


ris (2 : 2): [ -1 0.4628276611388897 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34295 interne); stringhe deallocate: 0 (34215 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869940524268e-314 0 0.4660236879353983 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 -384719593 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3767487087378258


ris (2 : 2): [ 1 0.3767487087378258 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34315 interne); stringhe deallocate: 0 (34235 interne)


Stringhe allocate: 1 (34315 interne); stringhe deallocate: 0 (34240 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4628276611388897 0.0660674018167281 0.8395763698767155 0.5371723388611103 0.3767487087378258 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.819662418570976 0.4261598390117566 0.9307974804083996 0.8169382364264959 0.8564733399090624 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4628274461958126 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4611901668554204


ris (2 : 2): [ 1 0.4611901668554204 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34350 interne); stringhe deallocate: 0 (34270 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9337471797694336


ris (2 : 2): [ -1 0.9337471797694336 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34370 interne); stringhe deallocate: 0 (34290 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8384565035179303


ris (2 : 2): [ 1 0.8384565035179303 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34390 interne); stringhe deallocate: 0 (34310 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9337468188258491 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4611901668554204


ris (2 : 2): [ -1 0.4611901668554204 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34410 interne); stringhe deallocate: 0 (34330 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161449723268464e-314 0 0.4642348333361275 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 -1023910079 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3772663366625099


ris (2 : 2): [ 1 0.3772663366625099 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34430 interne); stringhe deallocate: 0 (34350 interne)


Stringhe allocate: 1 (34430 interne); stringhe deallocate: 0 (34355 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4611901668554204 0.06625282023056645 0.8384565035179303 0.5388098331445796 0.3772663366625099 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8191126848313147 0.4262737664329155 0.9303143996205242 0.817585912908571 0.8565925428826323 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4611899897083491 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4609639859312264


ris (2 : 2): [ 1 0.4609639859312264 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34465 interne); stringhe deallocate: 0 (34385 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9337214200490569


ris (2 : 2): [ -1 0.9337214200490569 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34485 interne); stringhe deallocate: 0 (34405 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8383017393020605


ris (2 : 2): [ 1 0.8383017393020605 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34505 interne); stringhe deallocate: 0 (34425 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9337210696194225 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4609639859312264


ris (2 : 2): [ -1 0.4609639859312264 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34525 interne); stringhe deallocate: 0 (34445 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870098625275e-314 0 0.4639875932696222 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 386750151 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3773377533708341


ris (2 : 2): [ 1 0.3773377533708341 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34545 interne); stringhe deallocate: 0 (34465 interne)


Stringhe allocate: 1 (34545 interne); stringhe deallocate: 0 (34470 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4609639859312264 0.06627857995094311 0.8383017393020605 0.5390360140687736 0.3773377533708341 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8190367521782652 0.4262895940869846 0.9302476384228591 0.8176753740241138 0.8566089892209939 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4609639665828302 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4624487117468687


ris (2 : 2): [ 1 0.4624487117468687 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34580 interne); stringhe deallocate: 0 (34500 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9338909064102149


ris (2 : 2): [ -1 0.9338909064102149 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34600 interne); stringhe deallocate: 0 (34520 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8393182276224999


ris (2 : 2): [ 1 0.8393182276224999 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34620 interne); stringhe deallocate: 0 (34540 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9338908237906987 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4624487117468687


ris (2 : 2): [ -1 0.4624487117468687 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34640 interne); stringhe deallocate: 0 (34560 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869798233362e-314 0 0.4656097932819785 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 2067918255 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3768695158756312


ris (2 : 2): [ 1 0.3768695158756312 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34660 interne); stringhe deallocate: 0 (34580 interne)


Stringhe allocate: 1 (34660 interne); stringhe deallocate: 0 (34585 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4624487117468687 0.06610909358978512 0.8393182276224999 0.5375512882531313 0.3768695158756312 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8195351990328554 0.4261854558644176 0.9306861246536954 0.8170881219018752 0.856501160220464 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4624485990748788 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4609690874466669


ris (2 : 2): [ 1 0.4609690874466669 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34695 interne); stringhe deallocate: 0 (34615 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9337184441170559


ris (2 : 2): [ -1 0.9337184441170559 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34715 interne); stringhe deallocate: 0 (34635 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8383021071184034


ris (2 : 2): [ 1 0.8383021071184034 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34735 interne); stringhe deallocate: 0 (34655 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9337182133646191 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4609690874466669


ris (2 : 2): [ -1 0.4609690874466669 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34755 interne); stringhe deallocate: 0 (34675 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161448569131115e-314 0 0.4639930768970579 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 2093169082 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3773330196717365


ris (2 : 2): [ 1 0.3773330196717365 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34775 interne); stringhe deallocate: 0 (34695 interne)


Stringhe allocate: 1 (34775 interne); stringhe deallocate: 0 (34700 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4609690874466669 0.06628155588294415 0.8383021071184034 0.5390309125533331 0.3773330196717365 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8190384648408311 0.4262914226014855 0.9302477970891208 0.8176733562267957 0.856607899111706 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4609689733717159 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4609690874466669


ris (2 : 2): [ 1 0.4609690874466669 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34810 interne); stringhe deallocate: 0 (34730 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9337184441170559


ris (2 : 2): [ -1 0.9337184441170559 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34830 interne); stringhe deallocate: 0 (34750 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8383021071184034


ris (2 : 2): [ 1 0.8383021071184034 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34850 interne); stringhe deallocate: 0 (34770 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9337182087393927 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4609690874466669


ris (2 : 2): [ -1 0.4609690874466669 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34870 interne); stringhe deallocate: 0 (34790 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870043289923e-314 0 0.4639930768970686 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 2093169082 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3773330196717365


ris (2 : 2): [ 1 0.3773330196717365 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34890 interne); stringhe deallocate: 0 (34810 interne)


Stringhe allocate: 1 (34890 interne); stringhe deallocate: 0 (34815 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4609690874466669 0.06628155588294415 0.8383021071184034 0.5390309125533331 0.3773330196717365 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8190384648408311 0.4262914226014855 0.9302477970891208 0.8176733562267957 0.856607899111706 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.460968975685522 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4602463100557427


ris (2 : 2): [ 1 0.4602463100557427 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34925 interne); stringhe deallocate: 0 (34845 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9336284817619467


ris (2 : 2): [ -1 0.9336284817619467 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34945 interne); stringhe deallocate: 0 (34865 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8378008530809925


ris (2 : 2): [ 1 0.8378008530809925 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34965 interne); stringhe deallocate: 0 (34885 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9336280863734565 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4602463100557427


ris (2 : 2): [ -1 0.4602463100557427 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34985 interne); stringhe deallocate: 0 (34905 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870557118195e-314 0 0.4632029577260104 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 -260910493 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3775545430252498


ris (2 : 2): [ 1 0.3775545430252498 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35005 interne); stringhe deallocate: 0 (34925 interne)


Stringhe allocate: 1 (35005 interne); stringhe deallocate: 0 (34930 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4602463100557427 0.06637151823805332 0.8378008530809925 0.5397536899442572 0.3775545430252498 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8187958165934042 0.4263466985522759 0.9300315693281753 0.8179592356479349 0.8566589130566551 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4602460882411554 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4599031652151565


ris (2 : 2): [ 1 0.4599031652151565 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35040 interne); stringhe deallocate: 0 (34960 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9335798185548354


ris (2 : 2): [ -1 0.9335798185548354 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35060 interne); stringhe deallocate: 0 (34980 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.837557796312698


ris (2 : 2): [ 1 0.837557796312698 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35080 interne); stringhe deallocate: 0 (35000 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9335794489834361 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4599031652151565


ris (2 : 2): [ -1 0.4599031652151565 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35100 interne); stringhe deallocate: 0 (35020 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869940524268e-314 0 0.4628274484637291 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 -1350876343 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3776546310975416


ris (2 : 2): [ 1 0.3776546310975416 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35120 interne); stringhe deallocate: 0 (35040 interne)


Stringhe allocate: 1 (35120 interne); stringhe deallocate: 0 (35045 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4599031652151565 0.06642018144516459 0.837557796312698 0.5400968347848436 0.3776546310975416 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8186806172315712 0.4263765988926829 0.9299267210539102 0.8180949593847668 0.8566819620369498 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4599030039058114 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4584064888440068


ris (2 : 2): [ 1 0.4584064888440068 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35155 interne); stringhe deallocate: 0 (35075 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9333663575981617


ris (2 : 2): [ -1 0.9333663575981617 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35175 interne); stringhe deallocate: 0 (35095 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8364966927961095


ris (2 : 2): [ 1 0.8364966927961095 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35195 interne); stringhe deallocate: 0 (35115 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9333663029166752 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4584064888440068


ris (2 : 2): [ -1 0.4584064888440068 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35215 interne); stringhe deallocate: 0 (35135 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161449723268464e-314 0 0.4611899896626932 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 729218329 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3780902039521027


ris (2 : 2): [ 1 0.3780902039521027 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35235 interne); stringhe deallocate: 0 (35155 interne)


Stringhe allocate: 1 (35235 interne); stringhe deallocate: 0 (35160 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4584064888440068 0.06663364240183833 0.8364966927961095 0.5415935111559933 0.3780902039521027 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8181781583791155 0.4265077566121807 0.9294689890050905 0.8186869382983159 0.8567822687959055 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4584064504835324 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4581997655840408


ris (2 : 2): [ 1 0.4581997655840408 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35270 interne); stringhe deallocate: 0 (35190 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9333367358244693


ris (2 : 2): [ -1 0.9333367358244693 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35290 interne); stringhe deallocate: 0 (35210 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8363500534275897


ris (2 : 2): [ 1 0.8363500534275897 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35310 interne); stringhe deallocate: 0 (35230 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9333367436380566 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4581997655840408


ris (2 : 2): [ -1 0.4581997655840408 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35330 interne); stringhe deallocate: 0 (35250 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870098625275e-314 0 0.4609639688494331 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 470677755 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3781502878435489


ris (2 : 2): [ 1 0.3781502878435489 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35350 interne); stringhe deallocate: 0 (35270 interne)


Stringhe allocate: 1 (35350 interne); stringhe deallocate: 0 (35275 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4581997655840408 0.0666632641755307 0.8363500534275897 0.5418002344159592 0.3781502878435489 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8181087579836922 0.4265259572440223 0.9294057326521137 0.8187687033433175 0.856796105334049 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4581997438892573 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4595567460723187


ris (2 : 2): [ 1 0.4595567460723187 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35385 interne); stringhe deallocate: 0 (35305 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9335315582324341


ris (2 : 2): [ -1 0.9335315582324341 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35405 interne); stringhe deallocate: 0 (35325 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.837313151387785


ris (2 : 2): [ 1 0.837313151387785 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35425 interne); stringhe deallocate: 0 (35345 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9335312885733771 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4595567460723187


ris (2 : 2): [ -1 0.4595567460723187 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35445 interne); stringhe deallocate: 0 (35365 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869798233362e-314 0 0.4624486013415217 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 -1295885648 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3777564053154663


ris (2 : 2): [ 1 0.3777564053154663 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35465 interne); stringhe deallocate: 0 (35385 interne)


Stringhe allocate: 1 (35465 interne); stringhe deallocate: 0 (35390 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4595567460723187 0.06646844176756594 0.837313151387785 0.5404432539276813 0.3777564053154663 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8185643186326661 0.4264062516869317 0.9298211876907998 0.818231978203105 0.8567053993146369 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4595565817103937 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4582045974195004


ris (2 : 2): [ 1 0.4582045974195004 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35500 interne); stringhe deallocate: 0 (35420 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9333340714723317


ris (2 : 2): [ -1 0.9333340714723317 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35520 interne); stringhe deallocate: 0 (35440 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8363505496108448


ris (2 : 2): [ 1 0.8363505496108448 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35540 interne); stringhe deallocate: 0 (35460 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9333338778468452 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4582045974195004


ris (2 : 2): [ -1 0.4582045974195004 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35560 interne); stringhe deallocate: 0 (35480 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161448569131115e-314 0 0.4609689756397666 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 1613941336 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3781459521913444


ris (2 : 2): [ 1 0.3781459521913444 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35580 interne); stringhe deallocate: 0 (35500 interne)


Stringhe allocate: 1 (35580 interne); stringhe deallocate: 0 (35505 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4582045974195004 0.06666592852766828 0.8363505496108448 0.5417954025804996 0.3781459521913444 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8181103801102568 0.4265275943131883 0.929405946692473 0.8187667922122534 0.8567951068897795 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4582045099482919 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4582045974195004


ris (2 : 2): [ 1 0.4582045974195004 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35615 interne); stringhe deallocate: 0 (35535 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9333340714723317


ris (2 : 2): [ -1 0.9333340714723317 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35635 interne); stringhe deallocate: 0 (35555 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8363505496108448


ris (2 : 2): [ 1 0.8363505496108448 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35655 interne); stringhe deallocate: 0 (35575 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9333338778469615 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4582045974195004


ris (2 : 2): [ -1 0.4582045974195004 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35675 interne); stringhe deallocate: 0 (35595 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870043289923e-314 0 0.4609689756397337 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 1613941336 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3781459521913444


ris (2 : 2): [ 1 0.3781459521913444 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35695 interne); stringhe deallocate: 0 (35615 interne)


Stringhe allocate: 1 (35695 interne); stringhe deallocate: 0 (35620 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4582045974195004 0.06666592852766828 0.8363505496108448 0.5417954025804996 0.3781459521913444 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8181103801102568 0.4265275943131883 0.929405946692473 0.8187667922122534 0.8567951068897795 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4582045099470333 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4575443620270744


ris (2 : 2): [ 1 0.4575443620270744 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35730 interne); stringhe deallocate: 0 (35650 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9332322508741797


ris (2 : 2): [ -1 0.9332322508741797 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35750 interne); stringhe deallocate: 0 (35670 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8358759270823797


ris (2 : 2): [ 1 0.8358759270823797 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35770 interne); stringhe deallocate: 0 (35690 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9332318348380619 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4575443620270744


ris (2 : 2): [ -1 0.4575443620270744 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35790 interne); stringhe deallocate: 0 (35710 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870557118195e-314 0 0.4602460905079084 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 634914734 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3783315650553053


ris (2 : 2): [ 1 0.3783315650553053 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35810 interne); stringhe deallocate: 0 (35730 interne)


Stringhe allocate: 1 (35810 interne); stringhe deallocate: 0 (35735 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4575443620270744 0.06676774912582029 0.8358759270823797 0.5424556379729256 0.3783315650553053 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8178887282394691 0.4265901563744645 0.9292012070615379 0.8190279344590536 0.8568378511163983 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4575443312153071 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4572311925414054


ris (2 : 2): [ 1 0.4572311925414054 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35845 interne); stringhe deallocate: 0 (35765 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9331783393498818


ris (2 : 2): [ -1 0.9331783393498818 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35865 interne); stringhe deallocate: 0 (35785 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8356460211095189


ris (2 : 2): [ 1 0.8356460211095189 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35885 interne); stringhe deallocate: 0 (35805 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.933177956864375 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4572311925414054


ris (2 : 2): [ -1 0.4572311925414054 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35905 interne); stringhe deallocate: 0 (35825 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869940524268e-314 0 0.4599030061726657 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 -1632941468 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3784148285681135


ris (2 : 2): [ 1 0.3784148285681135 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35925 interne); stringhe deallocate: 0 (35845 interne)


Stringhe allocate: 1 (35925 interne); stringhe deallocate: 0 (35850 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4572311925414054 0.06682166065011819 0.8356460211095189 0.5427688074585946 0.3784148285681135 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8177835920968624 0.4266232814606243 0.9291020316933025 0.8191518020736274 0.8568570256196338 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4572310468898371 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4558653154917551


ris (2 : 2): [ 1 0.4558653154917551 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35960 interne); stringhe deallocate: 0 (35880 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9329420668639986


ris (2 : 2): [ -1 0.9329420668639986 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35980 interne); stringhe deallocate: 0 (35900 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8346423741702878


ris (2 : 2): [ 1 0.8346423741702878 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36000 interne); stringhe deallocate: 0 (35920 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.932941917845838 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4558653154917551


ris (2 : 2): [ -1 0.4558653154917551 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36020 interne); stringhe deallocate: 0 (35940 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161449723268464e-314 0 0.4584064527514489 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 -1218790041 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3787770586785327


ris (2 : 2): [ 1 0.3787770586785327 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36040 interne); stringhe deallocate: 0 (35960 interne)


Stringhe allocate: 1 (36040 interne); stringhe deallocate: 0 (35965 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4558653154917551 0.06705793313600139 0.8346423741702878 0.5441346845082449 0.3787770586785327 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8173250447260398 0.4267684553646085 0.9286690848953663 0.8196920460618935 0.8569404424992484 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4558651468501473 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4556766649661346


ris (2 : 2): [ 1 0.4556766649661346 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36075 interne); stringhe deallocate: 0 (35995 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9329093047922884


ris (2 : 2): [ -1 0.9329093047922884 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36095 interne); stringhe deallocate: 0 (36015 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8345036786272463


ris (2 : 2): [ 1 0.8345036786272463 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36115 interne); stringhe deallocate: 0 (36035 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9329090159388862 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4556766649661346


ris (2 : 2): [ -1 0.4556766649661346 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36135 interne); stringhe deallocate: 0 (36055 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870098625275e-314 0 0.4581997438436014 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 1969560840 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3788270136611117


ris (2 : 2): [ 1 0.3788270136611117 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36155 interne); stringhe deallocate: 0 (36075 interne)


Stringhe allocate: 1 (36155 interne); stringhe deallocate: 0 (36080 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4556766649661346 0.0670906952077116 0.8345036786272463 0.5443233350338654 0.3788270136611117 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8172617116445229 0.4267885855030585 0.9286092552990205 0.8197666628162901 0.8569519464815184 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4556765577528195 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4569149935607214


ris (2 : 2): [ 1 0.4569149935607214 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36190 interne); stringhe deallocate: 0 (36110 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9331247246799108


ris (2 : 2): [ -1 0.9331247246799108 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36210 interne); stringhe deallocate: 0 (36130 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8354145794833311


ris (2 : 2): [ 1 0.8354145794833311 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36230 interne); stringhe deallocate: 0 (36150 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9331245463345104 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4569149935607214


ris (2 : 2): [ -1 0.4569149935607214 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36250 interne); stringhe deallocate: 0 (36170 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869798233362e-314 0 0.4595565839769966 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 1654213990 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3784995859226097


ris (2 : 2): [ 1 0.3784995859226097 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36270 interne); stringhe deallocate: 0 (36190 interne)


Stringhe allocate: 1 (36270 interne); stringhe deallocate: 0 (36195 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4569149935607214 0.06687527532008919 0.8354145794833311 0.5430850064392786 0.3784995859226097 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8176774389029958 0.426656224149323 0.9290021938847561 0.8192768679413451 0.856876544135166 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.456914906166479 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4556812340271128


ris (2 : 2): [ 1 0.4556812340271128 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36305 interne); stringhe deallocate: 0 (36225 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9329069263125064


ris (2 : 2): [ -1 0.9329069263125064 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36325 interne); stringhe deallocate: 0 (36245 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8345042816535058


ris (2 : 2): [ 1 0.8345042816535058 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36345 interne); stringhe deallocate: 0 (36265 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9329066318961674 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4556812340271128


ris (2 : 2): [ -1 0.4556812340271128 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36365 interne); stringhe deallocate: 0 (36285 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161448569131115e-314 0 0.4582045122149347 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 -1620899804 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.378823047626393


ris (2 : 2): [ 1 0.378823047626393 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36385 interne); stringhe deallocate: 0 (36305 interne)


Stringhe allocate: 1 (36385 interne); stringhe deallocate: 0 (36310 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4556812340271128 0.06709307368749362 0.8345042816535058 0.5443187659728872 0.378823047626393 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.817263245553376 0.4267900469224625 0.9286095154286317 0.8197648556201547 0.8569510331553449 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4556810877070978 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4556812340271128


ris (2 : 2): [ 1 0.4556812340271128 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36420 interne); stringhe deallocate: 0 (36340 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9329069263125064


ris (2 : 2): [ -1 0.9329069263125064 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36440 interne); stringhe deallocate: 0 (36360 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8345042816535058


ris (2 : 2): [ 1 0.8345042816535058 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36460 interne); stringhe deallocate: 0 (36380 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9329066365213574 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4556812340271128


ris (2 : 2): [ -1 0.4556812340271128 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36480 interne); stringhe deallocate: 0 (36400 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870043289923e-314 0 0.458204512215084 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 -1620899804 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.378823047626393


ris (2 : 2): [ 1 0.378823047626393 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36500 interne); stringhe deallocate: 0 (36420 interne)


Stringhe allocate: 1 (36500 interne); stringhe deallocate: 0 (36425 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4556812340271128 0.06709307368749362 0.8345042816535058 0.5443187659728872 0.378823047626393 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.817263245553376 0.4267900469224625 0.9286095154286317 0.8197648556201547 0.8569510331553449 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4556810877070809 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4550790626603433


ris (2 : 2): [ 1 0.4550790626603433 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36535 interne); stringhe deallocate: 0 (36455 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9327955334797368


ris (2 : 2): [ -1 0.9327955334797368 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36555 interne); stringhe deallocate: 0 (36475 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8340556573056379


ris (2 : 2): [ 1 0.8340556573056379 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36575 interne); stringhe deallocate: 0 (36495 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9327955288382697 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4550790626603433


ris (2 : 2): [ -1 0.4550790626603433 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36595 interne); stringhe deallocate: 0 (36515 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870557118195e-314 0 0.4575443311695189 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 -288482094 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3789765946452947


ris (2 : 2): [ 1 0.3789765946452947 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36615 interne); stringhe deallocate: 0 (36535 interne)


Stringhe allocate: 1 (36615 interne); stringhe deallocate: 0 (36540 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4550790626603433 0.06720446652026324 0.8340556573056379 0.5449209373396567 0.3789765946452947 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8170610867301588 0.4268584904923881 0.9284159907265742 0.8200030318607516 0.8569863930352182 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4550788423750118 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4547937016078117


ris (2 : 2): [ 1 0.4547937016078117 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36650 interne); stringhe deallocate: 0 (36570 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9327374420132726


ris (2 : 2): [ -1 0.9327374420132726 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36670 interne); stringhe deallocate: 0 (36590 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8338385599962257


ris (2 : 2): [ 1 0.8338385599962257 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36690 interne); stringhe deallocate: 0 (36610 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9327373545619331 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4547937016078117


ris (2 : 2): [ -1 0.4547937016078117 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36710 interne); stringhe deallocate: 0 (36630 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869940524268e-314 0 0.4572310491565901 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 179651829 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.379044858388414


ris (2 : 2): [ 1 0.379044858388414 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36730 interne); stringhe deallocate: 0 (36650 interne)


Stringhe allocate: 1 (36730 interne); stringhe deallocate: 0 (36655 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4547937016078117 0.06726255798672742 0.8338385599962257 0.5452062983921884 0.379044858388414 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8169652863355281 0.4268941838781127 0.928322340677661 0.8201159004334793 0.8570021132867325 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4547936960682124 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4535491641161072


ris (2 : 2): [ 1 0.4535491641161072 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36765 interne); stringhe deallocate: 0 (36685 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9324830139838665


ris (2 : 2): [ -1 0.9324830139838665 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36785 interne); stringhe deallocate: 0 (36705 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8328908695029826


ris (2 : 2): [ 1 0.8328908695029826 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36805 interne); stringhe deallocate: 0 (36725 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.932482723519569 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4535491641161072


ris (2 : 2): [ -1 0.4535491641161072 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36825 interne); stringhe deallocate: 0 (36745 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161449723268464e-314 0 0.4558651491170016 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 314601394 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3793417053868754


ris (2 : 2): [ 1 0.3793417053868754 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36845 interne); stringhe deallocate: 0 (36765 interne)


Stringhe allocate: 1 (36845 interne); stringhe deallocate: 0 (36770 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4535491641161072 0.06751698601613354 0.8328908695029826 0.5464508358838928 0.3793417053868754 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8165474746482629 0.4270505131695823 0.9279135320135319 0.8206081511073136 0.8570704732866947 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4535491487727716 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4533772787088653


ris (2 : 2): [ 1 0.4533772787088653 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36880 interne); stringhe deallocate: 0 (36800 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9324477539956457


ris (2 : 2): [ -1 0.9324477539956457 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36900 interne); stringhe deallocate: 0 (36820 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8327599100097132


ris (2 : 2): [ 1 0.8327599100097132 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36920 interne); stringhe deallocate: 0 (36840 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9324474377128178 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4533772787088653


ris (2 : 2): [ -1 0.4533772787088653 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36940 interne); stringhe deallocate: 0 (36860 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870098625275e-314 0 0.455676560020736 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 573797789 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3793826313008479


ris (2 : 2): [ 1 0.3793826313008479 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36960 interne); stringhe deallocate: 0 (36880 interne)


Stringhe allocate: 1 (36960 interne); stringhe deallocate: 0 (36885 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4533772787088653 0.06755224600435428 0.8327599100097132 0.5466227212911348 0.3793826313008479 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8164897698924845 0.4270721781134513 0.9278570395448618 0.8206761367711454 0.8570798979919877 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4533772489772225 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4545055411743806


ris (2 : 2): [ 1 0.4545055411743806 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36995 interne); stringhe deallocate: 0 (36915 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9326795541051008


ris (2 : 2): [ -1 0.9326795541051008 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37015 interne); stringhe deallocate: 0 (36935 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.833619982221268


ris (2 : 2): [ 1 0.833619982221268 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37035 interne); stringhe deallocate: 0 (36955 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9326791851968945 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4545055411743806


ris (2 : 2): [ -1 0.4545055411743806 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37055 interne); stringhe deallocate: 0 (36975 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869798233362e-314 0 0.4569149061208231 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 1758230201 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3791144410468874


ris (2 : 2): [ 1 0.3791144410468874 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37075 interne); stringhe deallocate: 0 (36995 interne)


Stringhe allocate: 1 (37075 interne); stringhe deallocate: 0 (37000 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4545055411743806 0.06732044589489916 0.833619982221268 0.5454944588256194 0.3791144410468874 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8168685461427276 0.4269297521906539 0.9282280519949888 0.8202298762425443 0.8570181372672856 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4545054456922726 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.45338159257011


ris (2 : 2): [ 1 0.45338159257011 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37110 interne); stringhe deallocate: 0 (37030 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9324456373501442


ris (2 : 2): [ -1 0.9324456373501442 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37130 interne); stringhe deallocate: 0 (37050 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8327606007235443


ris (2 : 2): [ 1 0.8327606007235443 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37150 interne); stringhe deallocate: 0 (37070 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9324455303641486 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.45338159257011


ris (2 : 2): [ -1 0.45338159257011 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37170 interne); stringhe deallocate: 0 (37090 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161448569131115e-314 0 0.4556810899737007 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 976002038 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3793790081534343


ris (2 : 2): [ 1 0.3793790081534343 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37190 interne); stringhe deallocate: 0 (37110 interne)


Stringhe allocate: 1 (37190 interne); stringhe deallocate: 0 (37115 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.45338159257011 0.06755436264985582 0.8327606007235443 0.54661840742989 0.3793790081534343 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8164912181265933 0.4270734786529096 0.927857337500577 0.8206744305139062 0.8570790636282976 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4533815428241939 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.45338159257011


ris (2 : 2): [ 1 0.45338159257011 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37225 interne); stringhe deallocate: 0 (37145 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9324456373501442


ris (2 : 2): [ -1 0.9324456373501442 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37245 interne); stringhe deallocate: 0 (37165 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8327606007235443


ris (2 : 2): [ 1 0.8327606007235443 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37265 interne); stringhe deallocate: 0 (37185 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9324455302211128 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.45338159257011


ris (2 : 2): [ -1 0.45338159257011 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37285 interne); stringhe deallocate: 0 (37205 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870043289923e-314 0 0.4556810899737238 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 976002038 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3793790081534343


ris (2 : 2): [ 1 0.3793790081534343 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37305 interne); stringhe deallocate: 0 (37225 interne)


Stringhe allocate: 1 (37305 interne); stringhe deallocate: 0 (37230 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.45338159257011 0.06755436264985582 0.8327606007235443 0.54661840742989 0.3793790081534343 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8164912181265933 0.4270734786529096 0.927857337500577 0.8206744305139062 0.8570790636282976 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4533815405116632 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4528332595141761


ris (2 : 2): [ 1 0.4528332595141761 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37340 interne); stringhe deallocate: 0 (37260 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9323267044085077


ris (2 : 2): [ -1 0.9323267044085077 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37360 interne); stringhe deallocate: 0 (37280 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.832337259509282


ris (2 : 2): [ 1 0.832337259509282 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37380 interne); stringhe deallocate: 0 (37300 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9323263209316783 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4528332595141761


ris (2 : 2): [ -1 0.4528332595141761 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37400 interne); stringhe deallocate: 0 (37320 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870557118195e-314 0 0.4550788446430625 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 1510597323 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3795039999951058


ris (2 : 2): [ 1 0.3795039999951058 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37420 interne); stringhe deallocate: 0 (37340 interne)


Stringhe allocate: 1 (37420 interne); stringhe deallocate: 0 (37345 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4528332595141761 0.06767329559149227 0.832337259509282 0.5471667404858238 0.3795039999951058 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8163071337090405 0.4271465551238544 0.9276747192749988 0.8208913121410715 0.8571078476225311 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4528331777797128 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.452573663844811


ris (2 : 2): [ 1 0.452573663844811 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37455 interne); stringhe deallocate: 0 (37375 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9322653808090782


ris (2 : 2): [ -1 0.9322653808090782 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37475 interne); stringhe deallocate: 0 (37395 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8321325927432625


ris (2 : 2): [ 1 0.8321325927432625 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37495 interne); stringhe deallocate: 0 (37415 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9322652859183842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.452573663844811


ris (2 : 2): [ -1 0.452573663844811 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37515 interne); stringhe deallocate: 0 (37435 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869940524268e-314 0 0.4547936960224241 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 -2024823908 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3795589288984514


ris (2 : 2): [ 1 0.3795589288984514 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37535 interne); stringhe deallocate: 0 (37455 interne)


Stringhe allocate: 1 (37535 interne); stringhe deallocate: 0 (37460 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.452573663844811 0.06773461919092183 0.8321325927432625 0.547426336155189 0.3795589288984514 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8162199831769376 0.4271842344427232 0.9275864314343962 0.8209939897574722 0.8571204970340127 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4525735399458126 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4514415472954953


ris (2 : 2): [ 1 0.4514415472954953 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37570 interne); stringhe deallocate: 0 (37490 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9319969274160344


ris (2 : 2): [ -1 0.9319969274160344 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37590 interne); stringhe deallocate: 0 (37510 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8312392021110572


ris (2 : 2): [ 1 0.8312392021110572 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37610 interne); stringhe deallocate: 0 (37530 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9319968312235059 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4514415472954953


ris (2 : 2): [ -1 0.4514415472954953 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37630 interne); stringhe deallocate: 0 (37550 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161449723268464e-314 0 0.4535491510395247 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 376186243 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3797976548155619


ris (2 : 2): [ 1 0.3797976548155619 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37650 interne); stringhe deallocate: 0 (37570 interne)


Stringhe allocate: 1 (37650 interne); stringhe deallocate: 0 (37575 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4514415472954953 0.06800307258396565 0.8312392021110572 0.5485584527045047 0.3797976548155619 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.815839913047429 0.4273491813977624 0.927201046297053 0.821441774687998 0.8571754725054483 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4514415308460444 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4512851942501111


ris (2 : 2): [ 1 0.4512851942501111 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37685 interne); stringhe deallocate: 0 (37605 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9319597393137667


ris (2 : 2): [ -1 0.9319597393137667 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37705 interne); stringhe deallocate: 0 (37625 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8311157493072744


ris (2 : 2): [ 1 0.8311157493072744 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37725 interne); stringhe deallocate: 0 (37645 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9319596332999396 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4512851942501111


ris (2 : 2): [ -1 0.4512851942501111 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37745 interne); stringhe deallocate: 0 (37665 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870098625275e-314 0 0.4533772512440768 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 1268664697 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3798305550571633


ris (2 : 2): [ 1 0.3798305550571633 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37765 interne); stringhe deallocate: 0 (37685 interne)


Stringhe allocate: 1 (37765 interne); stringhe deallocate: 0 (37690 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4512851942501111 0.06804026068623326 0.8311157493072744 0.548714805749889 0.3798305550571633 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8157874227607671 0.4273720310409097 0.9271477920160856 0.8215036168522232 0.8571830490028571 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4512851259456232 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4523114847941414


ris (2 : 2): [ 1 0.4523114847941414 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37800 interne); stringhe deallocate: 0 (37720 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9322041790497008


ris (2 : 2): [ -1 0.9322041790497008 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37820 interne); stringhe deallocate: 0 (37740 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8319265026407484


ris (2 : 2): [ 1 0.8319265026407484 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37840 interne); stringhe deallocate: 0 (37760 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9322037737819038 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4523114847941414


ris (2 : 2): [ -1 0.4523114847941414 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37860 interne); stringhe deallocate: 0 (37780 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869798233362e-314 0 0.4545054479601891 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 -558697908 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.379615017846607


ris (2 : 2): [ 1 0.379615017846607 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37880 interne); stringhe deallocate: 0 (37800 interne)


Stringhe allocate: 1 (37880 interne); stringhe deallocate: 0 (37805 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4523114847941414 0.06779582095029924 0.8319265026407484 0.5476885152058586 0.379615017846607 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8161319653612783 0.427221838898893 0.9274975296039993 0.8210976891761057 0.8571334135887149 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4523112795100595 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4512892610217309


ris (2 : 2): [ 1 0.4512892610217309 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37915 interne); stringhe deallocate: 0 (37835 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9319578620654175


ris (2 : 2): [ -1 0.9319578620654175 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37935 interne); stringhe deallocate: 0 (37855 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8311165107075064


ris (2 : 2): [ 1 0.8311165107075064 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37955 interne); stringhe deallocate: 0 (37875 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9319577258083873 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4512892610217309


ris (2 : 2): [ -1 0.4512892610217309 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37975 interne); stringhe deallocate: 0 (37895 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161448569131115e-314 0 0.4533815427785379 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 1514665271 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3798272496857755


ris (2 : 2): [ 1 0.3798272496857755 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37995 interne); stringhe deallocate: 0 (37915 interne)


Stringhe allocate: 1 (37995 interne); stringhe deallocate: 0 (37920 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4512892610217309 0.06804213793458247 0.8311165107075064 0.5487107389782691 0.3798272496857755 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8157887880428285 0.427373184486562 0.9271481204640482 0.8215020083260971 0.8571822878188494 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4512891790601925 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4512892610217309


ris (2 : 2): [ 1 0.4512892610217309 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38030 interne); stringhe deallocate: 0 (37950 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9319578620654175


ris (2 : 2): [ -1 0.9319578620654175 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38050 interne); stringhe deallocate: 0 (37970 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8311165107075064


ris (2 : 2): [ 1 0.8311165107075064 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38070 interne); stringhe deallocate: 0 (37990 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9319577259513432 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4512892610217309


ris (2 : 2): [ -1 0.4512892610217309 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38090 interne); stringhe deallocate: 0 (38010 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870043289923e-314 0 0.4533815427782661 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 1514665271 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3798272496857755


ris (2 : 2): [ 1 0.3798272496857755 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38110 interne); stringhe deallocate: 0 (38030 interne)


Stringhe allocate: 1 (38110 interne); stringhe deallocate: 0 (38035 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4512892610217309 0.06804213793458247 0.8311165107075064 0.5487107389782691 0.3798272496857755 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8157887880428285 0.427373184486562 0.9271481204640482 0.8215020083260971 0.8571822878188494 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4512891813739985 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.450790784567898


ris (2 : 2): [ 1 0.450790784567898 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38145 interne); stringhe deallocate: 0 (38065 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9318331891504126


ris (2 : 2): [ -1 0.9318331891504126 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38165 interne); stringhe deallocate: 0 (38085 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8307176721722347


ris (2 : 2): [ 1 0.8307176721722347 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38185 interne); stringhe deallocate: 0 (38105 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.931832799241084 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.450790784567898


ris (2 : 2): [ -1 0.450790784567898 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38205 interne); stringhe deallocate: 0 (38125 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870557118195e-314 0 0.4528331800463556 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 -1757173028 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3799268876043367


ris (2 : 2): [ 1 0.3799268876043367 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38225 interne); stringhe deallocate: 0 (38145 interne)


Stringhe allocate: 1 (38225 interne); stringhe deallocate: 0 (38150 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.450790784567898 0.06816681084958742 0.8307176721722347 0.549209215432102 0.3799268876043367 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8156214413058872 0.4274497877936491 0.9269760720474289 0.8216991702211187 0.8572052331345993 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4507906458125666 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4505550308556514


ris (2 : 2): [ 1 0.4505550308556514 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38260 interne); stringhe deallocate: 0 (38180 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9317694711743854


ris (2 : 2): [ -1 0.9317694711743854 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38280 interne); stringhe deallocate: 0 (38200 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8305250294384172


ris (2 : 2): [ 1 0.8305250294384172 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38300 interne); stringhe deallocate: 0 (38220 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9317693752738165 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4505550308556514


ris (2 : 2): [ -1 0.4505550308556514 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38320 interne); stringhe deallocate: 0 (38240 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869940524268e-314 0 0.4525735422138633 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 -995839785 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3799699985827659


ris (2 : 2): [ 1 0.3799699985827659 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38340 interne); stringhe deallocate: 0 (38260 interne)


Stringhe allocate: 1 (38340 interne); stringhe deallocate: 0 (38265 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4505550308556514 0.06823052882561465 0.8305250294384172 0.5494449691443486 0.3799699985827659 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8155422949105802 0.4274889382994698 0.9268929710569394 0.8217924176519802 0.8572151610317957 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4505548498378182 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4495269391810285


ris (2 : 2): [ 1 0.4495269391810285 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38375 interne); stringhe deallocate: 0 (38295 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9314906426611596


ris (2 : 2): [ -1 0.9314906426611596 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38395 interne); stringhe deallocate: 0 (38315 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8296841587404948


ris (2 : 2): [ 1 0.8296841587404948 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38415 interne); stringhe deallocate: 0 (38335 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9314904253932319 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4495269391810285


ris (2 : 2): [ -1 0.4495269391810285 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38435 interne); stringhe deallocate: 0 (38355 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161449723268464e-314 0 0.4514415308002562 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 -1549990370 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3801572195594664


ris (2 : 2): [ 1 0.3801572195594664 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38455 interne); stringhe deallocate: 0 (38375 interne)


Stringhe allocate: 1 (38455 interne); stringhe deallocate: 0 (38380 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4495269391810285 0.06850935733884045 0.8296841587404948 0.5504730608189715 0.3801572195594664 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8151971476409314 0.4276602600835352 0.9265302416329619 0.822199057727486 0.8572582755858472 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4495267889234738 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4493849580199526


ris (2 : 2): [ 1 0.4493849580199526 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38490 interne); stringhe deallocate: 0 (38410 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9314520300003668


ris (2 : 2): [ -1 0.9314520300003668 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38510 interne); stringhe deallocate: 0 (38430 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8295679662559387


ris (2 : 2): [ 1 0.8295679662559387 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38530 interne); stringhe deallocate: 0 (38450 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9314518015835338 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4493849580199526


ris (2 : 2): [ -1 0.4493849580199526 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38550 interne); stringhe deallocate: 0 (38470 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870098625275e-314 0 0.4512851282123762 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 545301586 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3801830082359861


ris (2 : 2): [ 1 0.3801830082359861 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38570 interne); stringhe deallocate: 0 (38490 interne)


Stringhe allocate: 1 (38570 interne); stringhe deallocate: 0 (38495 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4493849580199526 0.0685479699996332 0.8295679662559387 0.5506150419800474 0.3801830082359861 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8151494822320029 0.4276839850242093 0.9264801192620699 0.8222552153946333 0.8572642143823823 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4493849321827144 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4503168962342144


ris (2 : 2): [ 1 0.4503168962342144 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38605 interne); stringhe deallocate: 0 (38525 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9317058038257816


ris (2 : 2): [ -1 0.9317058038257816 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38625 interne); stringhe deallocate: 0 (38545 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8303310217880294


ris (2 : 2): [ 1 0.8303310217880294 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38645 interne); stringhe deallocate: 0 (38565 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9317054790946537 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4503168962342144


ris (2 : 2): [ -1 0.4503168962342144 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38665 interne); stringhe deallocate: 0 (38585 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869798233362e-314 0 0.4523112817769137 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 -175480551 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.380014125553815


ris (2 : 2): [ 1 0.380014125553815 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38685 interne); stringhe deallocate: 0 (38605 interne)


Stringhe allocate: 1 (38685 interne); stringhe deallocate: 0 (38610 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4503168962342144 0.06829419617421839 0.8303310217880294 0.5496831037657857 0.380014125553815 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8154623492049329 0.4275280576980683 0.9268092812774689 0.8218866068014812 0.8572253228988683 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4503166696773127 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4493887862276584


ris (2 : 2): [ 1 0.4493887862276584 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38720 interne); stringhe deallocate: 0 (38640 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9314503712425168


ris (2 : 2): [ -1 0.9314503712425168 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38740 interne); stringhe deallocate: 0 (38660 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8295687832984219


ris (2 : 2): [ 1 0.8295687832984219 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38760 interne); stringhe deallocate: 0 (38680 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9314503758402051 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4493887862276584


ris (2 : 2): [ -1 0.4493887862276584 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38780 interne); stringhe deallocate: 0 (38700 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161448569131115e-314 0 0.451289181328109 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 788684039 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3801799970707635


ris (2 : 2): [ 1 0.3801799970707635 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38800 interne); stringhe deallocate: 0 (38720 interne)


Stringhe allocate: 1 (38800 interne); stringhe deallocate: 0 (38725 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4493887862276584 0.06854962875748316 0.8295687832984219 0.5506112137723416 0.3801799970707635 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8151507674242381 0.427685004221819 0.9264804717126309 0.8222537012274545 0.8572635209502251 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4493887445674325 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4493887862276584


ris (2 : 2): [ 1 0.4493887862276584 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38835 interne); stringhe deallocate: 0 (38755 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9314503712425168


ris (2 : 2): [ -1 0.9314503712425168 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38855 interne); stringhe deallocate: 0 (38775 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8295687832984219


ris (2 : 2): [ 1 0.8295687832984219 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38875 interne); stringhe deallocate: 0 (38795 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9314503712149787 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4493887862276584


ris (2 : 2): [ -1 0.4493887862276584 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38895 interne); stringhe deallocate: 0 (38815 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870043289923e-314 0 0.4512891813283426 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 788684039 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3801799970707635


ris (2 : 2): [ 1 0.3801799970707635 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38915 interne); stringhe deallocate: 0 (38835 interne)


Stringhe allocate: 1 (38915 interne); stringhe deallocate: 0 (38840 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4493887862276584 0.06854962875748316 0.8295687832984219 0.5506112137723416 0.3801799970707635 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8151507674242381 0.427685004221819 0.9264804717126309 0.8222537012274545 0.8572635209502251 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.449388744566174 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4489364200432166


ris (2 : 2): [ 1 0.4489364200432166 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38950 interne); stringhe deallocate: 0 (38870 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9313215468870679


ris (2 : 2): [ -1 0.9313215468870679 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38970 interne); stringhe deallocate: 0 (38890 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8291936159980613


ris (2 : 2): [ 1 0.8291936159980613 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38990 interne); stringhe deallocate: 0 (38910 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9313211482020698 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4489364200432166


ris (2 : 2): [ -1 0.4489364200432166 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39010 interne); stringhe deallocate: 0 (38930 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870557118195e-314 0 0.4507906480791695 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 -763074197 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3802571959548447


ris (2 : 2): [ 1 0.3802571959548447 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39030 interne); stringhe deallocate: 0 (38950 interne)


Stringhe allocate: 1 (39030 interne); stringhe deallocate: 0 (38955 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4489364200432166 0.06867845311293208 0.8291936159980613 0.5510635799567833 0.3802571959548447 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8149989006624545 0.4277641583160372 0.926318634441941 0.8224326251735754 0.8572812988484024 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4489362284168452 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4487227000795596


ris (2 : 2): [ 1 0.4487227000795596 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39065 interne); stringhe deallocate: 0 (38985 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9312561720186613


ris (2 : 2): [ -1 0.9312561720186613 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39085 interne); stringhe deallocate: 0 (39005 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8290125690963198


ris (2 : 2): [ 1 0.8290125690963198 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39105 interne); stringhe deallocate: 0 (39025 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9312558215115123 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4487227000795596


ris (2 : 2): [ -1 0.4487227000795596 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39125 interne); stringhe deallocate: 0 (39045 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869940524268e-314 0 0.4505548521044611 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 1785995566 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3802898690167602


ris (2 : 2): [ 1 0.3802898690167602 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39145 interne); stringhe deallocate: 0 (39065 interne)


Stringhe allocate: 1 (39145 interne); stringhe deallocate: 0 (39070 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4487227000795596 0.06874382798133871 0.8290125690963198 0.5512772999204404 0.3802898690167602 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8149271513586265 0.4278043268732585 0.9262405355873326 0.8225171576178154 0.8572888230292864 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4487226030574396 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4477907404733559


ris (2 : 2): [ 1 0.4477907404733559 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39180 interne); stringhe deallocate: 0 (39100 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9309701813650906


ris (2 : 2): [ -1 0.9309701813650906 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39200 interne); stringhe deallocate: 0 (39120 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8282223442733675


ris (2 : 2): [ 1 0.8282223442733675 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39220 interne); stringhe deallocate: 0 (39140 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9309697193595463 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4477907404733559


ris (2 : 2): [ -1 0.4477907404733559 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39240 interne); stringhe deallocate: 0 (39160 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161449723268464e-314 0 0.4495267911915244 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 2121414737 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3804316038000116


ris (2 : 2): [ 1 0.3804316038000116 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39260 interne); stringhe deallocate: 0 (39180 interne)


Stringhe allocate: 1 (39260 interne); stringhe deallocate: 0 (39185 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4477907404733559 0.06902981863490942 0.8282223442733675 0.5522092595266441 0.3804316038000116 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8146142772040699 0.4279800493215438 0.9258996534569999 0.822885774672101 0.8573214627050384 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4477906248317147 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4476620403238135


ris (2 : 2): [ 1 0.4476620403238135 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39295 interne); stringhe deallocate: 0 (39215 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9309305873453186


ris (2 : 2): [ -1 0.9309305873453186 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39315 interne); stringhe deallocate: 0 (39235 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8281131527629112


ris (2 : 2): [ 1 0.8281131527629112 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39335 interne); stringhe deallocate: 0 (39255 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9309301465006055 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4476620403238135


ris (2 : 2): [ -1 0.4476620403238135 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39355 interne); stringhe deallocate: 0 (39275 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870098625275e-314 0 0.4493849321369261 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 -1346994807 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3804511124390977


ris (2 : 2): [ 1 0.3804511124390977 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39375 interne); stringhe deallocate: 0 (39295 interne)


Stringhe allocate: 1 (39375 interne); stringhe deallocate: 0 (39300 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4476620403238135 0.06906941265468136 0.8281131527629112 0.5523379596761866 0.3804511124390977 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8145710704489581 0.428004377242771 0.925852551121541 0.8229366793139918 0.857325955290694 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4476618787977413 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4485067887421175


ris (2 : 2): [ 1 0.4485067887421175 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39410 interne); stringhe deallocate: 0 (39330 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.931190786078287


ris (2 : 2): [ -1 0.931190786078287 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39430 interne); stringhe deallocate: 0 (39350 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.828830216422257


ris (2 : 2): [ 1 0.828830216422257 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39450 interne); stringhe deallocate: 0 (39370 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9311904949637579 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4485067887421175


ris (2 : 2): [ -1 0.4485067887421175 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39470 interne); stringhe deallocate: 0 (39390 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869798233362e-314 0 0.4503166719440657 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 -781476951 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3803234276801394


ris (2 : 2): [ 1 0.3803234276801394 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39490 interne); stringhe deallocate: 0 (39410 interne)


Stringhe allocate: 1 (39490 interne); stringhe deallocate: 0 (39415 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4485067887421175 0.06880921392171302 0.828830216422257 0.5514932112578825 0.3803234276801394 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8148546663746081 0.4278445022334759 0.926161873457011 0.8226025568139448 0.8572965511526606 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4485065981373042 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4476656388022337


ris (2 : 2): [ 1 0.4476656388022337 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39525 interne); stringhe deallocate: 0 (39445 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9309291276302241


ris (2 : 2): [ -1 0.9309291276302241 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39545 interne); stringhe deallocate: 0 (39465 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8281140121790226


ris (2 : 2): [ 1 0.8281140121790226 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39565 interne); stringhe deallocate: 0 (39485 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9309287112208686 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4476656388022337


ris (2 : 2): [ -1 0.4476656388022337 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39585 interne); stringhe deallocate: 0 (39505 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161448569131115e-314 0 0.4493887468342868 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 -947079958 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3804483733767889


ris (2 : 2): [ 1 0.3804483733767889 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39605 interne); stringhe deallocate: 0 (39525 interne)


Stringhe allocate: 1 (39605 interne); stringhe deallocate: 0 (39530 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4476656388022337 0.06907087236977594 0.8281140121790226 0.5523343611977664 0.3804483733767889 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.814572278517297 0.4280052741416976 0.9258529218509668 0.8229352560114084 0.8573253245202961 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4476654550777033 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4476656388022337


ris (2 : 2): [ 1 0.4476656388022337 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39640 interne); stringhe deallocate: 0 (39560 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9309291276302241


ris (2 : 2): [ -1 0.9309291276302241 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39660 interne); stringhe deallocate: 0 (39580 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8281140121790226


ris (2 : 2): [ 1 0.8281140121790226 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39680 interne); stringhe deallocate: 0 (39600 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.930928711220985 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4476656388022337


ris (2 : 2): [ -1 0.4476656388022337 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39700 interne); stringhe deallocate: 0 (39620 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870043289923e-314 0 0.4493887468340905 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 -947079958 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3804483733767889


ris (2 : 2): [ 1 0.3804483733767889 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39720 interne); stringhe deallocate: 0 (39640 interne)


Stringhe allocate: 1 (39720 interne); stringhe deallocate: 0 (39645 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4476656388022337 0.06907087236977594 0.8281140121790226 0.5523343611977664 0.3804483733767889 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.814572278517297 0.4280052741416976 0.9258529218509668 0.8229352560114084 0.8573253245202961 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4476654550776864 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4472558630247296


ris (2 : 2): [ 1 0.4472558630247296 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39755 interne); stringhe deallocate: 0 (39675 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9307975477192607


ris (2 : 2): [ -1 0.9307975477192607 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39775 interne); stringhe deallocate: 0 (39695 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8277616463816476


ris (2 : 2): [ 1 0.8277616463816476 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39795 interne); stringhe deallocate: 0 (39715 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9307971043082768 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4472558630247296


ris (2 : 2): [ -1 0.4472558630247296 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39815 interne); stringhe deallocate: 0 (39735 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870557118195e-314 0 0.4489362283711893 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 237546375 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.380505783356918


ris (2 : 2): [ 1 0.380505783356918 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39835 interne); stringhe deallocate: 0 (39755 interne)


Stringhe allocate: 1 (39835 interne); stringhe deallocate: 0 (39760 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4472558630247296 0.06920245228073929 0.8277616463816476 0.5527441369752704 0.380505783356918 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8144347100550043 0.4280861213435587 0.9257009205468104 0.8230973342163173 0.8573385452914671 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4472558519575314 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4470624793015076


ris (2 : 2): [ 1 0.4470624793015076 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39870 interne); stringhe deallocate: 0 (39790 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.930731162254876


ris (2 : 2): [ -1 0.930731162254876 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39890 interne); stringhe deallocate: 0 (39810 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8275917513143899


ris (2 : 2): [ 1 0.8275917513143899 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39910 interne); stringhe deallocate: 0 (39830 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9307308285684766 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4470624793015076


ris (2 : 2): [ -1 0.4470624793015076 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39930 interne); stringhe deallocate: 0 (39850 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869940524268e-314 0 0.4487226053240425 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 -235431938 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3805292720128823


ris (2 : 2): [ 1 0.3805292720128823 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39950 interne); stringhe deallocate: 0 (39870 interne)


Stringhe allocate: 1 (39950 interne); stringhe deallocate: 0 (39875 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4470624793015076 0.06926883774512405 0.8275917513143899 0.5529375206984925 0.3805292720128823 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8143697879612726 0.4281269108455463 0.9256276322992412 0.8231738230876443 0.8573439544232056 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4470622583851069 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4462192424542189


ris (2 : 2): [ 1 0.4462192424542189 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39985 interne); stringhe deallocate: 0 (39905 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9304408248104861


ris (2 : 2): [ -1 0.9304408248104861 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40005 interne); stringhe deallocate: 0 (39925 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8268502298478265


ris (2 : 2): [ 1 0.8268502298478265 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40025 interne); stringhe deallocate: 0 (39945 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9304404301139044 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4462192424542189


ris (2 : 2): [ -1 0.4462192424542189 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40045 interne); stringhe deallocate: 0 (39965 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161449723268464e-314 0 0.4477906270983576 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 659289076 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3806309873936077


ris (2 : 2): [ 1 0.3806309873936077 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40065 interne); stringhe deallocate: 0 (39985 interne)


Stringhe allocate: 1 (40065 interne); stringhe deallocate: 0 (39990 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4462192424542189 0.06955917518951393 0.8268502298478265 0.5537807575457812 0.3806309873936077 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8140866994948518 0.4283053041109208 0.9253077595113108 0.8235073477175141 0.8573673781514514 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4462192079768732 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4461027993089293


ris (2 : 2): [ 1 0.4461027993089293 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40100 interne); stringhe deallocate: 0 (40020 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9304006377467717


ris (2 : 2): [ -1 0.9304006377467717 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40120 interne); stringhe deallocate: 0 (40040 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8267477705377978


ris (2 : 2): [ 1 0.8267477705377978 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40140 interne); stringhe deallocate: 0 (40060 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9304003756495796 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4461027993089293


ris (2 : 2): [ -1 0.4461027993089293 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40160 interne); stringhe deallocate: 0 (40080 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870098625275e-314 0 0.447661881065792 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 -1049893419 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3806449712288685


ris (2 : 2): [ 1 0.3806449712288685 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40180 interne); stringhe deallocate: 0 (40100 interne)


Stringhe allocate: 1 (40180 interne); stringhe deallocate: 0 (40105 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4461027993089293 0.06959936225322827 0.8267477705377978 0.5538972006910707 0.3806449712288685 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8140476076174852 0.4283299964186487 0.9252635612694176 0.8235534043587276 0.8573705984466973 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4461026212916757 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4468670813935914


ris (2 : 2): [ 1 0.4468670813935914 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40215 interne); stringhe deallocate: 0 (40135 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9306647126153255


ris (2 : 2): [ -1 0.9306647126153255 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40235 interne); stringhe deallocate: 0 (40155 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8274206098524486


ris (2 : 2): [ 1 0.8274206098524486 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40255 interne); stringhe deallocate: 0 (40175 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9306645434353404 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4468670813935914


ris (2 : 2): [ -1 0.4468670813935914 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40275 interne); stringhe deallocate: 0 (40195 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869798233362e-314 0 0.4485065980915159 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 1661969661 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3805535284588572


ris (2 : 2): [ 1 0.3805535284588572 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40295 interne); stringhe deallocate: 0 (40215 interne)


Stringhe allocate: 1 (40295 interne); stringhe deallocate: 0 (40220 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4468670813935914 0.06933528738467454 0.8274206098524486 0.5531329186064087 0.3805535284588572 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8143041896726404 0.4281677397789527 0.9255538063899047 0.8232511086274361 0.8573495403669899 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4468669912550167 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.446106177106988


ris (2 : 2): [ 1 0.446106177106988 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40330 interne); stringhe deallocate: 0 (40250 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9303993590136898


ris (2 : 2): [ -1 0.9303993590136898 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40350 interne); stringhe deallocate: 0 (40270 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8267486606675542


ris (2 : 2): [ 1 0.8267486606675542 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40370 interne); stringhe deallocate: 0 (40290 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9303989452811772 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.446106177106988


ris (2 : 2): [ -1 0.446106177106988 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40390 interne); stringhe deallocate: 0 (40310 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161448569131115e-314 0 0.4476654573444563 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 -330435250 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3806424835605662


ris (2 : 2): [ 1 0.3806424835605662 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40410 interne); stringhe deallocate: 0 (40330 interne)


Stringhe allocate: 1 (40410 interne); stringhe deallocate: 0 (40335 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.446106177106988 0.06960064098631025 0.8267486606675542 0.553893822893012 0.3806424835605662 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8140487415998003 0.428330782116031 0.925263945247899 0.8235520683416275 0.8573700255690669 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4461059614643306 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.446106177106988


ris (2 : 2): [ 1 0.446106177106988 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40445 interne); stringhe deallocate: 0 (40365 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9303993590136898


ris (2 : 2): [ -1 0.9303993590136898 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40465 interne); stringhe deallocate: 0 (40385 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8267486606675542


ris (2 : 2): [ 1 0.8267486606675542 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40485 interne); stringhe deallocate: 0 (40405 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9303989499063672 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.446106177106988


ris (2 : 2): [ -1 0.446106177106988 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40505 interne); stringhe deallocate: 0 (40425 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870043289923e-314 0 0.4476654573445407 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 -330435250 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3806424835605662


ris (2 : 2): [ 1 0.3806424835605662 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40525 interne); stringhe deallocate: 0 (40445 interne)


Stringhe allocate: 1 (40525 interne); stringhe deallocate: 0 (40450 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.446106177106988 0.06960064098631025 0.8267486606675542 0.553893822893012 0.3806424835605662 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8140487415998003 0.428330782116031 0.925263945247899 0.8235520683416275 0.8573700255690669 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4461059591518 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4457356892534498


ris (2 : 2): [ 1 0.4457356892534498 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40560 interne); stringhe deallocate: 0 (40480 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9302662443773951


ris (2 : 2): [ -1 0.9302662443773951 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40580 interne); stringhe deallocate: 0 (40500 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8264181995005653


ris (2 : 2): [ 1 0.8264181995005653 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40600 interne); stringhe deallocate: 0 (40520 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9302659077140021 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4457356892534498


ris (2 : 2): [ -1 0.4457356892534498 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40620 interne); stringhe deallocate: 0 (40540 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870557118195e-314 0 0.4472558542254479 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 -67093826 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3806825102471155


ris (2 : 2): [ 1 0.3806825102471155 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40640 interne); stringhe deallocate: 0 (40560 interne)


Stringhe allocate: 1 (40640 interne); stringhe deallocate: 0 (40565 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4457356892534498 0.06973375562260487 0.8264181995005653 0.5542643107465503 0.3806825102471155 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8139243627391957 0.4284125723056761 0.92512139302311 0.8236986070331231 0.8573792431939888 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4457354566798593 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4455610503771841


ris (2 : 2): [ 1 0.4455610503771841 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40675 interne); stringhe deallocate: 0 (40595 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9301994118494265


ris (2 : 2): [ -1 0.9301994118494265 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40695 interne); stringhe deallocate: 0 (40615 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8262590016306644


ris (2 : 2): [ 1 0.8262590016306644 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40715 interne); stringhe deallocate: 0 (40635 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9301991503688178 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4455610503771841


ris (2 : 2): [ -1 0.4455610503771841 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40735 interne); stringhe deallocate: 0 (40655 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869940524268e-314 0 0.447062258339451 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 2129621845 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3806979512534802


ris (2 : 2): [ 1 0.3806979512534802 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40755 interne); stringhe deallocate: 0 (40675 interne)


Stringhe allocate: 1 (40755 interne); stringhe deallocate: 0 (40680 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4455610503771841 0.06980058815057355 0.8262590016306644 0.5544389496228159 0.3806979512534802 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8138657335986185 0.4284536364988346 0.9250527192641239 0.823767681773814 0.8573827990567733 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4455609342786984 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4447995904169461


ris (2 : 2): [ 1 0.4447995904169461 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40790 interne); stringhe deallocate: 0 (40710 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9299071820837471


ris (2 : 2): [ -1 0.9299071820837471 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40810 interne); stringhe deallocate: 0 (40730 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8255641950167949


ris (2 : 2): [ 1 0.8255641950167949 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40830 interne); stringhe deallocate: 0 (40750 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9299068491909557 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4447995904169461


ris (2 : 2): [ -1 0.4447995904169461 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40850 interne); stringhe deallocate: 0 (40770 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161449723268464e-314 0 0.4462192102434761 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 -1282974769 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3807646045998488


ris (2 : 2): [ 1 0.3807646045998488 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40870 interne); stringhe deallocate: 0 (40790 interne)


Stringhe allocate: 1 (40870 interne); stringhe deallocate: 0 (40795 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4447995904169461 0.07009281791625288 0.8255641950167949 0.5552004095830538 0.3807646045998488 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8136100989770081 0.4286331924711919 0.9247529980305892 0.8240688612730444 0.8573981484548769 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.444799427650854 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4446944443550463


ris (2 : 2): [ 1 0.4446944443550463 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40905 interne); stringhe deallocate: 0 (40825 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9298667404801583


ris (2 : 2): [ -1 0.9298667404801583 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40925 interne); stringhe deallocate: 0 (40845 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8254681928091048


ris (2 : 2): [ 1 0.8254681928091048 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40945 interne); stringhe deallocate: 0 (40865 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9298663181754643 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4446944443550463


ris (2 : 2): [ -1 0.4446944443550463 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40965 interne); stringhe deallocate: 0 (40885 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870098625275e-314 0 0.4461026235583185 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 -1345457999 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3807737484540585


ris (2 : 2): [ 1 0.3807737484540585 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40985 interne); stringhe deallocate: 0 (40905 interne)


Stringhe allocate: 1 (40985 interne); stringhe deallocate: 0 (40910 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4446944443550463 0.07013325951984173 0.8254681928091048 0.5553055556449538 0.3807737484540585 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8135747997161786 0.4286580411769328 0.924711585212207 0.824110449590123 0.8574002541654843 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4446942827449396 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4453845627454559


ris (2 : 2): [ 1 0.4453845627454559 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41020 interne); stringhe deallocate: 0 (40940 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9301324697932012


ris (2 : 2): [ -1 0.9301324697932012 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41040 interne); stringhe deallocate: 0 (40960 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8260986165542336


ris (2 : 2): [ 1 0.8260986165542336 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41060 interne); stringhe deallocate: 0 (40980 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9301323979349316 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4453845627454559


ris (2 : 2): [ -1 0.4453845627454559 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41080 interne); stringhe deallocate: 0 (41000 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869798233362e-314 0 0.4468669935230674 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 1086890937 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3807140538087777


ris (2 : 2): [ 1 0.3807140538087777 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41100 interne); stringhe deallocate: 0 (41020 interne)


Stringhe allocate: 1 (41100 interne); stringhe deallocate: 0 (41025 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4453845627454559 0.06986753020679881 0.8260986165542336 0.5546154372545442 0.3807140538087777 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8138064838004523 0.4284947679899036 0.9249835333755776 0.8238374877509105 0.8573865072656662 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4453845045314218 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4446976106524386


ris (2 : 2): [ 1 0.4446976106524386 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41135 interne); stringhe deallocate: 0 (41055 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9298656259837252


ris (2 : 2): [ -1 0.9298656259837252 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41155 interne); stringhe deallocate: 0 (41075 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8254691034478212


ris (2 : 2): [ 1 0.8254691034478212 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41175 interne); stringhe deallocate: 0 (41095 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9298653645011115 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4446976106524386


ris (2 : 2): [ -1 0.4446976106524386 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41195 interne); stringhe deallocate: 0 (41115 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161448569131115e-314 0 0.4461059614185423 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 -141089822 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3807714927953826


ris (2 : 2): [ 1 0.3807714927953826 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41215 interne); stringhe deallocate: 0 (41135 interne)


Stringhe allocate: 1 (41215 interne); stringhe deallocate: 0 (41140 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4446976106524386 0.07013437401627476 0.8254691034478212 0.5553023893475614 0.3807714927953826 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8135758626942445 0.4286587259616954 0.9247119780377126 0.8241091972276708 0.8573997347166511 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4446973821851925 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4446976106524386


ris (2 : 2): [ 1 0.4446976106524386 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41250 interne); stringhe deallocate: 0 (41170 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9298656259837252


ris (2 : 2): [ -1 0.9298656259837252 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41270 interne); stringhe deallocate: 0 (41190 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8254691034478212


ris (2 : 2): [ 1 0.8254691034478212 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41290 interne); stringhe deallocate: 0 (41210 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9298653643580757 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4446976106524386


ris (2 : 2): [ -1 0.4446976106524386 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41310 interne); stringhe deallocate: 0 (41230 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870043289923e-314 0 0.446105961418553 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 -141089822 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3807714927953826


ris (2 : 2): [ 1 0.3807714927953826 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41330 interne); stringhe deallocate: 0 (41250 interne)


Stringhe allocate: 1 (41330 interne); stringhe deallocate: 0 (41255 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4446976106524386 0.07013437401627476 0.8254691034478212 0.5553023893475614 0.3807714927953826 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8135758626942445 0.4286587259616954 0.9247119780377126 0.8241091972276708 0.8573997347166511 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4446973844989985 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4443633164235203


ris (2 : 2): [ 1 0.4443633164235203 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41365 interne); stringhe deallocate: 0 (41285 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9297320387007503


ris (2 : 2): [ -1 0.9297320387007503 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41385 interne); stringhe deallocate: 0 (41305 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8251596326395634


ris (2 : 2): [ 1 0.8251596326395634 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41405 interne); stringhe deallocate: 0 (41325 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9297318499538951 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4443633164235203


ris (2 : 2): [ -1 0.4443633164235203 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41425 interne); stringhe deallocate: 0 (41345 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870557118195e-314 0 0.4457354589467135 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 -706399985 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3807963162160431


ris (2 : 2): [ 1 0.3807963162160431 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41445 interne); stringhe deallocate: 0 (41365 interne)


Stringhe allocate: 1 (41445 interne); stringhe deallocate: 0 (41370 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4443633164235203 0.07026796129924973 0.8251596326395634 0.5556366835764797 0.3807963162160431 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8134636346281892 0.4287408065616418 0.9245784804996315 0.8242414202908897 0.8574054512273256 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4443631193385675 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4442059324982211


ris (2 : 2): [ 1 0.4442059324982211 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41480 interne); stringhe deallocate: 0 (41400 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9296652476763165


ris (2 : 2): [ -1 0.9296652476763165 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41500 interne); stringhe deallocate: 0 (41420 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8250106711856245


ris (2 : 2): [ 1 0.8250106711856245 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41520 interne); stringhe deallocate: 0 (41440 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9296650928947026 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4442059324982211


ris (2 : 2): [ -1 0.4442059324982211 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41540 interne); stringhe deallocate: 0 (41460 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869940524268e-314 0 0.4455609365466149 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 -1204733951 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3808047386874034


ris (2 : 2): [ 1 0.3808047386874034 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41560 interne); stringhe deallocate: 0 (41480 interne)


Stringhe allocate: 1 (41560 interne); stringhe deallocate: 0 (41485 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4442059324982211 0.07033475232368347 0.8250106711856245 0.555794067501779 0.3808047386874034 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8134107982581995 0.4287818452536075 0.9245142224602972 0.8243036701980204 0.8574073908128523 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4442057630763436 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4435197467985865


ris (2 : 2): [ 1 0.4435197467985865 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41595 interne); stringhe deallocate: 0 (41515 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9293732532010078


ris (2 : 2): [ -1 0.9293732532010078 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41615 interne); stringhe deallocate: 0 (41535 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8243605645199041


ris (2 : 2): [ 1 0.8243605645199041 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41635 interne); stringhe deallocate: 0 (41555 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9293727963419141 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4435197467985865


ris (2 : 2): [ -1 0.4435197467985865 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41655 interne); stringhe deallocate: 0 (41575 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161449723268464e-314 0 0.4447994276051981 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 -1511500789 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3808408177213177


ris (2 : 2): [ 1 0.3808408177213177 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41675 interne); stringhe deallocate: 0 (41595 interne)


Stringhe allocate: 1 (41675 interne); stringhe deallocate: 0 (41600 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4435197467985865 0.07062674679899217 0.8243605645199041 0.5564802532014135 0.3808408177213177 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8131804344428444 0.4289612566555061 0.9242337836045216 0.8245750765439698 0.8574156993447554 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4435195944044308 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4434249991889637


ris (2 : 2): [ 1 0.4434249991889637 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41710 interne); stringhe deallocate: 0 (41630 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9293328504475965


ris (2 : 2): [ -1 0.9293328504475965 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41730 interne); stringhe deallocate: 0 (41650 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8242707406967552


ris (2 : 2): [ 1 0.8242707406967552 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41750 interne); stringhe deallocate: 0 (41670 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9293327373953986 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4434249991889637


ris (2 : 2): [ -1 0.4434249991889637 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41770 interne); stringhe deallocate: 0 (41690 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870098625275e-314 0 0.4446942850115425 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 1064285453 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3808457415077916


ris (2 : 2): [ 1 0.3808457415077916 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41790 interne); stringhe deallocate: 0 (41710 interne)


Stringhe allocate: 1 (41790 interne); stringhe deallocate: 0 (41715 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4434249991889637 0.0706671495524035 0.8242707406967552 0.5565750008110364 0.3808457415077916 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8131486261133206 0.4289860814903678 0.9241950359781497 0.824612551971582 0.8574168332286919 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4434249445423335 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4440468540662803


ris (2 : 2): [ 1 0.4440468540662803 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41825 interne); stringhe deallocate: 0 (41745 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9295983087412657


ris (2 : 2): [ -1 0.9295983087412657 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41845 interne); stringhe deallocate: 0 (41765 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8248605811621053


ris (2 : 2): [ 1 0.8248605811621053 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41865 interne); stringhe deallocate: 0 (41785 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9295978587123237 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4440468540662803


ris (2 : 2): [ -1 0.4440468540662803 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41885 interne); stringhe deallocate: 0 (41805 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869798233362e-314 0 0.4453845067980646 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 2131152532 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.380813727095825


ris (2 : 2): [ 1 0.380813727095825 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41905 interne); stringhe deallocate: 0 (41825 interne)


Stringhe allocate: 1 (41905 interne); stringhe deallocate: 0 (41830 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4440468540662803 0.0704016912587343 0.8248605811621053 0.5559531459337197 0.380813727095825 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8133573930144847 0.4288229748269201 0.9244494775858352 0.8243665903316743 0.8574094607263181 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4440467378840998 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4434279632228153


ris (2 : 2): [ 1 0.4434279632228153 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41940 interne); stringhe deallocate: 0 (41860 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9293318846870226


ris (2 : 2): [ -1 0.9293318846870226 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41960 interne); stringhe deallocate: 0 (41880 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8242716629542648


ris (2 : 2): [ 1 0.8242716629542648 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41980 interne); stringhe deallocate: 0 (41900 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9293317835781627 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4434279632228153


ris (2 : 2): [ -1 0.4434279632228153 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42000 interne); stringhe deallocate: 0 (41920 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161448569131115e-314 0 0.4446973844532431 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 -1375002397 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3808436997314496


ris (2 : 2): [ 1 0.3808436997314496 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42020 interne); stringhe deallocate: 0 (41940 interne)


Stringhe allocate: 1 (42020 interne); stringhe deallocate: 0 (41945 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4434279632228153 0.07066811531297745 0.8242716629542648 0.5565720367771847 0.3808436997314496 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8131496211881921 0.4289866748867268 0.9241954338156959 0.8246113796102265 0.8574163630341762 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4434278032527352 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4434279632228153


ris (2 : 2): [ 1 0.4434279632228153 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42055 interne); stringhe deallocate: 0 (41975 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9293318846870226


ris (2 : 2): [ -1 0.9293318846870226 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42075 interne); stringhe deallocate: 0 (41995 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8242716629542648


ris (2 : 2): [ 1 0.8242716629542648 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42095 interne); stringhe deallocate: 0 (42015 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9293317837211186 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4434279632228153


ris (2 : 2): [ -1 0.4434279632228153 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42115 interne); stringhe deallocate: 0 (42035 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870043289923e-314 0 0.4446973844532103 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 -1375002397 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3808436997314496


ris (2 : 2): [ 1 0.3808436997314496 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42135 interne); stringhe deallocate: 0 (42055 interne)


Stringhe allocate: 1 (42135 interne); stringhe deallocate: 0 (42060 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4434279632228153 0.07066811531297745 0.8242716629542648 0.5565720367771847 0.3808436997314496 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8131496211881921 0.4289866748867268 0.9241954338156959 0.8246113796102265 0.8574163630341762 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4434278032514767 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4431269672719131


ris (2 : 2): [ 1 0.4431269672719131 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42170 interne); stringhe deallocate: 0 (42090 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9291987431680009


ris (2 : 2): [ -1 0.9291987431680009 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42190 interne); stringhe deallocate: 0 (42110 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8239822593067528


ris (2 : 2): [ 1 0.8239822593067528 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42210 interne); stringhe deallocate: 0 (42130 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9291987507791699 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4431269672719131


ris (2 : 2): [ -1 0.4431269672719131 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42230 interne); stringhe deallocate: 0 (42150 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870557118195e-314 0 0.4443631216053205 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 907683160 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3808552920348397


ris (2 : 2): [ 1 0.3808552920348397 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42250 interne); stringhe deallocate: 0 (42170 interne)


Stringhe allocate: 1 (42250 interne); stringhe deallocate: 0 (42175 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4431269672719131 0.07080125683199912 0.8239822593067528 0.5568730327280869 0.3808552920348397 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8130485719012525 0.4290684815940397 0.9240705927210802 0.8247304322387254 0.8574190325907607 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4431269213184566 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4429854452827706


ris (2 : 2): [ 1 0.4429854452827706 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42285 interne); stringhe deallocate: 0 (42205 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9291324144574329


ris (2 : 2): [ -1 0.9291324144574329 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42305 interne); stringhe deallocate: 0 (42225 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8238430712407344


ris (2 : 2): [ 1 0.8238430712407344 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42325 interne); stringhe deallocate: 0 (42245 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9291319889517951 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4429854452827706


ris (2 : 2): [ -1 0.4429854452827706 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42345 interne); stringhe deallocate: 0 (42265 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869940524268e-314 0 0.4442057653431979 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 -1610220581 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3808576259579639


ris (2 : 2): [ 1 0.3808576259579639 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42365 interne); stringhe deallocate: 0 (42285 interne)


Stringhe allocate: 1 (42365 interne); stringhe deallocate: 0 (42290 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4429854452827706 0.07086758554256711 0.8238430712407344 0.5570145547172294 0.3808576259579639 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8130010606438874 0.4291092362245393 0.9240105506633225 0.8247864082900556 0.8574195700628776 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4429852983699396 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4423684542783232


ris (2 : 2): [ 1 0.4423684542783232 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42400 interne); stringhe deallocate: 0 (42320 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9288424874723594


ris (2 : 2): [ -1 0.9288424874723594 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42420 interne); stringhe deallocate: 0 (42340 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8232356401958219


ris (2 : 2): [ 1 0.8232356401958219 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42440 interne); stringhe deallocate: 0 (42360 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9288420718165718 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4423684542783232


ris (2 : 2): [ -1 0.4423684542783232 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42460 interne); stringhe deallocate: 0 (42380 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161449723268464e-314 0 0.4435195966723473 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 -956689414 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3808671859174987


ris (2 : 2): [ 1 0.3808671859174987 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42480 interne); stringhe deallocate: 0 (42400 interne)


Stringhe allocate: 1 (42480 interne); stringhe deallocate: 0 (42405 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4423684542783232 0.07115751252764058 0.8232356401958219 0.5576315457216768 0.3808671859174987 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8127939266247728 0.4292873772896579 0.9237485209439239 0.8250304461271745 0.8574217715971253 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4423682710872079 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4422832649847504


ris (2 : 2): [ 1 0.4422832649847504 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42515 interne); stringhe deallocate: 0 (42435 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9288023761865099


ris (2 : 2): [ -1 0.9288023761865099 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42535 interne); stringhe deallocate: 0 (42455 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8231517147642299


ris (2 : 2): [ 1 0.8231517147642299 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42555 interne); stringhe deallocate: 0 (42475 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.928802017495399 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4422832649847504


ris (2 : 2): [ -1 0.4422832649847504 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42575 interne); stringhe deallocate: 0 (42495 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870098625275e-314 0 0.4434249444966776 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 2007719393 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3808684497794795


ris (2 : 2): [ 1 0.3808684497794795 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42595 interne); stringhe deallocate: 0 (42515 interne)


Stringhe allocate: 1 (42595 interne); stringhe deallocate: 0 (42520 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4422832649847504 0.07119762381349015 0.8231517147642299 0.5577167350152497 0.3808684497794795 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8127653271790174 0.4293120230368716 0.9237123177279792 0.8250641409635648 0.857422062648089 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4422831556532101 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4428423724252248


ris (2 : 2): [ 1 0.4428423724252248 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42630 interne); stringhe deallocate: 0 (42550 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9290659057078397


ris (2 : 2): [ -1 0.9290659057078397 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42650 interne); stringhe deallocate: 0 (42570 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8237028123839898


ris (2 : 2): [ 1 0.8237028123839898 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42670 interne); stringhe deallocate: 0 (42590 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9290657085868412 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4428423724252248


ris (2 : 2): [ -1 0.4428423724252248 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42690 interne); stringhe deallocate: 0 (42610 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869798233362e-314 0 0.4440467401507027 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 -2001314700 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.380860439958765


ris (2 : 2): [ 1 0.380860439958765 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42710 interne); stringhe deallocate: 0 (42630 interne)


Stringhe allocate: 1 (42710 interne); stringhe deallocate: 0 (42635 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4428423724252248 0.07093409429216036 0.8237028123839898 0.5571576275747752 0.380860439958765 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8129530287345144 0.4291501014771795 0.9239500466947095 0.8248429977548195 0.8574202180906348 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4428422495350093 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.442286035985593


ris (2 : 2): [ 1 0.442286035985593 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42745 interne); stringhe deallocate: 0 (42665 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9288015448360185


ris (2 : 2): [ -1 0.9288015448360185 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42765 interne); stringhe deallocate: 0 (42685 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8231526409357444


ris (2 : 2): [ 1 0.8231526409357444 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42785 interne); stringhe deallocate: 0 (42705 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9288015454263867 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.442286035985593


ris (2 : 2): [ -1 0.442286035985593 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42805 interne); stringhe deallocate: 0 (42725 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161448569131115e-314 0 0.4434278055193781 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 386025290 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3808666049501513


ris (2 : 2): [ 1 0.3808666049501513 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42825 interne); stringhe deallocate: 0 (42745 interne)


Stringhe allocate: 1 (42825 interne); stringhe deallocate: 0 (42750 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.442286035985593 0.07119845516398149 0.8231526409357444 0.557713964014407 0.3808666049501513 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8127662574495358 0.4293125338470742 0.9237127172539239 0.8250630449523629 0.8574216378079071 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4422860166774347 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.442286035985593


ris (2 : 2): [ 1 0.442286035985593 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42860 interne); stringhe deallocate: 0 (42780 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9288015448360185


ris (2 : 2): [ -1 0.9288015448360185 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42880 interne); stringhe deallocate: 0 (42800 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8231526409357444


ris (2 : 2): [ 1 0.8231526409357444 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42900 interne); stringhe deallocate: 0 (42820 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9288015408011603 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.442286035985593


ris (2 : 2): [ -1 0.442286035985593 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42920 interne); stringhe deallocate: 0 (42840 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870043289923e-314 0 0.4434278055195273 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 386025290 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3808666049501513


ris (2 : 2): [ 1 0.3808666049501513 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42940 interne); stringhe deallocate: 0 (42860 interne)


Stringhe allocate: 1 (42940 interne); stringhe deallocate: 0 (42865 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.442286035985593 0.07119845516398149 0.8231526409357444 0.557713964014407 0.3808666049501513 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8127662574495358 0.4293125338470742 0.9237127172539239 0.8250630449523629 0.8574216378079071 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4422860166774179 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4420156327139572


ris (2 : 2): [ 1 0.4420156327139572 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42975 interne); stringhe deallocate: 0 (42895 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9286696377563457


ris (2 : 2): [ -1 0.9286696377563457 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42995 interne); stringhe deallocate: 0 (42915 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8228823796538153


ris (2 : 2): [ 1 0.8228823796538153 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43015 interne); stringhe deallocate: 0 (42935 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9286694567653022 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4420156327139572


ris (2 : 2): [ -1 0.4420156327139572 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43035 interne); stringhe deallocate: 0 (42955 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870557118195e-314 0 0.4431269212726683 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 -273354561 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3808667469398581


ris (2 : 2): [ 1 0.3808667469398581 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43055 interne); stringhe deallocate: 0 (42975 interne)


Stringhe allocate: 1 (43055 interne); stringhe deallocate: 0 (42980 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4420156327139572 0.0713303622436543 0.8228823796538153 0.5579843672860427 0.3808667469398581 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8126754786277508 0.4293935820725909 0.9235961336705505 0.8251699972889193 0.8574216705062885 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.442015411588879 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4418886719400008


ris (2 : 2): [ 1 0.4418886719400008 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43090 interne); stringhe deallocate: 0 (43010 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9286041310654774


ris (2 : 2): [ -1 0.9286041310654774 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43110 interne); stringhe deallocate: 0 (43030 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8227525030605957


ris (2 : 2): [ 1 0.8227525030605957 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43130 interne); stringhe deallocate: 0 (43050 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9286041300747447 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4418886719400008


ris (2 : 2): [ -1 0.4418886719400008 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43150 interne); stringhe deallocate: 0 (43070 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869940524268e-314 0 0.4429853006366926 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 1822237083 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3808638311205949


ris (2 : 2): [ 1 0.3808638311205949 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43170 interne); stringhe deallocate: 0 (43090 interne)


Stringhe allocate: 1 (43170 interne); stringhe deallocate: 0 (43095 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4418886719400008 0.07139586893452266 0.8227525030605957 0.5581113280599992 0.3808638311205949 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.812632855809606 0.4294338316260457 0.9235401083363783 0.8252202139573179 0.8574209990310647 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.441888575218603 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4413351990720693


ris (2 : 2): [ 1 0.4413351990720693 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43205 interne); stringhe deallocate: 0 (43125 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9283178373774161


ris (2 : 2): [ -1 0.9283178373774161 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43225 interne); stringhe deallocate: 0 (43145 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8221857285181913


ris (2 : 2): [ 1 0.8221857285181913 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43245 interne); stringhe deallocate: 0 (43165 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9283175510856205 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4413351990720693


ris (2 : 2): [ -1 0.4413351990720693 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43265 interne); stringhe deallocate: 0 (43185 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161449723268464e-314 0 0.4423682733540622 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 -39476005 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.380850529446122


ris (2 : 2): [ 1 0.380850529446122 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43285 interne); stringhe deallocate: 0 (43205 interne)


Stringhe allocate: 1 (43285 interne); stringhe deallocate: 0 (43210 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4413351990720693 0.07168216262258387 0.8221857285181913 0.5586648009279307 0.380850529446122 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8124470458727039 0.4296097402690961 0.9232956167590177 0.8254391285292004 0.8574179358285692 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4413349649653986 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4412587836769628


ris (2 : 2): [ 1 0.4412587836769628 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43320 interne); stringhe deallocate: 0 (43240 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.928278233410096


ris (2 : 2): [ -1 0.928278233410096 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43340 interne); stringhe deallocate: 0 (43260 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8221074222302744


ris (2 : 2): [ 1 0.8221074222302744 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43360 interne); stringhe deallocate: 0 (43280 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9282779782266797 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4412587836769628


ris (2 : 2): [ -1 0.4412587836769628 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43380 interne); stringhe deallocate: 0 (43300 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870098625275e-314 0 0.4422831579211266 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 2067646303 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3808486385533117


ris (2 : 2): [ 1 0.3808486385533117 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43400 interne); stringhe deallocate: 0 (43320 interne)


Stringhe allocate: 1 (43400 interne); stringhe deallocate: 0 (43325 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4412587836769628 0.07172176658990404 0.8221074222302744 0.5587412163230372 0.3808486385533117 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8124213919688438 0.4296340743024374 0.923261837493335 0.8254693530342742 0.857417500380567 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4412586710200692 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4417602938832962


ris (2 : 2): [ 1 0.4417602938832962 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43435 interne); stringhe deallocate: 0 (43355 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9285384178029861


ris (2 : 2): [ -1 0.9285384178029861 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43455 interne); stringhe deallocate: 0 (43375 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8226216123395692


ris (2 : 2): [ 1 0.8226216123395692 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43475 interne); stringhe deallocate: 0 (43395 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9285383266898322 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4417602938832962


ris (2 : 2): [ -1 0.4417602938832962 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43495 interne); stringhe deallocate: 0 (43415 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869798233362e-314 0 0.4428422494893534 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 -138831017 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.380861318456273


ris (2 : 2): [ 1 0.380861318456273 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43515 interne); stringhe deallocate: 0 (43435 interne)


Stringhe allocate: 1 (43515 interne); stringhe deallocate: 0 (43440 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4417602938832962 0.07146158219701393 0.8226216123395692 0.5582397061167037 0.380861318456273 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8125897571863527 0.4294742081041774 0.9234836455342386 0.8252709912021494 0.8574204203971764 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4417600652906613 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4412613708132119


ris (2 : 2): [ 1 0.4412613708132119 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43550 interne); stringhe deallocate: 0 (43470 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9282775232509652


ris (2 : 2): [ -1 0.9282775232509652 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43570 interne); stringhe deallocate: 0 (43490 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8221083456780326


ris (2 : 2): [ 1 0.8221083456780326 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43590 interne); stringhe deallocate: 0 (43510 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9282774966212593 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4412613708132119


ris (2 : 2): [ -1 0.4412613708132119 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43610 interne); stringhe deallocate: 0 (43530 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161448569131115e-314 0 0.4422860189440376 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 1428709438 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3808469748648207


ris (2 : 2): [ 1 0.3808469748648207 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43630 interne); stringhe deallocate: 0 (43550 interne)


Stringhe allocate: 1 (43630 interne); stringhe deallocate: 0 (43555 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4412613708132119 0.07172247674903476 0.8221083456780326 0.5587386291867881 0.3808469748648207 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8124222605129967 0.4296345106485193 0.9232622358443232 0.8254683297468518 0.8574171172547622 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4412612959369868 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4412613708132119


ris (2 : 2): [ 1 0.4412613708132119 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43665 interne); stringhe deallocate: 0 (43585 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9282775232509652


ris (2 : 2): [ -1 0.9282775232509652 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43685 interne); stringhe deallocate: 0 (43605 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8221083456780326


ris (2 : 2): [ 1 0.8221083456780326 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43705 interne); stringhe deallocate: 0 (43625 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9282774966213756 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4412613708132119


ris (2 : 2): [ -1 0.4412613708132119 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43725 interne); stringhe deallocate: 0 (43645 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870043289923e-314 0 0.4422860189440607 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 1428709438 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3808469748648207


ris (2 : 2): [ 1 0.3808469748648207 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43745 interne); stringhe deallocate: 0 (43665 interne)


Stringhe allocate: 1 (43745 interne); stringhe deallocate: 0 (43670 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4412613708132119 0.07172247674903476 0.8221083456780326 0.5587386291867881 0.3808469748648207 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8124222605129967 0.4296345106485193 0.9232622358443232 0.8254683297468518 0.8574171172547622 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4412612936244562 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4410190352438478


ris (2 : 2): [ 1 0.4410190352438478 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43780 interne); stringhe deallocate: 0 (43700 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9281475224001097


ris (2 : 2): [ -1 0.9281475224001097 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43800 interne); stringhe deallocate: 0 (43720 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8218563066697433


ris (2 : 2): [ 1 0.8218563066697433 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43820 interne); stringhe deallocate: 0 (43740 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.928147320220142 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4410190352438478


ris (2 : 2): [ -1 0.4410190352438478 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43840 interne); stringhe deallocate: 0 (43760 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870557118195e-314 0 0.4420154138569297 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 -414037374 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3808372714258955


ris (2 : 2): [ 1 0.3808372714258955 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43860 interne); stringhe deallocate: 0 (43780 interne)


Stringhe allocate: 1 (43860 interne); stringhe deallocate: 0 (43785 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4410190352438478 0.07185247759989033 0.8218563066697433 0.5589809647561522 0.3808372714258955 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8123409044800967 0.4297143876217919 0.923153512868814 0.8255641804930999 0.8574148826790785 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.441018821929493 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4409054227237624


ris (2 : 2): [ 1 0.4409054227237624 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43895 interne); stringhe deallocate: 0 (43815 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9280831424594885


ris (2 : 2): [ -1 0.9280831424594885 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43915 interne); stringhe deallocate: 0 (43835 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8217352836231979


ris (2 : 2): [ 1 0.8217352836231979 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43935 interne); stringhe deallocate: 0 (43855 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9280829518289746 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4409054227237624


ris (2 : 2): [ -1 0.4409054227237624 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43955 interne); stringhe deallocate: 0 (43875 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869940524268e-314 0 0.4418885751728148 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 1624150334 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3808298608994355


ris (2 : 2): [ 1 0.3808298608994355 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43975 interne); stringhe deallocate: 0 (43895 interne)


Stringhe allocate: 1 (43975 interne); stringhe deallocate: 0 (43900 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4409054227237624 0.07191685754051147 0.8217352836231979 0.5590945772762376 0.3808298608994355 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8123027628901263 0.4297539448613211 0.9231013067209843 0.8256091175399472 0.8574131761312906 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4409053346845822 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4404101746215079


ris (2 : 2): [ 1 0.4404101746215079 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44010 interne); stringhe deallocate: 0 (43930 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9278018082180797


ris (2 : 2): [ -1 0.9278018082180797 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44030 interne); stringhe deallocate: 0 (43950 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8212071641977297


ris (2 : 2): [ 1 0.8212071641977297 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44050 interne); stringhe deallocate: 0 (43970 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9278016132804083 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4404101746215079


ris (2 : 2): [ -1 0.4404101746215079 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44070 interne); stringhe deallocate: 0 (43990 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161449723268464e-314 0 0.4413349672321516 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 674549049 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3807969895762217


ris (2 : 2): [ 1 0.3807969895762217 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44090 interne); stringhe deallocate: 0 (44010 interne)


Stringhe allocate: 1 (44090 interne); stringhe deallocate: 0 (44015 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4404101746215079 0.07219819178192033 0.8212071641977297 0.5595898253784921 0.3807969895762217 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.812136499963861 0.4299268062505645 0.9228734899407531 0.8258050025282862 0.8574056062934102 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4404101416095942 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4403418016827872


ris (2 : 2): [ 1 0.4403418016827872 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44125 interne); stringhe deallocate: 0 (44045 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9277628943449436


ris (2 : 2): [ -1 0.9277628943449436 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44145 interne); stringhe deallocate: 0 (44065 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.821134200279685


ris (2 : 2): [ 1 0.821134200279685 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44165 interne); stringhe deallocate: 0 (44085 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9277625124903999 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4403418016827872


ris (2 : 2): [ -1 0.4403418016827872 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44185 interne); stringhe deallocate: 0 (44105 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870098625275e-314 0 0.4412586732869235 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 1632797621 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3807923985968978


ris (2 : 2): [ 1 0.3807923985968978 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44205 interne); stringhe deallocate: 0 (44125 interne)


Stringhe allocate: 1 (44205 interne); stringhe deallocate: 0 (44130 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4403418016827872 0.07223710565505637 0.821134200279685 0.5596581983172129 0.3807923985968978 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8121135460447699 0.4299507162664141 0.9228420152324195 0.8258320460086005 0.8574045490506285 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4403417131648615 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4407905169983307


ris (2 : 2): [ 1 0.4407905169983307 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44240 interne); stringhe deallocate: 0 (44160 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9280185344071452


ris (2 : 2): [ -1 0.9280185344071452 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44260 interne); stringhe deallocate: 0 (44180 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8216133017817701


ris (2 : 2): [ 1 0.8216133017817701 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44280 interne); stringhe deallocate: 0 (44200 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9280180972073131 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4407905169983307


ris (2 : 2): [ -1 0.4407905169983307 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44300 interne); stringhe deallocate: 0 (44220 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869798233362e-314 0 0.4417600675585778 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 1840858057 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3808227847834394


ris (2 : 2): [ 1 0.3808227847834394 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44320 interne); stringhe deallocate: 0 (44240 interne)


Stringhe allocate: 1 (44320 interne); stringhe deallocate: 0 (44245 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4407905169983307 0.07198146559285479 0.8216133017817701 0.5592094830016694 0.3808227847834394 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8122641871498701 0.4297936422605017 0.9230486869743501 0.8256545660870165 0.8574115465938801 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4407904169307138 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4403442140129549


ris (2 : 2): [ 1 0.4403442140129549 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44355 interne); stringhe deallocate: 0 (44275 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9277622931994307


ris (2 : 2): [ -1 0.9277622931994307 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44375 interne); stringhe deallocate: 0 (44295 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8211351153245879


ris (2 : 2): [ 1 0.8211351153245879 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44395 interne); stringhe deallocate: 0 (44315 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9277620357963139 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4403442140129549


ris (2 : 2): [ -1 0.4403442140129549 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44415 interne); stringhe deallocate: 0 (44335 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161448569131115e-314 0 0.4412612958913309 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 2139801639 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.380790901311633


ris (2 : 2): [ 1 0.380790901311633 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44435 interne); stringhe deallocate: 0 (44355 interne)


Stringhe allocate: 1 (44435 interne); stringhe deallocate: 0 (44360 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4403442140129549 0.07223770680056929 0.8211351153245879 0.559655785987045 0.380790901311633 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8121143559036488 0.4299510856307971 0.9228424099586376 0.8258310918620533 0.8574042042453208 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4403440973493771 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4403442140129549


ris (2 : 2): [ 1 0.4403442140129549 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44470 interne); stringhe deallocate: 0 (44390 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9277622931994307


ris (2 : 2): [ -1 0.9277622931994307 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44490 interne); stringhe deallocate: 0 (44410 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8211351153245879


ris (2 : 2): [ 1 0.8211351153245879 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44510 interne); stringhe deallocate: 0 (44430 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9277620404215039 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4403442140129549


ris (2 : 2): [ -1 0.4403442140129549 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44530 interne); stringhe deallocate: 0 (44450 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870043289923e-314 0 0.4412612958910591 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 2139801639 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.380790901311633


ris (2 : 2): [ 1 0.380790901311633 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44550 interne); stringhe deallocate: 0 (44470 interne)


Stringhe allocate: 1 (44550 interne); stringhe deallocate: 0 (44475 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4403442140129549 0.07223770680056929 0.8211351153245879 0.559655785987045 0.380790901311633 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8121143559036488 0.4299510856307971 0.9228424099586376 0.8258310918620533 0.8574042042453208 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4403440996631831 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.440127592788627


ris (2 : 2): [ 1 0.440127592788627 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44585 interne); stringhe deallocate: 0 (44505 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9276347653120824


ris (2 : 2): [ -1 0.9276347653120824 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44605 interne); stringhe deallocate: 0 (44525 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8209003885779476


ris (2 : 2): [ 1 0.8209003885779476 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44625 interne); stringhe deallocate: 0 (44545 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9276347202750372 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.440127592788627


ris (2 : 2): [ -1 0.440127592788627 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44645 interne); stringhe deallocate: 0 (44565 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870557118195e-314 0 0.4410188241961359 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 -330954248 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3807727957893206


ris (2 : 2): [ 1 0.3807727957893206 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44665 interne); stringhe deallocate: 0 (44585 interne)


Stringhe allocate: 1 (44665 interne); stringhe deallocate: 0 (44590 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.440127592788627 0.07236523468791756 0.8209003885779476 0.559872407211373 0.3807727957893206 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8120416325989375 0.4300294431306304 0.92274115503584 0.825916771839035 0.8574000347791951 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4401273748622492 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4400261988603799


ris (2 : 2): [ 1 0.4400261988603799 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44700 interne); stringhe deallocate: 0 (44620 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9275717675151718


ris (2 : 2): [ -1 0.9275717675151718 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44720 interne); stringhe deallocate: 0 (44640 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.820787767583454


ris (2 : 2): [ 1 0.820787767583454 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44740 interne); stringhe deallocate: 0 (44660 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9275713007899604 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4400261988603799


ris (2 : 2): [ -1 0.4400261988603799 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44760 interne); stringhe deallocate: 0 (44680 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869940524268e-314 0 0.4409053369526328 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 -1520483334 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3807615687230741


ris (2 : 2): [ 1 0.3807615687230741 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44780 interne); stringhe deallocate: 0 (44700 interne)


Stringhe allocate: 1 (44780 interne); stringhe deallocate: 0 (44705 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4400261988603799 0.07242823248482821 0.820787767583454 0.5599738011396201 0.3807615687230741 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8120075929910335 0.4300681511337469 0.92269257331149 0.8259568760784293 0.8573974493319709 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4400260469661141 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4395842458471154


ris (2 : 2): [ 1 0.4395842458471154 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44815 interne); stringhe deallocate: 0 (44735 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9272965038061476


ris (2 : 2): [ -1 0.9272965038061476 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44835 interne); stringhe deallocate: 0 (44755 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.820296330255366


ris (2 : 2): [ 1 0.820296330255366 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44855 interne); stringhe deallocate: 0 (44775 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9272961657497936 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4395842458471154


ris (2 : 2): [ -1 0.4395842458471154 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44875 interne); stringhe deallocate: 0 (44795 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161449723268464e-314 0 0.440410141563806 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 -168819962 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3807120844082506


ris (2 : 2): [ 1 0.3807120844082506 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44895 interne); stringhe deallocate: 0 (44815 interne)


Stringhe allocate: 1 (44895 interne); stringhe deallocate: 0 (44820 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4395842458471154 0.07270349619385241 0.820296330255366 0.5604157541528846 0.3807120844082506 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8118592221019323 0.4302372825800718 0.9224805802198306 0.8261316813133319 0.8573860537383586 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4395840189192013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4395232342005232


ris (2 : 2): [ 1 0.4395232342005232 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44930 interne); stringhe deallocate: 0 (44850 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9272584331228169


ris (2 : 2): [ -1 0.9272584331228169 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44950 interne); stringhe deallocate: 0 (44870 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8202284358752402


ris (2 : 2): [ 1 0.8202284358752402 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44970 interne); stringhe deallocate: 0 (44890 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9272580189200932 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4395232342005232


ris (2 : 2): [ -1 0.4395232342005232 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44990 interne); stringhe deallocate: 0 (44910 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870098625275e-314 0 0.4403417154316145 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 254692382 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.380705201674717


ris (2 : 2): [ 1 0.380705201674717 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45010 interne); stringhe deallocate: 0 (44930 interne)


Stringhe allocate: 1 (45010 interne); stringhe deallocate: 0 (44935 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4395232342005232 0.07274156687718314 0.8202284358752402 0.5604767657994768 0.380705201674717 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.811838739489576 0.4302606745112389 0.9224512923763428 0.8261558131891066 0.8573844687344121 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4395232244953364 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4399236268250858


ris (2 : 2): [ 1 0.4399236268250858 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45045 interne); stringhe deallocate: 0 (44965 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9275085245068093


ris (2 : 2): [ -1 0.9275085245068093 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45065 interne); stringhe deallocate: 0 (44985 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8206742416219172


ris (2 : 2): [ 1 0.8206742416219172 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45085 interne); stringhe deallocate: 0 (45005 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9275083630533398 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4399236268250858


ris (2 : 2): [ -1 0.4399236268250858 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45105 interne); stringhe deallocate: 0 (45025 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869798233362e-314 0 0.440790419197568 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 1836901526 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3807506147968314


ris (2 : 2): [ 1 0.3807506147968314 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45125 interne); stringhe deallocate: 0 (45045 interne)


Stringhe allocate: 1 (45125 interne); stringhe deallocate: 0 (45050 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4399236268250858 0.07249147549319068 0.8206742416219172 0.5600763731749142 0.3807506147968314 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8119731578732342 0.4301070098031741 0.9226436012082446 0.8259974462933297 0.8573949267853344 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4399235269771173 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4395254806324496


ris (2 : 2): [ 1 0.4395254806324496 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45160 interne); stringhe deallocate: 0 (45080 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9272579297901885


ris (2 : 2): [ -1 0.9272579297901885 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45180 interne); stringhe deallocate: 0 (45100 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8202293376977357


ris (2 : 2): [ 1 0.8202293376977357 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45200 interne); stringhe deallocate: 0 (45120 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9272575420828986 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4395254806324496


ris (2 : 2): [ -1 0.4395254806324496 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45220 interne); stringhe deallocate: 0 (45140 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161448569131115e-314 0 0.4403440996172936 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 2068106664 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3807038570652861


ris (2 : 2): [ 1 0.3807038570652861 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45240 interne); stringhe deallocate: 0 (45160 interne)


Stringhe allocate: 1 (45240 interne); stringhe deallocate: 0 (45165 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4395254806324496 0.07274207020981149 0.8202293376977357 0.5604745193675504 0.3807038570652861 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8118394936536889 0.4302609837760371 0.9224516813987633 0.8261549246601254 0.8573841590883617 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4395253679500009 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4395254806324496


ris (2 : 2): [ 1 0.4395254806324496 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45275 interne); stringhe deallocate: 0 (45195 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9272579297901885


ris (2 : 2): [ -1 0.9272579297901885 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45295 interne); stringhe deallocate: 0 (45215 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8202293376977357


ris (2 : 2): [ 1 0.8202293376977357 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45315 interne); stringhe deallocate: 0 (45235 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9272575419398628 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4395254806324496


ris (2 : 2): [ -1 0.4395254806324496 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45335 interne); stringhe deallocate: 0 (45255 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870043289923e-314 0 0.4403440996175272 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 2068106664 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3807038570652861


ris (2 : 2): [ 1 0.3807038570652861 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45355 interne); stringhe deallocate: 0 (45275 interne)


Stringhe allocate: 1 (45355 interne); stringhe deallocate: 0 (45280 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4395254806324496 0.07274207020981149 0.8202293376977357 0.5604745193675504 0.3807038570652861 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8118394936536889 0.4302609837760371 0.9224516813987633 0.8261549246601254 0.8573841590883617 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4395253679487423 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4393323831763205


ris (2 : 2): [ 1 0.4393323831763205 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45390 interne); stringhe deallocate: 0 (45310 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9271333474223902


ris (2 : 2): [ -1 0.9271333474223902 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45410 interne); stringhe deallocate: 0 (45330 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8200110278298649


ris (2 : 2): [ 1 0.8200110278298649 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45430 interne); stringhe deallocate: 0 (45350 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9271330874416881 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4393323831763205


ris (2 : 2): [ -1 0.4393323831763205 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45450 interne); stringhe deallocate: 0 (45370 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870557118195e-314 0 0.4401273771288521 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 -1837876749 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3806786446535445


ris (2 : 2): [ 1 0.3806786446535445 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45470 interne); stringhe deallocate: 0 (45390 interne)


Stringhe allocate: 1 (45470 interne); stringhe deallocate: 0 (45395 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4393323831763205 0.07286665257760983 0.8200110278298649 0.5606676168236795 0.3806786446535445 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8117746676645246 0.4303375314478206 0.9223575082841371 0.8262313003045144 0.8573783529981043 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4393322512134761 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4392421571080503


ris (2 : 2): [ 1 0.4392421571080503 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45505 interne); stringhe deallocate: 0 (45425 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9270719430036999


ris (2 : 2): [ -1 0.9270719430036999 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45525 interne); stringhe deallocate: 0 (45445 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8199063658788436


ris (2 : 2): [ 1 0.8199063658788436 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45545 interne); stringhe deallocate: 0 (45465 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9270715755912358 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4392421571080503


ris (2 : 2): [ -1 0.4392421571080503 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45565 interne); stringhe deallocate: 0 (45485 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869940524268e-314 0 0.440026049232757 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 586378673 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3806642087707933


ris (2 : 2): [ 1 0.3806642087707933 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45585 interne); stringhe deallocate: 0 (45505 interne)


Stringhe allocate: 1 (45585 interne); stringhe deallocate: 0 (45510 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4392421571080503 0.07292805699630012 0.8199063658788436 0.5607578428919497 0.3806642087707933 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8117443772907347 0.4303752604248101 0.922312359881059 0.8262669873313815 0.8573750286022053 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4392421266780451 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.438848914108703


ris (2 : 2): [ 1 0.438848914108703 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45620 interne); stringhe deallocate: 0 (45540 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9268036684344774


ris (2 : 2): [ -1 0.9268036684344774 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45640 interne); stringhe deallocate: 0 (45560 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8194496749364653


ris (2 : 2): [ 1 0.8194496749364653 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45660 interne); stringhe deallocate: 0 (45580 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9268035977335156 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.438848914108703


ris (2 : 2): [ -1 0.438848914108703 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45680 interne); stringhe deallocate: 0 (45600 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161449723268464e-314 0 0.4395840211872519 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 -1048651530 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3806007608277623


ris (2 : 2): [ 1 0.3806007608277623 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45700 interne); stringhe deallocate: 0 (45620 interne)


Stringhe allocate: 1 (45700 interne); stringhe deallocate: 0 (45625 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.438848914108703 0.07319633156552263 0.8194496749364653 0.561151085891297 0.3806007608277623 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8116123591537499 0.4305400975043715 0.9221153554630506 0.8264225263430221 0.8573604173667685 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4388487360225106 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4387946302260205


ris (2 : 2): [ 1 0.4387946302260205 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45735 interne); stringhe deallocate: 0 (45655 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9267665674746354


ris (2 : 2): [ -1 0.9267665674746354 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45755 interne); stringhe deallocate: 0 (45675 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8193865824382327


ris (2 : 2): [ 1 0.8193865824382327 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45775 interne); stringhe deallocate: 0 (45695 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9267663998099494 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4387946302260205


ris (2 : 2): [ -1 0.4387946302260205 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45795 interne); stringhe deallocate: 0 (45715 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870098625275e-314 0 0.4395232244495482 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 312396674 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3805919522122122


ris (2 : 2): [ 1 0.3805919522122122 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45815 interne); stringhe deallocate: 0 (45735 interne)


Stringhe allocate: 1 (45815 interne); stringhe deallocate: 0 (45740 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4387946302260205 0.07323343252536463 0.8193865824382327 0.5612053697739795 0.3805919522122122 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8115941351622944 0.4305628936042292 0.9220881390246638 0.8264439971930422 0.8573583888572609 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.438794615003796 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4391508595646889


ris (2 : 2): [ 1 0.4391508595646889 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45850 interne); stringhe deallocate: 0 (45770 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9270102802097717


ris (2 : 2): [ -1 0.9270102802097717 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45870 interne); stringhe deallocate: 0 (45790 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8198008511430377


ris (2 : 2): [ 1 0.8198008511430377 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45890 interne); stringhe deallocate: 0 (45810 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9270100634547553 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4391508595646889


ris (2 : 2): [ -1 0.4391508595646889 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45910 interne); stringhe deallocate: 0 (45830 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869798233362e-314 0 0.4399235292438704 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 888523991 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3806499915783488


ris (2 : 2): [ 1 0.3806499915783488 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45930 interne); stringhe deallocate: 0 (45850 interne)


Stringhe allocate: 1 (45930 interne); stringhe deallocate: 0 (45855 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4391508595646889 0.07298971979022828 0.8198008511430377 0.5608491404353111 0.3806499915783488 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8117137272051492 0.4304131481563912 0.9222668436091345 0.8263030981577235 0.8573717545678373 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4391508146747798 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4387967194824537


ris (2 : 2): [ 1 0.4387967194824537 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45965 interne); stringhe deallocate: 0 (45885 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.926766151669475


ris (2 : 2): [ -1 0.926766151669475 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45985 interne); stringhe deallocate: 0 (45905 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8193874669877507


ris (2 : 2): [ 1 0.8193874669877507 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46005 interne); stringhe deallocate: 0 (45925 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9267659228298717 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4387967194824537


ris (2 : 2): [ -1 0.4387967194824537 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46025 interne); stringhe deallocate: 0 (45945 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161448569131115e-314 0 0.4395253702168551 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 -705611014 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.380590747505297


ris (2 : 2): [ 1 0.380590747505297 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46045 interne); stringhe deallocate: 0 (45965 interne)


Stringhe allocate: 1 (46045 interne); stringhe deallocate: 0 (45970 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4387967194824537 0.07323384833052504 0.8193874669877507 0.5612032805175463 0.380590747505297 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8115948365600114 0.4305631490891546 0.9220885205959779 0.8264431708315272 0.8573581114289389 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4387965223537043 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4387967194824537


ris (2 : 2): [ 1 0.4387967194824537 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46080 interne); stringhe deallocate: 0 (46000 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.926766151669475


ris (2 : 2): [ -1 0.926766151669475 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46100 interne); stringhe deallocate: 0 (46020 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8193874669877507


ris (2 : 2): [ 1 0.8193874669877507 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46120 interne); stringhe deallocate: 0 (46040 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9267659229728276 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4387967194824537


ris (2 : 2): [ -1 0.4387967194824537 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46140 interne); stringhe deallocate: 0 (46060 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870043289923e-314 0 0.4395253702166588 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 -705611014 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.380590747505297


ris (2 : 2): [ 1 0.380590747505297 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46160 interne); stringhe deallocate: 0 (46080 interne)


Stringhe allocate: 1 (46160 interne); stringhe deallocate: 0 (46085 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4387967194824537 0.07323384833052504 0.8193874669877507 0.5612032805175463 0.380590747505297 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8115948365600114 0.4305631490891546 0.9220885205959779 0.8264431708315272 0.8573581114289389 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4387965223536874 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4386251093537605


ris (2 : 2): [ 1 0.4386251093537605 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46195 interne); stringhe deallocate: 0 (46115 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9266449031805573


ris (2 : 2): [ -1 0.9266449031805573 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46215 interne); stringhe deallocate: 0 (46135 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8191846970542318


ris (2 : 2): [ 1 0.8191846970542318 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46235 interne); stringhe deallocate: 0 (46155 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.926644810959834 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4386251093537605


ris (2 : 2): [ -1 0.4386251093537605 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46255 interne); stringhe deallocate: 0 (46175 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870557118195e-314 0 0.4393322511678202 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 217595564 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3805595877004713


ris (2 : 2): [ 1 0.3805595877004713 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46275 interne); stringhe deallocate: 0 (46195 interne)


Stringhe allocate: 1 (46275 interne); stringhe deallocate: 0 (46200 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4386251093537605 0.07335509681944274 0.8191846970542318 0.5613748906462395 0.3805595877004713 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8115372242197654 0.4306376483116204 0.9220010509988484 0.826511047614709 0.8573509357314659 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4386250993940548 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4385450750804966


ris (2 : 2): [ 1 0.4385450750804966 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46310 interne); stringhe deallocate: 0 (46230 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9265852639634472


ris (2 : 2): [ -1 0.9265852639634472 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46330 interne); stringhe deallocate: 0 (46250 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8190875613323566


ris (2 : 2): [ 1 0.8190875613323566 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46350 interne); stringhe deallocate: 0 (46270 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9265852016898322 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4385450750804966


ris (2 : 2): [ -1 0.4385450750804966 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46370 interne); stringhe deallocate: 0 (46290 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869940524268e-314 0 0.439242128944648 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 1557314026 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3805424862518601


ris (2 : 2): [ 1 0.3805424862518601 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46390 interne); stringhe deallocate: 0 (46310 interne)


Stringhe allocate: 1 (46390 interne); stringhe deallocate: 0 (46315 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4385450750804966 0.0734147360365528 0.8190875613323566 0.5614549249195034 0.3805424862518601 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8115103553990393 0.4306742926883284 0.9219591492123663 0.8265427034910539 0.8573469974904446 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4385449930652827 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4381962829935392


ris (2 : 2): [ 1 0.4381962829935392 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46425 interne); stringhe deallocate: 0 (46345 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9263247253709375


ris (2 : 2): [ -1 0.9263247253709375 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46445 interne); stringhe deallocate: 0 (46365 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8186637258039627


ris (2 : 2): [ 1 0.8186637258039627 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46465 interne); stringhe deallocate: 0 (46385 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9263243716212593 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4381962829935392


ris (2 : 2): [ -1 0.4381962829935392 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46485 interne); stringhe deallocate: 0 (46405 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161449723268464e-314 0 0.4388487382891535 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 1814816670 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3804674428104236


ris (2 : 2): [ 1 0.3804674428104236 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46505 interne); stringhe deallocate: 0 (46425 interne)


Stringhe allocate: 1 (46505 interne); stringhe deallocate: 0 (46430 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4381962829935392 0.07367527462906254 0.8186637258039627 0.5618037170064608 0.3804674428104236 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8113932601637991 0.4308343765189605 0.9217763177527194 0.8266806608776149 0.857329715962653 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4381961843715265 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4381481384053995


ris (2 : 2): [ 1 0.4381481384053995 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46540 interne); stringhe deallocate: 0 (46460 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9262886969651645


ris (2 : 2): [ -1 0.9262886969651645 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46560 interne); stringhe deallocate: 0 (46480 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8186051737330138


ris (2 : 2): [ 1 0.8186051737330138 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46580 interne); stringhe deallocate: 0 (46500 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9262886088345104 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4381481384053995


ris (2 : 2): [ -1 0.4381481384053995 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46600 interne); stringhe deallocate: 0 (46520 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870098625275e-314 0 0.4387946172718467 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 2102413639 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3804570353276143


ris (2 : 2): [ 1 0.3804570353276143 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46620 interne); stringhe deallocate: 0 (46540 interne)


Stringhe allocate: 1 (46620 interne); stringhe deallocate: 0 (46545 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4381481384053995 0.07371130303483553 0.8186051737330138 0.5618518615946004 0.3804570353276143 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8113770972344078 0.4308565136048799 0.9217510599348165 0.8266997034585827 0.8573273192548266 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4381480238185311 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.438464067993168


ris (2 : 2): [ 1 0.438464067993168 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46655 interne); stringhe deallocate: 0 (46575 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9265253566832176


ris (2 : 2): [ -1 0.9265253566832176 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46675 interne); stringhe deallocate: 0 (46595 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8189896232524929


ris (2 : 2): [ 1 0.8189896232524929 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46695 interne); stringhe deallocate: 0 (46615 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.926525120207935 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.438464067993168


ris (2 : 2): [ -1 0.438464067993168 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46715 interne); stringhe deallocate: 0 (46635 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869798233362e-314 0 0.4391508146289915 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 -1742725860 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.380525555259325


ris (2 : 2): [ 1 0.380525555259325 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46735 interne); stringhe deallocate: 0 (46655 interne)


Stringhe allocate: 1 (46735 interne); stringhe deallocate: 0 (46660 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.438464067993168 0.07347464331678244 0.8189896232524929 0.5615359320068321 0.380525555259325 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8114831599886456 0.430711101772194 0.9219169013098265 0.8265747441435764 0.8573430985032389 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4384639284345822 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4381500789953022


ris (2 : 2): [ 1 0.4381500789953022 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46770 interne); stringhe deallocate: 0 (46690 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9262883592580805


ris (2 : 2): [ -1 0.9262883592580805 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46790 interne); stringhe deallocate: 0 (46710 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8186060376453115


ris (2 : 2): [ 1 0.8186060376453115 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46810 interne); stringhe deallocate: 0 (46730 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.926288136765498 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4381500789953022


ris (2 : 2): [ -1 0.4381500789953022 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46830 interne); stringhe deallocate: 0 (46750 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161448569131115e-314 0 0.4387965246204573 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 -1593732174 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3804559586500093


ris (2 : 2): [ 1 0.3804559586500093 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46850 interne); stringhe deallocate: 0 (46770 interne)


Stringhe allocate: 1 (46850 interne); stringhe deallocate: 0 (46775 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4381500789953022 0.07371164074191949 0.8186060376453115 0.5618499210046978 0.3804559586500093 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8113777487223275 0.4308567211036736 0.9217514326037785 0.8266989358989925 0.8573270713099883 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4381499334797114 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4381500789953022


ris (2 : 2): [ 1 0.4381500789953022 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46885 interne); stringhe deallocate: 0 (46805 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9262883592580805


ris (2 : 2): [ -1 0.9262883592580805 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46905 interne); stringhe deallocate: 0 (46825 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8186060376453115


ris (2 : 2): [ 1 0.8186060376453115 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46925 interne); stringhe deallocate: 0 (46845 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9262881321402716 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4381500789953022


ris (2 : 2): [ -1 0.4381500789953022 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46945 interne); stringhe deallocate: 0 (46865 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870043289923e-314 0 0.4387965246205416 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 -1593732174 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3804559586500093


ris (2 : 2): [ 1 0.3804559586500093 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46965 interne); stringhe deallocate: 0 (46885 interne)


Stringhe allocate: 1 (46965 interne); stringhe deallocate: 0 (46890 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4381500789953022 0.07371164074191949 0.8186060376453115 0.5618499210046978 0.3804559586500093 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8113777487223275 0.4308567211036736 0.9217514326037785 0.8266989358989925 0.8573270713099883 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4381499311671808 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4379980654669542


ris (2 : 2): [ 1 0.4379980654669542 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47000 interne); stringhe deallocate: 0 (46920 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9261707579567976


ris (2 : 2): [ -1 0.9261707579567976 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47020 interne); stringhe deallocate: 0 (46940 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8184179522898003


ris (2 : 2): [ 1 0.8184179522898003 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47040 interne); stringhe deallocate: 0 (46960 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9261703532191596 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4379980654669542


ris (2 : 2): [ -1 0.4379980654669542 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47060 interne); stringhe deallocate: 0 (46980 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870557118195e-314 0 0.4386251016619713 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 163124180 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3804198868228461


ris (2 : 2): [ 1 0.3804198868228461 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47080 interne); stringhe deallocate: 0 (47000 interne)


Stringhe allocate: 1 (47080 interne); stringhe deallocate: 0 (47005 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4379980654669542 0.0738292420432024 0.8184179522898003 0.5620019345330458 0.3804198868228461 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8113267152828454 0.4309289793691971 0.9216702975459965 0.8267590616583689 0.8573187644377063 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4379980585322763 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4379273174451321


ris (2 : 2): [ 1 0.4379273174451321 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47115 interne); stringhe deallocate: 0 (47035 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9261130206994547


ris (2 : 2): [ -1 0.9261130206994547 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47135 interne); stringhe deallocate: 0 (47055 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8183279215768337


ris (2 : 2): [ 1 0.8183279215768337 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47155 interne); stringhe deallocate: 0 (47075 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9261126559231334 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4379273174451321


ris (2 : 2): [ -1 0.4379273174451321 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47175 interne); stringhe deallocate: 0 (47095 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869940524268e-314 0 0.4385449930196268 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 1285352231 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3804006041317016


ris (2 : 2): [ 1 0.3804006041317016 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47195 interne); stringhe deallocate: 0 (47115 interne)


Stringhe allocate: 1 (47195 interne); stringhe deallocate: 0 (47120 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4379273174451321 0.07388697930054533 0.8183279215768337 0.5620726825548679 0.3804006041317016 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8113029640093279 0.4309644551167116 0.921631460672818 0.8267870445529354 0.8573143238849207 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4379272482130245 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4376190250310006


ris (2 : 2): [ 1 0.4376190250310006 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47230 interne); stringhe deallocate: 0 (47150 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9258608121045169


ris (2 : 2): [ -1 0.9258608121045169 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47250 interne); stringhe deallocate: 0 (47170 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8179351013184578


ris (2 : 2): [ 1 0.8179351013184578 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47270 interne); stringhe deallocate: 0 (47190 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9258604092093998 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4376190250310006


ris (2 : 2): [ -1 0.4376190250310006 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47290 interne); stringhe deallocate: 0 (47210 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161449723268464e-314 0 0.4381961866381294 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 975660344 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3803160762874572


ris (2 : 2): [ 1 0.3803160762874572 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47310 interne); stringhe deallocate: 0 (47230 interne)


Stringhe allocate: 1 (47310 interne); stringhe deallocate: 0 (47235 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4376190250310006 0.07413918789548313 0.8179351013184578 0.5623809749689994 0.3803160762874572 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8111994651797805 0.4311194207116627 0.9214620083819969 0.8269089831442641 0.8572948582226121 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4376189753040523 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4375764738214444


ris (2 : 2): [ 1 0.4375764738214444 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47345 interne); stringhe deallocate: 0 (47265 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9258259379970372


ris (2 : 2): [ -1 0.9258259379970372 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47365 interne); stringhe deallocate: 0 (47285 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8178808352613876


ris (2 : 2): [ 1 0.8178808352613876 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47385 interne); stringhe deallocate: 0 (47305 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.925825604722041 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4375764738214444


ris (2 : 2): [ -1 0.4375764738214444 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47405 interne); stringhe deallocate: 0 (47325 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870098625275e-314 0 0.438148026085174 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 -1054606974 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3803043614399432


ris (2 : 2): [ 1 0.3803043614399432 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47425 interne); stringhe deallocate: 0 (47345 interne)


Stringhe allocate: 1 (47425 interne); stringhe deallocate: 0 (47350 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4375764738214444 0.07417406200296284 0.8178808352613876 0.5624235261785556 0.3803043614399432 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8111851800394947 0.4311408485571939 0.9214385994373503 0.826925813381775 0.857292160445711 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4375762960658625 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4378556877767008


ris (2 : 2): [ 1 0.4378556877767008 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47460 interne); stringhe deallocate: 0 (47380 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9260550087482111


ris (2 : 2): [ -1 0.9260550087482111 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47480 interne); stringhe deallocate: 0 (47400 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8182371370943286


ris (2 : 2): [ 1 0.8182371370943286 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47500 interne); stringhe deallocate: 0 (47420 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9260549587699103 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4378556877767008


ris (2 : 2): [ -1 0.4378556877767008 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47520 interne); stringhe deallocate: 0 (47440 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869798233362e-314 0 0.4384639307026328 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 -589851192 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3803814493176277


ris (2 : 2): [ 1 0.3803814493176277 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47540 interne); stringhe deallocate: 0 (47460 interne)


Stringhe allocate: 1 (47540 interne); stringhe deallocate: 0 (47465 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4378556877767008 0.07394499125178888 0.8182371370943286 0.5621443122232992 0.3803814493176277 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8112789167525558 0.4310000996455626 0.9215922986433567 0.8268153761643066 0.85730991278056 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4378554842219735 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4375782740164473


ris (2 : 2): [ 1 0.4375782740164473 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47575 interne); stringhe deallocate: 0 (47495 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9258256697578604


ris (2 : 2): [ -1 0.9258256697578604 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47595 interne); stringhe deallocate: 0 (47515 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8178816757832013


ris (2 : 2): [ 1 0.8178816757832013 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47615 interne); stringhe deallocate: 0 (47535 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9258255999537788 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4375782740164473


ris (2 : 2): [ -1 0.4375782740164473 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47635 interne); stringhe deallocate: 0 (47555 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161448569131115e-314 0 0.4381499334339232 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 1310052132 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3803034017667539


ris (2 : 2): [ 1 0.3803034017667539 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47655 interne); stringhe deallocate: 0 (47575 interne)


Stringhe allocate: 1 (47655 interne); stringhe deallocate: 0 (47580 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4375782740164473 0.0741743302421396 0.8178816757832013 0.5624217259835527 0.3803034017667539 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8111857843945396 0.4311410133725271 0.9214389620162748 0.8269251013524395 0.8572919394454667 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4375782034132199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4375782740164473


ris (2 : 2): [ 1 0.4375782740164473 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47690 interne); stringhe deallocate: 0 (47610 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9258256697578604


ris (2 : 2): [ -1 0.9258256697578604 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47710 interne); stringhe deallocate: 0 (47630 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8178816757832013


ris (2 : 2): [ 1 0.8178816757832013 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47730 interne); stringhe deallocate: 0 (47650 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9258255999538951 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4375782740164473


ris (2 : 2): [ -1 0.4375782740164473 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47750 interne); stringhe deallocate: 0 (47670 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870043289923e-314 0 0.4381499334339338 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 1310052132 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3803034017667539


ris (2 : 2): [ 1 0.3803034017667539 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47770 interne); stringhe deallocate: 0 (47690 interne)


Stringhe allocate: 1 (47770 interne); stringhe deallocate: 0 (47695 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4375782740164473 0.0741743302421396 0.8178816757832013 0.5624217259835527 0.3803034017667539 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8111857843945396 0.4311410133725271 0.9214389620162748 0.8269251013524395 0.8572919394454667 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4375782057270259 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4374441038964672


ris (2 : 2): [ 1 0.4374441038964672 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47805 interne); stringhe deallocate: 0 (47725 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054824751772e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9257119622686135


ris (2 : 2): [ -1 0.9257119622686135 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47825 interne); stringhe deallocate: 0 (47745 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8177074438002632


ris (2 : 2): [ 1 0.8177074438002632 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47845 interne); stringhe deallocate: 0 (47765 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9257116360160405 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4374441038964672


ris (2 : 2): [ -1 0.4374441038964672 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47865 interne); stringhe deallocate: 0 (47785 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870557118195e-314 0 0.4379980607991305 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 -1912336904 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.380263339903796


ris (2 : 2): [ 1 0.380263339903796 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47885 interne); stringhe deallocate: 0 (47805 interne)


Stringhe allocate: 1 (47885 interne); stringhe deallocate: 0 (47810 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4374441038964672 0.07428803773138648 0.8177074438002632 0.5625558961035329 0.380263339903796 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8111407412804645 0.4312108791466333 0.9213638029377558 0.8269781695262862 0.8572827137198757 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4374439737544611 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4373818030858871


ris (2 : 2): [ 1 0.4373818030858871 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47920 interne); stringhe deallocate: 0 (47840 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826793665e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9256562326354338


ris (2 : 2): [ -1 0.9256562326354338 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47940 interne); stringhe deallocate: 0 (47860 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8176241095960761


ris (2 : 2): [ 1 0.8176241095960761 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47960 interne); stringhe deallocate: 0 (47880 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9256558506937207 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200776 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4373818030858871


ris (2 : 2): [ -1 0.4373818030858871 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47980 interne); stringhe deallocate: 0 (47900 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869940524268e-314 0 0.4379272504809411 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 1057465396 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.380242306510189


ris (2 : 2): [ 1 0.380242306510189 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48000 interne); stringhe deallocate: 0 (47920 interne)


Stringhe allocate: 1 (48000 interne); stringhe deallocate: 0 (47925 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4373818030858871 0.07434376736456616 0.8176241095960761 0.5626181969141129 0.380242306510189 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8111198258745729 0.4312451213411319 0.9213278547617079 0.8270028113038083 0.8572778700031003 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4373817465052987 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4371103494137587


ris (2 : 2): [ 1 0.4371103494137587 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48035 interne); stringhe deallocate: 0 (47955 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826750826e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9254128125628607


ris (2 : 2): [ -1 0.9254128125628607 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48055 interne); stringhe deallocate: 0 (47975 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636745842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8172605201858314


ris (2 : 2): [ 1 0.8172605201858314 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48075 interne); stringhe deallocate: 0 (47995 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9254126591178107 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79860784 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4371103494137587


ris (2 : 2): [ -1 0.4371103494137587 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48095 interne); stringhe deallocate: 0 (48015 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161449723268464e-314 0 0.4376189752583963 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79854304 -1074790400 -1344378340 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3801501707720727


ris (2 : 2): [ 1 0.3801501707720727 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48115 interne); stringhe deallocate: 0 (48035 interne)


Stringhe allocate: 1 (48115 interne); stringhe deallocate: 0 (48040 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4371103494137587 0.07458718743713932 0.8172605201858314 0.5628896505862413 0.3801501707720727 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8110286944160814 0.4313946869670721 0.921171011887211 0.8271101791042247 0.857256652341858 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4371101877424435 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4370728857922793


ris (2 : 2): [ 1 0.4370728857922793 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48150 interne); stringhe deallocate: 0 (48070 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.4560548926622e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9253791558026144


ris (2 : 2): [ -1 0.9253791558026144 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48170 interne); stringhe deallocate: 0 (48090 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543683021963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8172102934453654


ris (2 : 2): [ 1 0.8172102934453654 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48190 interne); stringhe deallocate: 0 (48110 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9253788035365425 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 38200448 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4370728857922793


ris (2 : 2): [ -1 0.4370728857922793 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48210 interne); stringhe deallocate: 0 (48130 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140870098625275e-314 0 0.4375762983324654 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206256 -1074790400 -1919119806 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3801374076530861


ris (2 : 2): [ 1 0.3801374076530861 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48230 interne); stringhe deallocate: 0 (48150 interne)


Stringhe allocate: 1 (48230 interne); stringhe deallocate: 0 (48155 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4370728857922793 0.07462084419738557 0.8172102934453654 0.5629271142077207 0.3801374076530861 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8110161172627166 0.4314153668327879 0.9211493453971282 0.8271249970530936 0.8572537131616812 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4370727583393306 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4373187047613742


ris (2 : 2): [ 1 0.4373187047613742 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48265 interne); stringhe deallocate: 0 (48185 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826798219e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9256002243541205


ris (2 : 2): [ -1 0.9256002243541205 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48285 interne); stringhe deallocate: 0 (48205 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8175400683132935


ris (2 : 2): [ 1 0.8175400683132935 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48305 interne); stringhe deallocate: 0 (48225 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9256000559780651 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36912096 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4373187047613742


ris (2 : 2): [ -1 0.4373187047613742 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48325 interne); stringhe deallocate: 0 (48245 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.140869798233362e-314 0 0.4378554864886164 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79865800 -1074790400 -1749531517 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.3802213635519193


ris (2 : 2): [ 1 0.3802213635519193 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48345 interne); stringhe deallocate: 0 (48265 interne)


Stringhe allocate: 1 (48345 interne); stringhe deallocate: 0 (48270 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4373187047613742 0.07439977564587952 0.8175400683132935 0.5626812952386258 0.3802213635519193 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8110986427301484 0.4312795347465833 0.9212916015706175 0.8270277685212215 0.857273047112406 ]
------------------------------ Fine f_aux8_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4373185655818537 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36910928 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4370745536077475


ris (2 : 2): [ 1 0.4370745536077475 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48380 interne); stringhe deallocate: 0 (48300 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054826791831e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9253789491461342


ris (2 : 2): [ -1 0.9253789491461342 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48400 interne); stringhe deallocate: 0 (48320 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543636771013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8172111083658075


ris (2 : 2): [ 1 0.8172111083658075 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48420 interne); stringhe deallocate: 0 (48340 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9253788036796147 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 36913144 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.4370745536077475


ris (2 : 2): [ -1 0.4370745536077475 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48440 interne); stringhe deallocate: 0 (48360 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
st = 1
end = 3


r (3 : 3): [ -2 1 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161448569131115e-314 0 0.4375782056812705 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 38206616 -1074790400 -1939198394 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.38013655475806


ris (2 : 2): [ 1 0.38013655475806 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48460 interne); stringhe deallocate: 0 (48380 interne)


Stringhe allocate: 1 (48460 interne); stringhe deallocate: 0 (48385 interne)

26: f_aux8_d	ris <- a * (1 - b) + b
ris (5 : 5): [ 0.4370745536077475 0.07462105085386583 0.8172111083658075 0.5629254463922525 0.38013655475806 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8110166771757763 0.4314154938096041 0.9211496969322968 0.8271243373837035 0.857253516751058 ]
------------------------------ Fine f_aux8_d


Stringhe allocate: 1 (48465 interne); stringhe deallocate: 0 (48405 interne)

119: moltiplica1_mv_d	m <- m * v
ris (5 x 51 : 5 x 51): [
	 0.8988629876690203 0.9037710292562993 0.9073398045131625 0.9097401352234277 0.9111256212130685 0.9116341756985152 0.911389430785329 0.9105020249702354 0.9090707825511957 0.9071837940435029 0.9049194058545701 0.9023471267177362 0.8995284577142129 0.8965176521120075 0.8933624107124583 0.8901045179112689 0.8867804232450508 0.8834217728006529 0.8800558945080552 0.8767062410140329 0.8733927935394621 0.8701324298547948 0.866939259263098 0.8638249272556612 0.8607988922994152 0.8578686770263981 0.8550400959216161 0.8523174614454501 0.849703770378976 0.8472008720440919 0.84480961992418 0.8425300080943026 0.8403612937618468 0.8383021071184034 0.8363505496108448 0.8345042816535058 0.8327606007235443 0.8311165107075064 0.8295687832984219 0.8281140121790226 0.8267486606675542 0.8254691034478212 0.8242716629542648 0.8231526409357444 0.8221083456780326 0.8211351153245879 0.8202293376977357 0.8193874669877507 0.8186060376453115 0.8178816757832013 0.8172111083658075
	 0.86013003877782 0.8338013556744175 0.8086341313065428 0.7846210504279981 0.7617493907071249 0.7400017250653225 0.7193565738368754 0.6997890074280203 0.6812712004516131 0.6637729387891791 0.6472620813618819 0.6317049786341753 0.6170668500432174 0.6033121226560237 0.5904047334155217 0.5783083973552781 0.5669868441484958 0.5564040253165211 0.5465242943611824 0.5373125620085233 0.5287344286628812 0.520756296073132 0.5133454601100458 0.5064701864473911 0.5000997708315625 0.4942045855166469 0.4887561133352182 0.4837269707707668 0.4790909212962813 0.4748228801457284 0.4708989115914329 0.4672962197109837 0.4639931335424649 0.4609690874466669 0.4582045974195004 0.4556812340271128 0.45338159257011 0.4512892610217309 0.4493887862276584 0.4476656388022337 0.446106177106988 0.4446976106524386 0.4434279632228153 0.442286035985593 0.4412613708132119 0.4403442140129549 0.4395254806324496 0.4387967194824537 0.4381500789953022 0.4375782740164473 0.4370745536077475
	 0.7529666664997292 0.7731111118617755 0.7914504831878974 0.8081094168110936 0.8232071535418832 0.8368573717479825 0.849168099644234 0.8602416932517977 0.8701748688590212 0.8790587802235464 0.886979132084427 0.8940163227174746 0.9002456092866394 0.905737290636449 0.9105569029507368 0.9147654243845994 0.9184194853715869 0.9215715818269982 0.9242702889200177 0.9265604734803605 0.9284835034462268 0.9300774530559698 0.931377302741477 0.9324151329017298 0.9332203109246388 0.9338196709878247 0.9342376863078894 0.9344966336258186 0.934616749816102 0.934616380591217 0.9345121213433382 0.9343189502232769 0.9340503536043054 0.9337184441170559 0.9333340714723317 0.9329069263125064 0.9324456373501442 0.9319578620654175 0.9314503712425168 0.9309291276302241 0.9303993590136898 0.9298656259837252 0.9293318846870226 0.9288015448360185 0.9282775232509652 0.9277622931994307 0.9272579297901885 0.926766151669475 0.9262883592580805 0.9258256697578604 0.9253789491461342
	 0.6820456255132146 0.680450872314019 0.6799658728770738 0.6804428597681211 0.6817483698452688 0.6837620839561041 0.6863757511029894 0.6894921905492383 0.6930243664318888 0.6968945298300512 0.701033423653187 0.705379546079329 0.7098784685968309 0.7144822049911902 0.7191486278762137 0.7238409296008247 0.7285271245729139 0.7331795902329897 0.7377746440856059 0.7422921543578395 0.7467151820032837 0.7510296519086228 0.7552240512891346 0.7592891533804668 0.7632177646476265 0.7670044938390381 0.7706455413143587 0.7741385071700115 0.7774822167765256 0.7806765624271113 0.7837223598777758 0.7866212186359446 0.7893754249272319 0.7919878363389182 0.7944617872039953 0.7968010038515202 0.7990095289076139 0.8010916538868882 0.8030518593665199 0.8048947620847333 0.8066250683522198 0.8082475332091322 0.8097669248018458 0.8111879934927907 0.8125154452534329 0.813753918925009 0.8149079669640195 0.8159820393198299 0.8169804701201385 0.8179074668666153 0.8187671018678069
	 0.8224436778595854 0.818011594998494 0.8148317696509816 0.8127044534813889 0.8114563590061953 0.8109374435438291 0.8110180704821057 0.8115865022035622 0.8125466867894774 0.8138163046134045 0.8153250448601866 0.8170130854701652 0.8188297530658744 0.8207323421184658 0.8226850749960337 0.8246581866433637 0.8266271195053194 0.8285718159530421 0.8304760969288153 0.8323271168142313 0.834114885666876 0.8358318509804745 0.8374725320175787 0.8390332005558726 0.8405116025908903 0.8419067161598145 0.8432185410022818 0.8444479162628762 0.8455963628734315 0.8466659476377068 0.8476591663820465 0.8485788438382304 0.8494280481932119 0.8502100184787249 0.8509281031851871 0.8515857086720077 0.8521862561129552 0.8527331458630547 0.8532297282646514 0.8536792800266596 0.8540849854142673 0.8544499215779472 0.8547770474318358 0.8550691955635356 0.8553290667211937 0.855559226480228 0.8557621037421082 0.8559399907618851 0.8560950444403208 0.8562292886510888 0.8563446174040796
 ]
parm1[j][i] (5 : 5): [ 12.67431725 9.032985081 12.19219754 9.171903361 10.26385753 ]


ris (5 x 51 : 5 x 51): [
	 11.39247467 11.45468074615337 11.4999125359528 11.53033508887962 11.54789517785776 11.55434075874522 11.55123878407018 11.53999152124018 11.52185150075962 11.49793520976602 11.46923563548233 11.43663375364654 11.40090904847314 11.36274914309272 11.3227586125945 11.28146704566573 11.23933641529705 11.1967678140329 11.15410760472762 11.11165303366682 11.06965734918289 11.02833446549304 10.98786320838051 10.94839117649642 10.91003824945137 10.87289977147036 10.83704943718099 10.80254190407428 10.76941515430429 10.73769262676348 10.70738513877098 10.67849261523226 10.65100564175809 10.62490685696213 10.60017219797971 10.57677201215989 10.55467204687078 10.53383432841996 10.5142179402207 10.4957797095273 10.47847481131318 10.46225729717076 10.44708055646743 10.43289771639496 10.41966198699605 10.40732695673916 10.39584684373849 10.38517670727665 10.37527262388212 10.36609183183793 10.35759284765237
	 7.769541808 7.531715206324588 7.304380044079396 7.087470242754655 6.880870881718299 6.684424542429321 6.49793719938777 6.321183663945106 6.153912589794381 5.995851053254181 5.846708724438887 5.706181647595929 5.573955650420047 5.449709403138304 5.333117148694189 5.223851125527246 5.121583704316635 5.025989259692481 4.936745797368613 4.853536356456878 4.776050205922865 4.70398385326542 4.637041882573124 4.574937638150572 4.517393768933023 4.464142647933659 4.414926680004571 4.369498510249659 4.327621144511855 4.289067992473816 4.253622843064552 4.221079781057013 4.191243052975526 4.163926889707926 4.138955292535957 4.116161788658579 4.095389161685824 4.07648916202481 4.059322201563136 4.043757036576911 4.029670442349365 4.016946882579824 4.005478176289906 3.995163164592491 3.985907379377352 3.977622715683693 3.970227109272271 3.963644220676746 3.957803126803536 3.952638020960299 3.948087922023518
	 9.180318338999999 9.425923396187805 9.649520634155294 9.852629643695051 10.03670423232375 10.20313038915662 10.35322521552891 10.48823665627 10.60934389547278 10.71765829775692 10.81422479223109 10.90002361055584 10.97597230294037 11.04292796678398 11.10168963218599 11.15300075685897 11.19755179023553 11.23598277288504 11.26888594286573 11.29680832542849 11.32025428664767 11.33968803515846 11.35553605929647 11.36818948962324 11.37800637913342 11.38531389542137 11.39041042077834 11.39356755763099 11.39503203795067 11.39502753628794 11.39375638694243 11.39140120648762 11.38812642345054 11.3840797174166 11.37939337020315 11.3741855320363 11.36856140588416 11.36261435325764 11.3564269248951 11.35007181980756 11.34361277618429 11.33710539764934 11.33059791832468 11.32413191009791 11.31774293541771 11.31146114885086 11.30531185053343 11.29931599453984 11.29349065507701 11.28784945329064 11.28240294734728
	 6.255656565 6.241029642772333 6.236581274806532 6.240956152475682 6.252930164740092 6.271399755961355 6.295372058450409 6.323955739881811 6.356352515731537 6.391849280410761 6.429810814578003 6.469673029465652 6.510936712024806 6.553161737333388 6.595961717076383 6.638999055035169 6.681980382449975 6.724652347874561 6.766797737749347 6.808231905398599 6.848799487525644 6.888371388551358 6.926842014326851 6.964126737861148 7.000159580746472 7.034891094944378 7.068286430520831 7.100323575792151 7.130991757170346 7.160289986779148 7.188225746653823 7.214813799040936 7.240075112980882 7.264035897988042 7.286726736242391 7.308181805273932 7.32843818365877 7.347535232754199 7.365514047981083 7.382416973616261 7.39828717548658 7.413168266360799 7.427103979216684 7.440137883919373 7.452313143184373 7.463672304015212 7.474257121102967 7.484108408953182 7.493265919766259 7.501768244340905 7.509652733497568
	 8.441444735999999 8.395954468952603 8.363317194615453 8.341482724529488 8.32867246065212 8.323346386276279 8.32417392968383 8.330008231888392 8.339863429680728 8.352894606143066 8.368380101085814 8.385705909411488 8.404351926793215 8.42387982976715 8.443922401816655 8.464174138655633 8.484382985036882 8.504343072315404 8.523888340947829 8.542886945336937 8.561236350137053 8.578859037499781 8.595698753916791 8.611717233445393 8.626891341304876 8.641210588214484 8.654674971501883 8.667293104027531 8.679080596419082 8.690058662055861 8.700252917743891 8.709692356127714 8.718408468641101 8.726434500244299 8.733804819365899 8.740554388393571 8.746718321767462 8.752331520247102 8.757428371268995 8.762042506506608 8.766206608804167 8.769952261595723 8.773309834754414 8.776308401555836 8.778975682094195 8.781338009070062 8.783420312382077 8.785246119409504 8.786837568274471 8.788215431728021 8.789399149617831
 ]
------------------------------ Fine moltiplica1_mv_d


*** write_m_d ***
ris (5 x 51 : 5 x 51): [
	 11.39247467 11.45468074615337 11.4999125359528 11.53033508887962 11.54789517785776 11.55434075874522 11.55123878407018 11.53999152124018 11.52185150075962 11.49793520976602 11.46923563548233 11.43663375364654 11.40090904847314 11.36274914309272 11.3227586125945 11.28146704566573 11.23933641529705 11.1967678140329 11.15410760472762 11.11165303366682 11.06965734918289 11.02833446549304 10.98786320838051 10.94839117649642 10.91003824945137 10.87289977147036 10.83704943718099 10.80254190407428 10.76941515430429 10.73769262676348 10.70738513877098 10.67849261523226 10.65100564175809 10.62490685696213 10.60017219797971 10.57677201215989 10.55467204687078 10.53383432841996 10.5142179402207 10.4957797095273 10.47847481131318 10.46225729717076 10.44708055646743 10.43289771639496 10.41966198699605 10.40732695673916 10.39584684373849 10.38517670727665 10.37527262388212 10.36609183183793 10.35759284765237
	 7.769541808 7.531715206324588 7.304380044079396 7.087470242754655 6.880870881718299 6.684424542429321 6.49793719938777 6.321183663945106 6.153912589794381 5.995851053254181 5.846708724438887 5.706181647595929 5.573955650420047 5.449709403138304 5.333117148694189 5.223851125527246 5.121583704316635 5.025989259692481 4.936745797368613 4.853536356456878 4.776050205922865 4.70398385326542 4.637041882573124 4.574937638150572 4.517393768933023 4.464142647933659 4.414926680004571 4.369498510249659 4.327621144511855 4.289067992473816 4.253622843064552 4.221079781057013 4.191243052975526 4.163926889707926 4.138955292535957 4.116161788658579 4.095389161685824 4.07648916202481 4.059322201563136 4.043757036576911 4.029670442349365 4.016946882579824 4.005478176289906 3.995163164592491 3.985907379377352 3.977622715683693 3.970227109272271 3.963644220676746 3.957803126803536 3.952638020960299 3.948087922023518
	 9.180318338999999 9.425923396187805 9.649520634155294 9.852629643695051 10.03670423232375 10.20313038915662 10.35322521552891 10.48823665627 10.60934389547278 10.71765829775692 10.81422479223109 10.90002361055584 10.97597230294037 11.04292796678398 11.10168963218599 11.15300075685897 11.19755179023553 11.23598277288504 11.26888594286573 11.29680832542849 11.32025428664767 11.33968803515846 11.35553605929647 11.36818948962324 11.37800637913342 11.38531389542137 11.39041042077834 11.39356755763099 11.39503203795067 11.39502753628794 11.39375638694243 11.39140120648762 11.38812642345054 11.3840797174166 11.37939337020315 11.3741855320363 11.36856140588416 11.36261435325764 11.3564269248951 11.35007181980756 11.34361277618429 11.33710539764934 11.33059791832468 11.32413191009791 11.31774293541771 11.31146114885086 11.30531185053343 11.29931599453984 11.29349065507701 11.28784945329064 11.28240294734728
	 6.255656565 6.241029642772333 6.236581274806532 6.240956152475682 6.252930164740092 6.271399755961355 6.295372058450409 6.323955739881811 6.356352515731537 6.391849280410761 6.429810814578003 6.469673029465652 6.510936712024806 6.553161737333388 6.595961717076383 6.638999055035169 6.681980382449975 6.724652347874561 6.766797737749347 6.808231905398599 6.848799487525644 6.888371388551358 6.926842014326851 6.964126737861148 7.000159580746472 7.034891094944378 7.068286430520831 7.100323575792151 7.130991757170346 7.160289986779148 7.188225746653823 7.214813799040936 7.240075112980882 7.264035897988042 7.286726736242391 7.308181805273932 7.32843818365877 7.347535232754199 7.365514047981083 7.382416973616261 7.39828717548658 7.413168266360799 7.427103979216684 7.440137883919373 7.452313143184373 7.463672304015212 7.474257121102967 7.484108408953182 7.493265919766259 7.501768244340905 7.509652733497568
	 8.441444735999999 8.395954468952603 8.363317194615453 8.341482724529488 8.32867246065212 8.323346386276279 8.32417392968383 8.330008231888392 8.339863429680728 8.352894606143066 8.368380101085814 8.385705909411488 8.404351926793215 8.42387982976715 8.443922401816655 8.464174138655633 8.484382985036882 8.504343072315404 8.523888340947829 8.542886945336937 8.561236350137053 8.578859037499781 8.595698753916791 8.611717233445393 8.626891341304876 8.641210588214484 8.654674971501883 8.667293104027531 8.679080596419082 8.690058662055861 8.700252917743891 8.709692356127714 8.718408468641101 8.726434500244299 8.733804819365899 8.740554388393571 8.746718321767462 8.752331520247102 8.757428371268995 8.762042506506608 8.766206608804167 8.769952261595723 8.773309834754414 8.776308401555836 8.778975682094195 8.781338009070062 8.783420312382077 8.785246119409504 8.786837568274471 8.788215431728021 8.789399149617831
 ]

Stringhe allocate: 1 (48465 interne); stringhe deallocate: 0 (48405 interne)


*** write_vn_d ***
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]

Stringhe allocate: 1 (48465 interne); stringhe deallocate: 0 (48405 interne)


*** write_vn_d ***
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]

Stringhe allocate: 1 (48465 interne); stringhe deallocate: 0 (48405 interne)


*** write_vn_d ***
parm1[j][i] (5 : 5): [ 1.040829206 0.833709414 1.036836698 0.989892399 1.171423905 ]

Stringhe allocate: 1 (48465 interne); stringhe deallocate: 0 (48405 interne)


*** write_vn_d ***
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]

Stringhe allocate: 1 (48465 interne); stringhe deallocate: 0 (48405 interne)


*** write_vn_d ***
parm1[j][i] (5 : 5): [ 12.67431725 9.032985081 12.19219754 9.171903361 10.26385753 ]

Stringhe allocate: 1 (48465 interne); stringhe deallocate: 0 (48405 interne)


*** write_vn_d ***
parm1[j][i] (5 : 5): [ 0.8988629876690203 0.86013003877782 0.7529666664997292 0.6820456255132146 0.8224436778595854 ]

Stringhe allocate: 1 (48465 interne); stringhe deallocate: 0 (48405 interne)


Stringhe allocate: 1 (48470 interne); stringhe deallocate: 0 (48440 interne)

Trasformo la lista ... ris (5 : 5): {
	ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
	ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
	ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
	ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
	ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
}

Trasformo il vettore ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
Trasformo il vettore ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
Trasformo il vettore ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
Trasformo il vettore ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
Trasformo il vettore ACCEDIlst(ris, i, vi) (3 : 3): [ -2 1 2 ]
bene
------------------------------ Fine daLISTA

Trasformo la lista ... ris (5 : 5): {
	ris (5 x 51 : 5 x 51): [
	 11.39247467 11.45468074615337 11.4999125359528 11.53033508887962 11.54789517785776 11.55434075874522 11.55123878407018 11.53999152124018 11.52185150075962 11.49793520976602 11.46923563548233 11.43663375364654 11.40090904847314 11.36274914309272 11.3227586125945 11.28146704566573 11.23933641529705 11.1967678140329 11.15410760472762 11.11165303366682 11.06965734918289 11.02833446549304 10.98786320838051 10.94839117649642 10.91003824945137 10.87289977147036 10.83704943718099 10.80254190407428 10.76941515430429 10.73769262676348 10.70738513877098 10.67849261523226 10.65100564175809 10.62490685696213 10.60017219797971 10.57677201215989 10.55467204687078 10.53383432841996 10.5142179402207 10.4957797095273 10.47847481131318 10.46225729717076 10.44708055646743 10.43289771639496 10.41966198699605 10.40732695673916 10.39584684373849 10.38517670727665 10.37527262388212 10.36609183183793 10.35759284765237
	 7.769541808 7.531715206324588 7.304380044079396 7.087470242754655 6.880870881718299 6.684424542429321 6.49793719938777 6.321183663945106 6.153912589794381 5.995851053254181 5.846708724438887 5.706181647595929 5.573955650420047 5.449709403138304 5.333117148694189 5.223851125527246 5.121583704316635 5.025989259692481 4.936745797368613 4.853536356456878 4.776050205922865 4.70398385326542 4.637041882573124 4.574937638150572 4.517393768933023 4.464142647933659 4.414926680004571 4.369498510249659 4.327621144511855 4.289067992473816 4.253622843064552 4.221079781057013 4.191243052975526 4.163926889707926 4.138955292535957 4.116161788658579 4.095389161685824 4.07648916202481 4.059322201563136 4.043757036576911 4.029670442349365 4.016946882579824 4.005478176289906 3.995163164592491 3.985907379377352 3.977622715683693 3.970227109272271 3.963644220676746 3.957803126803536 3.952638020960299 3.948087922023518
	 9.180318338999999 9.425923396187805 9.649520634155294 9.852629643695051 10.03670423232375 10.20313038915662 10.35322521552891 10.48823665627 10.60934389547278 10.71765829775692 10.81422479223109 10.90002361055584 10.97597230294037 11.04292796678398 11.10168963218599 11.15300075685897 11.19755179023553 11.23598277288504 11.26888594286573 11.29680832542849 11.32025428664767 11.33968803515846 11.35553605929647 11.36818948962324 11.37800637913342 11.38531389542137 11.39041042077834 11.39356755763099 11.39503203795067 11.39502753628794 11.39375638694243 11.39140120648762 11.38812642345054 11.3840797174166 11.37939337020315 11.3741855320363 11.36856140588416 11.36261435325764 11.3564269248951 11.35007181980756 11.34361277618429 11.33710539764934 11.33059791832468 11.32413191009791 11.31774293541771 11.31146114885086 11.30531185053343 11.29931599453984 11.29349065507701 11.28784945329064 11.28240294734728
	 6.255656565 6.241029642772333 6.236581274806532 6.240956152475682 6.252930164740092 6.271399755961355 6.295372058450409 6.323955739881811 6.356352515731537 6.391849280410761 6.429810814578003 6.469673029465652 6.510936712024806 6.553161737333388 6.595961717076383 6.638999055035169 6.681980382449975 6.724652347874561 6.766797737749347 6.808231905398599 6.848799487525644 6.888371388551358 6.926842014326851 6.964126737861148 7.000159580746472 7.034891094944378 7.068286430520831 7.100323575792151 7.130991757170346 7.160289986779148 7.188225746653823 7.214813799040936 7.240075112980882 7.264035897988042 7.286726736242391 7.308181805273932 7.32843818365877 7.347535232754199 7.365514047981083 7.382416973616261 7.39828717548658 7.413168266360799 7.427103979216684 7.440137883919373 7.452313143184373 7.463672304015212 7.474257121102967 7.484108408953182 7.493265919766259 7.501768244340905 7.509652733497568
	 8.441444735999999 8.395954468952603 8.363317194615453 8.341482724529488 8.32867246065212 8.323346386276279 8.32417392968383 8.330008231888392 8.339863429680728 8.352894606143066 8.368380101085814 8.385705909411488 8.404351926793215 8.42387982976715 8.443922401816655 8.464174138655633 8.484382985036882 8.504343072315404 8.523888340947829 8.542886945336937 8.561236350137053 8.578859037499781 8.595698753916791 8.611717233445393 8.626891341304876 8.641210588214484 8.654674971501883 8.667293104027531 8.679080596419082 8.690058662055861 8.700252917743891 8.709692356127714 8.718408468641101 8.726434500244299 8.733804819365899 8.740554388393571 8.746718321767462 8.752331520247102 8.757428371268995 8.762042506506608 8.766206608804167 8.769952261595723 8.773309834754414 8.776308401555836 8.778975682094195 8.781338009070062 8.783420312382077 8.785246119409504 8.786837568274471 8.788215431728021 8.789399149617831
 ]
	tmpm1_d (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 0 0 -1 0 0
	 1 0 0 0 0
	 0 -1 0 0 0
	 1 -1 0 0 0
 ]
	parm1[j][i] (5 : 5): [ 1.040829206 0.833709414 1.036836698 0.989892399 1.171423905 ]
	parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
	parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
}

Trasformo la matrice
ris (5 x 51 : 5 x 51): [
	 11.39247467 11.45468074615337 11.4999125359528 11.53033508887962 11.54789517785776 11.55434075874522 11.55123878407018 11.53999152124018 11.52185150075962 11.49793520976602 11.46923563548233 11.43663375364654 11.40090904847314 11.36274914309272 11.3227586125945 11.28146704566573 11.23933641529705 11.1967678140329 11.15410760472762 11.11165303366682 11.06965734918289 11.02833446549304 10.98786320838051 10.94839117649642 10.91003824945137 10.87289977147036 10.83704943718099 10.80254190407428 10.76941515430429 10.73769262676348 10.70738513877098 10.67849261523226 10.65100564175809 10.62490685696213 10.60017219797971 10.57677201215989 10.55467204687078 10.53383432841996 10.5142179402207 10.4957797095273 10.47847481131318 10.46225729717076 10.44708055646743 10.43289771639496 10.41966198699605 10.40732695673916 10.39584684373849 10.38517670727665 10.37527262388212 10.36609183183793 10.35759284765237
	 7.769541808 7.531715206324588 7.304380044079396 7.087470242754655 6.880870881718299 6.684424542429321 6.49793719938777 6.321183663945106 6.153912589794381 5.995851053254181 5.846708724438887 5.706181647595929 5.573955650420047 5.449709403138304 5.333117148694189 5.223851125527246 5.121583704316635 5.025989259692481 4.936745797368613 4.853536356456878 4.776050205922865 4.70398385326542 4.637041882573124 4.574937638150572 4.517393768933023 4.464142647933659 4.414926680004571 4.369498510249659 4.327621144511855 4.289067992473816 4.253622843064552 4.221079781057013 4.191243052975526 4.163926889707926 4.138955292535957 4.116161788658579 4.095389161685824 4.07648916202481 4.059322201563136 4.043757036576911 4.029670442349365 4.016946882579824 4.005478176289906 3.995163164592491 3.985907379377352 3.977622715683693 3.970227109272271 3.963644220676746 3.957803126803536 3.952638020960299 3.948087922023518
	 9.180318338999999 9.425923396187805 9.649520634155294 9.852629643695051 10.03670423232375 10.20313038915662 10.35322521552891 10.48823665627 10.60934389547278 10.71765829775692 10.81422479223109 10.90002361055584 10.97597230294037 11.04292796678398 11.10168963218599 11.15300075685897 11.19755179023553 11.23598277288504 11.26888594286573 11.29680832542849 11.32025428664767 11.33968803515846 11.35553605929647 11.36818948962324 11.37800637913342 11.38531389542137 11.39041042077834 11.39356755763099 11.39503203795067 11.39502753628794 11.39375638694243 11.39140120648762 11.38812642345054 11.3840797174166 11.37939337020315 11.3741855320363 11.36856140588416 11.36261435325764 11.3564269248951 11.35007181980756 11.34361277618429 11.33710539764934 11.33059791832468 11.32413191009791 11.31774293541771 11.31146114885086 11.30531185053343 11.29931599453984 11.29349065507701 11.28784945329064 11.28240294734728
	 6.255656565 6.241029642772333 6.236581274806532 6.240956152475682 6.252930164740092 6.271399755961355 6.295372058450409 6.323955739881811 6.356352515731537 6.391849280410761 6.429810814578003 6.469673029465652 6.510936712024806 6.553161737333388 6.595961717076383 6.638999055035169 6.681980382449975 6.724652347874561 6.766797737749347 6.808231905398599 6.848799487525644 6.888371388551358 6.926842014326851 6.964126737861148 7.000159580746472 7.034891094944378 7.068286430520831 7.100323575792151 7.130991757170346 7.160289986779148 7.188225746653823 7.214813799040936 7.240075112980882 7.264035897988042 7.286726736242391 7.308181805273932 7.32843818365877 7.347535232754199 7.365514047981083 7.382416973616261 7.39828717548658 7.413168266360799 7.427103979216684 7.440137883919373 7.452313143184373 7.463672304015212 7.474257121102967 7.484108408953182 7.493265919766259 7.501768244340905 7.509652733497568
	 8.441444735999999 8.395954468952603 8.363317194615453 8.341482724529488 8.32867246065212 8.323346386276279 8.32417392968383 8.330008231888392 8.339863429680728 8.352894606143066 8.368380101085814 8.385705909411488 8.404351926793215 8.42387982976715 8.443922401816655 8.464174138655633 8.484382985036882 8.504343072315404 8.523888340947829 8.542886945336937 8.561236350137053 8.578859037499781 8.595698753916791 8.611717233445393 8.626891341304876 8.641210588214484 8.654674971501883 8.667293104027531 8.679080596419082 8.690058662055861 8.700252917743891 8.709692356127714 8.718408468641101 8.726434500244299 8.733804819365899 8.740554388393571 8.746718321767462 8.752331520247102 8.757428371268995 8.762042506506608 8.766206608804167 8.769952261595723 8.773309834754414 8.776308401555836 8.778975682094195 8.781338009070062 8.783420312382077 8.785246119409504 8.786837568274471 8.788215431728021 8.789399149617831
 ]
Trasformo la matrice
tmpm1_d (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 0 0 -1 0 0
	 1 0 0 0 0
	 0 -1 0 0 0
	 1 -1 0 0 0
 ]
Trasformo il vettore parm1[j][i] (5 : 5): [ 1.040829206 0.833709414 1.036836698 0.989892399 1.171423905 ]
Trasformo il vettore parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
Trasformo il vettore parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
bene
------------------------------ Fine daLISTA


Stringhe allocate: 1 (48470 interne); stringhe deallocate: 5 (48595 interne)

