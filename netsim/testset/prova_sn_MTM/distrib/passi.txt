
*** simulatenet ***
Ho trasformato la stringa 'connectivity' che vale 'MTM'
------------------------------ Fine inSTRINGA

Ho trasformato la stringa 'INdegree' che vale 'free'
------------------------------ Fine inSTRINGA

Ho trasformato il vettore num_subnet (3 : 3): [ 5 5 10 ]
Ho trasformato la stringa 'formula' che vale ''
------------------------------ Fine inSTRINGA

Ho trasformato il vettore Xmin (5 : 5): [ 8.419340674000001 3.482809808 6.932805339 5.544149565 7.900224736 ]
Ho trasformato il vettore Xmax (5 : 5): [ 12.67431725 9.032985081 12.19219754 9.171903361 10.26385753 ]
Ho trasformato il vettore lambda (5 : 5): [ 1.040829206 0.833709414 1.036836698 0.989892399 1.171423905 ]
Ho trasformato il vettore X0 (5 : 5): [ 11.39247467 7.769541808 9.180318338999999 6.255656565 8.441444735999999 ]
Ho trasformato il vettore weight_par (2 : 2): [ 1 0 ]
Ho trasformato la stringa 'act_fun' che vale 'sigmoidal'
------------------------------ Fine inSTRINGA

Ho trasformato il vettore alpha (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
Ho trasformato il vettore beta (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
Ho trasformato il vettore times (51 : 51): [ 0 0.1 0.2 0.3 0.4 0.5 0.6000000000000001 0.7000000000000001 0.8 0.9 1 1.1 1.2 1.3 1.4 1.5 1.6 1.7 1.8 1.9 2 2.1 2.2 2.3 2.4 2.5 2.6 2.7 2.8 2.9 3 3.1 3.2 3.3 3.4 3.5 3.6 3.7 3.8 3.9 4 4.100000000000001 4.2 4.3 4.4 4.5 4.600000000000001 4.7 4.800000000000001 4.9 5 ]
Ho trasformato la stringa 'method' che vale 'rkf45'
------------------------------ Fine inSTRINGA

Ho trasformato il vettore param (6 : 6): [ 0 0 0 0 0 0 ]
230: copia_v_d	<=>	ris[st:end] <- v[st:end]
lambda (5 : 5): [ 1.040829206 0.833709414 1.036836698 0.989892399 1.171423905 ]
st = 1
end = 5


parm0[LAMBDA] (5 : 5): [ 1.040829206 0.833709414 1.036836698 0.989892399 1.171423905 ]
------------------------------ Fine copia_v_d

232: copia_v_d	<=>	ris[st:end] <- v[st:end]
alpha (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
st = 1
end = 5


parm0[ALPHA] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
------------------------------ Fine copia_v_d

234: copia_v_d	<=>	ris[st:end] <- v[st:end]
beta (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
st = 1
end = 5


parm0[BETA] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
------------------------------ Fine copia_v_d

236: copia_v_d	<=>	ris[st:end] <- v[st:end]
Xmin (5 : 5): [ 8.419340674000001 3.482809808 6.932805339 5.544149565 7.900224736 ]
st = 1
end = 5


parm0[XMIN] (5 : 5): [ 8.419340674000001 3.482809808 6.932805339 5.544149565 7.900224736 ]
------------------------------ Fine copia_v_d

238: copia_v_d	<=>	ris[st:end] <- v[st:end]
Xmax (5 : 5): [ 12.67431725 9.032985081 12.19219754 9.171903361 10.26385753 ]
st = 1
end = 5


parm0[XMAX] (5 : 5): [ 12.67431725 9.032985081 12.19219754 9.171903361 10.26385753 ]
------------------------------ Fine copia_v_d

240: copia_v_d	<=>	ris[st:end] <- v[st:end]
X0 (5 : 5): [ 11.39247467 7.769541808 9.180318338999999 6.255656565 8.441444735999999 ]
st = 1
end = 5


parm0[XZERO] (5 : 5): [ 11.39247467 7.769541808 9.180318338999999 6.255656565 8.441444735999999 ]
------------------------------ Fine copia_v_d

275: dividi1_vv_d	<=>	v1 <- v1 / v2
parm0[XMIN] (5 : 5): [ 8.419340674000001 3.482809808 6.932805339 5.544149565 7.900224736 ]
parm0[XMAX] (5 : 5): [ 12.67431725 9.032985081 12.19219754 9.171903361 10.26385753 ]


parm0[XMIN] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]
------------------------------ Fine dividi_vv_d

278: dividi1_vv_d	<=>	v1 <- v1 / v2
parm0[XZERO] (5 : 5): [ 11.39247467 7.769541808 9.180318338999999 6.255656565 8.441444735999999 ]
parm0[XMAX] (5 : 5): [ 12.67431725 9.032985081 12.19219754 9.171903361 10.26385753 ]


parm0[XZERO] (5 : 5): [ 0.8988629876690203 0.86013003877782 0.7529666664997292 0.6820456255132146 0.8224436778595854 ]
------------------------------ Fine dividi_vv_d

287: copia_v_d	<=>	ris[st:end] <- v[st:end]
parm0[LAMBDA] (5 : 5): [ 1.040829206 0.833709414 1.036836698 0.989892399 1.171423905 ]
st = 1
end = 5


parm1[j][i] (5 : 5): [ 1.040829206 0.833709414 1.036836698 0.989892399 1.171423905 ]
------------------------------ Fine copia_v_d

287: copia_v_d	<=>	ris[st:end] <- v[st:end]
parm0[ALPHA] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
st = 1
end = 5


parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
------------------------------ Fine copia_v_d

287: copia_v_d	<=>	ris[st:end] <- v[st:end]
parm0[BETA] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
st = 1
end = 5


parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
------------------------------ Fine copia_v_d

287: copia_v_d	<=>	ris[st:end] <- v[st:end]
parm0[XMIN] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]
st = 1
end = 5


parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]
------------------------------ Fine copia_v_d

287: copia_v_d	<=>	ris[st:end] <- v[st:end]
parm0[XMAX] (5 : 5): [ 12.67431725 9.032985081 12.19219754 9.171903361 10.26385753 ]
st = 1
end = 5


parm1[j][i] (5 : 5): [ 12.67431725 9.032985081 12.19219754 9.171903361 10.26385753 ]
------------------------------ Fine copia_v_d

287: copia_v_d	<=>	ris[st:end] <- v[st:end]
parm0[XZERO] (5 : 5): [ 0.8988629876690203 0.86013003877782 0.7529666664997292 0.6820456255132146 0.8224436778595854 ]
st = 1
end = 5


parm1[j][i] (5 : 5): [ 0.8988629876690203 0.86013003877782 0.7529666664997292 0.6820456255132146 0.8224436778595854 ]
------------------------------ Fine copia_v_d


*** simulatenet1 ***

*** connectivity_modular1 ***
48: InitMatr_i
Mdiscr (5 x 5 : 5 x 5): [
	 2425208 0 0 0 0
	 2425208 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
val = 0


Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine InitMatr_i

53: seq_d	<=>	ris <- seq(da, a, incr)
da = 1
a = 5
incr = 1


tmp1_d (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine seq_d

54: exp_d	<=>	ris <- v ^ val
tmp1_d (5 : 5): [ 1 2 3 4 5 ]
val = -2.2


tmp2_d (5 : 5): [ 1 0.217637640824031 0.08919350686224783 0.04736614270344993 0.02899118654710781 ]
------------------------------ Fine exp_d

56: vettore2v_d		<=>	ris <- c(v1, v2)
tmp2_d (5 : 5): [ 1 0.217637640824031 0.08919350686224783 0.04736614270344993 0.02899118654710781 ]
scalare_d (1 : 1): [ 0 ]


Prob (6 : 6): [ 1 0.217637640824031 0.08919350686224783 0.04736614270344993 0.02899118654710781 0 ]
------------------------------ Fine vettore2v_d

58: somma_v_d	<=>	ris <- sum(v, na.rm=canc_NA)
Prob (6 : 6): [ 1 0.217637640824031 0.08919350686224783 0.04736614270344993 0.02899118654710781 0 ]
canc_NA = 0



ris: 1.383188476936837
------------------------------ Fine somma_v_d

58: dividi1_vs_d	<=>	v <- v / div
Prob (6 : 6): [ 1 0.217637640824031 0.08919350686224783 0.04736614270344993 0.02899118654710781 0 ]
div = 1.383


Prob (6 : 6): [ 0.722967272120837 0.1573448914973642 0.06448398634709048 0.03424417098119949 0.02095967905350884 0 ]
------------------------------ Fine dividi1_vs_d

61: InitVett_d
tmp2_d (6 : 16): [ 5.842414621812633e-308 0 0 0 0 0 ]
val = 0


tmp2_d (6 : 16): [ 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

63: vettore2v_d		<=>	ris <- c(v1, v2)
scalare_d (1 : 1): [ 5 ]
tmp2_d (6 : 16): [ 0 0 0 0 0 0 ]


Freq_out (7 : 7): [ 5 0 0 0 0 0 0 ]
------------------------------ Fine vettore2v_d

64: copia_v_d	<=>	ris[st:end] <- v[st:end]
Freq_out (7 : 7): [ 5 0 0 0 0 0 0 ]
st = 1
end = 7


Freq_in (7 : 7): [ 5 0 0 0 0 0 0 ]
------------------------------ Fine copia_v_d

66: moltiplica_vs_d	<=>	ris <- v1 * v2
Prob (6 : 6): [ 0.722967272120837 0.1573448914973642 0.06448398634709048 0.03424417098119949 0.02095967905350884 0 ]
val = 5


tmp1_d (6 : 16): [ 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
------------------------------ Fine moltiplica_vs_d

68: vettore2v_d		<=>	ris <- c(v1, v2)
scalare_d (1 : 1): [ 1.#QNAN ]
tmp1_d (6 : 16): [ 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]


STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
------------------------------ Fine vettore2v_d

69: copia_v_d	<=>	ris[st:end] <- v[st:end]
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
st = 1
end = 7


STin (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
------------------------------ Fine copia_v_d

72: InitVett_d
tmp1_d (7 : 16): [ 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 0 ]
val = 1


tmp1_d (7 : 16): [ 1 1 1 1 1 1 1 ]
------------------------------ Fine InitVett_d

73: moltiplica_vs_d	<=>	ris <- v1 * v2
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
val = 0.1


tmp2_d (7 : 16): [ 1.#QNAN 0.3614836360604186 0.07867244574868211 0.03224199317354524 0.01712208549059974 0.01047983952675442 0 ]
------------------------------ Fine moltiplica_vs_d

74: cbind2v_d	<=>	ris <- cbind(v1, v2)
tmp2_d (7 : 16): [ 1.#QNAN 0.3614836360604186 0.07867244574868211 0.03224199317354524 0.01712208549059974 0.01047983952675442 0 ]
tmp1_d (7 : 16): [ 1 1 1 1 1 1 1 ]


aus (7 x 2 : 7 x 2): [
	 1.#QNAN 1
	 0.3614836360604186 1
	 0.07867244574868211 1
	 0.03224199317354524 1
	 0.01712208549059974 1
	 0.01047983952675442 1
	 0 1
 ]
------------------------------ Fine cbind2v_d

76: max_righe_d	<=>	ris <- apply(m, 1, max)
aus (7 x 2 : 7 x 2): [
	 1.#QNAN 1
	 0.3614836360604186 1
	 0.07867244574868211 1
	 0.03224199317354524 1
	 0.01712208549059974 1
	 0.01047983952675442 1
	 0 1
 ]


toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
------------------------------ Fine max_righe_d

78: assegna_v_segm_d	<=>	v[st:end] <- val
STin (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
start = 7
end = 7
val = 0


STin (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
------------------------------ Fine assegna_v_segm_d

88: assegna_v_segm_d	<=>	v[st:end] <- val
STin (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
start = 2
end = 6
val = 1.#QNAN


STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
------------------------------ Fine assegna_v_segm_d

96: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 5
incr = 1


h (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine seq_i

110: somma_righe_i	<=>	ris <- apply(m, 1, sum)
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]


Sin (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine somma_righe_i

112: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]


Sout (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine somma_colonne_i


*** cluster_coeff ***
19: trasponi_i	<=>	ris <- t(m)
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]


tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine trasponi_i

20: somma1_m_i	<=>	m1 <- m1 + m2
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]


tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine somma1_m_i

22: which_m_indxne_i	<=>	ris <- which(m!=val)
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
val = 0


ind (0 : 25): [ ]
------------------------------ Fine which_m_indxne_i

24: assegna1_ms_indx_i	<=>	m[indx] = val
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
ind (0 : 25): [ ]
val = 1


tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine assegna1_ms_indx_i

26: assegna1_s_diag_i	<=>	diag_i(m) <- s
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
val = 0


tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine assegna1_s_diag_i

31: InitVett_d
ris (5 : 5): [ 1.000000017727912 2 3 4 5 ]
val = 0


ris (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

35: somma_riga_i	<=>	ris <- sum(m[riga, ])
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 1


ris: 0
------------------------------ Fine somma_riga_i

37: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
r = 1
val = 0


neighbours (0 : 25): [ ]
------------------------------ Fine which_m_rowindxne_i

35: somma_riga_i	<=>	ris <- sum(m[riga, ])
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 2


ris: 0
------------------------------ Fine somma_riga_i

37: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
r = 2
val = 0


neighbours (0 : 25): [ ]
------------------------------ Fine which_m_rowindxne_i

35: somma_riga_i	<=>	ris <- sum(m[riga, ])
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 3


ris: 0
------------------------------ Fine somma_riga_i

37: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
r = 3
val = 0


neighbours (0 : 25): [ ]
------------------------------ Fine which_m_rowindxne_i

35: somma_riga_i	<=>	ris <- sum(m[riga, ])
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 4


ris: 0
------------------------------ Fine somma_riga_i

37: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
r = 4
val = 0


neighbours (0 : 25): [ ]
------------------------------ Fine which_m_rowindxne_i

35: somma_riga_i	<=>	ris <- sum(m[riga, ])
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 5


ris: 0
------------------------------ Fine somma_riga_i

37: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
r = 5
val = 0


neighbours (0 : 25): [ ]
------------------------------ Fine which_m_rowindxne_i

69: media_v_d	<=>	ris <- mean(v)
ris (5 : 5): [ 0 0 0 0 0 ]


media = 0.000
------------------------------ Fine media_v_d


Stringhe allocate: 5 (225 interne); stringhe deallocate: 0 (15 interne)


*** module1 ***
44: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 5
incr = 1


tmp1_i (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine seq_i


*** sampleB ***

***sample***
tmp1_i (5 : 5): [ 1 2 3 4 5 ]
k = 1, replace = 0


ris (1 : 1): [ 2 ]
*****************************************


Stringhe allocate: 5 (240 interne); stringhe deallocate: 0 (15 interne)


Stringhe allocate: 5 (240 interne); stringhe deallocate: 0 (15 interne)


*** mod1 ***
18: InitMatr_i
ris (2 x 2 : 2 x 2): [
	 79849024 0
	 2425208 0
 ]
val = 0


ris (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
------------------------------ Fine InitMatr_i

21: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 1
incr = 1


x (1 : 1): [ 1 ]
------------------------------ Fine seq_i

23: somma_vs_i	<=>	ris <- v + s
x (1 : 1): [ 1 ]
s = 1


tmp1_i (1 : 1): [ 2 ]
------------------------------ Fine somma_vs_i

24: cbind2v_i	<=>	ris <- cbind(v1, v2)
x (1 : 1): [ 1 ]
tmp1_i (1 : 1): [ 2 ]


ind (1 x 2 : 1 x 2): [
	 1 2
 ]
------------------------------ Fine cbind2v_i

26: assegna1_ms_indx2_i	<=>	m[indxm] <- val
ris (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
ind (1 x 2 : 1 x 2): [
	 1 2
 ]
val = 1


ris (2 x 2 : 2 x 2): [
	 0 1
	 0 0
 ]
------------------------------ Fine assegna1_ms_indx2_i

29: vettore2s_i		<=>	ris <- c(el1, el2)
el1 = 1, el2 = -1


tmp1_i (2 : 4): [ 1 -1 ]
------------------------------ Fine vettore2s_i


*** sampleB ***

***sample***
tmp1_i (2 : 4): [ 1 -1 ]
k = 1, replace = 0


ris (1 : 1): [ -1 ]
*****************************************


Stringhe allocate: 5 (265 interne); stringhe deallocate: 0 (15 interne)


Stringhe allocate: 5 (265 interne); stringhe deallocate: 0 (15 interne)


Stringhe allocate: 5 (265 interne); stringhe deallocate: 0 (35 interne)


*** probmod ***
46: InitMatr_i
checkOUT (2 x 5 : 2 x 5): [
	 0 -623124193 -1157814030 62041691 -1738652206
	 -1 1070324620 1068946786 1067991136 1067298781
 ]
val = 0


checkOUT (2 x 5 : 2 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine InitMatr_i

48: InitMatr_i
checkIN (2 x 5 : 2 x 5): [
	 79845816 0 0 0 0
	 2425208 0 0 0 0
 ]
val = 0


checkIN (2 x 5 : 2 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine InitMatr_i

50: InitMatr_d
ris (2 x 5 : 2 x 5): [
	 7.411380220080449e-038 1.255811350825524e-071 4.430908524892196e-086 1.143502280007271e-071 1.31371420259665e-047
	 3.281019917487656e-033 2.091299530318694e-076 1.451366793238626e-047 5.034144066462628e-086 5.117910933290479e-307
 ]
val = 0


ris (2 x 5 : 2 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine InitMatr_d

52: somma_righe_i	<=>	ris <- apply(m, 1, sum)
ris (2 x 2 : 2 x 2): [
	 0 1
	 1 0
 ]


M_in (2 : 2): [ 1 1 ]
------------------------------ Fine somma_righe_i

54: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
ris (2 x 2 : 2 x 2): [
	 0 1
	 1 0
 ]


M_out (2 : 2): [ 1 1 ]
------------------------------ Fine somma_colonne_i

57: InitMatr_i
memory (2 x 3 : 2 x 3): [
	 79845816 0 0
	 2425208 0 0
 ]
val = -2147483648


memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
------------------------------ Fine InitMatr_i

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 1


tmp_i1 (0 : 6): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 1


tmp_i2 (0 : 6): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 6): [ ]
tmp_i2 (0 : 6): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

92: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sout (5 : 5): [ 0 0 0 0 0 ]
h (5 : 5): [ 1 2 3 4 5 ]


tmp_i1 (5 : 6): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 6): [ 0 0 0 0 0 ]
s = 1


ind (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 6): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 6): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


old1 (5 : 5): [ 5 5 5 5 5 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


old2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (5 : 5): [ 5 5 5 5 5 ]
s = -1


new1 (5 : 5): [ 4 4 4 4 4 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (5 : 5): [ 0 0 0 0 0 ]
s = 1


new2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 6): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


toll1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


toll2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (5 : 5): [ 5 5 5 5 5 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (5 : 5): [ 4 4 4 4 4 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (5 : 5): [ 5.843942458782484e-308 0 0 0 0 ]
val = 0


S1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (5 : 5): [ 0 0 0 0 0 ]
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]


a (5 : 5): [ -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 ]


a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (5 : 5): [ 1 1 1 1 1 ]
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]


b (5 : 5): [ -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 ]


b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]


tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]


m (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
complemento = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxNA_d

115: assegna1_vs_indx_d	<=>	v[indx] <- val
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
ind (0 : 5): [ ]
val = 0


a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine assegna1_vs_indx_d

117: assegna1_vs_indx_d	<=>	v[indx] <- val
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
ind (0 : 5): [ ]
val = 0


b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
------------------------------ Fine assegna1_vs_indx_d

119: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]


tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]
------------------------------ Fine cbind2v_d

120: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]


m (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine max_righe_d

122: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
m (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine f_aux_d

124: diff_vv_d	<=>	ris <- v1 - v2
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
toll2 (5 : 5): [ 1 1 1 1 1 ]


tmp_d1 (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
------------------------------ Fine diff_vv_d

125: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
val = 0

ind1 (0 : 5): [ ]
------------------------------ Fine which_v_indxlt_d

127: diff_vv_d	<=>	ris <- v1 - v2
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
toll2 (5 : 5): [ 1 1 1 1 1 ]


tmp_d1 (5 : 5): [ 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 ]
------------------------------ Fine diff_vv_d

128: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (5 : 5): [ 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 ]
val = 0


ind2 (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxgt_d

130: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (0 : 5): [ ]
ind2 (5 : 5): [ 1 2 3 4 5 ]


tmp_i1 (0 : 5): [ ]
------------------------------ Fine interseca_i

132: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
tmp_i1 (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

134: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
ind (0 : 5): [ ]
val = 0


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
val = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
ind (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (5 : 5): [ 0 0 0 0 0 ]
S2 (5 : 5): [ 1 1 1 1 1 ]


ris (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
ris (5 : 5): [ 1 1 1 1 1 ]
div = 2.000


ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (425 interne); stringhe deallocate: 0 (135 interne)

95: which_v_indxne_d	<=>	ris <- which(v != val)
ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
val = -1.#INF


indok (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxne_d

97: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkOUT (2 x 5 : 2 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 1
indok (5 : 5): [ 1 2 3 4 5 ]
val = 1


checkOUT (2 x 5 : 2 x 5): [
	 1 1 1 1 1
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_riga_indx_i

104: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 5
incr = 1


tmp_i1 (5 : 6): [ 1 2 3 4 5 ]
------------------------------ Fine seq_i

105: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (5 : 6): [ 1 2 3 4 5 ]
indok (5 : 5): [ 1 2 3 4 5 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (5 : 6): [ 1 2 3 4 5 ]
st = 1
end = 5


indInf (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (5 : 5): [ 1 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (5 : 5): [ 1 2 3 4 5 ]
indx = 1


indInf (4 : 5): [ 2 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (4 : 5): [ 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (4 : 5): [ 2 3 4 5 ]
indx = 1


indInf (3 : 5): [ 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (3 : 5): [ 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 5): [ 3 4 5 ]
indx = 1


indInf (2 : 5): [ 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 4
indInf (2 : 5): [ 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 5): [ 4 5 ]
indx = 1


indInf (1 : 5): [ 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 5
indInf (1 : 5): [ 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 5): [ 5 ]
indx = 1


indInf (0 : 5): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 5): [ ]
------------------------------ Fine setdiff_i

107: copia_v_indx_d	<=>	ris <- v[indx]
ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
indok (5 : 5): [ 1 2 3 4 5 ]


tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine copia_v_indx_d

111: min_v_d	<=>	ris <- min(v)
tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]


min = 0.5
------------------------------ Fine min_v_d

112: assegna1_vs_indx_d	<=>	v[indx] <- val
ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
indInf (0 : 5): [ ]
val = -1


ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine assegna1_vs_indx_d

128: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 0 0 0 0 ]
h (5 : 5): [ 1 2 3 4 5 ]


tmp_i1 (5 : 6): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 6): [ 0 0 0 0 0 ]
s = 1


ind (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 6): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 6): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


old1 (5 : 5): [ 5 5 5 5 5 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


old2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (5 : 5): [ 5 5 5 5 5 ]
s = -1


new1 (5 : 5): [ 4 4 4 4 4 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (5 : 5): [ 0 0 0 0 0 ]
s = 1


new2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 6): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


toll1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


toll2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (5 : 5): [ 5 5 5 5 5 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (5 : 5): [ 4 4 4 4 4 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (5 : 5): [ 3.614835774594447 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
val = 0


S1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (5 : 5): [ 0 0 0 0 0 ]
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (5 : 5): [ 1 1 1 1 1 ]
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


tmpm_d (5 x 2 : 5 x 2): [
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
 ]


m (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

140: InitVett_d
S2 (5 : 5): [ 1.614835739135742 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 ]
val = 0


S2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
val = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 0 0 0 0 0 ]
ind (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (5 : 5): [ 0 0 0 0 0 ]
S2 (5 : 5): [ 0 0 0 0 0 ]


ris (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
ris (5 : 5): [ 0 0 0 0 0 ]
div = 2.000


ris (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (530 interne); stringhe deallocate: 0 (220 interne)

131: which_v_indxne_d	<=>	ris <- which(v != val)
ris (5 : 5): [ 0 0 0 0 0 ]
val = -1.#INF


indok (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxne_d

133: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkIN (2 x 5 : 2 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 1
indok (5 : 5): [ 1 2 3 4 5 ]
val = 1


checkIN (2 x 5 : 2 x 5): [
	 1 1 1 1 1
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_riga_indx_i

141: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 5
incr = 1


tmp_i1 (5 : 6): [ 1 2 3 4 5 ]
------------------------------ Fine seq_i

142: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (5 : 6): [ 1 2 3 4 5 ]
indok (5 : 5): [ 1 2 3 4 5 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (5 : 6): [ 1 2 3 4 5 ]
st = 1
end = 5


indInf (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (5 : 5): [ 1 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (5 : 5): [ 1 2 3 4 5 ]
indx = 1


indInf (4 : 5): [ 2 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (4 : 5): [ 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (4 : 5): [ 2 3 4 5 ]
indx = 1


indInf (3 : 5): [ 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (3 : 5): [ 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 5): [ 3 4 5 ]
indx = 1


indInf (2 : 5): [ 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 4
indInf (2 : 5): [ 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 5): [ 4 5 ]
indx = 1


indInf (1 : 5): [ 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 5
indInf (1 : 5): [ 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 5): [ 5 ]
indx = 1


indInf (0 : 5): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 5): [ ]
------------------------------ Fine setdiff_i

144: copia_v_indx_d	<=>	ris <- v[indx]
ris (5 : 5): [ 0 0 0 0 0 ]
indok (5 : 5): [ 1 2 3 4 5 ]


tmp_d1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine copia_v_indx_d

148: min_v_d	<=>	ris <- min(v)
tmp_d1 (5 : 5): [ 0 0 0 0 0 ]


min = 0
------------------------------ Fine min_v_d

149: assegna1_vs_indx_d	<=>	v[indx] <- val
ris (5 : 5): [ 0 0 0 0 0 ]
indInf (0 : 5): [ ]
val = -1


ris (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

159: somma_vv_d	<=>	ris <- v1 + v2
ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
ris (5 : 5): [ 0 0 0 0 0 ]


tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (2 x 5 : 2 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 1
tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]


ris (2 x 5 : 2 x 5): [
	 0.5 0.5 0.5 0.5 0.5
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_d

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 1


tmp_i1 (0 : 6): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 1


tmp_i2 (0 : 6): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 6): [ ]
tmp_i2 (0 : 6): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

92: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sout (5 : 5): [ 0 0 0 0 0 ]
h (5 : 5): [ 1 2 3 4 5 ]


tmp_i1 (5 : 6): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 6): [ 0 0 0 0 0 ]
s = 1


ind (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 6): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 6): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


old1 (5 : 5): [ 5 5 5 5 5 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


old2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (5 : 5): [ 5 5 5 5 5 ]
s = -1


new1 (5 : 5): [ 4 4 4 4 4 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (5 : 5): [ 0 0 0 0 0 ]
s = 1


new2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 6): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


toll1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


toll2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (5 : 5): [ 5 5 5 5 5 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (5 : 5): [ 4 4 4 4 4 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (5 : 5): [ 5.000000070920322 5 5 5 5 ]
val = 0


S1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (5 : 5): [ 0 0 0 0 0 ]
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]


a (5 : 5): [ -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 ]


a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (5 : 5): [ 1 1 1 1 1 ]
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]


b (5 : 5): [ -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 ]


b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]


tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]


m (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
complemento = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxNA_d

115: assegna1_vs_indx_d	<=>	v[indx] <- val
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
ind (0 : 5): [ ]
val = 0


a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine assegna1_vs_indx_d

117: assegna1_vs_indx_d	<=>	v[indx] <- val
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
ind (0 : 5): [ ]
val = 0


b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
------------------------------ Fine assegna1_vs_indx_d

119: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]


tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]
------------------------------ Fine cbind2v_d

120: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]


m (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine max_righe_d

122: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
m (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine f_aux_d

124: diff_vv_d	<=>	ris <- v1 - v2
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
toll2 (5 : 5): [ 1 1 1 1 1 ]


tmp_d1 (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
------------------------------ Fine diff_vv_d

125: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
val = 0

ind1 (0 : 5): [ ]
------------------------------ Fine which_v_indxlt_d

127: diff_vv_d	<=>	ris <- v1 - v2
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
toll2 (5 : 5): [ 1 1 1 1 1 ]


tmp_d1 (5 : 5): [ 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 ]
------------------------------ Fine diff_vv_d

128: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (5 : 5): [ 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 ]
val = 0


ind2 (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxgt_d

130: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (0 : 5): [ ]
ind2 (5 : 5): [ 1 2 3 4 5 ]


tmp_i1 (0 : 5): [ ]
------------------------------ Fine interseca_i

132: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
tmp_i1 (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

134: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
ind (0 : 5): [ ]
val = 0


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
val = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
ind (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (5 : 5): [ 0 0 0 0 0 ]
S2 (5 : 5): [ 1 1 1 1 1 ]


ris (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
ris (5 : 5): [ 1 1 1 1 1 ]
div = 2.000


ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (630 interne); stringhe deallocate: 0 (320 interne)

95: which_v_indxne_d	<=>	ris <- which(v != val)
ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
val = -1.#INF


indok (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxne_d

97: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkOUT (2 x 5 : 2 x 5): [
	 1 1 1 1 1
	 0 0 0 0 0
 ]
riga = 2
indok (5 : 5): [ 1 2 3 4 5 ]
val = 1


checkOUT (2 x 5 : 2 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
 ]
------------------------------ Fine aggiungi_riga_indx_i

104: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 5
incr = 1


tmp_i1 (5 : 6): [ 1 2 3 4 5 ]
------------------------------ Fine seq_i

105: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (5 : 6): [ 1 2 3 4 5 ]
indok (5 : 5): [ 1 2 3 4 5 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (5 : 6): [ 1 2 3 4 5 ]
st = 1
end = 5


indInf (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (5 : 5): [ 1 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (5 : 5): [ 1 2 3 4 5 ]
indx = 1


indInf (4 : 5): [ 2 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (4 : 5): [ 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (4 : 5): [ 2 3 4 5 ]
indx = 1


indInf (3 : 5): [ 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (3 : 5): [ 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 5): [ 3 4 5 ]
indx = 1


indInf (2 : 5): [ 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 4
indInf (2 : 5): [ 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 5): [ 4 5 ]
indx = 1


indInf (1 : 5): [ 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 5
indInf (1 : 5): [ 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 5): [ 5 ]
indx = 1


indInf (0 : 5): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 5): [ ]
------------------------------ Fine setdiff_i

107: copia_v_indx_d	<=>	ris <- v[indx]
ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
indok (5 : 5): [ 1 2 3 4 5 ]


tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine copia_v_indx_d

111: min_v_d	<=>	ris <- min(v)
tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]


min = 0.5
------------------------------ Fine min_v_d

112: assegna1_vs_indx_d	<=>	v[indx] <- val
ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
indInf (0 : 5): [ ]
val = -1


ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine assegna1_vs_indx_d

128: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 0 0 0 0 ]
h (5 : 5): [ 1 2 3 4 5 ]


tmp_i1 (5 : 6): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 6): [ 0 0 0 0 0 ]
s = 1


ind (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 6): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 6): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


old1 (5 : 5): [ 5 5 5 5 5 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


old2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (5 : 5): [ 5 5 5 5 5 ]
s = -1


new1 (5 : 5): [ 4 4 4 4 4 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (5 : 5): [ 0 0 0 0 0 ]
s = 1


new2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 6): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


toll1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


toll2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (5 : 5): [ 5 5 5 5 5 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (5 : 5): [ 4 4 4 4 4 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (5 : 5): [ 5.000000070917643 5 5 5 5 ]
val = 0


S1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (5 : 5): [ 0 0 0 0 0 ]
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (5 : 5): [ 1 1 1 1 1 ]
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


tmpm_d (5 x 2 : 5 x 2): [
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
 ]


m (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

140: InitVett_d
S2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
val = 0


S2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
val = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 0 0 0 0 0 ]
ind (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (5 : 5): [ 0 0 0 0 0 ]
S2 (5 : 5): [ 0 0 0 0 0 ]


ris (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
ris (5 : 5): [ 0 0 0 0 0 ]
div = 2.000


ris (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (715 interne); stringhe deallocate: 0 (405 interne)

131: which_v_indxne_d	<=>	ris <- which(v != val)
ris (5 : 5): [ 0 0 0 0 0 ]
val = -1.#INF


indok (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxne_d

133: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkIN (2 x 5 : 2 x 5): [
	 1 1 1 1 1
	 0 0 0 0 0
 ]
riga = 2
indok (5 : 5): [ 1 2 3 4 5 ]
val = 1


checkIN (2 x 5 : 2 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
 ]
------------------------------ Fine aggiungi_riga_indx_i

141: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 5
incr = 1


tmp_i1 (5 : 6): [ 1 2 3 4 5 ]
------------------------------ Fine seq_i

142: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (5 : 6): [ 1 2 3 4 5 ]
indok (5 : 5): [ 1 2 3 4 5 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (5 : 6): [ 1 2 3 4 5 ]
st = 1
end = 5


indInf (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (5 : 5): [ 1 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (5 : 5): [ 1 2 3 4 5 ]
indx = 1


indInf (4 : 5): [ 2 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (4 : 5): [ 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (4 : 5): [ 2 3 4 5 ]
indx = 1


indInf (3 : 5): [ 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (3 : 5): [ 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 5): [ 3 4 5 ]
indx = 1


indInf (2 : 5): [ 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 4
indInf (2 : 5): [ 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 5): [ 4 5 ]
indx = 1


indInf (1 : 5): [ 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 5
indInf (1 : 5): [ 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 5): [ 5 ]
indx = 1


indInf (0 : 5): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 5): [ ]
------------------------------ Fine setdiff_i

144: copia_v_indx_d	<=>	ris <- v[indx]
ris (5 : 5): [ 0 0 0 0 0 ]
indok (5 : 5): [ 1 2 3 4 5 ]


tmp_d1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine copia_v_indx_d

148: min_v_d	<=>	ris <- min(v)
tmp_d1 (5 : 5): [ 0 0 0 0 0 ]


min = 0
------------------------------ Fine min_v_d

149: assegna1_vs_indx_d	<=>	v[indx] <- val
ris (5 : 5): [ 0 0 0 0 0 ]
indInf (0 : 5): [ ]
val = -1


ris (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

159: somma_vv_d	<=>	ris <- v1 + v2
ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
ris (5 : 5): [ 0 0 0 0 0 ]


tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (2 x 5 : 2 x 5): [
	 0.5 0.5 0.5 0.5 0.5
	 0 0 0 0 0
 ]
riga = 2
tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]


ris (2 x 5 : 2 x 5): [
	 0.5 0.5 0.5 0.5 0.5
	 0.5 0.5 0.5 0.5 0.5
 ]
------------------------------ Fine aggiungi_mv_riga_d

168: somma_m_d	<=>	ris <- sum(m)
ris (2 x 5 : 2 x 5): [
	 0.5 0.5 0.5 0.5 0.5
	 0.5 0.5 0.5 0.5 0.5
 ]


ris: 5
------------------------------ Fine somma_m_d

173: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
checkIN (2 x 5 : 2 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
 ]


aus (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_colonne_i

175: which_v_indxne_i	<=>	ris <- which(v != val)
aus (5 : 5): [ 2 2 2 2 2 ]
val = 0


tmp_i1 (5 : 6): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxne_i

186: somma_righe_i	<=>	ris <- apply(m, 1, sum)
checkIN (2 x 5 : 2 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
 ]


rs (2 : 2): [ 5 5 ]
------------------------------ Fine somma_righe_i

188: ordine_i	<=>	ris <- order(v, decreasing=decr)
rs (2 : 2): [ 5 5 ]
decr = 0


ord_ind (2 : 2): [ 1 2 ]
------------------------------ Fine ordine_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (2 x 5 : 2 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
 ]
r = 1
val = 0


I_add (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
I (0 : 0): [ ]
I_add (5 : 10): [ 1 2 3 4 5 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (5 : 5): [ 1 2 3 4 5 ]


ris (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine unione1_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (2 x 5 : 2 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
 ]
r = 2
val = 0


I_add (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
ris (5 : 5): [ 1 2 3 4 5 ]
I_add (5 : 10): [ 1 2 3 4 5 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (10 : 10): [ 1 2 3 4 5 1 2 3 4 5 ]


ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine unione1_i

216: assegna1_mindxlt_i	<=>	m1[which(m2<val1)] <- val2
checkOUT (2 x 5 : 2 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
 ]
checkOUT (2 x 5 : 2 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
 ]
val1 = 0
val2 = 0


checkOUT (2 x 5 : 2 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
 ]
------------------------------ Fine assegna1_mindxlt_i

218: assegna1_m_indxgt_i	<=>	m1[which(m2>val1)] <- val2
checkOUT (2 x 5 : 2 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
 ]
checkOUT (2 x 5 : 2 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
 ]
val1 = 0
val2 = 1


checkOUT (2 x 5 : 2 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
 ]
------------------------------ Fine assegna1_m_indxgt_i

220: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
checkOUT (2 x 5 : 2 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
 ]


aus (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_colonne_i

222: which_v_indxne_i	<=>	ris <- which(v != val)
aus (5 : 5): [ 2 2 2 2 2 ]
val = 0


tmp_i1 (5 : 6): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxne_i

232: somma_righe_i	<=>	ris <- apply(m, 1, sum)
checkOUT (2 x 5 : 2 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
 ]


rs (2 : 2): [ 5 5 ]
------------------------------ Fine somma_righe_i

234: ordine_i	<=>	ris <- order(v, decreasing=decr)
rs (2 : 2): [ 5 5 ]
decr = 0


ord_ind (2 : 2): [ 1 2 ]
------------------------------ Fine ordine_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (2 x 5 : 2 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
 ]
r = 1
val = 0


I_add (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (0 : 10): [ ]
I_add (5 : 10): [ 1 2 3 4 5 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (5 : 5): [ 1 2 3 4 5 ]


ris (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine unione1_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (2 x 5 : 2 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
 ]
r = 2
val = 0


I_add (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (5 : 5): [ 1 2 3 4 5 ]
I_add (5 : 10): [ 1 2 3 4 5 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (10 : 10): [ 1 2 3 4 5 1 2 3 4 5 ]


ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine unione1_i


Stringhe allocate: 5 (780 interne); stringhe deallocate: 0 (545 interne)


Stringhe allocate: 5 (785 interne); stringhe deallocate: 0 (560 interne)


*** module2 ***
44: seq_i	<=>	ris <- seq(da, a, incr)
da = 2
a = 5
incr = 1


tmp1_i (4 : 4): [ 2 3 4 5 ]
------------------------------ Fine seq_i


*** sampleB ***

***sample***
tmp1_i (4 : 4): [ 2 3 4 5 ]
k = 1, replace = 0


ris (1 : 1): [ 5 ]
*****************************************


Stringhe allocate: 5 (795 interne); stringhe deallocate: 0 (560 interne)


Stringhe allocate: 5 (795 interne); stringhe deallocate: 0 (560 interne)


*** mod2 ***
17: InitMatr_i
ris (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
val = 0


ris (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine InitMatr_i


*** triangola ***
27: diag_i	<=>	ris <- diag(m)
ris (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 1 0 0 0 0
	 1 0 0 0 0
	 1 0 0 0 0
	 1 0 0 0 0
 ]


Dmem (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine diag_i

29: assegna1_s_diag_i	<=>	diag_i(m) <- s
ris (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 1 0 0 0 0
	 1 0 0 0 0
	 1 0 0 0 0
	 1 0 0 0 0
 ]
val = 0


ris (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 1 0 0 0 0
	 1 0 0 0 0
	 1 0 0 0 0
	 1 0 0 0 0
 ]
------------------------------ Fine assegna1_s_diag_i

33: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
ris (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 1 0 0 0 0
	 1 0 0 0 0
	 1 0 0 0 0
	 1 0 0 0 0
 ]
r = 1
val = 0


tmp1_i (0 : 25): [ ]
------------------------------ Fine which_m_rowindxne_i

34: which_m_colindxne_i	<=>	ris <- which(m[, c] != val)
ris (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 1 0 0 0 0
	 1 0 0 0 0
	 1 0 0 0 0
	 1 0 0 0 0
 ]
c = 1, val = 0


tmp2_i (4 : 25): [ 2 3 4 5 ]
------------------------------ Fine which_m_colindxne_i

35: unione_i	<=>	ris <- union(v1, v2)
tmp1_i (0 : 25): [ ]
tmp2_i (4 : 25): [ 2 3 4 5 ]
4876: elimina_doppi_i	<=>	ris <- union(v, v)
ind (4 : 4): [ 2 3 4 5 ]


ris (4 : 4): [ 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (4 : 4): [ 2 3 4 5 ]
------------------------------ Fine unione_i

55: InitMatr_i
coord (1 x 2 : 2 x 2): [
	 79855504 1819240302
 ]
val = 0


coord (1 x 2 : 2 x 2): [
	 0 0
 ]
------------------------------ Fine InitMatr_i

72: vettore2s_i		<=>	ris <- c(el1, el2)
el1 = 2, el2 = 3


tmp1_i (2 : 25): [ 2 3 ]
------------------------------ Fine vettore2s_i

73: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
coord (1 x 2 : 2 x 2): [
	 0 0
 ]
riga = 2
tmp1_i (2 : 25): [ 2 3 ]


coord (2 x 2 : 2 x 2): [
	 0 0
	 2 3
 ]
------------------------------ Fine aggiungi_mv_riga_i

74: vettore2s_i		<=>	ris <- c(el1, el2)
el1 = 3, el2 = 2


tmp1_i (2 : 25): [ 3 2 ]
------------------------------ Fine vettore2s_i

76: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
coord (2 x 2 : 2 x 2): [
	 0 0
	 2 3
 ]
riga = 3
tmp1_i (2 : 25): [ 3 2 ]


coord (3 x 2 : 3 x 2): [
	 0 0
	 2 3
	 3 2
 ]
------------------------------ Fine aggiungi_mv_riga_i

72: vettore2s_i		<=>	ris <- c(el1, el2)
el1 = 2, el2 = 4


tmp1_i (2 : 25): [ 2 4 ]
------------------------------ Fine vettore2s_i

73: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
coord (3 x 2 : 3 x 2): [
	 0 0
	 2 3
	 3 2
 ]
riga = 4
tmp1_i (2 : 25): [ 2 4 ]


coord (4 x 2 : 4 x 2): [
	 0 0
	 2 3
	 3 2
	 2 4
 ]
------------------------------ Fine aggiungi_mv_riga_i

74: vettore2s_i		<=>	ris <- c(el1, el2)
el1 = 4, el2 = 2


tmp1_i (2 : 25): [ 4 2 ]
------------------------------ Fine vettore2s_i

76: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
coord (4 x 2 : 4 x 2): [
	 0 0
	 2 3
	 3 2
	 2 4
 ]
riga = 5
tmp1_i (2 : 25): [ 4 2 ]


coord (5 x 2 : 5 x 2): [
	 0 0
	 2 3
	 3 2
	 2 4
	 4 2
 ]
------------------------------ Fine aggiungi_mv_riga_i

72: vettore2s_i		<=>	ris <- c(el1, el2)
el1 = 2, el2 = 5


tmp1_i (2 : 25): [ 2 5 ]
------------------------------ Fine vettore2s_i

73: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
coord (5 x 2 : 5 x 2): [
	 0 0
	 2 3
	 3 2
	 2 4
	 4 2
 ]
riga = 6
tmp1_i (2 : 25): [ 2 5 ]


coord (6 x 2 : 6 x 2): [
	 0 0
	 2 3
	 3 2
	 2 4
	 4 2
	 2 5
 ]
------------------------------ Fine aggiungi_mv_riga_i

74: vettore2s_i		<=>	ris <- c(el1, el2)
el1 = 5, el2 = 2


tmp1_i (2 : 25): [ 5 2 ]
------------------------------ Fine vettore2s_i

76: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
coord (6 x 2 : 6 x 2): [
	 0 0
	 2 3
	 3 2
	 2 4
	 4 2
	 2 5
 ]
riga = 7
tmp1_i (2 : 25): [ 5 2 ]


coord (7 x 2 : 7 x 2): [
	 0 0
	 2 3
	 3 2
	 2 4
	 4 2
	 2 5
	 5 2
 ]
------------------------------ Fine aggiungi_mv_riga_i

72: vettore2s_i		<=>	ris <- c(el1, el2)
el1 = 3, el2 = 4


tmp1_i (2 : 25): [ 3 4 ]
------------------------------ Fine vettore2s_i

73: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
coord (7 x 2 : 7 x 2): [
	 0 0
	 2 3
	 3 2
	 2 4
	 4 2
	 2 5
	 5 2
 ]
riga = 8
tmp1_i (2 : 25): [ 3 4 ]


coord (8 x 2 : 8 x 2): [
	 0 0
	 2 3
	 3 2
	 2 4
	 4 2
	 2 5
	 5 2
	 3 4
 ]
------------------------------ Fine aggiungi_mv_riga_i

74: vettore2s_i		<=>	ris <- c(el1, el2)
el1 = 4, el2 = 3


tmp1_i (2 : 25): [ 4 3 ]
------------------------------ Fine vettore2s_i

76: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
coord (8 x 2 : 8 x 2): [
	 0 0
	 2 3
	 3 2
	 2 4
	 4 2
	 2 5
	 5 2
	 3 4
 ]
riga = 9
tmp1_i (2 : 25): [ 4 3 ]


coord (9 x 2 : 9 x 2): [
	 0 0
	 2 3
	 3 2
	 2 4
	 4 2
	 2 5
	 5 2
	 3 4
	 4 3
 ]
------------------------------ Fine aggiungi_mv_riga_i

72: vettore2s_i		<=>	ris <- c(el1, el2)
el1 = 3, el2 = 5


tmp1_i (2 : 25): [ 3 5 ]
------------------------------ Fine vettore2s_i

73: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
coord (9 x 2 : 9 x 2): [
	 0 0
	 2 3
	 3 2
	 2 4
	 4 2
	 2 5
	 5 2
	 3 4
	 4 3
 ]
riga = 10
tmp1_i (2 : 25): [ 3 5 ]


coord (10 x 2 : 10 x 2): [
	 0 0
	 2 3
	 3 2
	 2 4
	 4 2
	 2 5
	 5 2
	 3 4
	 4 3
	 3 5
 ]
------------------------------ Fine aggiungi_mv_riga_i

74: vettore2s_i		<=>	ris <- c(el1, el2)
el1 = 5, el2 = 3


tmp1_i (2 : 25): [ 5 3 ]
------------------------------ Fine vettore2s_i

76: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
coord (10 x 2 : 10 x 2): [
	 0 0
	 2 3
	 3 2
	 2 4
	 4 2
	 2 5
	 5 2
	 3 4
	 4 3
	 3 5
 ]
riga = 11
tmp1_i (2 : 25): [ 5 3 ]


coord (11 x 2 : 11 x 2): [
	 0 0
	 2 3
	 3 2
	 2 4
	 4 2
	 2 5
	 5 2
	 3 4
	 4 3
	 3 5
	 5 3
 ]
------------------------------ Fine aggiungi_mv_riga_i

72: vettore2s_i		<=>	ris <- c(el1, el2)
el1 = 4, el2 = 5


tmp1_i (2 : 25): [ 4 5 ]
------------------------------ Fine vettore2s_i

73: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
coord (11 x 2 : 11 x 2): [
	 0 0
	 2 3
	 3 2
	 2 4
	 4 2
	 2 5
	 5 2
	 3 4
	 4 3
	 3 5
	 5 3
 ]
riga = 12
tmp1_i (2 : 25): [ 4 5 ]


coord (12 x 2 : 12 x 2): [
	 0 0
	 2 3
	 3 2
	 2 4
	 4 2
	 2 5
	 5 2
	 3 4
	 4 3
	 3 5
	 5 3
	 4 5
 ]
------------------------------ Fine aggiungi_mv_riga_i

74: vettore2s_i		<=>	ris <- c(el1, el2)
el1 = 5, el2 = 4


tmp1_i (2 : 25): [ 5 4 ]
------------------------------ Fine vettore2s_i

76: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
coord (12 x 2 : 12 x 2): [
	 0 0
	 2 3
	 3 2
	 2 4
	 4 2
	 2 5
	 5 2
	 3 4
	 4 3
	 3 5
	 5 3
	 4 5
 ]
riga = 13
tmp1_i (2 : 25): [ 5 4 ]


coord (13 x 2 : 13 x 2): [
	 0 0
	 2 3
	 3 2
	 2 4
	 4 2
	 2 5
	 5 2
	 3 4
	 4 3
	 3 5
	 5 3
	 4 5
	 5 4
 ]
------------------------------ Fine aggiungi_mv_riga_i

89: somma_righe_i	<=>	ris <- apply(m, 1, sum)
ris (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 1 0 0 0 0
	 1 0 0 0 0
	 1 0 0 0 0
	 1 0 0 0 0
 ]


M_in (5 : 5): [ 0 1 1 1 1 ]
------------------------------ Fine somma_righe_i

91: which_v_indxlt_i	<=>	ris <- which(v<val)
M_in (5 : 5): [ 0 1 1 1 1 ]
val = 5

ris (5 : 13): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxlt_i

95: which_m_colindxin_i	<=>	ris <- which(m[, c] %IN% v)
coord (13 x 2 : 13 x 2): [
	 0 0
	 2 3
	 3 2
	 2 4
	 4 2
	 2 5
	 5 2
	 3 4
	 4 3
	 3 5
	 5 3
	 4 5
	 5 4
 ]
c = 1
ris (5 : 13): [ 1 2 3 4 5 ]
3754: esiste_v_i	<=>	elem %IN% v
elem = 0
ris (5 : 13): [ 1 2 3 4 5 ]


indx = 0
------------------------------ Fine esiste_v_i

3754: esiste_v_i	<=>	elem %IN% v
elem = 2
ris (5 : 13): [ 1 2 3 4 5 ]


indx = 2
------------------------------ Fine esiste_v_i

3754: esiste_v_i	<=>	elem %IN% v
elem = 3
ris (5 : 13): [ 1 2 3 4 5 ]


indx = 3
------------------------------ Fine esiste_v_i

3754: esiste_v_i	<=>	elem %IN% v
elem = 2
ris (5 : 13): [ 1 2 3 4 5 ]


indx = 2
------------------------------ Fine esiste_v_i

3754: esiste_v_i	<=>	elem %IN% v
elem = 4
ris (5 : 13): [ 1 2 3 4 5 ]


indx = 4
------------------------------ Fine esiste_v_i

3754: esiste_v_i	<=>	elem %IN% v
elem = 2
ris (5 : 13): [ 1 2 3 4 5 ]


indx = 2
------------------------------ Fine esiste_v_i

3754: esiste_v_i	<=>	elem %IN% v
elem = 5
ris (5 : 13): [ 1 2 3 4 5 ]


indx = 5
------------------------------ Fine esiste_v_i

3754: esiste_v_i	<=>	elem %IN% v
elem = 3
ris (5 : 13): [ 1 2 3 4 5 ]


indx = 3
------------------------------ Fine esiste_v_i

3754: esiste_v_i	<=>	elem %IN% v
elem = 4
ris (5 : 13): [ 1 2 3 4 5 ]


indx = 4
------------------------------ Fine esiste_v_i

3754: esiste_v_i	<=>	elem %IN% v
elem = 3
ris (5 : 13): [ 1 2 3 4 5 ]


indx = 3
------------------------------ Fine esiste_v_i

3754: esiste_v_i	<=>	elem %IN% v
elem = 5
ris (5 : 13): [ 1 2 3 4 5 ]


indx = 5
------------------------------ Fine esiste_v_i

3754: esiste_v_i	<=>	elem %IN% v
elem = 4
ris (5 : 13): [ 1 2 3 4 5 ]


indx = 4
------------------------------ Fine esiste_v_i

3754: esiste_v_i	<=>	elem %IN% v
elem = 5
ris (5 : 13): [ 1 2 3 4 5 ]


indx = 5
------------------------------ Fine esiste_v_i



ind_aus (12 : 13): [ 2 3 4 5 6 7 8 9 10 11 12 13 ]
------------------------------ Fine which_m_colindxin_i

101: righe_i	<=>	ris <- m[indx,]
coord (13 x 2 : 13 x 2): [
	 0 0
	 2 3
	 3 2
	 2 4
	 4 2
	 2 5
	 5 2
	 3 4
	 4 3
	 3 5
	 5 3
	 4 5
	 5 4
 ]
ind_aus (12 : 13): [ 2 3 4 5 6 7 8 9 10 11 12 13 ]



tmp_coord1 (12 x 2 : 12 x 2): [
	 2 3
	 3 2
	 2 4
	 4 2
	 2 5
	 5 2
	 3 4
	 4 3
	 3 5
	 5 3
	 4 5
	 5 4
 ]
------------------------------ Fine righe_i

102: copia_m_i	<=>	ris <- da
tmp_coord1 (12 x 2 : 12 x 2): [
	 2 3
	 3 2
	 2 4
	 4 2
	 2 5
	 5 2
	 3 4
	 4 3
	 3 5
	 5 3
	 4 5
	 5 4
 ]


coord (12 x 2 : 13 x 2): [
	 2 3
	 3 2
	 2 4
	 4 2
	 2 5
	 5 2
	 3 4
	 4 3
	 3 5
	 5 3
	 4 5
	 5 4
 ]
------------------------------ Fine copia_m_i

104: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 12
incr = 1


tmp1_i (12 : 25): [ 1 2 3 4 5 6 7 8 9 10 11 12 ]
------------------------------ Fine seq_i


*** sampleB ***

***sample***
tmp1_i (12 : 25): [ 1 2 3 4 5 6 7 8 9 10 11 12 ]
k = 1, replace = 0


ris (1 : 1): [ 9 ]
*****************************************


Stringhe allocate: 5 (915 interne); stringhe deallocate: 0 (625 interne)


Stringhe allocate: 5 (915 interne); stringhe deallocate: 0 (625 interne)

107: riga_i	<=>	ris <- m[r,]
coord (12 x 2 : 13 x 2): [
	 2 3
	 3 2
	 2 4
	 4 2
	 2 5
	 5 2
	 3 4
	 4 3
	 3 5
	 5 3
	 4 5
	 5 4
 ]
r = 9

coord_ind (2 : 2): [ 3 5 ]
------------------------------ Fine riga_i

111: which_m_colneand2_i	<=>	ris <- which((m[, c] != val1) & (m[, c] != val2))
coord (12 x 2 : 13 x 2): [
	 2 3
	 3 2
	 2 4
	 4 2
	 2 5
	 5 2
	 3 4
	 4 3
	 3 5
	 5 3
	 4 5
	 5 4
 ]
c = 1, val1 = 3, val2 = 5


ris (6 : 50): [ 1 3 4 5 8 11 ]
------------------------------ Fine which_m_colneand2_i

114: righe_i	<=>	ris <- m[indx,]
coord (12 x 2 : 13 x 2): [
	 2 3
	 3 2
	 2 4
	 4 2
	 2 5
	 5 2
	 3 4
	 4 3
	 3 5
	 5 3
	 4 5
	 5 4
 ]
ris (6 : 50): [ 1 3 4 5 8 11 ]



tmp_coord1 (6 x 2 : 12 x 2): [
	 2 3
	 2 4
	 4 2
	 2 5
	 4 3
	 4 5
 ]
------------------------------ Fine righe_i

115: copia_m_i	<=>	ris <- da
tmp_coord1 (6 x 2 : 12 x 2): [
	 2 3
	 2 4
	 4 2
	 2 5
	 4 3
	 4 5
 ]


coord (6 x 2 : 13 x 2): [
	 2 3
	 2 4
	 4 2
	 2 5
	 4 3
	 4 5
 ]
------------------------------ Fine copia_m_i

89: somma_righe_i	<=>	ris <- apply(m, 1, sum)
ris (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 1 0 0 0 0
	 1 0 0 0 1
	 1 0 0 0 0
	 1 0 0 0 0
 ]


M_in (5 : 5): [ 0 1 2 1 1 ]
------------------------------ Fine somma_righe_i

91: which_v_indxlt_i	<=>	ris <- which(v<val)
M_in (5 : 5): [ 0 1 2 1 1 ]
val = 5

ris (5 : 50): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxlt_i

95: which_m_colindxin_i	<=>	ris <- which(m[, c] %IN% v)
coord (6 x 2 : 13 x 2): [
	 2 3
	 2 4
	 4 2
	 2 5
	 4 3
	 4 5
 ]
c = 1
ris (5 : 50): [ 1 2 3 4 5 ]
3754: esiste_v_i	<=>	elem %IN% v
elem = 2
ris (5 : 50): [ 1 2 3 4 5 ]


indx = 2
------------------------------ Fine esiste_v_i

3754: esiste_v_i	<=>	elem %IN% v
elem = 2
ris (5 : 50): [ 1 2 3 4 5 ]


indx = 2
------------------------------ Fine esiste_v_i

3754: esiste_v_i	<=>	elem %IN% v
elem = 4
ris (5 : 50): [ 1 2 3 4 5 ]


indx = 4
------------------------------ Fine esiste_v_i

3754: esiste_v_i	<=>	elem %IN% v
elem = 2
ris (5 : 50): [ 1 2 3 4 5 ]


indx = 2
------------------------------ Fine esiste_v_i

3754: esiste_v_i	<=>	elem %IN% v
elem = 4
ris (5 : 50): [ 1 2 3 4 5 ]


indx = 4
------------------------------ Fine esiste_v_i

3754: esiste_v_i	<=>	elem %IN% v
elem = 4
ris (5 : 50): [ 1 2 3 4 5 ]


indx = 4
------------------------------ Fine esiste_v_i



ind_aus (6 : 13): [ 1 2 3 4 5 6 ]
------------------------------ Fine which_m_colindxin_i

101: righe_i	<=>	ris <- m[indx,]
coord (6 x 2 : 13 x 2): [
	 2 3
	 2 4
	 4 2
	 2 5
	 4 3
	 4 5
 ]
ind_aus (6 : 13): [ 1 2 3 4 5 6 ]



tmp_coord1 (6 x 2 : 12 x 2): [
	 2 3
	 2 4
	 4 2
	 2 5
	 4 3
	 4 5
 ]
------------------------------ Fine righe_i

102: copia_m_i	<=>	ris <- da
tmp_coord1 (6 x 2 : 12 x 2): [
	 2 3
	 2 4
	 4 2
	 2 5
	 4 3
	 4 5
 ]


coord (6 x 2 : 13 x 2): [
	 2 3
	 2 4
	 4 2
	 2 5
	 4 3
	 4 5
 ]
------------------------------ Fine copia_m_i

104: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 6
incr = 1


tmp1_i (6 : 25): [ 1 2 3 4 5 6 ]
------------------------------ Fine seq_i


*** sampleB ***

***sample***
tmp1_i (6 : 25): [ 1 2 3 4 5 6 ]
k = 1, replace = 0


ris (1 : 1): [ 4 ]
*****************************************


Stringhe allocate: 5 (920 interne); stringhe deallocate: 0 (625 interne)


Stringhe allocate: 5 (920 interne); stringhe deallocate: 0 (625 interne)

107: riga_i	<=>	ris <- m[r,]
coord (6 x 2 : 13 x 2): [
	 2 3
	 2 4
	 4 2
	 2 5
	 4 3
	 4 5
 ]
r = 4

coord_ind (2 : 2): [ 2 5 ]
------------------------------ Fine riga_i

111: which_m_colneand2_i	<=>	ris <- which((m[, c] != val1) & (m[, c] != val2))
coord (6 x 2 : 13 x 2): [
	 2 3
	 2 4
	 4 2
	 2 5
	 4 3
	 4 5
 ]
c = 1, val1 = 2, val2 = 5


ris (3 : 50): [ 3 5 6 ]
------------------------------ Fine which_m_colneand2_i

114: righe_i	<=>	ris <- m[indx,]
coord (6 x 2 : 13 x 2): [
	 2 3
	 2 4
	 4 2
	 2 5
	 4 3
	 4 5
 ]
ris (3 : 50): [ 3 5 6 ]



tmp_coord1 (3 x 2 : 12 x 2): [
	 4 2
	 4 3
	 4 5
 ]
------------------------------ Fine righe_i

115: copia_m_i	<=>	ris <- da
tmp_coord1 (3 x 2 : 12 x 2): [
	 4 2
	 4 3
	 4 5
 ]


coord (3 x 2 : 13 x 2): [
	 4 2
	 4 3
	 4 5
 ]
------------------------------ Fine copia_m_i

89: somma_righe_i	<=>	ris <- apply(m, 1, sum)
ris (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 1 0 0 0 1
	 1 0 0 0 1
	 1 0 0 0 0
	 1 0 0 0 0
 ]


M_in (5 : 5): [ 0 2 2 1 1 ]
------------------------------ Fine somma_righe_i

91: which_v_indxlt_i	<=>	ris <- which(v<val)
M_in (5 : 5): [ 0 2 2 1 1 ]
val = 5

ris (5 : 50): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxlt_i

95: which_m_colindxin_i	<=>	ris <- which(m[, c] %IN% v)
coord (3 x 2 : 13 x 2): [
	 4 2
	 4 3
	 4 5
 ]
c = 1
ris (5 : 50): [ 1 2 3 4 5 ]
3754: esiste_v_i	<=>	elem %IN% v
elem = 4
ris (5 : 50): [ 1 2 3 4 5 ]


indx = 4
------------------------------ Fine esiste_v_i

3754: esiste_v_i	<=>	elem %IN% v
elem = 4
ris (5 : 50): [ 1 2 3 4 5 ]


indx = 4
------------------------------ Fine esiste_v_i

3754: esiste_v_i	<=>	elem %IN% v
elem = 4
ris (5 : 50): [ 1 2 3 4 5 ]


indx = 4
------------------------------ Fine esiste_v_i



ind_aus (3 : 13): [ 1 2 3 ]
------------------------------ Fine which_m_colindxin_i

101: righe_i	<=>	ris <- m[indx,]
coord (3 x 2 : 13 x 2): [
	 4 2
	 4 3
	 4 5
 ]
ind_aus (3 : 13): [ 1 2 3 ]



tmp_coord1 (3 x 2 : 12 x 2): [
	 4 2
	 4 3
	 4 5
 ]
------------------------------ Fine righe_i

102: copia_m_i	<=>	ris <- da
tmp_coord1 (3 x 2 : 12 x 2): [
	 4 2
	 4 3
	 4 5
 ]


coord (3 x 2 : 13 x 2): [
	 4 2
	 4 3
	 4 5
 ]
------------------------------ Fine copia_m_i

104: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 3
incr = 1


tmp1_i (3 : 25): [ 1 2 3 ]
------------------------------ Fine seq_i


*** sampleB ***

***sample***
tmp1_i (3 : 25): [ 1 2 3 ]
k = 1, replace = 0


ris (1 : 1): [ 2 ]
*****************************************


Stringhe allocate: 5 (920 interne); stringhe deallocate: 0 (625 interne)


Stringhe allocate: 5 (920 interne); stringhe deallocate: 0 (625 interne)

107: riga_i	<=>	ris <- m[r,]
coord (3 x 2 : 13 x 2): [
	 4 2
	 4 3
	 4 5
 ]
r = 2

coord_ind (2 : 2): [ 4 3 ]
------------------------------ Fine riga_i

111: which_m_colneand2_i	<=>	ris <- which((m[, c] != val1) & (m[, c] != val2))
coord (3 x 2 : 13 x 2): [
	 4 2
	 4 3
	 4 5
 ]
c = 1, val1 = 4, val2 = 3


ris (0 : 50): [ ]
------------------------------ Fine which_m_colneand2_i

33: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
ris (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 1 0 0 0 1
	 1 0 0 0 1
	 1 0 1 0 0
	 1 0 0 0 0
 ]
r = 2
val = 0


tmp1_i (2 : 25): [ 1 5 ]
------------------------------ Fine which_m_rowindxne_i

34: which_m_colindxne_i	<=>	ris <- which(m[, c] != val)
ris (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 1 0 0 0 1
	 1 0 0 0 1
	 1 0 1 0 0
	 1 0 0 0 0
 ]
c = 2, val = 0


tmp2_i (0 : 25): [ ]
------------------------------ Fine which_m_colindxne_i

35: unione_i	<=>	ris <- union(v1, v2)
tmp1_i (2 : 25): [ 1 5 ]
tmp2_i (0 : 25): [ ]
4876: elimina_doppi_i	<=>	ris <- union(v, v)
ind (2 : 2): [ 1 5 ]


ris (2 : 50): [ 1 5 ]
------------------------------ Fine elimina_doppi_i



ris (2 : 50): [ 1 5 ]
------------------------------ Fine unione_i

33: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
ris (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 1 0 0 0 1
	 1 0 0 0 1
	 1 0 1 0 0
	 1 0 0 0 0
 ]
r = 3
val = 0


tmp1_i (2 : 25): [ 1 5 ]
------------------------------ Fine which_m_rowindxne_i

34: which_m_colindxne_i	<=>	ris <- which(m[, c] != val)
ris (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 1 0 0 0 1
	 1 0 0 0 1
	 1 0 1 0 0
	 1 0 0 0 0
 ]
c = 3, val = 0


tmp2_i (1 : 25): [ 4 ]
------------------------------ Fine which_m_colindxne_i

35: unione_i	<=>	ris <- union(v1, v2)
tmp1_i (2 : 25): [ 1 5 ]
tmp2_i (1 : 25): [ 4 ]
4876: elimina_doppi_i	<=>	ris <- union(v, v)
ind (3 : 3): [ 1 5 4 ]


ris (3 : 50): [ 1 5 4 ]
------------------------------ Fine elimina_doppi_i



ris (3 : 50): [ 1 5 4 ]
------------------------------ Fine unione_i

55: InitMatr_i
coord (1 x 2 : 13 x 2): [
	 4 4
 ]
val = 0


coord (1 x 2 : 13 x 2): [
	 0 0
 ]
------------------------------ Fine InitMatr_i

72: vettore2s_i		<=>	ris <- c(el1, el2)
el1 = 5, el2 = 4


tmp1_i (2 : 25): [ 5 4 ]
------------------------------ Fine vettore2s_i

73: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
coord (1 x 2 : 13 x 2): [
	 0 0
 ]
riga = 2
tmp1_i (2 : 25): [ 5 4 ]


coord (2 x 2 : 2 x 2): [
	 0 0
	 5 4
 ]
------------------------------ Fine aggiungi_mv_riga_i

74: vettore2s_i		<=>	ris <- c(el1, el2)
el1 = 4, el2 = 5


tmp1_i (2 : 25): [ 4 5 ]
------------------------------ Fine vettore2s_i

76: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
coord (2 x 2 : 2 x 2): [
	 0 0
	 5 4
 ]
riga = 3
tmp1_i (2 : 25): [ 4 5 ]


coord (3 x 2 : 3 x 2): [
	 0 0
	 5 4
	 4 5
 ]
------------------------------ Fine aggiungi_mv_riga_i

33: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
ris (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 1 0 0 0 1
	 1 0 0 0 1
	 1 0 1 0 0
	 1 0 0 0 0
 ]
r = 4
val = 0


tmp1_i (2 : 25): [ 1 3 ]
------------------------------ Fine which_m_rowindxne_i

34: which_m_colindxne_i	<=>	ris <- which(m[, c] != val)
ris (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 1 0 0 0 1
	 1 0 0 0 1
	 1 0 1 0 0
	 1 0 0 0 0
 ]
c = 4, val = 0


tmp2_i (0 : 25): [ ]
------------------------------ Fine which_m_colindxne_i

35: unione_i	<=>	ris <- union(v1, v2)
tmp1_i (2 : 25): [ 1 3 ]
tmp2_i (0 : 25): [ ]
4876: elimina_doppi_i	<=>	ris <- union(v, v)
ind (2 : 2): [ 1 3 ]


ris (2 : 50): [ 1 3 ]
------------------------------ Fine elimina_doppi_i



ris (2 : 50): [ 1 3 ]
------------------------------ Fine unione_i

33: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
ris (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 1 0 0 0 1
	 1 0 0 0 1
	 1 0 1 0 0
	 1 0 0 0 0
 ]
r = 5
val = 0


tmp1_i (1 : 25): [ 1 ]
------------------------------ Fine which_m_rowindxne_i

34: which_m_colindxne_i	<=>	ris <- which(m[, c] != val)
ris (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 1 0 0 0 1
	 1 0 0 0 1
	 1 0 1 0 0
	 1 0 0 0 0
 ]
c = 5, val = 0


tmp2_i (2 : 25): [ 2 3 ]
------------------------------ Fine which_m_colindxne_i

35: unione_i	<=>	ris <- union(v1, v2)
tmp1_i (1 : 25): [ 1 ]
tmp2_i (2 : 25): [ 2 3 ]
4876: elimina_doppi_i	<=>	ris <- union(v, v)
ind (3 : 3): [ 1 2 3 ]


ris (3 : 50): [ 1 2 3 ]
------------------------------ Fine elimina_doppi_i



ris (3 : 50): [ 1 2 3 ]
------------------------------ Fine unione_i

152: assegna1_v_diag_i	<=>	diag(m) <- v
ris (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 1 0 0 0 1
	 1 0 0 0 1
	 1 0 1 0 0
	 1 0 0 0 0
 ]
Dmem (5 : 5): [ 0 0 0 0 0 ]


ris (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 1 0 0 0 1
	 1 0 0 0 1
	 1 0 1 0 0
	 1 0 0 0 0
 ]
------------------------------ Fine assegna1_v_diag_i


Stringhe allocate: 5 (950 interne); stringhe deallocate: 0 (710 interne)


Stringhe allocate: 5 (950 interne); stringhe deallocate: 0 (710 interne)


*** probmod ***
46: InitMatr_i
checkOUT (5 x 5 : 5 x 5): [
	 79851088 0 0 0 0
	 3 0 0 0 0
	 4 0 0 0 0
	 5 0 0 0 0
	 0 0 0 0 0
 ]
val = 0


checkOUT (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine InitMatr_i

48: InitMatr_i
checkIN (5 x 5 : 5 x 5): [
	 79851992 6 11 0 0
	 3 7 12 589833 188
	 3 8 0 51118564 0
	 4 9 44 0 280
	 5 10 1 79851672 24
 ]
val = 0


checkIN (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine InitMatr_i

50: InitMatr_d
ris (5 x 5 : 5 x 5): [
	 5.844044314580474e-308 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
val = 0


ris (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine InitMatr_d

52: somma_righe_i	<=>	ris <- apply(m, 1, sum)
ris (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 1 0 0 0 1
	 1 0 0 0 1
	 1 0 1 0 0
	 1 0 0 0 0
 ]


M_in (5 : 5): [ 0 2 2 2 1 ]
------------------------------ Fine somma_righe_i

54: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
ris (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 1 0 0 0 1
	 1 0 0 0 1
	 1 0 1 0 0
	 1 0 0 0 0
 ]


M_out (5 : 5): [ 4 0 1 0 2 ]
------------------------------ Fine somma_colonne_i

57: InitMatr_i
memory (5 x 3 : 5 x 3): [
	 79843864 142 0
	 79854536 18 91
	 0 5 0
	 89 2 89
	 0 0 1
 ]
val = -2147483648


memory (5 x 3 : 5 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
------------------------------ Fine InitMatr_i

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (5 x 3 : 5 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 0


tmp_i1 (0 : 15): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (5 x 3 : 5 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 4


tmp_i2 (0 : 15): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 15): [ ]
tmp_i2 (0 : 15): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

92: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sout (5 : 5): [ 0 0 0 0 0 ]
h (5 : 5): [ 1 2 3 4 5 ]


tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 4


ind (5 : 5): [ 4 4 4 4 4 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 4 4 4 4 4 ]
s = 1


tmp_i1 (5 : 5): [ 5 5 5 5 5 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (5 : 5): [ 5 5 5 5 5 ]


T2 (5 : 5): [ 0.1712208549059974 0.1712208549059974 0.1712208549059974 0.1712208549059974 0.1712208549059974 ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


old1 (5 : 5): [ 5 5 5 5 5 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 4 4 4 4 4 ]
s = 1


tmp_i1 (5 : 5): [ 5 5 5 5 5 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 5 5 5 5 5 ]


old2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (5 : 5): [ 5 5 5 5 5 ]
s = -1


new1 (5 : 5): [ 4 4 4 4 4 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (5 : 5): [ 0 0 0 0 0 ]
s = 1


new2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


toll1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 4 4 4 4 4 ]
s = 1


tmp_i1 (5 : 5): [ 5 5 5 5 5 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 5 5 5 5 5 ]


toll2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (5 : 5): [ 5 5 5 5 5 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (5 : 5): [ 4 4 4 4 4 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
val = 0


S1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (5 : 5): [ 0 0 0 0 0 ]
T2 (5 : 5): [ 0.1712208549059974 0.1712208549059974 0.1712208549059974 0.1712208549059974 0.1712208549059974 ]


a (5 : 5): [ -0.1712208549059974 -0.1712208549059974 -0.1712208549059974 -0.1712208549059974 -0.1712208549059974 ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ -0.1712208549059974 -0.1712208549059974 -0.1712208549059974 -0.1712208549059974 -0.1712208549059974 ]


a (5 : 5): [ 0.1712208549059974 0.1712208549059974 0.1712208549059974 0.1712208549059974 0.1712208549059974 ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (5 : 5): [ 1 1 1 1 1 ]
T2 (5 : 5): [ 0.1712208549059974 0.1712208549059974 0.1712208549059974 0.1712208549059974 0.1712208549059974 ]


b (5 : 5): [ 0.8287791450940025 0.8287791450940025 0.8287791450940025 0.8287791450940025 0.8287791450940025 ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 0.8287791450940025 0.8287791450940025 0.8287791450940025 0.8287791450940025 0.8287791450940025 ]


b (5 : 5): [ 0.8287791450940025 0.8287791450940025 0.8287791450940025 0.8287791450940025 0.8287791450940025 ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 0.1712208549059974 0.1712208549059974 0.1712208549059974 0.1712208549059974 0.1712208549059974 ]
b (5 : 5): [ 0.8287791450940025 0.8287791450940025 0.8287791450940025 0.8287791450940025 0.8287791450940025 ]


tmpm_d (5 x 2 : 5 x 2): [
	 0.1712208549059974 0.8287791450940025
	 0.1712208549059974 0.8287791450940025
	 0.1712208549059974 0.8287791450940025
	 0.1712208549059974 0.8287791450940025
	 0.1712208549059974 0.8287791450940025
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 0.1712208549059974 0.8287791450940025
	 0.1712208549059974 0.8287791450940025
	 0.1712208549059974 0.8287791450940025
	 0.1712208549059974 0.8287791450940025
	 0.1712208549059974 0.8287791450940025
 ]


m (5 : 5): [ 0.8287791450940025 0.8287791450940025 0.8287791450940025 0.8287791450940025 0.8287791450940025 ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (5 : 5): [ 0.1712208549059974 0.1712208549059974 0.1712208549059974 0.1712208549059974 0.1712208549059974 ]
complemento = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxNA_d

115: assegna1_vs_indx_d	<=>	v[indx] <- val
a (5 : 5): [ 0.1712208549059974 0.1712208549059974 0.1712208549059974 0.1712208549059974 0.1712208549059974 ]
ind (0 : 5): [ ]
val = 0


a (5 : 5): [ 0.1712208549059974 0.1712208549059974 0.1712208549059974 0.1712208549059974 0.1712208549059974 ]
------------------------------ Fine assegna1_vs_indx_d

117: assegna1_vs_indx_d	<=>	v[indx] <- val
b (5 : 5): [ 0.8287791450940025 0.8287791450940025 0.8287791450940025 0.8287791450940025 0.8287791450940025 ]
ind (0 : 5): [ ]
val = 0


b (5 : 5): [ 0.8287791450940025 0.8287791450940025 0.8287791450940025 0.8287791450940025 0.8287791450940025 ]
------------------------------ Fine assegna1_vs_indx_d

119: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 0.1712208549059974 0.1712208549059974 0.1712208549059974 0.1712208549059974 0.1712208549059974 ]
b (5 : 5): [ 0.8287791450940025 0.8287791450940025 0.8287791450940025 0.8287791450940025 0.8287791450940025 ]


tmpm_d (5 x 2 : 5 x 2): [
	 0.1712208549059974 0.8287791450940025
	 0.1712208549059974 0.8287791450940025
	 0.1712208549059974 0.8287791450940025
	 0.1712208549059974 0.8287791450940025
	 0.1712208549059974 0.8287791450940025
 ]
------------------------------ Fine cbind2v_d

120: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 0.1712208549059974 0.8287791450940025
	 0.1712208549059974 0.8287791450940025
	 0.1712208549059974 0.8287791450940025
	 0.1712208549059974 0.8287791450940025
	 0.1712208549059974 0.8287791450940025
 ]


m (5 : 5): [ 0.8287791450940025 0.8287791450940025 0.8287791450940025 0.8287791450940025 0.8287791450940025 ]
------------------------------ Fine max_righe_d

122: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (5 : 5): [ 0.1712208549059974 0.1712208549059974 0.1712208549059974 0.1712208549059974 0.1712208549059974 ]
b (5 : 5): [ 0.8287791450940025 0.8287791450940025 0.8287791450940025 0.8287791450940025 0.8287791450940025 ]
m (5 : 5): [ 0.8287791450940025 0.8287791450940025 0.8287791450940025 0.8287791450940025 0.8287791450940025 ]
T2 (5 : 5): [ 0.1712208549059974 0.1712208549059974 0.1712208549059974 0.1712208549059974 0.1712208549059974 ]


S2 (5 : 5): [ -4.840410039705815 -4.840410039705815 -4.840410039705815 -4.840410039705815 -4.840410039705815 ]
------------------------------ Fine f_aux_d

124: diff_vv_d	<=>	ris <- v1 - v2
a (5 : 5): [ 0.1712208549059974 0.1712208549059974 0.1712208549059974 0.1712208549059974 0.1712208549059974 ]
toll2 (5 : 5): [ 1 1 1 1 1 ]


tmp_d1 (5 : 5): [ -0.8287791450940025 -0.8287791450940025 -0.8287791450940025 -0.8287791450940025 -0.8287791450940025 ]
------------------------------ Fine diff_vv_d

125: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (5 : 5): [ -0.8287791450940025 -0.8287791450940025 -0.8287791450940025 -0.8287791450940025 -0.8287791450940025 ]
val = 0

ind1 (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxlt_d

127: diff_vv_d	<=>	ris <- v1 - v2
b (5 : 5): [ 0.8287791450940025 0.8287791450940025 0.8287791450940025 0.8287791450940025 0.8287791450940025 ]
toll2 (5 : 5): [ 1 1 1 1 1 ]


tmp_d1 (5 : 5): [ -0.1712208549059975 -0.1712208549059975 -0.1712208549059975 -0.1712208549059975 -0.1712208549059975 ]
------------------------------ Fine diff_vv_d

128: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (5 : 5): [ -0.1712208549059975 -0.1712208549059975 -0.1712208549059975 -0.1712208549059975 -0.1712208549059975 ]
val = 0


ind2 (0 : 5): [ ]
------------------------------ Fine which_v_indxgt_d

130: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (5 : 5): [ 1 2 3 4 5 ]
ind2 (0 : 5): [ ]
2459: esiste_v_i	<=>	elem %IN% v
elem = 1
ind2 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 1
tmp_i1 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 2
ind2 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 2
tmp_i1 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 3
ind2 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 3
tmp_i1 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 4
ind2 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 4
tmp_i1 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 5
ind2 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 5
tmp_i1 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i



tmp_i1 (0 : 5): [ ]
------------------------------ Fine interseca_i

132: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ -4.840410039705815 -4.840410039705815 -4.840410039705815 -4.840410039705815 -4.840410039705815 ]
tmp_i1 (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ -4.840410039705815 -4.840410039705815 -4.840410039705815 -4.840410039705815 -4.840410039705815 ]
------------------------------ Fine assegna1_vs_indx_d

134: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ -4.840410039705815 -4.840410039705815 -4.840410039705815 -4.840410039705815 -4.840410039705815 ]
ind (0 : 5): [ ]
val = 0


S2 (5 : 5): [ -4.840410039705815 -4.840410039705815 -4.840410039705815 -4.840410039705815 -4.840410039705815 ]
------------------------------ Fine assegna1_vs_indx_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (5 : 5): [ 0.1712208549059974 0.1712208549059974 0.1712208549059974 0.1712208549059974 0.1712208549059974 ]
val = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ -4.840410039705815 -4.840410039705815 -4.840410039705815 -4.840410039705815 -4.840410039705815 ]
ind (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ -4.840410039705815 -4.840410039705815 -4.840410039705815 -4.840410039705815 -4.840410039705815 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (5 : 5): [ 0 0 0 0 0 ]
S2 (5 : 5): [ -4.840410039705815 -4.840410039705815 -4.840410039705815 -4.840410039705815 -4.840410039705815 ]


ris (5 : 5): [ -4.840410039705815 -4.840410039705815 -4.840410039705815 -4.840410039705815 -4.840410039705815 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
ris (5 : 5): [ -4.840410039705815 -4.840410039705815 -4.840410039705815 -4.840410039705815 -4.840410039705815 ]
div = 2.000


ris (5 : 5): [ -2.420205019852908 -2.420205019852908 -2.420205019852908 -2.420205019852908 -2.420205019852908 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (1110 interne); stringhe deallocate: 0 (810 interne)

95: which_v_indxne_d	<=>	ris <- which(v != val)
ris (5 : 5): [ -2.420205019852908 -2.420205019852908 -2.420205019852908 -2.420205019852908 -2.420205019852908 ]
val = -1.#INF


indok (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxne_d

97: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkOUT (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 1
indok (5 : 5): [ 1 2 3 4 5 ]
val = 1


checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_riga_indx_i

104: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 5
incr = 1


tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
------------------------------ Fine seq_i

105: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
indok (5 : 5): [ 1 2 3 4 5 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
st = 1
end = 5


indInf (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (5 : 5): [ 1 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (5 : 5): [ 1 2 3 4 5 ]
indx = 1


indInf (4 : 5): [ 2 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (4 : 5): [ 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (4 : 5): [ 2 3 4 5 ]
indx = 1


indInf (3 : 5): [ 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (3 : 5): [ 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 5): [ 3 4 5 ]
indx = 1


indInf (2 : 5): [ 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 4
indInf (2 : 5): [ 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 5): [ 4 5 ]
indx = 1


indInf (1 : 5): [ 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 5
indInf (1 : 5): [ 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 5): [ 5 ]
indx = 1


indInf (0 : 5): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 5): [ ]
------------------------------ Fine setdiff_i

107: copia_v_indx_d	<=>	ris <- v[indx]
ris (5 : 5): [ -2.420205019852908 -2.420205019852908 -2.420205019852908 -2.420205019852908 -2.420205019852908 ]
indok (5 : 5): [ 1 2 3 4 5 ]


tmp_d1 (5 : 5): [ -2.420205019852908 -2.420205019852908 -2.420205019852908 -2.420205019852908 -2.420205019852908 ]
------------------------------ Fine copia_v_indx_d

111: min_v_d	<=>	ris <- min(v)
tmp_d1 (5 : 5): [ -2.420205019852908 -2.420205019852908 -2.420205019852908 -2.420205019852908 -2.420205019852908 ]


min = -2.420205019852908
------------------------------ Fine min_v_d

112: assegna1_vs_indx_d	<=>	v[indx] <- val
ris (5 : 5): [ -2.420205019852908 -2.420205019852908 -2.420205019852908 -2.420205019852908 -2.420205019852908 ]
indInf (0 : 5): [ ]
val = -3.420205019852908


ris (5 : 5): [ -2.420205019852908 -2.420205019852908 -2.420205019852908 -2.420205019852908 -2.420205019852908 ]
------------------------------ Fine assegna1_vs_indx_d

155: InitVett_d
S_in (5 : 5): [ 3.944992049014702e-316 0 0 0 0 ]
val = 0


S_in (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

156: aggiungi_ms_riga_i	<=>	m[riga,] <- val # riga <= dim(m)[0] + 1
checkIN (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 1, val = 1


checkIN (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_ms_riga_i

159: somma_vv_d	<=>	ris <- v1 + v2
ris (5 : 5): [ -2.420205019852908 -2.420205019852908 -2.420205019852908 -2.420205019852908 -2.420205019852908 ]
S_in (5 : 5): [ 0 0 0 0 0 ]


tmp_d1 (5 : 5): [ -2.420205019852908 -2.420205019852908 -2.420205019852908 -2.420205019852908 -2.420205019852908 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 1
tmp_d1 (5 : 5): [ -2.420205019852908 -2.420205019852908 -2.420205019852908 -2.420205019852908 -2.420205019852908 ]


ris (5 x 5 : 5 x 5): [
	 -2.420205019852908 -2.420205019852908 -2.420205019852908 -2.420205019852908 -2.420205019852908
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_d

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (5 x 3 : 5 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 2


tmp_i1 (0 : 15): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (5 x 3 : 5 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 0


tmp_i2 (0 : 15): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 15): [ ]
tmp_i2 (0 : 15): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

119: InitVett_d
ris (5 : 5): [ -2.420205019852908 -2.420205019852908 -2.420205019852908 -2.420205019852908 -2.420205019852908 ]
val = 0


ris (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

122: InitVett_i
tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
val = 1


tmp_i1 (5 : 15): [ 1 1 1 1 1 ]
------------------------------ Fine InitVett_i

123: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 2
tmp_i1 (5 : 15): [ 1 1 1 1 1 ]


checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_i

128: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 0 0 0 0 ]
h (5 : 5): [ 1 2 3 4 5 ]


tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 2


ind (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 2 2 2 2 2 ]
s = 1


tmp_i1 (5 : 5): [ 3 3 3 3 3 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
tmp_i1 (5 : 5): [ 3 3 3 3 3 ]


T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


old1 (5 : 5): [ 5 5 5 5 5 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 2 2 2 2 2 ]
s = 1


tmp_i1 (5 : 5): [ 3 3 3 3 3 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 3 3 3 3 3 ]


old2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (5 : 5): [ 5 5 5 5 5 ]
s = -1


new1 (5 : 5): [ 4 4 4 4 4 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (5 : 5): [ 0 0 0 0 0 ]
s = 1


new2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


toll1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 2 2 2 2 2 ]
s = 1


tmp_i1 (5 : 5): [ 3 3 3 3 3 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 3 3 3 3 3 ]


toll2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (5 : 5): [ 5 5 5 5 5 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (5 : 5): [ 4 4 4 4 4 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
val = 0


S1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (5 : 5): [ 0 0 0 0 0 ]
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (5 : 5): [ 1 1 1 1 1 ]
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


tmpm_d (5 x 2 : 5 x 2): [
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
 ]


m (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

140: InitVett_d
S2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
val = 0


S2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
val = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 0 0 0 0 0 ]
ind (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (5 : 5): [ 0 0 0 0 0 ]
S2 (5 : 5): [ 0 0 0 0 0 ]


S_in (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
S_in (5 : 5): [ 0 0 0 0 0 ]
div = 2.000


S_in (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (1215 interne); stringhe deallocate: 0 (895 interne)

131: which_v_indxne_d	<=>	ris <- which(v != val)
S_in (5 : 5): [ 0 0 0 0 0 ]
val = -1.#INF


indok (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxne_d

133: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkIN (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 2
indok (5 : 5): [ 1 2 3 4 5 ]
val = 1


checkIN (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_riga_indx_i

141: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 5
incr = 1


tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
------------------------------ Fine seq_i

142: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
indok (5 : 5): [ 1 2 3 4 5 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
st = 1
end = 5


indInf (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (5 : 5): [ 1 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (5 : 5): [ 1 2 3 4 5 ]
indx = 1


indInf (4 : 5): [ 2 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (4 : 5): [ 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (4 : 5): [ 2 3 4 5 ]
indx = 1


indInf (3 : 5): [ 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (3 : 5): [ 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 5): [ 3 4 5 ]
indx = 1


indInf (2 : 5): [ 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 4
indInf (2 : 5): [ 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 5): [ 4 5 ]
indx = 1


indInf (1 : 5): [ 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 5
indInf (1 : 5): [ 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 5): [ 5 ]
indx = 1


indInf (0 : 5): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 5): [ ]
------------------------------ Fine setdiff_i

144: copia_v_indx_d	<=>	ris <- v[indx]
S_in (5 : 5): [ 0 0 0 0 0 ]
indok (5 : 5): [ 1 2 3 4 5 ]


tmp_d1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine copia_v_indx_d

148: min_v_d	<=>	ris <- min(v)
tmp_d1 (5 : 5): [ 0 0 0 0 0 ]


min = 0
------------------------------ Fine min_v_d

149: assegna1_vs_indx_d	<=>	v[indx] <- val
S_in (5 : 5): [ 0 0 0 0 0 ]
indInf (0 : 5): [ ]
val = -1


S_in (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

159: somma_vv_d	<=>	ris <- v1 + v2
ris (5 : 5): [ 0 0 0 0 0 ]
S_in (5 : 5): [ 0 0 0 0 0 ]


tmp_d1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (5 x 5 : 5 x 5): [
	 -2.420205019852908 -2.420205019852908 -2.420205019852908 -2.420205019852908 -2.420205019852908
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 2
tmp_d1 (5 : 5): [ 0 0 0 0 0 ]


ris (5 x 5 : 5 x 5): [
	 -2.420205019852908 -2.420205019852908 -2.420205019852908 -2.420205019852908 -2.420205019852908
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_d

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (5 x 3 : 5 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 2


tmp_i1 (0 : 15): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (5 x 3 : 5 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 1


tmp_i2 (0 : 15): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 15): [ ]
tmp_i2 (0 : 15): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

92: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sout (5 : 5): [ 0 0 0 0 0 ]
h (5 : 5): [ 1 2 3 4 5 ]


tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


ind (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


old1 (5 : 5): [ 5 5 5 5 5 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


old2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (5 : 5): [ 5 5 5 5 5 ]
s = -1


new1 (5 : 5): [ 4 4 4 4 4 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (5 : 5): [ 0 0 0 0 0 ]
s = 1


new2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


toll1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


toll2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (5 : 5): [ 5 5 5 5 5 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (5 : 5): [ 4 4 4 4 4 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (5 : 5): [ 5.000000070918368 5 5 5 5 ]
val = 0


S1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (5 : 5): [ 0 0 0 0 0 ]
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]


a (5 : 5): [ -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 ]


a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (5 : 5): [ 1 1 1 1 1 ]
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]


b (5 : 5): [ -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 ]


b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]


tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]


m (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
complemento = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxNA_d

115: assegna1_vs_indx_d	<=>	v[indx] <- val
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
ind (0 : 5): [ ]
val = 0


a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine assegna1_vs_indx_d

117: assegna1_vs_indx_d	<=>	v[indx] <- val
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
ind (0 : 5): [ ]
val = 0


b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
------------------------------ Fine assegna1_vs_indx_d

119: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]


tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]
------------------------------ Fine cbind2v_d

120: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]


m (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine max_righe_d

122: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
m (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine f_aux_d

124: diff_vv_d	<=>	ris <- v1 - v2
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
toll2 (5 : 5): [ 1 1 1 1 1 ]


tmp_d1 (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
------------------------------ Fine diff_vv_d

125: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
val = 0

ind1 (0 : 5): [ ]
------------------------------ Fine which_v_indxlt_d

127: diff_vv_d	<=>	ris <- v1 - v2
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
toll2 (5 : 5): [ 1 1 1 1 1 ]


tmp_d1 (5 : 5): [ 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 ]
------------------------------ Fine diff_vv_d

128: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (5 : 5): [ 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 ]
val = 0


ind2 (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxgt_d

130: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (0 : 5): [ ]
ind2 (5 : 5): [ 1 2 3 4 5 ]


tmp_i1 (0 : 5): [ ]
------------------------------ Fine interseca_i

132: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
tmp_i1 (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

134: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
ind (0 : 5): [ ]
val = 0


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
val = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
ind (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (5 : 5): [ 0 0 0 0 0 ]
S2 (5 : 5): [ 1 1 1 1 1 ]


ris (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
ris (5 : 5): [ 1 1 1 1 1 ]
div = 2.000


ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (1315 interne); stringhe deallocate: 0 (995 interne)

95: which_v_indxne_d	<=>	ris <- which(v != val)
ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
val = -1.#INF


indok (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxne_d

97: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 3
indok (5 : 5): [ 1 2 3 4 5 ]
val = 1


checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_riga_indx_i

104: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 5
incr = 1


tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
------------------------------ Fine seq_i

105: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
indok (5 : 5): [ 1 2 3 4 5 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
st = 1
end = 5


indInf (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (5 : 5): [ 1 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (5 : 5): [ 1 2 3 4 5 ]
indx = 1


indInf (4 : 5): [ 2 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (4 : 5): [ 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (4 : 5): [ 2 3 4 5 ]
indx = 1


indInf (3 : 5): [ 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (3 : 5): [ 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 5): [ 3 4 5 ]
indx = 1


indInf (2 : 5): [ 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 4
indInf (2 : 5): [ 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 5): [ 4 5 ]
indx = 1


indInf (1 : 5): [ 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 5
indInf (1 : 5): [ 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 5): [ 5 ]
indx = 1


indInf (0 : 5): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 5): [ ]
------------------------------ Fine setdiff_i

107: copia_v_indx_d	<=>	ris <- v[indx]
ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
indok (5 : 5): [ 1 2 3 4 5 ]


tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine copia_v_indx_d

111: min_v_d	<=>	ris <- min(v)
tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]


min = 0.5
------------------------------ Fine min_v_d

112: assegna1_vs_indx_d	<=>	v[indx] <- val
ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
indInf (0 : 5): [ ]
val = -1


ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine assegna1_vs_indx_d

128: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 0 0 0 0 ]
h (5 : 5): [ 1 2 3 4 5 ]


tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 2


ind (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 2 2 2 2 2 ]
s = 1


tmp_i1 (5 : 5): [ 3 3 3 3 3 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
tmp_i1 (5 : 5): [ 3 3 3 3 3 ]


T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


old1 (5 : 5): [ 5 5 5 5 5 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 2 2 2 2 2 ]
s = 1


tmp_i1 (5 : 5): [ 3 3 3 3 3 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 3 3 3 3 3 ]


old2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (5 : 5): [ 5 5 5 5 5 ]
s = -1


new1 (5 : 5): [ 4 4 4 4 4 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (5 : 5): [ 0 0 0 0 0 ]
s = 1


new2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


toll1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 2 2 2 2 2 ]
s = 1


tmp_i1 (5 : 5): [ 3 3 3 3 3 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 3 3 3 3 3 ]


toll2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (5 : 5): [ 5 5 5 5 5 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (5 : 5): [ 4 4 4 4 4 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (5 : 5): [ 5.000000070920557 5 5 5 5 ]
val = 0


S1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (5 : 5): [ 0 0 0 0 0 ]
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (5 : 5): [ 1 1 1 1 1 ]
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


tmpm_d (5 x 2 : 5 x 2): [
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
 ]


m (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

140: InitVett_d
S2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
val = 0


S2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
val = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 0 0 0 0 0 ]
ind (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (5 : 5): [ 0 0 0 0 0 ]
S2 (5 : 5): [ 0 0 0 0 0 ]


S_in (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
S_in (5 : 5): [ 0 0 0 0 0 ]
div = 2.000


S_in (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (1400 interne); stringhe deallocate: 0 (1080 interne)

131: which_v_indxne_d	<=>	ris <- which(v != val)
S_in (5 : 5): [ 0 0 0 0 0 ]
val = -1.#INF


indok (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxne_d

133: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkIN (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 3
indok (5 : 5): [ 1 2 3 4 5 ]
val = 1


checkIN (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_riga_indx_i

141: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 5
incr = 1


tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
------------------------------ Fine seq_i

142: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
indok (5 : 5): [ 1 2 3 4 5 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
st = 1
end = 5


indInf (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (5 : 5): [ 1 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (5 : 5): [ 1 2 3 4 5 ]
indx = 1


indInf (4 : 5): [ 2 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (4 : 5): [ 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (4 : 5): [ 2 3 4 5 ]
indx = 1


indInf (3 : 5): [ 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (3 : 5): [ 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 5): [ 3 4 5 ]
indx = 1


indInf (2 : 5): [ 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 4
indInf (2 : 5): [ 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 5): [ 4 5 ]
indx = 1


indInf (1 : 5): [ 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 5
indInf (1 : 5): [ 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 5): [ 5 ]
indx = 1


indInf (0 : 5): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 5): [ ]
------------------------------ Fine setdiff_i

144: copia_v_indx_d	<=>	ris <- v[indx]
S_in (5 : 5): [ 0 0 0 0 0 ]
indok (5 : 5): [ 1 2 3 4 5 ]


tmp_d1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine copia_v_indx_d

148: min_v_d	<=>	ris <- min(v)
tmp_d1 (5 : 5): [ 0 0 0 0 0 ]


min = 0
------------------------------ Fine min_v_d

149: assegna1_vs_indx_d	<=>	v[indx] <- val
S_in (5 : 5): [ 0 0 0 0 0 ]
indInf (0 : 5): [ ]
val = -1


S_in (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

159: somma_vv_d	<=>	ris <- v1 + v2
ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
S_in (5 : 5): [ 0 0 0 0 0 ]


tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (5 x 5 : 5 x 5): [
	 -2.420205019852908 -2.420205019852908 -2.420205019852908 -2.420205019852908 -2.420205019852908
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 3
tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]


ris (5 x 5 : 5 x 5): [
	 -2.420205019852908 -2.420205019852908 -2.420205019852908 -2.420205019852908 -2.420205019852908
	 0 0 0 0 0
	 0.5 0.5 0.5 0.5 0.5
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_d

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (5 x 3 : 5 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 2


tmp_i1 (0 : 15): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (5 x 3 : 5 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 0


tmp_i2 (0 : 15): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 15): [ ]
tmp_i2 (0 : 15): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

119: InitVett_d
ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
val = 0


ris (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

122: InitVett_i
tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
val = 1


tmp_i1 (5 : 15): [ 1 1 1 1 1 ]
------------------------------ Fine InitVett_i

123: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 4
tmp_i1 (5 : 15): [ 1 1 1 1 1 ]


checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_i

128: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 0 0 0 0 ]
h (5 : 5): [ 1 2 3 4 5 ]


tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 2


ind (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 2 2 2 2 2 ]
s = 1


tmp_i1 (5 : 5): [ 3 3 3 3 3 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
tmp_i1 (5 : 5): [ 3 3 3 3 3 ]


T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


old1 (5 : 5): [ 5 5 5 5 5 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 2 2 2 2 2 ]
s = 1


tmp_i1 (5 : 5): [ 3 3 3 3 3 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 3 3 3 3 3 ]


old2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (5 : 5): [ 5 5 5 5 5 ]
s = -1


new1 (5 : 5): [ 4 4 4 4 4 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (5 : 5): [ 0 0 0 0 0 ]
s = 1


new2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


toll1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 2 2 2 2 2 ]
s = 1


tmp_i1 (5 : 5): [ 3 3 3 3 3 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 3 3 3 3 3 ]


toll2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (5 : 5): [ 5 5 5 5 5 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (5 : 5): [ 4 4 4 4 4 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (5 : 5): [ 5.000000070918127 5 5 5 5 ]
val = 0


S1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (5 : 5): [ 0 0 0 0 0 ]
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (5 : 5): [ 1 1 1 1 1 ]
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


tmpm_d (5 x 2 : 5 x 2): [
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
 ]


m (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

140: InitVett_d
S2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
val = 0


S2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
val = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 0 0 0 0 0 ]
ind (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (5 : 5): [ 0 0 0 0 0 ]
S2 (5 : 5): [ 0 0 0 0 0 ]


S_in (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
S_in (5 : 5): [ 0 0 0 0 0 ]
div = 2.000


S_in (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (1485 interne); stringhe deallocate: 0 (1165 interne)

131: which_v_indxne_d	<=>	ris <- which(v != val)
S_in (5 : 5): [ 0 0 0 0 0 ]
val = -1.#INF


indok (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxne_d

133: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkIN (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 4
indok (5 : 5): [ 1 2 3 4 5 ]
val = 1


checkIN (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_riga_indx_i

141: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 5
incr = 1


tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
------------------------------ Fine seq_i

142: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
indok (5 : 5): [ 1 2 3 4 5 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
st = 1
end = 5


indInf (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (5 : 5): [ 1 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (5 : 5): [ 1 2 3 4 5 ]
indx = 1


indInf (4 : 5): [ 2 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (4 : 5): [ 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (4 : 5): [ 2 3 4 5 ]
indx = 1


indInf (3 : 5): [ 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (3 : 5): [ 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 5): [ 3 4 5 ]
indx = 1


indInf (2 : 5): [ 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 4
indInf (2 : 5): [ 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 5): [ 4 5 ]
indx = 1


indInf (1 : 5): [ 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 5
indInf (1 : 5): [ 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 5): [ 5 ]
indx = 1


indInf (0 : 5): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 5): [ ]
------------------------------ Fine setdiff_i

144: copia_v_indx_d	<=>	ris <- v[indx]
S_in (5 : 5): [ 0 0 0 0 0 ]
indok (5 : 5): [ 1 2 3 4 5 ]


tmp_d1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine copia_v_indx_d

148: min_v_d	<=>	ris <- min(v)
tmp_d1 (5 : 5): [ 0 0 0 0 0 ]


min = 0
------------------------------ Fine min_v_d

149: assegna1_vs_indx_d	<=>	v[indx] <- val
S_in (5 : 5): [ 0 0 0 0 0 ]
indInf (0 : 5): [ ]
val = -1


S_in (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

159: somma_vv_d	<=>	ris <- v1 + v2
ris (5 : 5): [ 0 0 0 0 0 ]
S_in (5 : 5): [ 0 0 0 0 0 ]


tmp_d1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (5 x 5 : 5 x 5): [
	 -2.420205019852908 -2.420205019852908 -2.420205019852908 -2.420205019852908 -2.420205019852908
	 0 0 0 0 0
	 0.5 0.5 0.5 0.5 0.5
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 4
tmp_d1 (5 : 5): [ 0 0 0 0 0 ]


ris (5 x 5 : 5 x 5): [
	 -2.420205019852908 -2.420205019852908 -2.420205019852908 -2.420205019852908 -2.420205019852908
	 0 0 0 0 0
	 0.5 0.5 0.5 0.5 0.5
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_d

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (5 x 3 : 5 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 1


tmp_i1 (0 : 15): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (5 x 3 : 5 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 2


tmp_i2 (0 : 15): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 15): [ ]
tmp_i2 (0 : 15): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

92: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sout (5 : 5): [ 0 0 0 0 0 ]
h (5 : 5): [ 1 2 3 4 5 ]


tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 2


ind (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 2 2 2 2 2 ]
s = 1


tmp_i1 (5 : 5): [ 3 3 3 3 3 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (5 : 5): [ 3 3 3 3 3 ]


T2 (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


old1 (5 : 5): [ 5 5 5 5 5 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 2 2 2 2 2 ]
s = 1


tmp_i1 (5 : 5): [ 3 3 3 3 3 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 3 3 3 3 3 ]


old2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (5 : 5): [ 5 5 5 5 5 ]
s = -1


new1 (5 : 5): [ 4 4 4 4 4 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (5 : 5): [ 0 0 0 0 0 ]
s = 1


new2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


toll1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 2 2 2 2 2 ]
s = 1


tmp_i1 (5 : 5): [ 3 3 3 3 3 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 3 3 3 3 3 ]


toll2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (5 : 5): [ 5 5 5 5 5 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (5 : 5): [ 4 4 4 4 4 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (5 : 5): [ 5.000000070919334 5 5 5 5 ]
val = 0


S1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (5 : 5): [ 0 0 0 0 0 ]
T2 (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]


a (5 : 5): [ -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 ]


a (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (5 : 5): [ 1 1 1 1 1 ]
T2 (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]


b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]


b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]


tmpm_d (5 x 2 : 5 x 2): [
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
 ]


m (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
complemento = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxNA_d

115: assegna1_vs_indx_d	<=>	v[indx] <- val
a (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
ind (0 : 5): [ ]
val = 0


a (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
------------------------------ Fine assegna1_vs_indx_d

117: assegna1_vs_indx_d	<=>	v[indx] <- val
b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]
ind (0 : 5): [ ]
val = 0


b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine assegna1_vs_indx_d

119: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]


tmpm_d (5 x 2 : 5 x 2): [
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
 ]
------------------------------ Fine cbind2v_d

120: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
 ]


m (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
------------------------------ Fine max_righe_d

122: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]
m (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
T2 (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine f_aux_d

124: diff_vv_d	<=>	ris <- v1 - v2
a (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
toll2 (5 : 5): [ 1 1 1 1 1 ]


tmp_d1 (5 : 5): [ -0.2132755425131789 -0.2132755425131789 -0.2132755425131789 -0.2132755425131789 -0.2132755425131789 ]
------------------------------ Fine diff_vv_d

125: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (5 : 5): [ -0.2132755425131789 -0.2132755425131789 -0.2132755425131789 -0.2132755425131789 -0.2132755425131789 ]
val = 0

ind1 (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxlt_d

127: diff_vv_d	<=>	ris <- v1 - v2
b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]
toll2 (5 : 5): [ 1 1 1 1 1 ]


tmp_d1 (5 : 5): [ -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 ]
------------------------------ Fine diff_vv_d

128: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (5 : 5): [ -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 ]
val = 0


ind2 (0 : 5): [ ]
------------------------------ Fine which_v_indxgt_d

130: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (5 : 5): [ 1 2 3 4 5 ]
ind2 (0 : 5): [ ]
2459: esiste_v_i	<=>	elem %IN% v
elem = 1
ind2 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 1
tmp_i1 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 2
ind2 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 2
tmp_i1 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 3
ind2 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 3
tmp_i1 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 4
ind2 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 4
tmp_i1 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 5
ind2 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 5
tmp_i1 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i



tmp_i1 (0 : 5): [ ]
------------------------------ Fine interseca_i

132: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
tmp_i1 (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

134: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
ind (0 : 5): [ ]
val = 0


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
val = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
ind (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (5 : 5): [ 0 0 0 0 0 ]
S2 (5 : 5): [ 1 1 1 1 1 ]


ris (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
ris (5 : 5): [ 1 1 1 1 1 ]
div = 2.000


ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (1585 interne); stringhe deallocate: 0 (1265 interne)

95: which_v_indxne_d	<=>	ris <- which(v != val)
ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
val = -1.#INF


indok (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxne_d

97: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 0 0 0 0 0
 ]
riga = 5
indok (5 : 5): [ 1 2 3 4 5 ]
val = 1


checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
------------------------------ Fine aggiungi_riga_indx_i

104: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 5
incr = 1


tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
------------------------------ Fine seq_i

105: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
indok (5 : 5): [ 1 2 3 4 5 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
st = 1
end = 5


indInf (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (5 : 5): [ 1 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (5 : 5): [ 1 2 3 4 5 ]
indx = 1


indInf (4 : 5): [ 2 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (4 : 5): [ 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (4 : 5): [ 2 3 4 5 ]
indx = 1


indInf (3 : 5): [ 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (3 : 5): [ 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 5): [ 3 4 5 ]
indx = 1


indInf (2 : 5): [ 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 4
indInf (2 : 5): [ 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 5): [ 4 5 ]
indx = 1


indInf (1 : 5): [ 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 5
indInf (1 : 5): [ 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 5): [ 5 ]
indx = 1


indInf (0 : 5): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 5): [ ]
------------------------------ Fine setdiff_i

107: copia_v_indx_d	<=>	ris <- v[indx]
ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
indok (5 : 5): [ 1 2 3 4 5 ]


tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine copia_v_indx_d

111: min_v_d	<=>	ris <- min(v)
tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]


min = 0.5
------------------------------ Fine min_v_d

112: assegna1_vs_indx_d	<=>	v[indx] <- val
ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
indInf (0 : 5): [ ]
val = -1


ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine assegna1_vs_indx_d

128: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 0 0 0 0 ]
h (5 : 5): [ 1 2 3 4 5 ]


tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


ind (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


old1 (5 : 5): [ 5 5 5 5 5 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


old2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (5 : 5): [ 5 5 5 5 5 ]
s = -1


new1 (5 : 5): [ 4 4 4 4 4 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (5 : 5): [ 0 0 0 0 0 ]
s = 1


new2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


toll1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


toll2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (5 : 5): [ 5 5 5 5 5 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (5 : 5): [ 4 4 4 4 4 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (5 : 5): [ 5.000000070918368 5 5 5 5 ]
val = 0


S1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (5 : 5): [ 0 0 0 0 0 ]
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (5 : 5): [ 1 1 1 1 1 ]
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


tmpm_d (5 x 2 : 5 x 2): [
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
 ]


m (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

140: InitVett_d
S2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
val = 0


S2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
val = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 0 0 0 0 0 ]
ind (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (5 : 5): [ 0 0 0 0 0 ]
S2 (5 : 5): [ 0 0 0 0 0 ]


S_in (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
S_in (5 : 5): [ 0 0 0 0 0 ]
div = 2.000


S_in (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (1670 interne); stringhe deallocate: 0 (1350 interne)

131: which_v_indxne_d	<=>	ris <- which(v != val)
S_in (5 : 5): [ 0 0 0 0 0 ]
val = -1.#INF


indok (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxne_d

133: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkIN (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 0 0 0 0 0
 ]
riga = 5
indok (5 : 5): [ 1 2 3 4 5 ]
val = 1


checkIN (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
------------------------------ Fine aggiungi_riga_indx_i

141: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 5
incr = 1


tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
------------------------------ Fine seq_i

142: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
indok (5 : 5): [ 1 2 3 4 5 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
st = 1
end = 5


indInf (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (5 : 5): [ 1 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (5 : 5): [ 1 2 3 4 5 ]
indx = 1


indInf (4 : 5): [ 2 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (4 : 5): [ 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (4 : 5): [ 2 3 4 5 ]
indx = 1


indInf (3 : 5): [ 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (3 : 5): [ 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 5): [ 3 4 5 ]
indx = 1


indInf (2 : 5): [ 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 4
indInf (2 : 5): [ 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 5): [ 4 5 ]
indx = 1


indInf (1 : 5): [ 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 5
indInf (1 : 5): [ 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 5): [ 5 ]
indx = 1


indInf (0 : 5): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 5): [ ]
------------------------------ Fine setdiff_i

144: copia_v_indx_d	<=>	ris <- v[indx]
S_in (5 : 5): [ 0 0 0 0 0 ]
indok (5 : 5): [ 1 2 3 4 5 ]


tmp_d1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine copia_v_indx_d

148: min_v_d	<=>	ris <- min(v)
tmp_d1 (5 : 5): [ 0 0 0 0 0 ]


min = 0
------------------------------ Fine min_v_d

149: assegna1_vs_indx_d	<=>	v[indx] <- val
S_in (5 : 5): [ 0 0 0 0 0 ]
indInf (0 : 5): [ ]
val = -1


S_in (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

159: somma_vv_d	<=>	ris <- v1 + v2
ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
S_in (5 : 5): [ 0 0 0 0 0 ]


tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (5 x 5 : 5 x 5): [
	 -2.420205019852908 -2.420205019852908 -2.420205019852908 -2.420205019852908 -2.420205019852908
	 0 0 0 0 0
	 0.5 0.5 0.5 0.5 0.5
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 5
tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]


ris (5 x 5 : 5 x 5): [
	 -2.420205019852908 -2.420205019852908 -2.420205019852908 -2.420205019852908 -2.420205019852908
	 0 0 0 0 0
	 0.5 0.5 0.5 0.5 0.5
	 0 0 0 0 0
	 0.5 0.5 0.5 0.5 0.5
 ]
------------------------------ Fine aggiungi_mv_riga_d

168: somma_m_d	<=>	ris <- sum(m)
ris (5 x 5 : 5 x 5): [
	 -2.420205019852908 -2.420205019852908 -2.420205019852908 -2.420205019852908 -2.420205019852908
	 0 0 0 0 0
	 0.5 0.5 0.5 0.5 0.5
	 0 0 0 0 0
	 0.5 0.5 0.5 0.5 0.5
 ]


ris: -7.101025099264538
------------------------------ Fine somma_m_d

173: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
checkIN (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]


aus (5 : 5): [ 5 5 5 5 5 ]
------------------------------ Fine somma_colonne_i

175: which_v_indxne_i	<=>	ris <- which(v != val)
aus (5 : 5): [ 5 5 5 5 5 ]
val = 0


tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxne_i

186: somma_righe_i	<=>	ris <- apply(m, 1, sum)
checkIN (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]


rs (5 : 5): [ 5 5 5 5 5 ]
------------------------------ Fine somma_righe_i

188: ordine_i	<=>	ris <- order(v, decreasing=decr)
rs (5 : 5): [ 5 5 5 5 5 ]
decr = 0


ord_ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine ordine_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
r = 1
val = 0


I_add (5 : 25): [ 1 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
I (0 : 0): [ ]
I_add (5 : 25): [ 1 2 3 4 5 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (5 : 5): [ 1 2 3 4 5 ]


ris (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine unione1_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
r = 2
val = 0


I_add (5 : 25): [ 1 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
ris (5 : 5): [ 1 2 3 4 5 ]
I_add (5 : 25): [ 1 2 3 4 5 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (10 : 10): [ 1 2 3 4 5 1 2 3 4 5 ]


ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine unione1_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
r = 3
val = 0


I_add (5 : 25): [ 1 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
ris (5 : 10): [ 1 2 3 4 5 ]
I_add (5 : 25): [ 1 2 3 4 5 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (10 : 10): [ 1 2 3 4 5 1 2 3 4 5 ]


ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine unione1_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
r = 4
val = 0


I_add (5 : 25): [ 1 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
ris (5 : 10): [ 1 2 3 4 5 ]
I_add (5 : 25): [ 1 2 3 4 5 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (10 : 10): [ 1 2 3 4 5 1 2 3 4 5 ]


ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine unione1_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
r = 5
val = 0


I_add (5 : 25): [ 1 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
ris (5 : 10): [ 1 2 3 4 5 ]
I_add (5 : 25): [ 1 2 3 4 5 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (10 : 10): [ 1 2 3 4 5 1 2 3 4 5 ]


ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine unione1_i

216: assegna1_mindxlt_i	<=>	m1[which(m2<val1)] <- val2
checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
val1 = 0
val2 = 0


checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
------------------------------ Fine assegna1_mindxlt_i

218: assegna1_m_indxgt_i	<=>	m1[which(m2>val1)] <- val2
checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
val1 = 0
val2 = 1


checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
------------------------------ Fine assegna1_m_indxgt_i

220: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]


aus (5 : 5): [ 5 5 5 5 5 ]
------------------------------ Fine somma_colonne_i

222: which_v_indxne_i	<=>	ris <- which(v != val)
aus (5 : 5): [ 5 5 5 5 5 ]
val = 0


tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxne_i

232: somma_righe_i	<=>	ris <- apply(m, 1, sum)
checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]


rs (5 : 5): [ 5 5 5 5 5 ]
------------------------------ Fine somma_righe_i

234: ordine_i	<=>	ris <- order(v, decreasing=decr)
rs (5 : 5): [ 5 5 5 5 5 ]
decr = 0


ord_ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine ordine_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
r = 1
val = 0


I_add (5 : 25): [ 1 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (0 : 10): [ ]
I_add (5 : 25): [ 1 2 3 4 5 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (5 : 5): [ 1 2 3 4 5 ]


ris (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine unione1_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
r = 2
val = 0


I_add (5 : 25): [ 1 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (5 : 5): [ 1 2 3 4 5 ]
I_add (5 : 25): [ 1 2 3 4 5 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (10 : 10): [ 1 2 3 4 5 1 2 3 4 5 ]


ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine unione1_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
r = 3
val = 0


I_add (5 : 25): [ 1 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (5 : 10): [ 1 2 3 4 5 ]
I_add (5 : 25): [ 1 2 3 4 5 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (10 : 10): [ 1 2 3 4 5 1 2 3 4 5 ]


ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine unione1_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
r = 4
val = 0


I_add (5 : 25): [ 1 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (5 : 10): [ 1 2 3 4 5 ]
I_add (5 : 25): [ 1 2 3 4 5 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (10 : 10): [ 1 2 3 4 5 1 2 3 4 5 ]


ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine unione1_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
r = 5
val = 0


I_add (5 : 25): [ 1 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (5 : 10): [ 1 2 3 4 5 ]
I_add (5 : 25): [ 1 2 3 4 5 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (10 : 10): [ 1 2 3 4 5 1 2 3 4 5 ]


ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine unione1_i


Stringhe allocate: 5 (1795 interne); stringhe deallocate: 0 (1550 interne)


Stringhe allocate: 5 (1800 interne); stringhe deallocate: 0 (1560 interne)


*** module3 ***
51: seq_i	<=>	ris <- seq(da, a, incr)
da = 2
a = 5
incr = 1


tmp1_i (4 : 4): [ 2 3 4 5 ]
------------------------------ Fine seq_i


*** sampleB ***

***sample***
tmp1_i (4 : 4): [ 2 3 4 5 ]
k = 1, replace = 0


ris (1 : 1): [ 5 ]
*****************************************


Stringhe allocate: 5 (1810 interne); stringhe deallocate: 0 (1560 interne)


Stringhe allocate: 5 (1810 interne); stringhe deallocate: 0 (1560 interne)

54: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 4
incr = 1


tmp1_i (4 : 4): [ 1 2 3 4 ]
------------------------------ Fine seq_i


*** sampleB ***

***sample***
tmp1_i (4 : 4): [ 1 2 3 4 ]
k = 1, replace = 0


ris (1 : 1): [ 4 ]
*****************************************


Stringhe allocate: 5 (1815 interne); stringhe deallocate: 0 (1560 interne)


Stringhe allocate: 5 (1815 interne); stringhe deallocate: 0 (1560 interne)


*** mod3 ***
33: InitMatr_i
ris (5 x 5 : 5 x 5): [
	 79851776 5 3 2 5
	 2 3 5 5 3
	 3 4 3 2 5
	 4 2 2 4 4
	 5 5 4 3 5
 ]
val = 0


ris (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine InitMatr_i

34: copia_v_d	<=>	ris[st:end] <- v[st:end]
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
st = 1
end = 7


STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
------------------------------ Fine copia_v_d

35: copia_v_d	<=>	ris[st:end] <- v[st:end]
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
st = 1
end = 7


STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
------------------------------ Fine copia_v_d

39: segmento_v_d	<=>	ris <- v[st:end]
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
start = 2
end = 2


tmp1_d (1 : 1): [ 3.614836360604185 ]
------------------------------ Fine segmento_v_d

40: somma_v_d	<=>	ris <- sum(v, na.rm=canc_NA)
tmp1_d (1 : 1): [ 3.614836360604185 ]
canc_NA = 1



ris: 3.614836360604185
------------------------------ Fine somma_v_d

43: segmento_v_d	<=>	ris <- v[st:end]
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
start = 2
end = 2


p (1 : 1): [ 3.614836360604185 ]
------------------------------ Fine segmento_v_d

44: dividi1_vs_d	<=>	v <- v / div
p (1 : 1): [ 3.614836360604185 ]
div = 3.615


p (1 : 1): [ 1 ]
------------------------------ Fine dividi1_vs_d

61: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 1
incr = 1


tmp1_i (1 : 1): [ 1 ]
------------------------------ Fine seq_i


*** sampleB_p ***
25: rep_v_i	<=>	ris <- rep(v, rip)
tmp1_i (1 : 1): [ 1 ]
rip = 4


ris (4 : 4): [ 1 1 1 1 ]
------------------------------ Fine rep_v_i

64: somma_v_i	<=>	ris <- sum(v, na.rm=canc_NA)
ris (4 : 4): [ 1 1 1 1 ]
canc_NA = 0



ris: 4
------------------------------ Fine somma_v_i

131: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 1
incr = 1


tmp1_i (1 : 1): [ 1 ]
------------------------------ Fine seq_i

133: assegna1_m_vv_i	<=>	m[vr, vc] <- val
ris (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
tmp1_i (1 : 1): [ 1 ]
scalare_i (1 : 1): [ 2 ]
val = 1


ris (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine assegna1_m_vv_i

135: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 1
incr = 1


indS (1 : 1): [ 1 ]
------------------------------ Fine seq_i

137: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 1
incr = 1


tmp2_i (1 : 1): [ 1 ]
------------------------------ Fine seq_i

138: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp2_i (1 : 1): [ 1 ]
indS (1 : 1): [ 1 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp2_i (1 : 1): [ 1 ]
st = 1
end = 1


indBS (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indBS (1 : 1): [ 1 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indBS (1 : 1): [ 1 ]
indx = 1


indBS (0 : 1): [ ]
------------------------------ Fine elimina1_indx_i



indBS (0 : 1): [ ]
------------------------------ Fine setdiff_i

150: segmento_v_d	<=>	ris <- v[st:end]
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
start = 1
end = 5


tmp1_d (5 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine segmento_v_d

151: somma_v_d	<=>	ris <- sum(v, na.rm=canc_NA)
tmp1_d (5 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
canc_NA = 1



ris: 0
------------------------------ Fine somma_v_d

153: somma_righe_i	<=>	ris <- apply(m, 1, sum)
ris (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]


Sin (5 : 5): [ 1 0 0 0 0 ]
------------------------------ Fine somma_righe_i

206: InitVett_d
p_sc (1 : 1): [ 5.845232708726974e-308 ]
val = 1


p_sc (1 : 1): [ 1 ]
------------------------------ Fine InitVett_d

211: which_v_indxeq_i	<=>	ris <- which(v==val)
tmp1_i (1 : 1): [ 1 ]
val = 5


ind (0 : 1): [ ]
------------------------------ Fine which_v_indxeq_i

213: assegna1_vs_indx_d	<=>	v[indx] <- val
p_sc (1 : 1): [ 1 ]
ind (0 : 1): [ ]
val = 0


p_sc (1 : 1): [ 1 ]
------------------------------ Fine assegna1_vs_indx_d

215: somma_v_d	<=>	ris <- sum(v, na.rm=canc_NA)
p_sc (1 : 1): [ 1 ]
canc_NA = 0



ris: 1
------------------------------ Fine somma_v_d

215: dividi1_vs_d	<=>	v <- v / div
p_sc (1 : 1): [ 1 ]
div = 1.000


p_sc (1 : 1): [ 1 ]
------------------------------ Fine dividi1_vs_d


*** sampleB_p ***
25: rep_v_i	<=>	ris <- rep(v, rip)
indS (1 : 1): [ 1 ]
rip = 1


ris (1 : 1): [ 1 ]
------------------------------ Fine rep_v_i

233: assegna1_m_vv_i	<=>	m[vr, vc] <- val
ris (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
ris (1 : 1): [ 1 ]
scalare_i (1 : 1): [ 3 ]
val = 1


ris (5 x 5 : 5 x 5): [
	 0 1 1 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine assegna1_m_vv_i

150: segmento_v_d	<=>	ris <- v[st:end]
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
start = 1
end = 5


tmp1_d (5 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine segmento_v_d

151: somma_v_d	<=>	ris <- sum(v, na.rm=canc_NA)
tmp1_d (5 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
canc_NA = 1



ris: 0
------------------------------ Fine somma_v_d

153: somma_righe_i	<=>	ris <- apply(m, 1, sum)
ris (5 x 5 : 5 x 5): [
	 0 1 1 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]


Sin (5 : 5): [ 2 0 0 0 0 ]
------------------------------ Fine somma_righe_i

206: InitVett_d
p_sc (1 : 1): [ 1 ]
val = 1


p_sc (1 : 1): [ 1 ]
------------------------------ Fine InitVett_d

211: which_v_indxeq_i	<=>	ris <- which(v==val)
tmp1_i (1 : 1): [ 1 ]
val = 5


ind (0 : 1): [ ]
------------------------------ Fine which_v_indxeq_i

213: assegna1_vs_indx_d	<=>	v[indx] <- val
p_sc (1 : 1): [ 1 ]
ind (0 : 1): [ ]
val = 0


p_sc (1 : 1): [ 1 ]
------------------------------ Fine assegna1_vs_indx_d

215: somma_v_d	<=>	ris <- sum(v, na.rm=canc_NA)
p_sc (1 : 1): [ 1 ]
canc_NA = 0



ris: 1
------------------------------ Fine somma_v_d

215: dividi1_vs_d	<=>	v <- v / div
p_sc (1 : 1): [ 1 ]
div = 1.000


p_sc (1 : 1): [ 1 ]
------------------------------ Fine dividi1_vs_d


*** sampleB_p ***
25: rep_v_i	<=>	ris <- rep(v, rip)
indS (1 : 1): [ 1 ]
rip = 1


ris (1 : 1): [ 1 ]
------------------------------ Fine rep_v_i

233: assegna1_m_vv_i	<=>	m[vr, vc] <- val
ris (5 x 5 : 5 x 5): [
	 0 1 1 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
ris (1 : 1): [ 1 ]
scalare_i (1 : 1): [ 4 ]
val = 1


ris (5 x 5 : 5 x 5): [
	 0 1 1 1 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine assegna1_m_vv_i

150: segmento_v_d	<=>	ris <- v[st:end]
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
start = 1
end = 5


tmp1_d (5 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine segmento_v_d

151: somma_v_d	<=>	ris <- sum(v, na.rm=canc_NA)
tmp1_d (5 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
canc_NA = 1



ris: 0
------------------------------ Fine somma_v_d

153: somma_righe_i	<=>	ris <- apply(m, 1, sum)
ris (5 x 5 : 5 x 5): [
	 0 1 1 1 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]


Sin (5 : 5): [ 3 0 0 0 0 ]
------------------------------ Fine somma_righe_i

206: InitVett_d
p_sc (1 : 1): [ 1 ]
val = 1


p_sc (1 : 1): [ 1 ]
------------------------------ Fine InitVett_d

211: which_v_indxeq_i	<=>	ris <- which(v==val)
tmp1_i (1 : 1): [ 1 ]
val = 5


ind (0 : 1): [ ]
------------------------------ Fine which_v_indxeq_i

213: assegna1_vs_indx_d	<=>	v[indx] <- val
p_sc (1 : 1): [ 1 ]
ind (0 : 1): [ ]
val = 0


p_sc (1 : 1): [ 1 ]
------------------------------ Fine assegna1_vs_indx_d

215: somma_v_d	<=>	ris <- sum(v, na.rm=canc_NA)
p_sc (1 : 1): [ 1 ]
canc_NA = 0



ris: 1
------------------------------ Fine somma_v_d

215: dividi1_vs_d	<=>	v <- v / div
p_sc (1 : 1): [ 1 ]
div = 1.000


p_sc (1 : 1): [ 1 ]
------------------------------ Fine dividi1_vs_d


*** sampleB_p ***
25: rep_v_i	<=>	ris <- rep(v, rip)
indS (1 : 1): [ 1 ]
rip = 1


ris (1 : 1): [ 1 ]
------------------------------ Fine rep_v_i

233: assegna1_m_vv_i	<=>	m[vr, vc] <- val
ris (5 x 5 : 5 x 5): [
	 0 1 1 1 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
ris (1 : 1): [ 1 ]
scalare_i (1 : 1): [ 5 ]
val = 1


ris (5 x 5 : 5 x 5): [
	 0 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine assegna1_m_vv_i


*** triangola ***
27: diag_i	<=>	ris <- diag(m)
ris (5 x 5 : 5 x 5): [
	 0 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]


Dmem (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine diag_i

29: assegna1_s_diag_i	<=>	diag_i(m) <- s
ris (5 x 5 : 5 x 5): [
	 0 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
val = 0


ris (5 x 5 : 5 x 5): [
	 0 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine assegna1_s_diag_i

33: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
ris (5 x 5 : 5 x 5): [
	 0 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
r = 1
val = 0


tmp1_i (4 : 25): [ 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

34: which_m_colindxne_i	<=>	ris <- which(m[, c] != val)
ris (5 x 5 : 5 x 5): [
	 0 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
c = 1, val = 0


tmp2_i (0 : 25): [ ]
------------------------------ Fine which_m_colindxne_i

35: unione_i	<=>	ris <- union(v1, v2)
tmp1_i (4 : 25): [ 2 3 4 5 ]
tmp2_i (0 : 25): [ ]
4876: elimina_doppi_i	<=>	ris <- union(v, v)
ind (4 : 4): [ 2 3 4 5 ]


ris (4 : 4): [ 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (4 : 4): [ 2 3 4 5 ]
------------------------------ Fine unione_i

55: InitMatr_i
coord (1 x 2 : 2 x 2): [
	 79854408 1819240302
 ]
val = 0


coord (1 x 2 : 2 x 2): [
	 0 0
 ]
------------------------------ Fine InitMatr_i

72: vettore2s_i		<=>	ris <- c(el1, el2)
el1 = 2, el2 = 3


tmp1_i (2 : 25): [ 2 3 ]
------------------------------ Fine vettore2s_i

73: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
coord (1 x 2 : 2 x 2): [
	 0 0
 ]
riga = 2
tmp1_i (2 : 25): [ 2 3 ]


coord (2 x 2 : 2 x 2): [
	 0 0
	 2 3
 ]
------------------------------ Fine aggiungi_mv_riga_i

74: vettore2s_i		<=>	ris <- c(el1, el2)
el1 = 3, el2 = 2


tmp1_i (2 : 25): [ 3 2 ]
------------------------------ Fine vettore2s_i

76: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
coord (2 x 2 : 2 x 2): [
	 0 0
	 2 3
 ]
riga = 3
tmp1_i (2 : 25): [ 3 2 ]


coord (3 x 2 : 3 x 2): [
	 0 0
	 2 3
	 3 2
 ]
------------------------------ Fine aggiungi_mv_riga_i

72: vettore2s_i		<=>	ris <- c(el1, el2)
el1 = 2, el2 = 4


tmp1_i (2 : 25): [ 2 4 ]
------------------------------ Fine vettore2s_i

73: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
coord (3 x 2 : 3 x 2): [
	 0 0
	 2 3
	 3 2
 ]
riga = 4
tmp1_i (2 : 25): [ 2 4 ]


coord (4 x 2 : 4 x 2): [
	 0 0
	 2 3
	 3 2
	 2 4
 ]
------------------------------ Fine aggiungi_mv_riga_i

74: vettore2s_i		<=>	ris <- c(el1, el2)
el1 = 4, el2 = 2


tmp1_i (2 : 25): [ 4 2 ]
------------------------------ Fine vettore2s_i

76: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
coord (4 x 2 : 4 x 2): [
	 0 0
	 2 3
	 3 2
	 2 4
 ]
riga = 5
tmp1_i (2 : 25): [ 4 2 ]


coord (5 x 2 : 5 x 2): [
	 0 0
	 2 3
	 3 2
	 2 4
	 4 2
 ]
------------------------------ Fine aggiungi_mv_riga_i

72: vettore2s_i		<=>	ris <- c(el1, el2)
el1 = 2, el2 = 5


tmp1_i (2 : 25): [ 2 5 ]
------------------------------ Fine vettore2s_i

73: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
coord (5 x 2 : 5 x 2): [
	 0 0
	 2 3
	 3 2
	 2 4
	 4 2
 ]
riga = 6
tmp1_i (2 : 25): [ 2 5 ]


coord (6 x 2 : 6 x 2): [
	 0 0
	 2 3
	 3 2
	 2 4
	 4 2
	 2 5
 ]
------------------------------ Fine aggiungi_mv_riga_i

74: vettore2s_i		<=>	ris <- c(el1, el2)
el1 = 5, el2 = 2


tmp1_i (2 : 25): [ 5 2 ]
------------------------------ Fine vettore2s_i

76: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
coord (6 x 2 : 6 x 2): [
	 0 0
	 2 3
	 3 2
	 2 4
	 4 2
	 2 5
 ]
riga = 7
tmp1_i (2 : 25): [ 5 2 ]


coord (7 x 2 : 7 x 2): [
	 0 0
	 2 3
	 3 2
	 2 4
	 4 2
	 2 5
	 5 2
 ]
------------------------------ Fine aggiungi_mv_riga_i

72: vettore2s_i		<=>	ris <- c(el1, el2)
el1 = 3, el2 = 4


tmp1_i (2 : 25): [ 3 4 ]
------------------------------ Fine vettore2s_i

73: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
coord (7 x 2 : 7 x 2): [
	 0 0
	 2 3
	 3 2
	 2 4
	 4 2
	 2 5
	 5 2
 ]
riga = 8
tmp1_i (2 : 25): [ 3 4 ]


coord (8 x 2 : 8 x 2): [
	 0 0
	 2 3
	 3 2
	 2 4
	 4 2
	 2 5
	 5 2
	 3 4
 ]
------------------------------ Fine aggiungi_mv_riga_i

74: vettore2s_i		<=>	ris <- c(el1, el2)
el1 = 4, el2 = 3


tmp1_i (2 : 25): [ 4 3 ]
------------------------------ Fine vettore2s_i

76: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
coord (8 x 2 : 8 x 2): [
	 0 0
	 2 3
	 3 2
	 2 4
	 4 2
	 2 5
	 5 2
	 3 4
 ]
riga = 9
tmp1_i (2 : 25): [ 4 3 ]


coord (9 x 2 : 9 x 2): [
	 0 0
	 2 3
	 3 2
	 2 4
	 4 2
	 2 5
	 5 2
	 3 4
	 4 3
 ]
------------------------------ Fine aggiungi_mv_riga_i

72: vettore2s_i		<=>	ris <- c(el1, el2)
el1 = 3, el2 = 5


tmp1_i (2 : 25): [ 3 5 ]
------------------------------ Fine vettore2s_i

73: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
coord (9 x 2 : 9 x 2): [
	 0 0
	 2 3
	 3 2
	 2 4
	 4 2
	 2 5
	 5 2
	 3 4
	 4 3
 ]
riga = 10
tmp1_i (2 : 25): [ 3 5 ]


coord (10 x 2 : 10 x 2): [
	 0 0
	 2 3
	 3 2
	 2 4
	 4 2
	 2 5
	 5 2
	 3 4
	 4 3
	 3 5
 ]
------------------------------ Fine aggiungi_mv_riga_i

74: vettore2s_i		<=>	ris <- c(el1, el2)
el1 = 5, el2 = 3


tmp1_i (2 : 25): [ 5 3 ]
------------------------------ Fine vettore2s_i

76: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
coord (10 x 2 : 10 x 2): [
	 0 0
	 2 3
	 3 2
	 2 4
	 4 2
	 2 5
	 5 2
	 3 4
	 4 3
	 3 5
 ]
riga = 11
tmp1_i (2 : 25): [ 5 3 ]


coord (11 x 2 : 11 x 2): [
	 0 0
	 2 3
	 3 2
	 2 4
	 4 2
	 2 5
	 5 2
	 3 4
	 4 3
	 3 5
	 5 3
 ]
------------------------------ Fine aggiungi_mv_riga_i

72: vettore2s_i		<=>	ris <- c(el1, el2)
el1 = 4, el2 = 5


tmp1_i (2 : 25): [ 4 5 ]
------------------------------ Fine vettore2s_i

73: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
coord (11 x 2 : 11 x 2): [
	 0 0
	 2 3
	 3 2
	 2 4
	 4 2
	 2 5
	 5 2
	 3 4
	 4 3
	 3 5
	 5 3
 ]
riga = 12
tmp1_i (2 : 25): [ 4 5 ]


coord (12 x 2 : 12 x 2): [
	 0 0
	 2 3
	 3 2
	 2 4
	 4 2
	 2 5
	 5 2
	 3 4
	 4 3
	 3 5
	 5 3
	 4 5
 ]
------------------------------ Fine aggiungi_mv_riga_i

74: vettore2s_i		<=>	ris <- c(el1, el2)
el1 = 5, el2 = 4


tmp1_i (2 : 25): [ 5 4 ]
------------------------------ Fine vettore2s_i

76: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
coord (12 x 2 : 12 x 2): [
	 0 0
	 2 3
	 3 2
	 2 4
	 4 2
	 2 5
	 5 2
	 3 4
	 4 3
	 3 5
	 5 3
	 4 5
 ]
riga = 13
tmp1_i (2 : 25): [ 5 4 ]


coord (13 x 2 : 13 x 2): [
	 0 0
	 2 3
	 3 2
	 2 4
	 4 2
	 2 5
	 5 2
	 3 4
	 4 3
	 3 5
	 5 3
	 4 5
	 5 4
 ]
------------------------------ Fine aggiungi_mv_riga_i

89: somma_righe_i	<=>	ris <- apply(m, 1, sum)
ris (5 x 5 : 5 x 5): [
	 0 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]


M_in (5 : 5): [ 4 0 0 0 0 ]
------------------------------ Fine somma_righe_i

91: which_v_indxlt_i	<=>	ris <- which(v<val)
M_in (5 : 5): [ 4 0 0 0 0 ]
val = 5

ris (5 : 13): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxlt_i

95: which_m_colindxin_i	<=>	ris <- which(m[, c] %IN% v)
coord (13 x 2 : 13 x 2): [
	 0 0
	 2 3
	 3 2
	 2 4
	 4 2
	 2 5
	 5 2
	 3 4
	 4 3
	 3 5
	 5 3
	 4 5
	 5 4
 ]
c = 1
ris (5 : 13): [ 1 2 3 4 5 ]
3754: esiste_v_i	<=>	elem %IN% v
elem = 0
ris (5 : 13): [ 1 2 3 4 5 ]


indx = 0
------------------------------ Fine esiste_v_i

3754: esiste_v_i	<=>	elem %IN% v
elem = 2
ris (5 : 13): [ 1 2 3 4 5 ]


indx = 2
------------------------------ Fine esiste_v_i

3754: esiste_v_i	<=>	elem %IN% v
elem = 3
ris (5 : 13): [ 1 2 3 4 5 ]


indx = 3
------------------------------ Fine esiste_v_i

3754: esiste_v_i	<=>	elem %IN% v
elem = 2
ris (5 : 13): [ 1 2 3 4 5 ]


indx = 2
------------------------------ Fine esiste_v_i

3754: esiste_v_i	<=>	elem %IN% v
elem = 4
ris (5 : 13): [ 1 2 3 4 5 ]


indx = 4
------------------------------ Fine esiste_v_i

3754: esiste_v_i	<=>	elem %IN% v
elem = 2
ris (5 : 13): [ 1 2 3 4 5 ]


indx = 2
------------------------------ Fine esiste_v_i

3754: esiste_v_i	<=>	elem %IN% v
elem = 5
ris (5 : 13): [ 1 2 3 4 5 ]


indx = 5
------------------------------ Fine esiste_v_i

3754: esiste_v_i	<=>	elem %IN% v
elem = 3
ris (5 : 13): [ 1 2 3 4 5 ]


indx = 3
------------------------------ Fine esiste_v_i

3754: esiste_v_i	<=>	elem %IN% v
elem = 4
ris (5 : 13): [ 1 2 3 4 5 ]


indx = 4
------------------------------ Fine esiste_v_i

3754: esiste_v_i	<=>	elem %IN% v
elem = 3
ris (5 : 13): [ 1 2 3 4 5 ]


indx = 3
------------------------------ Fine esiste_v_i

3754: esiste_v_i	<=>	elem %IN% v
elem = 5
ris (5 : 13): [ 1 2 3 4 5 ]


indx = 5
------------------------------ Fine esiste_v_i

3754: esiste_v_i	<=>	elem %IN% v
elem = 4
ris (5 : 13): [ 1 2 3 4 5 ]


indx = 4
------------------------------ Fine esiste_v_i

3754: esiste_v_i	<=>	elem %IN% v
elem = 5
ris (5 : 13): [ 1 2 3 4 5 ]


indx = 5
------------------------------ Fine esiste_v_i



ind_aus (12 : 13): [ 2 3 4 5 6 7 8 9 10 11 12 13 ]
------------------------------ Fine which_m_colindxin_i

101: righe_i	<=>	ris <- m[indx,]
coord (13 x 2 : 13 x 2): [
	 0 0
	 2 3
	 3 2
	 2 4
	 4 2
	 2 5
	 5 2
	 3 4
	 4 3
	 3 5
	 5 3
	 4 5
	 5 4
 ]
ind_aus (12 : 13): [ 2 3 4 5 6 7 8 9 10 11 12 13 ]



tmp_coord1 (12 x 2 : 12 x 2): [
	 2 3
	 3 2
	 2 4
	 4 2
	 2 5
	 5 2
	 3 4
	 4 3
	 3 5
	 5 3
	 4 5
	 5 4
 ]
------------------------------ Fine righe_i

102: copia_m_i	<=>	ris <- da
tmp_coord1 (12 x 2 : 12 x 2): [
	 2 3
	 3 2
	 2 4
	 4 2
	 2 5
	 5 2
	 3 4
	 4 3
	 3 5
	 5 3
	 4 5
	 5 4
 ]


coord (12 x 2 : 13 x 2): [
	 2 3
	 3 2
	 2 4
	 4 2
	 2 5
	 5 2
	 3 4
	 4 3
	 3 5
	 5 3
	 4 5
	 5 4
 ]
------------------------------ Fine copia_m_i

104: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 12
incr = 1


tmp1_i (12 : 25): [ 1 2 3 4 5 6 7 8 9 10 11 12 ]
------------------------------ Fine seq_i


*** sampleB ***

***sample***
tmp1_i (12 : 25): [ 1 2 3 4 5 6 7 8 9 10 11 12 ]
k = 1, replace = 0


ris (1 : 1): [ 12 ]
*****************************************


Stringhe allocate: 5 (2010 interne); stringhe deallocate: 0 (1625 interne)


Stringhe allocate: 5 (2010 interne); stringhe deallocate: 0 (1625 interne)

107: riga_i	<=>	ris <- m[r,]
coord (12 x 2 : 13 x 2): [
	 2 3
	 3 2
	 2 4
	 4 2
	 2 5
	 5 2
	 3 4
	 4 3
	 3 5
	 5 3
	 4 5
	 5 4
 ]
r = 12

coord_ind (2 : 2): [ 5 4 ]
------------------------------ Fine riga_i

111: which_m_colneand2_i	<=>	ris <- which((m[, c] != val1) & (m[, c] != val2))
coord (12 x 2 : 13 x 2): [
	 2 3
	 3 2
	 2 4
	 4 2
	 2 5
	 5 2
	 3 4
	 4 3
	 3 5
	 5 3
	 4 5
	 5 4
 ]
c = 1, val1 = 5, val2 = 4


ris (6 : 50): [ 1 2 3 5 7 9 ]
------------------------------ Fine which_m_colneand2_i

114: righe_i	<=>	ris <- m[indx,]
coord (12 x 2 : 13 x 2): [
	 2 3
	 3 2
	 2 4
	 4 2
	 2 5
	 5 2
	 3 4
	 4 3
	 3 5
	 5 3
	 4 5
	 5 4
 ]
ris (6 : 50): [ 1 2 3 5 7 9 ]



tmp_coord1 (6 x 2 : 12 x 2): [
	 2 3
	 3 2
	 2 4
	 2 5
	 3 4
	 3 5
 ]
------------------------------ Fine righe_i

115: copia_m_i	<=>	ris <- da
tmp_coord1 (6 x 2 : 12 x 2): [
	 2 3
	 3 2
	 2 4
	 2 5
	 3 4
	 3 5
 ]


coord (6 x 2 : 13 x 2): [
	 2 3
	 3 2
	 2 4
	 2 5
	 3 4
	 3 5
 ]
------------------------------ Fine copia_m_i

89: somma_righe_i	<=>	ris <- apply(m, 1, sum)
ris (5 x 5 : 5 x 5): [
	 0 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 1 0
 ]


M_in (5 : 5): [ 4 0 0 0 1 ]
------------------------------ Fine somma_righe_i

91: which_v_indxlt_i	<=>	ris <- which(v<val)
M_in (5 : 5): [ 4 0 0 0 1 ]
val = 5

ris (5 : 50): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxlt_i

95: which_m_colindxin_i	<=>	ris <- which(m[, c] %IN% v)
coord (6 x 2 : 13 x 2): [
	 2 3
	 3 2
	 2 4
	 2 5
	 3 4
	 3 5
 ]
c = 1
ris (5 : 50): [ 1 2 3 4 5 ]
3754: esiste_v_i	<=>	elem %IN% v
elem = 2
ris (5 : 50): [ 1 2 3 4 5 ]


indx = 2
------------------------------ Fine esiste_v_i

3754: esiste_v_i	<=>	elem %IN% v
elem = 3
ris (5 : 50): [ 1 2 3 4 5 ]


indx = 3
------------------------------ Fine esiste_v_i

3754: esiste_v_i	<=>	elem %IN% v
elem = 2
ris (5 : 50): [ 1 2 3 4 5 ]


indx = 2
------------------------------ Fine esiste_v_i

3754: esiste_v_i	<=>	elem %IN% v
elem = 2
ris (5 : 50): [ 1 2 3 4 5 ]


indx = 2
------------------------------ Fine esiste_v_i

3754: esiste_v_i	<=>	elem %IN% v
elem = 3
ris (5 : 50): [ 1 2 3 4 5 ]


indx = 3
------------------------------ Fine esiste_v_i

3754: esiste_v_i	<=>	elem %IN% v
elem = 3
ris (5 : 50): [ 1 2 3 4 5 ]


indx = 3
------------------------------ Fine esiste_v_i



ind_aus (6 : 13): [ 1 2 3 4 5 6 ]
------------------------------ Fine which_m_colindxin_i

101: righe_i	<=>	ris <- m[indx,]
coord (6 x 2 : 13 x 2): [
	 2 3
	 3 2
	 2 4
	 2 5
	 3 4
	 3 5
 ]
ind_aus (6 : 13): [ 1 2 3 4 5 6 ]



tmp_coord1 (6 x 2 : 12 x 2): [
	 2 3
	 3 2
	 2 4
	 2 5
	 3 4
	 3 5
 ]
------------------------------ Fine righe_i

102: copia_m_i	<=>	ris <- da
tmp_coord1 (6 x 2 : 12 x 2): [
	 2 3
	 3 2
	 2 4
	 2 5
	 3 4
	 3 5
 ]


coord (6 x 2 : 13 x 2): [
	 2 3
	 3 2
	 2 4
	 2 5
	 3 4
	 3 5
 ]
------------------------------ Fine copia_m_i

104: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 6
incr = 1


tmp1_i (6 : 25): [ 1 2 3 4 5 6 ]
------------------------------ Fine seq_i


*** sampleB ***

***sample***
tmp1_i (6 : 25): [ 1 2 3 4 5 6 ]
k = 1, replace = 0


ris (1 : 1): [ 3 ]
*****************************************


Stringhe allocate: 5 (2015 interne); stringhe deallocate: 0 (1625 interne)


Stringhe allocate: 5 (2015 interne); stringhe deallocate: 0 (1625 interne)

107: riga_i	<=>	ris <- m[r,]
coord (6 x 2 : 13 x 2): [
	 2 3
	 3 2
	 2 4
	 2 5
	 3 4
	 3 5
 ]
r = 3

coord_ind (2 : 2): [ 2 4 ]
------------------------------ Fine riga_i

111: which_m_colneand2_i	<=>	ris <- which((m[, c] != val1) & (m[, c] != val2))
coord (6 x 2 : 13 x 2): [
	 2 3
	 3 2
	 2 4
	 2 5
	 3 4
	 3 5
 ]
c = 1, val1 = 2, val2 = 4


ris (3 : 50): [ 2 5 6 ]
------------------------------ Fine which_m_colneand2_i

114: righe_i	<=>	ris <- m[indx,]
coord (6 x 2 : 13 x 2): [
	 2 3
	 3 2
	 2 4
	 2 5
	 3 4
	 3 5
 ]
ris (3 : 50): [ 2 5 6 ]



tmp_coord1 (3 x 2 : 12 x 2): [
	 3 2
	 3 4
	 3 5
 ]
------------------------------ Fine righe_i

115: copia_m_i	<=>	ris <- da
tmp_coord1 (3 x 2 : 12 x 2): [
	 3 2
	 3 4
	 3 5
 ]


coord (3 x 2 : 13 x 2): [
	 3 2
	 3 4
	 3 5
 ]
------------------------------ Fine copia_m_i

33: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
ris (5 x 5 : 5 x 5): [
	 0 1 1 1 1
	 0 0 0 1 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 1 0
 ]
r = 2
val = 0


tmp1_i (1 : 25): [ 4 ]
------------------------------ Fine which_m_rowindxne_i

34: which_m_colindxne_i	<=>	ris <- which(m[, c] != val)
ris (5 x 5 : 5 x 5): [
	 0 1 1 1 1
	 0 0 0 1 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 1 0
 ]
c = 2, val = 0


tmp2_i (1 : 25): [ 1 ]
------------------------------ Fine which_m_colindxne_i

35: unione_i	<=>	ris <- union(v1, v2)
tmp1_i (1 : 25): [ 4 ]
tmp2_i (1 : 25): [ 1 ]
4876: elimina_doppi_i	<=>	ris <- union(v, v)
ind (2 : 2): [ 4 1 ]


ris (2 : 50): [ 4 1 ]
------------------------------ Fine elimina_doppi_i



ris (2 : 50): [ 4 1 ]
------------------------------ Fine unione_i

33: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
ris (5 x 5 : 5 x 5): [
	 0 1 1 1 1
	 0 0 0 1 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 1 0
 ]
r = 3
val = 0


tmp1_i (0 : 25): [ ]
------------------------------ Fine which_m_rowindxne_i

34: which_m_colindxne_i	<=>	ris <- which(m[, c] != val)
ris (5 x 5 : 5 x 5): [
	 0 1 1 1 1
	 0 0 0 1 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 1 0
 ]
c = 3, val = 0


tmp2_i (1 : 25): [ 1 ]
------------------------------ Fine which_m_colindxne_i

35: unione_i	<=>	ris <- union(v1, v2)
tmp1_i (0 : 25): [ ]
tmp2_i (1 : 25): [ 1 ]
4876: elimina_doppi_i	<=>	ris <- union(v, v)
ind (1 : 1): [ 1 ]


ris (1 : 50): [ 1 ]
------------------------------ Fine elimina_doppi_i



ris (1 : 50): [ 1 ]
------------------------------ Fine unione_i

33: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
ris (5 x 5 : 5 x 5): [
	 0 1 1 1 1
	 0 0 0 1 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 1 0
 ]
r = 4
val = 0


tmp1_i (0 : 25): [ ]
------------------------------ Fine which_m_rowindxne_i

34: which_m_colindxne_i	<=>	ris <- which(m[, c] != val)
ris (5 x 5 : 5 x 5): [
	 0 1 1 1 1
	 0 0 0 1 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 1 0
 ]
c = 4, val = 0


tmp2_i (3 : 25): [ 1 2 5 ]
------------------------------ Fine which_m_colindxne_i

35: unione_i	<=>	ris <- union(v1, v2)
tmp1_i (0 : 25): [ ]
tmp2_i (3 : 25): [ 1 2 5 ]
4876: elimina_doppi_i	<=>	ris <- union(v, v)
ind (3 : 3): [ 1 2 5 ]


ris (3 : 50): [ 1 2 5 ]
------------------------------ Fine elimina_doppi_i



ris (3 : 50): [ 1 2 5 ]
------------------------------ Fine unione_i

55: InitMatr_i
coord (1 x 2 : 13 x 2): [
	 3 3
 ]
val = 0


coord (1 x 2 : 13 x 2): [
	 0 0
 ]
------------------------------ Fine InitMatr_i

72: vettore2s_i		<=>	ris <- c(el1, el2)
el1 = 2, el2 = 5


tmp1_i (2 : 25): [ 2 5 ]
------------------------------ Fine vettore2s_i

73: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
coord (1 x 2 : 13 x 2): [
	 0 0
 ]
riga = 2
tmp1_i (2 : 25): [ 2 5 ]


coord (2 x 2 : 2 x 2): [
	 0 0
	 2 5
 ]
------------------------------ Fine aggiungi_mv_riga_i

74: vettore2s_i		<=>	ris <- c(el1, el2)
el1 = 5, el2 = 2


tmp1_i (2 : 25): [ 5 2 ]
------------------------------ Fine vettore2s_i

76: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
coord (2 x 2 : 2 x 2): [
	 0 0
	 2 5
 ]
riga = 3
tmp1_i (2 : 25): [ 5 2 ]


coord (3 x 2 : 3 x 2): [
	 0 0
	 2 5
	 5 2
 ]
------------------------------ Fine aggiungi_mv_riga_i

33: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
ris (5 x 5 : 5 x 5): [
	 0 1 1 1 1
	 0 0 0 1 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 1 0
 ]
r = 5
val = 0


tmp1_i (1 : 25): [ 4 ]
------------------------------ Fine which_m_rowindxne_i

34: which_m_colindxne_i	<=>	ris <- which(m[, c] != val)
ris (5 x 5 : 5 x 5): [
	 0 1 1 1 1
	 0 0 0 1 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 1 0
 ]
c = 5, val = 0


tmp2_i (1 : 25): [ 1 ]
------------------------------ Fine which_m_colindxne_i

35: unione_i	<=>	ris <- union(v1, v2)
tmp1_i (1 : 25): [ 4 ]
tmp2_i (1 : 25): [ 1 ]
4876: elimina_doppi_i	<=>	ris <- union(v, v)
ind (2 : 2): [ 4 1 ]


ris (2 : 50): [ 4 1 ]
------------------------------ Fine elimina_doppi_i



ris (2 : 50): [ 4 1 ]
------------------------------ Fine unione_i

55: InitMatr_i
coord (1 x 2 : 3 x 2): [
	 0 2
 ]
val = 0


coord (1 x 2 : 3 x 2): [
	 0 0
 ]
------------------------------ Fine InitMatr_i

89: somma_righe_i	<=>	ris <- apply(m, 1, sum)
ris (5 x 5 : 5 x 5): [
	 0 1 1 1 1
	 0 0 0 1 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 1 0
 ]


M_in (5 : 5): [ 4 1 0 0 1 ]
------------------------------ Fine somma_righe_i

91: which_v_indxlt_i	<=>	ris <- which(v<val)
M_in (5 : 5): [ 4 1 0 0 1 ]
val = 5

ris (5 : 50): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxlt_i

95: which_m_colindxin_i	<=>	ris <- which(m[, c] %IN% v)
coord (1 x 2 : 3 x 2): [
	 0 0
 ]
c = 1
ris (5 : 50): [ 1 2 3 4 5 ]
3754: esiste_v_i	<=>	elem %IN% v
elem = 0
ris (5 : 50): [ 1 2 3 4 5 ]


indx = 0
------------------------------ Fine esiste_v_i



ind_aus (0 : 13): [ ]
------------------------------ Fine which_m_colindxin_i

152: assegna1_v_diag_i	<=>	diag(m) <- v
ris (5 x 5 : 5 x 5): [
	 0 1 1 1 1
	 0 0 0 1 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 1 0
 ]
Dmem (5 : 5): [ 0 0 0 0 0 ]


ris (5 x 5 : 5 x 5): [
	 0 1 1 1 1
	 0 0 0 1 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 1 0
 ]
------------------------------ Fine assegna1_v_diag_i


Stringhe allocate: 5 (2045 interne); stringhe deallocate: 0 (1710 interne)



*****************************************
*****************************************


Stringhe allocate: 5 (2045 interne); stringhe deallocate: 0 (1785 interne)


*** probmod ***
46: InitMatr_i
checkOUT (5 x 5 : 5 x 5): [
	 79851776 1 1 1 1
	 2 1 1 1 1
	 5 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
val = 0


checkOUT (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine InitMatr_i

48: InitMatr_i
checkIN (5 x 5 : 5 x 5): [
	 79857440 6 11 1 1
	 2 7 12 1 1
	 3 8 1 1 1
	 4 9 1 1 1
	 5 10 1 1 1
 ]
val = 0


checkIN (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine InitMatr_i

50: InitMatr_d
ris (5 x 5 : 5 x 5): [
	 5.842414621812633e-308 0 0 0 0
	 1.269748709812004e-320 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
val = 0


ris (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine InitMatr_d

52: somma_righe_i	<=>	ris <- apply(m, 1, sum)
ris (5 x 5 : 5 x 5): [
	 0 1 1 1 1
	 0 0 0 1 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 1 0
 ]


M_in (5 : 5): [ 4 1 0 0 1 ]
------------------------------ Fine somma_righe_i

54: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
ris (5 x 5 : 5 x 5): [
	 0 1 1 1 1
	 0 0 0 1 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 1 0
 ]


M_out (5 : 5): [ 0 1 1 3 1 ]
------------------------------ Fine somma_colonne_i

57: InitMatr_i
memory (5 x 3 : 5 x 3): [
	 79843864 254 0
	 79849024 21 3093
	 0 1 0
	 138 0 3091
	 0 0 1
 ]
val = -2147483648


memory (5 x 3 : 5 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
------------------------------ Fine InitMatr_i

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (5 x 3 : 5 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 4


tmp_i1 (0 : 15): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (5 x 3 : 5 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 0


tmp_i2 (0 : 15): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 15): [ ]
tmp_i2 (0 : 15): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

119: InitVett_d
S_out (5 : 5): [ 4.283441099263125e-314 4.243991583412742e-314 1.976262583364986e-323 4.243991583412742e-314 4.243991583906807e-314 ]
val = 0


S_out (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

122: InitVett_i
tmp_i1 (5 : 15): [ 79854808 79855528 0 25 0 ]
val = 1


tmp_i1 (5 : 15): [ 1 1 1 1 1 ]
------------------------------ Fine InitVett_i

123: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
checkOUT (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 1
tmp_i1 (5 : 15): [ 1 1 1 1 1 ]


checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_i

128: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 0 0 0 0 ]
h (5 : 5): [ 1 2 3 4 5 ]


tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 4


ind (5 : 5): [ 4 4 4 4 4 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 4 4 4 4 4 ]
s = 1


tmp_i1 (5 : 5): [ 5 5 5 5 5 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
tmp_i1 (5 : 5): [ 5 5 5 5 5 ]


T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


old1 (5 : 5): [ 5 5 5 5 5 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 4 4 4 4 4 ]
s = 1


tmp_i1 (5 : 5): [ 5 5 5 5 5 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 5 5 5 5 5 ]


old2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (5 : 5): [ 5 5 5 5 5 ]
s = -1


new1 (5 : 5): [ 4 4 4 4 4 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (5 : 5): [ 0 0 0 0 0 ]
s = 1


new2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


toll1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 4 4 4 4 4 ]
s = 1


tmp_i1 (5 : 5): [ 5 5 5 5 5 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 5 5 5 5 5 ]


toll2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (5 : 5): [ 5 5 5 5 5 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (5 : 5): [ 4 4 4 4 4 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (5 : 5): [ 3.945018926185836e-316 0 0 0 0 ]
val = 0


S1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (5 : 5): [ 0 0 0 0 0 ]
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (5 : 5): [ 1 1 1 1 1 ]
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


tmpm_d (5 x 2 : 5 x 2): [
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
 ]


m (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

140: InitVett_d
S2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
val = 0


S2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
val = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 0 0 0 0 0 ]
ind (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (5 : 5): [ 0 0 0 0 0 ]
S2 (5 : 5): [ 0 0 0 0 0 ]


ris (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
ris (5 : 5): [ 0 0 0 0 0 ]
div = 2.000


ris (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (2195 interne); stringhe deallocate: 0 (1870 interne)

131: which_v_indxne_d	<=>	ris <- which(v != val)
ris (5 : 5): [ 0 0 0 0 0 ]
val = -1.#INF


indok (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxne_d

133: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkIN (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 1
indok (5 : 5): [ 1 2 3 4 5 ]
val = 1


checkIN (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_riga_indx_i

141: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 5
incr = 1


tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
------------------------------ Fine seq_i

142: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
indok (5 : 5): [ 1 2 3 4 5 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
st = 1
end = 5


indInf (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (5 : 5): [ 1 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (5 : 5): [ 1 2 3 4 5 ]
indx = 1


indInf (4 : 5): [ 2 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (4 : 5): [ 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (4 : 5): [ 2 3 4 5 ]
indx = 1


indInf (3 : 5): [ 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (3 : 5): [ 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 5): [ 3 4 5 ]
indx = 1


indInf (2 : 5): [ 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 4
indInf (2 : 5): [ 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 5): [ 4 5 ]
indx = 1


indInf (1 : 5): [ 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 5
indInf (1 : 5): [ 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 5): [ 5 ]
indx = 1


indInf (0 : 5): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 5): [ ]
------------------------------ Fine setdiff_i

144: copia_v_indx_d	<=>	ris <- v[indx]
ris (5 : 5): [ 0 0 0 0 0 ]
indok (5 : 5): [ 1 2 3 4 5 ]


tmp_d1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine copia_v_indx_d

148: min_v_d	<=>	ris <- min(v)
tmp_d1 (5 : 5): [ 0 0 0 0 0 ]


min = 0
------------------------------ Fine min_v_d

149: assegna1_vs_indx_d	<=>	v[indx] <- val
ris (5 : 5): [ 0 0 0 0 0 ]
indInf (0 : 5): [ ]
val = -1


ris (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

159: somma_vv_d	<=>	ris <- v1 + v2
S_out (5 : 5): [ 0 0 0 0 0 ]
ris (5 : 5): [ 0 0 0 0 0 ]


tmp_d1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 1
tmp_d1 (5 : 5): [ 0 0 0 0 0 ]


ris (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_d

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (5 x 3 : 5 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 1


tmp_i1 (0 : 15): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (5 x 3 : 5 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 1


tmp_i2 (0 : 15): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 15): [ ]
tmp_i2 (0 : 15): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

92: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sout (5 : 5): [ 0 0 0 0 0 ]
h (5 : 5): [ 1 2 3 4 5 ]


tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


ind (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


old1 (5 : 5): [ 5 5 5 5 5 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


old2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (5 : 5): [ 5 5 5 5 5 ]
s = -1


new1 (5 : 5): [ 4 4 4 4 4 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (5 : 5): [ 0 0 0 0 0 ]
s = 1


new2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


toll1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


toll2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (5 : 5): [ 5 5 5 5 5 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (5 : 5): [ 4 4 4 4 4 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
val = 0


S1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (5 : 5): [ 0 0 0 0 0 ]
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]


a (5 : 5): [ -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 ]


a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (5 : 5): [ 1 1 1 1 1 ]
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]


b (5 : 5): [ -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 ]


b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]


tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]


m (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
complemento = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxNA_d

115: assegna1_vs_indx_d	<=>	v[indx] <- val
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
ind (0 : 5): [ ]
val = 0


a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine assegna1_vs_indx_d

117: assegna1_vs_indx_d	<=>	v[indx] <- val
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
ind (0 : 5): [ ]
val = 0


b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
------------------------------ Fine assegna1_vs_indx_d

119: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]


tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]
------------------------------ Fine cbind2v_d

120: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]


m (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine max_righe_d

122: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
m (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine f_aux_d

124: diff_vv_d	<=>	ris <- v1 - v2
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
toll2 (5 : 5): [ 1 1 1 1 1 ]


tmp_d1 (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
------------------------------ Fine diff_vv_d

125: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
val = 0

ind1 (0 : 5): [ ]
------------------------------ Fine which_v_indxlt_d

127: diff_vv_d	<=>	ris <- v1 - v2
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
toll2 (5 : 5): [ 1 1 1 1 1 ]


tmp_d1 (5 : 5): [ 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 ]
------------------------------ Fine diff_vv_d

128: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (5 : 5): [ 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 ]
val = 0


ind2 (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxgt_d

130: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (0 : 5): [ ]
ind2 (5 : 5): [ 1 2 3 4 5 ]


tmp_i1 (0 : 5): [ ]
------------------------------ Fine interseca_i

132: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
tmp_i1 (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

134: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
ind (0 : 5): [ ]
val = 0


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
val = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
ind (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (5 : 5): [ 0 0 0 0 0 ]
S2 (5 : 5): [ 1 1 1 1 1 ]


S_out (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
S_out (5 : 5): [ 1 1 1 1 1 ]
div = 2.000


S_out (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (2310 interne); stringhe deallocate: 0 (1970 interne)

95: which_v_indxne_d	<=>	ris <- which(v != val)
S_out (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
val = -1.#INF


indok (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxne_d

97: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 2
indok (5 : 5): [ 1 2 3 4 5 ]
val = 1


checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_riga_indx_i

104: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 5
incr = 1


tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
------------------------------ Fine seq_i

105: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
indok (5 : 5): [ 1 2 3 4 5 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
st = 1
end = 5


indInf (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (5 : 5): [ 1 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (5 : 5): [ 1 2 3 4 5 ]
indx = 1


indInf (4 : 5): [ 2 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (4 : 5): [ 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (4 : 5): [ 2 3 4 5 ]
indx = 1


indInf (3 : 5): [ 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (3 : 5): [ 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 5): [ 3 4 5 ]
indx = 1


indInf (2 : 5): [ 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 4
indInf (2 : 5): [ 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 5): [ 4 5 ]
indx = 1


indInf (1 : 5): [ 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 5
indInf (1 : 5): [ 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 5): [ 5 ]
indx = 1


indInf (0 : 5): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 5): [ ]
------------------------------ Fine setdiff_i

107: copia_v_indx_d	<=>	ris <- v[indx]
S_out (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
indok (5 : 5): [ 1 2 3 4 5 ]


tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine copia_v_indx_d

111: min_v_d	<=>	ris <- min(v)
tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]


min = 0.5
------------------------------ Fine min_v_d

112: assegna1_vs_indx_d	<=>	v[indx] <- val
S_out (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
indInf (0 : 5): [ ]
val = -1


S_out (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine assegna1_vs_indx_d

128: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 0 0 0 0 ]
h (5 : 5): [ 1 2 3 4 5 ]


tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


ind (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


old1 (5 : 5): [ 5 5 5 5 5 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


old2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (5 : 5): [ 5 5 5 5 5 ]
s = -1


new1 (5 : 5): [ 4 4 4 4 4 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (5 : 5): [ 0 0 0 0 0 ]
s = 1


new2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


toll1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


toll2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (5 : 5): [ 5 5 5 5 5 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (5 : 5): [ 4 4 4 4 4 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (5 : 5): [ 5.000000070919334 5 5 5 5 ]
val = 0


S1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (5 : 5): [ 0 0 0 0 0 ]
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (5 : 5): [ 1 1 1 1 1 ]
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


tmpm_d (5 x 2 : 5 x 2): [
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
 ]


m (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

140: InitVett_d
S2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
val = 0


S2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
val = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 0 0 0 0 0 ]
ind (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (5 : 5): [ 0 0 0 0 0 ]
S2 (5 : 5): [ 0 0 0 0 0 ]


ris (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
ris (5 : 5): [ 0 0 0 0 0 ]
div = 2.000


ris (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (2395 interne); stringhe deallocate: 0 (2055 interne)

131: which_v_indxne_d	<=>	ris <- which(v != val)
ris (5 : 5): [ 0 0 0 0 0 ]
val = -1.#INF


indok (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxne_d

133: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkIN (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 2
indok (5 : 5): [ 1 2 3 4 5 ]
val = 1


checkIN (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_riga_indx_i

141: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 5
incr = 1


tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
------------------------------ Fine seq_i

142: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
indok (5 : 5): [ 1 2 3 4 5 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
st = 1
end = 5


indInf (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (5 : 5): [ 1 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (5 : 5): [ 1 2 3 4 5 ]
indx = 1


indInf (4 : 5): [ 2 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (4 : 5): [ 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (4 : 5): [ 2 3 4 5 ]
indx = 1


indInf (3 : 5): [ 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (3 : 5): [ 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 5): [ 3 4 5 ]
indx = 1


indInf (2 : 5): [ 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 4
indInf (2 : 5): [ 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 5): [ 4 5 ]
indx = 1


indInf (1 : 5): [ 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 5
indInf (1 : 5): [ 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 5): [ 5 ]
indx = 1


indInf (0 : 5): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 5): [ ]
------------------------------ Fine setdiff_i

144: copia_v_indx_d	<=>	ris <- v[indx]
ris (5 : 5): [ 0 0 0 0 0 ]
indok (5 : 5): [ 1 2 3 4 5 ]


tmp_d1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine copia_v_indx_d

148: min_v_d	<=>	ris <- min(v)
tmp_d1 (5 : 5): [ 0 0 0 0 0 ]


min = 0
------------------------------ Fine min_v_d

149: assegna1_vs_indx_d	<=>	v[indx] <- val
ris (5 : 5): [ 0 0 0 0 0 ]
indInf (0 : 5): [ ]
val = -1


ris (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

159: somma_vv_d	<=>	ris <- v1 + v2
S_out (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
ris (5 : 5): [ 0 0 0 0 0 ]


tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 2
tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]


ris (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0.5 0.5 0.5 0.5 0.5
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_d

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (5 x 3 : 5 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 0


tmp_i1 (0 : 15): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (5 x 3 : 5 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 1


tmp_i2 (0 : 15): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 15): [ ]
tmp_i2 (0 : 15): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

92: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sout (5 : 5): [ 0 0 0 0 0 ]
h (5 : 5): [ 1 2 3 4 5 ]


tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


ind (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


old1 (5 : 5): [ 5 5 5 5 5 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


old2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (5 : 5): [ 5 5 5 5 5 ]
s = -1


new1 (5 : 5): [ 4 4 4 4 4 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (5 : 5): [ 0 0 0 0 0 ]
s = 1


new2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


toll1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


toll2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (5 : 5): [ 5 5 5 5 5 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (5 : 5): [ 4 4 4 4 4 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (5 : 5): [ 5.00000007091861 5 5 5 5 ]
val = 0


S1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (5 : 5): [ 0 0 0 0 0 ]
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]


a (5 : 5): [ -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 ]


a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (5 : 5): [ 1 1 1 1 1 ]
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]


b (5 : 5): [ -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 ]


b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]


tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]


m (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
complemento = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxNA_d

115: assegna1_vs_indx_d	<=>	v[indx] <- val
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
ind (0 : 5): [ ]
val = 0


a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine assegna1_vs_indx_d

117: assegna1_vs_indx_d	<=>	v[indx] <- val
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
ind (0 : 5): [ ]
val = 0


b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
------------------------------ Fine assegna1_vs_indx_d

119: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]


tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]
------------------------------ Fine cbind2v_d

120: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]


m (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine max_righe_d

122: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
m (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine f_aux_d

124: diff_vv_d	<=>	ris <- v1 - v2
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
toll2 (5 : 5): [ 1 1 1 1 1 ]


tmp_d1 (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
------------------------------ Fine diff_vv_d

125: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
val = 0

ind1 (0 : 5): [ ]
------------------------------ Fine which_v_indxlt_d

127: diff_vv_d	<=>	ris <- v1 - v2
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
toll2 (5 : 5): [ 1 1 1 1 1 ]


tmp_d1 (5 : 5): [ 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 ]
------------------------------ Fine diff_vv_d

128: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (5 : 5): [ 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 ]
val = 0


ind2 (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxgt_d

130: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (0 : 5): [ ]
ind2 (5 : 5): [ 1 2 3 4 5 ]


tmp_i1 (0 : 5): [ ]
------------------------------ Fine interseca_i

132: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
tmp_i1 (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

134: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
ind (0 : 5): [ ]
val = 0


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
val = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
ind (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (5 : 5): [ 0 0 0 0 0 ]
S2 (5 : 5): [ 1 1 1 1 1 ]


S_out (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
S_out (5 : 5): [ 1 1 1 1 1 ]
div = 2.000


S_out (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (2495 interne); stringhe deallocate: 0 (2155 interne)

95: which_v_indxne_d	<=>	ris <- which(v != val)
S_out (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
val = -1.#INF


indok (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxne_d

97: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 3
indok (5 : 5): [ 1 2 3 4 5 ]
val = 1


checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_riga_indx_i

104: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 5
incr = 1


tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
------------------------------ Fine seq_i

105: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
indok (5 : 5): [ 1 2 3 4 5 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
st = 1
end = 5


indInf (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (5 : 5): [ 1 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (5 : 5): [ 1 2 3 4 5 ]
indx = 1


indInf (4 : 5): [ 2 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (4 : 5): [ 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (4 : 5): [ 2 3 4 5 ]
indx = 1


indInf (3 : 5): [ 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (3 : 5): [ 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 5): [ 3 4 5 ]
indx = 1


indInf (2 : 5): [ 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 4
indInf (2 : 5): [ 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 5): [ 4 5 ]
indx = 1


indInf (1 : 5): [ 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 5
indInf (1 : 5): [ 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 5): [ 5 ]
indx = 1


indInf (0 : 5): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 5): [ ]
------------------------------ Fine setdiff_i

107: copia_v_indx_d	<=>	ris <- v[indx]
S_out (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
indok (5 : 5): [ 1 2 3 4 5 ]


tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine copia_v_indx_d

111: min_v_d	<=>	ris <- min(v)
tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]


min = 0.5
------------------------------ Fine min_v_d

112: assegna1_vs_indx_d	<=>	v[indx] <- val
S_out (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
indInf (0 : 5): [ ]
val = -1


S_out (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine assegna1_vs_indx_d

155: InitVett_d
ris (5 : 5): [ 0 0 0 0 0 ]
val = 0


ris (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

156: aggiungi_ms_riga_i	<=>	m[riga,] <- val # riga <= dim(m)[0] + 1
checkIN (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 3, val = 1


checkIN (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_ms_riga_i

159: somma_vv_d	<=>	ris <- v1 + v2
S_out (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
ris (5 : 5): [ 0 0 0 0 0 ]


tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0.5 0.5 0.5 0.5 0.5
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 3
tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]


ris (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0.5 0.5 0.5 0.5 0.5
	 0.5 0.5 0.5 0.5 0.5
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_d

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (5 x 3 : 5 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 0


tmp_i1 (0 : 15): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (5 x 3 : 5 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 3


tmp_i2 (0 : 15): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 15): [ ]
tmp_i2 (0 : 15): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

92: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sout (5 : 5): [ 0 0 0 0 0 ]
h (5 : 5): [ 1 2 3 4 5 ]


tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 3


ind (5 : 5): [ 3 3 3 3 3 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 3 3 3 3 3 ]
s = 1


tmp_i1 (5 : 5): [ 4 4 4 4 4 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (5 : 5): [ 4 4 4 4 4 ]


T2 (5 : 5): [ 0.3224199317354524 0.3224199317354524 0.3224199317354524 0.3224199317354524 0.3224199317354524 ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


old1 (5 : 5): [ 5 5 5 5 5 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 3 3 3 3 3 ]
s = 1


tmp_i1 (5 : 5): [ 4 4 4 4 4 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 4 4 4 4 4 ]


old2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (5 : 5): [ 5 5 5 5 5 ]
s = -1


new1 (5 : 5): [ 4 4 4 4 4 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (5 : 5): [ 0 0 0 0 0 ]
s = 1


new2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


toll1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 3 3 3 3 3 ]
s = 1


tmp_i1 (5 : 5): [ 4 4 4 4 4 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 4 4 4 4 4 ]


toll2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (5 : 5): [ 5 5 5 5 5 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (5 : 5): [ 4 4 4 4 4 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (5 : 5): [ 5.000000070917885 5 5 5 5 ]
val = 0


S1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (5 : 5): [ 0 0 0 0 0 ]
T2 (5 : 5): [ 0.3224199317354524 0.3224199317354524 0.3224199317354524 0.3224199317354524 0.3224199317354524 ]


a (5 : 5): [ -0.3224199317354524 -0.3224199317354524 -0.3224199317354524 -0.3224199317354524 -0.3224199317354524 ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ -0.3224199317354524 -0.3224199317354524 -0.3224199317354524 -0.3224199317354524 -0.3224199317354524 ]


a (5 : 5): [ 0.3224199317354524 0.3224199317354524 0.3224199317354524 0.3224199317354524 0.3224199317354524 ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (5 : 5): [ 1 1 1 1 1 ]
T2 (5 : 5): [ 0.3224199317354524 0.3224199317354524 0.3224199317354524 0.3224199317354524 0.3224199317354524 ]


b (5 : 5): [ 0.6775800682645476 0.6775800682645476 0.6775800682645476 0.6775800682645476 0.6775800682645476 ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 0.6775800682645476 0.6775800682645476 0.6775800682645476 0.6775800682645476 0.6775800682645476 ]


b (5 : 5): [ 0.6775800682645476 0.6775800682645476 0.6775800682645476 0.6775800682645476 0.6775800682645476 ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 0.3224199317354524 0.3224199317354524 0.3224199317354524 0.3224199317354524 0.3224199317354524 ]
b (5 : 5): [ 0.6775800682645476 0.6775800682645476 0.6775800682645476 0.6775800682645476 0.6775800682645476 ]


tmpm_d (5 x 2 : 5 x 2): [
	 0.3224199317354524 0.6775800682645476
	 0.3224199317354524 0.6775800682645476
	 0.3224199317354524 0.6775800682645476
	 0.3224199317354524 0.6775800682645476
	 0.3224199317354524 0.6775800682645476
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 0.3224199317354524 0.6775800682645476
	 0.3224199317354524 0.6775800682645476
	 0.3224199317354524 0.6775800682645476
	 0.3224199317354524 0.6775800682645476
	 0.3224199317354524 0.6775800682645476
 ]


m (5 : 5): [ 0.6775800682645476 0.6775800682645476 0.6775800682645476 0.6775800682645476 0.6775800682645476 ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (5 : 5): [ 0.3224199317354524 0.3224199317354524 0.3224199317354524 0.3224199317354524 0.3224199317354524 ]
complemento = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxNA_d

115: assegna1_vs_indx_d	<=>	v[indx] <- val
a (5 : 5): [ 0.3224199317354524 0.3224199317354524 0.3224199317354524 0.3224199317354524 0.3224199317354524 ]
ind (0 : 5): [ ]
val = 0


a (5 : 5): [ 0.3224199317354524 0.3224199317354524 0.3224199317354524 0.3224199317354524 0.3224199317354524 ]
------------------------------ Fine assegna1_vs_indx_d

117: assegna1_vs_indx_d	<=>	v[indx] <- val
b (5 : 5): [ 0.6775800682645476 0.6775800682645476 0.6775800682645476 0.6775800682645476 0.6775800682645476 ]
ind (0 : 5): [ ]
val = 0


b (5 : 5): [ 0.6775800682645476 0.6775800682645476 0.6775800682645476 0.6775800682645476 0.6775800682645476 ]
------------------------------ Fine assegna1_vs_indx_d

119: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 0.3224199317354524 0.3224199317354524 0.3224199317354524 0.3224199317354524 0.3224199317354524 ]
b (5 : 5): [ 0.6775800682645476 0.6775800682645476 0.6775800682645476 0.6775800682645476 0.6775800682645476 ]


tmpm_d (5 x 2 : 5 x 2): [
	 0.3224199317354524 0.6775800682645476
	 0.3224199317354524 0.6775800682645476
	 0.3224199317354524 0.6775800682645476
	 0.3224199317354524 0.6775800682645476
	 0.3224199317354524 0.6775800682645476
 ]
------------------------------ Fine cbind2v_d

120: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 0.3224199317354524 0.6775800682645476
	 0.3224199317354524 0.6775800682645476
	 0.3224199317354524 0.6775800682645476
	 0.3224199317354524 0.6775800682645476
	 0.3224199317354524 0.6775800682645476
 ]


m (5 : 5): [ 0.6775800682645476 0.6775800682645476 0.6775800682645476 0.6775800682645476 0.6775800682645476 ]
------------------------------ Fine max_righe_d

122: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (5 : 5): [ 0.3224199317354524 0.3224199317354524 0.3224199317354524 0.3224199317354524 0.3224199317354524 ]
b (5 : 5): [ 0.6775800682645476 0.6775800682645476 0.6775800682645476 0.6775800682645476 0.6775800682645476 ]
m (5 : 5): [ 0.6775800682645476 0.6775800682645476 0.6775800682645476 0.6775800682645476 0.6775800682645476 ]
T2 (5 : 5): [ 0.3224199317354524 0.3224199317354524 0.3224199317354524 0.3224199317354524 0.3224199317354524 ]


S2 (5 : 5): [ -2.101545225871788 -2.101545225871788 -2.101545225871788 -2.101545225871788 -2.101545225871788 ]
------------------------------ Fine f_aux_d

124: diff_vv_d	<=>	ris <- v1 - v2
a (5 : 5): [ 0.3224199317354524 0.3224199317354524 0.3224199317354524 0.3224199317354524 0.3224199317354524 ]
toll2 (5 : 5): [ 1 1 1 1 1 ]


tmp_d1 (5 : 5): [ -0.6775800682645476 -0.6775800682645476 -0.6775800682645476 -0.6775800682645476 -0.6775800682645476 ]
------------------------------ Fine diff_vv_d

125: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (5 : 5): [ -0.6775800682645476 -0.6775800682645476 -0.6775800682645476 -0.6775800682645476 -0.6775800682645476 ]
val = 0

ind1 (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxlt_d

127: diff_vv_d	<=>	ris <- v1 - v2
b (5 : 5): [ 0.6775800682645476 0.6775800682645476 0.6775800682645476 0.6775800682645476 0.6775800682645476 ]
toll2 (5 : 5): [ 1 1 1 1 1 ]


tmp_d1 (5 : 5): [ -0.3224199317354524 -0.3224199317354524 -0.3224199317354524 -0.3224199317354524 -0.3224199317354524 ]
------------------------------ Fine diff_vv_d

128: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (5 : 5): [ -0.3224199317354524 -0.3224199317354524 -0.3224199317354524 -0.3224199317354524 -0.3224199317354524 ]
val = 0


ind2 (0 : 5): [ ]
------------------------------ Fine which_v_indxgt_d

130: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (5 : 5): [ 1 2 3 4 5 ]
ind2 (0 : 5): [ ]
2459: esiste_v_i	<=>	elem %IN% v
elem = 1
ind2 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 1
tmp_i1 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 2
ind2 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 2
tmp_i1 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 3
ind2 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 3
tmp_i1 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 4
ind2 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 4
tmp_i1 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 5
ind2 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 5
tmp_i1 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i



tmp_i1 (0 : 5): [ ]
------------------------------ Fine interseca_i

132: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ -2.101545225871788 -2.101545225871788 -2.101545225871788 -2.101545225871788 -2.101545225871788 ]
tmp_i1 (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ -2.101545225871788 -2.101545225871788 -2.101545225871788 -2.101545225871788 -2.101545225871788 ]
------------------------------ Fine assegna1_vs_indx_d

134: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ -2.101545225871788 -2.101545225871788 -2.101545225871788 -2.101545225871788 -2.101545225871788 ]
ind (0 : 5): [ ]
val = 0


S2 (5 : 5): [ -2.101545225871788 -2.101545225871788 -2.101545225871788 -2.101545225871788 -2.101545225871788 ]
------------------------------ Fine assegna1_vs_indx_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (5 : 5): [ 0.3224199317354524 0.3224199317354524 0.3224199317354524 0.3224199317354524 0.3224199317354524 ]
val = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ -2.101545225871788 -2.101545225871788 -2.101545225871788 -2.101545225871788 -2.101545225871788 ]
ind (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ -2.101545225871788 -2.101545225871788 -2.101545225871788 -2.101545225871788 -2.101545225871788 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (5 : 5): [ 0 0 0 0 0 ]
S2 (5 : 5): [ -2.101545225871788 -2.101545225871788 -2.101545225871788 -2.101545225871788 -2.101545225871788 ]


S_out (5 : 5): [ -2.101545225871788 -2.101545225871788 -2.101545225871788 -2.101545225871788 -2.101545225871788 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
S_out (5 : 5): [ -2.101545225871788 -2.101545225871788 -2.101545225871788 -2.101545225871788 -2.101545225871788 ]
div = 2.000


S_out (5 : 5): [ -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (2595 interne); stringhe deallocate: 0 (2255 interne)

95: which_v_indxne_d	<=>	ris <- which(v != val)
S_out (5 : 5): [ -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 ]
val = -1.#INF


indok (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxne_d

97: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 4
indok (5 : 5): [ 1 2 3 4 5 ]
val = 1


checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_riga_indx_i

104: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 5
incr = 1


tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
------------------------------ Fine seq_i

105: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
indok (5 : 5): [ 1 2 3 4 5 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
st = 1
end = 5


indInf (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (5 : 5): [ 1 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (5 : 5): [ 1 2 3 4 5 ]
indx = 1


indInf (4 : 5): [ 2 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (4 : 5): [ 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (4 : 5): [ 2 3 4 5 ]
indx = 1


indInf (3 : 5): [ 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (3 : 5): [ 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 5): [ 3 4 5 ]
indx = 1


indInf (2 : 5): [ 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 4
indInf (2 : 5): [ 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 5): [ 4 5 ]
indx = 1


indInf (1 : 5): [ 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 5
indInf (1 : 5): [ 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 5): [ 5 ]
indx = 1


indInf (0 : 5): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 5): [ ]
------------------------------ Fine setdiff_i

107: copia_v_indx_d	<=>	ris <- v[indx]
S_out (5 : 5): [ -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 ]
indok (5 : 5): [ 1 2 3 4 5 ]


tmp_d1 (5 : 5): [ -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 ]
------------------------------ Fine copia_v_indx_d

111: min_v_d	<=>	ris <- min(v)
tmp_d1 (5 : 5): [ -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 ]


min = -1.050772612935894
------------------------------ Fine min_v_d

112: assegna1_vs_indx_d	<=>	v[indx] <- val
S_out (5 : 5): [ -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 ]
indInf (0 : 5): [ ]
val = -2.050772612935894


S_out (5 : 5): [ -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 ]
------------------------------ Fine assegna1_vs_indx_d

155: InitVett_d
ris (5 : 5): [ 0 0 0 0 0 ]
val = 0


ris (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

156: aggiungi_ms_riga_i	<=>	m[riga,] <- val # riga <= dim(m)[0] + 1
checkIN (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 4, val = 1


checkIN (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_ms_riga_i

159: somma_vv_d	<=>	ris <- v1 + v2
S_out (5 : 5): [ -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 ]
ris (5 : 5): [ 0 0 0 0 0 ]


tmp_d1 (5 : 5): [ -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0.5 0.5 0.5 0.5 0.5
	 0.5 0.5 0.5 0.5 0.5
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 4
tmp_d1 (5 : 5): [ -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 ]


ris (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0.5 0.5 0.5 0.5 0.5
	 0.5 0.5 0.5 0.5 0.5
	 -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_d

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (5 x 3 : 5 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 1


tmp_i1 (0 : 15): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (5 x 3 : 5 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 1


tmp_i2 (0 : 15): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 15): [ ]
tmp_i2 (0 : 15): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

92: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sout (5 : 5): [ 0 0 0 0 0 ]
h (5 : 5): [ 1 2 3 4 5 ]


tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


ind (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


old1 (5 : 5): [ 5 5 5 5 5 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


old2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (5 : 5): [ 5 5 5 5 5 ]
s = -1


new1 (5 : 5): [ 4 4 4 4 4 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (5 : 5): [ 0 0 0 0 0 ]
s = 1


new2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


toll1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


toll2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (5 : 5): [ 5 5 5 5 5 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (5 : 5): [ 4 4 4 4 4 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (5 : 5): [ 5.000000070918127 5 5 5 5 ]
val = 0


S1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (5 : 5): [ 0 0 0 0 0 ]
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]


a (5 : 5): [ -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 ]


a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (5 : 5): [ 1 1 1 1 1 ]
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]


b (5 : 5): [ -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 ]


b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]


tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]


m (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
complemento = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxNA_d

115: assegna1_vs_indx_d	<=>	v[indx] <- val
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
ind (0 : 5): [ ]
val = 0


a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine assegna1_vs_indx_d

117: assegna1_vs_indx_d	<=>	v[indx] <- val
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
ind (0 : 5): [ ]
val = 0


b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
------------------------------ Fine assegna1_vs_indx_d

119: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]


tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]
------------------------------ Fine cbind2v_d

120: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]


m (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine max_righe_d

122: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
m (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine f_aux_d

124: diff_vv_d	<=>	ris <- v1 - v2
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
toll2 (5 : 5): [ 1 1 1 1 1 ]


tmp_d1 (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
------------------------------ Fine diff_vv_d

125: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
val = 0

ind1 (0 : 5): [ ]
------------------------------ Fine which_v_indxlt_d

127: diff_vv_d	<=>	ris <- v1 - v2
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
toll2 (5 : 5): [ 1 1 1 1 1 ]


tmp_d1 (5 : 5): [ 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 ]
------------------------------ Fine diff_vv_d

128: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (5 : 5): [ 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 ]
val = 0


ind2 (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxgt_d

130: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (0 : 5): [ ]
ind2 (5 : 5): [ 1 2 3 4 5 ]


tmp_i1 (0 : 5): [ ]
------------------------------ Fine interseca_i

132: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
tmp_i1 (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

134: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
ind (0 : 5): [ ]
val = 0


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
val = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
ind (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (5 : 5): [ 0 0 0 0 0 ]
S2 (5 : 5): [ 1 1 1 1 1 ]


S_out (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
S_out (5 : 5): [ 1 1 1 1 1 ]
div = 2.000


S_out (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (2695 interne); stringhe deallocate: 0 (2355 interne)

95: which_v_indxne_d	<=>	ris <- which(v != val)
S_out (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
val = -1.#INF


indok (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxne_d

97: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 0 0 0 0 0
 ]
riga = 5
indok (5 : 5): [ 1 2 3 4 5 ]
val = 1


checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
------------------------------ Fine aggiungi_riga_indx_i

104: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 5
incr = 1


tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
------------------------------ Fine seq_i

105: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
indok (5 : 5): [ 1 2 3 4 5 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
st = 1
end = 5


indInf (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (5 : 5): [ 1 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (5 : 5): [ 1 2 3 4 5 ]
indx = 1


indInf (4 : 5): [ 2 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (4 : 5): [ 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (4 : 5): [ 2 3 4 5 ]
indx = 1


indInf (3 : 5): [ 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (3 : 5): [ 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 5): [ 3 4 5 ]
indx = 1


indInf (2 : 5): [ 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 4
indInf (2 : 5): [ 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 5): [ 4 5 ]
indx = 1


indInf (1 : 5): [ 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 5
indInf (1 : 5): [ 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 5): [ 5 ]
indx = 1


indInf (0 : 5): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 5): [ ]
------------------------------ Fine setdiff_i

107: copia_v_indx_d	<=>	ris <- v[indx]
S_out (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
indok (5 : 5): [ 1 2 3 4 5 ]


tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine copia_v_indx_d

111: min_v_d	<=>	ris <- min(v)
tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]


min = 0.5
------------------------------ Fine min_v_d

112: assegna1_vs_indx_d	<=>	v[indx] <- val
S_out (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
indInf (0 : 5): [ ]
val = -1


S_out (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine assegna1_vs_indx_d

128: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 0 0 0 0 ]
h (5 : 5): [ 1 2 3 4 5 ]


tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


ind (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


old1 (5 : 5): [ 5 5 5 5 5 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


old2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (5 : 5): [ 5 5 5 5 5 ]
s = -1


new1 (5 : 5): [ 4 4 4 4 4 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (5 : 5): [ 0 0 0 0 0 ]
s = 1


new2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 15): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


toll1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


toll2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (5 : 5): [ 5 5 5 5 5 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (5 : 5): [ 4 4 4 4 4 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (5 : 5): [ 5.000000070919334 5 5 5 5 ]
val = 0


S1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (5 : 5): [ 0 0 0 0 0 ]
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (5 : 5): [ 1 1 1 1 1 ]
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


tmpm_d (5 x 2 : 5 x 2): [
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
 ]


m (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

140: InitVett_d
S2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
val = 0


S2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
val = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 0 0 0 0 0 ]
ind (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (5 : 5): [ 0 0 0 0 0 ]
S2 (5 : 5): [ 0 0 0 0 0 ]


ris (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
ris (5 : 5): [ 0 0 0 0 0 ]
div = 2.000


ris (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (2780 interne); stringhe deallocate: 0 (2440 interne)

131: which_v_indxne_d	<=>	ris <- which(v != val)
ris (5 : 5): [ 0 0 0 0 0 ]
val = -1.#INF


indok (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxne_d

133: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkIN (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 0 0 0 0 0
 ]
riga = 5
indok (5 : 5): [ 1 2 3 4 5 ]
val = 1


checkIN (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
------------------------------ Fine aggiungi_riga_indx_i

141: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 5
incr = 1


tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
------------------------------ Fine seq_i

142: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
indok (5 : 5): [ 1 2 3 4 5 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
st = 1
end = 5


indInf (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (5 : 5): [ 1 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (5 : 5): [ 1 2 3 4 5 ]
indx = 1


indInf (4 : 5): [ 2 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (4 : 5): [ 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (4 : 5): [ 2 3 4 5 ]
indx = 1


indInf (3 : 5): [ 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (3 : 5): [ 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 5): [ 3 4 5 ]
indx = 1


indInf (2 : 5): [ 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 4
indInf (2 : 5): [ 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 5): [ 4 5 ]
indx = 1


indInf (1 : 5): [ 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 5
indInf (1 : 5): [ 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 5): [ 5 ]
indx = 1


indInf (0 : 5): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 5): [ ]
------------------------------ Fine setdiff_i

144: copia_v_indx_d	<=>	ris <- v[indx]
ris (5 : 5): [ 0 0 0 0 0 ]
indok (5 : 5): [ 1 2 3 4 5 ]


tmp_d1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine copia_v_indx_d

148: min_v_d	<=>	ris <- min(v)
tmp_d1 (5 : 5): [ 0 0 0 0 0 ]


min = 0
------------------------------ Fine min_v_d

149: assegna1_vs_indx_d	<=>	v[indx] <- val
ris (5 : 5): [ 0 0 0 0 0 ]
indInf (0 : 5): [ ]
val = -1


ris (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

159: somma_vv_d	<=>	ris <- v1 + v2
S_out (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
ris (5 : 5): [ 0 0 0 0 0 ]


tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0.5 0.5 0.5 0.5 0.5
	 0.5 0.5 0.5 0.5 0.5
	 -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894
	 0 0 0 0 0
 ]
riga = 5
tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]


ris (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0.5 0.5 0.5 0.5 0.5
	 0.5 0.5 0.5 0.5 0.5
	 -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894
	 0.5 0.5 0.5 0.5 0.5
 ]
------------------------------ Fine aggiungi_mv_riga_d

168: somma_m_d	<=>	ris <- sum(m)
ris (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0.5 0.5 0.5 0.5 0.5
	 0.5 0.5 0.5 0.5 0.5
	 -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894
	 0.5 0.5 0.5 0.5 0.5
 ]


ris: 2.246136935320531
------------------------------ Fine somma_m_d

173: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
checkIN (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]


aus (5 : 5): [ 5 5 5 5 5 ]
------------------------------ Fine somma_colonne_i

175: which_v_indxne_i	<=>	ris <- which(v != val)
aus (5 : 5): [ 5 5 5 5 5 ]
val = 0


tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxne_i

186: somma_righe_i	<=>	ris <- apply(m, 1, sum)
checkIN (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]


rs (5 : 5): [ 5 5 5 5 5 ]
------------------------------ Fine somma_righe_i

188: ordine_i	<=>	ris <- order(v, decreasing=decr)
rs (5 : 5): [ 5 5 5 5 5 ]
decr = 0


ord_ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine ordine_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
r = 1
val = 0


I_add (5 : 25): [ 1 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
I (0 : 0): [ ]
I_add (5 : 25): [ 1 2 3 4 5 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (5 : 5): [ 1 2 3 4 5 ]


ris (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine unione1_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
r = 2
val = 0


I_add (5 : 25): [ 1 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
ris (5 : 5): [ 1 2 3 4 5 ]
I_add (5 : 25): [ 1 2 3 4 5 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (10 : 10): [ 1 2 3 4 5 1 2 3 4 5 ]


ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine unione1_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
r = 3
val = 0


I_add (5 : 25): [ 1 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
ris (5 : 10): [ 1 2 3 4 5 ]
I_add (5 : 25): [ 1 2 3 4 5 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (10 : 10): [ 1 2 3 4 5 1 2 3 4 5 ]


ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine unione1_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
r = 4
val = 0


I_add (5 : 25): [ 1 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
ris (5 : 10): [ 1 2 3 4 5 ]
I_add (5 : 25): [ 1 2 3 4 5 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (10 : 10): [ 1 2 3 4 5 1 2 3 4 5 ]


ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine unione1_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
r = 5
val = 0


I_add (5 : 25): [ 1 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
ris (5 : 10): [ 1 2 3 4 5 ]
I_add (5 : 25): [ 1 2 3 4 5 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (10 : 10): [ 1 2 3 4 5 1 2 3 4 5 ]


ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine unione1_i

216: assegna1_mindxlt_i	<=>	m1[which(m2<val1)] <- val2
checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
val1 = 0
val2 = 0


checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
------------------------------ Fine assegna1_mindxlt_i

218: assegna1_m_indxgt_i	<=>	m1[which(m2>val1)] <- val2
checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
val1 = 0
val2 = 1


checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
------------------------------ Fine assegna1_m_indxgt_i

220: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]


aus (5 : 5): [ 5 5 5 5 5 ]
------------------------------ Fine somma_colonne_i

222: which_v_indxne_i	<=>	ris <- which(v != val)
aus (5 : 5): [ 5 5 5 5 5 ]
val = 0


tmp_i1 (5 : 15): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxne_i

232: somma_righe_i	<=>	ris <- apply(m, 1, sum)
checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]


rs (5 : 5): [ 5 5 5 5 5 ]
------------------------------ Fine somma_righe_i

234: ordine_i	<=>	ris <- order(v, decreasing=decr)
rs (5 : 5): [ 5 5 5 5 5 ]
decr = 0


ord_ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine ordine_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
r = 1
val = 0


I_add (5 : 25): [ 1 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (0 : 10): [ ]
I_add (5 : 25): [ 1 2 3 4 5 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (5 : 5): [ 1 2 3 4 5 ]


ris (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine unione1_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
r = 2
val = 0


I_add (5 : 25): [ 1 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (5 : 5): [ 1 2 3 4 5 ]
I_add (5 : 25): [ 1 2 3 4 5 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (10 : 10): [ 1 2 3 4 5 1 2 3 4 5 ]


ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine unione1_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
r = 3
val = 0


I_add (5 : 25): [ 1 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (5 : 10): [ 1 2 3 4 5 ]
I_add (5 : 25): [ 1 2 3 4 5 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (10 : 10): [ 1 2 3 4 5 1 2 3 4 5 ]


ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine unione1_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
r = 4
val = 0


I_add (5 : 25): [ 1 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (5 : 10): [ 1 2 3 4 5 ]
I_add (5 : 25): [ 1 2 3 4 5 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (10 : 10): [ 1 2 3 4 5 1 2 3 4 5 ]


ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine unione1_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (5 x 5 : 5 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
r = 5
val = 0


I_add (5 : 25): [ 1 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (5 : 10): [ 1 2 3 4 5 ]
I_add (5 : 25): [ 1 2 3 4 5 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (10 : 10): [ 1 2 3 4 5 1 2 3 4 5 ]


ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine unione1_i


Stringhe allocate: 5 (2905 interne); stringhe deallocate: 0 (2640 interne)

90: seq_i	<=>	ris <- seq(da, a, incr)
da = 2
a = 5
incr = 1


ris->indices (4 : 4): [ 2 3 4 5 ]
------------------------------ Fine seq_i


Stringhe allocate: 5 (2910 interne); stringhe deallocate: 0 (2655 interne)

143: vettore3s_d		<=>	ris <- c(el1, el2, el3)
el1 = 2.5, el2 = -1.420205019852908, el3 = 0.4492273870641061


prob_mod (3 : 3): [ 2.5 -1.420205019852908 0.4492273870641061 ]
------------------------------ Fine vettore3s_d

145: assegna1_v_indxeq_d	<=>	v[which(v==val1)] <- val2
prob_mod (3 : 3): [ 2.5 -1.420205019852908 0.4492273870641061 ]
prob_mod (3 : 3): [ 2.5 -1.420205019852908 0.4492273870641061 ]
val1 = 0
val2 = 1.#QNAN


prob_mod (3 : 3): [ 2.5 -1.420205019852908 0.4492273870641061 ]
------------------------------ Fine assegna1_v_indxeq_d

147: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
prob_mod (3 : 3): [ 2.5 -1.420205019852908 0.4492273870641061 ]
complemento = 1


ind (3 : 3): [ 1 2 3 ]
------------------------------ Fine which_v_indxNA_d

153: copia_v_indx_d	<=>	ris <- v[indx]
prob_mod (3 : 3): [ 2.5 -1.420205019852908 0.4492273870641061 ]
ind (3 : 3): [ 1 2 3 ]


tmp1_d (3 : 16): [ 2.5 -1.420205019852908 0.4492273870641061 ]
------------------------------ Fine copia_v_indx_d

154: min_v_d	<=>	ris <- min(v)
tmp1_d (3 : 16): [ 2.5 -1.420205019852908 0.4492273870641061 ]


min = -1.420205019852908
------------------------------ Fine min_v_d

157: somma1_vs_d	<=>	v <- v + s
prob_mod (3 : 3): [ 2.5 -1.420205019852908 0.4492273870641061 ]
s = 1.531316130964019


prob_mod (3 : 3): [ 4.031316130964019 0.1111111111111112 1.980543518028125 ]
------------------------------ Fine somma1_vs_d

160: assegna1_v_indxNA_d	<=>	v1[which(is.na(v2))] <- val oppure v1[which(!is.na(v2))] <- val
prob_mod (3 : 3): [ 4.031316130964019 0.1111111111111112 1.980543518028125 ]
prob_mod (3 : 3): [ 4.031316130964019 0.1111111111111112 1.980543518028125 ]
val = 0
complemento = 0


prob_mod (3 : 3): [ 4.031316130964019 0.1111111111111112 1.980543518028125 ]
------------------------------ Fine assegna1_v_indxNA_d

162: somma_v_d	<=>	ris <- sum(v, na.rm=canc_NA)
prob_mod (3 : 3): [ 4.031316130964019 0.1111111111111112 1.980543518028125 ]
canc_NA = 0



ris: 6.122970760103254
------------------------------ Fine somma_v_d

162: dividi1_vs_d	<=>	v <- v / div
prob_mod (3 : 3): [ 4.031316130964019 0.1111111111111112 1.980543518028125 ]
div = 6.123


prob_mod (3 : 3): [ 0.6583921904758593 0.01814660161944616 0.3234612079046946 ]
------------------------------ Fine dividi1_vs_d

164: vettore3s_i		<=>	ris <- c(el1, el2, el3)
el1 = 1, el2 = 2, el3 = 3


tmp1_i (3 : 3): [ 1 2 3 ]
------------------------------ Fine vettore3s_i


*** sampleB_p ***

*** sample_p ***
tmp1_i (3 : 3): [ 1 2 3 ]
k = 1, replace = 0
prob_mod (3 : 3): [ 0.6583921904758593 0.01814660161944616 0.3234612079046946 ]


ris (1 : 1): [ 1 ]
*****************************************


Stringhe allocate: 5 (2930 interne); stringhe deallocate: 0 (2655 interne)


*** assign_nodes ***
35: copia_v_i	<=>	ris[st:end] <- v[st:end]
h (5 : 5): [ 1 2 3 4 5 ]
st = 1
end = 5


or_h (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine copia_v_i

37: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 5
incr = 1


aus_h (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine seq_i

43: InitVett_i
index (2 : 2): [ 79854640 2424832 ]
val = 0


index (2 : 2): [ 0 0 ]
------------------------------ Fine InitVett_i

45: somma_righe_i	<=>	ris <- apply(m, 1, sum)
ris (2 x 2 : 2 x 2): [
	 0 1
	 1 0
 ]


M_in (2 : 2): [ 1 1 ]
------------------------------ Fine somma_righe_i

47: ordine_i	<=>	ris <- order(v, decreasing=decr)
M_in (2 : 2): [ 1 1 ]
decr = 1


Ord (2 : 2): [ 1 2 ]
------------------------------ Fine ordine_i

52: riga_d	<=>	ris <- m[r,]
ris (2 x 5 : 2 x 5): [
	 0.5 0.5 0.5 0.5 0.5
	 0.5 0.5 0.5 0.5 0.5
 ]
r = 1

p (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine riga_d

54: which_v_indxle_d	<=>	ris <- which(v<=val)
p (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
val = 0


tmp_i (0 : 5): [ ]
------------------------------ Fine which_v_indxle_d

61: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 0 0 0 0 ]
h (5 : 5): [ 1 2 3 4 5 ]


Sin_h (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_i

66: which_v_indxgt_i	<=>	ris <- which(v > val)
Sin_h (5 : 5): [ 0 0 0 0 0 ]
val = 4


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxgt_i

72: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
p (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
aus_h (5 : 5): [ 1 2 3 4 5 ]


tmp_d (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine assegna_v_indxNA_d

73: somma_v_d	<=>	ris <- sum(v, na.rm=canc_NA)
tmp_d (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
canc_NA = 0



ris: 2.5
------------------------------ Fine somma_v_d

74: dividi_vs_d	ris <- v / div
tmp_d (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
div = 2.500


p (5 : 5): [ 0.2 0.2 0.2 0.2 0.2 ]
------------------------------ Fine dividi_vs_d


*** sampleB_p ***

*** sample_p ***
h (5 : 5): [ 1 2 3 4 5 ]
k = 1, replace = 0
p (5 : 5): [ 0.2 0.2 0.2 0.2 0.2 ]


ris (1 : 1): [ 3 ]
*****************************************


Stringhe allocate: 5 (2990 interne); stringhe deallocate: 0 (2655 interne)

81: setdiff1_i	<=>	v1 <- setdiff(v1, v2)
h (5 : 5): [ 1 2 3 4 5 ]
ris (1 : 1): [ 3 ]
2048: esiste_v_i	<=>	elem %IN% v
elem = 3
h (5 : 5): [ 1 2 3 4 5 ]


indx = 3
------------------------------ Fine esiste_v_i

2050: elimina1_indx_i	<=>	v <- v[-indx]
h (5 : 5): [ 1 2 3 4 5 ]
indx = 3


h (4 : 5): [ 1 2 4 5 ]
------------------------------ Fine elimina1_indx_i



h (4 : 5): [ 1 2 4 5 ]
------------------------------ Fine setdiff1_i

83: which_vv_eq_i	<=>	ris <- which(v1 == v2)
or_h (5 : 5): [ 1 2 3 4 5 ]
ris (1 : 1): [ 3 ]
2017: esiste_v_i	<=>	elem %IN% v
elem = 3
or_h (5 : 5): [ 1 2 3 4 5 ]


indx = 3
------------------------------ Fine esiste_v_i



tmp_i (1 : 5): [ 3 ]
------------------------------ Fine which_vv_eq_i

84: setdiff1_i	<=>	v1 <- setdiff(v1, v2)
aus_h (5 : 5): [ 1 2 3 4 5 ]
tmp_i (1 : 5): [ 3 ]
2048: esiste_v_i	<=>	elem %IN% v
elem = 3
aus_h (5 : 5): [ 1 2 3 4 5 ]


indx = 3
------------------------------ Fine esiste_v_i

2050: elimina1_indx_i	<=>	v <- v[-indx]
aus_h (5 : 5): [ 1 2 3 4 5 ]
indx = 3


aus_h (4 : 5): [ 1 2 4 5 ]
------------------------------ Fine elimina1_indx_i



aus_h (4 : 5): [ 1 2 4 5 ]
------------------------------ Fine setdiff1_i

52: riga_d	<=>	ris <- m[r,]
ris (2 x 5 : 2 x 5): [
	 0.5 0.5 0.5 0.5 0.5
	 0.5 0.5 0.5 0.5 0.5
 ]
r = 2

p (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine riga_d

54: which_v_indxle_d	<=>	ris <- which(v<=val)
p (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
val = 0


tmp_i (0 : 5): [ ]
------------------------------ Fine which_v_indxle_d

61: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 0 0 0 0 ]
h (4 : 5): [ 1 2 4 5 ]


Sin_h (4 : 5): [ 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_i

66: which_v_indxgt_i	<=>	ris <- which(v > val)
Sin_h (4 : 5): [ 0 0 0 0 ]
val = 4


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxgt_i

72: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
p (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
aus_h (4 : 5): [ 1 2 4 5 ]


tmp_d (4 : 5): [ 0.5 0.5 0.5 0.5 ]
------------------------------ Fine assegna_v_indxNA_d

73: somma_v_d	<=>	ris <- sum(v, na.rm=canc_NA)
tmp_d (4 : 5): [ 0.5 0.5 0.5 0.5 ]
canc_NA = 0



ris: 2
------------------------------ Fine somma_v_d

74: dividi_vs_d	ris <- v / div
tmp_d (4 : 5): [ 0.5 0.5 0.5 0.5 ]
div = 2.000


p (4 : 5): [ 0.25 0.25 0.25 0.25 ]
------------------------------ Fine dividi_vs_d


*** sampleB_p ***

*** sample_p ***
h (4 : 5): [ 1 2 4 5 ]
k = 1, replace = 0
p (4 : 5): [ 0.25 0.25 0.25 0.25 ]


ris (1 : 1): [ 2 ]
*****************************************


Stringhe allocate: 5 (2990 interne); stringhe deallocate: 0 (2655 interne)

81: setdiff1_i	<=>	v1 <- setdiff(v1, v2)
h (4 : 5): [ 1 2 4 5 ]
ris (1 : 1): [ 2 ]
2048: esiste_v_i	<=>	elem %IN% v
elem = 2
h (4 : 5): [ 1 2 4 5 ]


indx = 2
------------------------------ Fine esiste_v_i

2050: elimina1_indx_i	<=>	v <- v[-indx]
h (4 : 5): [ 1 2 4 5 ]
indx = 2


h (3 : 5): [ 1 4 5 ]
------------------------------ Fine elimina1_indx_i



h (3 : 5): [ 1 4 5 ]
------------------------------ Fine setdiff1_i

83: which_vv_eq_i	<=>	ris <- which(v1 == v2)
or_h (5 : 5): [ 1 2 3 4 5 ]
ris (1 : 1): [ 2 ]
2017: esiste_v_i	<=>	elem %IN% v
elem = 2
or_h (5 : 5): [ 1 2 3 4 5 ]


indx = 2
------------------------------ Fine esiste_v_i



tmp_i (1 : 5): [ 2 ]
------------------------------ Fine which_vv_eq_i

84: setdiff1_i	<=>	v1 <- setdiff(v1, v2)
aus_h (4 : 5): [ 1 2 4 5 ]
tmp_i (1 : 5): [ 2 ]
2048: esiste_v_i	<=>	elem %IN% v
elem = 2
aus_h (4 : 5): [ 1 2 4 5 ]


indx = 2
------------------------------ Fine esiste_v_i

2050: elimina1_indx_i	<=>	v <- v[-indx]
aus_h (4 : 5): [ 1 2 4 5 ]
indx = 2


aus_h (3 : 5): [ 1 4 5 ]
------------------------------ Fine elimina1_indx_i



aus_h (3 : 5): [ 1 4 5 ]
------------------------------ Fine setdiff1_i

101: which_m_rowindxeq_i	<=>	ris <- which(m[r,] == val)
ris (2 x 2 : 2 x 2): [
	 0 1
	 1 0
 ]
riga = 1
val = 1


ind (1 : 5): [ 2 ]
------------------------------ Fine which_m_rowindxeq_i

103: copia_v_indx_i	<=>	ris <- v[indx]
index (2 : 2): [ 3 2 ]
ind (1 : 5): [ 2 ]


co (1 : 1): [ 2 ]
------------------------------ Fine copia_v_indx_i

105: assegna1_m_vv_i	<=>	m[vr, vc] <- val
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
ri (1 : 1): [ 3 ]
co (1 : 1): [ 2 ]
val = 1


Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 1 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine assegna1_m_vv_i

107: esiste_v_i	<=>	elem %IN% v
elem = 1
ris->indices (1 : 1): [ 1 ]


indx = 1
------------------------------ Fine esiste_v_i

109: accoda1_vv_i	<=>	v1 <- c(v1, v2)
ris (0 : 1): [ ]
ri (1 : 1): [ 3 ]


ris (1 : 1): [ 3 ]
------------------------------ Fine accoda_vv_i

101: which_m_rowindxeq_i	<=>	ris <- which(m[r,] == val)
ris (2 x 2 : 2 x 2): [
	 0 1
	 1 0
 ]
riga = 2
val = 1


ind (1 : 5): [ 1 ]
------------------------------ Fine which_m_rowindxeq_i

103: copia_v_indx_i	<=>	ris <- v[indx]
index (2 : 2): [ 3 2 ]
ind (1 : 5): [ 1 ]


co (1 : 1): [ 3 ]
------------------------------ Fine copia_v_indx_i

105: assegna1_m_vv_i	<=>	m[vr, vc] <- val
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 1 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
ri (1 : 1): [ 2 ]
co (1 : 1): [ 3 ]
val = 1


Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine assegna1_m_vv_i

107: esiste_v_i	<=>	elem %IN% v
elem = 2
ris->indices (1 : 1): [ 1 ]


indx = 0
------------------------------ Fine esiste_v_i


Stringhe allocate: 5 (3000 interne); stringhe deallocate: 0 (2720 interne)

332: accoda1_vv_i	<=>	v1 <- c(v1, v2)
h_new (0 : 0): [ ]
ris (1 : 1): [ 3 ]
ATTENZIONE (accoda_vv_i, linea connectivity_modular.c # 332): ingrandito il vettore da 0 a 1!


h_new (1 : 2): [ 3 ]
------------------------------ Fine accoda_vv_i

334: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]


Sout (5 : 5): [ 0 1 1 0 0 ]
------------------------------ Fine somma_colonne_i

336: max_v_i		<=>	ris <- max(v)
Sout (5 : 5): [ 0 1 1 0 0 ]


max = 1
------------------------------ Fine max_v_i

338: seq_i	<=>	ris <- seq(da, a, incr)
da = 0
a = 2
incr = 1


tmp2_i (3 : 3): [ 0 1 2 ]
------------------------------ Fine seq_i


*** hist1 ***
Sout (5 : 5): [ 0 1 1 0 0 ]
tmp2_i (3 : 3): [ 0 1 2 ]
right = 0
include_border = 1
naok = 0
29: InitVett_i
tmp1_i (2 : 3): [ 1 2 ]
val = 0


tmp1_i (2 : 3): [ 0 0 ]
------------------------------ Fine InitVett_i



tmp1_i (2 : 3): [ 3 2 ]

Stringhe allocate: 5 (3011 interne); stringhe deallocate: 0 (2726 interne)

340: promuovi_i	(implicita)
tmp1_i (2 : 3): [ 3 2 ]
ATTENZIONE (promuovi_i, linea connectivity_modular.c # 340): il vettore e` stato promosso da intero a double: i calcoli saranno rallentati!

tmp1_d (2 : 16): [ 3 2 ]
------------------------------ Fine promuovi_i

341: assegna1_v_segmv_d	<=>	v1[st:end] <- v2
Freq_out (7 : 7): [ 5 0 0 0 0 0 0 ]
start = 1
end = 2
tmp1_d (2 : 16): [ 3 2 ]


Freq_out (7 : 7): [ 3 2 0 0 0 0 0 ]
------------------------------ Fine assegna1_v_segmv_d

343: somma_righe_i	<=>	ris <- apply(m, 1, sum)
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]


Sin (5 : 5): [ 0 1 1 0 0 ]
------------------------------ Fine somma_righe_i

345: max_v_i		<=>	ris <- max(v)
Sin (5 : 5): [ 0 1 1 0 0 ]


max = 1
------------------------------ Fine max_v_i

347: seq_i	<=>	ris <- seq(da, a, incr)
da = 0
a = 2
incr = 1


tmp2_i (3 : 3): [ 0 1 2 ]
------------------------------ Fine seq_i


*** hist1 ***
Sin (5 : 5): [ 0 1 1 0 0 ]
tmp2_i (3 : 3): [ 0 1 2 ]
right = 0
include_border = 1
naok = 0
29: InitVett_i
tmp1_i (2 : 3): [ 3 2 ]
val = 0


tmp1_i (2 : 3): [ 0 0 ]
------------------------------ Fine InitVett_i



tmp1_i (2 : 3): [ 3 2 ]

Stringhe allocate: 5 (3012 interne); stringhe deallocate: 0 (2727 interne)

349: promuovi_i	(implicita)
tmp1_i (2 : 3): [ 3 2 ]
ATTENZIONE (promuovi_i, linea connectivity_modular.c # 349): il vettore e` stato promosso da intero a double: i calcoli saranno rallentati!

tmp1_d (2 : 16): [ 3 2 ]
------------------------------ Fine promuovi_i

350: assegna1_v_segmv_d	<=>	v1[st:end] <- v2
Freq_in (7 : 7): [ 5 0 0 0 0 0 0 ]
start = 1
end = 2
tmp1_d (2 : 16): [ 3 2 ]


Freq_in (7 : 7): [ 3 2 0 0 0 0 0 ]
------------------------------ Fine assegna1_v_segmv_d

110: somma_righe_i	<=>	ris <- apply(m, 1, sum)
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]


Sin (5 : 5): [ 0 1 1 0 0 ]
------------------------------ Fine somma_righe_i

112: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]


Sout (5 : 5): [ 0 1 1 0 0 ]
------------------------------ Fine somma_colonne_i


*** cluster_coeff ***
19: trasponi_i	<=>	ris <- t(m)
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]


tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine trasponi_i

20: somma1_m_i	<=>	m1 <- m1 + m2
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]


tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 2 0 0
	 0 2 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine somma1_m_i

22: which_m_indxne_i	<=>	ris <- which(m!=val)
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 2 0 0
	 0 2 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
val = 0


ind (2 : 25): [ 8 12 ]
------------------------------ Fine which_m_indxne_i

24: assegna1_ms_indx_i	<=>	m[indx] = val
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 2 0 0
	 0 2 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
ind (2 : 25): [ 8 12 ]
val = 1


tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine assegna1_ms_indx_i

26: assegna1_s_diag_i	<=>	diag_i(m) <- s
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
val = 0


tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine assegna1_s_diag_i

31: InitVett_d
ris (5 : 5): [ 0 0 0 0 0 ]
val = 0


ris (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

35: somma_riga_i	<=>	ris <- sum(m[riga, ])
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 1


ris: 0
------------------------------ Fine somma_riga_i

37: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
r = 1
val = 0


neighbours (0 : 25): [ ]
------------------------------ Fine which_m_rowindxne_i

35: somma_riga_i	<=>	ris <- sum(m[riga, ])
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 2


ris: 1
------------------------------ Fine somma_riga_i

37: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
r = 2
val = 0


neighbours (1 : 25): [ 3 ]
------------------------------ Fine which_m_rowindxne_i

35: somma_riga_i	<=>	ris <- sum(m[riga, ])
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 3


ris: 1
------------------------------ Fine somma_riga_i

37: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
r = 3
val = 0


neighbours (1 : 25): [ 2 ]
------------------------------ Fine which_m_rowindxne_i

35: somma_riga_i	<=>	ris <- sum(m[riga, ])
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 4


ris: 0
------------------------------ Fine somma_riga_i

37: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
r = 4
val = 0


neighbours (0 : 25): [ ]
------------------------------ Fine which_m_rowindxne_i

35: somma_riga_i	<=>	ris <- sum(m[riga, ])
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 5


ris: 0
------------------------------ Fine somma_riga_i

37: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
r = 5
val = 0


neighbours (0 : 25): [ ]
------------------------------ Fine which_m_rowindxne_i

69: media_v_d	<=>	ris <- mean(v)
ris (5 : 5): [ 0 0 0 0 0 ]


media = 0.000
------------------------------ Fine media_v_d


Stringhe allocate: 5 (3028 interne); stringhe deallocate: 0 (2743 interne)


*** module1 ***
44: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 3
incr = 1


tmp1_i (3 : 3): [ 1 2 3 ]
------------------------------ Fine seq_i


*** sampleB ***

***sample***
tmp1_i (3 : 3): [ 1 2 3 ]
k = 1, replace = 0


ris (1 : 1): [ 1 ]
*****************************************


Stringhe allocate: 5 (3043 interne); stringhe deallocate: 0 (2743 interne)


Stringhe allocate: 5 (3043 interne); stringhe deallocate: 0 (2743 interne)


*** mod1 ***
18: InitMatr_i
ris (1 x 1 : 1 x 1): [
	 79857104
 ]
val = 0


ris (1 x 1 : 1 x 1): [
	 0
 ]
------------------------------ Fine InitMatr_i


Stringhe allocate: 5 (3048 interne); stringhe deallocate: 0 (2743 interne)


*** probmod ***
46: InitMatr_i
checkOUT (1 x 3 : 1 x 3): [
	 79850544 1851747943 1936024687
 ]
val = 0


checkOUT (1 x 3 : 1 x 3): [
	 0 0 0
 ]
------------------------------ Fine InitMatr_i

48: InitMatr_i
checkIN (1 x 3 : 1 x 3): [
	 79851704 778334061 1918959715
 ]
val = 0


checkIN (1 x 3 : 1 x 3): [
	 0 0 0
 ]
------------------------------ Fine InitMatr_i

50: InitMatr_d
ris (1 x 3 : 1 x 3): [
	 8.527436546763282e-314 1.060997895729669e-313 2.470328229206233e-323
 ]
val = 0


ris (1 x 3 : 1 x 3): [
	 0 0 0
 ]
------------------------------ Fine InitMatr_d

52: somma_righe_i	<=>	ris <- apply(m, 1, sum)
ris (1 x 1 : 1 x 1): [
	 1
 ]


M_in (1 : 1): [ 1 ]
------------------------------ Fine somma_righe_i

54: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
ris (1 x 1 : 1 x 1): [
	 1
 ]


M_out (1 : 1): [ 1 ]
------------------------------ Fine somma_colonne_i

57: InitMatr_i
memory (1 x 3 : 1 x 3): [
	 79846216 778334061 1918959715
 ]
val = -2147483648


memory (1 x 3 : 1 x 3): [
	 -2147483648 -2147483648 -2147483648
 ]
------------------------------ Fine InitMatr_i

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (1 x 3 : 1 x 3): [
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 1


tmp_i1 (0 : 3): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (1 x 3 : 1 x 3): [
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 1


tmp_i2 (0 : 3): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 3): [ ]
tmp_i2 (0 : 3): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

92: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sout (5 : 5): [ 0 1 1 0 0 ]
h (3 : 5): [ 1 4 5 ]


tmp_i1 (3 : 3): [ 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (3 : 3): [ 0 0 0 ]
s = 1


ind (3 : 3): [ 1 1 1 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (3 : 3): [ 0 0 0 ]
s = 1


tmp_i1 (3 : 3): [ 1 1 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (3 : 3): [ 1 1 1 ]


T1 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (3 : 3): [ 1 1 1 ]
s = 1


tmp_i1 (3 : 3): [ 2 2 2 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (3 : 3): [ 2 2 2 ]


T2 (3 : 3): [ 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (3 : 3): [ 0 0 0 ]
s = 1


tmp_i1 (3 : 3): [ 1 1 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 3 2 0 0 0 0 0 ]
tmp_i1 (3 : 3): [ 1 1 1 ]


old1 (3 : 3): [ 3 3 3 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (3 : 3): [ 1 1 1 ]
s = 1


tmp_i1 (3 : 3): [ 2 2 2 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 3 2 0 0 0 0 0 ]
tmp_i1 (3 : 3): [ 2 2 2 ]


old2 (3 : 3): [ 2 2 2 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (3 : 3): [ 3 3 3 ]
s = -1


new1 (3 : 3): [ 2 2 2 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (3 : 3): [ 2 2 2 ]
s = 1


new2 (3 : 3): [ 3 3 3 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (3 : 3): [ 0 0 0 ]
s = 1


tmp_i1 (3 : 3): [ 1 1 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (3 : 3): [ 1 1 1 ]


toll1 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (3 : 3): [ 1 1 1 ]
s = 1


tmp_i1 (3 : 3): [ 2 2 2 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (3 : 3): [ 2 2 2 ]


toll2 (3 : 3): [ 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (3 : 3): [ 3 3 3 ]
T1 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


a (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


a (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (3 : 3): [ 2 2 2 ]
T1 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


b (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


b (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (3 : 3): [ 1 2 3 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (3 : 3): [ 5.842414621812633e-308 0 0 ]
val = 0


S1 (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (3 : 3): [ 2 2 2 ]
T2 (3 : 3): [ 3.614836360604185 3.614836360604185 3.614836360604185 ]


a (3 : 3): [ -1.614836360604185 -1.614836360604185 -1.614836360604185 ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (3 : 3): [ -1.614836360604185 -1.614836360604185 -1.614836360604185 ]


a (3 : 3): [ 1.614836360604185 1.614836360604185 1.614836360604185 ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (3 : 3): [ 3 3 3 ]
T2 (3 : 3): [ 3.614836360604185 3.614836360604185 3.614836360604185 ]


b (3 : 3): [ -0.6148363606041851 -0.6148363606041851 -0.6148363606041851 ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (3 : 3): [ -0.6148363606041851 -0.6148363606041851 -0.6148363606041851 ]


b (3 : 3): [ 0.6148363606041851 0.6148363606041851 0.6148363606041851 ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (3 : 3): [ 1.614836360604185 1.614836360604185 1.614836360604185 ]
b (3 : 3): [ 0.6148363606041851 0.6148363606041851 0.6148363606041851 ]


tmpm_d (3 x 2 : 3 x 2): [
	 1.614836360604185 0.6148363606041851
	 1.614836360604185 0.6148363606041851
	 1.614836360604185 0.6148363606041851
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (3 x 2 : 3 x 2): [
	 1.614836360604185 0.6148363606041851
	 1.614836360604185 0.6148363606041851
	 1.614836360604185 0.6148363606041851
 ]


m (3 : 3): [ 1.614836360604185 1.614836360604185 1.614836360604185 ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (3 : 3): [ 3.614836360604185 3.614836360604185 3.614836360604185 ]
complemento = 0


ind (0 : 3): [ ]
------------------------------ Fine which_v_indxNA_d

115: assegna1_vs_indx_d	<=>	v[indx] <- val
a (3 : 3): [ 1.614836360604185 1.614836360604185 1.614836360604185 ]
ind (0 : 3): [ ]
val = 0


a (3 : 3): [ 1.614836360604185 1.614836360604185 1.614836360604185 ]
------------------------------ Fine assegna1_vs_indx_d

117: assegna1_vs_indx_d	<=>	v[indx] <- val
b (3 : 3): [ 0.6148363606041851 0.6148363606041851 0.6148363606041851 ]
ind (0 : 3): [ ]
val = 0


b (3 : 3): [ 0.6148363606041851 0.6148363606041851 0.6148363606041851 ]
------------------------------ Fine assegna1_vs_indx_d

119: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (3 : 3): [ 1.614836360604185 1.614836360604185 1.614836360604185 ]
b (3 : 3): [ 0.6148363606041851 0.6148363606041851 0.6148363606041851 ]


tmpm_d (3 x 2 : 3 x 2): [
	 1.614836360604185 0.6148363606041851
	 1.614836360604185 0.6148363606041851
	 1.614836360604185 0.6148363606041851
 ]
------------------------------ Fine cbind2v_d

120: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (3 x 2 : 3 x 2): [
	 1.614836360604185 0.6148363606041851
	 1.614836360604185 0.6148363606041851
	 1.614836360604185 0.6148363606041851
 ]


m (3 : 3): [ 1.614836360604185 1.614836360604185 1.614836360604185 ]
------------------------------ Fine max_righe_d

122: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (3 : 3): [ 1.614836360604185 1.614836360604185 1.614836360604185 ]
b (3 : 3): [ 0.6148363606041851 0.6148363606041851 0.6148363606041851 ]
m (3 : 3): [ 1.614836360604185 1.614836360604185 1.614836360604185 ]
T2 (3 : 3): [ 3.614836360604185 3.614836360604185 3.614836360604185 ]


S2 (3 : 3): [ 0.4467246092252654 0.4467246092252654 0.4467246092252654 ]
------------------------------ Fine f_aux_d

124: diff_vv_d	<=>	ris <- v1 - v2
a (3 : 3): [ 1.614836360604185 1.614836360604185 1.614836360604185 ]
toll2 (3 : 3): [ 1 1 1 ]


tmp_d1 (3 : 3): [ 0.6148363606041851 0.6148363606041851 0.6148363606041851 ]
------------------------------ Fine diff_vv_d

125: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (3 : 3): [ 0.6148363606041851 0.6148363606041851 0.6148363606041851 ]
val = 0

ind1 (0 : 3): [ ]
------------------------------ Fine which_v_indxlt_d

127: diff_vv_d	<=>	ris <- v1 - v2
b (3 : 3): [ 0.6148363606041851 0.6148363606041851 0.6148363606041851 ]
toll2 (3 : 3): [ 1 1 1 ]


tmp_d1 (3 : 3): [ -0.3851636393958149 -0.3851636393958149 -0.3851636393958149 ]
------------------------------ Fine diff_vv_d

128: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (3 : 3): [ -0.3851636393958149 -0.3851636393958149 -0.3851636393958149 ]
val = 0


ind2 (0 : 3): [ ]
------------------------------ Fine which_v_indxgt_d

130: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (0 : 3): [ ]
ind2 (0 : 3): [ ]


tmp_i1 (0 : 3): [ ]
------------------------------ Fine interseca_i

132: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (3 : 3): [ 0.4467246092252654 0.4467246092252654 0.4467246092252654 ]
tmp_i1 (0 : 3): [ ]
val = -1.#INF


S2 (3 : 3): [ 0.4467246092252654 0.4467246092252654 0.4467246092252654 ]
------------------------------ Fine assegna1_vs_indx_d

134: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (3 : 3): [ 0.4467246092252654 0.4467246092252654 0.4467246092252654 ]
ind (0 : 3): [ ]
val = 0


S2 (3 : 3): [ 0.4467246092252654 0.4467246092252654 0.4467246092252654 ]
------------------------------ Fine assegna1_vs_indx_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (3 : 3): [ 3.614836360604185 3.614836360604185 3.614836360604185 ]
val = 0


ind (0 : 3): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (3 : 3): [ 0.4467246092252654 0.4467246092252654 0.4467246092252654 ]
ind (0 : 3): [ ]
val = -1.#INF


S2 (3 : 3): [ 0.4467246092252654 0.4467246092252654 0.4467246092252654 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (3 : 3): [ 0 0 0 ]
S2 (3 : 3): [ 0.4467246092252654 0.4467246092252654 0.4467246092252654 ]


ris (3 : 3): [ 0.4467246092252654 0.4467246092252654 0.4467246092252654 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
ris (3 : 3): [ 0.4467246092252654 0.4467246092252654 0.4467246092252654 ]
div = 2.000


ris (3 : 3): [ 0.2233623046126327 0.2233623046126327 0.2233623046126327 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (3208 interne); stringhe deallocate: 0 (2843 interne)

95: which_v_indxne_d	<=>	ris <- which(v != val)
ris (3 : 3): [ 0.2233623046126327 0.2233623046126327 0.2233623046126327 ]
val = -1.#INF


indok (3 : 3): [ 1 2 3 ]
------------------------------ Fine which_v_indxne_d

97: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkOUT (1 x 3 : 1 x 3): [
	 0 0 0
 ]
riga = 1
indok (3 : 3): [ 1 2 3 ]
val = 1


checkOUT (1 x 3 : 1 x 3): [
	 1 1 1
 ]
------------------------------ Fine aggiungi_riga_indx_i

104: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 3
incr = 1


tmp_i1 (3 : 3): [ 1 2 3 ]
------------------------------ Fine seq_i

105: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (3 : 3): [ 1 2 3 ]
indok (3 : 3): [ 1 2 3 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (3 : 3): [ 1 2 3 ]
st = 1
end = 3


indInf (3 : 3): [ 1 2 3 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (3 : 3): [ 1 2 3 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 3): [ 1 2 3 ]
indx = 1


indInf (2 : 3): [ 2 3 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (2 : 3): [ 2 3 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 3): [ 2 3 ]
indx = 1


indInf (1 : 3): [ 3 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (1 : 3): [ 3 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 3): [ 3 ]
indx = 1


indInf (0 : 3): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 3): [ ]
------------------------------ Fine setdiff_i

107: copia_v_indx_d	<=>	ris <- v[indx]
ris (3 : 3): [ 0.2233623046126327 0.2233623046126327 0.2233623046126327 ]
indok (3 : 3): [ 1 2 3 ]


tmp_d1 (3 : 3): [ 0.2233623046126327 0.2233623046126327 0.2233623046126327 ]
------------------------------ Fine copia_v_indx_d

111: min_v_d	<=>	ris <- min(v)
tmp_d1 (3 : 3): [ 0.2233623046126327 0.2233623046126327 0.2233623046126327 ]


min = 0.2233623046126327
------------------------------ Fine min_v_d

112: assegna1_vs_indx_d	<=>	v[indx] <- val
ris (3 : 3): [ 0.2233623046126327 0.2233623046126327 0.2233623046126327 ]
indInf (0 : 3): [ ]
val = -1


ris (3 : 3): [ 0.2233623046126327 0.2233623046126327 0.2233623046126327 ]
------------------------------ Fine assegna1_vs_indx_d

128: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 1 1 0 0 ]
h (3 : 5): [ 1 4 5 ]


tmp_i1 (3 : 3): [ 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (3 : 3): [ 0 0 0 ]
s = 1


ind (3 : 3): [ 1 1 1 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (3 : 3): [ 0 0 0 ]
s = 1


tmp_i1 (3 : 3): [ 1 1 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
tmp_i1 (3 : 3): [ 1 1 1 ]


T1 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (3 : 3): [ 1 1 1 ]
s = 1


tmp_i1 (3 : 3): [ 2 2 2 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
tmp_i1 (3 : 3): [ 2 2 2 ]


T2 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (3 : 3): [ 0 0 0 ]
s = 1


tmp_i1 (3 : 3): [ 1 1 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 3 2 0 0 0 0 0 ]
tmp_i1 (3 : 3): [ 1 1 1 ]


old1 (3 : 3): [ 3 3 3 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (3 : 3): [ 1 1 1 ]
s = 1


tmp_i1 (3 : 3): [ 2 2 2 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 3 2 0 0 0 0 0 ]
tmp_i1 (3 : 3): [ 2 2 2 ]


old2 (3 : 3): [ 2 2 2 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (3 : 3): [ 3 3 3 ]
s = -1


new1 (3 : 3): [ 2 2 2 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (3 : 3): [ 2 2 2 ]
s = 1


new2 (3 : 3): [ 3 3 3 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (3 : 3): [ 0 0 0 ]
s = 1


tmp_i1 (3 : 3): [ 1 1 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (3 : 3): [ 1 1 1 ]


toll1 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (3 : 3): [ 1 1 1 ]
s = 1


tmp_i1 (3 : 3): [ 2 2 2 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (3 : 3): [ 2 2 2 ]


toll2 (3 : 3): [ 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (3 : 3): [ 3 3 3 ]
T1 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


a (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


a (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (3 : 3): [ 2 2 2 ]
T1 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


b (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


b (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (3 : 3): [ 1 2 3 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
val = 0


S1 (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (3 : 3): [ 2 2 2 ]
T2 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


a (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


a (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (3 : 3): [ 3 3 3 ]
T2 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


b (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


b (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
b (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


tmpm_d (3 x 2 : 3 x 2): [
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (3 x 2 : 3 x 2): [
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
 ]


m (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (3 : 3): [ 1 2 3 ]
------------------------------ Fine which_v_indxNA_d

140: InitVett_d
S2 (3 : 3): [ 2.121995790965272e-314 0 3.904823721502775e-316 ]
val = 0


S2 (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
val = 0


ind (0 : 3): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (3 : 3): [ 0 0 0 ]
ind (0 : 3): [ ]
val = -1.#INF


S2 (3 : 3): [ 0 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (3 : 3): [ 0 0 0 ]
S2 (3 : 3): [ 0 0 0 ]


ris (3 : 3): [ 0 0 0 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
ris (3 : 3): [ 0 0 0 ]
div = 2.000


ris (3 : 3): [ 0 0 0 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (3313 interne); stringhe deallocate: 0 (2928 interne)

131: which_v_indxne_d	<=>	ris <- which(v != val)
ris (3 : 3): [ 0 0 0 ]
val = -1.#INF


indok (3 : 3): [ 1 2 3 ]
------------------------------ Fine which_v_indxne_d

133: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkIN (1 x 3 : 1 x 3): [
	 0 0 0
 ]
riga = 1
indok (3 : 3): [ 1 2 3 ]
val = 1


checkIN (1 x 3 : 1 x 3): [
	 1 1 1
 ]
------------------------------ Fine aggiungi_riga_indx_i

141: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 3
incr = 1


tmp_i1 (3 : 3): [ 1 2 3 ]
------------------------------ Fine seq_i

142: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (3 : 3): [ 1 2 3 ]
indok (3 : 3): [ 1 2 3 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (3 : 3): [ 1 2 3 ]
st = 1
end = 3


indInf (3 : 3): [ 1 2 3 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (3 : 3): [ 1 2 3 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 3): [ 1 2 3 ]
indx = 1


indInf (2 : 3): [ 2 3 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (2 : 3): [ 2 3 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 3): [ 2 3 ]
indx = 1


indInf (1 : 3): [ 3 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (1 : 3): [ 3 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 3): [ 3 ]
indx = 1


indInf (0 : 3): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 3): [ ]
------------------------------ Fine setdiff_i

144: copia_v_indx_d	<=>	ris <- v[indx]
ris (3 : 3): [ 0 0 0 ]
indok (3 : 3): [ 1 2 3 ]


tmp_d1 (3 : 3): [ 0 0 0 ]
------------------------------ Fine copia_v_indx_d

148: min_v_d	<=>	ris <- min(v)
tmp_d1 (3 : 3): [ 0 0 0 ]


min = 0
------------------------------ Fine min_v_d

149: assegna1_vs_indx_d	<=>	v[indx] <- val
ris (3 : 3): [ 0 0 0 ]
indInf (0 : 3): [ ]
val = -1


ris (3 : 3): [ 0 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

159: somma_vv_d	<=>	ris <- v1 + v2
ris (3 : 3): [ 0.2233623046126327 0.2233623046126327 0.2233623046126327 ]
ris (3 : 3): [ 0 0 0 ]


tmp_d1 (3 : 3): [ 0.2233623046126327 0.2233623046126327 0.2233623046126327 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (1 x 3 : 1 x 3): [
	 0 0 0
 ]
riga = 1
tmp_d1 (3 : 3): [ 0.2233623046126327 0.2233623046126327 0.2233623046126327 ]


ris (1 x 3 : 1 x 3): [
	 0.2233623046126327 0.2233623046126327 0.2233623046126327
 ]
------------------------------ Fine aggiungi_mv_riga_d

168: somma_m_d	<=>	ris <- sum(m)
ris (1 x 3 : 1 x 3): [
	 0.2233623046126327 0.2233623046126327 0.2233623046126327
 ]


ris: 0.6700869138378981
------------------------------ Fine somma_m_d

173: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
checkIN (1 x 3 : 1 x 3): [
	 1 1 1
 ]


aus (3 : 3): [ 1 1 1 ]
------------------------------ Fine somma_colonne_i

175: which_v_indxne_i	<=>	ris <- which(v != val)
aus (3 : 3): [ 1 1 1 ]
val = 0


tmp_i1 (3 : 3): [ 1 2 3 ]
------------------------------ Fine which_v_indxne_i

186: somma_righe_i	<=>	ris <- apply(m, 1, sum)
checkIN (1 x 3 : 1 x 3): [
	 1 1 1
 ]


rs (1 : 1): [ 3 ]
------------------------------ Fine somma_righe_i

188: ordine_i	<=>	ris <- order(v, decreasing=decr)
rs (1 : 1): [ 3 ]
decr = 0


ord_ind (1 : 1): [ 1 ]
------------------------------ Fine ordine_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (1 x 3 : 1 x 3): [
	 1 1 1
 ]
r = 1
val = 0


I_add (3 : 3): [ 1 2 3 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
I (0 : 0): [ ]
I_add (3 : 3): [ 1 2 3 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (3 : 3): [ 1 2 3 ]


ris (3 : 3): [ 1 2 3 ]
------------------------------ Fine elimina_doppi_i



ris (3 : 3): [ 1 2 3 ]
------------------------------ Fine unione1_i

216: assegna1_mindxlt_i	<=>	m1[which(m2<val1)] <- val2
checkOUT (1 x 3 : 1 x 3): [
	 1 1 1
 ]
checkOUT (1 x 3 : 1 x 3): [
	 1 1 1
 ]
val1 = 0
val2 = 0


checkOUT (1 x 3 : 1 x 3): [
	 1 1 1
 ]
------------------------------ Fine assegna1_mindxlt_i

218: assegna1_m_indxgt_i	<=>	m1[which(m2>val1)] <- val2
checkOUT (1 x 3 : 1 x 3): [
	 1 1 1
 ]
checkOUT (1 x 3 : 1 x 3): [
	 1 1 1
 ]
val1 = 0
val2 = 1


checkOUT (1 x 3 : 1 x 3): [
	 1 1 1
 ]
------------------------------ Fine assegna1_m_indxgt_i

220: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
checkOUT (1 x 3 : 1 x 3): [
	 1 1 1
 ]


aus (3 : 3): [ 1 1 1 ]
------------------------------ Fine somma_colonne_i

222: which_v_indxne_i	<=>	ris <- which(v != val)
aus (3 : 3): [ 1 1 1 ]
val = 0


tmp_i1 (3 : 3): [ 1 2 3 ]
------------------------------ Fine which_v_indxne_i

232: somma_righe_i	<=>	ris <- apply(m, 1, sum)
checkOUT (1 x 3 : 1 x 3): [
	 1 1 1
 ]


rs (1 : 1): [ 3 ]
------------------------------ Fine somma_righe_i

234: ordine_i	<=>	ris <- order(v, decreasing=decr)
rs (1 : 1): [ 3 ]
decr = 0


ord_ind (1 : 1): [ 1 ]
------------------------------ Fine ordine_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (1 x 3 : 1 x 3): [
	 1 1 1
 ]
r = 1
val = 0


I_add (3 : 3): [ 1 2 3 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (0 : 3): [ ]
I_add (3 : 3): [ 1 2 3 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (3 : 3): [ 1 2 3 ]


ris (3 : 3): [ 1 2 3 ]
------------------------------ Fine elimina_doppi_i



ris (3 : 3): [ 1 2 3 ]
------------------------------ Fine unione1_i


Stringhe allocate: 5 (3358 interne); stringhe deallocate: 0 (3048 interne)


Stringhe allocate: 5 (3363 interne); stringhe deallocate: 0 (3063 interne)


*** module2 ***
44: seq_i	<=>	ris <- seq(da, a, incr)
da = 2
a = 3
incr = 1


tmp1_i (2 : 2): [ 2 3 ]
------------------------------ Fine seq_i


*** sampleB ***

***sample***
tmp1_i (2 : 2): [ 2 3 ]
k = 1, replace = 0


ris (1 : 1): [ 2 ]
*****************************************


Stringhe allocate: 5 (3373 interne); stringhe deallocate: 0 (3063 interne)


Stringhe allocate: 5 (3373 interne); stringhe deallocate: 0 (3063 interne)


*** mod2 ***
17: InitMatr_i
ris (2 x 2 : 2 x 2): [
	 79853128 1918959715
	 778334061 25390
 ]
val = 0


ris (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
------------------------------ Fine InitMatr_i


Stringhe allocate: 5 (3378 interne); stringhe deallocate: 0 (3063 interne)


*** probmod ***
46: InitMatr_i
checkOUT (2 x 3 : 2 x 3): [
	 79858992 0 79037408
	 3 0 1050112
 ]
val = 0


checkOUT (2 x 3 : 2 x 3): [
	 0 0 0
	 0 0 0
 ]
------------------------------ Fine InitMatr_i

48: InitMatr_i
checkIN (2 x 3 : 2 x 3): [
	 79849824 0 79033376
	 1 0 0
 ]
val = 0


checkIN (2 x 3 : 2 x 3): [
	 0 0 0
	 0 0 0
 ]
------------------------------ Fine InitMatr_i

50: InitMatr_d
ris (2 x 3 : 2 x 3): [
	 0 0 0
	 0 0 1.#QNAN
 ]
val = 0


ris (2 x 3 : 2 x 3): [
	 0 0 0
	 0 0 0
 ]
------------------------------ Fine InitMatr_d

52: somma_righe_i	<=>	ris <- apply(m, 1, sum)
ris (2 x 2 : 2 x 2): [
	 0 0
	 1 0
 ]


M_in (2 : 2): [ 0 1 ]
------------------------------ Fine somma_righe_i

54: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
ris (2 x 2 : 2 x 2): [
	 0 0
	 1 0
 ]


M_out (2 : 2): [ 1 0 ]
------------------------------ Fine somma_colonne_i

57: InitMatr_i
memory (2 x 3 : 2 x 3): [
	 79850032 0 79036976
	 3 0 0
 ]
val = -2147483648


memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
------------------------------ Fine InitMatr_i

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 0


tmp_i1 (0 : 6): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 1


tmp_i2 (0 : 6): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 6): [ ]
tmp_i2 (0 : 6): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

92: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sout (5 : 5): [ 0 1 1 0 0 ]
h (3 : 5): [ 1 4 5 ]


tmp_i1 (3 : 6): [ 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (3 : 6): [ 0 0 0 ]
s = 1


ind (3 : 3): [ 1 1 1 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (3 : 6): [ 0 0 0 ]
s = 1


tmp_i1 (3 : 3): [ 1 1 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (3 : 3): [ 1 1 1 ]


T1 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (3 : 3): [ 1 1 1 ]
s = 1


tmp_i1 (3 : 3): [ 2 2 2 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (3 : 3): [ 2 2 2 ]


T2 (3 : 3): [ 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (3 : 6): [ 0 0 0 ]
s = 1


tmp_i1 (3 : 3): [ 1 1 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 3 2 0 0 0 0 0 ]
tmp_i1 (3 : 3): [ 1 1 1 ]


old1 (3 : 3): [ 3 3 3 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (3 : 3): [ 1 1 1 ]
s = 1


tmp_i1 (3 : 3): [ 2 2 2 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 3 2 0 0 0 0 0 ]
tmp_i1 (3 : 3): [ 2 2 2 ]


old2 (3 : 3): [ 2 2 2 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (3 : 3): [ 3 3 3 ]
s = -1


new1 (3 : 3): [ 2 2 2 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (3 : 3): [ 2 2 2 ]
s = 1


new2 (3 : 3): [ 3 3 3 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (3 : 6): [ 0 0 0 ]
s = 1


tmp_i1 (3 : 3): [ 1 1 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (3 : 3): [ 1 1 1 ]


toll1 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (3 : 3): [ 1 1 1 ]
s = 1


tmp_i1 (3 : 3): [ 2 2 2 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (3 : 3): [ 2 2 2 ]


toll2 (3 : 3): [ 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (3 : 3): [ 3 3 3 ]
T1 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


a (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


a (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (3 : 3): [ 2 2 2 ]
T1 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


b (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


b (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (3 : 3): [ 1 2 3 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (3 : 3): [ 6.40544372414441e-314 0 3.904809492412175e-316 ]
val = 0


S1 (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (3 : 3): [ 2 2 2 ]
T2 (3 : 3): [ 3.614836360604185 3.614836360604185 3.614836360604185 ]


a (3 : 3): [ -1.614836360604185 -1.614836360604185 -1.614836360604185 ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (3 : 3): [ -1.614836360604185 -1.614836360604185 -1.614836360604185 ]


a (3 : 3): [ 1.614836360604185 1.614836360604185 1.614836360604185 ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (3 : 3): [ 3 3 3 ]
T2 (3 : 3): [ 3.614836360604185 3.614836360604185 3.614836360604185 ]


b (3 : 3): [ -0.6148363606041851 -0.6148363606041851 -0.6148363606041851 ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (3 : 3): [ -0.6148363606041851 -0.6148363606041851 -0.6148363606041851 ]


b (3 : 3): [ 0.6148363606041851 0.6148363606041851 0.6148363606041851 ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (3 : 3): [ 1.614836360604185 1.614836360604185 1.614836360604185 ]
b (3 : 3): [ 0.6148363606041851 0.6148363606041851 0.6148363606041851 ]


tmpm_d (3 x 2 : 3 x 2): [
	 1.614836360604185 0.6148363606041851
	 1.614836360604185 0.6148363606041851
	 1.614836360604185 0.6148363606041851
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (3 x 2 : 3 x 2): [
	 1.614836360604185 0.6148363606041851
	 1.614836360604185 0.6148363606041851
	 1.614836360604185 0.6148363606041851
 ]


m (3 : 3): [ 1.614836360604185 1.614836360604185 1.614836360604185 ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (3 : 3): [ 3.614836360604185 3.614836360604185 3.614836360604185 ]
complemento = 0


ind (0 : 3): [ ]
------------------------------ Fine which_v_indxNA_d

115: assegna1_vs_indx_d	<=>	v[indx] <- val
a (3 : 3): [ 1.614836360604185 1.614836360604185 1.614836360604185 ]
ind (0 : 3): [ ]
val = 0


a (3 : 3): [ 1.614836360604185 1.614836360604185 1.614836360604185 ]
------------------------------ Fine assegna1_vs_indx_d

117: assegna1_vs_indx_d	<=>	v[indx] <- val
b (3 : 3): [ 0.6148363606041851 0.6148363606041851 0.6148363606041851 ]
ind (0 : 3): [ ]
val = 0


b (3 : 3): [ 0.6148363606041851 0.6148363606041851 0.6148363606041851 ]
------------------------------ Fine assegna1_vs_indx_d

119: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (3 : 3): [ 1.614836360604185 1.614836360604185 1.614836360604185 ]
b (3 : 3): [ 0.6148363606041851 0.6148363606041851 0.6148363606041851 ]


tmpm_d (3 x 2 : 3 x 2): [
	 1.614836360604185 0.6148363606041851
	 1.614836360604185 0.6148363606041851
	 1.614836360604185 0.6148363606041851
 ]
------------------------------ Fine cbind2v_d

120: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (3 x 2 : 3 x 2): [
	 1.614836360604185 0.6148363606041851
	 1.614836360604185 0.6148363606041851
	 1.614836360604185 0.6148363606041851
 ]


m (3 : 3): [ 1.614836360604185 1.614836360604185 1.614836360604185 ]
------------------------------ Fine max_righe_d

122: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (3 : 3): [ 1.614836360604185 1.614836360604185 1.614836360604185 ]
b (3 : 3): [ 0.6148363606041851 0.6148363606041851 0.6148363606041851 ]
m (3 : 3): [ 1.614836360604185 1.614836360604185 1.614836360604185 ]
T2 (3 : 3): [ 3.614836360604185 3.614836360604185 3.614836360604185 ]


S2 (3 : 3): [ 0.4467246092252654 0.4467246092252654 0.4467246092252654 ]
------------------------------ Fine f_aux_d

124: diff_vv_d	<=>	ris <- v1 - v2
a (3 : 3): [ 1.614836360604185 1.614836360604185 1.614836360604185 ]
toll2 (3 : 3): [ 1 1 1 ]


tmp_d1 (3 : 3): [ 0.6148363606041851 0.6148363606041851 0.6148363606041851 ]
------------------------------ Fine diff_vv_d

125: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (3 : 3): [ 0.6148363606041851 0.6148363606041851 0.6148363606041851 ]
val = 0

ind1 (0 : 3): [ ]
------------------------------ Fine which_v_indxlt_d

127: diff_vv_d	<=>	ris <- v1 - v2
b (3 : 3): [ 0.6148363606041851 0.6148363606041851 0.6148363606041851 ]
toll2 (3 : 3): [ 1 1 1 ]


tmp_d1 (3 : 3): [ -0.3851636393958149 -0.3851636393958149 -0.3851636393958149 ]
------------------------------ Fine diff_vv_d

128: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (3 : 3): [ -0.3851636393958149 -0.3851636393958149 -0.3851636393958149 ]
val = 0


ind2 (0 : 3): [ ]
------------------------------ Fine which_v_indxgt_d

130: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (0 : 3): [ ]
ind2 (0 : 3): [ ]


tmp_i1 (0 : 3): [ ]
------------------------------ Fine interseca_i

132: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (3 : 3): [ 0.4467246092252654 0.4467246092252654 0.4467246092252654 ]
tmp_i1 (0 : 3): [ ]
val = -1.#INF


S2 (3 : 3): [ 0.4467246092252654 0.4467246092252654 0.4467246092252654 ]
------------------------------ Fine assegna1_vs_indx_d

134: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (3 : 3): [ 0.4467246092252654 0.4467246092252654 0.4467246092252654 ]
ind (0 : 3): [ ]
val = 0


S2 (3 : 3): [ 0.4467246092252654 0.4467246092252654 0.4467246092252654 ]
------------------------------ Fine assegna1_vs_indx_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (3 : 3): [ 3.614836360604185 3.614836360604185 3.614836360604185 ]
val = 0


ind (0 : 3): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (3 : 3): [ 0.4467246092252654 0.4467246092252654 0.4467246092252654 ]
ind (0 : 3): [ ]
val = -1.#INF


S2 (3 : 3): [ 0.4467246092252654 0.4467246092252654 0.4467246092252654 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (3 : 3): [ 0 0 0 ]
S2 (3 : 3): [ 0.4467246092252654 0.4467246092252654 0.4467246092252654 ]


ris (3 : 3): [ 0.4467246092252654 0.4467246092252654 0.4467246092252654 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
ris (3 : 3): [ 0.4467246092252654 0.4467246092252654 0.4467246092252654 ]
div = 2.000


ris (3 : 3): [ 0.2233623046126327 0.2233623046126327 0.2233623046126327 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (3538 interne); stringhe deallocate: 0 (3163 interne)

95: which_v_indxne_d	<=>	ris <- which(v != val)
ris (3 : 3): [ 0.2233623046126327 0.2233623046126327 0.2233623046126327 ]
val = -1.#INF


indok (3 : 3): [ 1 2 3 ]
------------------------------ Fine which_v_indxne_d

97: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkOUT (2 x 3 : 2 x 3): [
	 0 0 0
	 0 0 0
 ]
riga = 1
indok (3 : 3): [ 1 2 3 ]
val = 1


checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 0 0 0
 ]
------------------------------ Fine aggiungi_riga_indx_i

104: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 3
incr = 1


tmp_i1 (3 : 6): [ 1 2 3 ]
------------------------------ Fine seq_i

105: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (3 : 6): [ 1 2 3 ]
indok (3 : 3): [ 1 2 3 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (3 : 6): [ 1 2 3 ]
st = 1
end = 3


indInf (3 : 3): [ 1 2 3 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (3 : 3): [ 1 2 3 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 3): [ 1 2 3 ]
indx = 1


indInf (2 : 3): [ 2 3 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (2 : 3): [ 2 3 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 3): [ 2 3 ]
indx = 1


indInf (1 : 3): [ 3 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (1 : 3): [ 3 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 3): [ 3 ]
indx = 1


indInf (0 : 3): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 3): [ ]
------------------------------ Fine setdiff_i

107: copia_v_indx_d	<=>	ris <- v[indx]
ris (3 : 3): [ 0.2233623046126327 0.2233623046126327 0.2233623046126327 ]
indok (3 : 3): [ 1 2 3 ]


tmp_d1 (3 : 3): [ 0.2233623046126327 0.2233623046126327 0.2233623046126327 ]
------------------------------ Fine copia_v_indx_d

111: min_v_d	<=>	ris <- min(v)
tmp_d1 (3 : 3): [ 0.2233623046126327 0.2233623046126327 0.2233623046126327 ]


min = 0.2233623046126327
------------------------------ Fine min_v_d

112: assegna1_vs_indx_d	<=>	v[indx] <- val
ris (3 : 3): [ 0.2233623046126327 0.2233623046126327 0.2233623046126327 ]
indInf (0 : 3): [ ]
val = -1


ris (3 : 3): [ 0.2233623046126327 0.2233623046126327 0.2233623046126327 ]
------------------------------ Fine assegna1_vs_indx_d

155: InitVett_d
S_in (3 : 3): [ 3.945635124859329e-316 0 0 ]
val = 0


S_in (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

156: aggiungi_ms_riga_i	<=>	m[riga,] <- val # riga <= dim(m)[0] + 1
checkIN (2 x 3 : 2 x 3): [
	 0 0 0
	 0 0 0
 ]
riga = 1, val = 1


checkIN (2 x 3 : 2 x 3): [
	 1 1 1
	 0 0 0
 ]
------------------------------ Fine aggiungi_ms_riga_i

159: somma_vv_d	<=>	ris <- v1 + v2
ris (3 : 3): [ 0.2233623046126327 0.2233623046126327 0.2233623046126327 ]
S_in (3 : 3): [ 0 0 0 ]


tmp_d1 (3 : 3): [ 0.2233623046126327 0.2233623046126327 0.2233623046126327 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (2 x 3 : 2 x 3): [
	 0 0 0
	 0 0 0
 ]
riga = 1
tmp_d1 (3 : 3): [ 0.2233623046126327 0.2233623046126327 0.2233623046126327 ]


ris (2 x 3 : 2 x 3): [
	 0.2233623046126327 0.2233623046126327 0.2233623046126327
	 0 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_d

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 1


tmp_i1 (0 : 6): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 0


tmp_i2 (0 : 6): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 6): [ ]
tmp_i2 (0 : 6): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

119: InitVett_d
ris (3 : 3): [ 0.2233623046126327 0.2233623046126327 0.2233623046126327 ]
val = 0


ris (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

122: InitVett_i
tmp_i1 (3 : 6): [ 1 2 3 ]
val = 1


tmp_i1 (3 : 6): [ 1 1 1 ]
------------------------------ Fine InitVett_i

123: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 0 0 0
 ]
riga = 2
tmp_i1 (3 : 6): [ 1 1 1 ]


checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]
------------------------------ Fine aggiungi_mv_riga_i

128: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 1 1 0 0 ]
h (3 : 5): [ 1 4 5 ]


tmp_i1 (3 : 6): [ 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (3 : 6): [ 0 0 0 ]
s = 1


ind (3 : 3): [ 1 1 1 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (3 : 6): [ 0 0 0 ]
s = 1


tmp_i1 (3 : 3): [ 1 1 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
tmp_i1 (3 : 3): [ 1 1 1 ]


T1 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (3 : 3): [ 1 1 1 ]
s = 1


tmp_i1 (3 : 3): [ 2 2 2 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
tmp_i1 (3 : 3): [ 2 2 2 ]


T2 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (3 : 6): [ 0 0 0 ]
s = 1


tmp_i1 (3 : 3): [ 1 1 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 3 2 0 0 0 0 0 ]
tmp_i1 (3 : 3): [ 1 1 1 ]


old1 (3 : 3): [ 3 3 3 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (3 : 3): [ 1 1 1 ]
s = 1


tmp_i1 (3 : 3): [ 2 2 2 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 3 2 0 0 0 0 0 ]
tmp_i1 (3 : 3): [ 2 2 2 ]


old2 (3 : 3): [ 2 2 2 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (3 : 3): [ 3 3 3 ]
s = -1


new1 (3 : 3): [ 2 2 2 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (3 : 3): [ 2 2 2 ]
s = 1


new2 (3 : 3): [ 3 3 3 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (3 : 6): [ 0 0 0 ]
s = 1


tmp_i1 (3 : 3): [ 1 1 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (3 : 3): [ 1 1 1 ]


toll1 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (3 : 3): [ 1 1 1 ]
s = 1


tmp_i1 (3 : 3): [ 2 2 2 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (3 : 3): [ 2 2 2 ]


toll2 (3 : 3): [ 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (3 : 3): [ 3 3 3 ]
T1 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


a (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


a (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (3 : 3): [ 2 2 2 ]
T1 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


b (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


b (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (3 : 3): [ 1 2 3 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (3 : 3): [ -0.3851635500413377 -0.3851636393958149 -0.3851636393958149 ]
val = 0


S1 (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (3 : 3): [ 2 2 2 ]
T2 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


a (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


a (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (3 : 3): [ 3 3 3 ]
T2 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


b (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


b (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
b (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


tmpm_d (3 x 2 : 3 x 2): [
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (3 x 2 : 3 x 2): [
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
 ]


m (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (3 : 3): [ 1 2 3 ]
------------------------------ Fine which_v_indxNA_d

140: InitVett_d
S2 (3 : 3): [ 5.842414621812633e-308 0 0 ]
val = 0


S2 (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
val = 0


ind (0 : 3): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (3 : 3): [ 0 0 0 ]
ind (0 : 3): [ ]
val = -1.#INF


S2 (3 : 3): [ 0 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (3 : 3): [ 0 0 0 ]
S2 (3 : 3): [ 0 0 0 ]


S_in (3 : 3): [ 0 0 0 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
S_in (3 : 3): [ 0 0 0 ]
div = 2.000


S_in (3 : 3): [ 0 0 0 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (3643 interne); stringhe deallocate: 0 (3248 interne)

131: which_v_indxne_d	<=>	ris <- which(v != val)
S_in (3 : 3): [ 0 0 0 ]
val = -1.#INF


indok (3 : 3): [ 1 2 3 ]
------------------------------ Fine which_v_indxne_d

133: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkIN (2 x 3 : 2 x 3): [
	 1 1 1
	 0 0 0
 ]
riga = 2
indok (3 : 3): [ 1 2 3 ]
val = 1


checkIN (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]
------------------------------ Fine aggiungi_riga_indx_i

141: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 3
incr = 1


tmp_i1 (3 : 6): [ 1 2 3 ]
------------------------------ Fine seq_i

142: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (3 : 6): [ 1 2 3 ]
indok (3 : 3): [ 1 2 3 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (3 : 6): [ 1 2 3 ]
st = 1
end = 3


indInf (3 : 3): [ 1 2 3 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (3 : 3): [ 1 2 3 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 3): [ 1 2 3 ]
indx = 1


indInf (2 : 3): [ 2 3 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (2 : 3): [ 2 3 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 3): [ 2 3 ]
indx = 1


indInf (1 : 3): [ 3 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (1 : 3): [ 3 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 3): [ 3 ]
indx = 1


indInf (0 : 3): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 3): [ ]
------------------------------ Fine setdiff_i

144: copia_v_indx_d	<=>	ris <- v[indx]
S_in (3 : 3): [ 0 0 0 ]
indok (3 : 3): [ 1 2 3 ]


tmp_d1 (3 : 3): [ 0 0 0 ]
------------------------------ Fine copia_v_indx_d

148: min_v_d	<=>	ris <- min(v)
tmp_d1 (3 : 3): [ 0 0 0 ]


min = 0
------------------------------ Fine min_v_d

149: assegna1_vs_indx_d	<=>	v[indx] <- val
S_in (3 : 3): [ 0 0 0 ]
indInf (0 : 3): [ ]
val = -1


S_in (3 : 3): [ 0 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

159: somma_vv_d	<=>	ris <- v1 + v2
ris (3 : 3): [ 0 0 0 ]
S_in (3 : 3): [ 0 0 0 ]


tmp_d1 (3 : 3): [ 0 0 0 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (2 x 3 : 2 x 3): [
	 0.2233623046126327 0.2233623046126327 0.2233623046126327
	 0 0 0
 ]
riga = 2
tmp_d1 (3 : 3): [ 0 0 0 ]


ris (2 x 3 : 2 x 3): [
	 0.2233623046126327 0.2233623046126327 0.2233623046126327
	 0 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_d

168: somma_m_d	<=>	ris <- sum(m)
ris (2 x 3 : 2 x 3): [
	 0.2233623046126327 0.2233623046126327 0.2233623046126327
	 0 0 0
 ]


ris: 0.6700869138378981
------------------------------ Fine somma_m_d

173: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
checkIN (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]


aus (3 : 3): [ 2 2 2 ]
------------------------------ Fine somma_colonne_i

175: which_v_indxne_i	<=>	ris <- which(v != val)
aus (3 : 3): [ 2 2 2 ]
val = 0


tmp_i1 (3 : 6): [ 1 2 3 ]
------------------------------ Fine which_v_indxne_i

186: somma_righe_i	<=>	ris <- apply(m, 1, sum)
checkIN (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]


rs (2 : 2): [ 3 3 ]
------------------------------ Fine somma_righe_i

188: ordine_i	<=>	ris <- order(v, decreasing=decr)
rs (2 : 2): [ 3 3 ]
decr = 0


ord_ind (2 : 2): [ 1 2 ]
------------------------------ Fine ordine_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]
r = 1
val = 0


I_add (3 : 6): [ 1 2 3 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
I (0 : 0): [ ]
I_add (3 : 6): [ 1 2 3 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (3 : 3): [ 1 2 3 ]


ris (3 : 3): [ 1 2 3 ]
------------------------------ Fine elimina_doppi_i



ris (3 : 3): [ 1 2 3 ]
------------------------------ Fine unione1_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]
r = 2
val = 0


I_add (3 : 6): [ 1 2 3 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
ris (3 : 3): [ 1 2 3 ]
I_add (3 : 6): [ 1 2 3 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (6 : 6): [ 1 2 3 1 2 3 ]


ris (3 : 6): [ 1 2 3 ]
------------------------------ Fine elimina_doppi_i



ris (3 : 6): [ 1 2 3 ]
------------------------------ Fine unione1_i

216: assegna1_mindxlt_i	<=>	m1[which(m2<val1)] <- val2
checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]
checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]
val1 = 0
val2 = 0


checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]
------------------------------ Fine assegna1_mindxlt_i

218: assegna1_m_indxgt_i	<=>	m1[which(m2>val1)] <- val2
checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]
checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]
val1 = 0
val2 = 1


checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]
------------------------------ Fine assegna1_m_indxgt_i

220: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]


aus (3 : 3): [ 2 2 2 ]
------------------------------ Fine somma_colonne_i

222: which_v_indxne_i	<=>	ris <- which(v != val)
aus (3 : 3): [ 2 2 2 ]
val = 0


tmp_i1 (3 : 6): [ 1 2 3 ]
------------------------------ Fine which_v_indxne_i

232: somma_righe_i	<=>	ris <- apply(m, 1, sum)
checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]


rs (2 : 2): [ 3 3 ]
------------------------------ Fine somma_righe_i

234: ordine_i	<=>	ris <- order(v, decreasing=decr)
rs (2 : 2): [ 3 3 ]
decr = 0


ord_ind (2 : 2): [ 1 2 ]
------------------------------ Fine ordine_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]
r = 1
val = 0


I_add (3 : 6): [ 1 2 3 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (0 : 6): [ ]
I_add (3 : 6): [ 1 2 3 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (3 : 3): [ 1 2 3 ]


ris (3 : 3): [ 1 2 3 ]
------------------------------ Fine elimina_doppi_i



ris (3 : 3): [ 1 2 3 ]
------------------------------ Fine unione1_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]
r = 2
val = 0


I_add (3 : 6): [ 1 2 3 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (3 : 3): [ 1 2 3 ]
I_add (3 : 6): [ 1 2 3 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (6 : 6): [ 1 2 3 1 2 3 ]


ris (3 : 6): [ 1 2 3 ]
------------------------------ Fine elimina_doppi_i



ris (3 : 6): [ 1 2 3 ]
------------------------------ Fine unione1_i


Stringhe allocate: 5 (3708 interne); stringhe deallocate: 0 (3388 interne)


Stringhe allocate: 5 (3713 interne); stringhe deallocate: 0 (3398 interne)


*** module3 ***
51: seq_i	<=>	ris <- seq(da, a, incr)
da = 2
a = 3
incr = 1


tmp1_i (2 : 2): [ 2 3 ]
------------------------------ Fine seq_i


*** sampleB ***

***sample***
tmp1_i (2 : 2): [ 2 3 ]
k = 1, replace = 0


ris (1 : 1): [ 2 ]
*****************************************


Stringhe allocate: 5 (3723 interne); stringhe deallocate: 0 (3398 interne)


Stringhe allocate: 5 (3723 interne); stringhe deallocate: 0 (3398 interne)

54: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 1
incr = 1


tmp1_i (1 : 2): [ 1 ]
------------------------------ Fine seq_i


*** sampleB ***
58: rep_v_i	<=>	ris <- rep(v, rip)
tmp1_i (1 : 2): [ 1 ]
rip = 1


ris (1 : 1): [ 1 ]
------------------------------ Fine rep_v_i


Stringhe allocate: 5 (3728 interne); stringhe deallocate: 0 (3398 interne)


*** mod3 ***
33: InitMatr_i
ris (2 x 2 : 2 x 2): [
	 79863176 1918959715
	 778334061 25390
 ]
val = 0


ris (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
------------------------------ Fine InitMatr_i

34: copia_v_d	<=>	ris[st:end] <- v[st:end]
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
st = 1
end = 7


STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
------------------------------ Fine copia_v_d

35: copia_v_d	<=>	ris[st:end] <- v[st:end]
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
st = 1
end = 7


STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
------------------------------ Fine copia_v_d

39: segmento_v_d	<=>	ris <- v[st:end]
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
start = 2
end = 2


tmp1_d (1 : 1): [ 3.614836360604185 ]
------------------------------ Fine segmento_v_d

40: somma_v_d	<=>	ris <- sum(v, na.rm=canc_NA)
tmp1_d (1 : 1): [ 3.614836360604185 ]
canc_NA = 1



ris: 3.614836360604185
------------------------------ Fine somma_v_d

43: segmento_v_d	<=>	ris <- v[st:end]
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
start = 2
end = 2


p (1 : 1): [ 3.614836360604185 ]
------------------------------ Fine segmento_v_d

44: dividi1_vs_d	<=>	v <- v / div
p (1 : 1): [ 3.614836360604185 ]
div = 3.615


p (1 : 1): [ 1 ]
------------------------------ Fine dividi1_vs_d

61: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 1
incr = 1


tmp1_i (1 : 1): [ 1 ]
------------------------------ Fine seq_i


*** sampleB_p ***
25: rep_v_i	<=>	ris <- rep(v, rip)
tmp1_i (1 : 1): [ 1 ]
rip = 1


ris (1 : 1): [ 1 ]
------------------------------ Fine rep_v_i

64: somma_v_i	<=>	ris <- sum(v, na.rm=canc_NA)
ris (1 : 1): [ 1 ]
canc_NA = 0



ris: 1
------------------------------ Fine somma_v_i

131: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 1
incr = 1


tmp1_i (1 : 1): [ 1 ]
------------------------------ Fine seq_i

133: assegna1_m_vv_i	<=>	m[vr, vc] <- val
ris (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
tmp1_i (1 : 1): [ 1 ]
scalare_i (1 : 1): [ 2 ]
val = 1


ris (2 x 2 : 2 x 2): [
	 0 1
	 0 0
 ]
------------------------------ Fine assegna1_m_vv_i

135: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 1
incr = 1


indS (1 : 1): [ 1 ]
------------------------------ Fine seq_i

137: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 1
incr = 1


tmp2_i (1 : 1): [ 1 ]
------------------------------ Fine seq_i

138: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp2_i (1 : 1): [ 1 ]
indS (1 : 1): [ 1 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp2_i (1 : 1): [ 1 ]
st = 1
end = 1


indBS (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indBS (1 : 1): [ 1 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indBS (1 : 1): [ 1 ]
indx = 1


indBS (0 : 1): [ ]
------------------------------ Fine elimina1_indx_i



indBS (0 : 1): [ ]
------------------------------ Fine setdiff_i



*****************************************
*****************************************


Stringhe allocate: 5 (3788 interne); stringhe deallocate: 0 (3453 interne)


*** probmod ***
46: InitMatr_i
checkOUT (2 x 3 : 2 x 3): [
	 79851672 0 79036096
	 1 0 2
 ]
val = 0


checkOUT (2 x 3 : 2 x 3): [
	 0 0 0
	 0 0 0
 ]
------------------------------ Fine InitMatr_i

48: InitMatr_i
checkIN (2 x 3 : 2 x 3): [
	 79849544 0 79036112
	 1 0 2146959360
 ]
val = 0


checkIN (2 x 3 : 2 x 3): [
	 0 0 0
	 0 0 0
 ]
------------------------------ Fine InitMatr_i

50: InitMatr_d
ris (2 x 3 : 2 x 3): [
	 0 0 0
	 0 0 1.#QNAN
 ]
val = 0


ris (2 x 3 : 2 x 3): [
	 0 0 0
	 0 0 0
 ]
------------------------------ Fine InitMatr_d

52: somma_righe_i	<=>	ris <- apply(m, 1, sum)
ris (2 x 2 : 2 x 2): [
	 0 1
	 0 0
 ]


M_in (2 : 2): [ 1 0 ]
------------------------------ Fine somma_righe_i

54: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
ris (2 x 2 : 2 x 2): [
	 0 1
	 0 0
 ]


M_out (2 : 2): [ 0 1 ]
------------------------------ Fine somma_colonne_i

57: InitMatr_i
memory (2 x 3 : 2 x 3): [
	 79860680 0 79034272
	 1 0 0
 ]
val = -2147483648


memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
------------------------------ Fine InitMatr_i

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 1


tmp_i1 (0 : 6): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 0


tmp_i2 (0 : 6): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 6): [ ]
tmp_i2 (0 : 6): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

119: InitVett_d
S_out (3 : 3): [ 4.283441684236849e-314 1.48219693752374e-323 3.904796844331641e-316 ]
val = 0


S_out (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

122: InitVett_i
tmp_i1 (3 : 6): [ 79863304 1 0 ]
val = 1


tmp_i1 (3 : 6): [ 1 1 1 ]
------------------------------ Fine InitVett_i

123: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
checkOUT (2 x 3 : 2 x 3): [
	 0 0 0
	 0 0 0
 ]
riga = 1
tmp_i1 (3 : 6): [ 1 1 1 ]


checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 0 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_i

128: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 1 1 0 0 ]
h (3 : 5): [ 1 4 5 ]


tmp_i1 (3 : 6): [ 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (3 : 6): [ 0 0 0 ]
s = 1


ind (3 : 3): [ 1 1 1 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (3 : 6): [ 0 0 0 ]
s = 1


tmp_i1 (3 : 3): [ 1 1 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
tmp_i1 (3 : 3): [ 1 1 1 ]


T1 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (3 : 3): [ 1 1 1 ]
s = 1


tmp_i1 (3 : 3): [ 2 2 2 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
tmp_i1 (3 : 3): [ 2 2 2 ]


T2 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (3 : 6): [ 0 0 0 ]
s = 1


tmp_i1 (3 : 3): [ 1 1 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 3 2 0 0 0 0 0 ]
tmp_i1 (3 : 3): [ 1 1 1 ]


old1 (3 : 3): [ 3 3 3 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (3 : 3): [ 1 1 1 ]
s = 1


tmp_i1 (3 : 3): [ 2 2 2 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 3 2 0 0 0 0 0 ]
tmp_i1 (3 : 3): [ 2 2 2 ]


old2 (3 : 3): [ 2 2 2 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (3 : 3): [ 3 3 3 ]
s = -1


new1 (3 : 3): [ 2 2 2 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (3 : 3): [ 2 2 2 ]
s = 1


new2 (3 : 3): [ 3 3 3 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (3 : 6): [ 0 0 0 ]
s = 1


tmp_i1 (3 : 3): [ 1 1 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (3 : 3): [ 1 1 1 ]


toll1 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (3 : 3): [ 1 1 1 ]
s = 1


tmp_i1 (3 : 3): [ 2 2 2 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (3 : 3): [ 2 2 2 ]


toll2 (3 : 3): [ 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (3 : 3): [ 3 3 3 ]
T1 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


a (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


a (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (3 : 3): [ 2 2 2 ]
T1 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


b (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


b (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (3 : 3): [ 1 2 3 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (3 : 3): [ 3.000000035462346 3 3 ]
val = 0


S1 (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (3 : 3): [ 2 2 2 ]
T2 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


a (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


a (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (3 : 3): [ 3 3 3 ]
T2 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


b (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


b (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
b (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


tmpm_d (3 x 2 : 3 x 2): [
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (3 x 2 : 3 x 2): [
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
 ]


m (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (3 : 3): [ 1 2 3 ]
------------------------------ Fine which_v_indxNA_d

140: InitVett_d
S2 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
val = 0


S2 (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
val = 0


ind (0 : 3): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (3 : 3): [ 0 0 0 ]
ind (0 : 3): [ ]
val = -1.#INF


S2 (3 : 3): [ 0 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (3 : 3): [ 0 0 0 ]
S2 (3 : 3): [ 0 0 0 ]


ris (3 : 3): [ 0 0 0 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
ris (3 : 3): [ 0 0 0 ]
div = 2.000


ris (3 : 3): [ 0 0 0 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (3938 interne); stringhe deallocate: 0 (3538 interne)

131: which_v_indxne_d	<=>	ris <- which(v != val)
ris (3 : 3): [ 0 0 0 ]
val = -1.#INF


indok (3 : 3): [ 1 2 3 ]
------------------------------ Fine which_v_indxne_d

133: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkIN (2 x 3 : 2 x 3): [
	 0 0 0
	 0 0 0
 ]
riga = 1
indok (3 : 3): [ 1 2 3 ]
val = 1


checkIN (2 x 3 : 2 x 3): [
	 1 1 1
	 0 0 0
 ]
------------------------------ Fine aggiungi_riga_indx_i

141: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 3
incr = 1


tmp_i1 (3 : 6): [ 1 2 3 ]
------------------------------ Fine seq_i

142: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (3 : 6): [ 1 2 3 ]
indok (3 : 3): [ 1 2 3 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (3 : 6): [ 1 2 3 ]
st = 1
end = 3


indInf (3 : 3): [ 1 2 3 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (3 : 3): [ 1 2 3 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 3): [ 1 2 3 ]
indx = 1


indInf (2 : 3): [ 2 3 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (2 : 3): [ 2 3 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 3): [ 2 3 ]
indx = 1


indInf (1 : 3): [ 3 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (1 : 3): [ 3 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 3): [ 3 ]
indx = 1


indInf (0 : 3): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 3): [ ]
------------------------------ Fine setdiff_i

144: copia_v_indx_d	<=>	ris <- v[indx]
ris (3 : 3): [ 0 0 0 ]
indok (3 : 3): [ 1 2 3 ]


tmp_d1 (3 : 3): [ 0 0 0 ]
------------------------------ Fine copia_v_indx_d

148: min_v_d	<=>	ris <- min(v)
tmp_d1 (3 : 3): [ 0 0 0 ]


min = 0
------------------------------ Fine min_v_d

149: assegna1_vs_indx_d	<=>	v[indx] <- val
ris (3 : 3): [ 0 0 0 ]
indInf (0 : 3): [ ]
val = -1


ris (3 : 3): [ 0 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

159: somma_vv_d	<=>	ris <- v1 + v2
S_out (3 : 3): [ 0 0 0 ]
ris (3 : 3): [ 0 0 0 ]


tmp_d1 (3 : 3): [ 0 0 0 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (2 x 3 : 2 x 3): [
	 0 0 0
	 0 0 0
 ]
riga = 1
tmp_d1 (3 : 3): [ 0 0 0 ]


ris (2 x 3 : 2 x 3): [
	 0 0 0
	 0 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_d

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 0


tmp_i1 (0 : 6): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 1


tmp_i2 (0 : 6): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 6): [ ]
tmp_i2 (0 : 6): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

92: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sout (5 : 5): [ 0 1 1 0 0 ]
h (3 : 5): [ 1 4 5 ]


tmp_i1 (3 : 6): [ 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (3 : 6): [ 0 0 0 ]
s = 1


ind (3 : 3): [ 1 1 1 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (3 : 6): [ 0 0 0 ]
s = 1


tmp_i1 (3 : 3): [ 1 1 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (3 : 3): [ 1 1 1 ]


T1 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (3 : 3): [ 1 1 1 ]
s = 1


tmp_i1 (3 : 3): [ 2 2 2 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (3 : 3): [ 2 2 2 ]


T2 (3 : 3): [ 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (3 : 6): [ 0 0 0 ]
s = 1


tmp_i1 (3 : 3): [ 1 1 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 3 2 0 0 0 0 0 ]
tmp_i1 (3 : 3): [ 1 1 1 ]


old1 (3 : 3): [ 3 3 3 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (3 : 3): [ 1 1 1 ]
s = 1


tmp_i1 (3 : 3): [ 2 2 2 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 3 2 0 0 0 0 0 ]
tmp_i1 (3 : 3): [ 2 2 2 ]


old2 (3 : 3): [ 2 2 2 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (3 : 3): [ 3 3 3 ]
s = -1


new1 (3 : 3): [ 2 2 2 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (3 : 3): [ 2 2 2 ]
s = 1


new2 (3 : 3): [ 3 3 3 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (3 : 6): [ 0 0 0 ]
s = 1


tmp_i1 (3 : 3): [ 1 1 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (3 : 3): [ 1 1 1 ]


toll1 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (3 : 3): [ 1 1 1 ]
s = 1


tmp_i1 (3 : 3): [ 2 2 2 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (3 : 3): [ 2 2 2 ]


toll2 (3 : 3): [ 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (3 : 3): [ 3 3 3 ]
T1 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


a (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


a (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (3 : 3): [ 2 2 2 ]
T1 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


b (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


b (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (3 : 3): [ 1 2 3 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (3 : 3): [ 2.121995790965272e-314 0 3.904690916657173e-316 ]
val = 0


S1 (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (3 : 3): [ 2 2 2 ]
T2 (3 : 3): [ 3.614836360604185 3.614836360604185 3.614836360604185 ]


a (3 : 3): [ -1.614836360604185 -1.614836360604185 -1.614836360604185 ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (3 : 3): [ -1.614836360604185 -1.614836360604185 -1.614836360604185 ]


a (3 : 3): [ 1.614836360604185 1.614836360604185 1.614836360604185 ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (3 : 3): [ 3 3 3 ]
T2 (3 : 3): [ 3.614836360604185 3.614836360604185 3.614836360604185 ]


b (3 : 3): [ -0.6148363606041851 -0.6148363606041851 -0.6148363606041851 ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (3 : 3): [ -0.6148363606041851 -0.6148363606041851 -0.6148363606041851 ]


b (3 : 3): [ 0.6148363606041851 0.6148363606041851 0.6148363606041851 ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (3 : 3): [ 1.614836360604185 1.614836360604185 1.614836360604185 ]
b (3 : 3): [ 0.6148363606041851 0.6148363606041851 0.6148363606041851 ]


tmpm_d (3 x 2 : 3 x 2): [
	 1.614836360604185 0.6148363606041851
	 1.614836360604185 0.6148363606041851
	 1.614836360604185 0.6148363606041851
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (3 x 2 : 3 x 2): [
	 1.614836360604185 0.6148363606041851
	 1.614836360604185 0.6148363606041851
	 1.614836360604185 0.6148363606041851
 ]


m (3 : 3): [ 1.614836360604185 1.614836360604185 1.614836360604185 ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (3 : 3): [ 3.614836360604185 3.614836360604185 3.614836360604185 ]
complemento = 0


ind (0 : 3): [ ]
------------------------------ Fine which_v_indxNA_d

115: assegna1_vs_indx_d	<=>	v[indx] <- val
a (3 : 3): [ 1.614836360604185 1.614836360604185 1.614836360604185 ]
ind (0 : 3): [ ]
val = 0


a (3 : 3): [ 1.614836360604185 1.614836360604185 1.614836360604185 ]
------------------------------ Fine assegna1_vs_indx_d

117: assegna1_vs_indx_d	<=>	v[indx] <- val
b (3 : 3): [ 0.6148363606041851 0.6148363606041851 0.6148363606041851 ]
ind (0 : 3): [ ]
val = 0


b (3 : 3): [ 0.6148363606041851 0.6148363606041851 0.6148363606041851 ]
------------------------------ Fine assegna1_vs_indx_d

119: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (3 : 3): [ 1.614836360604185 1.614836360604185 1.614836360604185 ]
b (3 : 3): [ 0.6148363606041851 0.6148363606041851 0.6148363606041851 ]


tmpm_d (3 x 2 : 3 x 2): [
	 1.614836360604185 0.6148363606041851
	 1.614836360604185 0.6148363606041851
	 1.614836360604185 0.6148363606041851
 ]
------------------------------ Fine cbind2v_d

120: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (3 x 2 : 3 x 2): [
	 1.614836360604185 0.6148363606041851
	 1.614836360604185 0.6148363606041851
	 1.614836360604185 0.6148363606041851
 ]


m (3 : 3): [ 1.614836360604185 1.614836360604185 1.614836360604185 ]
------------------------------ Fine max_righe_d

122: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (3 : 3): [ 1.614836360604185 1.614836360604185 1.614836360604185 ]
b (3 : 3): [ 0.6148363606041851 0.6148363606041851 0.6148363606041851 ]
m (3 : 3): [ 1.614836360604185 1.614836360604185 1.614836360604185 ]
T2 (3 : 3): [ 3.614836360604185 3.614836360604185 3.614836360604185 ]


S2 (3 : 3): [ 0.4467246092252654 0.4467246092252654 0.4467246092252654 ]
------------------------------ Fine f_aux_d

124: diff_vv_d	<=>	ris <- v1 - v2
a (3 : 3): [ 1.614836360604185 1.614836360604185 1.614836360604185 ]
toll2 (3 : 3): [ 1 1 1 ]


tmp_d1 (3 : 3): [ 0.6148363606041851 0.6148363606041851 0.6148363606041851 ]
------------------------------ Fine diff_vv_d

125: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (3 : 3): [ 0.6148363606041851 0.6148363606041851 0.6148363606041851 ]
val = 0

ind1 (0 : 3): [ ]
------------------------------ Fine which_v_indxlt_d

127: diff_vv_d	<=>	ris <- v1 - v2
b (3 : 3): [ 0.6148363606041851 0.6148363606041851 0.6148363606041851 ]
toll2 (3 : 3): [ 1 1 1 ]


tmp_d1 (3 : 3): [ -0.3851636393958149 -0.3851636393958149 -0.3851636393958149 ]
------------------------------ Fine diff_vv_d

128: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (3 : 3): [ -0.3851636393958149 -0.3851636393958149 -0.3851636393958149 ]
val = 0


ind2 (0 : 3): [ ]
------------------------------ Fine which_v_indxgt_d

130: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (0 : 3): [ ]
ind2 (0 : 3): [ ]


tmp_i1 (0 : 3): [ ]
------------------------------ Fine interseca_i

132: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (3 : 3): [ 0.4467246092252654 0.4467246092252654 0.4467246092252654 ]
tmp_i1 (0 : 3): [ ]
val = -1.#INF


S2 (3 : 3): [ 0.4467246092252654 0.4467246092252654 0.4467246092252654 ]
------------------------------ Fine assegna1_vs_indx_d

134: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (3 : 3): [ 0.4467246092252654 0.4467246092252654 0.4467246092252654 ]
ind (0 : 3): [ ]
val = 0


S2 (3 : 3): [ 0.4467246092252654 0.4467246092252654 0.4467246092252654 ]
------------------------------ Fine assegna1_vs_indx_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (3 : 3): [ 3.614836360604185 3.614836360604185 3.614836360604185 ]
val = 0


ind (0 : 3): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (3 : 3): [ 0.4467246092252654 0.4467246092252654 0.4467246092252654 ]
ind (0 : 3): [ ]
val = -1.#INF


S2 (3 : 3): [ 0.4467246092252654 0.4467246092252654 0.4467246092252654 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (3 : 3): [ 0 0 0 ]
S2 (3 : 3): [ 0.4467246092252654 0.4467246092252654 0.4467246092252654 ]


S_out (3 : 3): [ 0.4467246092252654 0.4467246092252654 0.4467246092252654 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
S_out (3 : 3): [ 0.4467246092252654 0.4467246092252654 0.4467246092252654 ]
div = 2.000


S_out (3 : 3): [ 0.2233623046126327 0.2233623046126327 0.2233623046126327 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (4053 interne); stringhe deallocate: 0 (3638 interne)

95: which_v_indxne_d	<=>	ris <- which(v != val)
S_out (3 : 3): [ 0.2233623046126327 0.2233623046126327 0.2233623046126327 ]
val = -1.#INF


indok (3 : 3): [ 1 2 3 ]
------------------------------ Fine which_v_indxne_d

97: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 0 0 0
 ]
riga = 2
indok (3 : 3): [ 1 2 3 ]
val = 1


checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]
------------------------------ Fine aggiungi_riga_indx_i

104: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 3
incr = 1


tmp_i1 (3 : 6): [ 1 2 3 ]
------------------------------ Fine seq_i

105: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (3 : 6): [ 1 2 3 ]
indok (3 : 3): [ 1 2 3 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (3 : 6): [ 1 2 3 ]
st = 1
end = 3


indInf (3 : 3): [ 1 2 3 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (3 : 3): [ 1 2 3 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 3): [ 1 2 3 ]
indx = 1


indInf (2 : 3): [ 2 3 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (2 : 3): [ 2 3 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 3): [ 2 3 ]
indx = 1


indInf (1 : 3): [ 3 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (1 : 3): [ 3 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 3): [ 3 ]
indx = 1


indInf (0 : 3): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 3): [ ]
------------------------------ Fine setdiff_i

107: copia_v_indx_d	<=>	ris <- v[indx]
S_out (3 : 3): [ 0.2233623046126327 0.2233623046126327 0.2233623046126327 ]
indok (3 : 3): [ 1 2 3 ]


tmp_d1 (3 : 3): [ 0.2233623046126327 0.2233623046126327 0.2233623046126327 ]
------------------------------ Fine copia_v_indx_d

111: min_v_d	<=>	ris <- min(v)
tmp_d1 (3 : 3): [ 0.2233623046126327 0.2233623046126327 0.2233623046126327 ]


min = 0.2233623046126327
------------------------------ Fine min_v_d

112: assegna1_vs_indx_d	<=>	v[indx] <- val
S_out (3 : 3): [ 0.2233623046126327 0.2233623046126327 0.2233623046126327 ]
indInf (0 : 3): [ ]
val = -1


S_out (3 : 3): [ 0.2233623046126327 0.2233623046126327 0.2233623046126327 ]
------------------------------ Fine assegna1_vs_indx_d

155: InitVett_d
ris (3 : 3): [ 0 0 0 ]
val = 0


ris (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

156: aggiungi_ms_riga_i	<=>	m[riga,] <- val # riga <= dim(m)[0] + 1
checkIN (2 x 3 : 2 x 3): [
	 1 1 1
	 0 0 0
 ]
riga = 2, val = 1


checkIN (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]
------------------------------ Fine aggiungi_ms_riga_i

159: somma_vv_d	<=>	ris <- v1 + v2
S_out (3 : 3): [ 0.2233623046126327 0.2233623046126327 0.2233623046126327 ]
ris (3 : 3): [ 0 0 0 ]


tmp_d1 (3 : 3): [ 0.2233623046126327 0.2233623046126327 0.2233623046126327 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (2 x 3 : 2 x 3): [
	 0 0 0
	 0 0 0
 ]
riga = 2
tmp_d1 (3 : 3): [ 0.2233623046126327 0.2233623046126327 0.2233623046126327 ]


ris (2 x 3 : 2 x 3): [
	 0 0 0
	 0.2233623046126327 0.2233623046126327 0.2233623046126327
 ]
------------------------------ Fine aggiungi_mv_riga_d

168: somma_m_d	<=>	ris <- sum(m)
ris (2 x 3 : 2 x 3): [
	 0 0 0
	 0.2233623046126327 0.2233623046126327 0.2233623046126327
 ]


ris: 0.6700869138378981
------------------------------ Fine somma_m_d

173: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
checkIN (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]


aus (3 : 3): [ 2 2 2 ]
------------------------------ Fine somma_colonne_i

175: which_v_indxne_i	<=>	ris <- which(v != val)
aus (3 : 3): [ 2 2 2 ]
val = 0


tmp_i1 (3 : 6): [ 1 2 3 ]
------------------------------ Fine which_v_indxne_i

186: somma_righe_i	<=>	ris <- apply(m, 1, sum)
checkIN (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]


rs (2 : 2): [ 3 3 ]
------------------------------ Fine somma_righe_i

188: ordine_i	<=>	ris <- order(v, decreasing=decr)
rs (2 : 2): [ 3 3 ]
decr = 0


ord_ind (2 : 2): [ 1 2 ]
------------------------------ Fine ordine_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]
r = 1
val = 0


I_add (3 : 6): [ 1 2 3 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
I (0 : 0): [ ]
I_add (3 : 6): [ 1 2 3 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (3 : 3): [ 1 2 3 ]


ris (3 : 3): [ 1 2 3 ]
------------------------------ Fine elimina_doppi_i



ris (3 : 3): [ 1 2 3 ]
------------------------------ Fine unione1_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]
r = 2
val = 0


I_add (3 : 6): [ 1 2 3 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
ris (3 : 3): [ 1 2 3 ]
I_add (3 : 6): [ 1 2 3 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (6 : 6): [ 1 2 3 1 2 3 ]


ris (3 : 6): [ 1 2 3 ]
------------------------------ Fine elimina_doppi_i



ris (3 : 6): [ 1 2 3 ]
------------------------------ Fine unione1_i

216: assegna1_mindxlt_i	<=>	m1[which(m2<val1)] <- val2
checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]
checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]
val1 = 0
val2 = 0


checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]
------------------------------ Fine assegna1_mindxlt_i

218: assegna1_m_indxgt_i	<=>	m1[which(m2>val1)] <- val2
checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]
checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]
val1 = 0
val2 = 1


checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]
------------------------------ Fine assegna1_m_indxgt_i

220: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]


aus (3 : 3): [ 2 2 2 ]
------------------------------ Fine somma_colonne_i

222: which_v_indxne_i	<=>	ris <- which(v != val)
aus (3 : 3): [ 2 2 2 ]
val = 0


tmp_i1 (3 : 6): [ 1 2 3 ]
------------------------------ Fine which_v_indxne_i

232: somma_righe_i	<=>	ris <- apply(m, 1, sum)
checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]


rs (2 : 2): [ 3 3 ]
------------------------------ Fine somma_righe_i

234: ordine_i	<=>	ris <- order(v, decreasing=decr)
rs (2 : 2): [ 3 3 ]
decr = 0


ord_ind (2 : 2): [ 1 2 ]
------------------------------ Fine ordine_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]
r = 1
val = 0


I_add (3 : 6): [ 1 2 3 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (0 : 6): [ ]
I_add (3 : 6): [ 1 2 3 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (3 : 3): [ 1 2 3 ]


ris (3 : 3): [ 1 2 3 ]
------------------------------ Fine elimina_doppi_i



ris (3 : 3): [ 1 2 3 ]
------------------------------ Fine unione1_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]
r = 2
val = 0


I_add (3 : 6): [ 1 2 3 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (3 : 3): [ 1 2 3 ]
I_add (3 : 6): [ 1 2 3 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (6 : 6): [ 1 2 3 1 2 3 ]


ris (3 : 6): [ 1 2 3 ]
------------------------------ Fine elimina_doppi_i



ris (3 : 6): [ 1 2 3 ]
------------------------------ Fine unione1_i


Stringhe allocate: 5 (4118 interne); stringhe deallocate: 0 (3778 interne)

90: seq_i	<=>	ris <- seq(da, a, incr)
da = 2
a = 2
incr = 1


ris->indices (1 : 1): [ 2 ]
------------------------------ Fine seq_i


Stringhe allocate: 5 (4123 interne); stringhe deallocate: 0 (3793 interne)

143: vettore3s_d		<=>	ris <- c(el1, el2, el3)
el1 = 0.6700869138378981, el2 = 0.3350434569189491, el3 = 0.3350434569189491


prob_mod (3 : 3): [ 0.6700869138378981 0.3350434569189491 0.3350434569189491 ]
------------------------------ Fine vettore3s_d

145: assegna1_v_indxeq_d	<=>	v[which(v==val1)] <- val2
prob_mod (3 : 3): [ 0.6700869138378981 0.3350434569189491 0.3350434569189491 ]
prob_mod (3 : 3): [ 0.6700869138378981 0.3350434569189491 0.3350434569189491 ]
val1 = 0
val2 = 1.#QNAN


prob_mod (3 : 3): [ 0.6700869138378981 0.3350434569189491 0.3350434569189491 ]
------------------------------ Fine assegna1_v_indxeq_d

147: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
prob_mod (3 : 3): [ 0.6700869138378981 0.3350434569189491 0.3350434569189491 ]
complemento = 1


ind (3 : 3): [ 1 2 3 ]
------------------------------ Fine which_v_indxNA_d

153: copia_v_indx_d	<=>	ris <- v[indx]
prob_mod (3 : 3): [ 0.6700869138378981 0.3350434569189491 0.3350434569189491 ]
ind (3 : 3): [ 1 2 3 ]


tmp1_d (3 : 16): [ 0.6700869138378981 0.3350434569189491 0.3350434569189491 ]
------------------------------ Fine copia_v_indx_d

154: min_v_d	<=>	ris <- min(v)
tmp1_d (3 : 16): [ 0.6700869138378981 0.3350434569189491 0.3350434569189491 ]


min = 0.3350434569189491
------------------------------ Fine min_v_d

160: assegna1_v_indxNA_d	<=>	v1[which(is.na(v2))] <- val oppure v1[which(!is.na(v2))] <- val
prob_mod (3 : 3): [ 0.6700869138378981 0.3350434569189491 0.3350434569189491 ]
prob_mod (3 : 3): [ 0.6700869138378981 0.3350434569189491 0.3350434569189491 ]
val = 0
complemento = 0


prob_mod (3 : 3): [ 0.6700869138378981 0.3350434569189491 0.3350434569189491 ]
------------------------------ Fine assegna1_v_indxNA_d

162: somma_v_d	<=>	ris <- sum(v, na.rm=canc_NA)
prob_mod (3 : 3): [ 0.6700869138378981 0.3350434569189491 0.3350434569189491 ]
canc_NA = 0



ris: 1.340173827675796
------------------------------ Fine somma_v_d

162: dividi1_vs_d	<=>	v <- v / div
prob_mod (3 : 3): [ 0.6700869138378981 0.3350434569189491 0.3350434569189491 ]
div = 1.340


prob_mod (3 : 3): [ 0.5 0.25 0.25 ]
------------------------------ Fine dividi1_vs_d

164: vettore3s_i		<=>	ris <- c(el1, el2, el3)
el1 = 1, el2 = 2, el3 = 3


tmp1_i (3 : 3): [ 1 2 3 ]
------------------------------ Fine vettore3s_i


*** sampleB_p ***

*** sample_p ***
tmp1_i (3 : 3): [ 1 2 3 ]
k = 1, replace = 0
prob_mod (3 : 3): [ 0.5 0.25 0.25 ]


ris (1 : 1): [ 1 ]
*****************************************


Stringhe allocate: 5 (4123 interne); stringhe deallocate: 0 (3793 interne)


*** assign_nodes ***
35: copia_v_i	<=>	ris[st:end] <- v[st:end]
h (3 : 5): [ 1 4 5 ]
st = 1
end = 3


or_h (3 : 3): [ 1 4 5 ]
------------------------------ Fine copia_v_i

37: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 3
incr = 1


aus_h (3 : 3): [ 1 2 3 ]
------------------------------ Fine seq_i

43: InitVett_i
index (1 : 1): [ 79846624 ]
val = 0


index (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i

45: somma_righe_i	<=>	ris <- apply(m, 1, sum)
ris (1 x 1 : 1 x 1): [
	 1
 ]


M_in (1 : 1): [ 1 ]
------------------------------ Fine somma_righe_i

47: ordine_i	<=>	ris <- order(v, decreasing=decr)
M_in (1 : 1): [ 1 ]
decr = 1


Ord (1 : 1): [ 1 ]
------------------------------ Fine ordine_i

52: riga_d	<=>	ris <- m[r,]
ris (1 x 3 : 1 x 3): [
	 0.2233623046126327 0.2233623046126327 0.2233623046126327
 ]
r = 1

p (3 : 3): [ 0.2233623046126327 0.2233623046126327 0.2233623046126327 ]
------------------------------ Fine riga_d

54: which_v_indxle_d	<=>	ris <- which(v<=val)
p (3 : 3): [ 0.2233623046126327 0.2233623046126327 0.2233623046126327 ]
val = 0


tmp_i (0 : 3): [ ]
------------------------------ Fine which_v_indxle_d

61: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 1 1 0 0 ]
h (3 : 5): [ 1 4 5 ]


Sin_h (3 : 3): [ 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_i

66: which_v_indxgt_i	<=>	ris <- which(v > val)
Sin_h (3 : 3): [ 0 0 0 ]
val = 4


ind (0 : 3): [ ]
------------------------------ Fine which_v_indxgt_i

72: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
p (3 : 3): [ 0.2233623046126327 0.2233623046126327 0.2233623046126327 ]
aus_h (3 : 3): [ 1 2 3 ]


tmp_d (3 : 3): [ 0.2233623046126327 0.2233623046126327 0.2233623046126327 ]
------------------------------ Fine assegna_v_indxNA_d

73: somma_v_d	<=>	ris <- sum(v, na.rm=canc_NA)
tmp_d (3 : 3): [ 0.2233623046126327 0.2233623046126327 0.2233623046126327 ]
canc_NA = 0



ris: 0.6700869138378981
------------------------------ Fine somma_v_d

74: dividi_vs_d	ris <- v / div
tmp_d (3 : 3): [ 0.2233623046126327 0.2233623046126327 0.2233623046126327 ]
div = 0.670


p (3 : 3): [ 0.3333333333333334 0.3333333333333334 0.3333333333333334 ]
------------------------------ Fine dividi_vs_d


*** sampleB_p ***

*** sample_p ***
h (3 : 5): [ 1 4 5 ]
k = 1, replace = 0
p (3 : 3): [ 0.3333333333333334 0.3333333333333334 0.3333333333333334 ]


ris (1 : 1): [ 4 ]
*****************************************


Stringhe allocate: 5 (4178 interne); stringhe deallocate: 0 (3793 interne)

81: setdiff1_i	<=>	v1 <- setdiff(v1, v2)
h (3 : 5): [ 1 4 5 ]
ris (1 : 1): [ 4 ]
2048: esiste_v_i	<=>	elem %IN% v
elem = 4
h (3 : 5): [ 1 4 5 ]


indx = 2
------------------------------ Fine esiste_v_i

2050: elimina1_indx_i	<=>	v <- v[-indx]
h (3 : 5): [ 1 4 5 ]
indx = 2


h (2 : 5): [ 1 5 ]
------------------------------ Fine elimina1_indx_i



h (2 : 5): [ 1 5 ]
------------------------------ Fine setdiff1_i

83: which_vv_eq_i	<=>	ris <- which(v1 == v2)
or_h (3 : 3): [ 1 4 5 ]
ris (1 : 1): [ 4 ]
2017: esiste_v_i	<=>	elem %IN% v
elem = 4
or_h (3 : 3): [ 1 4 5 ]


indx = 2
------------------------------ Fine esiste_v_i



tmp_i (1 : 3): [ 4 ]
------------------------------ Fine which_vv_eq_i

84: setdiff1_i	<=>	v1 <- setdiff(v1, v2)
aus_h (3 : 3): [ 1 2 3 ]
tmp_i (1 : 3): [ 4 ]
2048: esiste_v_i	<=>	elem %IN% v
elem = 4
aus_h (3 : 3): [ 1 2 3 ]


indx = 0
------------------------------ Fine esiste_v_i



aus_h (3 : 3): [ 1 2 3 ]
------------------------------ Fine setdiff1_i

101: which_m_rowindxeq_i	<=>	ris <- which(m[r,] == val)
ris (1 x 1 : 1 x 1): [
	 1
 ]
riga = 1
val = 1


ind (1 : 3): [ 1 ]
------------------------------ Fine which_m_rowindxeq_i

103: copia_v_indx_i	<=>	ris <- v[indx]
index (1 : 1): [ 4 ]
ind (1 : 3): [ 1 ]


co (1 : 1): [ 4 ]
------------------------------ Fine copia_v_indx_i

105: assegna1_m_vv_i	<=>	m[vr, vc] <- val
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
ri (1 : 1): [ 4 ]
co (1 : 1): [ 4 ]
val = 1


Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 1 0
	 0 0 0 0 0
 ]
------------------------------ Fine assegna1_m_vv_i

107: esiste_v_i	<=>	elem %IN% v
elem = 1
ris->indices (1 : 1): [ 1 ]


indx = 1
------------------------------ Fine esiste_v_i

109: accoda1_vv_i	<=>	v1 <- c(v1, v2)
ris (0 : 1): [ ]
ri (1 : 1): [ 4 ]


ris (1 : 1): [ 4 ]
------------------------------ Fine accoda_vv_i


Stringhe allocate: 5 (4188 interne); stringhe deallocate: 0 (3858 interne)

332: accoda1_vv_i	<=>	v1 <- c(v1, v2)
h_new (1 : 2): [ 3 ]
ris (1 : 1): [ 4 ]


h_new (2 : 2): [ 3 4 ]
------------------------------ Fine accoda_vv_i

334: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 1 0
	 0 0 0 0 0
 ]


Sout (5 : 5): [ 0 1 1 1 0 ]
------------------------------ Fine somma_colonne_i

336: max_v_i		<=>	ris <- max(v)
Sout (5 : 5): [ 0 1 1 1 0 ]


max = 1
------------------------------ Fine max_v_i

338: seq_i	<=>	ris <- seq(da, a, incr)
da = 0
a = 2
incr = 1


tmp2_i (3 : 3): [ 0 1 2 ]
------------------------------ Fine seq_i


*** hist1 ***
Sout (5 : 5): [ 0 1 1 1 0 ]
tmp2_i (3 : 3): [ 0 1 2 ]
right = 0
include_border = 1
naok = 0
29: InitVett_i
tmp1_i (2 : 3): [ 1 2 ]
val = 0


tmp1_i (2 : 3): [ 0 0 ]
------------------------------ Fine InitVett_i



tmp1_i (2 : 3): [ 2 3 ]

Stringhe allocate: 5 (4188 interne); stringhe deallocate: 0 (3858 interne)

340: promuovi_i	(implicita)
tmp1_i (2 : 3): [ 2 3 ]
ATTENZIONE (promuovi_i, linea connectivity_modular.c # 340): il vettore e` stato promosso da intero a double: i calcoli saranno rallentati!

tmp1_d (2 : 16): [ 2 3 ]
------------------------------ Fine promuovi_i

341: assegna1_v_segmv_d	<=>	v1[st:end] <- v2
Freq_out (7 : 7): [ 3 2 0 0 0 0 0 ]
start = 1
end = 2
tmp1_d (2 : 16): [ 2 3 ]


Freq_out (7 : 7): [ 2 3 0 0 0 0 0 ]
------------------------------ Fine assegna1_v_segmv_d

343: somma_righe_i	<=>	ris <- apply(m, 1, sum)
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 1 0
	 0 0 0 0 0
 ]


Sin (5 : 5): [ 0 1 1 1 0 ]
------------------------------ Fine somma_righe_i

345: max_v_i		<=>	ris <- max(v)
Sin (5 : 5): [ 0 1 1 1 0 ]


max = 1
------------------------------ Fine max_v_i

347: seq_i	<=>	ris <- seq(da, a, incr)
da = 0
a = 2
incr = 1


tmp2_i (3 : 3): [ 0 1 2 ]
------------------------------ Fine seq_i


*** hist1 ***
Sin (5 : 5): [ 0 1 1 1 0 ]
tmp2_i (3 : 3): [ 0 1 2 ]
right = 0
include_border = 1
naok = 0
29: InitVett_i
tmp1_i (2 : 3): [ 2 3 ]
val = 0


tmp1_i (2 : 3): [ 0 0 ]
------------------------------ Fine InitVett_i



tmp1_i (2 : 3): [ 2 3 ]

Stringhe allocate: 5 (4189 interne); stringhe deallocate: 0 (3859 interne)

349: promuovi_i	(implicita)
tmp1_i (2 : 3): [ 2 3 ]
ATTENZIONE (promuovi_i, linea connectivity_modular.c # 349): il vettore e` stato promosso da intero a double: i calcoli saranno rallentati!

tmp1_d (2 : 16): [ 2 3 ]
------------------------------ Fine promuovi_i

350: assegna1_v_segmv_d	<=>	v1[st:end] <- v2
Freq_in (7 : 7): [ 3 2 0 0 0 0 0 ]
start = 1
end = 2
tmp1_d (2 : 16): [ 2 3 ]


Freq_in (7 : 7): [ 2 3 0 0 0 0 0 ]
------------------------------ Fine assegna1_v_segmv_d

110: somma_righe_i	<=>	ris <- apply(m, 1, sum)
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 1 0
	 0 0 0 0 0
 ]


Sin (5 : 5): [ 0 1 1 1 0 ]
------------------------------ Fine somma_righe_i

112: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 1 0
	 0 0 0 0 0
 ]


Sout (5 : 5): [ 0 1 1 1 0 ]
------------------------------ Fine somma_colonne_i


*** cluster_coeff ***
19: trasponi_i	<=>	ris <- t(m)
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 1 0
	 0 0 0 0 0
 ]


tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 1 0
	 0 0 0 0 0
 ]
------------------------------ Fine trasponi_i

20: somma1_m_i	<=>	m1 <- m1 + m2
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 1 0
	 0 0 0 0 0
 ]
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 1 0
	 0 0 0 0 0
 ]


tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 2 0 0
	 0 2 0 0 0
	 0 0 0 2 0
	 0 0 0 0 0
 ]
------------------------------ Fine somma1_m_i

22: which_m_indxne_i	<=>	ris <- which(m!=val)
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 2 0 0
	 0 2 0 0 0
	 0 0 0 2 0
	 0 0 0 0 0
 ]
val = 0


ind (3 : 25): [ 8 12 19 ]
------------------------------ Fine which_m_indxne_i

24: assegna1_ms_indx_i	<=>	m[indx] = val
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 2 0 0
	 0 2 0 0 0
	 0 0 0 2 0
	 0 0 0 0 0
 ]
ind (3 : 25): [ 8 12 19 ]
val = 1


tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 1 0
	 0 0 0 0 0
 ]
------------------------------ Fine assegna1_ms_indx_i

26: assegna1_s_diag_i	<=>	diag_i(m) <- s
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 1 0
	 0 0 0 0 0
 ]
val = 0


tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine assegna1_s_diag_i

31: InitVett_d
ris (5 : 5): [ 0 0 0 0 0 ]
val = 0


ris (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

35: somma_riga_i	<=>	ris <- sum(m[riga, ])
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 1


ris: 0
------------------------------ Fine somma_riga_i

37: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
r = 1
val = 0


neighbours (0 : 25): [ ]
------------------------------ Fine which_m_rowindxne_i

35: somma_riga_i	<=>	ris <- sum(m[riga, ])
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 2


ris: 1
------------------------------ Fine somma_riga_i

37: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
r = 2
val = 0


neighbours (1 : 25): [ 3 ]
------------------------------ Fine which_m_rowindxne_i

35: somma_riga_i	<=>	ris <- sum(m[riga, ])
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 3


ris: 1
------------------------------ Fine somma_riga_i

37: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
r = 3
val = 0


neighbours (1 : 25): [ 2 ]
------------------------------ Fine which_m_rowindxne_i

35: somma_riga_i	<=>	ris <- sum(m[riga, ])
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 4


ris: 0
------------------------------ Fine somma_riga_i

37: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
r = 4
val = 0


neighbours (0 : 25): [ ]
------------------------------ Fine which_m_rowindxne_i

35: somma_riga_i	<=>	ris <- sum(m[riga, ])
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 5


ris: 0
------------------------------ Fine somma_riga_i

37: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
r = 5
val = 0


neighbours (0 : 25): [ ]
------------------------------ Fine which_m_rowindxne_i

69: media_v_d	<=>	ris <- mean(v)
ris (5 : 5): [ 0 0 0 0 0 ]


media = 0.000
------------------------------ Fine media_v_d


Stringhe allocate: 5 (4205 interne); stringhe deallocate: 0 (3875 interne)


*** module1 ***
44: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 2
incr = 1


tmp1_i (2 : 2): [ 1 2 ]
------------------------------ Fine seq_i


*** sampleB ***

***sample***
tmp1_i (2 : 2): [ 1 2 ]
k = 1, replace = 0


ris (1 : 1): [ 2 ]
*****************************************


Stringhe allocate: 5 (4220 interne); stringhe deallocate: 0 (3875 interne)


Stringhe allocate: 5 (4220 interne); stringhe deallocate: 0 (3875 interne)


*** mod1 ***
18: InitMatr_i
ris (2 x 2 : 2 x 2): [
	 79850272 1936024687
	 1851747943 25390
 ]
val = 0


ris (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
------------------------------ Fine InitMatr_i

21: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 1
incr = 1


x (1 : 1): [ 1 ]
------------------------------ Fine seq_i

23: somma_vs_i	<=>	ris <- v + s
x (1 : 1): [ 1 ]
s = 1


tmp1_i (1 : 1): [ 2 ]
------------------------------ Fine somma_vs_i

24: cbind2v_i	<=>	ris <- cbind(v1, v2)
x (1 : 1): [ 1 ]
tmp1_i (1 : 1): [ 2 ]


ind (1 x 2 : 1 x 2): [
	 1 2
 ]
------------------------------ Fine cbind2v_i

26: assegna1_ms_indx2_i	<=>	m[indxm] <- val
ris (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
ind (1 x 2 : 1 x 2): [
	 1 2
 ]
val = 1


ris (2 x 2 : 2 x 2): [
	 0 1
	 0 0
 ]
------------------------------ Fine assegna1_ms_indx2_i

29: vettore2s_i		<=>	ris <- c(el1, el2)
el1 = 1, el2 = -1


tmp1_i (2 : 4): [ 1 -1 ]
------------------------------ Fine vettore2s_i


*** sampleB ***

***sample***
tmp1_i (2 : 4): [ 1 -1 ]
k = 1, replace = 0


ris (1 : 1): [ 1 ]
*****************************************


Stringhe allocate: 5 (4245 interne); stringhe deallocate: 0 (3875 interne)


Stringhe allocate: 5 (4245 interne); stringhe deallocate: 0 (3875 interne)


Stringhe allocate: 5 (4245 interne); stringhe deallocate: 0 (3895 interne)


*** probmod ***
46: InitMatr_i
checkOUT (2 x 2 : 2 x 2): [
	 79845336 1936024687
	 1845519150 25390
 ]
val = 0


checkOUT (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
------------------------------ Fine InitMatr_i

48: InitMatr_i
checkIN (2 x 2 : 2 x 2): [
	 79850544 1936024687
	 1851747943 25390
 ]
val = 0


checkIN (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
------------------------------ Fine InitMatr_i

50: InitMatr_d
ris (2 x 2 : 2 x 2): [
	 4.544630548243671e+223 0
	 5.387842965589561e-310 4.199514940640925e-309
 ]
val = 0


ris (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
------------------------------ Fine InitMatr_d

52: somma_righe_i	<=>	ris <- apply(m, 1, sum)
ris (2 x 2 : 2 x 2): [
	 0 1
	 0 0
 ]


M_in (2 : 2): [ 1 0 ]
------------------------------ Fine somma_righe_i

54: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
ris (2 x 2 : 2 x 2): [
	 0 1
	 0 0
 ]


M_out (2 : 2): [ 0 1 ]
------------------------------ Fine somma_colonne_i

57: InitMatr_i
memory (2 x 3 : 2 x 3): [
	 79860968 0 79037888
	 3 0 2146959360
 ]
val = -2147483648


memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
------------------------------ Fine InitMatr_i

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 1


tmp_i1 (0 : 6): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 0


tmp_i2 (0 : 6): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 6): [ ]
tmp_i2 (0 : 6): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

119: InitVett_d
S_out (2 : 2): [ 3.287239484607734e-085 5.387747313265718e-310 ]
val = 0


S_out (2 : 2): [ 0 0 ]
------------------------------ Fine InitVett_d

122: InitVett_i
tmp_i1 (2 : 6): [ 79864288 3 ]
val = 1


tmp_i1 (2 : 6): [ 1 1 ]
------------------------------ Fine InitVett_i

123: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
checkOUT (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
riga = 1
tmp_i1 (2 : 6): [ 1 1 ]


checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_i

128: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 1 1 1 0 ]
h (2 : 5): [ 1 5 ]


tmp_i1 (2 : 6): [ 0 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (2 : 6): [ 0 0 ]
s = 1


ind (2 : 2): [ 1 1 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (2 : 6): [ 0 0 ]
s = 1


tmp_i1 (2 : 2): [ 1 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
tmp_i1 (2 : 2): [ 1 1 ]


T1 (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (2 : 2): [ 1 1 ]
s = 1


tmp_i1 (2 : 2): [ 2 2 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
tmp_i1 (2 : 2): [ 2 2 ]


T2 (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (2 : 6): [ 0 0 ]
s = 1


tmp_i1 (2 : 2): [ 1 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 2 3 0 0 0 0 0 ]
tmp_i1 (2 : 2): [ 1 1 ]


old1 (2 : 2): [ 2 2 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (2 : 2): [ 1 1 ]
s = 1


tmp_i1 (2 : 2): [ 2 2 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 2 3 0 0 0 0 0 ]
tmp_i1 (2 : 2): [ 2 2 ]


old2 (2 : 2): [ 3 3 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (2 : 2): [ 2 2 ]
s = -1


new1 (2 : 2): [ 1 1 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (2 : 2): [ 3 3 ]
s = 1


new2 (2 : 2): [ 4 4 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (2 : 6): [ 0 0 ]
s = 1


tmp_i1 (2 : 2): [ 1 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (2 : 2): [ 1 1 ]


toll1 (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (2 : 2): [ 1 1 ]
s = 1


tmp_i1 (2 : 2): [ 2 2 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (2 : 2): [ 2 2 ]


toll2 (2 : 2): [ 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (2 : 2): [ 2 2 ]
T1 (2 : 2): [ 1.#QNAN 1.#QNAN ]


a (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (2 : 2): [ 1.#QNAN 1.#QNAN ]


a (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (2 : 2): [ 1 1 ]
T1 (2 : 2): [ 1.#QNAN 1.#QNAN ]


b (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (2 : 2): [ 1.#QNAN 1.#QNAN ]


b (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (2 : 2): [ 1.#QNAN 1.#QNAN ]
complemento = 0


ind (2 : 2): [ 1 2 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (2 : 2): [ 5.006279180560405e+173 5.387842123834802e-310 ]
val = 0


S1 (2 : 2): [ 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (2 : 2): [ 3 3 ]
T2 (2 : 2): [ 1.#QNAN 1.#QNAN ]


a (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (2 : 2): [ 1.#QNAN 1.#QNAN ]


a (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (2 : 2): [ 4 4 ]
T2 (2 : 2): [ 1.#QNAN 1.#QNAN ]


b (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (2 : 2): [ 1.#QNAN 1.#QNAN ]


b (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (2 : 2): [ 1.#QNAN 1.#QNAN ]
b (2 : 2): [ 1.#QNAN 1.#QNAN ]


tmpm_d (2 x 2 : 2 x 2): [
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (2 x 2 : 2 x 2): [
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
 ]


m (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (2 : 2): [ 1.#QNAN 1.#QNAN ]
complemento = 0


ind (2 : 2): [ 1 2 ]
------------------------------ Fine which_v_indxNA_d

140: InitVett_d
S2 (2 : 2): [ 5.842414621812633e-308 0 ]
val = 0


S2 (2 : 2): [ 0 0 ]
------------------------------ Fine InitVett_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (2 : 2): [ 1.#QNAN 1.#QNAN ]
val = 0


ind (0 : 2): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (2 : 2): [ 0 0 ]
ind (0 : 2): [ ]
val = -1.#INF


S2 (2 : 2): [ 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (2 : 2): [ 0 0 ]
S2 (2 : 2): [ 0 0 ]


ris (2 : 2): [ 0 0 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
ris (2 : 2): [ 0 0 ]
div = 2.000


ris (2 : 2): [ 0 0 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (4395 interne); stringhe deallocate: 0 (3980 interne)

131: which_v_indxne_d	<=>	ris <- which(v != val)
ris (2 : 2): [ 0 0 ]
val = -1.#INF


indok (2 : 2): [ 1 2 ]
------------------------------ Fine which_v_indxne_d

133: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkIN (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
riga = 1
indok (2 : 2): [ 1 2 ]
val = 1


checkIN (2 x 2 : 2 x 2): [
	 1 1
	 0 0
 ]
------------------------------ Fine aggiungi_riga_indx_i

141: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 2
incr = 1


tmp_i1 (2 : 6): [ 1 2 ]
------------------------------ Fine seq_i

142: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (2 : 6): [ 1 2 ]
indok (2 : 2): [ 1 2 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (2 : 6): [ 1 2 ]
st = 1
end = 2


indInf (2 : 2): [ 1 2 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (2 : 2): [ 1 2 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 2): [ 1 2 ]
indx = 1


indInf (1 : 2): [ 2 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (1 : 2): [ 2 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 2): [ 2 ]
indx = 1


indInf (0 : 2): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 2): [ ]
------------------------------ Fine setdiff_i

144: copia_v_indx_d	<=>	ris <- v[indx]
ris (2 : 2): [ 0 0 ]
indok (2 : 2): [ 1 2 ]


tmp_d1 (2 : 2): [ 0 0 ]
------------------------------ Fine copia_v_indx_d

148: min_v_d	<=>	ris <- min(v)
tmp_d1 (2 : 2): [ 0 0 ]


min = 0
------------------------------ Fine min_v_d

149: assegna1_vs_indx_d	<=>	v[indx] <- val
ris (2 : 2): [ 0 0 ]
indInf (0 : 2): [ ]
val = -1


ris (2 : 2): [ 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

159: somma_vv_d	<=>	ris <- v1 + v2
S_out (2 : 2): [ 0 0 ]
ris (2 : 2): [ 0 0 ]


tmp_d1 (2 : 2): [ 0 0 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
riga = 1
tmp_d1 (2 : 2): [ 0 0 ]


ris (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_d

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 0


tmp_i1 (0 : 6): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 1


tmp_i2 (0 : 6): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 6): [ ]
tmp_i2 (0 : 6): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

92: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sout (5 : 5): [ 0 1 1 1 0 ]
h (2 : 5): [ 1 5 ]


tmp_i1 (2 : 6): [ 0 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (2 : 6): [ 0 0 ]
s = 1


ind (2 : 2): [ 1 1 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (2 : 6): [ 0 0 ]
s = 1


tmp_i1 (2 : 2): [ 1 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (2 : 2): [ 1 1 ]


T1 (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (2 : 2): [ 1 1 ]
s = 1


tmp_i1 (2 : 2): [ 2 2 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (2 : 2): [ 2 2 ]


T2 (2 : 2): [ 3.614836360604185 3.614836360604185 ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (2 : 6): [ 0 0 ]
s = 1


tmp_i1 (2 : 2): [ 1 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 2 3 0 0 0 0 0 ]
tmp_i1 (2 : 2): [ 1 1 ]


old1 (2 : 2): [ 2 2 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (2 : 2): [ 1 1 ]
s = 1


tmp_i1 (2 : 2): [ 2 2 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 2 3 0 0 0 0 0 ]
tmp_i1 (2 : 2): [ 2 2 ]


old2 (2 : 2): [ 3 3 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (2 : 2): [ 2 2 ]
s = -1


new1 (2 : 2): [ 1 1 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (2 : 2): [ 3 3 ]
s = 1


new2 (2 : 2): [ 4 4 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (2 : 6): [ 0 0 ]
s = 1


tmp_i1 (2 : 2): [ 1 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (2 : 2): [ 1 1 ]


toll1 (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (2 : 2): [ 1 1 ]
s = 1


tmp_i1 (2 : 2): [ 2 2 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (2 : 2): [ 2 2 ]


toll2 (2 : 2): [ 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (2 : 2): [ 2 2 ]
T1 (2 : 2): [ 1.#QNAN 1.#QNAN ]


a (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (2 : 2): [ 1.#QNAN 1.#QNAN ]


a (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (2 : 2): [ 1 1 ]
T1 (2 : 2): [ 1.#QNAN 1.#QNAN ]


b (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (2 : 2): [ 1.#QNAN 1.#QNAN ]


b (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (2 : 2): [ 1.#QNAN 1.#QNAN ]
complemento = 0


ind (2 : 2): [ 1 2 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (2 : 2): [ 5.067822985094328e+173 5.387842123834802e-310 ]
val = 0


S1 (2 : 2): [ 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (2 : 2): [ 3 3 ]
T2 (2 : 2): [ 3.614836360604185 3.614836360604185 ]


a (2 : 2): [ -0.6148363606041851 -0.6148363606041851 ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (2 : 2): [ -0.6148363606041851 -0.6148363606041851 ]


a (2 : 2): [ 0.6148363606041851 0.6148363606041851 ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (2 : 2): [ 4 4 ]
T2 (2 : 2): [ 3.614836360604185 3.614836360604185 ]


b (2 : 2): [ 0.3851636393958149 0.3851636393958149 ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (2 : 2): [ 0.3851636393958149 0.3851636393958149 ]


b (2 : 2): [ 0.3851636393958149 0.3851636393958149 ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (2 : 2): [ 0.6148363606041851 0.6148363606041851 ]
b (2 : 2): [ 0.3851636393958149 0.3851636393958149 ]


tmpm_d (2 x 2 : 2 x 2): [
	 0.6148363606041851 0.3851636393958149
	 0.6148363606041851 0.3851636393958149
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (2 x 2 : 2 x 2): [
	 0.6148363606041851 0.3851636393958149
	 0.6148363606041851 0.3851636393958149
 ]


m (2 : 2): [ 0.6148363606041851 0.6148363606041851 ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (2 : 2): [ 3.614836360604185 3.614836360604185 ]
complemento = 0


ind (0 : 2): [ ]
------------------------------ Fine which_v_indxNA_d

115: assegna1_vs_indx_d	<=>	v[indx] <- val
a (2 : 2): [ 0.6148363606041851 0.6148363606041851 ]
ind (0 : 2): [ ]
val = 0


a (2 : 2): [ 0.6148363606041851 0.6148363606041851 ]
------------------------------ Fine assegna1_vs_indx_d

117: assegna1_vs_indx_d	<=>	v[indx] <- val
b (2 : 2): [ 0.3851636393958149 0.3851636393958149 ]
ind (0 : 2): [ ]
val = 0


b (2 : 2): [ 0.3851636393958149 0.3851636393958149 ]
------------------------------ Fine assegna1_vs_indx_d

119: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (2 : 2): [ 0.6148363606041851 0.6148363606041851 ]
b (2 : 2): [ 0.3851636393958149 0.3851636393958149 ]


tmpm_d (2 x 2 : 2 x 2): [
	 0.6148363606041851 0.3851636393958149
	 0.6148363606041851 0.3851636393958149
 ]
------------------------------ Fine cbind2v_d

120: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (2 x 2 : 2 x 2): [
	 0.6148363606041851 0.3851636393958149
	 0.6148363606041851 0.3851636393958149
 ]


m (2 : 2): [ 0.6148363606041851 0.6148363606041851 ]
------------------------------ Fine max_righe_d

122: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (2 : 2): [ 0.6148363606041851 0.6148363606041851 ]
b (2 : 2): [ 0.3851636393958149 0.3851636393958149 ]
m (2 : 2): [ 0.6148363606041851 0.6148363606041851 ]
T2 (2 : 2): [ 3.614836360604185 3.614836360604185 ]


S2 (2 : 2): [ 0.1700869138378981 0.1700869138378981 ]
------------------------------ Fine f_aux_d

124: diff_vv_d	<=>	ris <- v1 - v2
a (2 : 2): [ 0.6148363606041851 0.6148363606041851 ]
toll2 (2 : 2): [ 1 1 ]


tmp_d1 (2 : 2): [ -0.3851636393958149 -0.3851636393958149 ]
------------------------------ Fine diff_vv_d

125: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (2 : 2): [ -0.3851636393958149 -0.3851636393958149 ]
val = 0

ind1 (2 : 2): [ 1 2 ]
------------------------------ Fine which_v_indxlt_d

127: diff_vv_d	<=>	ris <- v1 - v2
b (2 : 2): [ 0.3851636393958149 0.3851636393958149 ]
toll2 (2 : 2): [ 1 1 ]


tmp_d1 (2 : 2): [ -0.6148363606041851 -0.6148363606041851 ]
------------------------------ Fine diff_vv_d

128: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (2 : 2): [ -0.6148363606041851 -0.6148363606041851 ]
val = 0


ind2 (0 : 2): [ ]
------------------------------ Fine which_v_indxgt_d

130: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (2 : 2): [ 1 2 ]
ind2 (0 : 2): [ ]
2459: esiste_v_i	<=>	elem %IN% v
elem = 1
ind2 (0 : 2): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 1
tmp_i1 (0 : 2): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 2
ind2 (0 : 2): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 2
tmp_i1 (0 : 2): [ ]


indx = 0
------------------------------ Fine esiste_v_i



tmp_i1 (0 : 2): [ ]
------------------------------ Fine interseca_i

132: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (2 : 2): [ 0.1700869138378981 0.1700869138378981 ]
tmp_i1 (0 : 2): [ ]
val = -1.#INF


S2 (2 : 2): [ 0.1700869138378981 0.1700869138378981 ]
------------------------------ Fine assegna1_vs_indx_d

134: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (2 : 2): [ 0.1700869138378981 0.1700869138378981 ]
ind (0 : 2): [ ]
val = 0


S2 (2 : 2): [ 0.1700869138378981 0.1700869138378981 ]
------------------------------ Fine assegna1_vs_indx_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (2 : 2): [ 3.614836360604185 3.614836360604185 ]
val = 0


ind (0 : 2): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (2 : 2): [ 0.1700869138378981 0.1700869138378981 ]
ind (0 : 2): [ ]
val = -1.#INF


S2 (2 : 2): [ 0.1700869138378981 0.1700869138378981 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (2 : 2): [ 0 0 ]
S2 (2 : 2): [ 0.1700869138378981 0.1700869138378981 ]


S_out (2 : 2): [ 0.1700869138378981 0.1700869138378981 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
S_out (2 : 2): [ 0.1700869138378981 0.1700869138378981 ]
div = 2.000


S_out (2 : 2): [ 0.08504345691894905 0.08504345691894905 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (4510 interne); stringhe deallocate: 0 (4080 interne)

95: which_v_indxne_d	<=>	ris <- which(v != val)
S_out (2 : 2): [ 0.08504345691894905 0.08504345691894905 ]
val = -1.#INF


indok (2 : 2): [ 1 2 ]
------------------------------ Fine which_v_indxne_d

97: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 0 0
 ]
riga = 2
indok (2 : 2): [ 1 2 ]
val = 1


checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
------------------------------ Fine aggiungi_riga_indx_i

104: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 2
incr = 1


tmp_i1 (2 : 6): [ 1 2 ]
------------------------------ Fine seq_i

105: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (2 : 6): [ 1 2 ]
indok (2 : 2): [ 1 2 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (2 : 6): [ 1 2 ]
st = 1
end = 2


indInf (2 : 2): [ 1 2 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (2 : 2): [ 1 2 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 2): [ 1 2 ]
indx = 1


indInf (1 : 2): [ 2 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (1 : 2): [ 2 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 2): [ 2 ]
indx = 1


indInf (0 : 2): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 2): [ ]
------------------------------ Fine setdiff_i

107: copia_v_indx_d	<=>	ris <- v[indx]
S_out (2 : 2): [ 0.08504345691894905 0.08504345691894905 ]
indok (2 : 2): [ 1 2 ]


tmp_d1 (2 : 2): [ 0.08504345691894905 0.08504345691894905 ]
------------------------------ Fine copia_v_indx_d

111: min_v_d	<=>	ris <- min(v)
tmp_d1 (2 : 2): [ 0.08504345691894905 0.08504345691894905 ]


min = 0.08504345691894905
------------------------------ Fine min_v_d

112: assegna1_vs_indx_d	<=>	v[indx] <- val
S_out (2 : 2): [ 0.08504345691894905 0.08504345691894905 ]
indInf (0 : 2): [ ]
val = -1


S_out (2 : 2): [ 0.08504345691894905 0.08504345691894905 ]
------------------------------ Fine assegna1_vs_indx_d

155: InitVett_d
ris (2 : 2): [ 0 0 ]
val = 0


ris (2 : 2): [ 0 0 ]
------------------------------ Fine InitVett_d

156: aggiungi_ms_riga_i	<=>	m[riga,] <- val # riga <= dim(m)[0] + 1
checkIN (2 x 2 : 2 x 2): [
	 1 1
	 0 0
 ]
riga = 2, val = 1


checkIN (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
------------------------------ Fine aggiungi_ms_riga_i

159: somma_vv_d	<=>	ris <- v1 + v2
S_out (2 : 2): [ 0.08504345691894905 0.08504345691894905 ]
ris (2 : 2): [ 0 0 ]


tmp_d1 (2 : 2): [ 0.08504345691894905 0.08504345691894905 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
riga = 2
tmp_d1 (2 : 2): [ 0.08504345691894905 0.08504345691894905 ]


ris (2 x 2 : 2 x 2): [
	 0 0
	 0.08504345691894905 0.08504345691894905
 ]
------------------------------ Fine aggiungi_mv_riga_d

168: somma_m_d	<=>	ris <- sum(m)
ris (2 x 2 : 2 x 2): [
	 0 0
	 0.08504345691894905 0.08504345691894905
 ]


ris: 0.1700869138378981
------------------------------ Fine somma_m_d

173: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
checkIN (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]


aus (2 : 2): [ 2 2 ]
------------------------------ Fine somma_colonne_i

175: which_v_indxne_i	<=>	ris <- which(v != val)
aus (2 : 2): [ 2 2 ]
val = 0


tmp_i1 (2 : 6): [ 1 2 ]
------------------------------ Fine which_v_indxne_i

186: somma_righe_i	<=>	ris <- apply(m, 1, sum)
checkIN (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]


rs (2 : 2): [ 2 2 ]
------------------------------ Fine somma_righe_i

188: ordine_i	<=>	ris <- order(v, decreasing=decr)
rs (2 : 2): [ 2 2 ]
decr = 0


ord_ind (2 : 2): [ 1 2 ]
------------------------------ Fine ordine_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
r = 1
val = 0


I_add (2 : 4): [ 1 2 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
I (0 : 0): [ ]
I_add (2 : 4): [ 1 2 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (2 : 2): [ 1 2 ]


ris (2 : 2): [ 1 2 ]
------------------------------ Fine elimina_doppi_i



ris (2 : 2): [ 1 2 ]
------------------------------ Fine unione1_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
r = 2
val = 0


I_add (2 : 4): [ 1 2 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
ris (2 : 2): [ 1 2 ]
I_add (2 : 4): [ 1 2 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (4 : 4): [ 1 2 1 2 ]


ris (2 : 4): [ 1 2 ]
------------------------------ Fine elimina_doppi_i



ris (2 : 4): [ 1 2 ]
------------------------------ Fine unione1_i

216: assegna1_mindxlt_i	<=>	m1[which(m2<val1)] <- val2
checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
val1 = 0
val2 = 0


checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
------------------------------ Fine assegna1_mindxlt_i

218: assegna1_m_indxgt_i	<=>	m1[which(m2>val1)] <- val2
checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
val1 = 0
val2 = 1


checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
------------------------------ Fine assegna1_m_indxgt_i

220: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]


aus (2 : 2): [ 2 2 ]
------------------------------ Fine somma_colonne_i

222: which_v_indxne_i	<=>	ris <- which(v != val)
aus (2 : 2): [ 2 2 ]
val = 0


tmp_i1 (2 : 6): [ 1 2 ]
------------------------------ Fine which_v_indxne_i

232: somma_righe_i	<=>	ris <- apply(m, 1, sum)
checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]


rs (2 : 2): [ 2 2 ]
------------------------------ Fine somma_righe_i

234: ordine_i	<=>	ris <- order(v, decreasing=decr)
rs (2 : 2): [ 2 2 ]
decr = 0


ord_ind (2 : 2): [ 1 2 ]
------------------------------ Fine ordine_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
r = 1
val = 0


I_add (2 : 4): [ 1 2 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (0 : 4): [ ]
I_add (2 : 4): [ 1 2 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (2 : 2): [ 1 2 ]


ris (2 : 2): [ 1 2 ]
------------------------------ Fine elimina_doppi_i



ris (2 : 2): [ 1 2 ]
------------------------------ Fine unione1_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
r = 2
val = 0


I_add (2 : 4): [ 1 2 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (2 : 2): [ 1 2 ]
I_add (2 : 4): [ 1 2 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (4 : 4): [ 1 2 1 2 ]


ris (2 : 4): [ 1 2 ]
------------------------------ Fine elimina_doppi_i



ris (2 : 4): [ 1 2 ]
------------------------------ Fine unione1_i


Stringhe allocate: 5 (4575 interne); stringhe deallocate: 0 (4220 interne)


Stringhe allocate: 5 (4580 interne); stringhe deallocate: 0 (4235 interne)


*** module2 ***
44: seq_i	<=>	ris <- seq(da, a, incr)
da = 2
a = 2
incr = 1


tmp1_i (1 : 1): [ 2 ]
------------------------------ Fine seq_i


*** sampleB ***
58: rep_v_i	<=>	ris <- rep(v, rip)
tmp1_i (1 : 1): [ 2 ]
rip = 1


ris (1 : 1): [ 2 ]
------------------------------ Fine rep_v_i


Stringhe allocate: 5 (4590 interne); stringhe deallocate: 0 (4235 interne)


*** mod2 ***
17: InitMatr_i
ris (2 x 2 : 2 x 2): [
	 79865952 1918959715
	 778334061 25390
 ]
val = 0


ris (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
------------------------------ Fine InitMatr_i


Stringhe allocate: 5 (4595 interne); stringhe deallocate: 0 (4235 interne)


*** probmod ***
46: InitMatr_i
checkOUT (2 x 2 : 2 x 2): [
	 79865824 1918959715
	 778334061 2130731822
 ]
val = 0


checkOUT (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
------------------------------ Fine InitMatr_i

48: InitMatr_i
checkIN (2 x 2 : 2 x 2): [
	 79862568 1918959715
	 778657656 25390
 ]
val = 0


checkIN (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
------------------------------ Fine InitMatr_i

50: InitMatr_d
ris (2 x 2 : 2 x 2): [
	 6.218345866841112e+175 0
	 5.387842123834802e-310 0
 ]
val = 0


ris (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
------------------------------ Fine InitMatr_d

52: somma_righe_i	<=>	ris <- apply(m, 1, sum)
ris (2 x 2 : 2 x 2): [
	 0 0
	 1 0
 ]


M_in (2 : 2): [ 0 1 ]
------------------------------ Fine somma_righe_i

54: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
ris (2 x 2 : 2 x 2): [
	 0 0
	 1 0
 ]


M_out (2 : 2): [ 1 0 ]
------------------------------ Fine somma_colonne_i

57: InitMatr_i
memory (2 x 3 : 2 x 3): [
	 79860576 0 79034224
	 2 0 0
 ]
val = -2147483648


memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
------------------------------ Fine InitMatr_i

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 0


tmp_i1 (0 : 6): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 1


tmp_i2 (0 : 6): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 6): [ ]
tmp_i2 (0 : 6): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

92: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sout (5 : 5): [ 0 1 1 1 0 ]
h (2 : 5): [ 1 5 ]


tmp_i1 (2 : 6): [ 0 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (2 : 6): [ 0 0 ]
s = 1


ind (2 : 2): [ 1 1 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (2 : 6): [ 0 0 ]
s = 1


tmp_i1 (2 : 2): [ 1 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (2 : 2): [ 1 1 ]


T1 (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (2 : 2): [ 1 1 ]
s = 1


tmp_i1 (2 : 2): [ 2 2 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (2 : 2): [ 2 2 ]


T2 (2 : 2): [ 3.614836360604185 3.614836360604185 ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (2 : 6): [ 0 0 ]
s = 1


tmp_i1 (2 : 2): [ 1 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 2 3 0 0 0 0 0 ]
tmp_i1 (2 : 2): [ 1 1 ]


old1 (2 : 2): [ 2 2 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (2 : 2): [ 1 1 ]
s = 1


tmp_i1 (2 : 2): [ 2 2 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 2 3 0 0 0 0 0 ]
tmp_i1 (2 : 2): [ 2 2 ]


old2 (2 : 2): [ 3 3 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (2 : 2): [ 2 2 ]
s = -1


new1 (2 : 2): [ 1 1 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (2 : 2): [ 3 3 ]
s = 1


new2 (2 : 2): [ 4 4 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (2 : 6): [ 0 0 ]
s = 1


tmp_i1 (2 : 2): [ 1 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (2 : 2): [ 1 1 ]


toll1 (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (2 : 2): [ 1 1 ]
s = 1


tmp_i1 (2 : 2): [ 2 2 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (2 : 2): [ 2 2 ]


toll2 (2 : 2): [ 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (2 : 2): [ 2 2 ]
T1 (2 : 2): [ 1.#QNAN 1.#QNAN ]


a (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (2 : 2): [ 1.#QNAN 1.#QNAN ]


a (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (2 : 2): [ 1 1 ]
T1 (2 : 2): [ 1.#QNAN 1.#QNAN ]


b (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (2 : 2): [ 1.#QNAN 1.#QNAN ]


b (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (2 : 2): [ 1.#QNAN 1.#QNAN ]
complemento = 0


ind (2 : 2): [ 1 2 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (2 : 2): [ 6.218345866829882e+175 5.618966267453383e+303 ]
val = 0


S1 (2 : 2): [ 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (2 : 2): [ 3 3 ]
T2 (2 : 2): [ 3.614836360604185 3.614836360604185 ]


a (2 : 2): [ -0.6148363606041851 -0.6148363606041851 ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (2 : 2): [ -0.6148363606041851 -0.6148363606041851 ]


a (2 : 2): [ 0.6148363606041851 0.6148363606041851 ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (2 : 2): [ 4 4 ]
T2 (2 : 2): [ 3.614836360604185 3.614836360604185 ]


b (2 : 2): [ 0.3851636393958149 0.3851636393958149 ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (2 : 2): [ 0.3851636393958149 0.3851636393958149 ]


b (2 : 2): [ 0.3851636393958149 0.3851636393958149 ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (2 : 2): [ 0.6148363606041851 0.6148363606041851 ]
b (2 : 2): [ 0.3851636393958149 0.3851636393958149 ]


tmpm_d (2 x 2 : 2 x 2): [
	 0.6148363606041851 0.3851636393958149
	 0.6148363606041851 0.3851636393958149
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (2 x 2 : 2 x 2): [
	 0.6148363606041851 0.3851636393958149
	 0.6148363606041851 0.3851636393958149
 ]


m (2 : 2): [ 0.6148363606041851 0.6148363606041851 ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (2 : 2): [ 3.614836360604185 3.614836360604185 ]
complemento = 0


ind (0 : 2): [ ]
------------------------------ Fine which_v_indxNA_d

115: assegna1_vs_indx_d	<=>	v[indx] <- val
a (2 : 2): [ 0.6148363606041851 0.6148363606041851 ]
ind (0 : 2): [ ]
val = 0


a (2 : 2): [ 0.6148363606041851 0.6148363606041851 ]
------------------------------ Fine assegna1_vs_indx_d

117: assegna1_vs_indx_d	<=>	v[indx] <- val
b (2 : 2): [ 0.3851636393958149 0.3851636393958149 ]
ind (0 : 2): [ ]
val = 0


b (2 : 2): [ 0.3851636393958149 0.3851636393958149 ]
------------------------------ Fine assegna1_vs_indx_d

119: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (2 : 2): [ 0.6148363606041851 0.6148363606041851 ]
b (2 : 2): [ 0.3851636393958149 0.3851636393958149 ]


tmpm_d (2 x 2 : 2 x 2): [
	 0.6148363606041851 0.3851636393958149
	 0.6148363606041851 0.3851636393958149
 ]
------------------------------ Fine cbind2v_d

120: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (2 x 2 : 2 x 2): [
	 0.6148363606041851 0.3851636393958149
	 0.6148363606041851 0.3851636393958149
 ]


m (2 : 2): [ 0.6148363606041851 0.6148363606041851 ]
------------------------------ Fine max_righe_d

122: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (2 : 2): [ 0.6148363606041851 0.6148363606041851 ]
b (2 : 2): [ 0.3851636393958149 0.3851636393958149 ]
m (2 : 2): [ 0.6148363606041851 0.6148363606041851 ]
T2 (2 : 2): [ 3.614836360604185 3.614836360604185 ]


S2 (2 : 2): [ 0.1700869138378981 0.1700869138378981 ]
------------------------------ Fine f_aux_d

124: diff_vv_d	<=>	ris <- v1 - v2
a (2 : 2): [ 0.6148363606041851 0.6148363606041851 ]
toll2 (2 : 2): [ 1 1 ]


tmp_d1 (2 : 2): [ -0.3851636393958149 -0.3851636393958149 ]
------------------------------ Fine diff_vv_d

125: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (2 : 2): [ -0.3851636393958149 -0.3851636393958149 ]
val = 0

ind1 (2 : 2): [ 1 2 ]
------------------------------ Fine which_v_indxlt_d

127: diff_vv_d	<=>	ris <- v1 - v2
b (2 : 2): [ 0.3851636393958149 0.3851636393958149 ]
toll2 (2 : 2): [ 1 1 ]


tmp_d1 (2 : 2): [ -0.6148363606041851 -0.6148363606041851 ]
------------------------------ Fine diff_vv_d

128: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (2 : 2): [ -0.6148363606041851 -0.6148363606041851 ]
val = 0


ind2 (0 : 2): [ ]
------------------------------ Fine which_v_indxgt_d

130: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (2 : 2): [ 1 2 ]
ind2 (0 : 2): [ ]
2459: esiste_v_i	<=>	elem %IN% v
elem = 1
ind2 (0 : 2): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 1
tmp_i1 (0 : 2): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 2
ind2 (0 : 2): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 2
tmp_i1 (0 : 2): [ ]


indx = 0
------------------------------ Fine esiste_v_i



tmp_i1 (0 : 2): [ ]
------------------------------ Fine interseca_i

132: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (2 : 2): [ 0.1700869138378981 0.1700869138378981 ]
tmp_i1 (0 : 2): [ ]
val = -1.#INF


S2 (2 : 2): [ 0.1700869138378981 0.1700869138378981 ]
------------------------------ Fine assegna1_vs_indx_d

134: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (2 : 2): [ 0.1700869138378981 0.1700869138378981 ]
ind (0 : 2): [ ]
val = 0


S2 (2 : 2): [ 0.1700869138378981 0.1700869138378981 ]
------------------------------ Fine assegna1_vs_indx_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (2 : 2): [ 3.614836360604185 3.614836360604185 ]
val = 0


ind (0 : 2): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (2 : 2): [ 0.1700869138378981 0.1700869138378981 ]
ind (0 : 2): [ ]
val = -1.#INF


S2 (2 : 2): [ 0.1700869138378981 0.1700869138378981 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (2 : 2): [ 0 0 ]
S2 (2 : 2): [ 0.1700869138378981 0.1700869138378981 ]


ris (2 : 2): [ 0.1700869138378981 0.1700869138378981 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
ris (2 : 2): [ 0.1700869138378981 0.1700869138378981 ]
div = 2.000


ris (2 : 2): [ 0.08504345691894905 0.08504345691894905 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (4755 interne); stringhe deallocate: 0 (4335 interne)

95: which_v_indxne_d	<=>	ris <- which(v != val)
ris (2 : 2): [ 0.08504345691894905 0.08504345691894905 ]
val = -1.#INF


indok (2 : 2): [ 1 2 ]
------------------------------ Fine which_v_indxne_d

97: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkOUT (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
riga = 1
indok (2 : 2): [ 1 2 ]
val = 1


checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 0 0
 ]
------------------------------ Fine aggiungi_riga_indx_i

104: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 2
incr = 1


tmp_i1 (2 : 6): [ 1 2 ]
------------------------------ Fine seq_i

105: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (2 : 6): [ 1 2 ]
indok (2 : 2): [ 1 2 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (2 : 6): [ 1 2 ]
st = 1
end = 2


indInf (2 : 2): [ 1 2 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (2 : 2): [ 1 2 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 2): [ 1 2 ]
indx = 1


indInf (1 : 2): [ 2 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (1 : 2): [ 2 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 2): [ 2 ]
indx = 1


indInf (0 : 2): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 2): [ ]
------------------------------ Fine setdiff_i

107: copia_v_indx_d	<=>	ris <- v[indx]
ris (2 : 2): [ 0.08504345691894905 0.08504345691894905 ]
indok (2 : 2): [ 1 2 ]


tmp_d1 (2 : 2): [ 0.08504345691894905 0.08504345691894905 ]
------------------------------ Fine copia_v_indx_d

111: min_v_d	<=>	ris <- min(v)
tmp_d1 (2 : 2): [ 0.08504345691894905 0.08504345691894905 ]


min = 0.08504345691894905
------------------------------ Fine min_v_d

112: assegna1_vs_indx_d	<=>	v[indx] <- val
ris (2 : 2): [ 0.08504345691894905 0.08504345691894905 ]
indInf (0 : 2): [ ]
val = -1


ris (2 : 2): [ 0.08504345691894905 0.08504345691894905 ]
------------------------------ Fine assegna1_vs_indx_d

155: InitVett_d
S_in (2 : 2): [ 6.218345866837687e+175 5.387842123834802e-310 ]
val = 0


S_in (2 : 2): [ 0 0 ]
------------------------------ Fine InitVett_d

156: aggiungi_ms_riga_i	<=>	m[riga,] <- val # riga <= dim(m)[0] + 1
checkIN (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
riga = 1, val = 1


checkIN (2 x 2 : 2 x 2): [
	 1 1
	 0 0
 ]
------------------------------ Fine aggiungi_ms_riga_i

159: somma_vv_d	<=>	ris <- v1 + v2
ris (2 : 2): [ 0.08504345691894905 0.08504345691894905 ]
S_in (2 : 2): [ 0 0 ]


tmp_d1 (2 : 2): [ 0.08504345691894905 0.08504345691894905 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
riga = 1
tmp_d1 (2 : 2): [ 0.08504345691894905 0.08504345691894905 ]


ris (2 x 2 : 2 x 2): [
	 0.08504345691894905 0.08504345691894905
	 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_d

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 1


tmp_i1 (0 : 6): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 0


tmp_i2 (0 : 6): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 6): [ ]
tmp_i2 (0 : 6): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

119: InitVett_d
ris (2 : 2): [ 0.08504345691894905 0.08504345691894905 ]
val = 0


ris (2 : 2): [ 0 0 ]
------------------------------ Fine InitVett_d

122: InitVett_i
tmp_i1 (2 : 6): [ 1 2 ]
val = 1


tmp_i1 (2 : 6): [ 1 1 ]
------------------------------ Fine InitVett_i

123: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 0 0
 ]
riga = 2
tmp_i1 (2 : 6): [ 1 1 ]


checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
------------------------------ Fine aggiungi_mv_riga_i

128: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 1 1 1 0 ]
h (2 : 5): [ 1 5 ]


tmp_i1 (2 : 6): [ 0 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (2 : 6): [ 0 0 ]
s = 1


ind (2 : 2): [ 1 1 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (2 : 6): [ 0 0 ]
s = 1


tmp_i1 (2 : 2): [ 1 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
tmp_i1 (2 : 2): [ 1 1 ]


T1 (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (2 : 2): [ 1 1 ]
s = 1


tmp_i1 (2 : 2): [ 2 2 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
tmp_i1 (2 : 2): [ 2 2 ]


T2 (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (2 : 6): [ 0 0 ]
s = 1


tmp_i1 (2 : 2): [ 1 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 2 3 0 0 0 0 0 ]
tmp_i1 (2 : 2): [ 1 1 ]


old1 (2 : 2): [ 2 2 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (2 : 2): [ 1 1 ]
s = 1


tmp_i1 (2 : 2): [ 2 2 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 2 3 0 0 0 0 0 ]
tmp_i1 (2 : 2): [ 2 2 ]


old2 (2 : 2): [ 3 3 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (2 : 2): [ 2 2 ]
s = -1


new1 (2 : 2): [ 1 1 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (2 : 2): [ 3 3 ]
s = 1


new2 (2 : 2): [ 4 4 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (2 : 6): [ 0 0 ]
s = 1


tmp_i1 (2 : 2): [ 1 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (2 : 2): [ 1 1 ]


toll1 (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (2 : 2): [ 1 1 ]
s = 1


tmp_i1 (2 : 2): [ 2 2 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (2 : 2): [ 2 2 ]


toll2 (2 : 2): [ 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (2 : 2): [ 2 2 ]
T1 (2 : 2): [ 1.#QNAN 1.#QNAN ]


a (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (2 : 2): [ 1.#QNAN 1.#QNAN ]


a (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (2 : 2): [ 1 1 ]
T1 (2 : 2): [ 1.#QNAN 1.#QNAN ]


b (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (2 : 2): [ 1.#QNAN 1.#QNAN ]


b (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (2 : 2): [ 1.#QNAN 1.#QNAN ]
complemento = 0


ind (2 : 2): [ 1 2 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (2 : 2): [ 6.218345866827604e+175 2.048428433988699 ]
val = 0


S1 (2 : 2): [ 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (2 : 2): [ 3 3 ]
T2 (2 : 2): [ 1.#QNAN 1.#QNAN ]


a (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (2 : 2): [ 1.#QNAN 1.#QNAN ]


a (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (2 : 2): [ 4 4 ]
T2 (2 : 2): [ 1.#QNAN 1.#QNAN ]


b (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (2 : 2): [ 1.#QNAN 1.#QNAN ]


b (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (2 : 2): [ 1.#QNAN 1.#QNAN ]
b (2 : 2): [ 1.#QNAN 1.#QNAN ]


tmpm_d (2 x 2 : 2 x 2): [
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (2 x 2 : 2 x 2): [
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
 ]


m (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (2 : 2): [ 1.#QNAN 1.#QNAN ]
complemento = 0


ind (2 : 2): [ 1 2 ]
------------------------------ Fine which_v_indxNA_d

140: InitVett_d
S2 (2 : 2): [ 5.842414621812633e-308 0 ]
val = 0


S2 (2 : 2): [ 0 0 ]
------------------------------ Fine InitVett_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (2 : 2): [ 1.#QNAN 1.#QNAN ]
val = 0


ind (0 : 2): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (2 : 2): [ 0 0 ]
ind (0 : 2): [ ]
val = -1.#INF


S2 (2 : 2): [ 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (2 : 2): [ 0 0 ]
S2 (2 : 2): [ 0 0 ]


S_in (2 : 2): [ 0 0 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
S_in (2 : 2): [ 0 0 ]
div = 2.000


S_in (2 : 2): [ 0 0 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (4860 interne); stringhe deallocate: 0 (4420 interne)

131: which_v_indxne_d	<=>	ris <- which(v != val)
S_in (2 : 2): [ 0 0 ]
val = -1.#INF


indok (2 : 2): [ 1 2 ]
------------------------------ Fine which_v_indxne_d

133: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkIN (2 x 2 : 2 x 2): [
	 1 1
	 0 0
 ]
riga = 2
indok (2 : 2): [ 1 2 ]
val = 1


checkIN (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
------------------------------ Fine aggiungi_riga_indx_i

141: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 2
incr = 1


tmp_i1 (2 : 6): [ 1 2 ]
------------------------------ Fine seq_i

142: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (2 : 6): [ 1 2 ]
indok (2 : 2): [ 1 2 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (2 : 6): [ 1 2 ]
st = 1
end = 2


indInf (2 : 2): [ 1 2 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (2 : 2): [ 1 2 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 2): [ 1 2 ]
indx = 1


indInf (1 : 2): [ 2 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (1 : 2): [ 2 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 2): [ 2 ]
indx = 1


indInf (0 : 2): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 2): [ ]
------------------------------ Fine setdiff_i

144: copia_v_indx_d	<=>	ris <- v[indx]
S_in (2 : 2): [ 0 0 ]
indok (2 : 2): [ 1 2 ]


tmp_d1 (2 : 2): [ 0 0 ]
------------------------------ Fine copia_v_indx_d

148: min_v_d	<=>	ris <- min(v)
tmp_d1 (2 : 2): [ 0 0 ]


min = 0
------------------------------ Fine min_v_d

149: assegna1_vs_indx_d	<=>	v[indx] <- val
S_in (2 : 2): [ 0 0 ]
indInf (0 : 2): [ ]
val = -1


S_in (2 : 2): [ 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

159: somma_vv_d	<=>	ris <- v1 + v2
ris (2 : 2): [ 0 0 ]
S_in (2 : 2): [ 0 0 ]


tmp_d1 (2 : 2): [ 0 0 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (2 x 2 : 2 x 2): [
	 0.08504345691894905 0.08504345691894905
	 0 0
 ]
riga = 2
tmp_d1 (2 : 2): [ 0 0 ]


ris (2 x 2 : 2 x 2): [
	 0.08504345691894905 0.08504345691894905
	 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_d

168: somma_m_d	<=>	ris <- sum(m)
ris (2 x 2 : 2 x 2): [
	 0.08504345691894905 0.08504345691894905
	 0 0
 ]


ris: 0.1700869138378981
------------------------------ Fine somma_m_d

173: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
checkIN (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]


aus (2 : 2): [ 2 2 ]
------------------------------ Fine somma_colonne_i

175: which_v_indxne_i	<=>	ris <- which(v != val)
aus (2 : 2): [ 2 2 ]
val = 0


tmp_i1 (2 : 6): [ 1 2 ]
------------------------------ Fine which_v_indxne_i

186: somma_righe_i	<=>	ris <- apply(m, 1, sum)
checkIN (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]


rs (2 : 2): [ 2 2 ]
------------------------------ Fine somma_righe_i

188: ordine_i	<=>	ris <- order(v, decreasing=decr)
rs (2 : 2): [ 2 2 ]
decr = 0


ord_ind (2 : 2): [ 1 2 ]
------------------------------ Fine ordine_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
r = 1
val = 0


I_add (2 : 4): [ 1 2 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
I (0 : 0): [ ]
I_add (2 : 4): [ 1 2 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (2 : 2): [ 1 2 ]


ris (2 : 2): [ 1 2 ]
------------------------------ Fine elimina_doppi_i



ris (2 : 2): [ 1 2 ]
------------------------------ Fine unione1_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
r = 2
val = 0


I_add (2 : 4): [ 1 2 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
ris (2 : 2): [ 1 2 ]
I_add (2 : 4): [ 1 2 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (4 : 4): [ 1 2 1 2 ]


ris (2 : 4): [ 1 2 ]
------------------------------ Fine elimina_doppi_i



ris (2 : 4): [ 1 2 ]
------------------------------ Fine unione1_i

216: assegna1_mindxlt_i	<=>	m1[which(m2<val1)] <- val2
checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
val1 = 0
val2 = 0


checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
------------------------------ Fine assegna1_mindxlt_i

218: assegna1_m_indxgt_i	<=>	m1[which(m2>val1)] <- val2
checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
val1 = 0
val2 = 1


checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
------------------------------ Fine assegna1_m_indxgt_i

220: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]


aus (2 : 2): [ 2 2 ]
------------------------------ Fine somma_colonne_i

222: which_v_indxne_i	<=>	ris <- which(v != val)
aus (2 : 2): [ 2 2 ]
val = 0


tmp_i1 (2 : 6): [ 1 2 ]
------------------------------ Fine which_v_indxne_i

232: somma_righe_i	<=>	ris <- apply(m, 1, sum)
checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]


rs (2 : 2): [ 2 2 ]
------------------------------ Fine somma_righe_i

234: ordine_i	<=>	ris <- order(v, decreasing=decr)
rs (2 : 2): [ 2 2 ]
decr = 0


ord_ind (2 : 2): [ 1 2 ]
------------------------------ Fine ordine_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
r = 1
val = 0


I_add (2 : 4): [ 1 2 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (0 : 4): [ ]
I_add (2 : 4): [ 1 2 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (2 : 2): [ 1 2 ]


ris (2 : 2): [ 1 2 ]
------------------------------ Fine elimina_doppi_i



ris (2 : 2): [ 1 2 ]
------------------------------ Fine unione1_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
r = 2
val = 0


I_add (2 : 4): [ 1 2 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (2 : 2): [ 1 2 ]
I_add (2 : 4): [ 1 2 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (4 : 4): [ 1 2 1 2 ]


ris (2 : 4): [ 1 2 ]
------------------------------ Fine elimina_doppi_i



ris (2 : 4): [ 1 2 ]
------------------------------ Fine unione1_i


Stringhe allocate: 5 (4925 interne); stringhe deallocate: 0 (4560 interne)


Stringhe allocate: 5 (4930 interne); stringhe deallocate: 0 (4570 interne)


*** module3 ***
51: seq_i	<=>	ris <- seq(da, a, incr)
da = 2
a = 2
incr = 1


tmp1_i (1 : 1): [ 2 ]
------------------------------ Fine seq_i


*** sampleB ***
58: rep_v_i	<=>	ris <- rep(v, rip)
tmp1_i (1 : 1): [ 2 ]
rip = 1


ris (1 : 1): [ 2 ]
------------------------------ Fine rep_v_i


Stringhe allocate: 5 (4940 interne); stringhe deallocate: 0 (4570 interne)

54: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 1
incr = 1


tmp1_i (1 : 1): [ 1 ]
------------------------------ Fine seq_i


*** sampleB ***
58: rep_v_i	<=>	ris <- rep(v, rip)
tmp1_i (1 : 1): [ 1 ]
rip = 1


ris (1 : 1): [ 1 ]
------------------------------ Fine rep_v_i


Stringhe allocate: 5 (4945 interne); stringhe deallocate: 0 (4570 interne)


*** mod3 ***
33: InitMatr_i
ris (2 x 2 : 2 x 2): [
	 79866744 1918959715
	 778334061 1056989998
 ]
val = 0


ris (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
------------------------------ Fine InitMatr_i

34: copia_v_d	<=>	ris[st:end] <- v[st:end]
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
st = 1
end = 7


STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
------------------------------ Fine copia_v_d

35: copia_v_d	<=>	ris[st:end] <- v[st:end]
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
st = 1
end = 7


STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
------------------------------ Fine copia_v_d

39: segmento_v_d	<=>	ris <- v[st:end]
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
start = 2
end = 2


tmp1_d (1 : 1): [ 3.614836360604185 ]
------------------------------ Fine segmento_v_d

40: somma_v_d	<=>	ris <- sum(v, na.rm=canc_NA)
tmp1_d (1 : 1): [ 3.614836360604185 ]
canc_NA = 1



ris: 3.614836360604185
------------------------------ Fine somma_v_d

43: segmento_v_d	<=>	ris <- v[st:end]
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
start = 2
end = 2


p (1 : 1): [ 3.614836360604185 ]
------------------------------ Fine segmento_v_d

44: dividi1_vs_d	<=>	v <- v / div
p (1 : 1): [ 3.614836360604185 ]
div = 3.615


p (1 : 1): [ 1 ]
------------------------------ Fine dividi1_vs_d

61: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 1
incr = 1


tmp1_i (1 : 1): [ 1 ]
------------------------------ Fine seq_i


*** sampleB_p ***
25: rep_v_i	<=>	ris <- rep(v, rip)
tmp1_i (1 : 1): [ 1 ]
rip = 1


ris (1 : 1): [ 1 ]
------------------------------ Fine rep_v_i

64: somma_v_i	<=>	ris <- sum(v, na.rm=canc_NA)
ris (1 : 1): [ 1 ]
canc_NA = 0



ris: 1
------------------------------ Fine somma_v_i

131: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 1
incr = 1


tmp1_i (1 : 1): [ 1 ]
------------------------------ Fine seq_i

133: assegna1_m_vv_i	<=>	m[vr, vc] <- val
ris (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
tmp1_i (1 : 1): [ 1 ]
scalare_i (1 : 1): [ 2 ]
val = 1


ris (2 x 2 : 2 x 2): [
	 0 1
	 0 0
 ]
------------------------------ Fine assegna1_m_vv_i

135: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 1
incr = 1


indS (1 : 1): [ 1 ]
------------------------------ Fine seq_i

137: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 1
incr = 1


tmp2_i (1 : 1): [ 1 ]
------------------------------ Fine seq_i

138: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp2_i (1 : 1): [ 1 ]
indS (1 : 1): [ 1 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp2_i (1 : 1): [ 1 ]
st = 1
end = 1


indBS (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indBS (1 : 1): [ 1 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indBS (1 : 1): [ 1 ]
indx = 1


indBS (0 : 1): [ ]
------------------------------ Fine elimina1_indx_i



indBS (0 : 1): [ ]
------------------------------ Fine setdiff_i



*****************************************
*****************************************


Stringhe allocate: 5 (5005 interne); stringhe deallocate: 0 (4625 interne)


*** probmod ***
46: InitMatr_i
checkOUT (2 x 2 : 2 x 2): [
	 79863912 99
	 771777326 2
 ]
val = 0


checkOUT (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
------------------------------ Fine InitMatr_i

48: InitMatr_i
checkIN (2 x 2 : 2 x 2): [
	 79865568 1918959715
	 771777326 25390
 ]
val = 0


checkIN (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
------------------------------ Fine InitMatr_i

50: InitMatr_d
ris (2 x 2 : 2 x 2): [
	 6.218345866836934e+175 0
	 5.387842123834802e-310 3.904873523319876e-316
 ]
val = 0


ris (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
------------------------------ Fine InitMatr_d

52: somma_righe_i	<=>	ris <- apply(m, 1, sum)
ris (2 x 2 : 2 x 2): [
	 0 1
	 0 0
 ]


M_in (2 : 2): [ 1 0 ]
------------------------------ Fine somma_righe_i

54: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
ris (2 x 2 : 2 x 2): [
	 0 1
	 0 0
 ]


M_out (2 : 2): [ 0 1 ]
------------------------------ Fine somma_colonne_i

57: InitMatr_i
memory (2 x 3 : 2 x 3): [
	 79860472 0 79037232
	 1 0 1
 ]
val = -2147483648


memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
------------------------------ Fine InitMatr_i

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 1


tmp_i1 (0 : 6): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 0


tmp_i2 (0 : 6): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 6): [ ]
tmp_i2 (0 : 6): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

119: InitVett_d
S_out (2 : 2): [ 3.287239484597785e-085 5.38784212246792e-310 ]
val = 0


S_out (2 : 2): [ 0 0 ]
------------------------------ Fine InitVett_d

122: InitVett_i
tmp_i1 (2 : 6): [ 79860576 1 ]
val = 1


tmp_i1 (2 : 6): [ 1 1 ]
------------------------------ Fine InitVett_i

123: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
checkOUT (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
riga = 1
tmp_i1 (2 : 6): [ 1 1 ]


checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_i

128: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 1 1 1 0 ]
h (2 : 5): [ 1 5 ]


tmp_i1 (2 : 6): [ 0 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (2 : 6): [ 0 0 ]
s = 1


ind (2 : 2): [ 1 1 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (2 : 6): [ 0 0 ]
s = 1


tmp_i1 (2 : 2): [ 1 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
tmp_i1 (2 : 2): [ 1 1 ]


T1 (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (2 : 2): [ 1 1 ]
s = 1


tmp_i1 (2 : 2): [ 2 2 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
tmp_i1 (2 : 2): [ 2 2 ]


T2 (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (2 : 6): [ 0 0 ]
s = 1


tmp_i1 (2 : 2): [ 1 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 2 3 0 0 0 0 0 ]
tmp_i1 (2 : 2): [ 1 1 ]


old1 (2 : 2): [ 2 2 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (2 : 2): [ 1 1 ]
s = 1


tmp_i1 (2 : 2): [ 2 2 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 2 3 0 0 0 0 0 ]
tmp_i1 (2 : 2): [ 2 2 ]


old2 (2 : 2): [ 3 3 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (2 : 2): [ 2 2 ]
s = -1


new1 (2 : 2): [ 1 1 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (2 : 2): [ 3 3 ]
s = 1


new2 (2 : 2): [ 4 4 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (2 : 6): [ 0 0 ]
s = 1


tmp_i1 (2 : 2): [ 1 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (2 : 2): [ 1 1 ]


toll1 (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (2 : 2): [ 1 1 ]
s = 1


tmp_i1 (2 : 2): [ 2 2 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (2 : 2): [ 2 2 ]


toll2 (2 : 2): [ 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (2 : 2): [ 2 2 ]
T1 (2 : 2): [ 1.#QNAN 1.#QNAN ]


a (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (2 : 2): [ 1.#QNAN 1.#QNAN ]


a (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (2 : 2): [ 1 1 ]
T1 (2 : 2): [ 1.#QNAN 1.#QNAN ]


b (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (2 : 2): [ 1.#QNAN 1.#QNAN ]


b (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (2 : 2): [ 1.#QNAN 1.#QNAN ]
complemento = 0


ind (2 : 2): [ 1 2 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (2 : 2): [ 6.218345866838311e+175 5.387842123834802e-310 ]
val = 0


S1 (2 : 2): [ 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (2 : 2): [ 3 3 ]
T2 (2 : 2): [ 1.#QNAN 1.#QNAN ]


a (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (2 : 2): [ 1.#QNAN 1.#QNAN ]


a (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (2 : 2): [ 4 4 ]
T2 (2 : 2): [ 1.#QNAN 1.#QNAN ]


b (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (2 : 2): [ 1.#QNAN 1.#QNAN ]


b (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (2 : 2): [ 1.#QNAN 1.#QNAN ]
b (2 : 2): [ 1.#QNAN 1.#QNAN ]


tmpm_d (2 x 2 : 2 x 2): [
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (2 x 2 : 2 x 2): [
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
 ]


m (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (2 : 2): [ 1.#QNAN 1.#QNAN ]
complemento = 0


ind (2 : 2): [ 1 2 ]
------------------------------ Fine which_v_indxNA_d

140: InitVett_d
S2 (2 : 2): [ 3.088571301751008e-005 0.6148363606041851 ]
val = 0


S2 (2 : 2): [ 0 0 ]
------------------------------ Fine InitVett_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (2 : 2): [ 1.#QNAN 1.#QNAN ]
val = 0


ind (0 : 2): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (2 : 2): [ 0 0 ]
ind (0 : 2): [ ]
val = -1.#INF


S2 (2 : 2): [ 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (2 : 2): [ 0 0 ]
S2 (2 : 2): [ 0 0 ]


ris (2 : 2): [ 0 0 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
ris (2 : 2): [ 0 0 ]
div = 2.000


ris (2 : 2): [ 0 0 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (5155 interne); stringhe deallocate: 0 (4710 interne)

131: which_v_indxne_d	<=>	ris <- which(v != val)
ris (2 : 2): [ 0 0 ]
val = -1.#INF


indok (2 : 2): [ 1 2 ]
------------------------------ Fine which_v_indxne_d

133: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkIN (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
riga = 1
indok (2 : 2): [ 1 2 ]
val = 1


checkIN (2 x 2 : 2 x 2): [
	 1 1
	 0 0
 ]
------------------------------ Fine aggiungi_riga_indx_i

141: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 2
incr = 1


tmp_i1 (2 : 6): [ 1 2 ]
------------------------------ Fine seq_i

142: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (2 : 6): [ 1 2 ]
indok (2 : 2): [ 1 2 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (2 : 6): [ 1 2 ]
st = 1
end = 2


indInf (2 : 2): [ 1 2 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (2 : 2): [ 1 2 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 2): [ 1 2 ]
indx = 1


indInf (1 : 2): [ 2 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (1 : 2): [ 2 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 2): [ 2 ]
indx = 1


indInf (0 : 2): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 2): [ ]
------------------------------ Fine setdiff_i

144: copia_v_indx_d	<=>	ris <- v[indx]
ris (2 : 2): [ 0 0 ]
indok (2 : 2): [ 1 2 ]


tmp_d1 (2 : 2): [ 0 0 ]
------------------------------ Fine copia_v_indx_d

148: min_v_d	<=>	ris <- min(v)
tmp_d1 (2 : 2): [ 0 0 ]


min = 0
------------------------------ Fine min_v_d

149: assegna1_vs_indx_d	<=>	v[indx] <- val
ris (2 : 2): [ 0 0 ]
indInf (0 : 2): [ ]
val = -1


ris (2 : 2): [ 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

159: somma_vv_d	<=>	ris <- v1 + v2
S_out (2 : 2): [ 0 0 ]
ris (2 : 2): [ 0 0 ]


tmp_d1 (2 : 2): [ 0 0 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
riga = 1
tmp_d1 (2 : 2): [ 0 0 ]


ris (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_d

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 0


tmp_i1 (0 : 6): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 1


tmp_i2 (0 : 6): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 6): [ ]
tmp_i2 (0 : 6): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

92: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sout (5 : 5): [ 0 1 1 1 0 ]
h (2 : 5): [ 1 5 ]


tmp_i1 (2 : 6): [ 0 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (2 : 6): [ 0 0 ]
s = 1


ind (2 : 2): [ 1 1 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (2 : 6): [ 0 0 ]
s = 1


tmp_i1 (2 : 2): [ 1 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (2 : 2): [ 1 1 ]


T1 (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (2 : 2): [ 1 1 ]
s = 1


tmp_i1 (2 : 2): [ 2 2 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (2 : 2): [ 2 2 ]


T2 (2 : 2): [ 3.614836360604185 3.614836360604185 ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (2 : 6): [ 0 0 ]
s = 1


tmp_i1 (2 : 2): [ 1 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 2 3 0 0 0 0 0 ]
tmp_i1 (2 : 2): [ 1 1 ]


old1 (2 : 2): [ 2 2 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (2 : 2): [ 1 1 ]
s = 1


tmp_i1 (2 : 2): [ 2 2 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 2 3 0 0 0 0 0 ]
tmp_i1 (2 : 2): [ 2 2 ]


old2 (2 : 2): [ 3 3 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (2 : 2): [ 2 2 ]
s = -1


new1 (2 : 2): [ 1 1 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (2 : 2): [ 3 3 ]
s = 1


new2 (2 : 2): [ 4 4 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (2 : 6): [ 0 0 ]
s = 1


tmp_i1 (2 : 2): [ 1 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (2 : 2): [ 1 1 ]


toll1 (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (2 : 2): [ 1 1 ]
s = 1


tmp_i1 (2 : 2): [ 2 2 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (2 : 2): [ 2 2 ]


toll2 (2 : 2): [ 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (2 : 2): [ 2 2 ]
T1 (2 : 2): [ 1.#QNAN 1.#QNAN ]


a (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (2 : 2): [ 1.#QNAN 1.#QNAN ]


a (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (2 : 2): [ 1 1 ]
T1 (2 : 2): [ 1.#QNAN 1.#QNAN ]


b (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (2 : 2): [ 1.#QNAN 1.#QNAN ]


b (2 : 2): [ 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (2 : 2): [ 1.#QNAN 1.#QNAN ]
complemento = 0


ind (2 : 2): [ 1 2 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (2 : 2): [ 6.218345866839324e+175 5.618966267453383e+303 ]
val = 0


S1 (2 : 2): [ 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (2 : 2): [ 3 3 ]
T2 (2 : 2): [ 3.614836360604185 3.614836360604185 ]


a (2 : 2): [ -0.6148363606041851 -0.6148363606041851 ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (2 : 2): [ -0.6148363606041851 -0.6148363606041851 ]


a (2 : 2): [ 0.6148363606041851 0.6148363606041851 ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (2 : 2): [ 4 4 ]
T2 (2 : 2): [ 3.614836360604185 3.614836360604185 ]


b (2 : 2): [ 0.3851636393958149 0.3851636393958149 ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (2 : 2): [ 0.3851636393958149 0.3851636393958149 ]


b (2 : 2): [ 0.3851636393958149 0.3851636393958149 ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (2 : 2): [ 0.6148363606041851 0.6148363606041851 ]
b (2 : 2): [ 0.3851636393958149 0.3851636393958149 ]


tmpm_d (2 x 2 : 2 x 2): [
	 0.6148363606041851 0.3851636393958149
	 0.6148363606041851 0.3851636393958149
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (2 x 2 : 2 x 2): [
	 0.6148363606041851 0.3851636393958149
	 0.6148363606041851 0.3851636393958149
 ]


m (2 : 2): [ 0.6148363606041851 0.6148363606041851 ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (2 : 2): [ 3.614836360604185 3.614836360604185 ]
complemento = 0


ind (0 : 2): [ ]
------------------------------ Fine which_v_indxNA_d

115: assegna1_vs_indx_d	<=>	v[indx] <- val
a (2 : 2): [ 0.6148363606041851 0.6148363606041851 ]
ind (0 : 2): [ ]
val = 0


a (2 : 2): [ 0.6148363606041851 0.6148363606041851 ]
------------------------------ Fine assegna1_vs_indx_d

117: assegna1_vs_indx_d	<=>	v[indx] <- val
b (2 : 2): [ 0.3851636393958149 0.3851636393958149 ]
ind (0 : 2): [ ]
val = 0


b (2 : 2): [ 0.3851636393958149 0.3851636393958149 ]
------------------------------ Fine assegna1_vs_indx_d

119: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (2 : 2): [ 0.6148363606041851 0.6148363606041851 ]
b (2 : 2): [ 0.3851636393958149 0.3851636393958149 ]


tmpm_d (2 x 2 : 2 x 2): [
	 0.6148363606041851 0.3851636393958149
	 0.6148363606041851 0.3851636393958149
 ]
------------------------------ Fine cbind2v_d

120: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (2 x 2 : 2 x 2): [
	 0.6148363606041851 0.3851636393958149
	 0.6148363606041851 0.3851636393958149
 ]


m (2 : 2): [ 0.6148363606041851 0.6148363606041851 ]
------------------------------ Fine max_righe_d

122: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (2 : 2): [ 0.6148363606041851 0.6148363606041851 ]
b (2 : 2): [ 0.3851636393958149 0.3851636393958149 ]
m (2 : 2): [ 0.6148363606041851 0.6148363606041851 ]
T2 (2 : 2): [ 3.614836360604185 3.614836360604185 ]


S2 (2 : 2): [ 0.1700869138378981 0.1700869138378981 ]
------------------------------ Fine f_aux_d

124: diff_vv_d	<=>	ris <- v1 - v2
a (2 : 2): [ 0.6148363606041851 0.6148363606041851 ]
toll2 (2 : 2): [ 1 1 ]


tmp_d1 (2 : 2): [ -0.3851636393958149 -0.3851636393958149 ]
------------------------------ Fine diff_vv_d

125: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (2 : 2): [ -0.3851636393958149 -0.3851636393958149 ]
val = 0

ind1 (2 : 2): [ 1 2 ]
------------------------------ Fine which_v_indxlt_d

127: diff_vv_d	<=>	ris <- v1 - v2
b (2 : 2): [ 0.3851636393958149 0.3851636393958149 ]
toll2 (2 : 2): [ 1 1 ]


tmp_d1 (2 : 2): [ -0.6148363606041851 -0.6148363606041851 ]
------------------------------ Fine diff_vv_d

128: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (2 : 2): [ -0.6148363606041851 -0.6148363606041851 ]
val = 0


ind2 (0 : 2): [ ]
------------------------------ Fine which_v_indxgt_d

130: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (2 : 2): [ 1 2 ]
ind2 (0 : 2): [ ]
2459: esiste_v_i	<=>	elem %IN% v
elem = 1
ind2 (0 : 2): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 1
tmp_i1 (0 : 2): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 2
ind2 (0 : 2): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 2
tmp_i1 (0 : 2): [ ]


indx = 0
------------------------------ Fine esiste_v_i



tmp_i1 (0 : 2): [ ]
------------------------------ Fine interseca_i

132: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (2 : 2): [ 0.1700869138378981 0.1700869138378981 ]
tmp_i1 (0 : 2): [ ]
val = -1.#INF


S2 (2 : 2): [ 0.1700869138378981 0.1700869138378981 ]
------------------------------ Fine assegna1_vs_indx_d

134: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (2 : 2): [ 0.1700869138378981 0.1700869138378981 ]
ind (0 : 2): [ ]
val = 0


S2 (2 : 2): [ 0.1700869138378981 0.1700869138378981 ]
------------------------------ Fine assegna1_vs_indx_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (2 : 2): [ 3.614836360604185 3.614836360604185 ]
val = 0


ind (0 : 2): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (2 : 2): [ 0.1700869138378981 0.1700869138378981 ]
ind (0 : 2): [ ]
val = -1.#INF


S2 (2 : 2): [ 0.1700869138378981 0.1700869138378981 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (2 : 2): [ 0 0 ]
S2 (2 : 2): [ 0.1700869138378981 0.1700869138378981 ]


S_out (2 : 2): [ 0.1700869138378981 0.1700869138378981 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
S_out (2 : 2): [ 0.1700869138378981 0.1700869138378981 ]
div = 2.000


S_out (2 : 2): [ 0.08504345691894905 0.08504345691894905 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (5270 interne); stringhe deallocate: 0 (4810 interne)

95: which_v_indxne_d	<=>	ris <- which(v != val)
S_out (2 : 2): [ 0.08504345691894905 0.08504345691894905 ]
val = -1.#INF


indok (2 : 2): [ 1 2 ]
------------------------------ Fine which_v_indxne_d

97: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 0 0
 ]
riga = 2
indok (2 : 2): [ 1 2 ]
val = 1


checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
------------------------------ Fine aggiungi_riga_indx_i

104: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 2
incr = 1


tmp_i1 (2 : 6): [ 1 2 ]
------------------------------ Fine seq_i

105: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (2 : 6): [ 1 2 ]
indok (2 : 2): [ 1 2 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (2 : 6): [ 1 2 ]
st = 1
end = 2


indInf (2 : 2): [ 1 2 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (2 : 2): [ 1 2 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 2): [ 1 2 ]
indx = 1


indInf (1 : 2): [ 2 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (1 : 2): [ 2 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 2): [ 2 ]
indx = 1


indInf (0 : 2): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 2): [ ]
------------------------------ Fine setdiff_i

107: copia_v_indx_d	<=>	ris <- v[indx]
S_out (2 : 2): [ 0.08504345691894905 0.08504345691894905 ]
indok (2 : 2): [ 1 2 ]


tmp_d1 (2 : 2): [ 0.08504345691894905 0.08504345691894905 ]
------------------------------ Fine copia_v_indx_d

111: min_v_d	<=>	ris <- min(v)
tmp_d1 (2 : 2): [ 0.08504345691894905 0.08504345691894905 ]


min = 0.08504345691894905
------------------------------ Fine min_v_d

112: assegna1_vs_indx_d	<=>	v[indx] <- val
S_out (2 : 2): [ 0.08504345691894905 0.08504345691894905 ]
indInf (0 : 2): [ ]
val = -1


S_out (2 : 2): [ 0.08504345691894905 0.08504345691894905 ]
------------------------------ Fine assegna1_vs_indx_d

155: InitVett_d
ris (2 : 2): [ 0 0 ]
val = 0


ris (2 : 2): [ 0 0 ]
------------------------------ Fine InitVett_d

156: aggiungi_ms_riga_i	<=>	m[riga,] <- val # riga <= dim(m)[0] + 1
checkIN (2 x 2 : 2 x 2): [
	 1 1
	 0 0
 ]
riga = 2, val = 1


checkIN (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
------------------------------ Fine aggiungi_ms_riga_i

159: somma_vv_d	<=>	ris <- v1 + v2
S_out (2 : 2): [ 0.08504345691894905 0.08504345691894905 ]
ris (2 : 2): [ 0 0 ]


tmp_d1 (2 : 2): [ 0.08504345691894905 0.08504345691894905 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
riga = 2
tmp_d1 (2 : 2): [ 0.08504345691894905 0.08504345691894905 ]


ris (2 x 2 : 2 x 2): [
	 0 0
	 0.08504345691894905 0.08504345691894905
 ]
------------------------------ Fine aggiungi_mv_riga_d

168: somma_m_d	<=>	ris <- sum(m)
ris (2 x 2 : 2 x 2): [
	 0 0
	 0.08504345691894905 0.08504345691894905
 ]


ris: 0.1700869138378981
------------------------------ Fine somma_m_d

173: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
checkIN (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]


aus (2 : 2): [ 2 2 ]
------------------------------ Fine somma_colonne_i

175: which_v_indxne_i	<=>	ris <- which(v != val)
aus (2 : 2): [ 2 2 ]
val = 0


tmp_i1 (2 : 6): [ 1 2 ]
------------------------------ Fine which_v_indxne_i

186: somma_righe_i	<=>	ris <- apply(m, 1, sum)
checkIN (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]


rs (2 : 2): [ 2 2 ]
------------------------------ Fine somma_righe_i

188: ordine_i	<=>	ris <- order(v, decreasing=decr)
rs (2 : 2): [ 2 2 ]
decr = 0


ord_ind (2 : 2): [ 1 2 ]
------------------------------ Fine ordine_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
r = 1
val = 0


I_add (2 : 4): [ 1 2 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
I (0 : 0): [ ]
I_add (2 : 4): [ 1 2 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (2 : 2): [ 1 2 ]


ris (2 : 2): [ 1 2 ]
------------------------------ Fine elimina_doppi_i



ris (2 : 2): [ 1 2 ]
------------------------------ Fine unione1_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
r = 2
val = 0


I_add (2 : 4): [ 1 2 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
ris (2 : 2): [ 1 2 ]
I_add (2 : 4): [ 1 2 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (4 : 4): [ 1 2 1 2 ]


ris (2 : 4): [ 1 2 ]
------------------------------ Fine elimina_doppi_i



ris (2 : 4): [ 1 2 ]
------------------------------ Fine unione1_i

216: assegna1_mindxlt_i	<=>	m1[which(m2<val1)] <- val2
checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
val1 = 0
val2 = 0


checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
------------------------------ Fine assegna1_mindxlt_i

218: assegna1_m_indxgt_i	<=>	m1[which(m2>val1)] <- val2
checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
val1 = 0
val2 = 1


checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
------------------------------ Fine assegna1_m_indxgt_i

220: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]


aus (2 : 2): [ 2 2 ]
------------------------------ Fine somma_colonne_i

222: which_v_indxne_i	<=>	ris <- which(v != val)
aus (2 : 2): [ 2 2 ]
val = 0


tmp_i1 (2 : 6): [ 1 2 ]
------------------------------ Fine which_v_indxne_i

232: somma_righe_i	<=>	ris <- apply(m, 1, sum)
checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]


rs (2 : 2): [ 2 2 ]
------------------------------ Fine somma_righe_i

234: ordine_i	<=>	ris <- order(v, decreasing=decr)
rs (2 : 2): [ 2 2 ]
decr = 0


ord_ind (2 : 2): [ 1 2 ]
------------------------------ Fine ordine_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
r = 1
val = 0


I_add (2 : 4): [ 1 2 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (0 : 4): [ ]
I_add (2 : 4): [ 1 2 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (2 : 2): [ 1 2 ]


ris (2 : 2): [ 1 2 ]
------------------------------ Fine elimina_doppi_i



ris (2 : 2): [ 1 2 ]
------------------------------ Fine unione1_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (2 x 2 : 2 x 2): [
	 1 1
	 1 1
 ]
r = 2
val = 0


I_add (2 : 4): [ 1 2 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (2 : 2): [ 1 2 ]
I_add (2 : 4): [ 1 2 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (4 : 4): [ 1 2 1 2 ]


ris (2 : 4): [ 1 2 ]
------------------------------ Fine elimina_doppi_i



ris (2 : 4): [ 1 2 ]
------------------------------ Fine unione1_i


Stringhe allocate: 5 (5335 interne); stringhe deallocate: 0 (4950 interne)

90: seq_i	<=>	ris <- seq(da, a, incr)
da = 2
a = 2
incr = 1


ris->indices (1 : 1): [ 2 ]
------------------------------ Fine seq_i


Stringhe allocate: 5 (5340 interne); stringhe deallocate: 0 (4965 interne)

143: vettore3s_d		<=>	ris <- c(el1, el2, el3)
el1 = 0.08504345691894905, el2 = 0.08504345691894905, el3 = 0.08504345691894905


prob_mod (3 : 3): [ 0.08504345691894905 0.08504345691894905 0.08504345691894905 ]
------------------------------ Fine vettore3s_d

145: assegna1_v_indxeq_d	<=>	v[which(v==val1)] <- val2
prob_mod (3 : 3): [ 0.08504345691894905 0.08504345691894905 0.08504345691894905 ]
prob_mod (3 : 3): [ 0.08504345691894905 0.08504345691894905 0.08504345691894905 ]
val1 = 0
val2 = 1.#QNAN


prob_mod (3 : 3): [ 0.08504345691894905 0.08504345691894905 0.08504345691894905 ]
------------------------------ Fine assegna1_v_indxeq_d

147: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
prob_mod (3 : 3): [ 0.08504345691894905 0.08504345691894905 0.08504345691894905 ]
complemento = 1


ind (3 : 3): [ 1 2 3 ]
------------------------------ Fine which_v_indxNA_d

153: copia_v_indx_d	<=>	ris <- v[indx]
prob_mod (3 : 3): [ 0.08504345691894905 0.08504345691894905 0.08504345691894905 ]
ind (3 : 3): [ 1 2 3 ]


tmp1_d (3 : 16): [ 0.08504345691894905 0.08504345691894905 0.08504345691894905 ]
------------------------------ Fine copia_v_indx_d

154: min_v_d	<=>	ris <- min(v)
tmp1_d (3 : 16): [ 0.08504345691894905 0.08504345691894905 0.08504345691894905 ]


min = 0.08504345691894905
------------------------------ Fine min_v_d

160: assegna1_v_indxNA_d	<=>	v1[which(is.na(v2))] <- val oppure v1[which(!is.na(v2))] <- val
prob_mod (3 : 3): [ 0.08504345691894905 0.08504345691894905 0.08504345691894905 ]
prob_mod (3 : 3): [ 0.08504345691894905 0.08504345691894905 0.08504345691894905 ]
val = 0
complemento = 0


prob_mod (3 : 3): [ 0.08504345691894905 0.08504345691894905 0.08504345691894905 ]
------------------------------ Fine assegna1_v_indxNA_d

162: somma_v_d	<=>	ris <- sum(v, na.rm=canc_NA)
prob_mod (3 : 3): [ 0.08504345691894905 0.08504345691894905 0.08504345691894905 ]
canc_NA = 0



ris: 0.2551303707568471
------------------------------ Fine somma_v_d

162: dividi1_vs_d	<=>	v <- v / div
prob_mod (3 : 3): [ 0.08504345691894905 0.08504345691894905 0.08504345691894905 ]
div = 0.255


prob_mod (3 : 3): [ 0.3333333333333333 0.3333333333333333 0.3333333333333333 ]
------------------------------ Fine dividi1_vs_d

164: vettore3s_i		<=>	ris <- c(el1, el2, el3)
el1 = 1, el2 = 2, el3 = 3


tmp1_i (3 : 3): [ 1 2 3 ]
------------------------------ Fine vettore3s_i


*** sampleB_p ***

*** sample_p ***
tmp1_i (3 : 3): [ 1 2 3 ]
k = 1, replace = 0
prob_mod (3 : 3): [ 0.3333333333333333 0.3333333333333333 0.3333333333333333 ]


ris (1 : 1): [ 3 ]
*****************************************


Stringhe allocate: 5 (5340 interne); stringhe deallocate: 0 (4965 interne)


*** assign_nodes ***
35: copia_v_i	<=>	ris[st:end] <- v[st:end]
h (2 : 5): [ 1 5 ]
st = 1
end = 2


or_h (2 : 2): [ 1 5 ]
------------------------------ Fine copia_v_i

37: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 2
incr = 1


aus_h (2 : 2): [ 1 2 ]
------------------------------ Fine seq_i

43: InitVett_i
index (2 : 2): [ 79851640 25390 ]
val = 0


index (2 : 2): [ 0 0 ]
------------------------------ Fine InitVett_i

45: somma_righe_i	<=>	ris <- apply(m, 1, sum)
ris (2 x 2 : 2 x 2): [
	 0 1
	 0 0
 ]


M_in (2 : 2): [ 1 0 ]
------------------------------ Fine somma_righe_i

47: ordine_i	<=>	ris <- order(v, decreasing=decr)
M_in (2 : 2): [ 1 0 ]
decr = 1


Ord (2 : 2): [ 1 2 ]
------------------------------ Fine ordine_i

52: riga_d	<=>	ris <- m[r,]
ris (2 x 2 : 2 x 2): [
	 0 0
	 0.08504345691894905 0.08504345691894905
 ]
r = 1

p (2 : 2): [ 0 0 ]
------------------------------ Fine riga_d

54: which_v_indxle_d	<=>	ris <- which(v<=val)
p (2 : 2): [ 0 0 ]
val = 0


tmp_i (2 : 2): [ 1 2 ]
------------------------------ Fine which_v_indxle_d

57: min_v_d	<=>	ris <- min(v)
p (2 : 2): [ 0 0 ]


min = 0
------------------------------ Fine min_v_d

58: somma1_vs_d	<=>	v <- v + s
p (2 : 2): [ 0 0 ]
s = 0.25


p (2 : 2): [ 0.25 0.25 ]
------------------------------ Fine somma1_vs_d

61: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 1 1 1 0 ]
h (2 : 5): [ 1 5 ]


Sin_h (2 : 2): [ 0 0 ]
------------------------------ Fine assegna_v_indxNA_i

66: which_v_indxgt_i	<=>	ris <- which(v > val)
Sin_h (2 : 2): [ 0 0 ]
val = 4


ind (0 : 2): [ ]
------------------------------ Fine which_v_indxgt_i

72: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
p (2 : 2): [ 0.25 0.25 ]
aus_h (2 : 2): [ 1 2 ]


tmp_d (2 : 2): [ 0.25 0.25 ]
------------------------------ Fine assegna_v_indxNA_d

73: somma_v_d	<=>	ris <- sum(v, na.rm=canc_NA)
tmp_d (2 : 2): [ 0.25 0.25 ]
canc_NA = 0



ris: 0.5
------------------------------ Fine somma_v_d

74: dividi_vs_d	ris <- v / div
tmp_d (2 : 2): [ 0.25 0.25 ]
div = 0.500


p (2 : 2): [ 0.5 0.5 ]
------------------------------ Fine dividi_vs_d


*** sampleB_p ***

*** sample_p ***
h (2 : 5): [ 1 5 ]
k = 1, replace = 0
p (2 : 2): [ 0.5 0.5 ]


ris (1 : 1): [ 5 ]
*****************************************


Stringhe allocate: 5 (5395 interne); stringhe deallocate: 0 (4965 interne)

81: setdiff1_i	<=>	v1 <- setdiff(v1, v2)
h (2 : 5): [ 1 5 ]
ris (1 : 1): [ 5 ]
2048: esiste_v_i	<=>	elem %IN% v
elem = 5
h (2 : 5): [ 1 5 ]


indx = 2
------------------------------ Fine esiste_v_i

2050: elimina1_indx_i	<=>	v <- v[-indx]
h (2 : 5): [ 1 5 ]
indx = 2


h (1 : 5): [ 1 ]
------------------------------ Fine elimina1_indx_i



h (1 : 5): [ 1 ]
------------------------------ Fine setdiff1_i

83: which_vv_eq_i	<=>	ris <- which(v1 == v2)
or_h (2 : 2): [ 1 5 ]
ris (1 : 1): [ 5 ]
2017: esiste_v_i	<=>	elem %IN% v
elem = 5
or_h (2 : 2): [ 1 5 ]


indx = 2
------------------------------ Fine esiste_v_i



tmp_i (1 : 2): [ 5 ]
------------------------------ Fine which_vv_eq_i

84: setdiff1_i	<=>	v1 <- setdiff(v1, v2)
aus_h (2 : 2): [ 1 2 ]
tmp_i (1 : 2): [ 5 ]
2048: esiste_v_i	<=>	elem %IN% v
elem = 5
aus_h (2 : 2): [ 1 2 ]


indx = 0
------------------------------ Fine esiste_v_i



aus_h (2 : 2): [ 1 2 ]
------------------------------ Fine setdiff1_i

52: riga_d	<=>	ris <- m[r,]
ris (2 x 2 : 2 x 2): [
	 0 0
	 0.08504345691894905 0.08504345691894905
 ]
r = 2

p (2 : 2): [ 0.08504345691894905 0.08504345691894905 ]
------------------------------ Fine riga_d

54: which_v_indxle_d	<=>	ris <- which(v<=val)
p (2 : 2): [ 0.08504345691894905 0.08504345691894905 ]
val = 0


tmp_i (0 : 2): [ ]
------------------------------ Fine which_v_indxle_d

61: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 1 1 1 0 ]
h (1 : 5): [ 1 ]


Sin_h (1 : 2): [ 0 ]
------------------------------ Fine assegna_v_indxNA_i

66: which_v_indxgt_i	<=>	ris <- which(v > val)
Sin_h (1 : 2): [ 0 ]
val = 5


ind (0 : 2): [ ]
------------------------------ Fine which_v_indxgt_i

72: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
p (2 : 2): [ 0.08504345691894905 0.08504345691894905 ]
aus_h (2 : 2): [ 1 2 ]


tmp_d (2 : 2): [ 0.08504345691894905 0.08504345691894905 ]
------------------------------ Fine assegna_v_indxNA_d

73: somma_v_d	<=>	ris <- sum(v, na.rm=canc_NA)
tmp_d (2 : 2): [ 0.08504345691894905 0.08504345691894905 ]
canc_NA = 0



ris: 0.1700869138378981
------------------------------ Fine somma_v_d

74: dividi_vs_d	ris <- v / div
tmp_d (2 : 2): [ 0.08504345691894905 0.08504345691894905 ]
div = 0.170


p (2 : 2): [ 0.5 0.5 ]
------------------------------ Fine dividi_vs_d


*** sampleB_p ***
25: rep_v_i	<=>	ris <- rep(v, rip)
h (1 : 5): [ 1 ]
rip = 1


ris (1 : 1): [ 1 ]
------------------------------ Fine rep_v_i

81: setdiff1_i	<=>	v1 <- setdiff(v1, v2)
h (1 : 5): [ 1 ]
ris (1 : 1): [ 1 ]
2048: esiste_v_i	<=>	elem %IN% v
elem = 1
h (1 : 5): [ 1 ]


indx = 1
------------------------------ Fine esiste_v_i

2050: elimina1_indx_i	<=>	v <- v[-indx]
h (1 : 5): [ 1 ]
indx = 1


h (0 : 5): [ ]
------------------------------ Fine elimina1_indx_i



h (0 : 5): [ ]
------------------------------ Fine setdiff1_i

83: which_vv_eq_i	<=>	ris <- which(v1 == v2)
or_h (2 : 2): [ 1 5 ]
ris (1 : 1): [ 1 ]
2017: esiste_v_i	<=>	elem %IN% v
elem = 1
or_h (2 : 2): [ 1 5 ]


indx = 1
------------------------------ Fine esiste_v_i



tmp_i (1 : 2): [ 1 ]
------------------------------ Fine which_vv_eq_i

84: setdiff1_i	<=>	v1 <- setdiff(v1, v2)
aus_h (2 : 2): [ 1 2 ]
tmp_i (1 : 2): [ 1 ]
2048: esiste_v_i	<=>	elem %IN% v
elem = 1
aus_h (2 : 2): [ 1 2 ]


indx = 1
------------------------------ Fine esiste_v_i

2050: elimina1_indx_i	<=>	v <- v[-indx]
aus_h (2 : 2): [ 1 2 ]
indx = 1


aus_h (1 : 2): [ 2 ]
------------------------------ Fine elimina1_indx_i



aus_h (1 : 2): [ 2 ]
------------------------------ Fine setdiff1_i

101: which_m_rowindxeq_i	<=>	ris <- which(m[r,] == val)
ris (2 x 2 : 2 x 2): [
	 0 1
	 0 0
 ]
riga = 1
val = 1


ind (1 : 8): [ 2 ]
------------------------------ Fine which_m_rowindxeq_i

103: copia_v_indx_i	<=>	ris <- v[indx]
index (2 : 2): [ 5 1 ]
ind (1 : 8): [ 2 ]


co (1 : 1): [ 1 ]
------------------------------ Fine copia_v_indx_i

105: assegna1_m_vv_i	<=>	m[vr, vc] <- val
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 1 0
	 0 0 0 0 0
 ]
ri (1 : 1): [ 5 ]
co (1 : 1): [ 1 ]
val = 1


Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 1 0
	 1 0 0 0 0
 ]
------------------------------ Fine assegna1_m_vv_i

107: esiste_v_i	<=>	elem %IN% v
elem = 1
ris->indices (1 : 1): [ 2 ]


indx = 0
------------------------------ Fine esiste_v_i

101: which_m_rowindxeq_i	<=>	ris <- which(m[r,] == val)
ris (2 x 2 : 2 x 2): [
	 0 1
	 0 0
 ]
riga = 2
val = 1


ind (0 : 8): [ ]
------------------------------ Fine which_m_rowindxeq_i

103: copia_v_indx_i	<=>	ris <- v[indx]
index (2 : 2): [ 5 1 ]
ind (0 : 8): [ ]


co (0 : 1): [ ]
------------------------------ Fine copia_v_indx_i

105: assegna1_m_vv_i	<=>	m[vr, vc] <- val
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 1 0
	 1 0 0 0 0
 ]
ri (1 : 1): [ 1 ]
co (0 : 1): [ ]
val = 1


Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 1 0
	 1 0 0 0 0
 ]
------------------------------ Fine assegna1_m_vv_i

107: esiste_v_i	<=>	elem %IN% v
elem = 2
ris->indices (1 : 1): [ 2 ]


indx = 1
------------------------------ Fine esiste_v_i

109: accoda1_vv_i	<=>	v1 <- c(v1, v2)
ris (0 : 1): [ ]
ri (1 : 1): [ 1 ]


ris (1 : 1): [ 1 ]
------------------------------ Fine accoda_vv_i


Stringhe allocate: 5 (5405 interne); stringhe deallocate: 0 (5030 interne)

332: accoda1_vv_i	<=>	v1 <- c(v1, v2)
h_new (2 : 2): [ 3 4 ]
ris (1 : 1): [ 1 ]
ATTENZIONE (accoda_vv_i, linea connectivity_modular.c # 332): ingrandito il vettore da 2 a 3!


h_new (3 : 6): [ 3 4 1 ]
------------------------------ Fine accoda_vv_i

334: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 1 0
	 1 0 0 0 0
 ]


Sout (5 : 5): [ 1 1 1 1 0 ]
------------------------------ Fine somma_colonne_i

336: max_v_i		<=>	ris <- max(v)
Sout (5 : 5): [ 1 1 1 1 0 ]


max = 1
------------------------------ Fine max_v_i

338: seq_i	<=>	ris <- seq(da, a, incr)
da = 0
a = 2
incr = 1


tmp2_i (3 : 3): [ 0 1 2 ]
------------------------------ Fine seq_i


*** hist1 ***
Sout (5 : 5): [ 1 1 1 1 0 ]
tmp2_i (3 : 3): [ 0 1 2 ]
right = 0
include_border = 1
naok = 0
29: InitVett_i
tmp1_i (2 : 3): [ 1 2 ]
val = 0


tmp1_i (2 : 3): [ 0 0 ]
------------------------------ Fine InitVett_i



tmp1_i (2 : 3): [ 1 4 ]

Stringhe allocate: 5 (5411 interne); stringhe deallocate: 0 (5036 interne)

340: promuovi_i	(implicita)
tmp1_i (2 : 3): [ 1 4 ]
ATTENZIONE (promuovi_i, linea connectivity_modular.c # 340): il vettore e` stato promosso da intero a double: i calcoli saranno rallentati!

tmp1_d (2 : 16): [ 1 4 ]
------------------------------ Fine promuovi_i

341: assegna1_v_segmv_d	<=>	v1[st:end] <- v2
Freq_out (7 : 7): [ 2 3 0 0 0 0 0 ]
start = 1
end = 2
tmp1_d (2 : 16): [ 1 4 ]


Freq_out (7 : 7): [ 1 4 0 0 0 0 0 ]
------------------------------ Fine assegna1_v_segmv_d

343: somma_righe_i	<=>	ris <- apply(m, 1, sum)
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 1 0
	 1 0 0 0 0
 ]


Sin (5 : 5): [ 0 1 1 1 1 ]
------------------------------ Fine somma_righe_i

345: max_v_i		<=>	ris <- max(v)
Sin (5 : 5): [ 0 1 1 1 1 ]


max = 1
------------------------------ Fine max_v_i

347: seq_i	<=>	ris <- seq(da, a, incr)
da = 0
a = 2
incr = 1


tmp2_i (3 : 3): [ 0 1 2 ]
------------------------------ Fine seq_i


*** hist1 ***
Sin (5 : 5): [ 0 1 1 1 1 ]
tmp2_i (3 : 3): [ 0 1 2 ]
right = 0
include_border = 1
naok = 0
29: InitVett_i
tmp1_i (2 : 3): [ 1 4 ]
val = 0


tmp1_i (2 : 3): [ 0 0 ]
------------------------------ Fine InitVett_i



tmp1_i (2 : 3): [ 1 4 ]

Stringhe allocate: 5 (5412 interne); stringhe deallocate: 0 (5037 interne)

349: promuovi_i	(implicita)
tmp1_i (2 : 3): [ 1 4 ]
ATTENZIONE (promuovi_i, linea connectivity_modular.c # 349): il vettore e` stato promosso da intero a double: i calcoli saranno rallentati!

tmp1_d (2 : 16): [ 1 4 ]
------------------------------ Fine promuovi_i

350: assegna1_v_segmv_d	<=>	v1[st:end] <- v2
Freq_in (7 : 7): [ 2 3 0 0 0 0 0 ]
start = 1
end = 2
tmp1_d (2 : 16): [ 1 4 ]


Freq_in (7 : 7): [ 1 4 0 0 0 0 0 ]
------------------------------ Fine assegna1_v_segmv_d

362: copia_v_i	<=>	ris[st:end] <- v[st:end]
h_new (3 : 6): [ 3 4 1 ]
st = 1
end = 3


h (3 : 5): [ 3 4 1 ]
------------------------------ Fine copia_v_i

368: copia_v_indx_i	<=>	ris <- v[indx]
Sin (5 : 5): [ 0 1 1 1 1 ]
h (3 : 5): [ 3 4 1 ]


tmp1_i (3 : 3): [ 1 1 0 ]
------------------------------ Fine copia_v_indx_i

369: which_v_indxne_i	<=>	ris <- which(v != val)
tmp1_i (3 : 3): [ 1 1 0 ]
val = 5


tmp2_i (3 : 3): [ 1 2 3 ]
------------------------------ Fine which_v_indxne_i

370: copia_v_indx_i	<=>	ris <- v[indx]
h (3 : 5): [ 3 4 1 ]
tmp2_i (3 : 3): [ 1 2 3 ]


h (3 : 5): [ 3 4 1 ]
------------------------------ Fine copia_v_indx_i

110: somma_righe_i	<=>	ris <- apply(m, 1, sum)
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 1 0
	 1 0 0 0 0
 ]


Sin (5 : 5): [ 0 1 1 1 1 ]
------------------------------ Fine somma_righe_i

112: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 1 0
	 1 0 0 0 0
 ]


Sout (5 : 5): [ 1 1 1 1 0 ]
------------------------------ Fine somma_colonne_i


*** cluster_coeff ***
19: trasponi_i	<=>	ris <- t(m)
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 1 0
	 1 0 0 0 0
 ]


tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 1
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 1 0
	 0 0 0 0 0
 ]
------------------------------ Fine trasponi_i

20: somma1_m_i	<=>	m1 <- m1 + m2
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 1
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 1 0
	 0 0 0 0 0
 ]
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 1 0
	 1 0 0 0 0
 ]


tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 1
	 0 0 2 0 0
	 0 2 0 0 0
	 0 0 0 2 0
	 1 0 0 0 0
 ]
------------------------------ Fine somma1_m_i

22: which_m_indxne_i	<=>	ris <- which(m!=val)
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 1
	 0 0 2 0 0
	 0 2 0 0 0
	 0 0 0 2 0
	 1 0 0 0 0
 ]
val = 0


ind (5 : 25): [ 5 8 12 19 21 ]
------------------------------ Fine which_m_indxne_i

24: assegna1_ms_indx_i	<=>	m[indx] = val
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 1
	 0 0 2 0 0
	 0 2 0 0 0
	 0 0 0 2 0
	 1 0 0 0 0
 ]
ind (5 : 25): [ 5 8 12 19 21 ]
val = 1


tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 1
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 1 0
	 1 0 0 0 0
 ]
------------------------------ Fine assegna1_ms_indx_i

26: assegna1_s_diag_i	<=>	diag_i(m) <- s
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 1
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 1 0
	 1 0 0 0 0
 ]
val = 0


tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 1
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 0 0
	 1 0 0 0 0
 ]
------------------------------ Fine assegna1_s_diag_i

31: InitVett_d
ris (5 : 5): [ 0 0 0 0 0 ]
val = 0


ris (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

35: somma_riga_i	<=>	ris <- sum(m[riga, ])
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 1
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 0 0
	 1 0 0 0 0
 ]
riga = 1


ris: 1
------------------------------ Fine somma_riga_i

37: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 1
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 0 0
	 1 0 0 0 0
 ]
r = 1
val = 0


neighbours (1 : 25): [ 5 ]
------------------------------ Fine which_m_rowindxne_i

35: somma_riga_i	<=>	ris <- sum(m[riga, ])
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 1
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 0 0
	 1 0 0 0 0
 ]
riga = 2


ris: 1
------------------------------ Fine somma_riga_i

37: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 1
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 0 0
	 1 0 0 0 0
 ]
r = 2
val = 0


neighbours (1 : 25): [ 3 ]
------------------------------ Fine which_m_rowindxne_i

35: somma_riga_i	<=>	ris <- sum(m[riga, ])
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 1
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 0 0
	 1 0 0 0 0
 ]
riga = 3


ris: 1
------------------------------ Fine somma_riga_i

37: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 1
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 0 0
	 1 0 0 0 0
 ]
r = 3
val = 0


neighbours (1 : 25): [ 2 ]
------------------------------ Fine which_m_rowindxne_i

35: somma_riga_i	<=>	ris <- sum(m[riga, ])
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 1
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 0 0
	 1 0 0 0 0
 ]
riga = 4


ris: 0
------------------------------ Fine somma_riga_i

37: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 1
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 0 0
	 1 0 0 0 0
 ]
r = 4
val = 0


neighbours (0 : 25): [ ]
------------------------------ Fine which_m_rowindxne_i

35: somma_riga_i	<=>	ris <- sum(m[riga, ])
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 1
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 0 0
	 1 0 0 0 0
 ]
riga = 5


ris: 1
------------------------------ Fine somma_riga_i

37: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 1
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 0 0
	 1 0 0 0 0
 ]
r = 5
val = 0


neighbours (1 : 25): [ 1 ]
------------------------------ Fine which_m_rowindxne_i

69: media_v_d	<=>	ris <- mean(v)
ris (5 : 5): [ 0 0 0 0 0 ]


media = 0.000
------------------------------ Fine media_v_d


Stringhe allocate: 5 (5428 interne); stringhe deallocate: 0 (5053 interne)


*** module1 ***
44: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 3
incr = 1


tmp1_i (3 : 3): [ 1 2 3 ]
------------------------------ Fine seq_i


*** sampleB ***

***sample***
tmp1_i (3 : 3): [ 1 2 3 ]
k = 1, replace = 0


ris (1 : 1): [ 2 ]
*****************************************


Stringhe allocate: 5 (5443 interne); stringhe deallocate: 0 (5053 interne)


Stringhe allocate: 5 (5443 interne); stringhe deallocate: 0 (5053 interne)


*** mod1 ***
18: InitMatr_i
ris (2 x 2 : 2 x 2): [
	 79865336 1936024687
	 1851747943 1056989998
 ]
val = 0


ris (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
------------------------------ Fine InitMatr_i

21: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 1
incr = 1


x (1 : 1): [ 1 ]
------------------------------ Fine seq_i

23: somma_vs_i	<=>	ris <- v + s
x (1 : 1): [ 1 ]
s = 1


tmp1_i (1 : 1): [ 2 ]
------------------------------ Fine somma_vs_i

24: cbind2v_i	<=>	ris <- cbind(v1, v2)
x (1 : 1): [ 1 ]
tmp1_i (1 : 1): [ 2 ]


ind (1 x 2 : 1 x 2): [
	 1 2
 ]
------------------------------ Fine cbind2v_i

26: assegna1_ms_indx2_i	<=>	m[indxm] <- val
ris (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
ind (1 x 2 : 1 x 2): [
	 1 2
 ]
val = 1


ris (2 x 2 : 2 x 2): [
	 0 1
	 0 0
 ]
------------------------------ Fine assegna1_ms_indx2_i

29: vettore2s_i		<=>	ris <- c(el1, el2)
el1 = 1, el2 = -1


tmp1_i (2 : 4): [ 1 -1 ]
------------------------------ Fine vettore2s_i


*** sampleB ***

***sample***
tmp1_i (2 : 4): [ 1 -1 ]
k = 1, replace = 0


ris (1 : 1): [ 1 ]
*****************************************


Stringhe allocate: 5 (5468 interne); stringhe deallocate: 0 (5053 interne)


Stringhe allocate: 5 (5468 interne); stringhe deallocate: 0 (5053 interne)


Stringhe allocate: 5 (5468 interne); stringhe deallocate: 0 (5073 interne)


*** probmod ***
46: InitMatr_i
checkOUT (2 x 3 : 2 x 3): [
	 79854536 0 79035568
	 4 0 0
 ]
val = 0


checkOUT (2 x 3 : 2 x 3): [
	 0 0 0
	 0 0 0
 ]
------------------------------ Fine InitMatr_i

48: InitMatr_i
checkIN (2 x 3 : 2 x 3): [
	 79860544 0 79037536
	 2 0 1
 ]
val = 0


checkIN (2 x 3 : 2 x 3): [
	 0 0 0
	 0 0 0
 ]
------------------------------ Fine InitMatr_i

50: InitMatr_d
ris (2 x 3 : 2 x 3): [
	 4.243991581930545e-314 -3.904857713219209e-316 2.440295161334352e-312
	 8.169317638423135e-315 2.470328229206233e-323 0.6148362159729004
 ]
val = 0


ris (2 x 3 : 2 x 3): [
	 0 0 0
	 0 0 0
 ]
------------------------------ Fine InitMatr_d

52: somma_righe_i	<=>	ris <- apply(m, 1, sum)
ris (2 x 2 : 2 x 2): [
	 0 1
	 0 0
 ]


M_in (2 : 2): [ 1 0 ]
------------------------------ Fine somma_righe_i

54: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
ris (2 x 2 : 2 x 2): [
	 0 1
	 0 0
 ]


M_out (2 : 2): [ 0 1 ]
------------------------------ Fine somma_colonne_i

57: InitMatr_i
memory (2 x 3 : 2 x 3): [
	 79863200 0 79038896
	 2 0 1073741824
 ]
val = -2147483648


memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
------------------------------ Fine InitMatr_i

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 1


tmp_i1 (0 : 6): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 0


tmp_i2 (0 : 6): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 6): [ ]
tmp_i2 (0 : 6): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

119: InitVett_d
S_out (3 : 3): [ -3.945745005058964e-316 -1.060997895482636e-314 -1.060997895482636e-314 ]
val = 0


S_out (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

122: InitVett_i
tmp_i1 (3 : 6): [ 79860472 6 0 ]
val = 1


tmp_i1 (3 : 6): [ 1 1 1 ]
------------------------------ Fine InitVett_i

123: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
checkOUT (2 x 3 : 2 x 3): [
	 0 0 0
	 0 0 0
 ]
riga = 1
tmp_i1 (3 : 6): [ 1 1 1 ]


checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 0 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_i

128: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 1 1 1 1 ]
h (3 : 5): [ 3 4 1 ]


tmp_i1 (3 : 6): [ 1 1 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (3 : 6): [ 1 1 0 ]
s = 1


ind (3 : 3): [ 2 2 1 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (3 : 6): [ 1 1 0 ]
s = 1


tmp_i1 (3 : 3): [ 2 2 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
tmp_i1 (3 : 3): [ 2 2 1 ]


T1 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (3 : 3): [ 2 2 1 ]
s = 1


tmp_i1 (3 : 3): [ 3 3 2 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
tmp_i1 (3 : 3): [ 3 3 2 ]


T2 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (3 : 6): [ 1 1 0 ]
s = 1


tmp_i1 (3 : 3): [ 2 2 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 1 4 0 0 0 0 0 ]
tmp_i1 (3 : 3): [ 2 2 1 ]


old1 (3 : 3): [ 4 4 1 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (3 : 3): [ 2 2 1 ]
s = 1


tmp_i1 (3 : 3): [ 3 3 2 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 1 4 0 0 0 0 0 ]
tmp_i1 (3 : 3): [ 3 3 2 ]


old2 (3 : 3): [ 0 0 4 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (3 : 3): [ 4 4 1 ]
s = -1


new1 (3 : 3): [ 3 3 0 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (3 : 3): [ 0 0 4 ]
s = 1


new2 (3 : 3): [ 1 1 5 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (3 : 6): [ 1 1 0 ]
s = 1


tmp_i1 (3 : 3): [ 2 2 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (3 : 3): [ 2 2 1 ]


toll1 (3 : 3): [ 1 1 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (3 : 3): [ 2 2 1 ]
s = 1


tmp_i1 (3 : 3): [ 3 3 2 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (3 : 3): [ 3 3 2 ]


toll2 (3 : 3): [ 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (3 : 3): [ 4 4 1 ]
T1 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


a (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


a (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (3 : 3): [ 3 3 0 ]
T1 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


b (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


b (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (3 : 3): [ 1 2 3 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
val = 0


S1 (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (3 : 3): [ 0 0 4 ]
T2 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


a (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


a (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (3 : 3): [ 1 1 5 ]
T2 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


b (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


b (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
b (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


tmpm_d (3 x 2 : 3 x 2): [
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (3 x 2 : 3 x 2): [
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
 ]


m (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (3 : 3): [ 1 2 3 ]
------------------------------ Fine which_v_indxNA_d

140: InitVett_d
S2 (3 : 3): [ 2.121995790965272e-314 0 3.00000003509885 ]
val = 0


S2 (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
val = 0


ind (0 : 3): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (3 : 3): [ 0 0 0 ]
ind (0 : 3): [ ]
val = -1.#INF


S2 (3 : 3): [ 0 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (3 : 3): [ 0 0 0 ]
S2 (3 : 3): [ 0 0 0 ]


ris (3 : 3): [ 0 0 0 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
ris (3 : 3): [ 0 0 0 ]
div = 2.000


ris (3 : 3): [ 0 0 0 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (5618 interne); stringhe deallocate: 0 (5158 interne)

131: which_v_indxne_d	<=>	ris <- which(v != val)
ris (3 : 3): [ 0 0 0 ]
val = -1.#INF


indok (3 : 3): [ 1 2 3 ]
------------------------------ Fine which_v_indxne_d

133: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkIN (2 x 3 : 2 x 3): [
	 0 0 0
	 0 0 0
 ]
riga = 1
indok (3 : 3): [ 1 2 3 ]
val = 1


checkIN (2 x 3 : 2 x 3): [
	 1 1 1
	 0 0 0
 ]
------------------------------ Fine aggiungi_riga_indx_i

141: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 3
incr = 1


tmp_i1 (3 : 6): [ 1 2 3 ]
------------------------------ Fine seq_i

142: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (3 : 6): [ 1 2 3 ]
indok (3 : 3): [ 1 2 3 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (3 : 6): [ 1 2 3 ]
st = 1
end = 3


indInf (3 : 3): [ 1 2 3 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (3 : 3): [ 1 2 3 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 3): [ 1 2 3 ]
indx = 1


indInf (2 : 3): [ 2 3 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (2 : 3): [ 2 3 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 3): [ 2 3 ]
indx = 1


indInf (1 : 3): [ 3 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (1 : 3): [ 3 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 3): [ 3 ]
indx = 1


indInf (0 : 3): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 3): [ ]
------------------------------ Fine setdiff_i

144: copia_v_indx_d	<=>	ris <- v[indx]
ris (3 : 3): [ 0 0 0 ]
indok (3 : 3): [ 1 2 3 ]


tmp_d1 (3 : 3): [ 0 0 0 ]
------------------------------ Fine copia_v_indx_d

148: min_v_d	<=>	ris <- min(v)
tmp_d1 (3 : 3): [ 0 0 0 ]


min = 0
------------------------------ Fine min_v_d

149: assegna1_vs_indx_d	<=>	v[indx] <- val
ris (3 : 3): [ 0 0 0 ]
indInf (0 : 3): [ ]
val = -1


ris (3 : 3): [ 0 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

159: somma_vv_d	<=>	ris <- v1 + v2
S_out (3 : 3): [ 0 0 0 ]
ris (3 : 3): [ 0 0 0 ]


tmp_d1 (3 : 3): [ 0 0 0 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (2 x 3 : 2 x 3): [
	 0 0 0
	 0 0 0
 ]
riga = 1
tmp_d1 (3 : 3): [ 0 0 0 ]


ris (2 x 3 : 2 x 3): [
	 0 0 0
	 0 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_d

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 0


tmp_i1 (0 : 6): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 1


tmp_i2 (0 : 6): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 6): [ ]
tmp_i2 (0 : 6): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

92: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sout (5 : 5): [ 1 1 1 1 0 ]
h (3 : 5): [ 3 4 1 ]


tmp_i1 (3 : 6): [ 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (3 : 6): [ 1 1 1 ]
s = 1


ind (3 : 3): [ 2 2 2 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (3 : 6): [ 1 1 1 ]
s = 1


tmp_i1 (3 : 3): [ 2 2 2 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (3 : 3): [ 2 2 2 ]


T1 (3 : 3): [ 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (3 : 3): [ 2 2 2 ]
s = 1


tmp_i1 (3 : 3): [ 3 3 3 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (3 : 3): [ 3 3 3 ]


T2 (3 : 3): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (3 : 6): [ 1 1 1 ]
s = 1


tmp_i1 (3 : 3): [ 2 2 2 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 1 4 0 0 0 0 0 ]
tmp_i1 (3 : 3): [ 2 2 2 ]


old1 (3 : 3): [ 4 4 4 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (3 : 3): [ 2 2 2 ]
s = 1


tmp_i1 (3 : 3): [ 3 3 3 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 1 4 0 0 0 0 0 ]
tmp_i1 (3 : 3): [ 3 3 3 ]


old2 (3 : 3): [ 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (3 : 3): [ 4 4 4 ]
s = -1


new1 (3 : 3): [ 3 3 3 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (3 : 3): [ 0 0 0 ]
s = 1


new2 (3 : 3): [ 1 1 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (3 : 6): [ 1 1 1 ]
s = 1


tmp_i1 (3 : 3): [ 2 2 2 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (3 : 3): [ 2 2 2 ]


toll1 (3 : 3): [ 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (3 : 3): [ 2 2 2 ]
s = 1


tmp_i1 (3 : 3): [ 3 3 3 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (3 : 3): [ 3 3 3 ]


toll2 (3 : 3): [ 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (3 : 3): [ 4 4 4 ]
T1 (3 : 3): [ 3.614836360604185 3.614836360604185 3.614836360604185 ]


a (3 : 3): [ 0.3851636393958149 0.3851636393958149 0.3851636393958149 ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (3 : 3): [ 0.3851636393958149 0.3851636393958149 0.3851636393958149 ]


a (3 : 3): [ 0.3851636393958149 0.3851636393958149 0.3851636393958149 ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (3 : 3): [ 3 3 3 ]
T1 (3 : 3): [ 3.614836360604185 3.614836360604185 3.614836360604185 ]


b (3 : 3): [ -0.6148363606041851 -0.6148363606041851 -0.6148363606041851 ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (3 : 3): [ -0.6148363606041851 -0.6148363606041851 -0.6148363606041851 ]


b (3 : 3): [ 0.6148363606041851 0.6148363606041851 0.6148363606041851 ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (3 : 3): [ 3.614836360604185 3.614836360604185 3.614836360604185 ]
complemento = 0


ind (0 : 3): [ ]
------------------------------ Fine which_v_indxNA_d

68: assegna1_vs_indx_d	<=>	v[indx] <- val
a (3 : 3): [ 0.3851636393958149 0.3851636393958149 0.3851636393958149 ]
ind (0 : 3): [ ]
val = 0


a (3 : 3): [ 0.3851636393958149 0.3851636393958149 0.3851636393958149 ]
------------------------------ Fine assegna1_vs_indx_d

70: assegna1_vs_indx_d	<=>	v[indx] <- val
b (3 : 3): [ 0.6148363606041851 0.6148363606041851 0.6148363606041851 ]
ind (0 : 3): [ ]
val = 0


b (3 : 3): [ 0.6148363606041851 0.6148363606041851 0.6148363606041851 ]
------------------------------ Fine assegna1_vs_indx_d

78: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (3 : 3): [ 0.3851636393958149 0.3851636393958149 0.3851636393958149 ]
b (3 : 3): [ 0.6148363606041851 0.6148363606041851 0.6148363606041851 ]


tmpm_d (3 x 2 : 3 x 2): [
	 0.3851636393958149 0.6148363606041851
	 0.3851636393958149 0.6148363606041851
	 0.3851636393958149 0.6148363606041851
 ]
------------------------------ Fine cbind2v_d

79: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (3 x 2 : 3 x 2): [
	 0.3851636393958149 0.6148363606041851
	 0.3851636393958149 0.6148363606041851
	 0.3851636393958149 0.6148363606041851
 ]


m (3 : 3): [ 0.6148363606041851 0.6148363606041851 0.6148363606041851 ]
------------------------------ Fine max_righe_d

81: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (3 : 3): [ 0.3851636393958149 0.3851636393958149 0.3851636393958149 ]
b (3 : 3): [ 0.6148363606041851 0.6148363606041851 0.6148363606041851 ]
m (3 : 3): [ 0.6148363606041851 0.6148363606041851 0.6148363606041851 ]
T1 (3 : 3): [ 3.614836360604185 3.614836360604185 3.614836360604185 ]


S1 (3 : 3): [ -0.1700869138378981 -0.1700869138378981 -0.1700869138378981 ]
------------------------------ Fine f_aux_d

83: diff_vv_d	<=>	ris <- v1 - v2
a (3 : 3): [ 0.3851636393958149 0.3851636393958149 0.3851636393958149 ]
toll1 (3 : 3): [ 1 1 1 ]


tmp_d1 (3 : 3): [ -0.6148363606041851 -0.6148363606041851 -0.6148363606041851 ]
------------------------------ Fine diff_vv_d

84: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (3 : 3): [ -0.6148363606041851 -0.6148363606041851 -0.6148363606041851 ]
val = 0

ind1 (3 : 3): [ 1 2 3 ]
------------------------------ Fine which_v_indxlt_d

86: diff_vv_d	<=>	ris <- v1 - v2
b (3 : 3): [ 0.6148363606041851 0.6148363606041851 0.6148363606041851 ]
toll1 (3 : 3): [ 1 1 1 ]


tmp_d1 (3 : 3): [ -0.3851636393958149 -0.3851636393958149 -0.3851636393958149 ]
------------------------------ Fine diff_vv_d

87: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (3 : 3): [ -0.3851636393958149 -0.3851636393958149 -0.3851636393958149 ]
val = 0


ind2 (0 : 3): [ ]
------------------------------ Fine which_v_indxgt_d

89: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (3 : 3): [ 1 2 3 ]
ind2 (0 : 3): [ ]
2459: esiste_v_i	<=>	elem %IN% v
elem = 1
ind2 (0 : 3): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 1
tmp_i1 (0 : 3): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 2
ind2 (0 : 3): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 2
tmp_i1 (0 : 3): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 3
ind2 (0 : 3): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 3
tmp_i1 (0 : 3): [ ]


indx = 0
------------------------------ Fine esiste_v_i



tmp_i1 (0 : 3): [ ]
------------------------------ Fine interseca_i

91: assegna1_vs_indx_d	<=>	v[indx] <- val
S1 (3 : 3): [ -0.1700869138378981 -0.1700869138378981 -0.1700869138378981 ]
tmp_i1 (0 : 3): [ ]
val = -1.#INF


S1 (3 : 3): [ -0.1700869138378981 -0.1700869138378981 -0.1700869138378981 ]
------------------------------ Fine assegna1_vs_indx_d

93: assegna1_vs_indx_d	<=>	v[indx] <- val
S1 (3 : 3): [ -0.1700869138378981 -0.1700869138378981 -0.1700869138378981 ]
ind (0 : 3): [ ]
val = 0


S1 (3 : 3): [ -0.1700869138378981 -0.1700869138378981 -0.1700869138378981 ]
------------------------------ Fine assegna1_vs_indx_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (3 : 3): [ 0 0 0 ]
T2 (3 : 3): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]


a (3 : 3): [ -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (3 : 3): [ -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 ]


a (3 : 3): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (3 : 3): [ 1 1 1 ]
T2 (3 : 3): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]


b (3 : 3): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (3 : 3): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]


b (3 : 3): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (3 : 3): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
b (3 : 3): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]


tmpm_d (3 x 2 : 3 x 2): [
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (3 x 2 : 3 x 2): [
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
 ]


m (3 : 3): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (3 : 3): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
complemento = 0


ind (0 : 3): [ ]
------------------------------ Fine which_v_indxNA_d

115: assegna1_vs_indx_d	<=>	v[indx] <- val
a (3 : 3): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
ind (0 : 3): [ ]
val = 0


a (3 : 3): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
------------------------------ Fine assegna1_vs_indx_d

117: assegna1_vs_indx_d	<=>	v[indx] <- val
b (3 : 3): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]
ind (0 : 3): [ ]
val = 0


b (3 : 3): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine assegna1_vs_indx_d

119: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (3 : 3): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
b (3 : 3): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]


tmpm_d (3 x 2 : 3 x 2): [
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
 ]
------------------------------ Fine cbind2v_d

120: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (3 x 2 : 3 x 2): [
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
 ]


m (3 : 3): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
------------------------------ Fine max_righe_d

122: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (3 : 3): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
b (3 : 3): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]
m (3 : 3): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
T2 (3 : 3): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]


S2 (3 : 3): [ 1 1 1 ]
------------------------------ Fine f_aux_d

124: diff_vv_d	<=>	ris <- v1 - v2
a (3 : 3): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
toll2 (3 : 3): [ 1 1 1 ]


tmp_d1 (3 : 3): [ -0.2132755425131789 -0.2132755425131789 -0.2132755425131789 ]
------------------------------ Fine diff_vv_d

125: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (3 : 3): [ -0.2132755425131789 -0.2132755425131789 -0.2132755425131789 ]
val = 0

ind1 (3 : 3): [ 1 2 3 ]
------------------------------ Fine which_v_indxlt_d

127: diff_vv_d	<=>	ris <- v1 - v2
b (3 : 3): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]
toll2 (3 : 3): [ 1 1 1 ]


tmp_d1 (3 : 3): [ -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 ]
------------------------------ Fine diff_vv_d

128: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (3 : 3): [ -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 ]
val = 0


ind2 (0 : 3): [ ]
------------------------------ Fine which_v_indxgt_d

130: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (3 : 3): [ 1 2 3 ]
ind2 (0 : 3): [ ]
2459: esiste_v_i	<=>	elem %IN% v
elem = 1
ind2 (0 : 3): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 1
tmp_i1 (0 : 3): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 2
ind2 (0 : 3): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 2
tmp_i1 (0 : 3): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 3
ind2 (0 : 3): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 3
tmp_i1 (0 : 3): [ ]


indx = 0
------------------------------ Fine esiste_v_i



tmp_i1 (0 : 3): [ ]
------------------------------ Fine interseca_i

132: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (3 : 3): [ 1 1 1 ]
tmp_i1 (0 : 3): [ ]
val = -1.#INF


S2 (3 : 3): [ 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

134: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (3 : 3): [ 1 1 1 ]
ind (0 : 3): [ ]
val = 0


S2 (3 : 3): [ 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (3 : 3): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
val = 0


ind (0 : 3): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (3 : 3): [ 1 1 1 ]
ind (0 : 3): [ ]
val = -1.#INF


S2 (3 : 3): [ 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (3 : 3): [ -0.1700869138378981 -0.1700869138378981 -0.1700869138378981 ]
S2 (3 : 3): [ 1 1 1 ]


S_out (3 : 3): [ 0.8299130861621019 0.8299130861621019 0.8299130861621019 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
S_out (3 : 3): [ 0.8299130861621019 0.8299130861621019 0.8299130861621019 ]
div = 2.000


S_out (3 : 3): [ 0.414956543081051 0.414956543081051 0.414956543081051 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (5733 interne); stringhe deallocate: 0 (5258 interne)

95: which_v_indxne_d	<=>	ris <- which(v != val)
S_out (3 : 3): [ 0.414956543081051 0.414956543081051 0.414956543081051 ]
val = -1.#INF


indok (3 : 3): [ 1 2 3 ]
------------------------------ Fine which_v_indxne_d

97: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 0 0 0
 ]
riga = 2
indok (3 : 3): [ 1 2 3 ]
val = 1


checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]
------------------------------ Fine aggiungi_riga_indx_i

104: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 3
incr = 1


tmp_i1 (3 : 6): [ 1 2 3 ]
------------------------------ Fine seq_i

105: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (3 : 6): [ 1 2 3 ]
indok (3 : 3): [ 1 2 3 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (3 : 6): [ 1 2 3 ]
st = 1
end = 3


indInf (3 : 3): [ 1 2 3 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (3 : 3): [ 1 2 3 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 3): [ 1 2 3 ]
indx = 1


indInf (2 : 3): [ 2 3 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (2 : 3): [ 2 3 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 3): [ 2 3 ]
indx = 1


indInf (1 : 3): [ 3 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (1 : 3): [ 3 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 3): [ 3 ]
indx = 1


indInf (0 : 3): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 3): [ ]
------------------------------ Fine setdiff_i

107: copia_v_indx_d	<=>	ris <- v[indx]
S_out (3 : 3): [ 0.414956543081051 0.414956543081051 0.414956543081051 ]
indok (3 : 3): [ 1 2 3 ]


tmp_d1 (3 : 3): [ 0.414956543081051 0.414956543081051 0.414956543081051 ]
------------------------------ Fine copia_v_indx_d

111: min_v_d	<=>	ris <- min(v)
tmp_d1 (3 : 3): [ 0.414956543081051 0.414956543081051 0.414956543081051 ]


min = 0.414956543081051
------------------------------ Fine min_v_d

112: assegna1_vs_indx_d	<=>	v[indx] <- val
S_out (3 : 3): [ 0.414956543081051 0.414956543081051 0.414956543081051 ]
indInf (0 : 3): [ ]
val = -1


S_out (3 : 3): [ 0.414956543081051 0.414956543081051 0.414956543081051 ]
------------------------------ Fine assegna1_vs_indx_d

155: InitVett_d
ris (3 : 3): [ 0 0 0 ]
val = 0


ris (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

156: aggiungi_ms_riga_i	<=>	m[riga,] <- val # riga <= dim(m)[0] + 1
checkIN (2 x 3 : 2 x 3): [
	 1 1 1
	 0 0 0
 ]
riga = 2, val = 1


checkIN (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]
------------------------------ Fine aggiungi_ms_riga_i

159: somma_vv_d	<=>	ris <- v1 + v2
S_out (3 : 3): [ 0.414956543081051 0.414956543081051 0.414956543081051 ]
ris (3 : 3): [ 0 0 0 ]


tmp_d1 (3 : 3): [ 0.414956543081051 0.414956543081051 0.414956543081051 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (2 x 3 : 2 x 3): [
	 0 0 0
	 0 0 0
 ]
riga = 2
tmp_d1 (3 : 3): [ 0.414956543081051 0.414956543081051 0.414956543081051 ]


ris (2 x 3 : 2 x 3): [
	 0 0 0
	 0.414956543081051 0.414956543081051 0.414956543081051
 ]
------------------------------ Fine aggiungi_mv_riga_d

168: somma_m_d	<=>	ris <- sum(m)
ris (2 x 3 : 2 x 3): [
	 0 0 0
	 0.414956543081051 0.414956543081051 0.414956543081051
 ]


ris: 1.244869629243153
------------------------------ Fine somma_m_d

173: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
checkIN (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]


aus (3 : 3): [ 2 2 2 ]
------------------------------ Fine somma_colonne_i

175: which_v_indxne_i	<=>	ris <- which(v != val)
aus (3 : 3): [ 2 2 2 ]
val = 0


tmp_i1 (3 : 6): [ 1 2 3 ]
------------------------------ Fine which_v_indxne_i

186: somma_righe_i	<=>	ris <- apply(m, 1, sum)
checkIN (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]


rs (2 : 2): [ 3 3 ]
------------------------------ Fine somma_righe_i

188: ordine_i	<=>	ris <- order(v, decreasing=decr)
rs (2 : 2): [ 3 3 ]
decr = 0


ord_ind (2 : 2): [ 1 2 ]
------------------------------ Fine ordine_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]
r = 1
val = 0


I_add (3 : 6): [ 1 2 3 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
I (0 : 0): [ ]
I_add (3 : 6): [ 1 2 3 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (3 : 3): [ 1 2 3 ]


ris (3 : 3): [ 1 2 3 ]
------------------------------ Fine elimina_doppi_i



ris (3 : 3): [ 1 2 3 ]
------------------------------ Fine unione1_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]
r = 2
val = 0


I_add (3 : 6): [ 1 2 3 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
ris (3 : 3): [ 1 2 3 ]
I_add (3 : 6): [ 1 2 3 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (6 : 6): [ 1 2 3 1 2 3 ]


ris (3 : 6): [ 1 2 3 ]
------------------------------ Fine elimina_doppi_i



ris (3 : 6): [ 1 2 3 ]
------------------------------ Fine unione1_i

216: assegna1_mindxlt_i	<=>	m1[which(m2<val1)] <- val2
checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]
checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]
val1 = 0
val2 = 0


checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]
------------------------------ Fine assegna1_mindxlt_i

218: assegna1_m_indxgt_i	<=>	m1[which(m2>val1)] <- val2
checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]
checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]
val1 = 0
val2 = 1


checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]
------------------------------ Fine assegna1_m_indxgt_i

220: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]


aus (3 : 3): [ 2 2 2 ]
------------------------------ Fine somma_colonne_i

222: which_v_indxne_i	<=>	ris <- which(v != val)
aus (3 : 3): [ 2 2 2 ]
val = 0


tmp_i1 (3 : 6): [ 1 2 3 ]
------------------------------ Fine which_v_indxne_i

232: somma_righe_i	<=>	ris <- apply(m, 1, sum)
checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]


rs (2 : 2): [ 3 3 ]
------------------------------ Fine somma_righe_i

234: ordine_i	<=>	ris <- order(v, decreasing=decr)
rs (2 : 2): [ 3 3 ]
decr = 0


ord_ind (2 : 2): [ 1 2 ]
------------------------------ Fine ordine_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]
r = 1
val = 0


I_add (3 : 6): [ 1 2 3 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (0 : 6): [ ]
I_add (3 : 6): [ 1 2 3 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (3 : 3): [ 1 2 3 ]


ris (3 : 3): [ 1 2 3 ]
------------------------------ Fine elimina_doppi_i



ris (3 : 3): [ 1 2 3 ]
------------------------------ Fine unione1_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]
r = 2
val = 0


I_add (3 : 6): [ 1 2 3 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (3 : 3): [ 1 2 3 ]
I_add (3 : 6): [ 1 2 3 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (6 : 6): [ 1 2 3 1 2 3 ]


ris (3 : 6): [ 1 2 3 ]
------------------------------ Fine elimina_doppi_i



ris (3 : 6): [ 1 2 3 ]
------------------------------ Fine unione1_i


Stringhe allocate: 5 (5798 interne); stringhe deallocate: 0 (5398 interne)


Stringhe allocate: 5 (5803 interne); stringhe deallocate: 0 (5413 interne)


*** module2 ***
44: seq_i	<=>	ris <- seq(da, a, incr)
da = 2
a = 3
incr = 1


tmp1_i (2 : 2): [ 2 3 ]
------------------------------ Fine seq_i


*** sampleB ***

***sample***
tmp1_i (2 : 2): [ 2 3 ]
k = 1, replace = 0


ris (1 : 1): [ 2 ]
*****************************************


Stringhe allocate: 5 (5813 interne); stringhe deallocate: 0 (5413 interne)


Stringhe allocate: 5 (5813 interne); stringhe deallocate: 0 (5413 interne)


*** mod2 ***
17: InitMatr_i
ris (2 x 2 : 2 x 2): [
	 79861400 1918959715
	 778334061 1056989998
 ]
val = 0


ris (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
------------------------------ Fine InitMatr_i


Stringhe allocate: 5 (5818 interne); stringhe deallocate: 0 (5413 interne)


*** probmod ***
46: InitMatr_i
checkOUT (2 x 3 : 2 x 3): [
	 79868768 0 79039024
	 6 0 0
 ]
val = 0


checkOUT (2 x 3 : 2 x 3): [
	 0 0 0
	 0 0 0
 ]
------------------------------ Fine InitMatr_i

48: InitMatr_i
checkIN (2 x 3 : 2 x 3): [
	 79864152 3 1916053212
	 2 -1077557912 -1077557912
 ]
val = 0


checkIN (2 x 3 : 2 x 3): [
	 0 0 0
	 0 0 0
 ]
------------------------------ Fine InitMatr_i

50: InitMatr_d
ris (2 x 3 : 2 x 3): [
	 0 0 0
	 0 0 0.2132754325866699
 ]
val = 0


ris (2 x 3 : 2 x 3): [
	 0 0 0
	 0 0 0
 ]
------------------------------ Fine InitMatr_d

52: somma_righe_i	<=>	ris <- apply(m, 1, sum)
ris (2 x 2 : 2 x 2): [
	 0 0
	 1 0
 ]


M_in (2 : 2): [ 0 1 ]
------------------------------ Fine somma_righe_i

54: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
ris (2 x 2 : 2 x 2): [
	 0 0
	 1 0
 ]


M_out (2 : 2): [ 1 0 ]
------------------------------ Fine somma_colonne_i

57: InitMatr_i
memory (2 x 3 : 2 x 3): [
	 79868968 0 79036736
	 2 0 0
 ]
val = -2147483648


memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
------------------------------ Fine InitMatr_i

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 0


tmp_i1 (0 : 6): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 1


tmp_i2 (0 : 6): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 6): [ ]
tmp_i2 (0 : 6): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

92: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sout (5 : 5): [ 1 1 1 1 0 ]
h (3 : 5): [ 3 4 1 ]


tmp_i1 (3 : 6): [ 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (3 : 6): [ 1 1 1 ]
s = 1


ind (3 : 3): [ 2 2 2 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (3 : 6): [ 1 1 1 ]
s = 1


tmp_i1 (3 : 3): [ 2 2 2 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (3 : 3): [ 2 2 2 ]


T1 (3 : 3): [ 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (3 : 3): [ 2 2 2 ]
s = 1


tmp_i1 (3 : 3): [ 3 3 3 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (3 : 3): [ 3 3 3 ]


T2 (3 : 3): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (3 : 6): [ 1 1 1 ]
s = 1


tmp_i1 (3 : 3): [ 2 2 2 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 1 4 0 0 0 0 0 ]
tmp_i1 (3 : 3): [ 2 2 2 ]


old1 (3 : 3): [ 4 4 4 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (3 : 3): [ 2 2 2 ]
s = 1


tmp_i1 (3 : 3): [ 3 3 3 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 1 4 0 0 0 0 0 ]
tmp_i1 (3 : 3): [ 3 3 3 ]


old2 (3 : 3): [ 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (3 : 3): [ 4 4 4 ]
s = -1


new1 (3 : 3): [ 3 3 3 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (3 : 3): [ 0 0 0 ]
s = 1


new2 (3 : 3): [ 1 1 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (3 : 6): [ 1 1 1 ]
s = 1


tmp_i1 (3 : 3): [ 2 2 2 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (3 : 3): [ 2 2 2 ]


toll1 (3 : 3): [ 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (3 : 3): [ 2 2 2 ]
s = 1


tmp_i1 (3 : 3): [ 3 3 3 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (3 : 3): [ 3 3 3 ]


toll2 (3 : 3): [ 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (3 : 3): [ 4 4 4 ]
T1 (3 : 3): [ 3.614836360604185 3.614836360604185 3.614836360604185 ]


a (3 : 3): [ 0.3851636393958149 0.3851636393958149 0.3851636393958149 ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (3 : 3): [ 0.3851636393958149 0.3851636393958149 0.3851636393958149 ]


a (3 : 3): [ 0.3851636393958149 0.3851636393958149 0.3851636393958149 ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (3 : 3): [ 3 3 3 ]
T1 (3 : 3): [ 3.614836360604185 3.614836360604185 3.614836360604185 ]


b (3 : 3): [ -0.6148363606041851 -0.6148363606041851 -0.6148363606041851 ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (3 : 3): [ -0.6148363606041851 -0.6148363606041851 -0.6148363606041851 ]


b (3 : 3): [ 0.6148363606041851 0.6148363606041851 0.6148363606041851 ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (3 : 3): [ 3.614836360604185 3.614836360604185 3.614836360604185 ]
complemento = 0


ind (0 : 3): [ ]
------------------------------ Fine which_v_indxNA_d

68: assegna1_vs_indx_d	<=>	v[indx] <- val
a (3 : 3): [ 0.3851636393958149 0.3851636393958149 0.3851636393958149 ]
ind (0 : 3): [ ]
val = 0


a (3 : 3): [ 0.3851636393958149 0.3851636393958149 0.3851636393958149 ]
------------------------------ Fine assegna1_vs_indx_d

70: assegna1_vs_indx_d	<=>	v[indx] <- val
b (3 : 3): [ 0.6148363606041851 0.6148363606041851 0.6148363606041851 ]
ind (0 : 3): [ ]
val = 0


b (3 : 3): [ 0.6148363606041851 0.6148363606041851 0.6148363606041851 ]
------------------------------ Fine assegna1_vs_indx_d

78: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (3 : 3): [ 0.3851636393958149 0.3851636393958149 0.3851636393958149 ]
b (3 : 3): [ 0.6148363606041851 0.6148363606041851 0.6148363606041851 ]


tmpm_d (3 x 2 : 3 x 2): [
	 0.3851636393958149 0.6148363606041851
	 0.3851636393958149 0.6148363606041851
	 0.3851636393958149 0.6148363606041851
 ]
------------------------------ Fine cbind2v_d

79: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (3 x 2 : 3 x 2): [
	 0.3851636393958149 0.6148363606041851
	 0.3851636393958149 0.6148363606041851
	 0.3851636393958149 0.6148363606041851
 ]


m (3 : 3): [ 0.6148363606041851 0.6148363606041851 0.6148363606041851 ]
------------------------------ Fine max_righe_d

81: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (3 : 3): [ 0.3851636393958149 0.3851636393958149 0.3851636393958149 ]
b (3 : 3): [ 0.6148363606041851 0.6148363606041851 0.6148363606041851 ]
m (3 : 3): [ 0.6148363606041851 0.6148363606041851 0.6148363606041851 ]
T1 (3 : 3): [ 3.614836360604185 3.614836360604185 3.614836360604185 ]


S1 (3 : 3): [ -0.1700869138378981 -0.1700869138378981 -0.1700869138378981 ]
------------------------------ Fine f_aux_d

83: diff_vv_d	<=>	ris <- v1 - v2
a (3 : 3): [ 0.3851636393958149 0.3851636393958149 0.3851636393958149 ]
toll1 (3 : 3): [ 1 1 1 ]


tmp_d1 (3 : 3): [ -0.6148363606041851 -0.6148363606041851 -0.6148363606041851 ]
------------------------------ Fine diff_vv_d

84: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (3 : 3): [ -0.6148363606041851 -0.6148363606041851 -0.6148363606041851 ]
val = 0

ind1 (3 : 3): [ 1 2 3 ]
------------------------------ Fine which_v_indxlt_d

86: diff_vv_d	<=>	ris <- v1 - v2
b (3 : 3): [ 0.6148363606041851 0.6148363606041851 0.6148363606041851 ]
toll1 (3 : 3): [ 1 1 1 ]


tmp_d1 (3 : 3): [ -0.3851636393958149 -0.3851636393958149 -0.3851636393958149 ]
------------------------------ Fine diff_vv_d

87: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (3 : 3): [ -0.3851636393958149 -0.3851636393958149 -0.3851636393958149 ]
val = 0


ind2 (0 : 3): [ ]
------------------------------ Fine which_v_indxgt_d

89: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (3 : 3): [ 1 2 3 ]
ind2 (0 : 3): [ ]
2459: esiste_v_i	<=>	elem %IN% v
elem = 1
ind2 (0 : 3): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 1
tmp_i1 (0 : 3): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 2
ind2 (0 : 3): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 2
tmp_i1 (0 : 3): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 3
ind2 (0 : 3): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 3
tmp_i1 (0 : 3): [ ]


indx = 0
------------------------------ Fine esiste_v_i



tmp_i1 (0 : 3): [ ]
------------------------------ Fine interseca_i

91: assegna1_vs_indx_d	<=>	v[indx] <- val
S1 (3 : 3): [ -0.1700869138378981 -0.1700869138378981 -0.1700869138378981 ]
tmp_i1 (0 : 3): [ ]
val = -1.#INF


S1 (3 : 3): [ -0.1700869138378981 -0.1700869138378981 -0.1700869138378981 ]
------------------------------ Fine assegna1_vs_indx_d

93: assegna1_vs_indx_d	<=>	v[indx] <- val
S1 (3 : 3): [ -0.1700869138378981 -0.1700869138378981 -0.1700869138378981 ]
ind (0 : 3): [ ]
val = 0


S1 (3 : 3): [ -0.1700869138378981 -0.1700869138378981 -0.1700869138378981 ]
------------------------------ Fine assegna1_vs_indx_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (3 : 3): [ 0 0 0 ]
T2 (3 : 3): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]


a (3 : 3): [ -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (3 : 3): [ -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 ]


a (3 : 3): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (3 : 3): [ 1 1 1 ]
T2 (3 : 3): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]


b (3 : 3): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (3 : 3): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]


b (3 : 3): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (3 : 3): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
b (3 : 3): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]


tmpm_d (3 x 2 : 3 x 2): [
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (3 x 2 : 3 x 2): [
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
 ]


m (3 : 3): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (3 : 3): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
complemento = 0


ind (0 : 3): [ ]
------------------------------ Fine which_v_indxNA_d

115: assegna1_vs_indx_d	<=>	v[indx] <- val
a (3 : 3): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
ind (0 : 3): [ ]
val = 0


a (3 : 3): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
------------------------------ Fine assegna1_vs_indx_d

117: assegna1_vs_indx_d	<=>	v[indx] <- val
b (3 : 3): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]
ind (0 : 3): [ ]
val = 0


b (3 : 3): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine assegna1_vs_indx_d

119: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (3 : 3): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
b (3 : 3): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]


tmpm_d (3 x 2 : 3 x 2): [
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
 ]
------------------------------ Fine cbind2v_d

120: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (3 x 2 : 3 x 2): [
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
 ]


m (3 : 3): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
------------------------------ Fine max_righe_d

122: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (3 : 3): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
b (3 : 3): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]
m (3 : 3): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
T2 (3 : 3): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]


S2 (3 : 3): [ 1 1 1 ]
------------------------------ Fine f_aux_d

124: diff_vv_d	<=>	ris <- v1 - v2
a (3 : 3): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
toll2 (3 : 3): [ 1 1 1 ]


tmp_d1 (3 : 3): [ -0.2132755425131789 -0.2132755425131789 -0.2132755425131789 ]
------------------------------ Fine diff_vv_d

125: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (3 : 3): [ -0.2132755425131789 -0.2132755425131789 -0.2132755425131789 ]
val = 0

ind1 (3 : 3): [ 1 2 3 ]
------------------------------ Fine which_v_indxlt_d

127: diff_vv_d	<=>	ris <- v1 - v2
b (3 : 3): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]
toll2 (3 : 3): [ 1 1 1 ]


tmp_d1 (3 : 3): [ -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 ]
------------------------------ Fine diff_vv_d

128: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (3 : 3): [ -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 ]
val = 0


ind2 (0 : 3): [ ]
------------------------------ Fine which_v_indxgt_d

130: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (3 : 3): [ 1 2 3 ]
ind2 (0 : 3): [ ]
2459: esiste_v_i	<=>	elem %IN% v
elem = 1
ind2 (0 : 3): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 1
tmp_i1 (0 : 3): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 2
ind2 (0 : 3): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 2
tmp_i1 (0 : 3): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 3
ind2 (0 : 3): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 3
tmp_i1 (0 : 3): [ ]


indx = 0
------------------------------ Fine esiste_v_i



tmp_i1 (0 : 3): [ ]
------------------------------ Fine interseca_i

132: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (3 : 3): [ 1 1 1 ]
tmp_i1 (0 : 3): [ ]
val = -1.#INF


S2 (3 : 3): [ 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

134: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (3 : 3): [ 1 1 1 ]
ind (0 : 3): [ ]
val = 0


S2 (3 : 3): [ 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (3 : 3): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
val = 0


ind (0 : 3): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (3 : 3): [ 1 1 1 ]
ind (0 : 3): [ ]
val = -1.#INF


S2 (3 : 3): [ 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (3 : 3): [ -0.1700869138378981 -0.1700869138378981 -0.1700869138378981 ]
S2 (3 : 3): [ 1 1 1 ]


ris (3 : 3): [ 0.8299130861621019 0.8299130861621019 0.8299130861621019 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
ris (3 : 3): [ 0.8299130861621019 0.8299130861621019 0.8299130861621019 ]
div = 2.000


ris (3 : 3): [ 0.414956543081051 0.414956543081051 0.414956543081051 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (5978 interne); stringhe deallocate: 0 (5513 interne)

95: which_v_indxne_d	<=>	ris <- which(v != val)
ris (3 : 3): [ 0.414956543081051 0.414956543081051 0.414956543081051 ]
val = -1.#INF


indok (3 : 3): [ 1 2 3 ]
------------------------------ Fine which_v_indxne_d

97: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkOUT (2 x 3 : 2 x 3): [
	 0 0 0
	 0 0 0
 ]
riga = 1
indok (3 : 3): [ 1 2 3 ]
val = 1


checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 0 0 0
 ]
------------------------------ Fine aggiungi_riga_indx_i

104: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 3
incr = 1


tmp_i1 (3 : 6): [ 1 2 3 ]
------------------------------ Fine seq_i

105: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (3 : 6): [ 1 2 3 ]
indok (3 : 3): [ 1 2 3 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (3 : 6): [ 1 2 3 ]
st = 1
end = 3


indInf (3 : 3): [ 1 2 3 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (3 : 3): [ 1 2 3 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 3): [ 1 2 3 ]
indx = 1


indInf (2 : 3): [ 2 3 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (2 : 3): [ 2 3 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 3): [ 2 3 ]
indx = 1


indInf (1 : 3): [ 3 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (1 : 3): [ 3 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 3): [ 3 ]
indx = 1


indInf (0 : 3): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 3): [ ]
------------------------------ Fine setdiff_i

107: copia_v_indx_d	<=>	ris <- v[indx]
ris (3 : 3): [ 0.414956543081051 0.414956543081051 0.414956543081051 ]
indok (3 : 3): [ 1 2 3 ]


tmp_d1 (3 : 3): [ 0.414956543081051 0.414956543081051 0.414956543081051 ]
------------------------------ Fine copia_v_indx_d

111: min_v_d	<=>	ris <- min(v)
tmp_d1 (3 : 3): [ 0.414956543081051 0.414956543081051 0.414956543081051 ]


min = 0.414956543081051
------------------------------ Fine min_v_d

112: assegna1_vs_indx_d	<=>	v[indx] <- val
ris (3 : 3): [ 0.414956543081051 0.414956543081051 0.414956543081051 ]
indInf (0 : 3): [ ]
val = -1


ris (3 : 3): [ 0.414956543081051 0.414956543081051 0.414956543081051 ]
------------------------------ Fine assegna1_vs_indx_d

155: InitVett_d
S_in (3 : 3): [ -0.1700868628733165 -0.1700869138378981 -0.1700869138378981 ]
val = 0


S_in (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

156: aggiungi_ms_riga_i	<=>	m[riga,] <- val # riga <= dim(m)[0] + 1
checkIN (2 x 3 : 2 x 3): [
	 0 0 0
	 0 0 0
 ]
riga = 1, val = 1


checkIN (2 x 3 : 2 x 3): [
	 1 1 1
	 0 0 0
 ]
------------------------------ Fine aggiungi_ms_riga_i

159: somma_vv_d	<=>	ris <- v1 + v2
ris (3 : 3): [ 0.414956543081051 0.414956543081051 0.414956543081051 ]
S_in (3 : 3): [ 0 0 0 ]


tmp_d1 (3 : 3): [ 0.414956543081051 0.414956543081051 0.414956543081051 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (2 x 3 : 2 x 3): [
	 0 0 0
	 0 0 0
 ]
riga = 1
tmp_d1 (3 : 3): [ 0.414956543081051 0.414956543081051 0.414956543081051 ]


ris (2 x 3 : 2 x 3): [
	 0.414956543081051 0.414956543081051 0.414956543081051
	 0 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_d

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 1


tmp_i1 (0 : 6): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 0


tmp_i2 (0 : 6): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 6): [ ]
tmp_i2 (0 : 6): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

119: InitVett_d
ris (3 : 3): [ 0.414956543081051 0.414956543081051 0.414956543081051 ]
val = 0


ris (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

122: InitVett_i
tmp_i1 (3 : 6): [ 1 2 3 ]
val = 1


tmp_i1 (3 : 6): [ 1 1 1 ]
------------------------------ Fine InitVett_i

123: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 0 0 0
 ]
riga = 2
tmp_i1 (3 : 6): [ 1 1 1 ]


checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]
------------------------------ Fine aggiungi_mv_riga_i

128: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 1 1 1 1 ]
h (3 : 5): [ 3 4 1 ]


tmp_i1 (3 : 6): [ 1 1 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (3 : 6): [ 1 1 0 ]
s = 1


ind (3 : 3): [ 2 2 1 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (3 : 6): [ 1 1 0 ]
s = 1


tmp_i1 (3 : 3): [ 2 2 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
tmp_i1 (3 : 3): [ 2 2 1 ]


T1 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (3 : 3): [ 2 2 1 ]
s = 1


tmp_i1 (3 : 3): [ 3 3 2 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
tmp_i1 (3 : 3): [ 3 3 2 ]


T2 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (3 : 6): [ 1 1 0 ]
s = 1


tmp_i1 (3 : 3): [ 2 2 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 1 4 0 0 0 0 0 ]
tmp_i1 (3 : 3): [ 2 2 1 ]


old1 (3 : 3): [ 4 4 1 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (3 : 3): [ 2 2 1 ]
s = 1


tmp_i1 (3 : 3): [ 3 3 2 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 1 4 0 0 0 0 0 ]
tmp_i1 (3 : 3): [ 3 3 2 ]


old2 (3 : 3): [ 0 0 4 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (3 : 3): [ 4 4 1 ]
s = -1


new1 (3 : 3): [ 3 3 0 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (3 : 3): [ 0 0 4 ]
s = 1


new2 (3 : 3): [ 1 1 5 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (3 : 6): [ 1 1 0 ]
s = 1


tmp_i1 (3 : 3): [ 2 2 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (3 : 3): [ 2 2 1 ]


toll1 (3 : 3): [ 1 1 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (3 : 3): [ 2 2 1 ]
s = 1


tmp_i1 (3 : 3): [ 3 3 2 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (3 : 3): [ 3 3 2 ]


toll2 (3 : 3): [ 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (3 : 3): [ 4 4 1 ]
T1 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


a (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


a (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (3 : 3): [ 3 3 0 ]
T1 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


b (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


b (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (3 : 3): [ 1 2 3 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (3 : 3): [ -0.7867240994427682 -0.7867244574868211 -0.7867244574868211 ]
val = 0


S1 (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (3 : 3): [ 0 0 4 ]
T2 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


a (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


a (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (3 : 3): [ 1 1 5 ]
T2 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


b (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


b (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
b (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


tmpm_d (3 x 2 : 3 x 2): [
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (3 x 2 : 3 x 2): [
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
 ]


m (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (3 : 3): [ 1 2 3 ]
------------------------------ Fine which_v_indxNA_d

140: InitVett_d
S2 (3 : 3): [ -0.7867240994412521 -0.7867244574868211 -0.7867244574868211 ]
val = 0


S2 (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
val = 0


ind (0 : 3): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (3 : 3): [ 0 0 0 ]
ind (0 : 3): [ ]
val = -1.#INF


S2 (3 : 3): [ 0 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (3 : 3): [ 0 0 0 ]
S2 (3 : 3): [ 0 0 0 ]


S_in (3 : 3): [ 0 0 0 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
S_in (3 : 3): [ 0 0 0 ]
div = 2.000


S_in (3 : 3): [ 0 0 0 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (6083 interne); stringhe deallocate: 0 (5598 interne)

131: which_v_indxne_d	<=>	ris <- which(v != val)
S_in (3 : 3): [ 0 0 0 ]
val = -1.#INF


indok (3 : 3): [ 1 2 3 ]
------------------------------ Fine which_v_indxne_d

133: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkIN (2 x 3 : 2 x 3): [
	 1 1 1
	 0 0 0
 ]
riga = 2
indok (3 : 3): [ 1 2 3 ]
val = 1


checkIN (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]
------------------------------ Fine aggiungi_riga_indx_i

141: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 3
incr = 1


tmp_i1 (3 : 6): [ 1 2 3 ]
------------------------------ Fine seq_i

142: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (3 : 6): [ 1 2 3 ]
indok (3 : 3): [ 1 2 3 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (3 : 6): [ 1 2 3 ]
st = 1
end = 3


indInf (3 : 3): [ 1 2 3 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (3 : 3): [ 1 2 3 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 3): [ 1 2 3 ]
indx = 1


indInf (2 : 3): [ 2 3 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (2 : 3): [ 2 3 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 3): [ 2 3 ]
indx = 1


indInf (1 : 3): [ 3 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (1 : 3): [ 3 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 3): [ 3 ]
indx = 1


indInf (0 : 3): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 3): [ ]
------------------------------ Fine setdiff_i

144: copia_v_indx_d	<=>	ris <- v[indx]
S_in (3 : 3): [ 0 0 0 ]
indok (3 : 3): [ 1 2 3 ]


tmp_d1 (3 : 3): [ 0 0 0 ]
------------------------------ Fine copia_v_indx_d

148: min_v_d	<=>	ris <- min(v)
tmp_d1 (3 : 3): [ 0 0 0 ]


min = 0
------------------------------ Fine min_v_d

149: assegna1_vs_indx_d	<=>	v[indx] <- val
S_in (3 : 3): [ 0 0 0 ]
indInf (0 : 3): [ ]
val = -1


S_in (3 : 3): [ 0 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

159: somma_vv_d	<=>	ris <- v1 + v2
ris (3 : 3): [ 0 0 0 ]
S_in (3 : 3): [ 0 0 0 ]


tmp_d1 (3 : 3): [ 0 0 0 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (2 x 3 : 2 x 3): [
	 0.414956543081051 0.414956543081051 0.414956543081051
	 0 0 0
 ]
riga = 2
tmp_d1 (3 : 3): [ 0 0 0 ]


ris (2 x 3 : 2 x 3): [
	 0.414956543081051 0.414956543081051 0.414956543081051
	 0 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_d

168: somma_m_d	<=>	ris <- sum(m)
ris (2 x 3 : 2 x 3): [
	 0.414956543081051 0.414956543081051 0.414956543081051
	 0 0 0
 ]


ris: 1.244869629243153
------------------------------ Fine somma_m_d

173: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
checkIN (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]


aus (3 : 3): [ 2 2 2 ]
------------------------------ Fine somma_colonne_i

175: which_v_indxne_i	<=>	ris <- which(v != val)
aus (3 : 3): [ 2 2 2 ]
val = 0


tmp_i1 (3 : 6): [ 1 2 3 ]
------------------------------ Fine which_v_indxne_i

186: somma_righe_i	<=>	ris <- apply(m, 1, sum)
checkIN (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]


rs (2 : 2): [ 3 3 ]
------------------------------ Fine somma_righe_i

188: ordine_i	<=>	ris <- order(v, decreasing=decr)
rs (2 : 2): [ 3 3 ]
decr = 0


ord_ind (2 : 2): [ 1 2 ]
------------------------------ Fine ordine_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]
r = 1
val = 0


I_add (3 : 6): [ 1 2 3 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
I (0 : 0): [ ]
I_add (3 : 6): [ 1 2 3 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (3 : 3): [ 1 2 3 ]


ris (3 : 3): [ 1 2 3 ]
------------------------------ Fine elimina_doppi_i



ris (3 : 3): [ 1 2 3 ]
------------------------------ Fine unione1_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]
r = 2
val = 0


I_add (3 : 6): [ 1 2 3 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
ris (3 : 3): [ 1 2 3 ]
I_add (3 : 6): [ 1 2 3 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (6 : 6): [ 1 2 3 1 2 3 ]


ris (3 : 6): [ 1 2 3 ]
------------------------------ Fine elimina_doppi_i



ris (3 : 6): [ 1 2 3 ]
------------------------------ Fine unione1_i

216: assegna1_mindxlt_i	<=>	m1[which(m2<val1)] <- val2
checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]
checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]
val1 = 0
val2 = 0


checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]
------------------------------ Fine assegna1_mindxlt_i

218: assegna1_m_indxgt_i	<=>	m1[which(m2>val1)] <- val2
checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]
checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]
val1 = 0
val2 = 1


checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]
------------------------------ Fine assegna1_m_indxgt_i

220: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]


aus (3 : 3): [ 2 2 2 ]
------------------------------ Fine somma_colonne_i

222: which_v_indxne_i	<=>	ris <- which(v != val)
aus (3 : 3): [ 2 2 2 ]
val = 0


tmp_i1 (3 : 6): [ 1 2 3 ]
------------------------------ Fine which_v_indxne_i

232: somma_righe_i	<=>	ris <- apply(m, 1, sum)
checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]


rs (2 : 2): [ 3 3 ]
------------------------------ Fine somma_righe_i

234: ordine_i	<=>	ris <- order(v, decreasing=decr)
rs (2 : 2): [ 3 3 ]
decr = 0


ord_ind (2 : 2): [ 1 2 ]
------------------------------ Fine ordine_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]
r = 1
val = 0


I_add (3 : 6): [ 1 2 3 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (0 : 6): [ ]
I_add (3 : 6): [ 1 2 3 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (3 : 3): [ 1 2 3 ]


ris (3 : 3): [ 1 2 3 ]
------------------------------ Fine elimina_doppi_i



ris (3 : 3): [ 1 2 3 ]
------------------------------ Fine unione1_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]
r = 2
val = 0


I_add (3 : 6): [ 1 2 3 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (3 : 3): [ 1 2 3 ]
I_add (3 : 6): [ 1 2 3 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (6 : 6): [ 1 2 3 1 2 3 ]


ris (3 : 6): [ 1 2 3 ]
------------------------------ Fine elimina_doppi_i



ris (3 : 6): [ 1 2 3 ]
------------------------------ Fine unione1_i


Stringhe allocate: 5 (6148 interne); stringhe deallocate: 0 (5738 interne)


Stringhe allocate: 5 (6153 interne); stringhe deallocate: 0 (5748 interne)


*** module3 ***
51: seq_i	<=>	ris <- seq(da, a, incr)
da = 2
a = 3
incr = 1


tmp1_i (2 : 2): [ 2 3 ]
------------------------------ Fine seq_i


*** sampleB ***

***sample***
tmp1_i (2 : 2): [ 2 3 ]
k = 1, replace = 0


ris (1 : 1): [ 2 ]
*****************************************


Stringhe allocate: 5 (6163 interne); stringhe deallocate: 0 (5748 interne)


Stringhe allocate: 5 (6163 interne); stringhe deallocate: 0 (5748 interne)

54: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 1
incr = 1


tmp1_i (1 : 2): [ 1 ]
------------------------------ Fine seq_i


*** sampleB ***
58: rep_v_i	<=>	ris <- rep(v, rip)
tmp1_i (1 : 2): [ 1 ]
rip = 1


ris (1 : 1): [ 1 ]
------------------------------ Fine rep_v_i


Stringhe allocate: 5 (6168 interne); stringhe deallocate: 0 (5748 interne)


*** mod3 ***
33: InitMatr_i
ris (2 x 2 : 2 x 2): [
	 79862264 1918959715
	 778334061 25390
 ]
val = 0


ris (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
------------------------------ Fine InitMatr_i

34: copia_v_d	<=>	ris[st:end] <- v[st:end]
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
st = 1
end = 7


STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
------------------------------ Fine copia_v_d

35: copia_v_d	<=>	ris[st:end] <- v[st:end]
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
st = 1
end = 7


STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
------------------------------ Fine copia_v_d

39: segmento_v_d	<=>	ris <- v[st:end]
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
start = 2
end = 2


tmp1_d (1 : 1): [ 3.614836360604185 ]
------------------------------ Fine segmento_v_d

40: somma_v_d	<=>	ris <- sum(v, na.rm=canc_NA)
tmp1_d (1 : 1): [ 3.614836360604185 ]
canc_NA = 1



ris: 3.614836360604185
------------------------------ Fine somma_v_d

43: segmento_v_d	<=>	ris <- v[st:end]
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
start = 2
end = 2


p (1 : 1): [ 3.614836360604185 ]
------------------------------ Fine segmento_v_d

44: dividi1_vs_d	<=>	v <- v / div
p (1 : 1): [ 3.614836360604185 ]
div = 3.615


p (1 : 1): [ 1 ]
------------------------------ Fine dividi1_vs_d

61: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 1
incr = 1


tmp1_i (1 : 1): [ 1 ]
------------------------------ Fine seq_i


*** sampleB_p ***
25: rep_v_i	<=>	ris <- rep(v, rip)
tmp1_i (1 : 1): [ 1 ]
rip = 1


ris (1 : 1): [ 1 ]
------------------------------ Fine rep_v_i

64: somma_v_i	<=>	ris <- sum(v, na.rm=canc_NA)
ris (1 : 1): [ 1 ]
canc_NA = 0



ris: 1
------------------------------ Fine somma_v_i

131: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 1
incr = 1


tmp1_i (1 : 1): [ 1 ]
------------------------------ Fine seq_i

133: assegna1_m_vv_i	<=>	m[vr, vc] <- val
ris (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
tmp1_i (1 : 1): [ 1 ]
scalare_i (1 : 1): [ 2 ]
val = 1


ris (2 x 2 : 2 x 2): [
	 0 1
	 0 0
 ]
------------------------------ Fine assegna1_m_vv_i

135: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 1
incr = 1


indS (1 : 1): [ 1 ]
------------------------------ Fine seq_i

137: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 1
incr = 1


tmp2_i (1 : 1): [ 1 ]
------------------------------ Fine seq_i

138: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp2_i (1 : 1): [ 1 ]
indS (1 : 1): [ 1 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp2_i (1 : 1): [ 1 ]
st = 1
end = 1


indBS (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indBS (1 : 1): [ 1 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indBS (1 : 1): [ 1 ]
indx = 1


indBS (0 : 1): [ ]
------------------------------ Fine elimina1_indx_i



indBS (0 : 1): [ ]
------------------------------ Fine setdiff_i



*****************************************
*****************************************


Stringhe allocate: 5 (6228 interne); stringhe deallocate: 0 (5803 interne)


*** probmod ***
46: InitMatr_i
checkOUT (2 x 3 : 2 x 3): [
	 79849824 0 79034464
	 1 0 0
 ]
val = 0


checkOUT (2 x 3 : 2 x 3): [
	 0 0 0
	 0 0 0
 ]
------------------------------ Fine InitMatr_i

48: InitMatr_i
checkIN (2 x 3 : 2 x 3): [
	 79860368 0 79039024
	 1 0 2146959360
 ]
val = 0


checkIN (2 x 3 : 2 x 3): [
	 0 0 0
	 0 0 0
 ]
------------------------------ Fine InitMatr_i

50: InitMatr_d
ris (2 x 3 : 2 x 3): [
	 0 0 0
	 0 0 1.#QNAN
 ]
val = 0


ris (2 x 3 : 2 x 3): [
	 0 0 0
	 0 0 0
 ]
------------------------------ Fine InitMatr_d

52: somma_righe_i	<=>	ris <- apply(m, 1, sum)
ris (2 x 2 : 2 x 2): [
	 0 1
	 0 0
 ]


M_in (2 : 2): [ 1 0 ]
------------------------------ Fine somma_righe_i

54: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
ris (2 x 2 : 2 x 2): [
	 0 1
	 0 0
 ]


M_out (2 : 2): [ 0 1 ]
------------------------------ Fine somma_colonne_i

57: InitMatr_i
memory (2 x 3 : 2 x 3): [
	 79860752 0 79034752
	 1 0 0
 ]
val = -2147483648


memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
------------------------------ Fine InitMatr_i

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 1


tmp_i1 (0 : 6): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 0


tmp_i2 (0 : 6): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 6): [ ]
tmp_i2 (0 : 6): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

119: InitVett_d
S_out (3 : 3): [ 4.283449676242736e-314 1.48219693752374e-323 3.905029252811445e-316 ]
val = 0


S_out (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

122: InitVett_i
tmp_i1 (3 : 6): [ 79868832 1 0 ]
val = 1


tmp_i1 (3 : 6): [ 1 1 1 ]
------------------------------ Fine InitVett_i

123: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
checkOUT (2 x 3 : 2 x 3): [
	 0 0 0
	 0 0 0
 ]
riga = 1
tmp_i1 (3 : 6): [ 1 1 1 ]


checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 0 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_i

128: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 1 1 1 1 ]
h (3 : 5): [ 3 4 1 ]


tmp_i1 (3 : 6): [ 1 1 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (3 : 6): [ 1 1 0 ]
s = 1


ind (3 : 3): [ 2 2 1 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (3 : 6): [ 1 1 0 ]
s = 1


tmp_i1 (3 : 3): [ 2 2 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
tmp_i1 (3 : 3): [ 2 2 1 ]


T1 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (3 : 3): [ 2 2 1 ]
s = 1


tmp_i1 (3 : 3): [ 3 3 2 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 0 ]
tmp_i1 (3 : 3): [ 3 3 2 ]


T2 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (3 : 6): [ 1 1 0 ]
s = 1


tmp_i1 (3 : 3): [ 2 2 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 1 4 0 0 0 0 0 ]
tmp_i1 (3 : 3): [ 2 2 1 ]


old1 (3 : 3): [ 4 4 1 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (3 : 3): [ 2 2 1 ]
s = 1


tmp_i1 (3 : 3): [ 3 3 2 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 1 4 0 0 0 0 0 ]
tmp_i1 (3 : 3): [ 3 3 2 ]


old2 (3 : 3): [ 0 0 4 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (3 : 3): [ 4 4 1 ]
s = -1


new1 (3 : 3): [ 3 3 0 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (3 : 3): [ 0 0 4 ]
s = 1


new2 (3 : 3): [ 1 1 5 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (3 : 6): [ 1 1 0 ]
s = 1


tmp_i1 (3 : 3): [ 2 2 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (3 : 3): [ 2 2 1 ]


toll1 (3 : 3): [ 1 1 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (3 : 3): [ 2 2 1 ]
s = 1


tmp_i1 (3 : 3): [ 3 3 2 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (3 : 3): [ 3 3 2 ]


toll2 (3 : 3): [ 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (3 : 3): [ 4 4 1 ]
T1 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


a (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


a (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (3 : 3): [ 3 3 0 ]
T1 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


b (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


b (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (3 : 3): [ 1 2 3 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (3 : 3): [ 4.000000070932323 4 1 ]
val = 0


S1 (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (3 : 3): [ 0 0 4 ]
T2 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


a (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


a (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (3 : 3): [ 1 1 5 ]
T2 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


b (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


b (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
b (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]


tmpm_d (3 x 2 : 3 x 2): [
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (3 x 2 : 3 x 2): [
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
	 1.#QNAN 1.#QNAN
 ]


m (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (3 : 3): [ 1 2 3 ]
------------------------------ Fine which_v_indxNA_d

140: InitVett_d
S2 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
val = 0


S2 (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (3 : 3): [ 1.#QNAN 1.#QNAN 1.#QNAN ]
val = 0


ind (0 : 3): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (3 : 3): [ 0 0 0 ]
ind (0 : 3): [ ]
val = -1.#INF


S2 (3 : 3): [ 0 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (3 : 3): [ 0 0 0 ]
S2 (3 : 3): [ 0 0 0 ]


ris (3 : 3): [ 0 0 0 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
ris (3 : 3): [ 0 0 0 ]
div = 2.000


ris (3 : 3): [ 0 0 0 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (6378 interne); stringhe deallocate: 0 (5888 interne)

131: which_v_indxne_d	<=>	ris <- which(v != val)
ris (3 : 3): [ 0 0 0 ]
val = -1.#INF


indok (3 : 3): [ 1 2 3 ]
------------------------------ Fine which_v_indxne_d

133: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkIN (2 x 3 : 2 x 3): [
	 0 0 0
	 0 0 0
 ]
riga = 1
indok (3 : 3): [ 1 2 3 ]
val = 1


checkIN (2 x 3 : 2 x 3): [
	 1 1 1
	 0 0 0
 ]
------------------------------ Fine aggiungi_riga_indx_i

141: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 3
incr = 1


tmp_i1 (3 : 6): [ 1 2 3 ]
------------------------------ Fine seq_i

142: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (3 : 6): [ 1 2 3 ]
indok (3 : 3): [ 1 2 3 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (3 : 6): [ 1 2 3 ]
st = 1
end = 3


indInf (3 : 3): [ 1 2 3 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (3 : 3): [ 1 2 3 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 3): [ 1 2 3 ]
indx = 1


indInf (2 : 3): [ 2 3 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (2 : 3): [ 2 3 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 3): [ 2 3 ]
indx = 1


indInf (1 : 3): [ 3 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (1 : 3): [ 3 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 3): [ 3 ]
indx = 1


indInf (0 : 3): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 3): [ ]
------------------------------ Fine setdiff_i

144: copia_v_indx_d	<=>	ris <- v[indx]
ris (3 : 3): [ 0 0 0 ]
indok (3 : 3): [ 1 2 3 ]


tmp_d1 (3 : 3): [ 0 0 0 ]
------------------------------ Fine copia_v_indx_d

148: min_v_d	<=>	ris <- min(v)
tmp_d1 (3 : 3): [ 0 0 0 ]


min = 0
------------------------------ Fine min_v_d

149: assegna1_vs_indx_d	<=>	v[indx] <- val
ris (3 : 3): [ 0 0 0 ]
indInf (0 : 3): [ ]
val = -1


ris (3 : 3): [ 0 0 0 ]
------------------------------ Fine assegna1_vs_indx_d

159: somma_vv_d	<=>	ris <- v1 + v2
S_out (3 : 3): [ 0 0 0 ]
ris (3 : 3): [ 0 0 0 ]


tmp_d1 (3 : 3): [ 0 0 0 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (2 x 3 : 2 x 3): [
	 0 0 0
	 0 0 0
 ]
riga = 1
tmp_d1 (3 : 3): [ 0 0 0 ]


ris (2 x 3 : 2 x 3): [
	 0 0 0
	 0 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_d

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 0


tmp_i1 (0 : 6): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 1


tmp_i2 (0 : 6): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 6): [ ]
tmp_i2 (0 : 6): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

92: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sout (5 : 5): [ 1 1 1 1 0 ]
h (3 : 5): [ 3 4 1 ]


tmp_i1 (3 : 6): [ 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (3 : 6): [ 1 1 1 ]
s = 1


ind (3 : 3): [ 2 2 2 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (3 : 6): [ 1 1 1 ]
s = 1


tmp_i1 (3 : 3): [ 2 2 2 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (3 : 3): [ 2 2 2 ]


T1 (3 : 3): [ 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (3 : 3): [ 2 2 2 ]
s = 1


tmp_i1 (3 : 3): [ 3 3 3 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (3 : 3): [ 3 3 3 ]


T2 (3 : 3): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (3 : 6): [ 1 1 1 ]
s = 1


tmp_i1 (3 : 3): [ 2 2 2 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 1 4 0 0 0 0 0 ]
tmp_i1 (3 : 3): [ 2 2 2 ]


old1 (3 : 3): [ 4 4 4 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (3 : 3): [ 2 2 2 ]
s = 1


tmp_i1 (3 : 3): [ 3 3 3 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 1 4 0 0 0 0 0 ]
tmp_i1 (3 : 3): [ 3 3 3 ]


old2 (3 : 3): [ 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (3 : 3): [ 4 4 4 ]
s = -1


new1 (3 : 3): [ 3 3 3 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (3 : 3): [ 0 0 0 ]
s = 1


new2 (3 : 3): [ 1 1 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (3 : 6): [ 1 1 1 ]
s = 1


tmp_i1 (3 : 3): [ 2 2 2 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (3 : 3): [ 2 2 2 ]


toll1 (3 : 3): [ 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (3 : 3): [ 2 2 2 ]
s = 1


tmp_i1 (3 : 3): [ 3 3 3 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (3 : 3): [ 3 3 3 ]


toll2 (3 : 3): [ 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (3 : 3): [ 4 4 4 ]
T1 (3 : 3): [ 3.614836360604185 3.614836360604185 3.614836360604185 ]


a (3 : 3): [ 0.3851636393958149 0.3851636393958149 0.3851636393958149 ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (3 : 3): [ 0.3851636393958149 0.3851636393958149 0.3851636393958149 ]


a (3 : 3): [ 0.3851636393958149 0.3851636393958149 0.3851636393958149 ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (3 : 3): [ 3 3 3 ]
T1 (3 : 3): [ 3.614836360604185 3.614836360604185 3.614836360604185 ]


b (3 : 3): [ -0.6148363606041851 -0.6148363606041851 -0.6148363606041851 ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (3 : 3): [ -0.6148363606041851 -0.6148363606041851 -0.6148363606041851 ]


b (3 : 3): [ 0.6148363606041851 0.6148363606041851 0.6148363606041851 ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (3 : 3): [ 3.614836360604185 3.614836360604185 3.614836360604185 ]
complemento = 0


ind (0 : 3): [ ]
------------------------------ Fine which_v_indxNA_d

68: assegna1_vs_indx_d	<=>	v[indx] <- val
a (3 : 3): [ 0.3851636393958149 0.3851636393958149 0.3851636393958149 ]
ind (0 : 3): [ ]
val = 0


a (3 : 3): [ 0.3851636393958149 0.3851636393958149 0.3851636393958149 ]
------------------------------ Fine assegna1_vs_indx_d

70: assegna1_vs_indx_d	<=>	v[indx] <- val
b (3 : 3): [ 0.6148363606041851 0.6148363606041851 0.6148363606041851 ]
ind (0 : 3): [ ]
val = 0


b (3 : 3): [ 0.6148363606041851 0.6148363606041851 0.6148363606041851 ]
------------------------------ Fine assegna1_vs_indx_d

78: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (3 : 3): [ 0.3851636393958149 0.3851636393958149 0.3851636393958149 ]
b (3 : 3): [ 0.6148363606041851 0.6148363606041851 0.6148363606041851 ]


tmpm_d (3 x 2 : 3 x 2): [
	 0.3851636393958149 0.6148363606041851
	 0.3851636393958149 0.6148363606041851
	 0.3851636393958149 0.6148363606041851
 ]
------------------------------ Fine cbind2v_d

79: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (3 x 2 : 3 x 2): [
	 0.3851636393958149 0.6148363606041851
	 0.3851636393958149 0.6148363606041851
	 0.3851636393958149 0.6148363606041851
 ]


m (3 : 3): [ 0.6148363606041851 0.6148363606041851 0.6148363606041851 ]
------------------------------ Fine max_righe_d

81: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (3 : 3): [ 0.3851636393958149 0.3851636393958149 0.3851636393958149 ]
b (3 : 3): [ 0.6148363606041851 0.6148363606041851 0.6148363606041851 ]
m (3 : 3): [ 0.6148363606041851 0.6148363606041851 0.6148363606041851 ]
T1 (3 : 3): [ 3.614836360604185 3.614836360604185 3.614836360604185 ]


S1 (3 : 3): [ -0.1700869138378981 -0.1700869138378981 -0.1700869138378981 ]
------------------------------ Fine f_aux_d

83: diff_vv_d	<=>	ris <- v1 - v2
a (3 : 3): [ 0.3851636393958149 0.3851636393958149 0.3851636393958149 ]
toll1 (3 : 3): [ 1 1 1 ]


tmp_d1 (3 : 3): [ -0.6148363606041851 -0.6148363606041851 -0.6148363606041851 ]
------------------------------ Fine diff_vv_d

84: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (3 : 3): [ -0.6148363606041851 -0.6148363606041851 -0.6148363606041851 ]
val = 0

ind1 (3 : 3): [ 1 2 3 ]
------------------------------ Fine which_v_indxlt_d

86: diff_vv_d	<=>	ris <- v1 - v2
b (3 : 3): [ 0.6148363606041851 0.6148363606041851 0.6148363606041851 ]
toll1 (3 : 3): [ 1 1 1 ]


tmp_d1 (3 : 3): [ -0.3851636393958149 -0.3851636393958149 -0.3851636393958149 ]
------------------------------ Fine diff_vv_d

87: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (3 : 3): [ -0.3851636393958149 -0.3851636393958149 -0.3851636393958149 ]
val = 0


ind2 (0 : 3): [ ]
------------------------------ Fine which_v_indxgt_d

89: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (3 : 3): [ 1 2 3 ]
ind2 (0 : 3): [ ]
2459: esiste_v_i	<=>	elem %IN% v
elem = 1
ind2 (0 : 3): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 1
tmp_i1 (0 : 3): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 2
ind2 (0 : 3): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 2
tmp_i1 (0 : 3): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 3
ind2 (0 : 3): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 3
tmp_i1 (0 : 3): [ ]


indx = 0
------------------------------ Fine esiste_v_i



tmp_i1 (0 : 3): [ ]
------------------------------ Fine interseca_i

91: assegna1_vs_indx_d	<=>	v[indx] <- val
S1 (3 : 3): [ -0.1700869138378981 -0.1700869138378981 -0.1700869138378981 ]
tmp_i1 (0 : 3): [ ]
val = -1.#INF


S1 (3 : 3): [ -0.1700869138378981 -0.1700869138378981 -0.1700869138378981 ]
------------------------------ Fine assegna1_vs_indx_d

93: assegna1_vs_indx_d	<=>	v[indx] <- val
S1 (3 : 3): [ -0.1700869138378981 -0.1700869138378981 -0.1700869138378981 ]
ind (0 : 3): [ ]
val = 0


S1 (3 : 3): [ -0.1700869138378981 -0.1700869138378981 -0.1700869138378981 ]
------------------------------ Fine assegna1_vs_indx_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (3 : 3): [ 0 0 0 ]
T2 (3 : 3): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]


a (3 : 3): [ -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (3 : 3): [ -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 ]


a (3 : 3): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (3 : 3): [ 1 1 1 ]
T2 (3 : 3): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]


b (3 : 3): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (3 : 3): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]


b (3 : 3): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (3 : 3): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
b (3 : 3): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]


tmpm_d (3 x 2 : 3 x 2): [
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (3 x 2 : 3 x 2): [
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
 ]


m (3 : 3): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (3 : 3): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
complemento = 0


ind (0 : 3): [ ]
------------------------------ Fine which_v_indxNA_d

115: assegna1_vs_indx_d	<=>	v[indx] <- val
a (3 : 3): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
ind (0 : 3): [ ]
val = 0


a (3 : 3): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
------------------------------ Fine assegna1_vs_indx_d

117: assegna1_vs_indx_d	<=>	v[indx] <- val
b (3 : 3): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]
ind (0 : 3): [ ]
val = 0


b (3 : 3): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine assegna1_vs_indx_d

119: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (3 : 3): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
b (3 : 3): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]


tmpm_d (3 x 2 : 3 x 2): [
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
 ]
------------------------------ Fine cbind2v_d

120: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (3 x 2 : 3 x 2): [
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
 ]


m (3 : 3): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
------------------------------ Fine max_righe_d

122: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (3 : 3): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
b (3 : 3): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]
m (3 : 3): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
T2 (3 : 3): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]


S2 (3 : 3): [ 1 1 1 ]
------------------------------ Fine f_aux_d

124: diff_vv_d	<=>	ris <- v1 - v2
a (3 : 3): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
toll2 (3 : 3): [ 1 1 1 ]


tmp_d1 (3 : 3): [ -0.2132755425131789 -0.2132755425131789 -0.2132755425131789 ]
------------------------------ Fine diff_vv_d

125: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (3 : 3): [ -0.2132755425131789 -0.2132755425131789 -0.2132755425131789 ]
val = 0

ind1 (3 : 3): [ 1 2 3 ]
------------------------------ Fine which_v_indxlt_d

127: diff_vv_d	<=>	ris <- v1 - v2
b (3 : 3): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]
toll2 (3 : 3): [ 1 1 1 ]


tmp_d1 (3 : 3): [ -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 ]
------------------------------ Fine diff_vv_d

128: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (3 : 3): [ -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 ]
val = 0


ind2 (0 : 3): [ ]
------------------------------ Fine which_v_indxgt_d

130: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (3 : 3): [ 1 2 3 ]
ind2 (0 : 3): [ ]
2459: esiste_v_i	<=>	elem %IN% v
elem = 1
ind2 (0 : 3): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 1
tmp_i1 (0 : 3): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 2
ind2 (0 : 3): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 2
tmp_i1 (0 : 3): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 3
ind2 (0 : 3): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 3
tmp_i1 (0 : 3): [ ]


indx = 0
------------------------------ Fine esiste_v_i



tmp_i1 (0 : 3): [ ]
------------------------------ Fine interseca_i

132: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (3 : 3): [ 1 1 1 ]
tmp_i1 (0 : 3): [ ]
val = -1.#INF


S2 (3 : 3): [ 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

134: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (3 : 3): [ 1 1 1 ]
ind (0 : 3): [ ]
val = 0


S2 (3 : 3): [ 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (3 : 3): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
val = 0


ind (0 : 3): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (3 : 3): [ 1 1 1 ]
ind (0 : 3): [ ]
val = -1.#INF


S2 (3 : 3): [ 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (3 : 3): [ -0.1700869138378981 -0.1700869138378981 -0.1700869138378981 ]
S2 (3 : 3): [ 1 1 1 ]


S_out (3 : 3): [ 0.8299130861621019 0.8299130861621019 0.8299130861621019 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
S_out (3 : 3): [ 0.8299130861621019 0.8299130861621019 0.8299130861621019 ]
div = 2.000


S_out (3 : 3): [ 0.414956543081051 0.414956543081051 0.414956543081051 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (6493 interne); stringhe deallocate: 0 (5988 interne)

95: which_v_indxne_d	<=>	ris <- which(v != val)
S_out (3 : 3): [ 0.414956543081051 0.414956543081051 0.414956543081051 ]
val = -1.#INF


indok (3 : 3): [ 1 2 3 ]
------------------------------ Fine which_v_indxne_d

97: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 0 0 0
 ]
riga = 2
indok (3 : 3): [ 1 2 3 ]
val = 1


checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]
------------------------------ Fine aggiungi_riga_indx_i

104: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 3
incr = 1


tmp_i1 (3 : 6): [ 1 2 3 ]
------------------------------ Fine seq_i

105: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (3 : 6): [ 1 2 3 ]
indok (3 : 3): [ 1 2 3 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (3 : 6): [ 1 2 3 ]
st = 1
end = 3


indInf (3 : 3): [ 1 2 3 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (3 : 3): [ 1 2 3 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 3): [ 1 2 3 ]
indx = 1


indInf (2 : 3): [ 2 3 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (2 : 3): [ 2 3 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 3): [ 2 3 ]
indx = 1


indInf (1 : 3): [ 3 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (1 : 3): [ 3 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 3): [ 3 ]
indx = 1


indInf (0 : 3): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 3): [ ]
------------------------------ Fine setdiff_i

107: copia_v_indx_d	<=>	ris <- v[indx]
S_out (3 : 3): [ 0.414956543081051 0.414956543081051 0.414956543081051 ]
indok (3 : 3): [ 1 2 3 ]


tmp_d1 (3 : 3): [ 0.414956543081051 0.414956543081051 0.414956543081051 ]
------------------------------ Fine copia_v_indx_d

111: min_v_d	<=>	ris <- min(v)
tmp_d1 (3 : 3): [ 0.414956543081051 0.414956543081051 0.414956543081051 ]


min = 0.414956543081051
------------------------------ Fine min_v_d

112: assegna1_vs_indx_d	<=>	v[indx] <- val
S_out (3 : 3): [ 0.414956543081051 0.414956543081051 0.414956543081051 ]
indInf (0 : 3): [ ]
val = -1


S_out (3 : 3): [ 0.414956543081051 0.414956543081051 0.414956543081051 ]
------------------------------ Fine assegna1_vs_indx_d

155: InitVett_d
ris (3 : 3): [ 0 0 0 ]
val = 0


ris (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

156: aggiungi_ms_riga_i	<=>	m[riga,] <- val # riga <= dim(m)[0] + 1
checkIN (2 x 3 : 2 x 3): [
	 1 1 1
	 0 0 0
 ]
riga = 2, val = 1


checkIN (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]
------------------------------ Fine aggiungi_ms_riga_i

159: somma_vv_d	<=>	ris <- v1 + v2
S_out (3 : 3): [ 0.414956543081051 0.414956543081051 0.414956543081051 ]
ris (3 : 3): [ 0 0 0 ]


tmp_d1 (3 : 3): [ 0.414956543081051 0.414956543081051 0.414956543081051 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (2 x 3 : 2 x 3): [
	 0 0 0
	 0 0 0
 ]
riga = 2
tmp_d1 (3 : 3): [ 0.414956543081051 0.414956543081051 0.414956543081051 ]


ris (2 x 3 : 2 x 3): [
	 0 0 0
	 0.414956543081051 0.414956543081051 0.414956543081051
 ]
------------------------------ Fine aggiungi_mv_riga_d

168: somma_m_d	<=>	ris <- sum(m)
ris (2 x 3 : 2 x 3): [
	 0 0 0
	 0.414956543081051 0.414956543081051 0.414956543081051
 ]


ris: 1.244869629243153
------------------------------ Fine somma_m_d

173: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
checkIN (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]


aus (3 : 3): [ 2 2 2 ]
------------------------------ Fine somma_colonne_i

175: which_v_indxne_i	<=>	ris <- which(v != val)
aus (3 : 3): [ 2 2 2 ]
val = 0


tmp_i1 (3 : 6): [ 1 2 3 ]
------------------------------ Fine which_v_indxne_i

186: somma_righe_i	<=>	ris <- apply(m, 1, sum)
checkIN (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]


rs (2 : 2): [ 3 3 ]
------------------------------ Fine somma_righe_i

188: ordine_i	<=>	ris <- order(v, decreasing=decr)
rs (2 : 2): [ 3 3 ]
decr = 0


ord_ind (2 : 2): [ 1 2 ]
------------------------------ Fine ordine_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]
r = 1
val = 0


I_add (3 : 6): [ 1 2 3 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
I (0 : 0): [ ]
I_add (3 : 6): [ 1 2 3 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (3 : 3): [ 1 2 3 ]


ris (3 : 3): [ 1 2 3 ]
------------------------------ Fine elimina_doppi_i



ris (3 : 3): [ 1 2 3 ]
------------------------------ Fine unione1_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]
r = 2
val = 0


I_add (3 : 6): [ 1 2 3 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
ris (3 : 3): [ 1 2 3 ]
I_add (3 : 6): [ 1 2 3 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (6 : 6): [ 1 2 3 1 2 3 ]


ris (3 : 6): [ 1 2 3 ]
------------------------------ Fine elimina_doppi_i



ris (3 : 6): [ 1 2 3 ]
------------------------------ Fine unione1_i

216: assegna1_mindxlt_i	<=>	m1[which(m2<val1)] <- val2
checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]
checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]
val1 = 0
val2 = 0


checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]
------------------------------ Fine assegna1_mindxlt_i

218: assegna1_m_indxgt_i	<=>	m1[which(m2>val1)] <- val2
checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]
checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]
val1 = 0
val2 = 1


checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]
------------------------------ Fine assegna1_m_indxgt_i

220: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]


aus (3 : 3): [ 2 2 2 ]
------------------------------ Fine somma_colonne_i

222: which_v_indxne_i	<=>	ris <- which(v != val)
aus (3 : 3): [ 2 2 2 ]
val = 0


tmp_i1 (3 : 6): [ 1 2 3 ]
------------------------------ Fine which_v_indxne_i

232: somma_righe_i	<=>	ris <- apply(m, 1, sum)
checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]


rs (2 : 2): [ 3 3 ]
------------------------------ Fine somma_righe_i

234: ordine_i	<=>	ris <- order(v, decreasing=decr)
rs (2 : 2): [ 3 3 ]
decr = 0


ord_ind (2 : 2): [ 1 2 ]
------------------------------ Fine ordine_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]
r = 1
val = 0


I_add (3 : 6): [ 1 2 3 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (0 : 6): [ ]
I_add (3 : 6): [ 1 2 3 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (3 : 3): [ 1 2 3 ]


ris (3 : 3): [ 1 2 3 ]
------------------------------ Fine elimina_doppi_i



ris (3 : 3): [ 1 2 3 ]
------------------------------ Fine unione1_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (2 x 3 : 2 x 3): [
	 1 1 1
	 1 1 1
 ]
r = 2
val = 0


I_add (3 : 6): [ 1 2 3 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (3 : 3): [ 1 2 3 ]
I_add (3 : 6): [ 1 2 3 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (6 : 6): [ 1 2 3 1 2 3 ]


ris (3 : 6): [ 1 2 3 ]
------------------------------ Fine elimina_doppi_i



ris (3 : 6): [ 1 2 3 ]
------------------------------ Fine unione1_i


Stringhe allocate: 5 (6558 interne); stringhe deallocate: 0 (6128 interne)

90: seq_i	<=>	ris <- seq(da, a, incr)
da = 2
a = 2
incr = 1


ris->indices (1 : 1): [ 2 ]
------------------------------ Fine seq_i


Stringhe allocate: 5 (6563 interne); stringhe deallocate: 0 (6143 interne)

143: vettore3s_d		<=>	ris <- c(el1, el2, el3)
el1 = 0.6224348146215765, el2 = 0.6224348146215765, el3 = 0.6224348146215765


prob_mod (3 : 3): [ 0.6224348146215765 0.6224348146215765 0.6224348146215765 ]
------------------------------ Fine vettore3s_d

145: assegna1_v_indxeq_d	<=>	v[which(v==val1)] <- val2
prob_mod (3 : 3): [ 0.6224348146215765 0.6224348146215765 0.6224348146215765 ]
prob_mod (3 : 3): [ 0.6224348146215765 0.6224348146215765 0.6224348146215765 ]
val1 = 0
val2 = 1.#QNAN


prob_mod (3 : 3): [ 0.6224348146215765 0.6224348146215765 0.6224348146215765 ]
------------------------------ Fine assegna1_v_indxeq_d

147: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
prob_mod (3 : 3): [ 0.6224348146215765 0.6224348146215765 0.6224348146215765 ]
complemento = 1


ind (3 : 3): [ 1 2 3 ]
------------------------------ Fine which_v_indxNA_d

153: copia_v_indx_d	<=>	ris <- v[indx]
prob_mod (3 : 3): [ 0.6224348146215765 0.6224348146215765 0.6224348146215765 ]
ind (3 : 3): [ 1 2 3 ]


tmp1_d (3 : 16): [ 0.6224348146215765 0.6224348146215765 0.6224348146215765 ]
------------------------------ Fine copia_v_indx_d

154: min_v_d	<=>	ris <- min(v)
tmp1_d (3 : 16): [ 0.6224348146215765 0.6224348146215765 0.6224348146215765 ]


min = 0.6224348146215765
------------------------------ Fine min_v_d

160: assegna1_v_indxNA_d	<=>	v1[which(is.na(v2))] <- val oppure v1[which(!is.na(v2))] <- val
prob_mod (3 : 3): [ 0.6224348146215765 0.6224348146215765 0.6224348146215765 ]
prob_mod (3 : 3): [ 0.6224348146215765 0.6224348146215765 0.6224348146215765 ]
val = 0
complemento = 0


prob_mod (3 : 3): [ 0.6224348146215765 0.6224348146215765 0.6224348146215765 ]
------------------------------ Fine assegna1_v_indxNA_d

162: somma_v_d	<=>	ris <- sum(v, na.rm=canc_NA)
prob_mod (3 : 3): [ 0.6224348146215765 0.6224348146215765 0.6224348146215765 ]
canc_NA = 0



ris: 1.867304443864729
------------------------------ Fine somma_v_d

162: dividi1_vs_d	<=>	v <- v / div
prob_mod (3 : 3): [ 0.6224348146215765 0.6224348146215765 0.6224348146215765 ]
div = 1.867


prob_mod (3 : 3): [ 0.3333333333333334 0.3333333333333334 0.3333333333333334 ]
------------------------------ Fine dividi1_vs_d

164: vettore3s_i		<=>	ris <- c(el1, el2, el3)
el1 = 1, el2 = 2, el3 = 3


tmp1_i (3 : 3): [ 1 2 3 ]
------------------------------ Fine vettore3s_i


*** sampleB_p ***

*** sample_p ***
tmp1_i (3 : 3): [ 1 2 3 ]
k = 1, replace = 0
prob_mod (3 : 3): [ 0.3333333333333334 0.3333333333333334 0.3333333333333334 ]


ris (1 : 1): [ 2 ]
*****************************************


Stringhe allocate: 5 (6563 interne); stringhe deallocate: 0 (6143 interne)


*** assign_nodes ***
35: copia_v_i	<=>	ris[st:end] <- v[st:end]
h (3 : 5): [ 3 4 1 ]
st = 1
end = 3


or_h (3 : 3): [ 3 4 1 ]
------------------------------ Fine copia_v_i

37: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 3
incr = 1


aus_h (3 : 3): [ 1 2 3 ]
------------------------------ Fine seq_i

43: InitVett_i
index (2 : 2): [ 79856264 49 ]
val = 0


index (2 : 2): [ 0 0 ]
------------------------------ Fine InitVett_i

45: somma_righe_i	<=>	ris <- apply(m, 1, sum)
ris (2 x 2 : 2 x 2): [
	 0 0
	 1 0
 ]


M_in (2 : 2): [ 0 1 ]
------------------------------ Fine somma_righe_i

47: ordine_i	<=>	ris <- order(v, decreasing=decr)
M_in (2 : 2): [ 0 1 ]
decr = 1


Ord (2 : 2): [ 2 1 ]
------------------------------ Fine ordine_i

52: riga_d	<=>	ris <- m[r,]
ris (2 x 3 : 2 x 3): [
	 0.414956543081051 0.414956543081051 0.414956543081051
	 0 0 0
 ]
r = 2

p (3 : 3): [ 0 0 0 ]
------------------------------ Fine riga_d

54: which_v_indxle_d	<=>	ris <- which(v<=val)
p (3 : 3): [ 0 0 0 ]
val = 0


tmp_i (3 : 3): [ 1 2 3 ]
------------------------------ Fine which_v_indxle_d

57: min_v_d	<=>	ris <- min(v)
p (3 : 3): [ 0 0 0 ]


min = 0
------------------------------ Fine min_v_d

58: somma1_vs_d	<=>	v <- v + s
p (3 : 3): [ 0 0 0 ]
s = 0.1111111111111111


p (3 : 3): [ 0.1111111111111111 0.1111111111111111 0.1111111111111111 ]
------------------------------ Fine somma1_vs_d

61: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 1 1 1 1 ]
h (3 : 5): [ 3 4 1 ]


Sin_h (3 : 3): [ 1 1 0 ]
------------------------------ Fine assegna_v_indxNA_i

66: which_v_indxgt_i	<=>	ris <- which(v > val)
Sin_h (3 : 3): [ 1 1 0 ]
val = 4


ind (0 : 3): [ ]
------------------------------ Fine which_v_indxgt_i

72: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
p (3 : 3): [ 0.1111111111111111 0.1111111111111111 0.1111111111111111 ]
aus_h (3 : 3): [ 1 2 3 ]


tmp_d (3 : 3): [ 0.1111111111111111 0.1111111111111111 0.1111111111111111 ]
------------------------------ Fine assegna_v_indxNA_d

73: somma_v_d	<=>	ris <- sum(v, na.rm=canc_NA)
tmp_d (3 : 3): [ 0.1111111111111111 0.1111111111111111 0.1111111111111111 ]
canc_NA = 0



ris: 0.3333333333333333
------------------------------ Fine somma_v_d

74: dividi_vs_d	ris <- v / div
tmp_d (3 : 3): [ 0.1111111111111111 0.1111111111111111 0.1111111111111111 ]
div = 0.333


p (3 : 3): [ 0.3333333333333333 0.3333333333333333 0.3333333333333333 ]
------------------------------ Fine dividi_vs_d


*** sampleB_p ***

*** sample_p ***
h (3 : 5): [ 3 4 1 ]
k = 1, replace = 0
p (3 : 3): [ 0.3333333333333333 0.3333333333333333 0.3333333333333333 ]


ris (1 : 1): [ 1 ]
*****************************************


Stringhe allocate: 5 (6618 interne); stringhe deallocate: 0 (6143 interne)

81: setdiff1_i	<=>	v1 <- setdiff(v1, v2)
h (3 : 5): [ 3 4 1 ]
ris (1 : 1): [ 1 ]
2048: esiste_v_i	<=>	elem %IN% v
elem = 1
h (3 : 5): [ 3 4 1 ]


indx = 3
------------------------------ Fine esiste_v_i

2050: elimina1_indx_i	<=>	v <- v[-indx]
h (3 : 5): [ 3 4 1 ]
indx = 3


h (2 : 5): [ 3 4 ]
------------------------------ Fine elimina1_indx_i



h (2 : 5): [ 3 4 ]
------------------------------ Fine setdiff1_i

83: which_vv_eq_i	<=>	ris <- which(v1 == v2)
or_h (3 : 3): [ 3 4 1 ]
ris (1 : 1): [ 1 ]
2017: esiste_v_i	<=>	elem %IN% v
elem = 1
or_h (3 : 3): [ 3 4 1 ]


indx = 3
------------------------------ Fine esiste_v_i



tmp_i (1 : 3): [ 1 ]
------------------------------ Fine which_vv_eq_i

84: setdiff1_i	<=>	v1 <- setdiff(v1, v2)
aus_h (3 : 3): [ 1 2 3 ]
tmp_i (1 : 3): [ 1 ]
2048: esiste_v_i	<=>	elem %IN% v
elem = 1
aus_h (3 : 3): [ 1 2 3 ]


indx = 1
------------------------------ Fine esiste_v_i

2050: elimina1_indx_i	<=>	v <- v[-indx]
aus_h (3 : 3): [ 1 2 3 ]
indx = 1


aus_h (2 : 3): [ 2 3 ]
------------------------------ Fine elimina1_indx_i



aus_h (2 : 3): [ 2 3 ]
------------------------------ Fine setdiff1_i

52: riga_d	<=>	ris <- m[r,]
ris (2 x 3 : 2 x 3): [
	 0.414956543081051 0.414956543081051 0.414956543081051
	 0 0 0
 ]
r = 1

p (3 : 3): [ 0.414956543081051 0.414956543081051 0.414956543081051 ]
------------------------------ Fine riga_d

54: which_v_indxle_d	<=>	ris <- which(v<=val)
p (3 : 3): [ 0.414956543081051 0.414956543081051 0.414956543081051 ]
val = 0


tmp_i (0 : 3): [ ]
------------------------------ Fine which_v_indxle_d

61: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 1 1 1 1 ]
h (2 : 5): [ 3 4 ]


Sin_h (2 : 3): [ 1 1 ]
------------------------------ Fine assegna_v_indxNA_i

66: which_v_indxgt_i	<=>	ris <- which(v > val)
Sin_h (2 : 3): [ 1 1 ]
val = 5


ind (0 : 3): [ ]
------------------------------ Fine which_v_indxgt_i

72: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
p (3 : 3): [ 0.414956543081051 0.414956543081051 0.414956543081051 ]
aus_h (2 : 3): [ 2 3 ]


tmp_d (2 : 3): [ 0.414956543081051 0.414956543081051 ]
------------------------------ Fine assegna_v_indxNA_d

73: somma_v_d	<=>	ris <- sum(v, na.rm=canc_NA)
tmp_d (2 : 3): [ 0.414956543081051 0.414956543081051 ]
canc_NA = 0



ris: 0.8299130861621019
------------------------------ Fine somma_v_d

74: dividi_vs_d	ris <- v / div
tmp_d (2 : 3): [ 0.414956543081051 0.414956543081051 ]
div = 0.830


p (2 : 3): [ 0.5 0.5 ]
------------------------------ Fine dividi_vs_d


*** sampleB_p ***

*** sample_p ***
h (2 : 5): [ 3 4 ]
k = 1, replace = 0
p (2 : 3): [ 0.5 0.5 ]


ris (1 : 1): [ 3 ]
*****************************************


Stringhe allocate: 5 (6618 interne); stringhe deallocate: 0 (6143 interne)

81: setdiff1_i	<=>	v1 <- setdiff(v1, v2)
h (2 : 5): [ 3 4 ]
ris (1 : 1): [ 3 ]
2048: esiste_v_i	<=>	elem %IN% v
elem = 3
h (2 : 5): [ 3 4 ]


indx = 1
------------------------------ Fine esiste_v_i

2050: elimina1_indx_i	<=>	v <- v[-indx]
h (2 : 5): [ 3 4 ]
indx = 1


h (1 : 5): [ 4 ]
------------------------------ Fine elimina1_indx_i



h (1 : 5): [ 4 ]
------------------------------ Fine setdiff1_i

83: which_vv_eq_i	<=>	ris <- which(v1 == v2)
or_h (3 : 3): [ 3 4 1 ]
ris (1 : 1): [ 3 ]
2017: esiste_v_i	<=>	elem %IN% v
elem = 3
or_h (3 : 3): [ 3 4 1 ]


indx = 1
------------------------------ Fine esiste_v_i



tmp_i (1 : 3): [ 3 ]
------------------------------ Fine which_vv_eq_i

84: setdiff1_i	<=>	v1 <- setdiff(v1, v2)
aus_h (2 : 3): [ 2 3 ]
tmp_i (1 : 3): [ 3 ]
2048: esiste_v_i	<=>	elem %IN% v
elem = 3
aus_h (2 : 3): [ 2 3 ]


indx = 2
------------------------------ Fine esiste_v_i

2050: elimina1_indx_i	<=>	v <- v[-indx]
aus_h (2 : 3): [ 2 3 ]
indx = 2


aus_h (1 : 3): [ 2 ]
------------------------------ Fine elimina1_indx_i



aus_h (1 : 3): [ 2 ]
------------------------------ Fine setdiff1_i

101: which_m_rowindxeq_i	<=>	ris <- which(m[r,] == val)
ris (2 x 2 : 2 x 2): [
	 0 0
	 1 0
 ]
riga = 1
val = 1


ind (0 : 10): [ ]
------------------------------ Fine which_m_rowindxeq_i

103: copia_v_indx_i	<=>	ris <- v[indx]
index (2 : 2): [ 3 1 ]
ind (0 : 10): [ ]


co (0 : 0): [ ]
------------------------------ Fine copia_v_indx_i

105: assegna1_m_vv_i	<=>	m[vr, vc] <- val
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 1 0
	 1 0 0 0 0
 ]
ri (1 : 1): [ 3 ]
co (0 : 0): [ ]
val = 1


Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 1 0
	 1 0 0 0 0
 ]
------------------------------ Fine assegna1_m_vv_i

107: esiste_v_i	<=>	elem %IN% v
elem = 1
ris->indices (1 : 1): [ 1 ]


indx = 1
------------------------------ Fine esiste_v_i

109: accoda1_vv_i	<=>	v1 <- c(v1, v2)
ris (0 : 1): [ ]
ri (1 : 1): [ 3 ]


ris (1 : 1): [ 3 ]
------------------------------ Fine accoda_vv_i

101: which_m_rowindxeq_i	<=>	ris <- which(m[r,] == val)
ris (2 x 2 : 2 x 2): [
	 0 0
	 1 0
 ]
riga = 2
val = 1


ind (1 : 10): [ 1 ]
------------------------------ Fine which_m_rowindxeq_i

103: copia_v_indx_i	<=>	ris <- v[indx]
index (2 : 2): [ 3 1 ]
ind (1 : 10): [ 1 ]


co (1 : 1): [ 3 ]
------------------------------ Fine copia_v_indx_i

105: assegna1_m_vv_i	<=>	m[vr, vc] <- val
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 1 0
	 1 0 0 0 0
 ]
ri (1 : 1): [ 1 ]
co (1 : 1): [ 3 ]
val = 1


Mdiscr (5 x 5 : 5 x 5): [
	 0 0 1 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 1 0
	 1 0 0 0 0
 ]
------------------------------ Fine assegna1_m_vv_i

107: esiste_v_i	<=>	elem %IN% v
elem = 2
ris->indices (1 : 1): [ 1 ]


indx = 0
------------------------------ Fine esiste_v_i


Stringhe allocate: 5 (6628 interne); stringhe deallocate: 0 (6208 interne)

332: accoda1_vv_i	<=>	v1 <- c(v1, v2)
h_new (0 : 6): [ ]
ris (1 : 1): [ 3 ]


h_new (1 : 6): [ 3 ]
------------------------------ Fine accoda_vv_i

334: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 1 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 1 0
	 1 0 0 0 0
 ]


Sout (5 : 5): [ 1 1 2 1 0 ]
------------------------------ Fine somma_colonne_i

336: max_v_i		<=>	ris <- max(v)
Sout (5 : 5): [ 1 1 2 1 0 ]


max = 2
------------------------------ Fine max_v_i

338: seq_i	<=>	ris <- seq(da, a, incr)
da = 0
a = 3
incr = 1


tmp2_i (4 : 10): [ 0 1 2 3 ]
------------------------------ Fine seq_i


*** hist1 ***
Sout (5 : 5): [ 1 1 2 1 0 ]
tmp2_i (4 : 10): [ 0 1 2 3 ]
right = 0
include_border = 1
naok = 0
29: InitVett_i
tmp1_i (3 : 3): [ 1 2 3 ]
val = 0


tmp1_i (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i



tmp1_i (3 : 3): [ 1 3 1 ]

Stringhe allocate: 5 (6628 interne); stringhe deallocate: 0 (6208 interne)

340: promuovi_i	(implicita)
tmp1_i (3 : 3): [ 1 3 1 ]
ATTENZIONE (promuovi_i, linea connectivity_modular.c # 340): il vettore e` stato promosso da intero a double: i calcoli saranno rallentati!

tmp1_d (3 : 16): [ 1 3 1 ]
------------------------------ Fine promuovi_i

341: assegna1_v_segmv_d	<=>	v1[st:end] <- v2
Freq_out (7 : 7): [ 1 4 0 0 0 0 0 ]
start = 1
end = 3
tmp1_d (3 : 16): [ 1 3 1 ]


Freq_out (7 : 7): [ 1 3 1 0 0 0 0 ]
------------------------------ Fine assegna1_v_segmv_d

343: somma_righe_i	<=>	ris <- apply(m, 1, sum)
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 1 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 1 0
	 1 0 0 0 0
 ]


Sin (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_righe_i

345: max_v_i		<=>	ris <- max(v)
Sin (5 : 5): [ 1 1 1 1 1 ]


max = 1
------------------------------ Fine max_v_i

347: seq_i	<=>	ris <- seq(da, a, incr)
da = 0
a = 2
incr = 1


tmp2_i (3 : 10): [ 0 1 2 ]
------------------------------ Fine seq_i


*** hist1 ***
Sin (5 : 5): [ 1 1 1 1 1 ]
tmp2_i (3 : 10): [ 0 1 2 ]
right = 0
include_border = 1
naok = 0
29: InitVett_i
tmp1_i (2 : 3): [ 1 3 ]
val = 0


tmp1_i (2 : 3): [ 0 0 ]
------------------------------ Fine InitVett_i



tmp1_i (2 : 3): [ 0 5 ]

Stringhe allocate: 5 (6629 interne); stringhe deallocate: 0 (6209 interne)

349: promuovi_i	(implicita)
tmp1_i (2 : 3): [ 0 5 ]
ATTENZIONE (promuovi_i, linea connectivity_modular.c # 349): il vettore e` stato promosso da intero a double: i calcoli saranno rallentati!

tmp1_d (2 : 16): [ 0 5 ]
------------------------------ Fine promuovi_i

350: assegna1_v_segmv_d	<=>	v1[st:end] <- v2
Freq_in (7 : 7): [ 1 4 0 0 0 0 0 ]
start = 1
end = 2
tmp1_d (2 : 16): [ 0 5 ]


Freq_in (7 : 7): [ 0 5 0 0 0 0 0 ]
------------------------------ Fine assegna1_v_segmv_d

362: copia_v_i	<=>	ris[st:end] <- v[st:end]
h_new (1 : 6): [ 3 ]
st = 1
end = 1


h (1 : 5): [ 3 ]
------------------------------ Fine copia_v_i

368: copia_v_indx_i	<=>	ris <- v[indx]
Sin (5 : 5): [ 1 1 1 1 1 ]
h (1 : 5): [ 3 ]


tmp1_i (1 : 3): [ 1 ]
------------------------------ Fine copia_v_indx_i

369: which_v_indxne_i	<=>	ris <- which(v != val)
tmp1_i (1 : 3): [ 1 ]
val = 5


tmp2_i (1 : 10): [ 1 ]
------------------------------ Fine which_v_indxne_i

370: copia_v_indx_i	<=>	ris <- v[indx]
h (1 : 5): [ 3 ]
tmp2_i (1 : 10): [ 1 ]


h (1 : 5): [ 3 ]
------------------------------ Fine copia_v_indx_i

381: somma_righe_i	<=>	ris <- apply(m, 1, sum)
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 1 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 1 0
	 1 0 0 0 0
 ]


Sr (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_righe_i

383: which_v_indxeq_i	<=>	ris <- which(v==val)
Sr (5 : 5): [ 1 1 1 1 1 ]
val = 0


ind (0 : 11): [ ]
------------------------------ Fine which_v_indxeq_i

453: which_m_indxeq_i	<=>	ris <- which(m == val)
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 1 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 1 0
	 1 0 0 0 0
 ]
val = 1


ind (5 : 47): [ 5 8 11 12 19 ]
------------------------------ Fine which_m_indxeq_i

459: abs_v_d	<=>	ris <- abs(v)
tmp1_d (5 : 16): [ 1 1 1 1 1 ]


tmp2_d (5 : 16): [ 1 1 1 1 1 ]
------------------------------ Fine abs_v_d

463: InitMatr_d
M (5 x 5 : 5 x 5): [
	 5.842414621812633e-308 0 0 0 0
	 3.250798789285192e-318 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
val = 0


M (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine InitMatr_d

465: assegna1_mv_indx_d	<=>	m[indx] <- v
M (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
ind (5 : 47): [ 5 8 11 12 19 ]
tmp2_d (5 : 16): [ 1 1 1 1 1 ]


M (5 x 5 : 5 x 5): [
	 0 0 1 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 1 0
	 1 0 0 0 0
 ]
------------------------------ Fine assegna1_mv_indx_d


Stringhe allocate: 5 (6645 interne); stringhe deallocate: 0 (6370 interne)


*** createRules ***
50: which_m_rowindxne_d	<=>	ris <- which(m[r, ] != val)
M (5 x 5 : 5 x 5): [
	 0 0 1 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 1 0
	 1 0 0 0 0
 ]
r = 1
val = 0


op (1 : 25): [ 3 ]
------------------------------ Fine which_m_rowindxne_d

62: copia_v_i	<=>	ris[st:end] <- v[st:end]
op (1 : 25): [ 3 ]
st = 1
end = 1


ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

50: which_m_rowindxne_d	<=>	ris <- which(m[r, ] != val)
M (5 x 5 : 5 x 5): [
	 0 0 1 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 1 0
	 1 0 0 0 0
 ]
r = 2
val = 0


op (1 : 25): [ 3 ]
------------------------------ Fine which_m_rowindxne_d

62: copia_v_i	<=>	ris[st:end] <- v[st:end]
op (1 : 25): [ 3 ]
st = 1
end = 1


ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

50: which_m_rowindxne_d	<=>	ris <- which(m[r, ] != val)
M (5 x 5 : 5 x 5): [
	 0 0 1 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 1 0
	 1 0 0 0 0
 ]
r = 3
val = 0


op (1 : 25): [ 2 ]
------------------------------ Fine which_m_rowindxne_d

62: copia_v_i	<=>	ris[st:end] <- v[st:end]
op (1 : 25): [ 2 ]
st = 1
end = 1


ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

50: which_m_rowindxne_d	<=>	ris <- which(m[r, ] != val)
M (5 x 5 : 5 x 5): [
	 0 0 1 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 1 0
	 1 0 0 0 0
 ]
r = 4
val = 0


op (1 : 25): [ 4 ]
------------------------------ Fine which_m_rowindxne_d

62: copia_v_i	<=>	ris[st:end] <- v[st:end]
op (1 : 25): [ 4 ]
st = 1
end = 1


ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

50: which_m_rowindxne_d	<=>	ris <- which(m[r, ] != val)
M (5 x 5 : 5 x 5): [
	 0 0 1 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 1 0
	 1 0 0 0 0
 ]
r = 5
val = 0


op (1 : 25): [ 1 ]
------------------------------ Fine which_m_rowindxne_d

62: copia_v_i	<=>	ris[st:end] <- v[st:end]
op (1 : 25): [ 1 ]
st = 1
end = 1


ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i


Stringhe allocate: 0 (55 interne); stringhe deallocate: 0 (25 interne)

55: InitMatr_i
reg (5 x 1 : 5 x 1): [
	 79846536
	 25
	 0
	 0
	 79033424
 ]
val = 0


reg (5 x 1 : 5 x 1): [
	 0
	 0
	 0
	 0
	 0
 ]
------------------------------ Fine InitMatr_i

59: assegna1_mv_riga_i	<=>	m[riga,] <- v
reg (5 x 1 : 5 x 1): [
	 0
	 0
	 0
	 0
	 0
 ]
riga = 1
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]


reg (5 x 1 : 5 x 1): [
	 3
	 0
	 0
	 0
	 0
 ]
------------------------------ Fine assegna1_mv_riga_i

59: assegna1_mv_riga_i	<=>	m[riga,] <- v
reg (5 x 1 : 5 x 1): [
	 3
	 0
	 0
	 0
	 0
 ]
riga = 2
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]


reg (5 x 1 : 5 x 1): [
	 3
	 3
	 0
	 0
	 0
 ]
------------------------------ Fine assegna1_mv_riga_i

59: assegna1_mv_riga_i	<=>	m[riga,] <- v
reg (5 x 1 : 5 x 1): [
	 3
	 3
	 0
	 0
	 0
 ]
riga = 3
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]


reg (5 x 1 : 5 x 1): [
	 3
	 3
	 2
	 0
	 0
 ]
------------------------------ Fine assegna1_mv_riga_i

59: assegna1_mv_riga_i	<=>	m[riga,] <- v
reg (5 x 1 : 5 x 1): [
	 3
	 3
	 2
	 0
	 0
 ]
riga = 4
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]


reg (5 x 1 : 5 x 1): [
	 3
	 3
	 2
	 4
	 0
 ]
------------------------------ Fine assegna1_mv_riga_i

59: assegna1_mv_riga_i	<=>	m[riga,] <- v
reg (5 x 1 : 5 x 1): [
	 3
	 3
	 2
	 4
	 0
 ]
riga = 5
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]


reg (5 x 1 : 5 x 1): [
	 3
	 3
	 2
	 4
	 1
 ]
------------------------------ Fine assegna1_mv_riga_i


*** write_m_i ***
reg (5 x 1 : 5 x 1): [
	 3
	 3
	 2
	 4
	 1
 ]

Stringhe allocate: 0 (60 interne); stringhe deallocate: 0 (25 interne)


*** createNEG1 ***
17: InitMatr_i
ris (5 x 5 : 5 x 5): [
	 79851088 0 0 0 0
	 2425208 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
val = 0


ris (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine InitMatr_i

19: which_m_indxeq_i	<=>	ris <- which(m == val)
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 1 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 1 0
	 1 0 0 0 0
 ]
val = 1


ind (5 : 25): [ 5 8 11 12 19 ]
------------------------------ Fine which_m_indxeq_i

22: vettore2s_i		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 1


tmp_i (2 : 2): [ -1 1 ]
------------------------------ Fine vettore2s_i


***sample***
tmp_i (2 : 2): [ -1 1 ]
k = 5, replace = 1


ris (5 : 5): [ 1 1 -1 -1 -1 ]
*****************************************


Stringhe allocate: 0 (80 interne); stringhe deallocate: 0 (25 interne)


Stringhe allocate: 0 (80 interne); stringhe deallocate: 0 (40 interne)

74: moltiplica_mm_di	<=>	ris <- m1 * m2
M (5 x 5 : 5 x 5): [
	 0 0 1 0 0
	 0 0 1 0 0
	 0 1 0 0 0
	 0 0 0 1 0
	 1 0 0 0 0
 ]
ris (5 x 5 : 5 x 5): [
	 0 0 -1 0 0
	 0 0 -1 0 0
	 0 1 0 0 0
	 0 0 0 -1 0
	 1 0 0 0 0
 ]


tmpm1_d (5 x 5 : 5 x 5): [
	 0 0 -1 0 0
	 0 0 -1 0 0
	 0 1 0 0 0
	 0 0 0 -1 0
	 1 0 0 0 0
 ]
------------------------------ Fine moltiplica_mm_di


*** write_m_d ***
tmpm1_d (5 x 5 : 5 x 5): [
	 0 0 -1 0 0
	 0 0 -1 0 0
	 0 1 0 0 0
	 0 0 0 -1 0
	 1 0 0 0 0
 ]

Stringhe allocate: 0 (85 interne); stringhe deallocate: 0 (40 interne)


*** lsoda ***
116: copia_v_d	<=>	ris[st:end] <- v[st:end]
parm1[j][i] (5 : 5): [ 0.8988629876690203 0.86013003877782 0.7529666664997292 0.6820456255132146 0.8224436778595854 ]
st = 1
end = 5


y (5 : 5): [ 0.8988629876690203 0.86013003877782 0.7529666664997292 0.6820456255132146 0.8224436778595854 ]
------------------------------ Fine copia_v_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 5.387751257810588e-310 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529666664997292


ris (2 : 2): [ -1 0.7529666664997292 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (135 interne); stringhe deallocate: 0 (55 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 5.841302772525664e-308 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529666664997292


ris (2 : 2): [ -1 0.7529666664997292 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (155 interne); stringhe deallocate: 0 (75 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 5.84241469830926e-308 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.86013003877782


ris (2 : 2): [ 1 0.86013003877782 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (175 interne); stringhe deallocate: 0 (95 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7529664128252387 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6820456255132146


ris (2 : 2): [ -1 0.6820456255132146 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (195 interne); stringhe deallocate: 0 (115 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8601298420852945 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8988629876690203


ris (2 : 2): [ 1 0.8988629876690203 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (215 interne); stringhe deallocate: 0 (135 interne)


Stringhe allocate: 1 (215 interne); stringhe deallocate: 0 (140 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2470333335002708 0.2470333335002708 0.86013003877782 0.3179543744867854 0.8988629876690203 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8627689714510471 0.7331274890017059 0.999999313427302 0.9764705593586395 0.999999676899213 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 5.842414698308936e-308 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529667305328577


ris (2 : 2): [ -1 0.7529667305328577 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (250 interne); stringhe deallocate: 0 (170 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 5.841302772512415e-308 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529667305328577


ris (2 : 2): [ -1 0.7529667305328577 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (270 interne); stringhe deallocate: 0 (190 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 5.841905419317571e-308 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601300123070147


ris (2 : 2): [ 1 0.8601300123070147 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (290 interne); stringhe deallocate: 0 (210 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7529664128251357 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6820456983754656


ris (2 : 2): [ -1 0.6820456983754656 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (310 interne); stringhe deallocate: 0 (230 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8601298420852999 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8988629782770937


ris (2 : 2): [ 1 0.8988629782770937 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (330 interne); stringhe deallocate: 0 (250 interne)


Stringhe allocate: 1 (330 interne); stringhe deallocate: 0 (255 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2470332694671423 0.2470332694671423 0.8601300123070147 0.3179543016245344 0.8988629782770937 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8627688684148738 0.7331273051467075 0.9999993134269388 0.9764705275403953 0.999999676899155 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6820454686112685 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529667625494033


ris (2 : 2): [ -1 0.7529667625494033 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (365 interne); stringhe deallocate: 0 (285 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 5.841302772512952e-308 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529667625494033


ris (2 : 2): [ -1 0.7529667625494033 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (385 interne); stringhe deallocate: 0 (305 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 5.841302772515419e-308 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601299990715751


ris (2 : 2): [ 1 0.8601299990715751 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (405 interne); stringhe deallocate: 0 (325 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7529664128250717 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6820457348065619


ris (2 : 2): [ -1 0.6820457348065619 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (425 interne); stringhe deallocate: 0 (345 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8601298420857724 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.898862973581103


ris (2 : 2): [ 1 0.898862973581103 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (445 interne); stringhe deallocate: 0 (365 interne)


Stringhe allocate: 1 (445 interne); stringhe deallocate: 0 (370 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2470332374505967 0.2470332374505967 0.8601299990715751 0.3179542651934381 0.898862973581103 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8627688168968082 0.7331272132192508 0.9999993134267573 0.9764705116312709 0.9999996768991259 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6820454686112045 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.752966902929629


ris (2 : 2): [ -1 0.752966902929629 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (480 interne); stringhe deallocate: 0 (400 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 1.#QNAN ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.752966902929629


ris (2 : 2): [ -1 0.752966902929629 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (500 interne); stringhe deallocate: 0 (420 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 5.841302772514794e-308 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601299410392382


ris (2 : 2): [ 1 0.8601299410392382 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (520 interne); stringhe deallocate: 0 (440 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7529668896625017 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6820458945428879


ris (2 : 2): [ -1 0.6820458945428879 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (540 interne); stringhe deallocate: 0 (460 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8601298420852963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8988629529909715


ris (2 : 2): [ 1 0.8988629529909715 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (560 interne); stringhe deallocate: 0 (480 interne)


Stringhe allocate: 1 (560 interne); stringhe deallocate: 0 (485 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.247033097070371 0.247033097070371 0.8601299410392382 0.3179541054571121 0.8988629529909715 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8627685910098553 0.7331268101526598 0.9999993134259608 0.9764704418757686 0.9999996768989988 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6820454686114763 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529669226321104


ris (2 : 2): [ -1 0.7529669226321104 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (595 interne); stringhe deallocate: 0 (515 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622789e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529669226321104


ris (2 : 2): [ -1 0.7529669226321104 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (615 interne); stringhe deallocate: 0 (535 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 5.841302772512937e-308 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601299328943363


ris (2 : 2): [ 1 0.8601299328943363 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (635 interne); stringhe deallocate: 0 (555 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7529668896625754 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6820459169620114


ris (2 : 2): [ -1 0.6820459169620114 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (655 interne); stringhe deallocate: 0 (575 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8601298420853238 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8988629501011192


ris (2 : 2): [ 1 0.8988629501011192 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (675 interne); stringhe deallocate: 0 (595 interne)


Stringhe allocate: 1 (675 interne); stringhe deallocate: 0 (600 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2470330773678896 0.2470330773678896 0.8601299328943363 0.3179540830379886 0.8988629501011192 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8627685593064243 0.733126753581917 0.9999993134258491 0.9764704320855115 0.999999676898981 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.68204546861155 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.752966794565953


ris (2 : 2): [ -1 0.752966794565953 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (710 interne); stringhe deallocate: 0 (630 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892628847e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.752966794565953


ris (2 : 2): [ -1 0.752966794565953 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (730 interne); stringhe deallocate: 0 (650 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601299858361438


ris (2 : 2): [ 1 0.8601299858361438 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (750 interne); stringhe deallocate: 0 (670 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7529664128264964 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6820457712376649


ris (2 : 2): [ -1 0.6820457712376649 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (770 interne); stringhe deallocate: 0 (690 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8601298420852945 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8988629688851184


ris (2 : 2): [ 1 0.8988629688851184 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (790 interne); stringhe deallocate: 0 (710 interne)


Stringhe allocate: 1 (790 interne); stringhe deallocate: 0 (715 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2470332054340471 0.2470332054340471 0.8601299858361438 0.3179542287623351 0.8988629688851184 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8627687653787302 0.7331271212917752 0.9999993134265757 0.9764704957221335 0.9999996768990971 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6820454686126292 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529669226321104


ris (2 : 2): [ -1 0.7529669226321104 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (825 interne); stringhe deallocate: 0 (745 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618311e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529669226321104


ris (2 : 2): [ -1 0.7529669226321104 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (845 interne); stringhe deallocate: 0 (765 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601299328943363


ris (2 : 2): [ 1 0.8601299328943363 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (865 interne); stringhe deallocate: 0 (785 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.752966889662166 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6820459169620114


ris (2 : 2): [ -1 0.6820459169620114 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (885 interne); stringhe deallocate: 0 (805 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8601298420852999 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8988629501011192


ris (2 : 2): [ 1 0.8988629501011192 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (905 interne); stringhe deallocate: 0 (825 interne)


Stringhe allocate: 1 (905 interne); stringhe deallocate: 0 (830 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2470330773678896 0.2470330773678896 0.8601299328943363 0.3179540830379886 0.8988629501011192 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8627685593064243 0.733126753581917 0.9999993134258491 0.9764704320855115 0.999999676898981 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6820454686111406 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529669226321104


ris (2 : 2): [ -1 0.7529669226321104 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (940 interne); stringhe deallocate: 0 (860 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617502e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529669226321104


ris (2 : 2): [ -1 0.7529669226321104 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (960 interne); stringhe deallocate: 0 (880 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601299328943363


ris (2 : 2): [ 1 0.8601299328943363 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (980 interne); stringhe deallocate: 0 (900 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7529668896622264 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6820459169620114


ris (2 : 2): [ -1 0.6820459169620114 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1000 interne); stringhe deallocate: 0 (920 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8601298420857724 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8988629501011192


ris (2 : 2): [ 1 0.8988629501011192 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1020 interne); stringhe deallocate: 0 (940 interne)


Stringhe allocate: 1 (1020 interne); stringhe deallocate: 0 (945 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2470330773678896 0.2470330773678896 0.8601299328943363 0.3179540830379886 0.8988629501011192 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8627685593064243 0.733126753581917 0.9999993134258491 0.9764704320855115 0.999999676898981 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.682045468611201 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529672427974209


ris (2 : 2): [ -1 0.7529672427974209 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1055 interne); stringhe deallocate: 0 (975 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892620272e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529672427974209


ris (2 : 2): [ -1 0.7529672427974209 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1075 interne); stringhe deallocate: 0 (995 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601298005396535


ris (2 : 2): [ 1 0.8601298005396535 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1095 interne); stringhe deallocate: 0 (1015 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7529668896621642 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6820462812727485


ris (2 : 2): [ -1 0.6820462812727485 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1115 interne); stringhe deallocate: 0 (1035 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8601293652481381 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.898862903140999


ris (2 : 2): [ 1 0.898862903140999 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1135 interne); stringhe deallocate: 0 (1055 interne)


Stringhe allocate: 1 (1135 interne); stringhe deallocate: 0 (1060 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2470327572025791 0.2470327572025791 0.8601298005396535 0.3179537187272515 0.898862903140999 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8627680441253758 0.7331258343069962 0.9999993134240329 0.9764702729933079 0.999999676898691 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6820454686111388 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529674028796093


ris (2 : 2): [ -1 0.7529674028796093 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1170 interne); stringhe deallocate: 0 (1090 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618805e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529674028796093


ris (2 : 2): [ -1 0.7529674028796093 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1190 interne); stringhe deallocate: 0 (1110 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601297343613895


ris (2 : 2): [ 1 0.8601297343613895 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1210 interne); stringhe deallocate: 0 (1130 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7529673664997318 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6820464634273884


ris (2 : 2): [ -1 0.6820464634273884 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1230 interne); stringhe deallocate: 0 (1150 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8601293652481656 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8988628796602537


ris (2 : 2): [ 1 0.8988628796602537 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1250 interne); stringhe deallocate: 0 (1170 interne)


Stringhe allocate: 1 (1250 interne); stringhe deallocate: 0 (1175 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2470325971203907 0.2470325971203907 0.8601297343613895 0.3179535365726116 0.8988628796602537 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8627677865353789 0.7331253746706005 0.9999993134231249 0.9764701934471464 0.999999676898546 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6820459454487065 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529681047781205


ris (2 : 2): [ -1 0.7529681047781205 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1285 interne); stringhe deallocate: 0 (1205 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617894e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529681047781205


ris (2 : 2): [ -1 0.7529681047781205 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1305 interne); stringhe deallocate: 0 (1225 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.860129444194533


ris (2 : 2): [ 1 0.860129444194533 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1325 interne); stringhe deallocate: 0 (1245 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7529678433373155 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6820472621049334


ris (2 : 2): [ -1 0.6820472621049334 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1345 interne); stringhe deallocate: 0 (1265 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8601293652481363 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8988627767057539


ris (2 : 2): [ 1 0.8988627767057539 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1365 interne); stringhe deallocate: 0 (1285 interne)


Stringhe allocate: 1 (1365 interne); stringhe deallocate: 0 (1290 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2470318952218795 0.2470318952218795 0.860129444194533 0.3179527378950666 0.8988627767057539 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.862766657101061 0.7331233593405231 0.9999993134191432 0.9764698446650637 0.99999967689791 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6820464222862901 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529682032900327


ris (2 : 2): [ -1 0.7529682032900327 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1400 interne); stringhe deallocate: 0 (1320 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892621764e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529682032900327


ris (2 : 2): [ -1 0.7529682032900327 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1420 interne); stringhe deallocate: 0 (1340 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601294034690447


ris (2 : 2): [ 1 0.8601294034690447 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1440 interne); stringhe deallocate: 0 (1360 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7529678433365756 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6820473741997783


ris (2 : 2): [ -1 0.6820473741997783 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1460 interne); stringhe deallocate: 0 (1380 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8601293652481417 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8988627622557652


ris (2 : 2): [ 1 0.8988627622557652 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1480 interne); stringhe deallocate: 0 (1400 interne)


Stringhe allocate: 1 (1480 interne); stringhe deallocate: 0 (1405 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2470317967099673 0.2470317967099673 0.8601294034690447 0.3179526258002217 0.8988627622557652 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8627664985839909 0.7331230764873542 0.9999993134185843 0.9764697957129137 0.9999996768978208 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6820468991227084 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529675629619014


ris (2 : 2): [ -1 0.7529675629619014 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1515 interne); stringhe deallocate: 0 (1435 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622814e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529675629619014


ris (2 : 2): [ -1 0.7529675629619014 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1535 interne); stringhe deallocate: 0 (1455 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601296681833306


ris (2 : 2): [ 1 0.8601296681833306 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1555 interne); stringhe deallocate: 0 (1475 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7529673664993606 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6820466455821902


ris (2 : 2): [ -1 0.6820466455821902 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1575 interne); stringhe deallocate: 0 (1495 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8601293652486142 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8988628561796606


ris (2 : 2): [ 1 0.8988628561796606 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1595 interne); stringhe deallocate: 0 (1515 interne)


Stringhe allocate: 1 (1595 interne); stringhe deallocate: 0 (1520 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2470324370380986 0.2470324370380986 0.8601296681833306 0.3179533544178098 0.8988628561796606 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.862767528945066 0.7331249150337232 0.9999993134222167 0.9764701139006622 0.999999676898401 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6820473759598098 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529682032900327


ris (2 : 2): [ -1 0.7529682032900327 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1630 interne); stringhe deallocate: 0 (1550 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892638181e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529682032900327


ris (2 : 2): [ -1 0.7529682032900327 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1650 interne); stringhe deallocate: 0 (1570 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601294034690447


ris (2 : 2): [ 1 0.8601294034690447 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1670 interne); stringhe deallocate: 0 (1590 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7529678433367133 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6820473741997783


ris (2 : 2): [ -1 0.6820473741997783 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1690 interne); stringhe deallocate: 0 (1610 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8601293652481381 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8988627622557652


ris (2 : 2): [ 1 0.8988627622557652 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1710 interne); stringhe deallocate: 0 (1630 interne)


Stringhe allocate: 1 (1710 interne); stringhe deallocate: 0 (1635 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2470317967099673 0.2470317967099673 0.8601294034690447 0.3179526258002217 0.8988627622557652 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8627664985839909 0.7331230764873542 0.9999993134185843 0.9764697957129137 0.9999996768978208 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6820464222856879 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529682032900327


ris (2 : 2): [ -1 0.7529682032900327 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1745 interne); stringhe deallocate: 0 (1665 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616983e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529682032900327


ris (2 : 2): [ -1 0.7529682032900327 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1765 interne); stringhe deallocate: 0 (1685 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601294034690447


ris (2 : 2): [ 1 0.8601294034690447 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1785 interne); stringhe deallocate: 0 (1705 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7529678433366103 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6820473741997783


ris (2 : 2): [ -1 0.6820473741997783 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1805 interne); stringhe deallocate: 0 (1725 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8601293652481656 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8988627622557652


ris (2 : 2): [ 1 0.8988627622557652 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1825 interne); stringhe deallocate: 0 (1745 interne)


Stringhe allocate: 1 (1825 interne); stringhe deallocate: 0 (1750 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2470317967099673 0.2470317967099673 0.8601294034690447 0.3179526258002217 0.8988627622557652 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8627664985839909 0.7331230764873542 0.9999993134185843 0.9764697957129137 0.9999996768978208 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6820473759599013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.752969804108286


ris (2 : 2): [ -1 0.752969804108286 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1860 interne); stringhe deallocate: 0 (1780 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617843e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.752969804108286


ris (2 : 2): [ -1 0.752969804108286 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1880 interne); stringhe deallocate: 0 (1800 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601287416792294


ris (2 : 2): [ 1 0.8601287416792294 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1900 interne); stringhe deallocate: 0 (1820 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7529697506851791 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6820491957405105


ris (2 : 2): [ -1 0.6820491957405105 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1920 interne); stringhe deallocate: 0 (1840 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8601284115738199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8988625274429811


ris (2 : 2): [ 1 0.8988625274429811 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1940 interne); stringhe deallocate: 0 (1860 interne)


Stringhe allocate: 1 (1940 interne); stringhe deallocate: 0 (1865 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.247030195891714 0.247030195891714 0.8601287416792294 0.3179508042594895 0.8988625274429811 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8627639226741981 0.7331184801145265 0.999999313409503 0.9764690002273228 0.9999996768963706 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6820473759598373 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529706045057422


ris (2 : 2): [ -1 0.7529706045057422 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1975 interne); stringhe deallocate: 0 (1895 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616958e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529706045057422


ris (2 : 2): [ -1 0.7529706045057422 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1995 interne); stringhe deallocate: 0 (1915 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601284107612571


ris (2 : 2): [ 1 0.8601284107612571 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2015 interne); stringhe deallocate: 0 (1935 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7529702275226091 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6820501064926616


ris (2 : 2): [ -1 0.6820501064926616 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2035 interne); stringhe deallocate: 0 (1955 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8601284115738253 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8988624100194561


ris (2 : 2): [ 1 0.8988624100194561 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2055 interne); stringhe deallocate: 0 (1975 interne)


Stringhe allocate: 1 (2055 interne); stringhe deallocate: 0 (1980 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2470293954942578 0.2470293954942578 0.8601284107612571 0.3179498935073384 0.8988624100194561 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8627626347324863 0.7331161819547312 0.999999313404962 0.9764686024830352 0.9999996768956453 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6820488064715837 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529741139328712


ris (2 : 2): [ -1 0.7529741139328712 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2090 interne); stringhe deallocate: 0 (2010 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622789e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529741139328712


ris (2 : 2): [ -1 0.7529741139328712 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2110 interne); stringhe deallocate: 0 (2030 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601269597976702


ris (2 : 2): [ 1 0.8601269597976702 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2130 interne); stringhe deallocate: 0 (2050 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7529740422199485 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6820540997782694


ris (2 : 2): [ -1 0.6820540997782694 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2150 interne); stringhe deallocate: 0 (2070 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.860126504225665 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8988618951509075


ris (2 : 2): [ 1 0.8988618951509075 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2170 interne); stringhe deallocate: 0 (2090 interne)


Stringhe allocate: 1 (2170 interne); stringhe deallocate: 0 (2095 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2470258860671288 0.2470258860671288 0.8601269597976702 0.3179459002217306 0.8988618951509075 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8627569875720836 0.7331061053763188 0.9999993133850509 0.9764668584583343 0.9999996768924653 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6820497601459739 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529746064800579


ris (2 : 2): [ -1 0.7529746064800579 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2205 interne); stringhe deallocate: 0 (2125 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892628847e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529746064800579


ris (2 : 2): [ -1 0.7529746064800579 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2225 interne); stringhe deallocate: 0 (2145 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601267561457751


ris (2 : 2): [ 1 0.8601267561457751 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2245 interne); stringhe deallocate: 0 (2165 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7529745190581858 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6820546602331812


ris (2 : 2): [ -1 0.6820546602331812 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2265 interne); stringhe deallocate: 0 (2185 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8601265042251889 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8988618228827996


ris (2 : 2): [ 1 0.8988618228827996 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2285 interne); stringhe deallocate: 0 (2205 interne)


Stringhe allocate: 1 (2285 interne); stringhe deallocate: 0 (2210 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2470253935199421 0.2470253935199421 0.8601267561457751 0.3179453397668188 0.8988618228827996 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8627561949888498 0.7331046911240888 0.9999993133822561 0.9764666136759677 0.999999676892019 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6820540516814768 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529714049057916


ris (2 : 2): [ -1 0.7529714049057916 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2320 interne); stringhe deallocate: 0 (2240 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618311e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529714049057916


ris (2 : 2): [ -1 0.7529714049057916 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2340 interne); stringhe deallocate: 0 (2260 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601280798484097


ris (2 : 2): [ 1 0.8601280798484097 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2360 interne); stringhe deallocate: 0 (2280 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7529711811965898 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6820510172488601


ris (2 : 2): [ -1 0.6820510172488601 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2380 interne); stringhe deallocate: 0 (2300 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.860127934736691 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8988622925997379


ris (2 : 2): [ 1 0.8988622925997379 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2400 interne); stringhe deallocate: 0 (2320 interne)


Stringhe allocate: 1 (2400 interne); stringhe deallocate: 0 (2325 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2470285950942084 0.2470285950942084 0.8601280798484097 0.3179489827511399 0.8988622925997379 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8627613467828719 0.7331138837828967 0.999999313400421 0.9764682047306824 0.9999996768949201 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6820545285171464 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529746064800568


ris (2 : 2): [ -1 0.7529746064800568 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2435 interne); stringhe deallocate: 0 (2355 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617502e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529746064800568


ris (2 : 2): [ -1 0.7529746064800568 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2455 interne); stringhe deallocate: 0 (2375 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601267561457708


ris (2 : 2): [ 1 0.8601267561457708 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2475 interne); stringhe deallocate: 0 (2395 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7529745190567576 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6820546602331788


ris (2 : 2): [ -1 0.6820546602331788 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2495 interne); stringhe deallocate: 0 (2415 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8601265042251871 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8988618228827963


ris (2 : 2): [ 1 0.8988618228827963 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2515 interne); stringhe deallocate: 0 (2435 interne)


Stringhe allocate: 1 (2515 interne); stringhe deallocate: 0 (2440 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2470253935199432 0.2470253935199432 0.8601267561457708 0.3179453397668212 0.8988618228827963 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8627561949888517 0.7331046911240922 0.9999993133822561 0.9764666136759688 0.999999676892019 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6820507138199412 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529746064800568


ris (2 : 2): [ -1 0.7529746064800568 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2550 interne); stringhe deallocate: 0 (2470 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892620272e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529746064800568


ris (2 : 2): [ -1 0.7529746064800568 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2570 interne); stringhe deallocate: 0 (2490 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601267561457708


ris (2 : 2): [ 1 0.8601267561457708 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2590 interne); stringhe deallocate: 0 (2510 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7529745190566954 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6820546602331788


ris (2 : 2): [ -1 0.6820546602331788 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2610 interne); stringhe deallocate: 0 (2530 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8601265042251924 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8988618228827963


ris (2 : 2): [ 1 0.8988618228827963 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2630 interne); stringhe deallocate: 0 (2550 interne)


Stringhe allocate: 1 (2630 interne); stringhe deallocate: 0 (2555 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2470253935199432 0.2470253935199432 0.8601267561457708 0.3179453397668212 0.8988618228827963 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8627561949888517 0.7331046911240922 0.9999993133822561 0.9764666136759688 0.999999676892019 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6820545285171447 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529826103638514


ris (2 : 2): [ -1 0.7529826103638514 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2665 interne); stringhe deallocate: 0 (2585 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618805e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529826103638514


ris (2 : 2): [ -1 0.7529826103638514 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2685 interne); stringhe deallocate: 0 (2605 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601234467866648


ris (2 : 2): [ 1 0.8601234467866648 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2705 interne); stringhe deallocate: 0 (2625 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7529821484516361 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6820637676130191


ris (2 : 2): [ -1 0.6820637676130191 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2725 interne); stringhe deallocate: 0 (2645 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8601231663655575 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8988606485142958


ris (2 : 2): [ 1 0.8988606485142958 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2745 interne); stringhe deallocate: 0 (2665 interne)


Stringhe allocate: 1 (2745 interne); stringhe deallocate: 0 (2670 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2470173896361486 0.2470173896361486 0.8601234467866648 0.3179362323869809 0.8988606485142958 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8627433153262746 0.7330817093046163 0.9999993133368406 0.976462635633668 0.9999996768847655 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6820545285175541 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529866120139952


ris (2 : 2): [ -1 0.7529866120139952 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2780 interne); stringhe deallocate: 0 (2700 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617894e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529866120139952


ris (2 : 2): [ -1 0.7529866120139952 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2800 interne); stringhe deallocate: 0 (2720 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601217915305101


ris (2 : 2): [ 1 0.8601217915305101 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2820 interne); stringhe deallocate: 0 (2740 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7529864399864854 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6820683208475546


ris (2 : 2): [ -1 0.6820683208475546 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2840 interne); stringhe deallocate: 0 (2760 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8601217358536069 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8988600609017297


ris (2 : 2): [ 1 0.8988600609017297 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2860 interne); stringhe deallocate: 0 (2780 interne)


Stringhe allocate: 1 (2860 interne); stringhe deallocate: 0 (2785 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2470133879860048 0.2470133879860048 0.8601217915305101 0.3179316791524454 0.8988600609017297 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8627368758247015 0.7330702190605021 0.9999993133141236 0.9764606465752559 0.9999996768811361 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6820635884239854 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7530041575141009


ris (2 : 2): [ -1 0.7530041575141009 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2895 interne); stringhe deallocate: 0 (2815 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892621764e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7530041575141009


ris (2 : 2): [ -1 0.7530041575141009 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2915 interne); stringhe deallocate: 0 (2835 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.860114533480388


ris (2 : 2): [ 1 0.860114533480388 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2935 interne); stringhe deallocate: 0 (2855 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7530040829605991 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6820882847227385


ris (2 : 2): [ -1 0.6820882847227385 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2955 interne); stringhe deallocate: 0 (2875 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8601141064591031 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8988574841580357


ris (2 : 2): [ 1 0.8988574841580357 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2975 interne); stringhe deallocate: 0 (2895 interne)


Stringhe allocate: 1 (2975 interne); stringhe deallocate: 0 (2900 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2469958424858991 0.2469958424858991 0.860114533480388 0.3179117152772615 0.8988574841580357 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8627086403041935 0.7330198379707547 0.9999993132145046 0.9764519235945024 0.9999996768652204 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6820678799576694 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7530066199407676


ris (2 : 2): [ -1 0.7530066199407676 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3010 interne); stringhe deallocate: 0 (2930 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622814e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7530066199407676


ris (2 : 2): [ -1 0.7530066199407676 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3030 interne); stringhe deallocate: 0 (2950 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601135146098614


ris (2 : 2): [ 1 0.8601135146098614 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3050 interne); stringhe deallocate: 0 (2970 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7530064671463332 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6820910865145997


ris (2 : 2): [ -1 0.6820910865145997 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3070 interne); stringhe deallocate: 0 (2990 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8601131527847574 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.898857122363603


ris (2 : 2): [ 1 0.898857122363603 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3090 interne); stringhe deallocate: 0 (3010 interne)


Stringhe allocate: 1 (3090 interne); stringhe deallocate: 0 (3015 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2469933800592324 0.2469933800592324 0.8601135146098614 0.3179089134854003 0.898857122363603 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8627046774412994 0.7330127670505215 0.9999993132005192 0.9764506991421995 0.9999996768629855 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6820879071182571 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529906137289507


ris (2 : 2): [ -1 0.7529906137289507 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3125 interne); stringhe deallocate: 0 (3045 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892638181e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7529906137289507


ris (2 : 2): [ -1 0.7529906137289507 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3145 interne); stringhe deallocate: 0 (3065 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601201364023977


ris (2 : 2): [ 1 0.8601201364023977 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3165 interne); stringhe deallocate: 0 (3085 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7529902546831488 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6820728741832324


ris (2 : 2): [ -1 0.6820728741832324 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3185 interne); stringhe deallocate: 0 (3105 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8601198285049776 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8988594733842714


ris (2 : 2): [ 1 0.8988594733842714 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3205 interne); stringhe deallocate: 0 (3125 interne)


Stringhe allocate: 1 (3205 interne); stringhe deallocate: 0 (3130 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2470093862710493 0.2470093862710493 0.8601201364023977 0.3179271258167676 0.8988594733842714 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8627304361256809 0.7330587285156019 0.9999993132914078 0.9764586573152043 0.9999996768775072 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6820907681414008 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7530066199406331


ris (2 : 2): [ -1 0.7530066199406331 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3240 interne); stringhe deallocate: 0 (3160 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616983e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7530066199406331


ris (2 : 2): [ -1 0.7530066199406331 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3260 interne); stringhe deallocate: 0 (3180 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601135146093374


ris (2 : 2): [ 1 0.8601135146093374 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3280 interne); stringhe deallocate: 0 (3200 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7530064671464247 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6820910865143118


ris (2 : 2): [ -1 0.6820910865143118 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3300 interne); stringhe deallocate: 0 (3220 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8601131527852353 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8988571223631877


ris (2 : 2): [ 1 0.8988571223631877 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3320 interne); stringhe deallocate: 0 (3240 interne)


Stringhe allocate: 1 (3320 interne); stringhe deallocate: 0 (3245 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2469933800593669 0.2469933800593669 0.8601135146093374 0.3179089134856882 0.8988571223631877 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8627046774415158 0.7330127670509077 0.9999993132005192 0.9764506991423253 0.9999996768629855 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6820726483292861 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7530066199406331


ris (2 : 2): [ -1 0.7530066199406331 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3355 interne); stringhe deallocate: 0 (3275 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617843e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7530066199406331


ris (2 : 2): [ -1 0.7530066199406331 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3375 interne); stringhe deallocate: 0 (3295 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601135146093374


ris (2 : 2): [ 1 0.8601135146093374 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3395 interne); stringhe deallocate: 0 (3315 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7530064671463608 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6820910865143118


ris (2 : 2): [ -1 0.6820910865143118 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3415 interne); stringhe deallocate: 0 (3335 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8601131527847592 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8988571223631877


ris (2 : 2): [ 1 0.8988571223631877 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3435 interne); stringhe deallocate: 0 (3355 interne)


Stringhe allocate: 1 (3435 interne); stringhe deallocate: 0 (3360 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2469933800593669 0.2469933800593669 0.8601135146093374 0.3179089134856882 0.8988571223631877 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8627046774415158 0.7330127670509077 0.9999993132005192 0.9764506991423253 0.9999996768629855 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6820907681412338 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7530466341732127


ris (2 : 2): [ -1 0.7530466341732127 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3470 interne); stringhe deallocate: 0 (3390 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616958e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7530466341732127


ris (2 : 2): [ -1 0.7530466341732127 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3490 interne); stringhe deallocate: 0 (3410 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8600969575640615


ris (2 : 2): [ 1 0.8600969575640615 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3510 interne); stringhe deallocate: 0 (3430 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7530465214679216 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6821366153179232


ris (2 : 2): [ -1 0.6821366153179232 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3530 interne); stringhe deallocate: 0 (3450 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8600969403214078 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8988512429068529


ris (2 : 2): [ 1 0.8988512429068529 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3550 interne); stringhe deallocate: 0 (3470 interne)


Stringhe allocate: 1 (3550 interne); stringhe deallocate: 0 (3475 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2469533658267873 0.2469533658267873 0.8600969575640615 0.3178633846820768 0.8988512429068529 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8626402763069195 0.7328978591008061 0.9999993129732099 0.9764307935693772 0.9999996768266666 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6820907681415056 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7530666339966091


ris (2 : 2): [ -1 0.7530666339966091 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3585 interne); stringhe deallocate: 0 (3505 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622789e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7530666339966091


ris (2 : 2): [ -1 0.7530666339966091 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3605 interne); stringhe deallocate: 0 (3525 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8600886646280509


ris (2 : 2): [ 1 0.8600886646280509 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3625 interne); stringhe deallocate: 0 (3545 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7530665486286399 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6821593683338515


ris (2 : 2): [ -1 0.6821593683338515 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3645 interne); stringhe deallocate: 0 (3565 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8600883572525309 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8988482924716611


ris (2 : 2): [ 1 0.8988482924716611 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3665 interne); stringhe deallocate: 0 (3585 interne)


Stringhe allocate: 1 (3665 interne); stringhe deallocate: 0 (3590 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2469333660033909 0.2469333660033909 0.8600886646280509 0.3178406316661485 0.8988482924716611 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8626080839953259 0.7328404217862811 0.999999312859329 0.9764208398560241 0.9999996768084394 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6821365445087668 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7531543206261898


ris (2 : 2): [ -1 0.7531543206261898 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3700 interne); stringhe deallocate: 0 (3620 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892628847e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7531543206261898


ris (2 : 2): [ -1 0.7531543206261898 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3720 interne); stringhe deallocate: 0 (3640 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.860052293624376


ris (2 : 2): [ 1 0.860052293624376 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3740 interne); stringhe deallocate: 0 (3660 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7531542866668284 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6822591238986111


ris (2 : 2): [ -1 0.6822591238986111 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3760 interne); stringhe deallocate: 0 (3680 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8600521176285128 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8988353487666034


ris (2 : 2): [ 1 0.8988353487666034 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3780 interne); stringhe deallocate: 0 (3700 interne)


Stringhe allocate: 1 (3780 interne); stringhe deallocate: 0 (3705 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2468456793738102 0.2468456793738102 0.860052293624376 0.3177408761013889 0.8988353487666034 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8624669136578466 0.7325885617616648 0.9999993123596498 0.9763771535147683 0.9999996767284638 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6821589558562815 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7531666250383831


ris (2 : 2): [ -1 0.7531666250383831 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3815 interne); stringhe deallocate: 0 (3735 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618311e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7531666250383831


ris (2 : 2): [ -1 0.7531666250383831 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3835 interne); stringhe deallocate: 0 (3755 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8600471840323928


ris (2 : 2): [ 1 0.8600471840323928 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3855 interne); stringhe deallocate: 0 (3775 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7531662075942949 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.682273120806281


ris (2 : 2): [ -1 0.682273120806281 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3875 interne); stringhe deallocate: 0 (3795 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.860046872420245 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8988335284754626


ris (2 : 2): [ 1 0.8988335284754626 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3895 interne); stringhe deallocate: 0 (3815 interne)


Stringhe allocate: 1 (3895 interne); stringhe deallocate: 0 (3820 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.246833374961617 0.246833374961617 0.8600471840323928 0.317726879193719 0.8988335284754626 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8624471007215094 0.7325532157561807 0.9999993122894231 0.9763710177341261 0.9999996767172151 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6822590916580156 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7530866354378484


ris (2 : 2): [ -1 0.7530866354378484 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3930 interne); stringhe deallocate: 0 (3850 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617502e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7530866354378484


ris (2 : 2): [ -1 0.7530866354378484 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3950 interne); stringhe deallocate: 0 (3870 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.860080374883606


ris (2 : 2): [ 1 0.860080374883606 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3970 interne); stringhe deallocate: 0 (3890 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7530865757889353 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6821821238731645


ris (2 : 2): [ -1 0.6821821238731645 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3990 interne); stringhe deallocate: 0 (3910 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8600802510208432 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8988453444066583


ris (2 : 2): [ 1 0.8988453444066583 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4010 interne); stringhe deallocate: 0 (3930 interne)


Stringhe allocate: 1 (4010 interne); stringhe deallocate: 0 (3935 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2469133645621516 0.2469133645621516 0.860080374883606 0.3178178761268355 0.8988453444066583 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8625758867616735 0.7327829769762224 0.9999993127454732 0.9764108811010668 0.9999996767902258 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6822729199356639 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7531666250215762


ris (2 : 2): [ -1 0.7531666250215762 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4045 interne); stringhe deallocate: 0 (3965 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892620272e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7531666250215762


ris (2 : 2): [ -1 0.7531666250215762 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4065 interne); stringhe deallocate: 0 (3985 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8600471839669001


ris (2 : 2): [ 1 0.8600471839669001 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4085 interne); stringhe deallocate: 0 (4005 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7531662075942931 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6822731207702736


ris (2 : 2): [ -1 0.6822731207702736 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4105 interne); stringhe deallocate: 0 (4025 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8600468724197965 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8988335284235562


ris (2 : 2): [ 1 0.8988335284235562 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4125 interne); stringhe deallocate: 0 (4045 interne)


Stringhe allocate: 1 (4125 interne); stringhe deallocate: 0 (4050 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2468333749784238 0.2468333749784238 0.8600471839669001 0.3177268792297264 0.8988335284235562 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.862447100748573 0.7325532158044613 0.9999993122894222 0.9763710177499125 0.9999996767172148 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6821818440383849 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7531666250215762


ris (2 : 2): [ -1 0.7531666250215762 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4160 interne); stringhe deallocate: 0 (4080 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618805e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7531666250215762


ris (2 : 2): [ -1 0.7531666250215762 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4180 interne); stringhe deallocate: 0 (4100 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8600471839669001


ris (2 : 2): [ 1 0.8600471839669001 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4200 interne); stringhe deallocate: 0 (4120 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7531662075947025 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6822731207702736


ris (2 : 2): [ -1 0.6822731207702736 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4220 interne); stringhe deallocate: 0 (4140 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8600468724197672 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8988335284235562


ris (2 : 2): [ 1 0.8988335284235562 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4240 interne); stringhe deallocate: 0 (4160 interne)


Stringhe allocate: 1 (4240 interne); stringhe deallocate: 0 (4165 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2468333749784238 0.2468333749784238 0.8600471839669001 0.3177268792297264 0.8988335284235562 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.862447100748573 0.7325532158044613 0.9999993122894222 0.9763710177499125 0.9999996767172148 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6822729199360111 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7533665665750334


ris (2 : 2): [ -1 0.7533665665750334 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4275 interne); stringhe deallocate: 0 (4195 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617894e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7533665665750334


ris (2 : 2): [ -1 0.7533665665750334 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4295 interne); stringhe deallocate: 0 (4215 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8599641426219897


ris (2 : 2): [ 1 0.8599641426219897 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4315 interne); stringhe deallocate: 0 (4235 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7533664792015733 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6825005623896345


ris (2 : 2): [ -1 0.6825005623896345 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4335 interne); stringhe deallocate: 0 (4255 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8599639027542452 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.898803940879317


ris (2 : 2): [ 1 0.898803940879317 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4355 interne); stringhe deallocate: 0 (4275 interne)


Stringhe allocate: 1 (4355 interne); stringhe deallocate: 0 (4280 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2466334334249666 0.2466334334249666 0.8599641426219897 0.3174994376103655 0.898803940879317 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8621250268582624 0.7319787085694248 0.9999993111470882 0.9762711054997304 0.9999996765343208 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6822729199364366 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7534663551475315


ris (2 : 2): [ -1 0.7534663551475315 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4390 interne); stringhe deallocate: 0 (4310 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892621764e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7534663551475315


ris (2 : 2): [ -1 0.7534663551475315 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4410 interne); stringhe deallocate: 0 (4330 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8599222618267168


ris (2 : 2): [ 1 0.8599222618267168 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4430 interne); stringhe deallocate: 0 (4350 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7534661381668979 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.682613998394045


ris (2 : 2): [ -1 0.682613998394045 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4450 interne); stringhe deallocate: 0 (4370 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8599219410847958 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8987888795432344


ris (2 : 2): [ 1 0.8987888795432344 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4470 interne); stringhe deallocate: 0 (4390 interne)


Stringhe allocate: 1 (4470 interne); stringhe deallocate: 0 (4395 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2465336448524685 0.2465336448524685 0.8599222618267168 0.317386001605955 0.8987888795432344 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8619641979029976 0.7316918739464775 0.9999993105702478 0.9762211267901251 0.9999996764411802 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6825003712601596 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7539037687111893


ris (2 : 2): [ -1 0.7539037687111893 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4505 interne); stringhe deallocate: 0 (4425 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622814e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7539037687111893


ris (2 : 2): [ -1 0.7539037687111893 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4525 interne); stringhe deallocate: 0 (4445 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8597383944653293


ris (2 : 2): [ 1 0.8597383944653293 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4545 interne); stringhe deallocate: 0 (4465 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7539033978409133 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6831111822207537


ris (2 : 2): [ -1 0.6831111822207537 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4565 interne); stringhe deallocate: 0 (4485 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8597383587784115 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8987226660270969


ris (2 : 2): [ 1 0.8987226660270969 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4585 interne); stringhe deallocate: 0 (4505 interne)


Stringhe allocate: 1 (4585 interne); stringhe deallocate: 0 (4510 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2460962312888108 0.2460962312888108 0.8597383944653293 0.3168888177792463 0.8987226660270969 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8612585561979856 0.7304337550364888 0.9999993080320502 0.9760009084186696 0.9999996760313914 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6826138585037551 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7539650990605245


ris (2 : 2): [ -1 0.7539650990605245 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4620 interne); stringhe deallocate: 0 (4540 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892638181e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7539650990605245


ris (2 : 2): [ -1 0.7539650990605245 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4640 interne); stringhe deallocate: 0 (4560 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.859712470144403


ris (2 : 2): [ 1 0.859712470144403 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4660 interne); stringhe deallocate: 0 (4580 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.753964909834516 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6831808674531518


ris (2 : 2): [ -1 0.6831808674531518 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4680 interne); stringhe deallocate: 0 (4600 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8597121327347379 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8987132851468613


ris (2 : 2): [ 1 0.8987132851468613 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4700 interne); stringhe deallocate: 0 (4620 interne)


Stringhe allocate: 1 (4700 interne); stringhe deallocate: 0 (4625 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2460349009394756 0.2460349009394756 0.859712470144403 0.3168191325468482 0.8987132851468613 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8611595317222269 0.7302572489321741 0.9999993076734269 0.9759698906155321 0.9999996759732922 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6831107228227973 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.753566183860264


ris (2 : 2): [ -1 0.753566183860264 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4735 interne); stringhe deallocate: 0 (4655 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616983e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.753566183860264


ris (2 : 2): [ -1 0.753566183860264 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4755 interne); stringhe deallocate: 0 (4675 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8598804596384039


ris (2 : 2): [ 1 0.8598804596384039 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4775 interne); stringhe deallocate: 0 (4695 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.753565797132997 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6827274968362153


ris (2 : 2): [ -1 0.6827274968362153 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4795 interne); stringhe deallocate: 0 (4715 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8598804562515543 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8987738765261785


ris (2 : 2): [ 1 0.8987738765261785 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4815 interne); stringhe deallocate: 0 (4735 interne)


Stringhe allocate: 1 (4815 interne); stringhe deallocate: 0 (4740 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.246433816139736 0.246433816139736 0.8598804596384039 0.3172725031637848 0.8987738765261785 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8618032476612093 0.7314048549447954 0.9999993099940082 0.9761710219692803 0.9999996763483734 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6831808178849501 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7539650969590739


ris (2 : 2): [ -1 0.7539650969590739 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4850 interne); stringhe deallocate: 0 (4770 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617843e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7539650969590739


ris (2 : 2): [ -1 0.7539650969590739 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4870 interne); stringhe deallocate: 0 (4790 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8597124619656079


ris (2 : 2): [ 1 0.8597124619656079 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4890 interne); stringhe deallocate: 0 (4810 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7539649098343491 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6831808629377779


ris (2 : 2): [ -1 0.6831808629377779 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4910 interne); stringhe deallocate: 0 (4830 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8597121327347139 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8987132786625633


ris (2 : 2): [ 1 0.8987132786625633 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4930 interne); stringhe deallocate: 0 (4850 interne)


Stringhe allocate: 1 (4930 interne); stringhe deallocate: 0 (4855 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2460349030409261 0.2460349030409261 0.8597124619656079 0.3168191370622221 0.8987132786625633 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8611595351156031 0.7302572549804893 0.9999993076733137 0.9759698926265978 0.999999675973252 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.682727345747435 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7539650969590739


ris (2 : 2): [ -1 0.7539650969590739 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4965 interne); stringhe deallocate: 0 (4885 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616958e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7539650969590739


ris (2 : 2): [ -1 0.7539650969590739 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4985 interne); stringhe deallocate: 0 (4905 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8597124619656079


ris (2 : 2): [ 1 0.8597124619656079 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5005 interne); stringhe deallocate: 0 (4925 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7539649098346208 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6831808629377779


ris (2 : 2): [ -1 0.6831808629377779 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5025 interne); stringhe deallocate: 0 (4945 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8597121327351864 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8987132786625633


ris (2 : 2): [ 1 0.8987132786625633 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5045 interne); stringhe deallocate: 0 (4965 interne)


Stringhe allocate: 1 (5045 interne); stringhe deallocate: 0 (4970 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2460349030409261 0.2460349030409261 0.8597124619656079 0.3168191370622221 0.8987132786625633 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8611595351156031 0.7302572549804893 0.9999993076733137 0.9759698926265978 0.999999675973252 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6831808178851579 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7549615707818551


ris (2 : 2): [ -1 0.7549615707818551 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5080 interne); stringhe deallocate: 0 (5000 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622789e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7549615707818551


ris (2 : 2): [ -1 0.7549615707818551 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5100 interne); stringhe deallocate: 0 (5020 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8592908681189094


ris (2 : 2): [ 1 0.8592908681189094 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5120 interne); stringhe deallocate: 0 (5040 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7549614994953391 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6843130099494948


ris (2 : 2): [ -1 0.6843130099494948 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5140 interne); stringhe deallocate: 0 (5060 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8592906086868588 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8985605949396012


ris (2 : 2): [ 1 0.8985605949396012 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5160 interne); stringhe deallocate: 0 (5080 interne)


Stringhe allocate: 1 (5160 interne); stringhe deallocate: 0 (5085 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2450384292181449 0.2450384292181449 0.8592908681189094 0.3156869900505052 0.8985605949396012 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8595477503597138 0.7273860088495232 0.9999993018150508 0.9754606790430054 0.9999996750261588 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6831808178852317 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7554552673219962


ris (2 : 2): [ -1 0.7554552673219962 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5195 interne); stringhe deallocate: 0 (5115 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892628847e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7554552673219962


ris (2 : 2): [ -1 0.7554552673219962 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5215 interne); stringhe deallocate: 0 (5135 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8590710962524285


ris (2 : 2): [ 1 0.8590710962524285 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5235 interne); stringhe deallocate: 0 (5155 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7554550259551585 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6848719433511562


ris (2 : 2): [ -1 0.6848719433511562 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5255 interne); stringhe deallocate: 0 (5175 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8590707867569547 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8984775792135077


ris (2 : 2): [ 1 0.8984775792135077 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5275 interne); stringhe deallocate: 0 (5195 interne)


Stringhe allocate: 1 (5275 interne); stringhe deallocate: 0 (5200 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2445447326780038 0.2445447326780038 0.8590710962524285 0.3151280566488438 0.8984775792135077 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8587472542508967 0.7259611644545947 0.9999992987415787 0.9752055838558384 0.9999996745100532 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.684312829299885 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7576171182974213


ris (2 : 2): [ -1 0.7576171182974213 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5310 interne); stringhe deallocate: 0 (5230 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618311e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7576171182974213


ris (2 : 2): [ -1 0.7576171182974213 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5330 interne); stringhe deallocate: 0 (5250 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8581022815891004


ris (2 : 2): [ 1 0.8581022815891004 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5350 interne); stringhe deallocate: 0 (5270 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7576170056289628 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.687318176602885


ris (2 : 2): [ -1 0.687318176602885 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5370 interne); stringhe deallocate: 0 (5290 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8581018536514566 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8981097371649077


ris (2 : 2): [ 1 0.8981097371649077 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5390 interne); stringhe deallocate: 0 (5310 interne)


Stringhe allocate: 1 (5390 interne); stringhe deallocate: 0 (5315 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2423828817025787 0.2423828817025787 0.8581022815891004 0.312681823397115 0.8981097371649077 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8552277893131745 0.7197056868642325 0.9999992850307808 0.9740597698084981 0.9999996722133129 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6848716824478105 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7579191418582106


ris (2 : 2): [ -1 0.7579191418582106 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5425 interne); stringhe deallocate: 0 (5345 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617502e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7579191418582106


ris (2 : 2): [ -1 0.7579191418582106 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5445 interne); stringhe deallocate: 0 (5365 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8579638331206413


ris (2 : 2): [ 1 0.8579638331206413 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5465 interne); stringhe deallocate: 0 (5385 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7579188435501658 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6876593736259689


ris (2 : 2): [ -1 0.6876593736259689 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5485 interne); stringhe deallocate: 0 (5405 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8579635708755831 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8980562949221437


ris (2 : 2): [ 1 0.8980562949221437 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5505 interne); stringhe deallocate: 0 (5425 interne)


Stringhe allocate: 1 (5505 interne); stringhe deallocate: 0 (5430 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2420808581417894 0.2420808581417894 0.8579638331206413 0.3123406263740312 0.8980562949221437 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8547343721742803 0.7188298433624676 0.9999992830496689 0.973896092820072 0.9999996718782834 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6873178570694529 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7559499293985368


ris (2 : 2): [ -1 0.7559499293985368 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5540 interne); stringhe deallocate: 0 (5460 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892620272e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7559499293985368


ris (2 : 2): [ -1 0.7559499293985368 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5560 interne); stringhe deallocate: 0 (5480 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8588531446412059


ris (2 : 2): [ 1 0.8588531446412059 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5580 interne); stringhe deallocate: 0 (5500 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7559495060867247 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6854323563196472


ris (2 : 2): [ -1 0.6854323563196472 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5600 interne); stringhe deallocate: 0 (5520 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8588528721761044 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8983959066711291


ris (2 : 2): [ 1 0.8983959066711291 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5620 interne); stringhe deallocate: 0 (5540 interne)


Stringhe allocate: 1 (5620 interne); stringhe deallocate: 0 (5545 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2440500706014632 0.2440500706014632 0.8588531446412059 0.3145676436803528 0.8983959066711291 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8579439457141708 0.7245320835961064 0.9999992956802009 0.9749473308169796 0.9999996740014983 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6876592724746642 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7579188788121232


ris (2 : 2): [ -1 0.7579188788121232 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5655 interne); stringhe deallocate: 0 (5575 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618805e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7579188788121232


ris (2 : 2): [ -1 0.7579188788121232 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5675 interne); stringhe deallocate: 0 (5595 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8579628154665608


ris (2 : 2): [ 1 0.8579628154665608 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5695 interne); stringhe deallocate: 0 (5615 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7579188435505131 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6876588001675033


ris (2 : 2): [ -1 0.6876588001675033 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5715 interne); stringhe deallocate: 0 (5635 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8579626172012631 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8980554868169538


ris (2 : 2): [ 1 0.8980554868169538 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5735 interne); stringhe deallocate: 0 (5655 interne)


Stringhe allocate: 1 (5735 interne); stringhe deallocate: 0 (5660 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2420811211878768 0.2420811211878768 0.8579628154665608 0.3123411998324968 0.8980554868169538 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8547348020881211 0.7188306063621955 0.9999992830350866 0.9738963687196682 0.9999996718732148 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6854319661091068 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7579188788121232


ris (2 : 2): [ -1 0.7579188788121232 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5770 interne); stringhe deallocate: 0 (5690 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617894e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7579188788121232


ris (2 : 2): [ -1 0.7579188788121232 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5790 interne); stringhe deallocate: 0 (5710 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8579628154665608


ris (2 : 2): [ 1 0.8579628154665608 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5810 interne); stringhe deallocate: 0 (5730 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7579188435509385 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6876588001675033


ris (2 : 2): [ -1 0.6876588001675033 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5830 interne); stringhe deallocate: 0 (5750 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8579626172012906 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8980554868169538


ris (2 : 2): [ 1 0.8980554868169538 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5850 interne); stringhe deallocate: 0 (5770 interne)


Stringhe allocate: 1 (5850 interne); stringhe deallocate: 0 (5775 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2420811211878768 0.2420811211878768 0.8579628154665608 0.3123411998324968 0.8980554868169538 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8547348020881211 0.7188306063621955 0.9999992830350866 0.9738963687196682 0.9999996718732148 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6876587956383409 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7628211805106592


ris (2 : 2): [ -1 0.7628211805106592 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5885 interne); stringhe deallocate: 0 (5805 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892621764e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7628211805106592


ris (2 : 2): [ -1 0.7628211805106592 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5905 interne); stringhe deallocate: 0 (5825 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8556972718626366


ris (2 : 2): [ 1 0.8556972718626366 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5925 interne); stringhe deallocate: 0 (5845 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7628207295365268 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6931928703514492


ris (2 : 2): [ -1 0.6931928703514492 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5945 interne); stringhe deallocate: 0 (5865 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8556971638626383 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8971748338112958


ris (2 : 2): [ 1 0.8971748338112958 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5965 interne); stringhe deallocate: 0 (5885 interne)


Stringhe allocate: 1 (5965 interne); stringhe deallocate: 0 (5890 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2371788194893408 0.2371788194893408 0.8556972718626366 0.3068071296485508 0.8971748338112958 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8466762645455249 0.7045647835713853 0.9999992498248231 0.9711042996770563 0.9999996663027391 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.687658795637601 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7651606460897759


ris (2 : 2): [ -1 0.7651606460897759 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6000 interne); stringhe deallocate: 0 (5920 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622814e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7651606460897759


ris (2 : 2): [ -1 0.7651606460897759 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6020 interne); stringhe deallocate: 0 (5940 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8543446692219082


ris (2 : 2): [ 1 0.8543446692219082 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6040 interne); stringhe deallocate: 0 (5960 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7651605694717727 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.6957788072075811


ris (2 : 2): [ -1 0.6957788072075811 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6060 interne); stringhe deallocate: 0 (5980 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8543443768448213 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8965703506513134


ris (2 : 2): [ 1 0.8965703506513134 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6080 interne); stringhe deallocate: 0 (6000 interne)


Stringhe allocate: 1 (6080 interne); stringhe deallocate: 0 (6005 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2348393539102242 0.2348393539102242 0.8543446692219082 0.3042211927924189 0.8965703506513134 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8428042877039261 0.6977350749942133 0.9999992292683373 0.969707376971954 0.9999996624245091 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6931924908584914 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7753730073407812


ris (2 : 2): [ -1 0.7753730073407812 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6115 interne); stringhe deallocate: 0 (6035 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892638181e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7753730073407812


ris (2 : 2): [ -1 0.7753730073407812 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6135 interne); stringhe deallocate: 0 (6055 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8483788715735284


ris (2 : 2): [ 1 0.8483788715735284 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6155 interne); stringhe deallocate: 0 (6075 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7753729908892035 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7070412667566143


ris (2 : 2): [ -1 0.7070412667566143 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6175 interne); stringhe deallocate: 0 (6095 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8483786671590146 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.893895994806124


ris (2 : 2): [ 1 0.893895994806124 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6195 interne); stringhe deallocate: 0 (6115 interne)


Stringhe allocate: 1 (6195 interne); stringhe deallocate: 0 (6120 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2246269926592188 0.2246269926592188 0.8483788715735284 0.2929587332433857 0.893895994806124 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8258229613325557 0.667953005558405 0.9999991316676793 0.962875869685895 0.9999996447183874 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6957783787676215 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7767879893063654


ris (2 : 2): [ -1 0.7767879893063654 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6230 interne); stringhe deallocate: 0 (6150 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616983e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7767879893063654


ris (2 : 2): [ -1 0.7767879893063654 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6250 interne); stringhe deallocate: 0 (6170 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8475413446659554


ris (2 : 2): [ 1 0.8475413446659554 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6270 interne); stringhe deallocate: 0 (6190 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7767877667374892 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7086018362116476


ris (2 : 2): [ -1 0.7086018362116476 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6290 interne); stringhe deallocate: 0 (6210 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8475413411087338 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.893523733488222


ris (2 : 2): [ 1 0.893523733488222 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6310 interne); stringhe deallocate: 0 (6230 interne)


Stringhe allocate: 1 (6310 interne); stringhe deallocate: 0 (6235 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2232120106936346 0.2232120106936346 0.8475413446659554 0.2913981637883524 0.893523733488222 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8234724275490526 0.6638506606397681 0.9999991170102771 0.9618268977114728 0.9999996421812039 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7070412724442763 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7675196726850876


ris (2 : 2): [ -1 0.7675196726850876 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6345 interne); stringhe deallocate: 0 (6265 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617843e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7675196726850876


ris (2 : 2): [ -1 0.7675196726850876 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6365 interne); stringhe deallocate: 0 (6285 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8530211402693315


ris (2 : 2): [ 1 0.8530211402693315 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6385 interne); stringhe deallocate: 0 (6305 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7675194828934311 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.698391421190612


ris (2 : 2): [ -1 0.698391421190612 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6405 interne); stringhe deallocate: 0 (6325 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8530206768936735 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8959864162281729


ris (2 : 2): [ 1 0.8959864162281729 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6425 interne); stringhe deallocate: 0 (6345 interne)


Stringhe allocate: 1 (6425 interne); stringhe deallocate: 0 (6350 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2324803273149124 0.2324803273149124 0.8530211402693315 0.301608578809388 0.8959864162281729 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8388883777060376 0.6908433188571265 0.9999992086085506 0.9682333941389877 0.9999996586353204 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.708601483625853 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7767548954431029


ris (2 : 2): [ -1 0.7767548954431029 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6460 interne); stringhe deallocate: 0 (6380 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616958e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7767548954431029


ris (2 : 2): [ -1 0.7767548954431029 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6480 interne); stringhe deallocate: 0 (6400 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8474163750703943


ris (2 : 2): [ 1 0.8474163750703943 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6500 interne); stringhe deallocate: 0 (6420 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.776754864973781 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7085244571141387


ris (2 : 2): [ -1 0.7085244571141387 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6520 interne); stringhe deallocate: 0 (6440 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8474159329361246 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8934238684463005


ris (2 : 2): [ 1 0.8934238684463005 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6540 interne); stringhe deallocate: 0 (6460 interne)


Stringhe allocate: 1 (6540 interne); stringhe deallocate: 0 (6465 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2232451045568971 0.2232451045568971 0.8474163750703943 0.2914755428858613 0.8934238684463005 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.823527366971696 0.6639464940899902 0.9999991148020953 0.9618795277661132 0.9999996414974869 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6983909695575212 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7767548954431029


ris (2 : 2): [ -1 0.7767548954431029 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6575 interne); stringhe deallocate: 0 (6495 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622789e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7767548954431029


ris (2 : 2): [ -1 0.7767548954431029 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6595 interne); stringhe deallocate: 0 (6515 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8474163750703943


ris (2 : 2): [ 1 0.8474163750703943 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6615 interne); stringhe deallocate: 0 (6535 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7767548649738547 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7085244571141387


ris (2 : 2): [ -1 0.7085244571141387 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6635 interne); stringhe deallocate: 0 (6555 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8474159329361299 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8934238684463005


ris (2 : 2): [ 1 0.8934238684463005 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6655 interne); stringhe deallocate: 0 (6575 interne)


Stringhe allocate: 1 (6655 interne); stringhe deallocate: 0 (6580 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2232451045568971 0.2232451045568971 0.8474163750703943 0.2914755428858613 0.8934238684463005 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.823527366971696 0.6639464940899902 0.9999991148020953 0.9618795277661132 0.9999996414974869 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7085242360065696 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7768905355734621


ris (2 : 2): [ -1 0.7768905355734621 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6690 interne); stringhe deallocate: 0 (6610 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892628847e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7768905355734621


ris (2 : 2): [ -1 0.7768905355734621 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6710 interne); stringhe deallocate: 0 (6630 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8473267401781564


ris (2 : 2): [ 1 0.8473267401781564 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6730 interne); stringhe deallocate: 0 (6650 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7768902867278635 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.708671422549729


ris (2 : 2): [ -1 0.708671422549729 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6750 interne); stringhe deallocate: 0 (6670 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8473262875508603 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8933812367587032


ris (2 : 2): [ 1 0.8933812367587032 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6770 interne); stringhe deallocate: 0 (6690 interne)


Stringhe allocate: 1 (6770 interne); stringhe deallocate: 0 (6695 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2231094644265379 0.2231094644265379 0.8473267401781564 0.291328577450271 0.8933812367587032 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8233022014385774 0.6635537425677869 0.9999991132148689 0.9617795125531059 0.9999996412052152 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7085242360076487 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7769582629228355


ris (2 : 2): [ -1 0.7769582629228355 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6805 interne); stringhe deallocate: 0 (6725 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618311e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7769582629228355


ris (2 : 2): [ -1 0.7769582629228355 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6825 interne); stringhe deallocate: 0 (6745 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8472817561321868


ris (2 : 2): [ 1 0.8472817561321868 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6845 interne); stringhe deallocate: 0 (6765 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7769579976028398 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7087447440912713


ris (2 : 2): [ -1 0.7087447440912713 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6865 interne); stringhe deallocate: 0 (6785 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8472814648575131 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8933597956662664


ris (2 : 2): [ 1 0.8933597956662664 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6885 interne); stringhe deallocate: 0 (6805 interne)


Stringhe allocate: 1 (6885 interne); stringhe deallocate: 0 (6810 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2230417370771645 0.2230417370771645 0.8472817561321868 0.2912552559087287 0.8933597956662664 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8231897844706779 0.6633576712701736 0.9999991124172332 0.961729527062867 0.9999996410581306 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7086711018508867 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7772551595071028


ris (2 : 2): [ -1 0.7772551595071028 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6920 interne); stringhe deallocate: 0 (6840 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617502e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7772551595071028


ris (2 : 2): [ -1 0.7772551595071028 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6940 interne); stringhe deallocate: 0 (6860 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.847084409068279


ris (2 : 2): [ 1 0.847084409068279 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6960 interne); stringhe deallocate: 0 (6880 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7772550671524607 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7090661235402576


ris (2 : 2): [ -1 0.7090661235402576 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6980 interne); stringhe deallocate: 0 (6900 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8470840542740445 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8932657025933216


ris (2 : 2): [ 1 0.8932657025933216 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7000 interne); stringhe deallocate: 0 (6920 interne)


Stringhe allocate: 1 (7000 interne); stringhe deallocate: 0 (6925 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2227448404928972 0.2227448404928972 0.847084409068279 0.2909338764597425 0.8932657025933216 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8226970782321246 0.662498440488602 0.9999991089094833 0.9615097438885796 0.9999996404119447 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7087445347733103 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7772967979877574


ris (2 : 2): [ -1 0.7772967979877574 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7035 interne); stringhe deallocate: 0 (6955 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892620272e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7772967979877574


ris (2 : 2): [ -1 0.7772967979877574 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7055 interne); stringhe deallocate: 0 (6975 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8470566561427428


ris (2 : 2): [ 1 0.8470566561427428 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7075 interne); stringhe deallocate: 0 (6995 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7772965519851622 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7091111755366283


ris (2 : 2): [ -1 0.7091111755366283 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7095 interne); stringhe deallocate: 0 (7015 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8470563977188395 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8932524552041847


ris (2 : 2): [ 1 0.8932524552041847 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7115 interne); stringhe deallocate: 0 (7035 interne)


Stringhe allocate: 1 (7115 interne); stringhe deallocate: 0 (7040 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2227032020122426 0.2227032020122426 0.8470566561427428 0.2908888244633717 0.8932524552041847 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8226279911378268 0.6623779749613803 0.9999991084150777 0.9614788441372273 0.9999996403208745 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7090659230178771 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7770260107422642


ris (2 : 2): [ -1 0.7770260107422642 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7150 interne); stringhe deallocate: 0 (7070 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618805e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7770260107422642


ris (2 : 2): [ -1 0.7770260107422642 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7170 interne); stringhe deallocate: 0 (7090 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8472368086211743


ris (2 : 2): [ 1 0.8472368086211743 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7190 interne); stringhe deallocate: 0 (7110 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7770257084797123 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7088181010326408


ris (2 : 2): [ -1 0.7088181010326408 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7210 interne); stringhe deallocate: 0 (7130 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8472366421646456 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8933383820105297


ris (2 : 2): [ 1 0.8933383820105297 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7230 interne); stringhe deallocate: 0 (7150 interne)


Stringhe allocate: 1 (7230 interne); stringhe deallocate: 0 (7155 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2229739892577358 0.2229739892577358 0.8472368086211743 0.2911818989673592 0.8933383820105297 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8230773415818691 0.6631615649125395 0.999999111619529 0.9616794590362336 0.999999640911174 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7091107457111576 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7772967971859057


ris (2 : 2): [ -1 0.7772967971859057 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7265 interne); stringhe deallocate: 0 (7185 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617894e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7772967971859057


ris (2 : 2): [ -1 0.7772967971859057 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7285 interne); stringhe deallocate: 0 (7205 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8470566531196632


ris (2 : 2): [ 1 0.8470566531196632 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7305 interne); stringhe deallocate: 0 (7225 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7772965519859971 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7091111733001936


ris (2 : 2): [ -1 0.7091111733001936 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7325 interne); stringhe deallocate: 0 (7245 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8470563977193173 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8932524527824008


ris (2 : 2): [ 1 0.8932524527824008 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7345 interne); stringhe deallocate: 0 (7265 interne)


Stringhe allocate: 1 (7345 interne); stringhe deallocate: 0 (7270 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2227032028140943 0.2227032028140943 0.8470566531196632 0.2908888266998064 0.8932524527824008 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8226279924682383 0.6623779772811504 0.9999991084150238 0.9614788456716767 0.999999640320858 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7088179676964463 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7772967971859057


ris (2 : 2): [ -1 0.7772967971859057 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7380 interne); stringhe deallocate: 0 (7300 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892621764e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7772967971859057


ris (2 : 2): [ -1 0.7772967971859057 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7400 interne); stringhe deallocate: 0 (7320 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8470566531196632


ris (2 : 2): [ 1 0.8470566531196632 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7420 interne); stringhe deallocate: 0 (7340 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7772965519852573 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7091111733001936


ris (2 : 2): [ -1 0.7091111733001936 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7440 interne); stringhe deallocate: 0 (7360 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8470563977188412 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8932524527824008


ris (2 : 2): [ 1 0.8932524527824008 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7460 interne); stringhe deallocate: 0 (7380 interne)


Stringhe allocate: 1 (7460 interne); stringhe deallocate: 0 (7385 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2227032028140943 0.2227032028140943 0.8470566531196632 0.2908888266998064 0.8932524527824008 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8226279924682383 0.6623779772811504 0.9999991084150238 0.9614788456716767 0.999999640320858 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7091107457108432 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7779733515579103


ris (2 : 2): [ -1 0.7779733515579103 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7495 interne); stringhe deallocate: 0 (7415 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622814e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7779733515579103


ris (2 : 2): [ -1 0.7779733515579103 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7515 interne); stringhe deallocate: 0 (7435 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8466055258523711


ris (2 : 2): [ 1 0.8466055258523711 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7535 interne); stringhe deallocate: 0 (7455 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7779731839126907 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7098431366432507


ris (2 : 2): [ -1 0.7098431366432507 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7555 interne); stringhe deallocate: 0 (7475 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8466053097672086 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8930370743396087


ris (2 : 2): [ 1 0.8930370743396087 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7575 interne); stringhe deallocate: 0 (7495 interne)


Stringhe allocate: 1 (7575 interne); stringhe deallocate: 0 (7500 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2220266484420898 0.2220266484420898 0.8466055258523711 0.2901568633567493 0.8930370743396087 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8215059145890873 0.6604219668175184 0.9999991003398199 0.9609737065267043 0.9999996388369843 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7091107457107864 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7783093164747269


ris (2 : 2): [ -1 0.7783093164747269 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7610 interne); stringhe deallocate: 0 (7530 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892638181e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7783093164747269


ris (2 : 2): [ -1 0.7783093164747269 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7630 interne); stringhe deallocate: 0 (7550 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8463758266271578


ris (2 : 2): [ 1 0.8463758266271578 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7650 interne); stringhe deallocate: 0 (7570 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7783088772722602 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7102050817324692


ris (2 : 2): [ -1 0.7102050817324692 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7670 interne); stringhe deallocate: 0 (7590 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8463754742569254 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8929262743836202


ris (2 : 2): [ 1 0.8929262743836202 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7690 interne); stringhe deallocate: 0 (7610 interne)


Stringhe allocate: 1 (7690 interne); stringhe deallocate: 0 (7615 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2216906835252731 0.2216906835252731 0.8463758266271578 0.2897949182675308 0.8929262743836202 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8209490586998145 0.6594516214334263 0.9999990962001315 0.9607217492154098 0.9999996380712326 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7098426907488227 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7797809269686601


ris (2 : 2): [ -1 0.7797809269686601 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7725 interne); stringhe deallocate: 0 (7645 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616983e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7797809269686601


ris (2 : 2): [ -1 0.7797809269686601 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7745 interne); stringhe deallocate: 0 (7665 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8453662769279471


ris (2 : 2): [ 1 0.8453662769279471 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7765 interne); stringhe deallocate: 0 (7685 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7797808735795302 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7117895279454942


ris (2 : 2): [ -1 0.7117895279454942 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7785 interne); stringhe deallocate: 0 (7705 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8453660099930147 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8924386562975907


ris (2 : 2): [ 1 0.8924386562975907 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7805 interne); stringhe deallocate: 0 (7725 interne)


Stringhe allocate: 1 (7805 interne); stringhe deallocate: 0 (7730 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2202190730313399 0.2202190730313399 0.8453662769279471 0.2882104720545058 0.8924386562975907 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8185129665819375 0.6552094426491577 0.9999990777787977 0.9596016816625417 0.9999996346819043 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.710205086988954 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7799867386044657


ris (2 : 2): [ -1 0.7799867386044657 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7840 interne); stringhe deallocate: 0 (7760 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617843e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7799867386044657


ris (2 : 2): [ -1 0.7799867386044657 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7860 interne); stringhe deallocate: 0 (7780 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8452234045799518


ris (2 : 2): [ 1 0.8452234045799518 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7880 interne); stringhe deallocate: 0 (7800 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7799863903946518 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7120106797318309


ris (2 : 2): [ -1 0.7120106797318309 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7900 interne); stringhe deallocate: 0 (7820 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8452229588460263 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8923693394796781


ris (2 : 2): [ 1 0.8923693394796781 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7920 interne); stringhe deallocate: 0 (7840 interne)


Stringhe allocate: 1 (7920 interne); stringhe deallocate: 0 (7845 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2200132613955343 0.2200132613955343 0.8452234045799518 0.2879893202681692 0.8923693394796781 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8181727040043375 0.6546172732954974 0.9999990751416417 0.959443113760475 0.9999996341975282 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7117891400284409 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7786457786224686


ris (2 : 2): [ -1 0.7786457786224686 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7955 interne); stringhe deallocate: 0 (7875 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616958e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7786457786224686


ris (2 : 2): [ -1 0.7786457786224686 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7975 interne); stringhe deallocate: 0 (7895 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8461469864682163


ris (2 : 2): [ 1 0.8461469864682163 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7995 interne); stringhe deallocate: 0 (7915 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7786455243060564 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7105678716444144


ris (2 : 2): [ -1 0.7105678716444144 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8015 interne); stringhe deallocate: 0 (7935 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8461465924209897 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8928161169368848


ris (2 : 2): [ 1 0.8928161169368848 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8035 interne); stringhe deallocate: 0 (7955 interne)


Stringhe allocate: 1 (8035 interne); stringhe deallocate: 0 (7960 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2213542213775314 0.2213542213775314 0.8461469864682163 0.2894321283555856 0.8928161169368848 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8203916265626033 0.6584805139216434 0.9999990920569843 0.9604677524502199 0.9999996373083119 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7120103924701189 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7799866382681546


ris (2 : 2): [ -1 0.7799866382681546 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8070 interne); stringhe deallocate: 0 (7990 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622789e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7799866382681546


ris (2 : 2): [ -1 0.7799866382681546 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8090 interne); stringhe deallocate: 0 (8010 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8452230284693343


ris (2 : 2): [ 1 0.8452230284693343 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8110 interne); stringhe deallocate: 0 (8030 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7799863903949973 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7120103971754795


ris (2 : 2): [ -1 0.7120103971754795 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8130 interne); stringhe deallocate: 0 (8050 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8452229588455777 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8923690380129545


ris (2 : 2): [ 1 0.8923690380129545 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8150 interne); stringhe deallocate: 0 (8070 interne)


Stringhe allocate: 1 (8150 interne); stringhe deallocate: 0 (8075 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2200133617318454 0.2200133617318454 0.8452230284693343 0.2879896028245205 0.8923690380129545 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8181728698596034 0.6546175619172947 0.9999990751346894 0.9594433167073063 0.9999996341954203 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7105674832294699 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7799866382681546


ris (2 : 2): [ -1 0.7799866382681546 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8185 interne); stringhe deallocate: 0 (8105 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892628847e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7799866382681546


ris (2 : 2): [ -1 0.7799866382681546 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8205 interne); stringhe deallocate: 0 (8125 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8452230284693343


ris (2 : 2): [ 1 0.8452230284693343 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8225 interne); stringhe deallocate: 0 (8145 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7799863903960764 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7120103971754795


ris (2 : 2): [ -1 0.7120103971754795 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8245 interne); stringhe deallocate: 0 (8165 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8452229588455484 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8923690380129545


ris (2 : 2): [ 1 0.8923690380129545 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8265 interne); stringhe deallocate: 0 (8185 interne)


Stringhe allocate: 1 (8265 interne); stringhe deallocate: 0 (8190 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2200133617318454 0.2200133617318454 0.8452230284693343 0.2879896028245205 0.8923690380129545 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8181728698596034 0.6546175619172947 0.9999990751346894 0.9594433167073063 0.9999996341954203 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7120103924712717 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7833285518575532


ris (2 : 2): [ -1 0.7833285518575532 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8300 interne); stringhe deallocate: 0 (8220 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618311e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7833285518575532


ris (2 : 2): [ -1 0.7833285518575532 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8320 interne); stringhe deallocate: 0 (8240 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8428950032421083


ris (2 : 2): [ 1 0.8428950032421083 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8340 interne); stringhe deallocate: 0 (8260 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7833285420364335 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7155986504818761


ris (2 : 2): [ -1 0.7155986504818761 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8360 interne); stringhe deallocate: 0 (8280 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8428945630020479 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8912376838697207


ris (2 : 2): [ 1 0.8912376838697207 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8380 interne); stringhe deallocate: 0 (8300 interne)


Stringhe allocate: 1 (8380 interne); stringhe deallocate: 0 (8305 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2166714481424468 0.2166714481424468 0.8428950032421083 0.2844013495181239 0.8912376838697207 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8126659109371737 0.6450454151954281 0.9999990310851687 0.9567925561995858 0.9999996261982309 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7120103924697832 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7849424000608759


ris (2 : 2): [ -1 0.7849424000608759 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8415 interne); stringhe deallocate: 0 (8335 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617502e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7849424000608759


ris (2 : 2): [ -1 0.7849424000608759 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8435 interne); stringhe deallocate: 0 (8355 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8416314522462527


ris (2 : 2): [ 1 0.8416314522462527 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8455 interne); stringhe deallocate: 0 (8375 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7849421589798533 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7172909897203755


ris (2 : 2): [ -1 0.7172909897203755 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8475 interne); stringhe deallocate: 0 (8395 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8416314213704403 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8905969469458335


ris (2 : 2): [ 1 0.8905969469458335 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8495 interne); stringhe deallocate: 0 (8415 interne)


Stringhe allocate: 1 (8495 interne); stringhe deallocate: 0 (8420 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2150575999391241 0.2150575999391241 0.8416314522462527 0.2827090102796245 0.8905969469458335 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8100209264695447 0.6404554945520078 0.9999990063049042 0.9554903843756881 0.999999621591758 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7155985920853221 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7919915031741583


ris (2 : 2): [ -1 0.7919915031741583 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8530 interne); stringhe deallocate: 0 (8450 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892620272e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7919915031741583


ris (2 : 2): [ -1 0.7919915031741583 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8550 interne); stringhe deallocate: 0 (8470 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8360720968114072


ris (2 : 2): [ 1 0.8360720968114072 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8570 interne); stringhe deallocate: 0 (8490 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7919912426895079 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7246666639100429


ris (2 : 2): [ -1 0.7246666639100429 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8590 interne); stringhe deallocate: 0 (8510 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.836071976942474 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8877741088825593


ris (2 : 2): [ 1 0.8877741088825593 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8610 interne); stringhe deallocate: 0 (8530 interne)


Stringhe allocate: 1 (8610 interne); stringhe deallocate: 0 (8535 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2080084968258417 0.2080084968258417 0.8360720968114072 0.2753333360899571 0.8877741088825593 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.7986149566471132 0.62071307225873 0.9999988895270291 0.9494089781784492 0.9999996006119485 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7172908871597228 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7929688923323206


ris (2 : 2): [ -1 0.7929688923323206 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8645 interne); stringhe deallocate: 0 (8565 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618805e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7929688923323206


ris (2 : 2): [ -1 0.7929688923323206 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8665 interne); stringhe deallocate: 0 (8585 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8352866703611761


ris (2 : 2): [ 1 0.8352866703611761 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8685 interne); stringhe deallocate: 0 (8605 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7929687588642338 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7256874722152269


ris (2 : 2): [ -1 0.7256874722152269 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8705 interne); stringhe deallocate: 0 (8625 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.835286626142941 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.887375190093302


ris (2 : 2): [ 1 0.887375190093302 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8725 interne); stringhe deallocate: 0 (8645 interne)


Stringhe allocate: 1 (8725 interne); stringhe deallocate: 0 (8650 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2070311076676794 0.2070311076676794 0.8352866703611761 0.2743125277847731 0.887375190093302 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.7970560402726701 0.6180205960435481 0.999998871957553 0.9485135502323991 0.999999597554765 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7246666043232182 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7865669117474503


ris (2 : 2): [ -1 0.7865669117474503 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8760 interne); stringhe deallocate: 0 (8680 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617894e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7865669117474503


ris (2 : 2): [ -1 0.7865669117474503 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8780 interne); stringhe deallocate: 0 (8700 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8403830735076795


ris (2 : 2): [ 1 0.8403830735076795 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8800 interne); stringhe deallocate: 0 (8720 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7865667431786241 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7189994445199338


ris (2 : 2): [ -1 0.7189994445199338 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8820 interne); stringhe deallocate: 0 (8740 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8403830616897867 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8899672470046732


ris (2 : 2): [ 1 0.8899672470046732 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8840 interne); stringhe deallocate: 0 (8760 interne)


Stringhe allocate: 1 (8840 interne); stringhe deallocate: 0 (8765 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2134330882525497 0.2134330882525497 0.8403830735076795 0.2810005554800662 0.8899672470046732 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.8073697106242622 0.6358594209689719 0.9999989811998638 0.954141183619059 0.999999617009329 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7256870358421983 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7929562879693961


ris (2 : 2): [ -1 0.7929562879693961 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8875 interne); stringhe deallocate: 0 (8795 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892621764e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7929562879693961


ris (2 : 2): [ -1 0.7929562879693961 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8895 interne); stringhe deallocate: 0 (8815 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8352405486935551


ris (2 : 2): [ 1 0.8352405486935551 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8915 interne); stringhe deallocate: 0 (8835 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7929558842606479 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7256502508206448


ris (2 : 2): [ -1 0.7256502508206448 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8935 interne); stringhe deallocate: 0 (8855 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8352403729385713 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8873381354980451


ris (2 : 2): [ 1 0.8873381354980451 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8955 interne); stringhe deallocate: 0 (8875 interne)


Stringhe allocate: 1 (8955 interne); stringhe deallocate: 0 (8880 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2070437120306039 0.2070437120306039 0.8352405486935551 0.2743497491793552 0.8873381354980451 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.7970761044091397 0.6180552415560412 0.9999988709172432 0.9485464353268267 0.9999995972696055 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7189993946976596 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7929562879693961


ris (2 : 2): [ -1 0.7929562879693961 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8990 interne); stringhe deallocate: 0 (8910 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622814e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7929562879693961


ris (2 : 2): [ -1 0.7929562879693961 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9010 interne); stringhe deallocate: 0 (8930 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8352405486935551


ris (2 : 2): [ 1 0.8352405486935551 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9030 interne); stringhe deallocate: 0 (8950 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7929558842605911 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7256502508206448


ris (2 : 2): [ -1 0.7256502508206448 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9050 interne); stringhe deallocate: 0 (8970 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8352403729390439 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8873381354980451


ris (2 : 2): [ 1 0.8873381354980451 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9070 interne); stringhe deallocate: 0 (8990 interne)


Stringhe allocate: 1 (9070 interne); stringhe deallocate: 0 (8995 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2070437120306039 0.2070437120306039 0.8352405486935551 0.2743497491793552 0.8873381354980451 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.7970761044091397 0.6180552415560412 0.9999988709172432 0.9485464353268267 0.9999995972696055 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7256498425430618 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7945491345319199


ris (2 : 2): [ -1 0.7945491345319199 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9105 interne); stringhe deallocate: 0 (9025 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892638181e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7945491345319199


ris (2 : 2): [ -1 0.7945491345319199 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9125 interne); stringhe deallocate: 0 (9045 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8338970134847938


ris (2 : 2): [ 1 0.8338970134847938 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9145 interne); stringhe deallocate: 0 (9065 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7945489972063422 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7272874236526059


ris (2 : 2): [ -1 0.7272874236526059 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9165 interne); stringhe deallocate: 0 (9085 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8338966458267514 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8866410461005705


ris (2 : 2): [ 1 0.8866410461005705 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9185 interne); stringhe deallocate: 0 (9105 interne)


Stringhe allocate: 1 (9185 interne); stringhe deallocate: 0 (9110 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2054508654680801 0.2054508654680801 0.8338970134847938 0.2727125763473941 0.8866410461005705 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.7945490288554903 0.6136932748779247 0.9999988401880713 0.9470830250119977 0.9999995918672313 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7256498425432563 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7953317714692434


ris (2 : 2): [ -1 0.7953317714692434 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9220 interne); stringhe deallocate: 0 (9140 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616983e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7953317714692434


ris (2 : 2): [ -1 0.7953317714692434 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9240 interne); stringhe deallocate: 0 (9160 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8332042394406419


ris (2 : 2): [ 1 0.8332042394406419 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9260 interne); stringhe deallocate: 0 (9180 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7953314869828505 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7280803895568885


ris (2 : 2): [ -1 0.7280803895568885 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9280 interne); stringhe deallocate: 0 (9200 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8332038014359098 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8862766018932242


ris (2 : 2): [ 1 0.8862766018932242 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9300 interne); stringhe deallocate: 0 (9220 interne)


Stringhe allocate: 1 (9300 interne); stringhe deallocate: 0 (9225 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2046682285307566 0.2046682285307566 0.8332042394406419 0.2719196104431115 0.8862766018932242 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.7933138239935441 0.6115623613929204 0.9999988240176503 0.9463616545181833 0.9999995890140382 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7272873013444228 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7987554425722881


ris (2 : 2): [ -1 0.7987554425722881 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9335 interne); stringhe deallocate: 0 (9255 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617843e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7987554425722881


ris (2 : 2): [ -1 0.7987554425722881 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9355 interne); stringhe deallocate: 0 (9275 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8301583622932801


ris (2 : 2): [ 1 0.8301583622932801 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9375 interne); stringhe deallocate: 0 (9295 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.798755177778685 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.731543465653435


ris (2 : 2): [ -1 0.731543465653435 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9395 interne); stringhe deallocate: 0 (9315 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8301582425064371 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8846724668348295


ris (2 : 2): [ 1 0.8846724668348295 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9415 interne); stringhe deallocate: 0 (9335 interne)


Stringhe allocate: 1 (9415 interne); stringhe deallocate: 0 (9340 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2012445574277119 0.2012445574277119 0.8301583622932801 0.268456534346565 0.8846724668348295 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.7879640388433972 0.6023414107488505 0.9999987502049211 0.9431136086385292 0.9999995762164391 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7280802815384506 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.799232160873225


ris (2 : 2): [ -1 0.799232160873225 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9450 interne); stringhe deallocate: 0 (9370 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616958e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.799232160873225


ris (2 : 2): [ -1 0.799232160873225 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9470 interne); stringhe deallocate: 0 (9390 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8297270297486231


ris (2 : 2): [ 1 0.8297270297486231 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9490 interne); stringhe deallocate: 0 (9410 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7992320149371599 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7320235900397732


ris (2 : 2): [ -1 0.7320235900397732 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9510 interne); stringhe deallocate: 0 (9430 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8297267048782686 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8844445419493104


ris (2 : 2): [ 1 0.8844445419493104 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9530 interne); stringhe deallocate: 0 (9450 interne)


Stringhe allocate: 1 (9530 interne); stringhe deallocate: 0 (9455 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.200767839126775 0.200767839126775 0.8297270297486231 0.2679764099602268 0.8844445419493104 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.7872264177675317 0.6010710257135516 0.999998739384197 0.9426506013336358 0.9999995743660322 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7315430729815935 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7961172223485522


ris (2 : 2): [ -1 0.7961172223485522 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9565 interne); stringhe deallocate: 0 (9485 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622789e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7961172223485522


ris (2 : 2): [ -1 0.7961172223485522 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9585 interne); stringhe deallocate: 0 (9505 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8325153537600156


ris (2 : 2): [ 1 0.8325153537600156 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9605 interne); stringhe deallocate: 0 (9525 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7961168377826926 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7288781406453292


ris (2 : 2): [ -1 0.7288781406453292 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9625 interne); stringhe deallocate: 0 (9545 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.832515248579913 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8859150564744254


ris (2 : 2): [ 1 0.8859150564744254 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9645 interne); stringhe deallocate: 0 (9565 interne)


Stringhe allocate: 1 (9645 interne); stringhe deallocate: 0 (9570 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2038827776514478 0.2038827776514478 0.8325153537600156 0.2711218593546708 0.8859150564744254 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.7920786288555192 0.6094322011180717 0.9999988077144383 0.94562758242667 0.9999995861638308 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7320232479999778 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7992306358604472


ris (2 : 2): [ -1 0.7992306358604472 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9680 interne); stringhe deallocate: 0 (9600 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892628847e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7992306358604472


ris (2 : 2): [ -1 0.7992306358604472 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9700 interne); stringhe deallocate: 0 (9620 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8297218096585345


ris (2 : 2): [ 1 0.8297218096585345 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9720 interne); stringhe deallocate: 0 (9640 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7992305844268381 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7320184721308201


ris (2 : 2): [ -1 0.7320184721308201 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9740 interne); stringhe deallocate: 0 (9660 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8297214596695248 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8844403511900205


ris (2 : 2): [ 1 0.8844403511900205 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9760 interne); stringhe deallocate: 0 (9680 interne)


Stringhe allocate: 1 (9760 interne); stringhe deallocate: 0 (9685 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2007693641395528 0.2007693641395528 0.8297218096585345 0.26798152786918 0.8844403511900205 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.7872287744457019 0.6010750841964481 0.9999987392526699 0.9426555532418195 0.9999995743319339 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7288780301055491 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7992306358604472


ris (2 : 2): [ -1 0.7992306358604472 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9795 interne); stringhe deallocate: 0 (9715 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618311e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7992306358604472


ris (2 : 2): [ -1 0.7992306358604472 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9815 interne); stringhe deallocate: 0 (9735 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8297218096585345


ris (2 : 2): [ 1 0.8297218096585345 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9835 interne); stringhe deallocate: 0 (9755 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7992305844253496 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7320184721308201


ris (2 : 2): [ -1 0.7320184721308201 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9855 interne); stringhe deallocate: 0 (9775 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8297214596695524 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8844403511900205


ris (2 : 2): [ 1 0.8844403511900205 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9875 interne); stringhe deallocate: 0 (9795 interne)


Stringhe allocate: 1 (9875 interne); stringhe deallocate: 0 (9800 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.2007693641395528 0.2007693641395528 0.8297218096585345 0.26798152786918 0.8844403511900205 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.7872287744457019 0.6010750841964481 0.9999987392526699 0.9426555532418195 0.9999995743319339 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7320184796279863 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8044347292950701


ris (2 : 2): [ -1 0.8044347292950701 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9910 interne); stringhe deallocate: 0 (9830 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617502e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8044347292950701


ris (2 : 2): [ -1 0.8044347292950701 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9930 interne); stringhe deallocate: 0 (9850 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8249561864710842


ris (2 : 2): [ 1 0.8249561864710842 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9950 interne); stringhe deallocate: 0 (9870 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8044343083328807 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7372311732693032


ris (2 : 2): [ -1 0.7372311732693032 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9970 interne); stringhe deallocate: 0 (9890 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.824955949110441 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8819108349841006


ris (2 : 2): [ 1 0.8819108349841006 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9990 interne); stringhe deallocate: 0 (9910 interne)


Stringhe allocate: 1 (9990 interne); stringhe deallocate: 0 (9915 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.1955652707049299 0.1955652707049299 0.8249561864710842 0.2627688267306968 0.8819108349841006 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.7793030673384375 0.5874380847180525 0.9999986132654619 0.937425734419034 0.9999995532439281 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7320184796280467 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8068850156026034


ris (2 : 2): [ -1 0.8068850156026034 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10025 interne); stringhe deallocate: 0 (9945 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892620272e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8068850156026034


ris (2 : 2): [ -1 0.8068850156026034 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10045 interne); stringhe deallocate: 0 (9965 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8223653581606086


ris (2 : 2): [ 1 0.8223653581606086 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10065 interne); stringhe deallocate: 0 (9985 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8068847744888243 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7395467965253429


ris (2 : 2): [ -1 0.7395467965253429 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10085 interne); stringhe deallocate: 0 (10005 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8223652928299288 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8804881124504487


ris (2 : 2): [ 1 0.8804881124504487 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10105 interne); stringhe deallocate: 0 (10025 interne)


Stringhe allocate: 1 (10105 interne); stringhe deallocate: 0 (10030 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.1931149843973966 0.1931149843973966 0.8223653581606086 0.2604532034746571 0.8804881124504487 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.7756572507433714 0.5811721869934261 0.9999985395673453 0.9349810214669028 0.9999995409272232 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7372307866043029 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8175784585209207


ris (2 : 2): [ -1 0.8175784585209207 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10140 interne); stringhe deallocate: 0 (10060 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618805e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8175784585209207


ris (2 : 2): [ -1 0.8175784585209207 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10160 interne); stringhe deallocate: 0 (10080 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8110758429146405


ris (2 : 2): [ 1 0.8110758429146405 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10180 interne); stringhe deallocate: 0 (10100 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8175783245990971 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.749655322627606


ris (2 : 2): [ -1 0.749655322627606 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10200 interne); stringhe deallocate: 0 (10120 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8110756962727841 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8743076488053252


ris (2 : 2): [ 1 0.8743076488053252 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10220 interne); stringhe deallocate: 0 (10140 interne)


Stringhe allocate: 1 (10220 interne); stringhe deallocate: 0 (10145 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.1824215414790793 0.1824215414790793 0.8110758429146405 0.250344677372394 0.8743076488053252 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.7604719966703148 0.5551061586035779 0.9999981699048754 0.9234069616707779 0.9999994833574765 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7395467846821049 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8190621790774745


ris (2 : 2): [ -1 0.8190621790774745 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10255 interne); stringhe deallocate: 0 (10175 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617894e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8190621790774745


ris (2 : 2): [ -1 0.8190621790774745 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10275 interne); stringhe deallocate: 0 (10195 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8095417230412708


ris (2 : 2): [ 1 0.8095417230412708 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10295 interne); stringhe deallocate: 0 (10215 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8190617649986924 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7510951147355269


ris (2 : 2): [ -1 0.7510951147355269 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10315 interne); stringhe deallocate: 0 (10235 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8095417111343686 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8734829107202267


ris (2 : 2): [ 1 0.8734829107202267 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10335 interne); stringhe deallocate: 0 (10255 interne)


Stringhe allocate: 1 (10335 interne); stringhe deallocate: 0 (10260 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.1809378209225255 0.1809378209225255 0.8095417230412708 0.2489048852644731 0.8734829107202267 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.7584652872562064 0.5516638452352407 0.9999981129226567 0.9216369379693037 0.9999994751479352 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7496552555992784 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8093599384161618


ris (2 : 2): [ -1 0.8093599384161618 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10370 interne); stringhe deallocate: 0 (10290 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892621764e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8093599384161618


ris (2 : 2): [ -1 0.8093599384161618 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10390 interne); stringhe deallocate: 0 (10310 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8197949171195659


ris (2 : 2): [ 1 0.8197949171195659 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10410 interne); stringhe deallocate: 0 (10330 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8093595593399936 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.741893344279167


ris (2 : 2): [ -1 0.741893344279167 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10430 interne); stringhe deallocate: 0 (10350 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8197946637100797 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8790796255743899


ris (2 : 2): [ 1 0.8790796255743899 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10450 interne); stringhe deallocate: 0 (10370 interne)


Stringhe allocate: 1 (10450 interne); stringhe deallocate: 0 (10375 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.1906400615838382 0.1906400615838382 0.8197949171195659 0.258106655720833 0.8790796255743899 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.7720348038627808 0.5749500733823977 0.9999984625791238 0.9324259862963062 0.9999995283993074 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7510948269791538 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8190041717850969


ris (2 : 2): [ -1 0.8190041717850969 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10485 interne); stringhe deallocate: 0 (10405 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622814e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8190041717850969


ris (2 : 2): [ -1 0.8190041717850969 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10505 interne); stringhe deallocate: 0 (10425 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8093530727487208


ris (2 : 2): [ 1 0.8093530727487208 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10525 interne); stringhe deallocate: 0 (10445 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8190040677017532 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7508822772771566


ris (2 : 2): [ -1 0.7508822772771566 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10545 interne); stringhe deallocate: 0 (10465 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8093528836197184 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8733313381593231


ris (2 : 2): [ 1 0.8733313381593231 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10565 interne); stringhe deallocate: 0 (10485 interne)


Stringhe allocate: 1 (10565 interne); stringhe deallocate: 0 (10490 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.1809958282149031 0.1809958282149031 0.8093530727487208 0.2491177227228434 0.8733313381593231 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.7585432599316592 0.5517975958815874 0.9999981057941673 0.9219005191530638 0.9999994736250344 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7418933003372512 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8190041717850969


ris (2 : 2): [ -1 0.8190041717850969 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10600 interne); stringhe deallocate: 0 (10520 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892638181e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8190041717850969


ris (2 : 2): [ -1 0.8190041717850969 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10620 interne); stringhe deallocate: 0 (10540 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8093530727487208


ris (2 : 2): [ 1 0.8093530727487208 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10640 interne); stringhe deallocate: 0 (10560 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8190040677019477 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7508822772771566


ris (2 : 2): [ -1 0.7508822772771566 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10660 interne); stringhe deallocate: 0 (10580 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8093528836197237 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8733313381593231


ris (2 : 2): [ 1 0.8733313381593231 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10680 interne); stringhe deallocate: 0 (10600 interne)


Stringhe allocate: 1 (10680 interne); stringhe deallocate: 0 (10605 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.1809958282149031 0.1809958282149031 0.8093530727487208 0.2491177227228434 0.8733313381593231 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.7585432599316592 0.5517975958815874 0.9999981057941673 0.9219005191530638 0.9999994736250344 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7508821576067328 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8236957006074968


ris (2 : 2): [ -1 0.8236957006074968 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10715 interne); stringhe deallocate: 0 (10635 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616983e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8236957006074968


ris (2 : 2): [ -1 0.8236957006074968 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10735 interne); stringhe deallocate: 0 (10655 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8039849121064361


ris (2 : 2): [ 1 0.8039849121064361 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10755 interne); stringhe deallocate: 0 (10675 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8236956685014052 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7551145187202393


ris (2 : 2): [ -1 0.7551145187202393 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10775 interne); stringhe deallocate: 0 (10695 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8039846508931454 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.870344468551324


ris (2 : 2): [ 1 0.870344468551324 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10795 interne); stringhe deallocate: 0 (10715 interne)


Stringhe allocate: 1 (10795 interne); stringhe deallocate: 0 (10720 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.1763042993925033 0.1763042993925033 0.8039849121064361 0.2448854812797607 0.870344468551324 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.7523658375547794 0.5412013251780954 0.99999789126331 0.916533405805285 0.9999994426969261 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7508821576066298 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8259046489400208


ris (2 : 2): [ -1 0.8259046489400208 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10830 interne); stringhe deallocate: 0 (10750 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617843e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8259046489400208


ris (2 : 2): [ -1 0.8259046489400208 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10850 interne); stringhe deallocate: 0 (10770 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8011782426566091


ris (2 : 2): [ 1 0.8011782426566091 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10870 interne); stringhe deallocate: 0 (10790 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8259043782181381 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7569633864571399


ris (2 : 2): [ -1 0.7569633864571399 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10890 interne); stringhe deallocate: 0 (10810 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8011779873794858 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8687576356706175


ris (2 : 2): [ 1 0.8687576356706175 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10910 interne); stringhe deallocate: 0 (10830 interne)


Stringhe allocate: 1 (10910 interne); stringhe deallocate: 0 (10835 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.1740953510599792 0.1740953510599792 0.8011782426566091 0.2430366135428601 0.8687576356706175 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.7495492569267998 0.5363695139852087 0.99999776959361 0.9141054895920969 0.999999425533233 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7551140873856186 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8355448515115083


ris (2 : 2): [ -1 0.8355448515115083 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10945 interne); stringhe deallocate: 0 (10865 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616958e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8355448515115083


ris (2 : 2): [ -1 0.8355448515115083 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10965 interne); stringhe deallocate: 0 (10885 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8750543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.788952433357992


ris (2 : 2): [ 1 0.788952433357992 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10985 interne); stringhe deallocate: 0 (10905 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8355445950458025 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7650615753344091


ris (2 : 2): [ -1 0.7650615753344091 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11005 interne); stringhe deallocate: 0 (10925 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7889523594803434 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8618633258538642


ris (2 : 2): [ 1 0.8618633258538642 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11025 interne); stringhe deallocate: 0 (10945 interne)


Stringhe allocate: 1 (11025 interne); stringhe deallocate: 0 (10950 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.1644551484884917 0.1644551484884917 0.788952433357992 0.2349384246655909 0.8618633258538642 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.7379677696667935 0.5164887721108775 0.9999971522433682 0.9028764596648111 0.9999993446102367 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7569632618854021 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8368824338235217


ris (2 : 2): [ -1 0.8368824338235217 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11060 interne); stringhe deallocate: 0 (10980 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622789e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8368824338235217


ris (2 : 2): [ -1 0.8368824338235217 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11080 interne); stringhe deallocate: 0 (11000 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7872854369651882


ris (2 : 2): [ 1 0.7872854369651882 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11100 interne); stringhe deallocate: 0 (11020 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.836882123274636 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7662364199777659


ris (2 : 2): [ -1 0.7662364199777659 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11120 interne); stringhe deallocate: 0 (11040 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7872853367752359 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8609353292982346


ris (2 : 2): [ 1 0.8609353292982346 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11140 interne); stringhe deallocate: 0 (11060 interne)


Stringhe allocate: 1 (11140 interne); stringhe deallocate: 0 (11065 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.1631175661764783 0.1631175661764783 0.7872854369651882 0.2337635800222341 0.8609353292982346 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.7364534812762137 0.5138868392879235 0.9999970557666282 0.9011677001978978 0.9999993328805004 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7650613873432395 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8281358075948387


ris (2 : 2): [ -1 0.8281358075948387 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11175 interne); stringhe deallocate: 0 (11095 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892628847e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8281358075948387


ris (2 : 2): [ -1 0.8281358075948387 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11195 interne); stringhe deallocate: 0 (11115 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7983807520367952


ris (2 : 2): [ 1 0.7983807520367952 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11215 interne); stringhe deallocate: 0 (11135 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8281354992827952 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7588376905399328


ris (2 : 2): [ -1 0.7588376905399328 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11235 interne); stringhe deallocate: 0 (11155 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7983803837723116 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8671771885979147


ris (2 : 2): [ 1 0.8671771885979147 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11255 interne); stringhe deallocate: 0 (11175 interne)


Stringhe allocate: 1 (11255 interne); stringhe deallocate: 0 (11180 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.1718641924051613 0.1718641924051613 0.7983807520367952 0.2411623094600672 0.8671771885979147 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.7467653238264747 0.5315929176862624 0.9999976413365981 0.9115924972387612 0.9999994079132166 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7662363141021311 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8368301385431872


ris (2 : 2): [ -1 0.8368301385431872 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11290 interne); stringhe deallocate: 0 (11210 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618311e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8368301385431872


ris (2 : 2): [ -1 0.8368301385431872 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11310 interne); stringhe deallocate: 0 (11230 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7871472827419761


ris (2 : 2): [ 1 0.7871472827419761 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11330 interne); stringhe deallocate: 0 (11250 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8368296711868242 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7660120875484692


ris (2 : 2): [ -1 0.7660120875484692 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11350 interne); stringhe deallocate: 0 (11270 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7871470539998349 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8608256339006417


ris (2 : 2): [ 1 0.8608256339006417 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11370 interne); stringhe deallocate: 0 (11290 interne)


Stringhe allocate: 1 (11370 interne); stringhe deallocate: 0 (11295 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.1631698614568128 0.1631698614568128 0.7871472827419761 0.2339879124515308 0.8608256339006417 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.7365122584075996 0.5139878479259332 0.9999970476258413 0.9014955249046479 0.9999993314801652 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7588372319168046 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8368301385431872


ris (2 : 2): [ -1 0.8368301385431872 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11405 interne); stringhe deallocate: 0 (11325 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617502e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8368301385431872


ris (2 : 2): [ -1 0.8368301385431872 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11425 interne); stringhe deallocate: 0 (11345 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7871472827419761


ris (2 : 2): [ 1 0.7871472827419761 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11445 interne); stringhe deallocate: 0 (11365 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8368296711868846 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7660120875484692


ris (2 : 2): [ -1 0.7660120875484692 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11465 interne); stringhe deallocate: 0 (11385 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7871470539993588 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8608256339006417


ris (2 : 2): [ 1 0.8608256339006417 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11485 interne); stringhe deallocate: 0 (11405 interne)


Stringhe allocate: 1 (11485 interne); stringhe deallocate: 0 (11410 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.1631698614568128 0.1631698614568128 0.7871472827419761 0.2339879124515308 0.8608256339006417 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.7365122584075996 0.5139878479259332 0.9999970476258413 0.9014955249046479 0.9999993314801652 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7660117237991893 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8410595745240903


ris (2 : 2): [ -1 0.8410595745240903 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11520 interne); stringhe deallocate: 0 (11440 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892620272e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8410595745240903


ris (2 : 2): [ -1 0.8410595745240903 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11540 interne); stringhe deallocate: 0 (11460 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7814538929337498


ris (2 : 2): [ 1 0.7814538929337498 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11560 interne); stringhe deallocate: 0 (11480 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8410592167800841 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.769364938169201


ris (2 : 2): [ -1 0.769364938169201 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11580 interne); stringhe deallocate: 0 (11500 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.781453618330441 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8575909091029016


ris (2 : 2): [ 1 0.8575909091029016 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11600 interne); stringhe deallocate: 0 (11520 interne)


Stringhe allocate: 1 (11600 interne); stringhe deallocate: 0 (11525 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.1589404254759097 0.1589404254759097 0.7814538929337498 0.230635061830799 0.8575909091029016 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.7318708122101137 0.5060074153561467 0.9999966918178573 0.8965205348055865 0.9999992888386896 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7660117237991271 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8430509474202776


ris (2 : 2): [ -1 0.8430509474202776 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11635 interne); stringhe deallocate: 0 (11555 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618805e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8430509474202776


ris (2 : 2): [ -1 0.8430509474202776 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11655 interne); stringhe deallocate: 0 (11575 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7785535712742465


ris (2 : 2): [ 1 0.7785535712742465 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11675 interne); stringhe deallocate: 0 (11595 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8430504887531498 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7708095103668874


ris (2 : 2): [ -1 0.7708095103668874 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11695 interne); stringhe deallocate: 0 (11615 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7785534947342203 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8559323672963503


ris (2 : 2): [ 1 0.8559323672963503 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11715 interne); stringhe deallocate: 0 (11635 interne)


Stringhe allocate: 1 (11715 interne); stringhe deallocate: 0 (11640 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.1569490525797224 0.1569490525797224 0.7785535712742465 0.2291904896331126 0.8559323672963503 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.7297640439200077 0.5023819679256215 0.9999964943877318 0.8943277256027222 0.9999992659309862 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7693648426960209 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8517416121988466


ris (2 : 2): [ -1 0.8517416121988466 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11750 interne); stringhe deallocate: 0 (11670 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617894e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8517416121988466


ris (2 : 2): [ -1 0.8517416121988466 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11770 interne); stringhe deallocate: 0 (11690 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7659164415228472


ris (2 : 2): [ 1 0.7659164415228472 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11790 interne); stringhe deallocate: 0 (11710 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8517413227989854 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7771600964058083


ris (2 : 2): [ -1 0.7771600964058083 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11810 interne); stringhe deallocate: 0 (11730 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7659163563675264 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8487207082202548


ris (2 : 2): [ 1 0.8487207082202548 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11830 interne); stringhe deallocate: 0 (11750 interne)


Stringhe allocate: 1 (11830 interne); stringhe deallocate: 0 (11755 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.1482583878011534 0.1482583878011534 0.7659164415228472 0.2228399035941917 0.8487207082202548 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.721153213133727 0.4875378836520138 0.999995487132294 0.8843449094253639 0.9999991574297105 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7708091824486436 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8529474449704181


ris (2 : 2): [ -1 0.8529474449704181 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11865 interne); stringhe deallocate: 0 (11785 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892621764e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8529474449704181


ris (2 : 2): [ -1 0.8529474449704181 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11885 interne); stringhe deallocate: 0 (11805 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7641872380167164


ris (2 : 2): [ 1 0.7641872380167164 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11905 interne); stringhe deallocate: 0 (11825 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8529472439713413 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7780987097218718


ris (2 : 2): [ -1 0.7780987097218718 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11925 interne); stringhe deallocate: 0 (11845 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7641868679951962 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8477428228863142


ris (2 : 2): [ 1 0.8477428228863142 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11945 interne); stringhe deallocate: 0 (11865 interne)


Stringhe allocate: 1 (11945 interne); stringhe deallocate: 0 (11870 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.1470525550295819 0.1470525550295819 0.7641872380167164 0.2219012902781282 0.8477428228863142 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.720032494371193 0.4856022116001875 0.9999953284408314 0.8828233327942672 0.9999991415316679 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.777159699720853 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8450623435153281


ris (2 : 2): [ -1 0.8450623435153281 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11980 interne); stringhe deallocate: 0 (11900 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622814e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8450623435153281


ris (2 : 2): [ -1 0.8450623435153281 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12000 interne); stringhe deallocate: 0 (11920 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7756534276636432


ris (2 : 2): [ 1 0.7756534276636432 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12020 interne); stringhe deallocate: 0 (11940 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8450622647232375 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7722739757920554


ris (2 : 2): [ -1 0.7722739757920554 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12040 interne); stringhe deallocate: 0 (11960 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7756533711380307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.854273920250808


ris (2 : 2): [ 1 0.854273920250808 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12060 interne); stringhe deallocate: 0 (11980 interne)


Stringhe allocate: 1 (12060 interne); stringhe deallocate: 0 (11985 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.154937656484672 0.154937656484672 0.7756534276636432 0.2277260242079446 0.854273920250808 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.7276869866363436 0.4988054445168195 0.9999962851884274 0.8920748121816347 0.9999992422867621 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7780985920852981 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8529002980919023


ris (2 : 2): [ -1 0.8529002980919023 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12095 interne); stringhe deallocate: 0 (12015 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892638181e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8529002980919023


ris (2 : 2): [ -1 0.8529002980919023 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12115 interne); stringhe deallocate: 0 (12035 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7640934004373313


ris (2 : 2): [ 1 0.7640934004373313 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12135 interne); stringhe deallocate: 0 (12055 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8529000370928168 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7778825936530953


ris (2 : 2): [ -1 0.7778825936530953 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12155 interne); stringhe deallocate: 0 (12075 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7640934079117399 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8476701456108425


ris (2 : 2): [ 1 0.8476701456108425 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12175 interne); stringhe deallocate: 0 (12095 interne)


Stringhe allocate: 1 (12175 interne); stringhe deallocate: 0 (12100 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.1470997019080977 0.1470997019080977 0.7640934004373313 0.2221174063469047 0.8476701456108425 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.7200759790972883 0.4856773352191359 0.9999953196713383 0.8831747026753785 0.9999991403382054 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7722735493608832 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8529002980919023


ris (2 : 2): [ -1 0.8529002980919023 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12210 interne); stringhe deallocate: 0 (12130 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616983e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8529002980919023


ris (2 : 2): [ -1 0.8529002980919023 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12230 interne); stringhe deallocate: 0 (12150 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7640934004373313


ris (2 : 2): [ 1 0.7640934004373313 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12250 interne); stringhe deallocate: 0 (12170 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8529000370927138 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7778825936530953


ris (2 : 2): [ -1 0.7778825936530953 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12270 interne); stringhe deallocate: 0 (12190 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7640934079117105 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8476701456108425


ris (2 : 2): [ 1 0.8476701456108425 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12290 interne); stringhe deallocate: 0 (12210 interne)


Stringhe allocate: 1 (12290 interne); stringhe deallocate: 0 (12215 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.1470997019080977 0.1470997019080977 0.7640934004373313 0.2221174063469047 0.8476701456108425 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.7200759790972883 0.4856773352191359 0.9999953196713383 0.8831747026753785 0.9999991403382054 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7778825848527236 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8567131360035688


ris (2 : 2): [ -1 0.8567131360035688 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12325 interne); stringhe deallocate: 0 (12245 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617843e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8567131360035688


ris (2 : 2): [ -1 0.8567131360035688 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12345 interne); stringhe deallocate: 0 (12265 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7582904480728001


ris (2 : 2): [ 1 0.7582904480728001 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12365 interne); stringhe deallocate: 0 (12285 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.856712827009642 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7804882901129913


ris (2 : 2): [ -1 0.7804882901129913 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12385 interne); stringhe deallocate: 0 (12305 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7582902996963838 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8443500522352792


ris (2 : 2): [ 1 0.8443500522352792 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12405 interne); stringhe deallocate: 0 (12325 interne)


Stringhe allocate: 1 (12405 interne); stringhe deallocate: 0 (12330 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.1432868639964312 0.1432868639964312 0.7582904480728001 0.2195117098870087 0.8443500522352792 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.716646410548725 0.4797476839460763 0.9999947441235736 0.8788978923541786 0.9999990840112623 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7778825848526596 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8585083518869818


ris (2 : 2): [ -1 0.8585083518869818 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12440 interne); stringhe deallocate: 0 (12360 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616958e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8585083518869818


ris (2 : 2): [ -1 0.8585083518869818 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12460 interne); stringhe deallocate: 0 (12380 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7553860010447375


ris (2 : 2): [ 1 0.7553860010447375 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12480 interne); stringhe deallocate: 0 (12400 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8585081189105486 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7815995243731329


ris (2 : 2): [ -1 0.7815995243731329 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12500 interne); stringhe deallocate: 0 (12420 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7553858845662411 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8426868008455709


ris (2 : 2): [ 1 0.8426868008455709 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12520 interne); stringhe deallocate: 0 (12440 interne)


Stringhe allocate: 1 (12520 interne); stringhe deallocate: 0 (12445 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.1414916481130182 0.1414916481130182 0.7553860010447375 0.2184004756268672 0.8426868008455709 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.7150920914334865 0.4770568917038685 0.9999944299986128 0.8770476202442803 0.999999054420627 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7804880230853533 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8663429509671566


ris (2 : 2): [ -1 0.8663429509671566 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12555 interne); stringhe deallocate: 0 (12475 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622789e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8663429509671566


ris (2 : 2): [ -1 0.8663429509671566 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12575 interne); stringhe deallocate: 0 (12495 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7427258069482237


ris (2 : 2): [ 1 0.7427258069482237 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12595 interne); stringhe deallocate: 0 (12515 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8663425534198996 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7865003132915309


ris (2 : 2): [ -1 0.7865003132915309 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12615 interne); stringhe deallocate: 0 (12535 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7427253811783139 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.835448493647067


ris (2 : 2): [ 1 0.835448493647067 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12635 interne); stringhe deallocate: 0 (12555 interne)


Stringhe allocate: 1 (12635 interne); stringhe deallocate: 0 (12560 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.1336570490328434 0.1336570490328434 0.7427258069482237 0.2134996867084691 0.835448493647067 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.7087486946681375 0.4660497331576787 0.9999928262931956 0.8687072781336698 0.9999989141035707 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7815995305011985 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8674300034030118


ris (2 : 2): [ -1 0.8674300034030118 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12670 interne); stringhe deallocate: 0 (12590 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892628847e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8674300034030118


ris (2 : 2): [ -1 0.8674300034030118 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12690 interne); stringhe deallocate: 0 (12610 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7409882315718095


ris (2 : 2): [ 1 0.7409882315718095 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12710 interne); stringhe deallocate: 0 (12630 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8674297421416819 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7872360270583662


ris (2 : 2): [ -1 0.7872360270583662 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12730 interne); stringhe deallocate: 0 (12650 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7409877865738492 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8344613561359724


ris (2 : 2): [ 1 0.8344613561359724 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12750 interne); stringhe deallocate: 0 (12670 interne)


Stringhe allocate: 1 (12750 interne); stringhe deallocate: 0 (12675 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.1325699965969882 0.1325699965969882 0.7409882315718095 0.2127639729416339 0.8344613561359724 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.7079236119531267 0.464614642555079 0.999992572794401 0.8674307965036099 0.9999988934186577 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7864999859771311 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8603216194153889


ris (2 : 2): [ -1 0.8603216194153889 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12785 interne); stringhe deallocate: 0 (12705 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618311e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8603216194153889


ris (2 : 2): [ -1 0.8603216194153889 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12805 interne); stringhe deallocate: 0 (12725 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7524752355923491


ris (2 : 2): [ 1 0.7524752355923491 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12825 interne); stringhe deallocate: 0 (12745 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8603215306228593 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7827258510632619


ris (2 : 2): [ -1 0.7827258510632619 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12845 interne); stringhe deallocate: 0 (12765 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7524747937149332 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8410191766714797


ris (2 : 2): [ 1 0.8410191766714797 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12865 interne); stringhe deallocate: 0 (12785 interne)


Stringhe allocate: 1 (12865 interne); stringhe deallocate: 0 (12790 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.1396783805846111 0.1396783805846111 0.7524752355923491 0.2172741489367381 0.8410191766714797 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.7135608298918836 0.4744037497015822 0.9999940963543139 0.8751564924398019 0.9999990237924872 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.78723574571075 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8673874962857874


ris (2 : 2): [ -1 0.8673874962857874 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12900 interne); stringhe deallocate: 0 (12820 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617502e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8673874962857874


ris (2 : 2): [ -1 0.8673874962857874 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12920 interne); stringhe deallocate: 0 (12840 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8438043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7409291689254087


ris (2 : 2): [ 1 0.7409291689254087 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12940 interne); stringhe deallocate: 0 (12860 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8673873036331736 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7870439402523729


ris (2 : 2): [ -1 0.7870439402523729 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12960 interne); stringhe deallocate: 0 (12880 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7409291356033663 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8344175798067797


ris (2 : 2): [ 1 0.8344175798067797 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12980 interne); stringhe deallocate: 0 (12900 interne)


Stringhe allocate: 1 (12980 interne); stringhe deallocate: 0 (12905 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.1326125037142126 0.1326125037142126 0.7409291689254087 0.2129560597476271 0.8344175798067797 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.7079556291132317 0.4646703469077503 0.99999256402196 0.8677646662626627 0.9999988924922798 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7827258198685252 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8673874962857874


ris (2 : 2): [ -1 0.8673874962857874 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13015 interne); stringhe deallocate: 0 (12935 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892620272e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8673874962857874


ris (2 : 2): [ -1 0.8673874962857874 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13035 interne); stringhe deallocate: 0 (12955 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7409291689254087


ris (2 : 2): [ 1 0.7409291689254087 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13055 interne); stringhe deallocate: 0 (12975 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8673873036331115 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7870439402523729


ris (2 : 2): [ -1 0.7870439402523729 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13075 interne); stringhe deallocate: 0 (12995 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7409291356038388 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8344175798067797


ris (2 : 2): [ 1 0.8344175798067797 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13095 interne); stringhe deallocate: 0 (13015 interne)


Stringhe allocate: 1 (13095 interne); stringhe deallocate: 0 (13020 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.1326125037142126 0.1326125037142126 0.7409291689254087 0.2129560597476271 0.8344175798067797 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.7079556291132317 0.4646703469077503 0.99999256402196 0.8677646662626627 0.9999988924922798 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7870435803359923 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8708247413000284


ris (2 : 2): [ -1 0.8708247413000284 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13130 interne); stringhe deallocate: 0 (13050 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618805e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8708247413000284


ris (2 : 2): [ -1 0.8708247413000284 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13150 interne); stringhe deallocate: 0 (13070 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7351711794099919


ris (2 : 2): [ 1 0.7351711794099919 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13170 interne); stringhe deallocate: 0 (13090 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.870824345869849 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7890415610803566


ris (2 : 2): [ -1 0.7890415610803566 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13190 interne); stringhe deallocate: 0 (13110 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7351708500809018 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8311269475135402


ris (2 : 2): [ 1 0.8311269475135402 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13210 interne); stringhe deallocate: 0 (13130 interne)


Stringhe allocate: 1 (13210 interne); stringhe deallocate: 0 (13135 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.1291752586999716 0.1291752586999716 0.7351711794099919 0.2109584389196434 0.8311269475135402 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.705430477707345 0.4602728827483056 0.9999916571144865 0.8642723842764941 0.9999988205903906 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7870435803364018 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8724431037484877


ris (2 : 2): [ -1 0.8724431037484877 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13245 interne); stringhe deallocate: 0 (13165 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617894e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8724431037484877


ris (2 : 2): [ -1 0.8724431037484877 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13265 interne); stringhe deallocate: 0 (13185 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7323240863559565


ris (2 : 2): [ 1 0.7323240863559565 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13285 interne); stringhe deallocate: 0 (13205 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8724427311852159 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7898875286268396


ris (2 : 2): [ -1 0.7898875286268396 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13305 interne); stringhe deallocate: 0 (13225 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7323236554092985 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.829504039534976


ris (2 : 2): [ 1 0.829504039534976 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13325 interne); stringhe deallocate: 0 (13245 interne)


Stringhe allocate: 1 (13325 interne); stringhe deallocate: 0 (13250 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.1275568962515123 0.1275568962515123 0.7323240863559565 0.2101124713731604 0.829504039534976 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.7042856542151045 0.4582763171719012 0.9999911686227689 0.8627802386534825 0.9999987834286568 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7890415280296983 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8795058793002922


ris (2 : 2): [ -1 0.8795058793002922 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13360 interne); stringhe deallocate: 0 (13280 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892621764e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8795058793002922


ris (2 : 2): [ -1 0.8795058793002922 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13380 interne); stringhe deallocate: 0 (13300 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7199093383596883


ris (2 : 2): [ 1 0.7199093383596883 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13400 interne); stringhe deallocate: 0 (13320 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8795056431717807 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7936274108265963


ris (2 : 2): [ -1 0.7936274108265963 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13420 interne); stringhe deallocate: 0 (13340 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7199091999954508 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8224362833054231


ris (2 : 2): [ 1 0.8224362833054231 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13440 interne); stringhe deallocate: 0 (13360 interne)


Stringhe allocate: 1 (13440 interne); stringhe deallocate: 0 (13365 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.1204941206997078 0.1204941206997078 0.7199093383596883 0.2063725891734037 0.8224362833054231 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6996073320953559 0.4500963682950809 0.9999886815904509 0.8560942045911808 0.9999986074459611 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7898874371476108 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8804858399398912


ris (2 : 2): [ -1 0.8804858399398912 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13475 interne); stringhe deallocate: 0 (13395 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622814e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8804858399398912


ris (2 : 2): [ -1 0.8804858399398912 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13495 interne); stringhe deallocate: 0 (13415 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7182014799001268


ris (2 : 2): [ 1 0.7182014799001268 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13515 interne); stringhe deallocate: 0 (13435 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8804855435318313 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7941953371087487


ris (2 : 2): [ -1 0.7941953371087487 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13535 interne); stringhe deallocate: 0 (13455 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7182011692947725 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8214682991794113


ris (2 : 2): [ 1 0.8214682991794113 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13555 interne); stringhe deallocate: 0 (13475 interne)


Stringhe allocate: 1 (13555 interne); stringhe deallocate: 0 (13480 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.1195141600601088 0.1195141600601088 0.7182014799001268 0.2058046628912513 0.8214682991794113 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6989977446772409 0.4490278109176158 0.9999882885910594 0.8550666640374721 0.9999985814391207 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7936272709793411 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8740777406980504


ris (2 : 2): [ -1 0.8740777406980504 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13590 interne); stringhe deallocate: 0 (13510 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892638181e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8740777406980504


ris (2 : 2): [ -1 0.8740777406980504 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13610 interne); stringhe deallocate: 0 (13530 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7294663362938199


ris (2 : 2): [ 1 0.7294663362938199 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13630 interne); stringhe deallocate: 0 (13550 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.874077328962934 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7907447909792277


ris (2 : 2): [ -1 0.7907447909792277 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13650 interne); stringhe deallocate: 0 (13570 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7294659703206357 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8278738654754356


ris (2 : 2): [ 1 0.8278738654754356 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13670 interne); stringhe deallocate: 0 (13590 interne)


Stringhe allocate: 1 (13670 interne); stringhe deallocate: 0 (13595 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.1259222593019496 0.1259222593019496 0.7294663362938199 0.2092552090207723 0.8278738654754356 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.7031573827156962 0.4563067362921342 0.9999906495382156 0.8612603725179306 0.9999987449216984 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7941951840349555 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8804475133334996


ris (2 : 2): [ -1 0.8804475133334996 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13705 interne); stringhe deallocate: 0 (13625 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616983e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8804475133334996


ris (2 : 2): [ -1 0.8804475133334996 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13725 interne); stringhe deallocate: 0 (13645 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7181679435179006


ris (2 : 2): [ 1 0.7181679435179006 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13745 interne); stringhe deallocate: 0 (13665 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8804473965592665 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7940346591920764


ris (2 : 2): [ -1 0.7940346591920764 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13765 interne); stringhe deallocate: 0 (13685 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7181677906936947 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8214454379828815


ris (2 : 2): [ 1 0.8214454379828815 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13785 interne); stringhe deallocate: 0 (13705 interne)


Stringhe allocate: 1 (13785 interne); stringhe deallocate: 0 (13710 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.1195524866665004 0.1195524866665004 0.7181679435179006 0.2059653408079236 0.8214454379828815 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6990214099749125 0.4490693067619385 0.9999882807388414 0.8553576909174315 0.9999985808190732 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7907447903580946 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8804475133334996


ris (2 : 2): [ -1 0.8804475133334996 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13820 interne); stringhe deallocate: 0 (13740 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617843e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8804475133334996


ris (2 : 2): [ -1 0.8804475133334996 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13840 interne); stringhe deallocate: 0 (13760 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7181679435179006


ris (2 : 2): [ 1 0.7181679435179006 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13860 interne); stringhe deallocate: 0 (13780 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8804473965592026 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7940346591920764


ris (2 : 2): [ -1 0.7940346591920764 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13880 interne); stringhe deallocate: 0 (13800 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7181677906937223 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8214454379828815


ris (2 : 2): [ 1 0.8214454379828815 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13900 interne); stringhe deallocate: 0 (13820 interne)


Stringhe allocate: 1 (13900 interne); stringhe deallocate: 0 (13825 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.1195524866665004 0.1195524866665004 0.7181679435179006 0.2059653408079236 0.8214454379828815 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6990214099749125 0.4490693067619385 0.9999882807388414 0.8553576909174315 0.9999985808190732 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7940344899124741 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8835461196973231


ris (2 : 2): [ -1 0.8835461196973231 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13935 interne); stringhe deallocate: 0 (13855 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616958e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8835461196973231


ris (2 : 2): [ -1 0.8835461196973231 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13955 interne); stringhe deallocate: 0 (13875 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7125591918489503


ris (2 : 2): [ 1 0.7125591918489503 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13975 interne); stringhe deallocate: 0 (13895 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8835458844134783 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7955522392667905


ris (2 : 2): [ -1 0.7955522392667905 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13995 interne); stringhe deallocate: 0 (13915 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7125587552017496 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8182598753862101


ris (2 : 2): [ 1 0.8182598753862101 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14015 interne); stringhe deallocate: 0 (13935 interne)


Stringhe allocate: 1 (14015 interne); stringhe deallocate: 0 (13940 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.1164538803026769 0.1164538803026769 0.7125591918489503 0.2044477607332095 0.8182598753862101 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6971536561646319 0.4457910879581343 0.9999868906079008 0.8525992632650287 0.9999984917151467 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7940344899127458 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8850050237818443


ris (2 : 2): [ -1 0.8850050237818443 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14050 interne); stringhe deallocate: 0 (13970 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622789e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8850050237818443


ris (2 : 2): [ -1 0.8850050237818443 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14070 interne); stringhe deallocate: 0 (13990 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7098094625291744


ris (2 : 2): [ 1 0.7098094625291744 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14090 interne); stringhe deallocate: 0 (14010 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8850050061176535 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7961919821543843


ris (2 : 2): [ -1 0.7961919821543843 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14110 interne); stringhe deallocate: 0 (14030 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7098093121475557 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8167056707280469


ris (2 : 2): [ 1 0.8167056707280469 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14130 interne); stringhe deallocate: 0 (14050 interne)


Stringhe allocate: 1 (14130 interne); stringhe deallocate: 0 (14055 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.1149949762181557 0.1149949762181557 0.7098094625291744 0.2038080178456158 0.8167056707280469 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6963056467450486 0.4443004599750421 0.9999861500138678 0.8514300504128017 0.9999984462329189 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7955517857502219 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8913718885497775


ris (2 : 2): [ -1 0.8913718885497775 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14165 interne); stringhe deallocate: 0 (14085 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892628847e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8913718885497775


ris (2 : 2): [ -1 0.8913718885497775 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14185 interne); stringhe deallocate: 0 (14105 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6978157988816084


ris (2 : 2): [ 1 0.6978157988816084 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14205 interne); stringhe deallocate: 0 (14125 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8913717358550608 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7990248735080758


ris (2 : 2): [ -1 0.7990248735080758 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14225 interne); stringhe deallocate: 0 (14145 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.697815427107745 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.809933449178616


ris (2 : 2): [ 1 0.809933449178616 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14245 interne); stringhe deallocate: 0 (14165 interne)


Stringhe allocate: 1 (14245 interne); stringhe deallocate: 0 (14170 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.1086281114502226 0.1086281114502226 0.6978157988816084 0.2009751264919242 0.809933449178616 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6928300684017937 0.4381751868783964 0.9999823984854026 0.8462094380184664 0.9999982314926861 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7961917012176096 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8922552902270006


ris (2 : 2): [ -1 0.8922552902270006 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14280 interne); stringhe deallocate: 0 (14200 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618311e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8922552902270006


ris (2 : 2): [ -1 0.8922552902270006 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14300 interne); stringhe deallocate: 0 (14220 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6961630111445436


ris (2 : 2): [ 1 0.6961630111445436 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14320 interne); stringhe deallocate: 0 (14240 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8922548382705644 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7994584515803661


ris (2 : 2): [ -1 0.7994584515803661 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14340 interne); stringhe deallocate: 0 (14260 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6961627095169369 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8090030710207001


ris (2 : 2): [ 1 0.8090030710207001 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14360 interne); stringhe deallocate: 0 (14280 interne)


Stringhe allocate: 1 (14360 interne); stringhe deallocate: 0 (14285 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.1077447097729994 0.1077447097729994 0.6961630111445436 0.2005415484196339 0.8090030710207001 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.692375774587882 0.4373725222556583 0.9999818073664946 0.845404481011208 0.9999981997593028 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7990245907730058 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8864786005760644


ris (2 : 2): [ -1 0.8864786005760644 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14395 interne); stringhe deallocate: 0 (14315 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617502e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8864786005760644


ris (2 : 2): [ -1 0.8864786005760644 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14415 interne); stringhe deallocate: 0 (14335 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7070463867322747


ris (2 : 2): [ 1 0.7070463867322747 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14435 interne); stringhe deallocate: 0 (14355 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8864784329361521 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7968401416236584


ris (2 : 2): [ -1 0.7968401416236584 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14455 interne); stringhe deallocate: 0 (14375 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7070460408157926 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8151424981104288


ris (2 : 2): [ 1 0.8151424981104288 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14475 interne); stringhe deallocate: 0 (14395 interne)


Stringhe allocate: 1 (14475 interne); stringhe deallocate: 0 (14400 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.1135213994239356 0.1135213994239356 0.7070463867322747 0.2031598583763417 0.8151424981104288 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6954690286947796 0.4428284204098754 0.9999853636790399 0.8502417052110523 0.9999983991047758 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7994580357498728 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8922207292432512


ris (2 : 2): [ -1 0.8922207292432512 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14510 interne); stringhe deallocate: 0 (14430 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892620272e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8922207292432512


ris (2 : 2): [ -1 0.8922207292432512 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14530 interne); stringhe deallocate: 0 (14450 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6961474561324397


ris (2 : 2): [ 1 0.6961474561324397 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14550 interne); stringhe deallocate: 0 (14470 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.892220505995172 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7993294849699011


ris (2 : 2): [ -1 0.7993294849699011 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14570 interne); stringhe deallocate: 0 (14490 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6961474507278727 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8089946183388406


ris (2 : 2): [ 1 0.8089946183388406 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14590 interne); stringhe deallocate: 0 (14510 interne)


Stringhe allocate: 1 (14590 interne); stringhe deallocate: 0 (14515 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.1077792707567488 0.1077792707567488 0.6961474561324397 0.2006705150300989 0.8089946183388406 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6923934236032497 0.4374037145278649 0.9999818017099873 0.8456440716360312 0.9999981994684035 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7968397229141173 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8922207292432512


ris (2 : 2): [ -1 0.8922207292432512 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14625 interne); stringhe deallocate: 0 (14545 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618805e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8922207292432512


ris (2 : 2): [ -1 0.8922207292432512 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14645 interne); stringhe deallocate: 0 (14565 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6961474561324397


ris (2 : 2): [ 1 0.6961474561324397 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14665 interne); stringhe deallocate: 0 (14585 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8922205059955815 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.7993294849699011


ris (2 : 2): [ -1 0.7993294849699011 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14685 interne); stringhe deallocate: 0 (14605 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.696147450727878 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8089946183388406


ris (2 : 2): [ 1 0.8089946183388406 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14705 interne); stringhe deallocate: 0 (14625 interne)


Stringhe allocate: 1 (14705 interne); stringhe deallocate: 0 (14630 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.1077792707567488 0.1077792707567488 0.6961474561324397 0.2006705150300989 0.8089946183388406 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6923934236032497 0.4374037145278649 0.9999818017099873 0.8456440716360312 0.9999981994684035 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7993292897175053 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.895013995106985


ris (2 : 2): [ -1 0.895013995106985 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14740 interne); stringhe deallocate: 0 (14660 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617894e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.895013995106985


ris (2 : 2): [ -1 0.895013995106985 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14760 interne); stringhe deallocate: 0 (14680 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7813043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6907545288027067


ris (2 : 2): [ 1 0.6907545288027067 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14780 interne); stringhe deallocate: 0 (14700 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8950138180687608 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8004756464024918


ris (2 : 2): [ -1 0.8004756464024918 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14800 interne); stringhe deallocate: 0 (14720 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6907544224690732 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8059605701154582


ris (2 : 2): [ 1 0.8059605701154582 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14820 interne); stringhe deallocate: 0 (14740 interne)


Stringhe allocate: 1 (14820 interne); stringhe deallocate: 0 (14745 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.104986004893015 0.104986004893015 0.6907545288027067 0.1995243535975082 0.8059605701154582 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6909991087931776 0.4349370715092994 0.9999797306943694 0.8435101520959701 0.9999980919555825 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7993292897179307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8963291131302954


ris (2 : 2): [ -1 0.8963291131302954 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14855 interne); stringhe deallocate: 0 (14775 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892621764e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8963291131302954


ris (2 : 2): [ -1 0.8963291131302954 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14875 interne); stringhe deallocate: 0 (14795 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7813043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6881266808784788


ris (2 : 2): [ 1 0.6881266808784788 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14895 interne); stringhe deallocate: 0 (14815 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8963289349503452 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8009574072906422


ris (2 : 2): [ -1 0.8009574072906422 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14915 interne); stringhe deallocate: 0 (14835 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6881265728897397 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8044915464470158


ris (2 : 2): [ 1 0.8044915464470158 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14935 interne); stringhe deallocate: 0 (14855 interne)


Stringhe allocate: 1 (14935 interne); stringhe deallocate: 0 (14860 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.1036708868697046 0.1036708868697046 0.6881266808784788 0.1990425927093578 0.8044915464470158 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6903647545815568 0.4338132077081808 0.99997863773115 0.8426101700335625 0.9999980376166158 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8004756062455112 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9020684610760685


ris (2 : 2): [ -1 0.9020684610760685 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14970 interne); stringhe deallocate: 0 (14890 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622814e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9020684610760685


ris (2 : 2): [ -1 0.9020684610760685 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14990 interne); stringhe deallocate: 0 (14910 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8125543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6766621713638494


ris (2 : 2): [ 1 0.6766621713638494 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15010 interne); stringhe deallocate: 0 (14930 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9020681469864211 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.803093053952313


ris (2 : 2): [ -1 0.803093053952313 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15030 interne); stringhe deallocate: 0 (14950 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6766619770950895 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7980879382104519


ris (2 : 2): [ 1 0.7980879382104519 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15050 interne); stringhe deallocate: 0 (14970 interne)


Stringhe allocate: 1 (15050 interne); stringhe deallocate: 0 (14975 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.09793153892393147 0.09793153892393147 0.6766621713638494 0.196906946047687 0.7980879382104519 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6877549554829119 0.4291778432813299 0.999973137076081 0.8385999888986619 0.9999977820865913 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8009572117752395 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9028647934171846


ris (2 : 2): [ -1 0.9028647934171846 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15085 interne); stringhe deallocate: 0 (15005 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892638181e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9028647934171846


ris (2 : 2): [ -1 0.9028647934171846 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15105 interne); stringhe deallocate: 0 (15025 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7813043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6750803021394666


ris (2 : 2): [ 1 0.6750803021394666 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15125 interne); stringhe deallocate: 0 (15045 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9028644650408149 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8034215962273781


ris (2 : 2): [ -1 0.8034215962273781 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15145 interne); stringhe deallocate: 0 (15065 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6750803082413004 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7972062321669687


ris (2 : 2): [ 1 0.7972062321669687 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15165 interne); stringhe deallocate: 0 (15085 interne)


Stringhe allocate: 1 (15165 interne); stringhe deallocate: 0 (15090 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.09713520658281538 0.09713520658281538 0.6750803021394666 0.1965784037726219 0.7972062321669687 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6874125160024023 0.428568144019642 0.9999722742712918 0.8379802243162464 0.9999977443888837 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8030929654070258 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8976574602591783


ris (2 : 2): [ -1 0.8976574602591783 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15200 interne); stringhe deallocate: 0 (15120 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616983e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8976574602591783


ris (2 : 2): [ -1 0.8976574602591783 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15220 interne); stringhe deallocate: 0 (15140 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7813043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6854839810788386


ris (2 : 2): [ 1 0.6854839810788386 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15240 interne); stringhe deallocate: 0 (15160 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8976574032731337 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8014454374726985


ris (2 : 2): [ -1 0.8014454374726985 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15260 interne); stringhe deallocate: 0 (15180 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6854839413589815 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.803012693715188


ris (2 : 2): [ 1 0.803012693715188 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15280 interne); stringhe deallocate: 0 (15200 interne)


Stringhe allocate: 1 (15280 interne); stringhe deallocate: 0 (15205 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.1023425397408218 0.1023425397408218 0.6854839810788386 0.1985545625273015 0.803012693715188 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6897380491458531 0.4327018408420046 0.9999774791525251 0.8416966937199011 0.9999979813509096 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8034215062089247 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9028336230219076


ris (2 : 2): [ -1 0.9028336230219076 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15315 interne); stringhe deallocate: 0 (15235 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617843e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9028336230219076


ris (2 : 2): [ -1 0.9028336230219076 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15335 interne); stringhe deallocate: 0 (15255 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7813043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6750770640450391


ris (2 : 2): [ 1 0.6750770640450391 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15355 interne); stringhe deallocate: 0 (15275 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9028334706253647 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8033207963160903


ris (2 : 2): [ -1 0.8033207963160903 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15375 interne); stringhe deallocate: 0 (15295 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6750769703816708 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7972073467967857


ris (2 : 2): [ 1 0.7972073467967857 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15395 interne); stringhe deallocate: 0 (15315 interne)


Stringhe allocate: 1 (15395 interne); stringhe deallocate: 0 (15320 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.09716637697809238 0.09716637697809238 0.6750770640450391 0.1966792036839097 0.7972073467967857 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6874258324869014 0.4285918602060751 0.999972272477005 0.8381704518325011 0.9999977444369423 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8014450161881088 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9028336230219076


ris (2 : 2): [ -1 0.9028336230219076 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15430 interne); stringhe deallocate: 0 (15350 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616958e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9028336230219076


ris (2 : 2): [ -1 0.9028336230219076 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15450 interne); stringhe deallocate: 0 (15370 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7813043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6750770640450391


ris (2 : 2): [ 1 0.6750770640450391 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15470 interne); stringhe deallocate: 0 (15390 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9028334706256365 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8033207963160903


ris (2 : 2): [ -1 0.8033207963160903 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15490 interne); stringhe deallocate: 0 (15410 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6750769703811947 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7972073467967857


ris (2 : 2): [ 1 0.7972073467967857 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15510 interne); stringhe deallocate: 0 (15430 interne)


Stringhe allocate: 1 (15510 interne); stringhe deallocate: 0 (15435 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.09716637697809238 0.09716637697809238 0.6750770640450391 0.1966792036839097 0.7972073467967857 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6874258324869014 0.4285918602060751 0.999972272477005 0.8381704518325011 0.9999977444369423 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8033204167315935 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9053515459356377


ris (2 : 2): [ -1 0.9053515459356377 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15545 interne); stringhe deallocate: 0 (15465 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622789e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9053515459356377


ris (2 : 2): [ -1 0.9053515459356377 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15565 interne); stringhe deallocate: 0 (15485 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7813043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6699396381737328


ris (2 : 2): [ 1 0.6699396381737328 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15585 interne); stringhe deallocate: 0 (15505 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9053511708210227 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8041832315436769


ris (2 : 2): [ -1 0.8041832315436769 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15605 interne); stringhe deallocate: 0 (15525 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6699395268387418 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7943507516374698


ris (2 : 2): [ 1 0.7943507516374698 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15625 interne); stringhe deallocate: 0 (15545 interne)


Stringhe allocate: 1 (15625 interne); stringhe deallocate: 0 (15550 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.09464845406436229 0.09464845406436229 0.6699396381737328 0.1958167684563231 0.7943507516374698 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.686372737156051 0.4267146095443034 0.9999692743776314 0.8365406948487917 0.9999976178478436 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8033204167316672 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9065369947338393


ris (2 : 2): [ -1 0.9065369947338393 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15660 interne); stringhe deallocate: 0 (15580 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892628847e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9065369947338393


ris (2 : 2): [ -1 0.9065369947338393 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15680 interne); stringhe deallocate: 0 (15600 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7813043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6674473700783025


ris (2 : 2): [ 1 0.6674473700783025 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15700 interne); stringhe deallocate: 0 (15620 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9065365879973948 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8045450647226538


ris (2 : 2): [ -1 0.8045450647226538 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15720 interne); stringhe deallocate: 0 (15640 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6674470990127848 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7929752484879693


ris (2 : 2): [ 1 0.7929752484879693 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15740 interne); stringhe deallocate: 0 (15660 interne)


Stringhe allocate: 1 (15740 interne); stringhe deallocate: 0 (15665 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.09346300526616069 0.09346300526616069 0.6674473700783025 0.1954549352773463 0.7929752484879693 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6858925070973043 0.4258573579994548 0.9999677052529432 0.835855485973974 0.9999975543828372 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8041830151519358 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.911710431269517


ris (2 : 2): [ -1 0.911710431269517 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15775 interne); stringhe deallocate: 0 (15695 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618311e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.911710431269517


ris (2 : 2): [ -1 0.911710431269517 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15795 interne); stringhe deallocate: 0 (15715 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7813043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6565726640434507


ris (2 : 2): [ 1 0.6565726640434507 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15815 interne); stringhe deallocate: 0 (15735 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9117102711624101 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8061501958977468


ris (2 : 2): [ -1 0.8061501958977468 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15835 interne); stringhe deallocate: 0 (15755 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6565723507828096 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7869775703258948


ris (2 : 2): [ 1 0.7869775703258948 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15855 interne); stringhe deallocate: 0 (15775 interne)


Stringhe allocate: 1 (15855 interne); stringhe deallocate: 0 (15780 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.08828956873048299 0.08828956873048299 0.6565726640434507 0.1938498041022532 0.7869775703258948 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6839085138865447 0.42230731583739 0.9999598656744352 0.8328060122420966 0.9999972572944199 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8045449345535234 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9124282420390738


ris (2 : 2): [ -1 0.9124282420390738 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15890 interne); stringhe deallocate: 0 (15810 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617502e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9124282420390738


ris (2 : 2): [ -1 0.9124282420390738 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15910 interne); stringhe deallocate: 0 (15830 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7813043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6550707870418329


ris (2 : 2): [ 1 0.6550707870418329 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15930 interne); stringhe deallocate: 0 (15850 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9124279110855662 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8063979380616045


ris (2 : 2): [ -1 0.8063979380616045 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15950 interne); stringhe deallocate: 0 (15870 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6550707905721005 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7861504133929266


ris (2 : 2): [ 1 0.7861504133929266 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15970 interne); stringhe deallocate: 0 (15890 interne)


Stringhe allocate: 1 (15970 interne); stringhe deallocate: 0 (15895 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.0875717579609262 0.0875717579609262 0.6550707870418329 0.1936020619383955 0.7861504133929266 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6836471132250036 0.4218385130097388 0.9999586428155258 0.8323339756324741 0.9999972135839377 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8061499684280955 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9077343717548105


ris (2 : 2): [ -1 0.9077343717548105 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16005 interne); stringhe deallocate: 0 (15925 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892620272e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9077343717548105


ris (2 : 2): [ -1 0.9077343717548105 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16025 interne); stringhe deallocate: 0 (15945 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7813043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6649395646649156


ris (2 : 2): [ 1 0.6649395646649156 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16045 interne); stringhe deallocate: 0 (15965 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9077339261001525 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8049115711445403


ris (2 : 2): [ -1 0.8049115711445403 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16065 interne); stringhe deallocate: 0 (15985 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6649394123977963 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7915896234260401


ris (2 : 2): [ 1 0.7915896234260401 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16085 interne); stringhe deallocate: 0 (16005 interne)


Stringhe allocate: 1 (16085 interne); stringhe deallocate: 0 (16010 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.09226562824518947 0.09226562824518947 0.6649395646649156 0.1950884288554597 0.7915896234260401 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6854173285166761 0.4250083616262635 0.9999660454594643 0.8351605789637979 0.9999974887411827 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.806397923750299 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.912400123036562


ris (2 : 2): [ -1 0.912400123036562 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16120 interne); stringhe deallocate: 0 (16040 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618805e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.912400123036562


ris (2 : 2): [ -1 0.912400123036562 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16140 interne); stringhe deallocate: 0 (16060 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7813043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.655075790570154


ris (2 : 2): [ 1 0.655075790570154 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16160 interne); stringhe deallocate: 0 (16080 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9123997776935795 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8063204510328977


ris (2 : 2): [ -1 0.8063204510328977 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16180 interne); stringhe deallocate: 0 (16100 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.655075558943234 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.786157660819843


ris (2 : 2): [ 1 0.786157660819843 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16200 interne); stringhe deallocate: 0 (16120 interne)


Stringhe allocate: 1 (16200 interne); stringhe deallocate: 0 (16125 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.08759987696343796 0.08759987696343796 0.655075790570154 0.1936795489671023 0.786157660819843 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6836572913502251 0.4218567715834172 0.9999586469507324 0.8324816538863704 0.9999972139699315 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8049111454914311 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.912400123036562


ris (2 : 2): [ -1 0.912400123036562 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16235 interne); stringhe deallocate: 0 (16155 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617894e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.912400123036562


ris (2 : 2): [ -1 0.912400123036562 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16255 interne); stringhe deallocate: 0 (16175 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7813043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.655075790570154


ris (2 : 2): [ 1 0.655075790570154 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16275 interne); stringhe deallocate: 0 (16195 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9123997776940049 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8063204510328977


ris (2 : 2): [ -1 0.8063204510328977 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16295 interne); stringhe deallocate: 0 (16215 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6550755589432047 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.786157660819843


ris (2 : 2): [ 1 0.786157660819843 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16315 interne); stringhe deallocate: 0 (16235 interne)


Stringhe allocate: 1 (16315 interne); stringhe deallocate: 0 (16240 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.08759987696343796 0.08759987696343796 0.655075790570154 0.1936795489671023 0.786157660819843 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6836572913502251 0.4218567715834172 0.9999586469507324 0.8324816538863704 0.9999972139699315 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8063201992943467 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9146697203069851


ris (2 : 2): [ -1 0.9146697203069851 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16350 interne); stringhe deallocate: 0 (16270 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892621764e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9146697203069851


ris (2 : 2): [ -1 0.9146697203069851 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16370 interne); stringhe deallocate: 0 (16290 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7813043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6502148682788268


ris (2 : 2): [ 1 0.6502148682788268 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16390 interne); stringhe deallocate: 0 (16310 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.914669522566312 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8069678704292315


ris (2 : 2): [ -1 0.8069678704292315 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16410 interne); stringhe deallocate: 0 (16330 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6502146809524874 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7834905263655987


ris (2 : 2): [ 1 0.7834905263655987 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16430 interne); stringhe deallocate: 0 (16350 interne)


Stringhe allocate: 1 (16430 interne); stringhe deallocate: 0 (16355 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.08533027969301488 0.08533027969301488 0.6502148682788268 0.1930321295707685 0.7834905263655987 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.682851744525701 0.4204104554831121 0.9999544282312292 0.831246727332085 0.9999970682466428 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8063201992936069 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9157382121210539


ris (2 : 2): [ -1 0.9157382121210539 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16465 interne); stringhe deallocate: 0 (16385 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622814e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9157382121210539


ris (2 : 2): [ -1 0.9157382121210539 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16485 interne); stringhe deallocate: 0 (16405 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7813043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6478644730829727


ris (2 : 2): [ 1 0.6478644730829727 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16505 interne); stringhe deallocate: 0 (16425 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9157381146377883 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8072391742538382


ris (2 : 2): [ -1 0.8072391742538382 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16525 interne); stringhe deallocate: 0 (16445 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6478643506001767 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7822114539915106


ris (2 : 2): [ 1 0.7822114539915106 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16545 interne); stringhe deallocate: 0 (16465 interne)


Stringhe allocate: 1 (16545 interne); stringhe deallocate: 0 (16470 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.08426178787894612 0.08426178787894612 0.6478644730829727 0.1927608257461618 0.7822114539915106 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6824835160212845 0.4197484623877661 0.9999522366250371 0.8307285319376261 0.9999969956823827 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8069677441543899 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9204012126859132


ris (2 : 2): [ -1 0.9204012126859132 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16580 interne); stringhe deallocate: 0 (16500 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892638181e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9204012126859132


ris (2 : 2): [ -1 0.9204012126859132 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16600 interne); stringhe deallocate: 0 (16520 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7813043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6376076700901542


ris (2 : 2): [ 1 0.6376076700901542 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16620 interne); stringhe deallocate: 0 (16540 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9204011052080512 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8084432465758215


ris (2 : 2): [ -1 0.8084432465758215 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16640 interne); stringhe deallocate: 0 (16560 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6376075833267514 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7766330777620631


ris (2 : 2): [ 1 0.7766330777620631 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16660 interne); stringhe deallocate: 0 (16580 interne)


Stringhe allocate: 1 (16660 interne); stringhe deallocate: 0 (16585 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.07959878731408676 0.07959878731408676 0.6376076700901542 0.1915567534241786 0.7766330777620631 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6809557252518499 0.4169957431986505 0.9999413709753082 0.8284240026711207 0.9999966576221823 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.807239064497602 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9210481991924736


ris (2 : 2): [ -1 0.9210481991924736 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16695 interne); stringhe deallocate: 0 (16615 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616983e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9210481991924736


ris (2 : 2): [ -1 0.9210481991924736 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16715 interne); stringhe deallocate: 0 (16635 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7813043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6361901670824888


ris (2 : 2): [ 1 0.6361901670824888 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16735 interne); stringhe deallocate: 0 (16655 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9210481732316298 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8086294791195376


ris (2 : 2): [ -1 0.8086294791195376 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16755 interne); stringhe deallocate: 0 (16675 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.636189946455441 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7758628296086295


ris (2 : 2): [ 1 0.7758628296086295 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16775 interne); stringhe deallocate: 0 (16695 interne)


Stringhe allocate: 1 (16775 interne); stringhe deallocate: 0 (16700 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.0789518008075264 0.0789518008075264 0.6361901670824888 0.1913705208804624 0.7758628296086295 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6807535938418886 0.416630780647406 0.9999396864574255 0.8280668996535197 0.9999966080467244 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8084430783219618 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.916817460051965


ris (2 : 2): [ -1 0.916817460051965 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16810 interne); stringhe deallocate: 0 (16730 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617843e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.916817460051965


ris (2 : 2): [ -1 0.916817460051965 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16830 interne); stringhe deallocate: 0 (16750 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7813043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6454984091457872


ris (2 : 2): [ 1 0.6454984091457872 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16850 interne); stringhe deallocate: 0 (16770 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9168171971268295 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8075139644369463


ris (2 : 2): [ -1 0.8075139644369463 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16870 interne); stringhe deallocate: 0 (16790 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6454982846206949 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7809223384189771


ris (2 : 2): [ 1 0.7809223384189771 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16890 interne); stringhe deallocate: 0 (16810 interne)


Stringhe allocate: 1 (16890 interne); stringhe deallocate: 0 (16815 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.08318253994803504 0.08318253994803504 0.6454984091457872 0.1924860355630537 0.7809223384189771 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6821185763838003 0.4190918333063992 0.9999499239562806 0.8302032699666813 0.9999969207310018 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8086290448135971 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.921022824676633


ris (2 : 2): [ -1 0.921022824676633 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16925 interne); stringhe deallocate: 0 (16845 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616958e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.921022824676633


ris (2 : 2): [ -1 0.921022824676633 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16945 interne); stringhe deallocate: 0 (16865 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7813043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.636200543602661


ris (2 : 2): [ 1 0.636200543602661 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16965 interne); stringhe deallocate: 0 (16885 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9210224240252947 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8085705222824355


ris (2 : 2): [ -1 0.8085705222824355 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16985 interne); stringhe deallocate: 0 (16905 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6362004368728975 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7758738359470363


ris (2 : 2): [ 1 0.7758738359470363 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17005 interne); stringhe deallocate: 0 (16925 interne)


Stringhe allocate: 1 (17005 interne); stringhe deallocate: 0 (16930 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.07897717532336701 0.07897717532336701 0.636200543602661 0.1914294777175645 0.7758738359470363 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6807614773713763 0.4166450184166712 0.9999396989627239 0.8281799687145017 0.9999966087602776 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8075137227008318 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.921022824676633


ris (2 : 2): [ -1 0.921022824676633 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17040 interne); stringhe deallocate: 0 (16960 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622789e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.921022824676633


ris (2 : 2): [ -1 0.921022824676633 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17060 interne); stringhe deallocate: 0 (16980 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7813043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.636200543602661


ris (2 : 2): [ 1 0.636200543602661 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17080 interne); stringhe deallocate: 0 (17000 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9210224240253684 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8085705222824355


ris (2 : 2): [ -1 0.8085705222824355 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17100 interne); stringhe deallocate: 0 (17020 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.63620043687337 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7758738359470363


ris (2 : 2): [ 1 0.7758738359470363 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17120 interne); stringhe deallocate: 0 (17040 interne)


Stringhe allocate: 1 (17120 interne); stringhe deallocate: 0 (17045 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.07897717532336701 0.07897717532336701 0.636200543602661 0.1914294777175645 0.7758738359470363 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6807614773713763 0.4166450184166712 0.9999396989627239 0.8281799687145017 0.9999966087602776 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8085703938434836 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9230684224604148


ris (2 : 2): [ -1 0.9230684224604148 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17155 interne); stringhe deallocate: 0 (17075 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892628847e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9230684224604148


ris (2 : 2): [ -1 0.9230684224604148 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17175 interne); stringhe deallocate: 0 (17095 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7500543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6316244058965791


ris (2 : 2): [ 1 0.6316244058965791 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17195 interne); stringhe deallocate: 0 (17115 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9230680554351389 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.809055803331728


ris (2 : 2): [ -1 0.809055803331728 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17215 interne); stringhe deallocate: 0 (17135 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6316242306656186 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.773398942930609


ris (2 : 2): [ 1 0.773398942930609 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17235 interne); stringhe deallocate: 0 (17155 interne)


Stringhe allocate: 1 (17235 interne); stringhe deallocate: 0 (17160 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.07693157753958524 0.07693157753958524 0.6316244058965791 0.190944196668272 0.773398942930609 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6801372966962319 0.4155168433258181 0.9999339246237666 0.8272487763430148 0.9999964444716537 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8085703938445628 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9240314012239214


ris (2 : 2): [ -1 0.9240314012239214 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17270 interne); stringhe deallocate: 0 (17190 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618311e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9240314012239214


ris (2 : 2): [ -1 0.9240314012239214 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17290 interne); stringhe deallocate: 0 (17210 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7500543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6294171851373599


ris (2 : 2): [ 1 0.6294171851373599 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17310 interne); stringhe deallocate: 0 (17230 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9240312664932207 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.809259008211207


ris (2 : 2): [ -1 0.809259008211207 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17330 interne); stringhe deallocate: 0 (17250 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6294169514603238 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7722156729196154


ris (2 : 2): [ 1 0.7722156729196154 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17350 interne); stringhe deallocate: 0 (17270 interne)


Stringhe allocate: 1 (17350 interne); stringhe deallocate: 0 (17275 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.07596859877607864 0.07596859877607864 0.6294171851373599 0.190740991788793 0.7722156729196154 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6798512984139498 0.4149992969291592 0.999930944984901 0.8268585145669227 0.9999963631347177 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8090553372329667 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9282339062500649


ris (2 : 2): [ -1 0.9282339062500649 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17385 interne); stringhe deallocate: 0 (17305 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617502e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9282339062500649


ris (2 : 2): [ -1 0.9282339062500649 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17405 interne); stringhe deallocate: 0 (17325 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7500543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6197844091999278


ris (2 : 2): [ 1 0.6197844091999278 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17425 interne); stringhe deallocate: 0 (17345 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9282336323685252 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8101611105496031


ris (2 : 2): [ -1 0.8101611105496031 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17445 interne); stringhe deallocate: 0 (17365 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6197843640274332 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7670543267826209


ris (2 : 2): [ 1 0.7670543267826209 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17465 interne); stringhe deallocate: 0 (17385 interne)


Stringhe allocate: 1 (17465 interne); stringhe deallocate: 0 (17390 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.07176609374993515 0.07176609374993515 0.6197844091999278 0.189838889450397 0.7670543267826209 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.67865969934919 0.4128385608670114 0.9999162870703691 0.8251236852901787 0.9999959860241694 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8092589466995799 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9288169979242311


ris (2 : 2): [ -1 0.9288169979242311 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17500 interne); stringhe deallocate: 0 (17420 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892620272e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9288169979242311


ris (2 : 2): [ -1 0.9288169979242311 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17520 interne); stringhe deallocate: 0 (17440 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7500543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6184524764859352


ris (2 : 2): [ 1 0.6184524764859352 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17540 interne); stringhe deallocate: 0 (17460 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9288168042129454 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8103008270423426


ris (2 : 2): [ -1 0.8103008270423426 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17560 interne); stringhe deallocate: 0 (17480 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.618452081007419 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7663410288781722


ris (2 : 2): [ 1 0.7663410288781722 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17580 interne); stringhe deallocate: 0 (17500 interne)


Stringhe allocate: 1 (17580 interne); stringhe deallocate: 0 (17505 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.07118300207576889 0.07118300207576889 0.6184524764859352 0.1896991729576574 0.7663410288781722 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6785014094055575 0.412550976312263 0.9999140291174375 0.8248546704560436 0.999995930919551 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8101606457656798 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9250040801892823


ris (2 : 2): [ -1 0.9250040801892823 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17615 interne); stringhe deallocate: 0 (17535 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618805e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9250040801892823


ris (2 : 2): [ -1 0.9250040801892823 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17635 interne); stringhe deallocate: 0 (17555 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7500543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6271945305026599


ris (2 : 2): [ 1 0.6271945305026599 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17655 interne); stringhe deallocate: 0 (17575 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9250040142963627 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8094648156189894


ris (2 : 2): [ -1 0.8094648156189894 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17675 interne); stringhe deallocate: 0 (17595 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6271944134663876 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.771022673220684


ris (2 : 2): [ 1 0.771022673220684 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17695 interne); stringhe deallocate: 0 (17615 interne)


Stringhe allocate: 1 (17695 interne); stringhe deallocate: 0 (17620 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.07499591981071774 0.07499591981071774 0.6271945305026599 0.1905351843810106 0.771022673220684 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6795674062406476 0.414485166162501 0.9999278087416292 0.8264630559115145 0.9999962792451929 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.810300835890601 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9287940901669293


ris (2 : 2): [ -1 0.9287940901669293 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17730 interne); stringhe deallocate: 0 (17650 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617894e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9287940901669293


ris (2 : 2): [ -1 0.9287940901669293 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17750 interne); stringhe deallocate: 0 (17670 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7500543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6184662287434888


ris (2 : 2): [ 1 0.6184662287434888 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17770 interne); stringhe deallocate: 0 (17690 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9287939160301866 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8102562538471408


ris (2 : 2): [ -1 0.8102562538471408 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17790 interne); stringhe deallocate: 0 (17710 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6184659092850033 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7663541783674795


ris (2 : 2): [ 1 0.7663541783674795 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17810 interne); stringhe deallocate: 0 (17730 interne)


Stringhe allocate: 1 (17810 interne); stringhe deallocate: 0 (17735 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.07120590983307074 0.07120590983307074 0.6184662287434888 0.1897437461528592 0.7663541783674795 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6785075965419907 0.4125622197670852 0.9999140527392055 0.8249405024481585 0.9999959319422049 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8094644635155381 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9287940901669293


ris (2 : 2): [ -1 0.9287940901669293 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17845 interne); stringhe deallocate: 0 (17765 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892621764e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9287940901669293


ris (2 : 2): [ -1 0.9287940901669293 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17865 interne); stringhe deallocate: 0 (17785 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7500543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6184662287434888


ris (2 : 2): [ 1 0.6184662287434888 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17885 interne); stringhe deallocate: 0 (17805 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9287939160294467 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8102562538471408


ris (2 : 2): [ -1 0.8102562538471408 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17905 interne); stringhe deallocate: 0 (17825 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6184659092850309 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7663541783674795


ris (2 : 2): [ 1 0.7663541783674795 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17925 interne); stringhe deallocate: 0 (17845 interne)


Stringhe allocate: 1 (17925 interne); stringhe deallocate: 0 (17850 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.07120590983307074 0.07120590983307074 0.6184662287434888 0.1897437461528592 0.7663541783674795 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6785075965419907 0.4125622197670852 0.9999140527392055 0.8249405024481585 0.9999959319422049 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8102560131974155 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9306375848458123


ris (2 : 2): [ -1 0.9306375848458123 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17960 interne); stringhe deallocate: 0 (17880 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622814e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9306375848458123


ris (2 : 2): [ -1 0.9306375848458123 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17980 interne); stringhe deallocate: 0 (17900 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7500543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6141746259768895


ris (2 : 2): [ 1 0.6141746259768895 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18000 interne); stringhe deallocate: 0 (17920 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9306373684830032 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8106196494990202


ris (2 : 2): [ -1 0.8106196494990202 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18020 interne); stringhe deallocate: 0 (17940 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6141743748611734 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7640683461671987


ris (2 : 2): [ 1 0.7640683461671987 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18040 interne); stringhe deallocate: 0 (17960 interne)


Stringhe allocate: 1 (18040 interne); stringhe deallocate: 0 (17965 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.06936241515418773 0.06936241515418773 0.6141746259768895 0.1893803505009798 0.7640683461671987 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6780178341185505 0.4116715602396299 0.9999063570221537 0.8242404828478195 0.9999957502517958 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8102560131973586 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.931505349562637


ris (2 : 2): [ -1 0.931505349562637 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18075 interne); stringhe deallocate: 0 (17995 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892638181e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.931505349562637


ris (2 : 2): [ -1 0.931505349562637 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18095 interne); stringhe deallocate: 0 (18015 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7500543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6121085701734481


ris (2 : 2): [ 1 0.6121085701734481 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18115 interne); stringhe deallocate: 0 (18035 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9315052121111274 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8107717410747212


ris (2 : 2): [ -1 0.8107717410747212 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18135 interne); stringhe deallocate: 0 (18055 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6121082394546846 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7629780069949261


ris (2 : 2): [ 1 0.7629780069949261 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18155 interne); stringhe deallocate: 0 (18075 interne)


Stringhe allocate: 1 (18155 interne); stringhe deallocate: 0 (18080 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.06849465043736303 0.06849465043736303 0.6121085701734481 0.1892282589252788 0.7629780069949261 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6777929209517712 0.4112620952762329 0.9999024101802515 0.8239473375606181 0.9999956607490925 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8106193631121039 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9352923031144291


ris (2 : 2): [ -1 0.9352923031144291 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18190 interne); stringhe deallocate: 0 (18110 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616983e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9352923031144291


ris (2 : 2): [ -1 0.9352923031144291 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18210 interne); stringhe deallocate: 0 (18130 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7500543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6030913538969189


ris (2 : 2): [ 1 0.6030913538969189 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18230 interne); stringhe deallocate: 0 (18150 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9352922528214736 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8114470588150831


ris (2 : 2): [ -1 0.8114470588150831 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18250 interne); stringhe deallocate: 0 (18170 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.603091248793536 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7582214839789819


ris (2 : 2): [ 1 0.7582214839789819 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18270 interne); stringhe deallocate: 0 (18190 interne)


Stringhe allocate: 1 (18270 interne); stringhe deallocate: 0 (18195 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.06470769688557088 0.06470769688557088 0.6030913538969189 0.1885529411849169 0.7582214839789819 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6768520646425109 0.409546024242133 0.9998831431545077 0.8226445633184001 0.9999952477258058 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8107714741654677 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9358177362656377


ris (2 : 2): [ -1 0.9358177362656377 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18305 interne); stringhe deallocate: 0 (18225 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617843e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9358177362656377


ris (2 : 2): [ -1 0.9358177362656377 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18325 interne); stringhe deallocate: 0 (18245 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7500543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6018440639715069


ris (2 : 2): [ 1 0.6018440639715069 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18345 interne); stringhe deallocate: 0 (18265 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9358177273697494 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8115517438379539


ris (2 : 2): [ -1 0.8115517438379539 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18365 interne); stringhe deallocate: 0 (18285 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6018438427872006 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7575636934725455


ris (2 : 2): [ 1 0.7575636934725455 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18385 interne); stringhe deallocate: 0 (18305 interne)


Stringhe allocate: 1 (18385 interne); stringhe deallocate: 0 (18310 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.06418226373436231 0.06418226373436231 0.6018440639715069 0.1884482561620461 0.7575636934725455 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6767266021216291 0.4093167831003766 0.9998801942640995 0.8224424492014341 0.9999951875947152 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8114466755814194 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9323818633818249


ris (2 : 2): [ -1 0.9323818633818249 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18420 interne); stringhe deallocate: 0 (18340 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616958e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9323818633818249


ris (2 : 2): [ -1 0.9323818633818249 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18440 interne); stringhe deallocate: 0 (18360 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7500543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6100275513360886


ris (2 : 2): [ 1 0.6100275513360886 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18460 interne); stringhe deallocate: 0 (18380 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9323816388080095 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8109257762137785


ris (2 : 2): [ -1 0.8109257762137785 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18480 interne); stringhe deallocate: 0 (18400 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6100273220963102 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7618783932350847


ris (2 : 2): [ 1 0.7618783932350847 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18500 interne); stringhe deallocate: 0 (18420 interne)


Stringhe allocate: 1 (18500 interne); stringhe deallocate: 0 (18425 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.06761813661817506 0.06761813661817506 0.6100275513360886 0.1890742237862215 0.7618783932350847 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6775693247324469 0.4108547412075043 0.999898266614741 0.8236503477380948 0.9999955685758797 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8115515797564958 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9357970440060223


ris (2 : 2): [ -1 0.9357970440060223 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18535 interne); stringhe deallocate: 0 (18455 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622789e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9357970440060223


ris (2 : 2): [ -1 0.9357970440060223 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18555 interne); stringhe deallocate: 0 (18475 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7500543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6018598092661583


ris (2 : 2): [ 1 0.6018598092661583 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18575 interne); stringhe deallocate: 0 (18495 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.935796746535134 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8115181790267809


ris (2 : 2): [ -1 0.8115181790267809 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18595 interne); stringhe deallocate: 0 (18515 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6018595784134195 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7575778984501406


ris (2 : 2): [ 1 0.7575778984501406 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18615 interne); stringhe deallocate: 0 (18535 interne)


Stringhe allocate: 1 (18615 interne); stringhe deallocate: 0 (18540 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.06420295599397774 0.06420295599397774 0.6018598092661583 0.1884818209732191 0.7575778984501406 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6767315201470818 0.409325771006522 0.9998802319494633 0.8225072570462787 0.9999951889012485 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8109254925678489 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9357970440060223


ris (2 : 2): [ -1 0.9357970440060223 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18650 interne); stringhe deallocate: 0 (18570 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892628847e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9357970440060223


ris (2 : 2): [ -1 0.9357970440060223 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18670 interne); stringhe deallocate: 0 (18590 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7500543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6018598092661583


ris (2 : 2): [ 1 0.6018598092661583 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18690 interne); stringhe deallocate: 0 (18610 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9357967465362131 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8115181790267809


ris (2 : 2): [ -1 0.8115181790267809 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18710 interne); stringhe deallocate: 0 (18630 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6018595784134249 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7575778984501406


ris (2 : 2): [ 1 0.7575778984501406 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18730 interne); stringhe deallocate: 0 (18650 interne)


Stringhe allocate: 1 (18730 interne); stringhe deallocate: 0 (18655 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.06420295599397774 0.06420295599397774 0.6018598092661583 0.1884818209732191 0.7575778984501406 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6767315201470818 0.409325771006522 0.9998802319494633 0.8225072570462787 0.9999951889012485 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8115177243194163 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.937458139030637


ris (2 : 2): [ -1 0.937458139030637 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18765 interne); stringhe deallocate: 0 (18685 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618311e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.937458139030637


ris (2 : 2): [ -1 0.937458139030637 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18785 interne); stringhe deallocate: 0 (18705 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7500543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.597846873260846


ris (2 : 2): [ 1 0.597846873260846 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18805 interne); stringhe deallocate: 0 (18725 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9374580471939042 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8117901291468689


ris (2 : 2): [ -1 0.8117901291468689 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18825 interne); stringhe deallocate: 0 (18745 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5978465168904599 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7554742166567119


ris (2 : 2): [ 1 0.7554742166567119 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18845 interne); stringhe deallocate: 0 (18765 interne)


Stringhe allocate: 1 (18845 interne); stringhe deallocate: 0 (18770 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.06254186096936298 0.06254186096936298 0.597846873260846 0.1882098708531311 0.7554742166567119 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6763426111198774 0.4086145508444677 0.9998702333714739 0.8219820430121194 0.9999949914944707 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8115177243179277 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9382399557287046


ris (2 : 2): [ -1 0.9382399557287046 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18880 interne); stringhe deallocate: 0 (18800 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617502e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9382399557287046


ris (2 : 2): [ -1 0.9382399557287046 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18900 interne); stringhe deallocate: 0 (18820 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7500543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5959178241464019


ris (2 : 2): [ 1 0.5959178241464019 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18920 interne); stringhe deallocate: 0 (18840 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9382395832962596 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8119039105799335


ris (2 : 2): [ -1 0.8119039105799335 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18940 interne); stringhe deallocate: 0 (18860 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5959177105850522 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7544725728543433


ris (2 : 2): [ 1 0.7544725728543433 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18960 interne); stringhe deallocate: 0 (18880 interne)


Stringhe allocate: 1 (18960 interne); stringhe deallocate: 0 (18885 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.06176004427129544 0.06176004427129544 0.5959178241464019 0.1880960894200665 0.7544725728543433 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6761636392018899 0.4082869281033438 0.9998651341641192 0.8217622143332733 0.9999948946751638 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8117899983353221 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9416517942785637


ris (2 : 2): [ -1 0.9416517942785637 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18995 interne); stringhe deallocate: 0 (18915 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892620272e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9416517942785637


ris (2 : 2): [ -1 0.9416517942785637 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19015 interne); stringhe deallocate: 0 (18935 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7500543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.587498223203331


ris (2 : 2): [ 1 0.587498223203331 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19035 interne); stringhe deallocate: 0 (18955 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9416513531631408 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8124091859550906


ris (2 : 2): [ -1 0.8124091859550906 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19055 interne); stringhe deallocate: 0 (18975 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5874981968826871 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7501026117881257


ris (2 : 2): [ 1 0.7501026117881257 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19075 interne); stringhe deallocate: 0 (18995 interne)


Stringhe allocate: 1 (19075 interne); stringhe deallocate: 0 (19000 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.05834820572143629 0.05834820572143629 0.587498223203331 0.1875908140449094 0.7501026117881257 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6754121315079372 0.4069088933564739 0.9998404272110363 0.820785427868139 0.9999944498987801 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8119034855789122 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.942125179923366


ris (2 : 2): [ -1 0.942125179923366 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19110 interne); stringhe deallocate: 0 (19030 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618805e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.942125179923366


ris (2 : 2): [ -1 0.942125179923366 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19130 interne); stringhe deallocate: 0 (19050 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7500543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5863332634497115


ris (2 : 2): [ 1 0.5863332634497115 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19150 interne); stringhe deallocate: 0 (19070 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9421248524616459 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8124875577345685


ris (2 : 2): [ -1 0.8124875577345685 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19170 interne); stringhe deallocate: 0 (19090 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5863328068680094 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7494979717745082


ris (2 : 2): [ 1 0.7494979717745082 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19190 interne); stringhe deallocate: 0 (19110 interne)


Stringhe allocate: 1 (19190 interne); stringhe deallocate: 0 (19115 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.05787482007663403 0.05787482007663403 0.5863332634497115 0.1875124422654315 0.7494979717745082 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6753115569712603 0.406724174589201 0.9998366696656339 0.8206338383215495 0.9999943853801407 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.812408932967017 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9390296649477267


ris (2 : 2): [ -1 0.9390296649477267 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19225 interne); stringhe deallocate: 0 (19145 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617894e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9390296649477267


ris (2 : 2): [ -1 0.9390296649477267 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19245 interne); stringhe deallocate: 0 (19165 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7500543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5939744290958519


ris (2 : 2): [ 1 0.5939744290958519 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19265 interne); stringhe deallocate: 0 (19185 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9390292256310167 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8120191438390538


ris (2 : 2): [ -1 0.8120191438390538 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19285 interne); stringhe deallocate: 0 (19205 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5939741223282198 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.753462188404827


ris (2 : 2): [ 1 0.753462188404827 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19305 interne); stringhe deallocate: 0 (19225 interne)


Stringhe allocate: 1 (19305 interne); stringhe deallocate: 0 (19230 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.06097033505227334 0.06097033505227334 0.5939744290958519 0.1879808561609462 0.753462188404827 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6759854594529071 0.4079605464173092 0.9998597944661591 0.8215395310147179 0.9999947951147377 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8124871342613877 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9421064760139571


ris (2 : 2): [ -1 0.9421064760139571 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19340 interne); stringhe deallocate: 0 (19260 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892621764e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9421064760139571


ris (2 : 2): [ -1 0.9421064760139571 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19360 interne); stringhe deallocate: 0 (19280 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7500543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5863500482840626


ris (2 : 2): [ 1 0.5863500482840626 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19380 interne); stringhe deallocate: 0 (19300 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9421062558121616 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8124623462735735


ris (2 : 2): [ -1 0.8124623462735735 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19400 interne); stringhe deallocate: 0 (19320 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5863499730061825 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7495125081409756


ris (2 : 2): [ 1 0.7495125081409756 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19420 interne); stringhe deallocate: 0 (19340 interne)


Stringhe allocate: 1 (19420 interne); stringhe deallocate: 0 (19345 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.05789352398604286 0.05789352398604286 0.5863500482840626 0.1875376537264265 0.7495125081409756 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6753155140518193 0.4067314436597501 0.9998367244277083 0.8206826056346556 0.9999943869400205 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8120188801712924 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9421064760139571


ris (2 : 2): [ -1 0.9421064760139571 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19455 interne); stringhe deallocate: 0 (19375 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622814e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9421064760139571


ris (2 : 2): [ -1 0.9421064760139571 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19475 interne); stringhe deallocate: 0 (19395 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7500543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5863500482840626


ris (2 : 2): [ 1 0.5863500482840626 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19495 interne); stringhe deallocate: 0 (19415 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9421062558121047 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8124623462735735


ris (2 : 2): [ -1 0.8124623462735735 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19515 interne); stringhe deallocate: 0 (19435 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5863499730057065 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7495125081409756


ris (2 : 2): [ 1 0.7495125081409756 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19535 interne); stringhe deallocate: 0 (19455 interne)


Stringhe allocate: 1 (19535 interne); stringhe deallocate: 0 (19460 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.05789352398604286 0.05789352398604286 0.5863500482840626 0.1875376537264265 0.7495125081409756 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6753155140518193 0.4067314436597501 0.9998367244277083 0.8206826056346556 0.9999943869400205 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8124623387283645 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9436028970174579


ris (2 : 2): [ -1 0.9436028970174579 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19570 interne); stringhe deallocate: 0 (19490 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892638181e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9436028970174579


ris (2 : 2): [ -1 0.9436028970174579 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19590 interne); stringhe deallocate: 0 (19510 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7500543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5826063052439418


ris (2 : 2): [ 1 0.5826063052439418 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19610 interne); stringhe deallocate: 0 (19530 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9436025708147406 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.812665775580057


ris (2 : 2): [ -1 0.812665775580057 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19630 interne); stringhe deallocate: 0 (19550 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5826058476395231 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7475818481798405


ris (2 : 2): [ 1 0.7475818481798405 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19650 interne); stringhe deallocate: 0 (19570 interne)


Stringhe allocate: 1 (19650 interne); stringhe deallocate: 0 (19575 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.05639710298254208 0.05639710298254208 0.5826063052439418 0.187334224419943 0.7475818481798405 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6750032222579299 0.4061574244217392 0.9998240440447723 0.8202890419665596 0.9999941759223292 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.812462338728559 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9443071005651892


ris (2 : 2): [ -1 0.9443071005651892 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19685 interne); stringhe deallocate: 0 (19605 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616983e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9443071005651892


ris (2 : 2): [ -1 0.9443071005651892 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19705 interne); stringhe deallocate: 0 (19625 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7188043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5808087576525138


ris (2 : 2): [ 1 0.5808087576525138 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19725 interne); stringhe deallocate: 0 (19645 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9443068592973036 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8127508695168297


ris (2 : 2): [ -1 0.8127508695168297 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19745 interne); stringhe deallocate: 0 (19665 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5808086483902262 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7466638932108066


ris (2 : 2): [ 1 0.7466638932108066 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19765 interne); stringhe deallocate: 0 (19685 interne)


Stringhe allocate: 1 (19765 interne); stringhe deallocate: 0 (19690 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.05569289943481082 0.05569289943481082 0.5808087576525138 0.1872491304831703 0.7466638932108066 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6748592345787521 0.4058925230229694 0.9998176103772387 0.8201243723651894 0.9999940728269871 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8126654713578505 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9473801974991882


ris (2 : 2): [ -1 0.9473801974991882 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19800 interne); stringhe deallocate: 0 (19720 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617843e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9473801974991882


ris (2 : 2): [ -1 0.9473801974991882 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19820 interne); stringhe deallocate: 0 (19740 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7500543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5729628817471497


ris (2 : 2): [ 1 0.5729628817471497 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19840 interne); stringhe deallocate: 0 (19760 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9473800747818588 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8131287822020414


ris (2 : 2): [ -1 0.8131287822020414 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19860 interne); stringhe deallocate: 0 (19780 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5729627697891573 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7426587982199034


ris (2 : 2): [ 1 0.7426587982199034 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19880 interne); stringhe deallocate: 0 (19800 interne)


Stringhe allocate: 1 (19880 interne); stringhe deallocate: 0 (19805 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.05261980250081177 0.05261980250081177 0.5729628817471497 0.1868712177979586 0.7426587982199034 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6742524955652162 0.4047745527363832 0.9997866607258827 0.819392755240165 0.9999936012366713 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8127508252091049 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9478065830343433


ris (2 : 2): [ -1 0.9478065830343433 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19915 interne); stringhe deallocate: 0 (19835 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616958e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9478065830343433


ris (2 : 2): [ -1 0.9478065830343433 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19935 interne); stringhe deallocate: 0 (19855 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7188043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5718770654387736


ris (2 : 2): [ 1 0.5718770654387736 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19955 interne); stringhe deallocate: 0 (19875 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9478063672015642 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8131874223870661


ris (2 : 2): [ -1 0.8131874223870661 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19975 interne); stringhe deallocate: 0 (19895 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5718770115804013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7421044238727557


ris (2 : 2): [ 1 0.7421044238727557 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19995 interne); stringhe deallocate: 0 (19915 interne)


Stringhe allocate: 1 (19995 interne); stringhe deallocate: 0 (19920 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.05219341696565671 0.05219341696565671 0.5718770654387736 0.1868125776129339 0.7421044238727557 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6741710233101601 0.4046242147822264 0.9997819827088071 0.8192791882921764 0.9999935330693944 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8131284802386736 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9450184252347493


ris (2 : 2): [ -1 0.9450184252347493 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20030 interne); stringhe deallocate: 0 (19950 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622789e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9450184252347493


ris (2 : 2): [ -1 0.9450184252347493 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20050 interne); stringhe deallocate: 0 (19970 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7188043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5789975659756494


ris (2 : 2): [ 1 0.5789975659756494 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20070 interne); stringhe deallocate: 0 (19990 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9450183003376242 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8128370481266606


ris (2 : 2): [ -1 0.8128370481266606 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20090 interne); stringhe deallocate: 0 (20010 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5789971440262143 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7457377685377107


ris (2 : 2): [ 1 0.7457377685377107 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20110 interne); stringhe deallocate: 0 (20030 interne)


Stringhe allocate: 1 (20110 interne); stringhe deallocate: 0 (20035 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.05498157476525067 0.05498157476525067 0.5789975659756494 0.1871629518733394 0.7457377685377107 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6747156912342907 0.4056282855213531 0.9998108900319431 0.8199575782648861 0.999993966964674 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8131871312092063 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9477896623926864


ris (2 : 2): [ -1 0.9477896623926864 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20145 interne); stringhe deallocate: 0 (20065 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892628847e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9477896623926864


ris (2 : 2): [ -1 0.9477896623926864 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20165 interne); stringhe deallocate: 0 (20085 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7188043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5718942353737266


ris (2 : 2): [ 1 0.5718942353737266 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20185 interne); stringhe deallocate: 0 (20105 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9477892010650217 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8131685161924288


ris (2 : 2): [ -1 0.8131685161924288 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20205 interne); stringhe deallocate: 0 (20125 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5718941777176481 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7421188166870639


ris (2 : 2): [ 1 0.7421188166870639 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20225 interne); stringhe deallocate: 0 (20145 interne)


Stringhe allocate: 1 (20225 interne); stringhe deallocate: 0 (20150 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.05221033760731364 0.05221033760731364 0.5718942353737266 0.1868314838075712 0.7421188166870639 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6741742441100113 0.404630159017728 0.9997820574738932 0.8193158046769916 0.99999353484832 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8128366558990061 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9477896623926864


ris (2 : 2): [ -1 0.9477896623926864 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20260 interne); stringhe deallocate: 0 (20180 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618311e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9477896623926864


ris (2 : 2): [ -1 0.9477896623926864 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20280 interne); stringhe deallocate: 0 (20200 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7188043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5718942353737266


ris (2 : 2): [ 1 0.5718942353737266 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20300 interne); stringhe deallocate: 0 (20220 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9477892010635332 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8131685161924288


ris (2 : 2): [ -1 0.8131685161924288 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20320 interne); stringhe deallocate: 0 (20240 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5718941777176188 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7421188166870639


ris (2 : 2): [ 1 0.7421188166870639 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20340 interne); stringhe deallocate: 0 (20260 interne)


Stringhe allocate: 1 (20340 interne); stringhe deallocate: 0 (20265 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.05221033760731364 0.05221033760731364 0.5718942353737266 0.1868314838075712 0.7421188166870639 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6741742441100113 0.404630159017728 0.9997820574738932 0.8193158046769916 0.99999353484832 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8131680577224687 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9491373529736141


ris (2 : 2): [ -1 0.9491373529736141 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20375 interne); stringhe deallocate: 0 (20295 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617502e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9491373529736141


ris (2 : 2): [ -1 0.9491373529736141 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20395 interne); stringhe deallocate: 0 (20315 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7188043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5684079944966763


ris (2 : 2): [ 1 0.5684079944966763 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20415 interne); stringhe deallocate: 0 (20335 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9491372197098338 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8133206450460621


ris (2 : 2): [ -1 0.8133206450460621 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20435 interne); stringhe deallocate: 0 (20355 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5684075444168428 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7403508492988793


ris (2 : 2): [ 1 0.7403508492988793 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20455 interne); stringhe deallocate: 0 (20375 interne)


Stringhe allocate: 1 (20455 interne); stringhe deallocate: 0 (20380 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.05086264702638588 0.05086264702638588 0.5684079944966763 0.186679354953938 0.7403508492988793 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6739208758130946 0.4041622926661763 0.9997663388196979 0.8190211373947507 0.9999933126271458 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8131680577225291 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9497714398435645


ris (2 : 2): [ -1 0.9497714398435645 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20490 interne); stringhe deallocate: 0 (20410 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892620272e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9497714398435645


ris (2 : 2): [ -1 0.9497714398435645 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20510 interne); stringhe deallocate: 0 (20430 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7188043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5667356491372512


ris (2 : 2): [ 1 0.5667356491372512 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20530 interne); stringhe deallocate: 0 (20450 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9497714131301818 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8133842703450998


ris (2 : 2): [ -1 0.8133842703450998 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20550 interne); stringhe deallocate: 0 (20470 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.566735276503497 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7395112029508063


ris (2 : 2): [ 1 0.7395112029508063 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20570 interne); stringhe deallocate: 0 (20490 interne)


Stringhe allocate: 1 (20570 interne); stringhe deallocate: 0 (20495 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.05022856015643551 0.05022856015643551 0.5667356491372512 0.1866157296549003 0.7395112029508063 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6738038559642618 0.403946028352528 0.9997584013765427 0.8188978754836154 0.999993204430237 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8133206456130919 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9525385104121589


ris (2 : 2): [ -1 0.9525385104121589 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20605 interne); stringhe deallocate: 0 (20525 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618805e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9525385104121589


ris (2 : 2): [ -1 0.9525385104121589 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20625 interne); stringhe deallocate: 0 (20545 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7188043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5594360964145524


ris (2 : 2): [ 1 0.5594360964145524 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20645 interne); stringhe deallocate: 0 (20565 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.952538499159644 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8136668542279212


ris (2 : 2): [ -1 0.8136668542279212 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20665 interne); stringhe deallocate: 0 (20585 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5594358532852475 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7358476000132446


ris (2 : 2): [ 1 0.7358476000132446 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20685 interne); stringhe deallocate: 0 (20605 interne)


Stringhe allocate: 1 (20685 interne); stringhe deallocate: 0 (20610 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.04746148958784113 0.04746148958784113 0.5594360964145524 0.1863331457720788 0.7358476000132446 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6733091475300559 0.4030304811356003 0.9997204779631679 0.8183502667288992 0.9999927114809508 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8133840649555424 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.952922435785779


ris (2 : 2): [ -1 0.952922435785779 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20720 interne); stringhe deallocate: 0 (20640 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617894e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.952922435785779


ris (2 : 2): [ -1 0.952922435785779 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20740 interne); stringhe deallocate: 0 (20660 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7188043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5584257152619337


ris (2 : 2): [ 1 0.5584257152619337 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20760 interne); stringhe deallocate: 0 (20680 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9529223530724229 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8137107143212152


ris (2 : 2): [ -1 0.8137107143212152 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20780 interne); stringhe deallocate: 0 (20700 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5584254353470426 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7353403380323773


ris (2 : 2): [ 1 0.7353403380323773 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20800 interne); stringhe deallocate: 0 (20720 interne)


Stringhe allocate: 1 (20800 interne); stringhe deallocate: 0 (20725 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.04707756421422105 0.04707756421422105 0.5584257152619337 0.1862892856787848 0.7353403380323773 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6732425130204326 0.4029070000285435 0.9997147797368965 0.8182652493689538 0.9999926404658339 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8136668293907823 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9504119531439892


ris (2 : 2): [ -1 0.9504119531439892 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20835 interne); stringhe deallocate: 0 (20755 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892621764e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9504119531439892


ris (2 : 2): [ -1 0.9504119531439892 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20855 interne); stringhe deallocate: 0 (20775 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7188043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5650504042824783


ris (2 : 2): [ 1 0.5650504042824783 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20875 interne); stringhe deallocate: 0 (20795 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9504118054337436 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8134487060900086


ris (2 : 2): [ -1 0.8134487060900086 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20895 interne); stringhe deallocate: 0 (20815 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5650501339859293 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7386639672561527


ris (2 : 2): [ 1 0.7386639672561527 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20915 interne); stringhe deallocate: 0 (20835 interne)


Stringhe allocate: 1 (20915 interne); stringhe deallocate: 0 (20840 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.04958804685601082 0.04958804685601082 0.5650504042824783 0.1865512939099914 0.7386639672561527 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.673687051041299 0.4037300476386131 0.9997501300813139 0.8187730301983035 0.9999930934809772 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8137106984085971 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9529071135962676


ris (2 : 2): [ -1 0.9529071135962676 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20950 interne); stringhe deallocate: 0 (20870 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622814e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9529071135962676


ris (2 : 2): [ -1 0.9529071135962676 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20970 interne); stringhe deallocate: 0 (20890 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7188043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.55844282456501


ris (2 : 2): [ 1 0.55844282456501 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20990 interne); stringhe deallocate: 0 (20910 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9529070942825637 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8136965516620303


ris (2 : 2): [ -1 0.8136965516620303 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21010 interne); stringhe deallocate: 0 (20930 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5584426014847139 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7353542829105327


ris (2 : 2): [ 1 0.7353542829105327 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21030 interne); stringhe deallocate: 0 (20950 interne)


Stringhe allocate: 1 (21030 interne); stringhe deallocate: 0 (20955 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.04709288640373244 0.04709288640373244 0.55844282456501 0.1863034483379698 0.7353542829105327 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6732451631664909 0.4029119117918832 0.9997148771874999 0.8182927025836436 0.9999926424272922 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8134484379715286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9529071135962676


ris (2 : 2): [ -1 0.9529071135962676 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21065 interne); stringhe deallocate: 0 (20985 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892638181e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9529071135962676


ris (2 : 2): [ -1 0.9529071135962676 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21085 interne); stringhe deallocate: 0 (21005 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7188043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.55844282456501


ris (2 : 2): [ 1 0.55844282456501 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21105 interne); stringhe deallocate: 0 (21025 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9529070942827582 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8136965516620303


ris (2 : 2): [ -1 0.8136965516620303 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21125 interne); stringhe deallocate: 0 (21045 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5584426014851864 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7353542829105327


ris (2 : 2): [ 1 0.7353542829105327 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21145 interne); stringhe deallocate: 0 (21065 interne)


Stringhe allocate: 1 (21145 interne); stringhe deallocate: 0 (21070 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.04709288640373244 0.04709288640373244 0.55844282456501 0.1863034483379698 0.7353542829105327 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6732451631664909 0.4029119117918832 0.9997148771874999 0.8182927025836436 0.9999926424272922 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8136963932939887 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.954120413772335


ris (2 : 2): [ -1 0.954120413772335 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21180 interne); stringhe deallocate: 0 (21100 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616983e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.954120413772335


ris (2 : 2): [ -1 0.954120413772335 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21200 interne); stringhe deallocate: 0 (21120 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7188043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5552011349113358


ris (2 : 2): [ 1 0.5552011349113358 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21220 interne); stringhe deallocate: 0 (21140 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9541201680131239 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8138102940335793


ris (2 : 2): [ -1 0.8138102940335793 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21240 interne); stringhe deallocate: 0 (21160 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5552010624832455 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.733738158265819


ris (2 : 2): [ 1 0.733738158265819 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21260 interne); stringhe deallocate: 0 (21180 interne)


Stringhe allocate: 1 (21260 interne); stringhe deallocate: 0 (21185 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.04587958622766497 0.04587958622766497 0.5552011349113358 0.1861897059664207 0.733738158265819 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6730376523482 0.402527122569131 0.9996958061159228 0.8180722043327406 0.999992411589715 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8136963932938857 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9546911266428185


ris (2 : 2): [ -1 0.9546911266428185 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21295 interne); stringhe deallocate: 0 (21215 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617843e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9546911266428185


ris (2 : 2): [ -1 0.9546911266428185 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21315 interne); stringhe deallocate: 0 (21235 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7188043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5536472789065521


ris (2 : 2): [ 1 0.5536472789065521 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21335 interne); stringhe deallocate: 0 (21255 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9546909420914291 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8138578597185275


ris (2 : 2): [ -1 0.8138578597185275 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21355 interne); stringhe deallocate: 0 (21275 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5536470501846891 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7329713307487579


ris (2 : 2): [ 1 0.7329713307487579 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21375 interne); stringhe deallocate: 0 (21295 interne)


Stringhe allocate: 1 (21375 interne); stringhe deallocate: 0 (21300 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.04530887335718148 0.04530887335718148 0.5536472789065521 0.1861421402814725 0.7329713307487579 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6729416676032421 0.4023490053854417 0.9996862178599936 0.817979982844912 0.9999922995410562 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8138098805374741 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9571815972336194


ris (2 : 2): [ -1 0.9571815972336194 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21410 interne); stringhe deallocate: 0 (21330 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616958e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9571815972336194


ris (2 : 2): [ -1 0.9571815972336194 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21430 interne); stringhe deallocate: 0 (21350 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7188043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.54686481170083


ris (2 : 2): [ 1 0.54686481170083 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21450 interne); stringhe deallocate: 0 (21370 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9571814625689958 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8140691251624551


ris (2 : 2): [ -1 0.8140691251624551 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21470 interne); stringhe deallocate: 0 (21390 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5468645184463785 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7296253353956969


ris (2 : 2): [ 1 0.7296253353956969 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21490 interne); stringhe deallocate: 0 (21410 interne)


Stringhe allocate: 1 (21490 interne); stringhe deallocate: 0 (21415 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.0428184027663806 0.0428184027663806 0.54686481170083 0.1859308748375449 0.7296253353956969 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6725346696809941 0.4015927934134625 0.9996407027594454 0.8175702936198126 0.9999917909425212 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8138575642535662 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9575271461532297


ris (2 : 2): [ -1 0.9575271461532297 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21525 interne); stringhe deallocate: 0 (21445 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622789e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9575271461532297


ris (2 : 2): [ -1 0.9575271461532297 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21545 interne); stringhe deallocate: 0 (21465 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7188043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5459258785635271


ris (2 : 2): [ 1 0.5459258785635271 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21565 interne); stringhe deallocate: 0 (21485 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9575266926716086 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.814101922088046


ris (2 : 2): [ -1 0.814101922088046 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21585 interne); stringhe deallocate: 0 (21505 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5459256260818819 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7291619368083859


ris (2 : 2): [ 1 0.7291619368083859 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21605 interne); stringhe deallocate: 0 (21525 interne)


Stringhe allocate: 1 (21605 interne); stringhe deallocate: 0 (21530 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.04247285384677035 0.04247285384677035 0.5459258785635271 0.185898077911954 0.7291619368083859 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6724796932513867 0.4014905248677919 0.9996339023607657 0.8175066813472594 0.9999917179054905 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8140688031147239 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9552676402620429


ris (2 : 2): [ -1 0.9552676402620429 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21640 interne); stringhe deallocate: 0 (21560 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892628847e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9552676402620429


ris (2 : 2): [ -1 0.9552676402620429 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21660 interne); stringhe deallocate: 0 (21580 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7188043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5520812821780916


ris (2 : 2): [ 1 0.5520812821780916 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21680 interne); stringhe deallocate: 0 (21600 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9552674382171214 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.81390603098624


ris (2 : 2): [ -1 0.81390603098624 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21700 interne); stringhe deallocate: 0 (21620 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5520811169575985 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7321974857539509


ris (2 : 2): [ 1 0.7321974857539509 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21720 interne); stringhe deallocate: 0 (21640 interne)


Stringhe allocate: 1 (21720 interne); stringhe deallocate: 0 (21645 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.04473235973795708 0.04473235973795708 0.5520812821780916 0.18609396901376 0.7321974857539509 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6728457477758456 0.4021709240507922 0.9996762491178903 0.8178865802151404 0.9999921847897229 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.814101704879719 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9575132562635507


ris (2 : 2): [ -1 0.9575132562635507 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21755 interne); stringhe deallocate: 0 (21675 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618311e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9575132562635507


ris (2 : 2): [ -1 0.9575132562635507 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21775 interne); stringhe deallocate: 0 (21695 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7188043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.54594262764173


ris (2 : 2): [ 1 0.54594262764173 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21795 interne); stringhe deallocate: 0 (21715 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9575128643936113 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8140913204380154


ris (2 : 2): [ -1 0.8140913204380154 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21815 interne); stringhe deallocate: 0 (21735 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5459423153824154 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7291752460977106


ris (2 : 2): [ 1 0.7291752460977106 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21835 interne); stringhe deallocate: 0 (21755 interne)


Stringhe allocate: 1 (21835 interne); stringhe deallocate: 0 (21760 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.04248674373644934 0.04248674373644934 0.54594262764173 0.1859086795619847 0.7291752460977106 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6724818962113943 0.4014946234344231 0.9996340247884903 0.8175272444477437 0.9999917200122258 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8139057248062089 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9575132562635507


ris (2 : 2): [ -1 0.9575132562635507 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21870 interne); stringhe deallocate: 0 (21790 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617502e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9575132562635507


ris (2 : 2): [ -1 0.9575132562635507 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21890 interne); stringhe deallocate: 0 (21810 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7188043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.54594262764173


ris (2 : 2): [ 1 0.54594262764173 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21910 interne); stringhe deallocate: 0 (21830 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9575128643936717 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8140913204380154


ris (2 : 2): [ -1 0.8140913204380154 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21930 interne); stringhe deallocate: 0 (21850 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.545942315382443 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7291752460977106


ris (2 : 2): [ 1 0.7291752460977106 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21950 interne); stringhe deallocate: 0 (21870 interne)


Stringhe allocate: 1 (21950 interne); stringhe deallocate: 0 (21875 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.04248674373644934 0.04248674373644934 0.54594262764173 0.1859086795619847 0.7291752460977106 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6724818962113943 0.4014946234344231 0.9996340247884903 0.8175272444477437 0.9999917200122258 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8140912144608103 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9586050652274162


ris (2 : 2): [ -1 0.9586050652274162 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21985 interne); stringhe deallocate: 0 (21905 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892620272e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9586050652274162


ris (2 : 2): [ -1 0.9586050652274162 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22005 interne); stringhe deallocate: 0 (21925 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7188043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5429319361182013


ris (2 : 2): [ 1 0.5429319361182013 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22025 interne); stringhe deallocate: 0 (21945 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9586048214858947 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8141763503145346


ris (2 : 2): [ -1 0.8141763503145346 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22045 interne); stringhe deallocate: 0 (21965 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5429315655655191 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7277000437390192


ris (2 : 2): [ 1 0.7277000437390192 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22065 interne); stringhe deallocate: 0 (21985 interne)


Stringhe allocate: 1 (22065 interne); stringhe deallocate: 0 (21990 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.04139493477258383 0.04139493477258383 0.5429319361182013 0.1858236496854654 0.7277000437390192 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6723104826635955 0.4011755694400477 0.9996113474772688 0.8173623100483455 0.9999914832083517 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8140912144607482 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9591184701392713


ris (2 : 2): [ -1 0.9591184701392713 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22100 interne); stringhe deallocate: 0 (22020 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618805e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9591184701392713


ris (2 : 2): [ -1 0.9591184701392713 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22120 interne); stringhe deallocate: 0 (22040 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7188043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5414897040812001


ris (2 : 2): [ 1 0.5414897040812001 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22140 interne); stringhe deallocate: 0 (22060 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9591183751056889 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8142119060664481


ris (2 : 2): [ -1 0.8142119060664481 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22160 interne); stringhe deallocate: 0 (22080 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5414896099991182 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.727000608788597


ris (2 : 2): [ 1 0.727000608788597 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22180 interne); stringhe deallocate: 0 (22100 interne)


Stringhe allocate: 1 (22180 interne); stringhe deallocate: 0 (22105 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.04088152986072868 0.04088152986072868 0.5414897040812001 0.1857880939335519 0.727000608788597 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.672231091642872 0.4010276993289936 0.9995999921081969 0.8172933354518891 0.9999913685780661 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8141760914753178 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9613588149987474


ris (2 : 2): [ -1 0.9613588149987474 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22215 interne); stringhe deallocate: 0 (22135 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617894e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9613588149987474


ris (2 : 2): [ -1 0.9613588149987474 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22235 interne); stringhe deallocate: 0 (22155 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7188043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5351943984146624


ris (2 : 2): [ 1 0.5351943984146624 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22255 interne); stringhe deallocate: 0 (22175 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9613585560753526 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8143698331706188


ris (2 : 2): [ -1 0.8143698331706188 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22275 interne); stringhe deallocate: 0 (22195 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5351944058369931 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7239485917532211


ris (2 : 2): [ 1 0.7239485917532211 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22295 interne); stringhe deallocate: 0 (22215 interne)


Stringhe allocate: 1 (22295 interne); stringhe deallocate: 0 (22220 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.03864118500125258 0.03864118500125258 0.5351943984146624 0.1856301668293812 0.7239485917532211 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6718935299682176 0.4003982563491826 0.9995464161877171 0.8169869283915552 0.9999908500551162 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8142118542626085 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9616696616127989


ris (2 : 2): [ -1 0.9616696616127989 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22330 interne); stringhe deallocate: 0 (22250 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892621764e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9616696616127989


ris (2 : 2): [ -1 0.9616696616127989 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22350 interne); stringhe deallocate: 0 (22270 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7188043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5343228138129141


ris (2 : 2): [ 1 0.5343228138129141 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22370 interne); stringhe deallocate: 0 (22290 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9616694539017612 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8143943531259419


ris (2 : 2): [ -1 0.8143943531259419 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22390 interne); stringhe deallocate: 0 (22310 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5343227475113217 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7235258255288064


ris (2 : 2): [ 1 0.7235258255288064 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22410 interne); stringhe deallocate: 0 (22330 interne)


Stringhe allocate: 1 (22410 interne); stringhe deallocate: 0 (22335 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.03833033838720112 0.03833033838720112 0.5343228138129141 0.1856056468740581 0.7235258255288064 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6718478137770878 0.4003129194976028 0.9995384541622492 0.8169393488311602 0.9999907758142221 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8143696873612338 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9596371121350079


ris (2 : 2): [ -1 0.9596371121350079 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22445 interne); stringhe deallocate: 0 (22365 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622814e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9596371121350079


ris (2 : 2): [ -1 0.9596371121350079 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22465 interne); stringhe deallocate: 0 (22385 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7188043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5400360850279348


ris (2 : 2): [ 1 0.5400360850279348 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22485 interne); stringhe deallocate: 0 (22405 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9596366970962844 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8142479143380693


ris (2 : 2): [ -1 0.8142479143380693 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22505 interne); stringhe deallocate: 0 (22425 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5400357335037809 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7262947084191487


ris (2 : 2): [ 1 0.7262947084191487 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22525 interne); stringhe deallocate: 0 (22445 interne)


Stringhe allocate: 1 (22525 interne); stringhe deallocate: 0 (22450 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.04036288786499209 0.04036288786499209 0.5400360850279348 0.1857520856619307 0.7262947084191487 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6721516688899382 0.400879706688784 0.999588211666411 0.8172234792570912 0.9999912513238538 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8143940060562454 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9616570550735722


ris (2 : 2): [ -1 0.9616570550735722 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22560 interne); stringhe deallocate: 0 (22480 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892638181e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9616570550735722


ris (2 : 2): [ -1 0.9616570550735722 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22580 interne); stringhe deallocate: 0 (22500 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7188043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.534339005782274


ris (2 : 2): [ 1 0.534339005782274 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22600 interne); stringhe deallocate: 0 (22520 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9616570561357856 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8143864210093995


ris (2 : 2): [ -1 0.8143864210093995 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22620 interne); stringhe deallocate: 0 (22540 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5343389599746988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7235383913976432


ris (2 : 2): [ 1 0.7235383913976432 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22640 interne); stringhe deallocate: 0 (22560 interne)


Stringhe allocate: 1 (22640 interne); stringhe deallocate: 0 (22565 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.03834294492642776 0.03834294492642776 0.534339005782274 0.1856135789906005 0.7235383913976432 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6718496625891335 0.4003163710403455 0.9995386033429727 0.816954740833804 0.9999907780295438 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8142476170488715 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9616570550735722


ris (2 : 2): [ -1 0.9616570550735722 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22675 interne); stringhe deallocate: 0 (22595 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616983e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9616570550735722


ris (2 : 2): [ -1 0.9616570550735722 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22695 interne); stringhe deallocate: 0 (22615 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7188043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.534339005782274


ris (2 : 2): [ 1 0.534339005782274 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22715 interne); stringhe deallocate: 0 (22635 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9616570561356825 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8143864210093995


ris (2 : 2): [ -1 0.8143864210093995 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22735 interne); stringhe deallocate: 0 (22655 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5343389599747042 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7235383913976432


ris (2 : 2): [ 1 0.7235383913976432 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22755 interne); stringhe deallocate: 0 (22675 interne)


Stringhe allocate: 1 (22755 interne); stringhe deallocate: 0 (22680 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.03834294492642776 0.03834294492642776 0.534339005782274 0.1856135789906005 0.7235383913976432 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6718496625891335 0.4003163710403455 0.9995386033429727 0.816954740833804 0.9999907780295438 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8143863766618056 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9626389795591416


ris (2 : 2): [ -1 0.9626389795591416 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22790 interne); stringhe deallocate: 0 (22710 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617843e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9626389795591416


ris (2 : 2): [ -1 0.9626389795591416 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22810 interne); stringhe deallocate: 0 (22730 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7188043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5315456074754382


ris (2 : 2): [ 1 0.5315456074754382 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22830 interne); stringhe deallocate: 0 (22750 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9626388638443588 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8144499800162089


ris (2 : 2): [ -1 0.8144499800162089 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22850 interne); stringhe deallocate: 0 (22770 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5315451710652646 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7221934129335205


ris (2 : 2): [ 1 0.7221934129335205 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22870 interne); stringhe deallocate: 0 (22790 interne)


Stringhe allocate: 1 (22870 interne); stringhe deallocate: 0 (22795 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.03736102044085843 0.03736102044085843 0.5315456074754382 0.1855500199837911 0.7221934129335205 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6717069725160523 0.4000498761943581 0.9995121409694248 0.8168314017181249 0.9999905378689152 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8143863766617416 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9631005362003268


ris (2 : 2): [ -1 0.9631005362003268 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22905 interne); stringhe deallocate: 0 (22825 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616958e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9631005362003268


ris (2 : 2): [ -1 0.9631005362003268 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22925 interne); stringhe deallocate: 0 (22845 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7188043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5302081593496211


ris (2 : 2): [ 1 0.5302081593496211 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22945 interne); stringhe deallocate: 0 (22865 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9631004422137712 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8144765561406214


ris (2 : 2): [ -1 0.8144765561406214 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22965 interne); stringhe deallocate: 0 (22885 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5302081196731869 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.721556118675968


ris (2 : 2): [ 1 0.721556118675968 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22985 interne); stringhe deallocate: 0 (22905 interne)


Stringhe allocate: 1 (22985 interne); stringhe deallocate: 0 (22910 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.03689946379967324 0.03689946379967324 0.5302081593496211 0.1855234438593786 0.721556118675968 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6716408125610847 0.399926238334494 0.9994989396538987 0.816779826160949 0.9999904218991671 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8144497960040544 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9651145841080825


ris (2 : 2): [ -1 0.9651145841080825 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23020 interne); stringhe deallocate: 0 (22940 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622789e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9651145841080825


ris (2 : 2): [ -1 0.9651145841080825 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23040 interne); stringhe deallocate: 0 (22960 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7188043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5243701878409564


ris (2 : 2): [ 1 0.5243701878409564 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23060 interne); stringhe deallocate: 0 (22980 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9651141255329367 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8145946010001488


ris (2 : 2): [ -1 0.8145946010001488 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23080 interne); stringhe deallocate: 0 (23000 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5243697255081754 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7187751965944809


ris (2 : 2): [ 1 0.7187751965944809 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23100 interne); stringhe deallocate: 0 (23020 interne)


Stringhe allocate: 1 (23100 interne); stringhe deallocate: 0 (23025 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.03488541589191752 0.03488541589191752 0.5243701878409564 0.1854053989998512 0.7187751965944809 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6713588013692331 0.3993986830547123 0.9994370096557148 0.8165507157891093 0.9999898989862418 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8144764988849875 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9653940355122208


ris (2 : 2): [ -1 0.9653940355122208 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23135 interne); stringhe deallocate: 0 (23055 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892628847e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9653940355122208


ris (2 : 2): [ -1 0.9653940355122208 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23155 interne); stringhe deallocate: 0 (23075 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7188043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.52356185342534


ris (2 : 2): [ 1 0.52356185342534 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23175 interne); stringhe deallocate: 0 (23095 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9653940289458811 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8146129305504655


ris (2 : 2): [ -1 0.8146129305504655 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23195 interne); stringhe deallocate: 0 (23115 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5235614865249918 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7183899227998675


ris (2 : 2): [ 1 0.7183899227998675 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23215 interne); stringhe deallocate: 0 (23135 interne)


Stringhe allocate: 1 (23215 interne); stringhe deallocate: 0 (23140 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.0346059644877792 0.0346059644877792 0.52356185342534 0.1853870694495345 0.7183899227998675 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6713205170571331 0.3993269962147364 0.9994278524762417 0.8165151369338668 0.9999898243239626 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8145942776641428 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9635668219309944


ris (2 : 2): [ -1 0.9635668219309944 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23250 interne); stringhe deallocate: 0 (23170 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618311e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9635668219309944


ris (2 : 2): [ -1 0.9635668219309944 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23270 interne); stringhe deallocate: 0 (23190 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7188043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5288600600724186


ris (2 : 2): [ 1 0.5288600600724186 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23290 interne); stringhe deallocate: 0 (23210 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9635667889541582 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8145034704156551


ris (2 : 2): [ -1 0.8145034704156551 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23310 interne); stringhe deallocate: 0 (23230 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.528859624189792 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7209128843990424


ris (2 : 2): [ 1 0.7209128843990424 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23330 interne); stringhe deallocate: 0 (23250 interne)


Stringhe allocate: 1 (23330 interne); stringhe deallocate: 0 (23255 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.03643317806900559 0.03643317806900559 0.5288600600724186 0.1854965295843449 0.7209128843990424 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6715745601525331 0.3998023798867503 0.9994852721098434 0.8167275923367832 0.9999903034072256 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8146128743118242 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9653825792162376


ris (2 : 2): [ -1 0.9653825792162376 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23365 interne); stringhe deallocate: 0 (23285 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617502e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9653825792162376


ris (2 : 2): [ -1 0.9653825792162376 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23385 interne); stringhe deallocate: 0 (23305 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7188043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5235773638101413


ris (2 : 2): [ 1 0.5235773638101413 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23405 interne); stringhe deallocate: 0 (23325 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.965382584852656 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8146069977900691


ris (2 : 2): [ -1 0.8146069977900691 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23425 interne); stringhe deallocate: 0 (23345 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5235772221516903 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7184016918328762


ris (2 : 2): [ 1 0.7184016918328762 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23445 interne); stringhe deallocate: 0 (23365 interne)


Stringhe allocate: 1 (23445 interne); stringhe deallocate: 0 (23370 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.0346174207837624 0.0346174207837624 0.5235773638101413 0.1853930022099309 0.7184016918328762 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6713220825554495 0.39932992791599 0.9994280295769482 0.8165266529113975 0.9999898266128362 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8145032017654978 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9653825792162376


ris (2 : 2): [ -1 0.9653825792162376 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23480 interne); stringhe deallocate: 0 (23400 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892620272e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9653825792162376


ris (2 : 2): [ -1 0.9653825792162376 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23500 interne); stringhe deallocate: 0 (23420 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7188043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5235773638101413


ris (2 : 2): [ 1 0.5235773638101413 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23520 interne); stringhe deallocate: 0 (23440 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9653825848525939 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8146069977900691


ris (2 : 2): [ -1 0.8146069977900691 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23540 interne); stringhe deallocate: 0 (23460 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5235772221512143 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7184016918328762


ris (2 : 2): [ 1 0.7184016918328762 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23560 interne); stringhe deallocate: 0 (23480 interne)


Stringhe allocate: 1 (23560 interne); stringhe deallocate: 0 (23485 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.0346174207837624 0.0346174207837624 0.5235773638101413 0.1853930022099309 0.7184016918328762 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6713220825554495 0.39932992791599 0.9994280295769482 0.8165266529113975 0.9999898266128362 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8146066754287658 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9662650685245856


ris (2 : 2): [ -1 0.9662650685245856 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23595 interne); stringhe deallocate: 0 (23515 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618805e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9662650685245856


ris (2 : 2): [ -1 0.9662650685245856 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23615 interne); stringhe deallocate: 0 (23535 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7188043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5209877073858834


ris (2 : 2): [ 1 0.5209877073858834 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23635 interne); stringhe deallocate: 0 (23555 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9662647335956791 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8146545040904016


ris (2 : 2): [ -1 0.8146545040904016 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23655 interne); stringhe deallocate: 0 (23575 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5209875195450406 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7171766460243008


ris (2 : 2): [ 1 0.7171766460243008 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23675 interne); stringhe deallocate: 0 (23595 interne)


Stringhe allocate: 1 (23675 interne); stringhe deallocate: 0 (23600 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.0337349314754144 0.0337349314754144 0.5209877073858834 0.1853454959095984 0.7171766460243008 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6712024833904609 0.3991058740743549 0.9993976885922437 0.8164344365351762 0.9999895855784544 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8146066754291752 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9666796941052536


ris (2 : 2): [ -1 0.9666796941052536 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23710 interne); stringhe deallocate: 0 (23630 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617894e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9666796941052536


ris (2 : 2): [ -1 0.9666796941052536 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23730 interne); stringhe deallocate: 0 (23650 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.519748348005899


ris (2 : 2): [ 1 0.519748348005899 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23750 interne); stringhe deallocate: 0 (23670 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9666795819237413 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8146743672601323


ris (2 : 2): [ -1 0.8146743672601323 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23770 interne); stringhe deallocate: 0 (23690 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5197482197708414 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7165964832149221


ris (2 : 2): [ 1 0.7165964832149221 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23790 interne); stringhe deallocate: 0 (23710 interne)


Stringhe allocate: 1 (23790 interne); stringhe deallocate: 0 (23715 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.03332030589474644 0.03332030589474644 0.519748348005899 0.1853256327398677 0.7165964832149221 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6711469804915832 0.3990018401583834 0.9993826044903221 0.8163958775009274 0.9999894694439195 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.814654359145421 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9684889070299875


ris (2 : 2): [ -1 0.9684889070299875 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23825 interne); stringhe deallocate: 0 (23745 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892621764e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9684889070299875


ris (2 : 2): [ -1 0.9684889070299875 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23845 interne); stringhe deallocate: 0 (23765 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.7188043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5143385062089174


ris (2 : 2): [ 1 0.5143385062089174 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23865 interne); stringhe deallocate: 0 (23785 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9684887021012241 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8147625960254635


ris (2 : 2): [ -1 0.8147625960254635 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23885 interne); stringhe deallocate: 0 (23805 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5143385022110323 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7140648210721773


ris (2 : 2): [ 1 0.7140648210721773 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23905 interne); stringhe deallocate: 0 (23825 interne)


Stringhe allocate: 1 (23905 interne); stringhe deallocate: 0 (23830 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.03151109297001253 0.03151109297001253 0.5143385062089174 0.1852374039745365 0.7140648210721773 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6709098537275613 0.3985569624765712 0.9993122197679818 0.8162245918994149 0.9999889473207018 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8146739094681674 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9687399418841053


ris (2 : 2): [ -1 0.9687399418841053 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23940 interne); stringhe deallocate: 0 (23860 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622814e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9687399418841053


ris (2 : 2): [ -1 0.9687399418841053 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23960 interne); stringhe deallocate: 0 (23880 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5135894011505057


ris (2 : 2): [ 1 0.5135894011505057 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23980 interne); stringhe deallocate: 0 (23900 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9687395184463821 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8147762967984427


ris (2 : 2): [ -1 0.8147762967984427 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24000 interne); stringhe deallocate: 0 (23920 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5135893910359677 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7137140363438916


ris (2 : 2): [ 1 0.7137140363438916 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24020 interne); stringhe deallocate: 0 (23940 interne)


Stringhe allocate: 1 (24020 interne); stringhe deallocate: 0 (23945 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.03126005811589472 0.03126005811589472 0.5135894011505057 0.1852237032015573 0.7137140363438916 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6708775921874598 0.3984963837781392 0.9993018617329104 0.8161979915876256 0.999988872962319 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8147626011795364 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9670985907017423


ris (2 : 2): [ -1 0.9670985907017423 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24055 interne); stringhe deallocate: 0 (23975 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892638181e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9670985907017423


ris (2 : 2): [ -1 0.9670985907017423 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24075 interne); stringhe deallocate: 0 (23995 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5184990472267329


ris (2 : 2): [ 1 0.5184990472267329 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24095 interne); stringhe deallocate: 0 (24015 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9670982449480414 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8146944831199232


ris (2 : 2): [ -1 0.8146944831199232 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24115 interne); stringhe deallocate: 0 (24035 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.518498906416351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7160108753133113


ris (2 : 2): [ 1 0.7160108753133113 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24135 interne); stringhe deallocate: 0 (24055 interne)


Stringhe allocate: 1 (24135 interne); stringhe deallocate: 0 (24060 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.03290140929825769 0.03290140929825769 0.5184990472267329 0.1853055168800768 0.7160108753133113 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6710913486313621 0.3988975282954534 0.9993670176101072 0.8163568268335558 0.9999893509060821 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8147759526201606 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9687295172719088


ris (2 : 2): [ -1 0.9687295172719088 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24170 interne); stringhe deallocate: 0 (24090 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616983e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9687295172719088


ris (2 : 2): [ -1 0.9687295172719088 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24190 interne); stringhe deallocate: 0 (24110 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5136041566063866


ris (2 : 2): [ 1 0.5136041566063866 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24210 interne); stringhe deallocate: 0 (24130 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9687295048661513 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8147718605042306


ris (2 : 2): [ -1 0.8147718605042306 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24230 interne); stringhe deallocate: 0 (24150 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5136036961502652 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7137249919760988


ris (2 : 2): [ 1 0.7137249919760988 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24250 interne); stringhe deallocate: 0 (24170 interne)


Stringhe allocate: 1 (24250 interne); stringhe deallocate: 0 (24175 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.03127048272809119 0.03127048272809119 0.5136041566063866 0.1852281394957694 0.7137249919760988 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6708789288295654 0.3984988938929436 0.9993020672557295 0.816206604792999 0.999988875292214 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8146944134660048 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9687295172719088


ris (2 : 2): [ -1 0.9687295172719088 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24285 interne); stringhe deallocate: 0 (24205 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617843e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9687295172719088


ris (2 : 2): [ -1 0.9687295172719088 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24305 interne); stringhe deallocate: 0 (24225 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5136041566063866


ris (2 : 2): [ 1 0.5136041566063866 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24325 interne); stringhe deallocate: 0 (24245 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9687295048660873 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8147718605042306


ris (2 : 2): [ -1 0.8147718605042306 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24345 interne); stringhe deallocate: 0 (24265 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5136036961502359 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7137249919760988


ris (2 : 2): [ 1 0.7137249919760988 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24365 interne); stringhe deallocate: 0 (24285 interne)


Stringhe allocate: 1 (24365 interne); stringhe deallocate: 0 (24290 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.03127048272809119 0.03127048272809119 0.5136041566063866 0.1852281394957694 0.7137249919760988 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6708789288295654 0.3984988938929436 0.9993020672557295 0.816206604792999 0.999988875292214 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8147716610855698 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9695219858162755


ris (2 : 2): [ -1 0.9695219858162755 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24400 interne); stringhe deallocate: 0 (24320 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616958e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9695219858162755


ris (2 : 2): [ -1 0.9695219858162755 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24420 interne); stringhe deallocate: 0 (24340 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5112050480782581


ris (2 : 2): [ 1 0.5112050480782581 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24440 interne); stringhe deallocate: 0 (24360 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9695215313861345 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8148073665658796


ris (2 : 2): [ -1 0.8148073665658796 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24460 interne); stringhe deallocate: 0 (24380 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5112047284073213 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.712610106128973


ris (2 : 2): [ 1 0.712610106128973 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24480 interne); stringhe deallocate: 0 (24400 interne)


Stringhe allocate: 1 (24480 interne); stringhe deallocate: 0 (24405 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.03047801418372453 0.03047801418372453 0.5112050480782581 0.1851926334341204 0.712610106128973 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6707780720466605 0.3983094307085465 0.9992678446834691 0.8161376671623515 0.9999886356742618 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8147716610858415 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9698941129222441


ris (2 : 2): [ -1 0.9698941129222441 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24515 interne); stringhe deallocate: 0 (24435 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622789e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9698941129222441


ris (2 : 2): [ -1 0.9698941129222441 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24535 interne); stringhe deallocate: 0 (24455 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5100573057489501


ris (2 : 2): [ 1 0.5100573057489501 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24555 interne); stringhe deallocate: 0 (24475 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9698939412067649 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8148222118087224


ris (2 : 2): [ -1 0.8148222118087224 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24575 interne); stringhe deallocate: 0 (24495 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5100569813679989 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.712082347204135


ris (2 : 2): [ 1 0.712082347204135 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24595 interne); stringhe deallocate: 0 (24515 interne)


Stringhe allocate: 1 (24595 interne); stringhe deallocate: 0 (24520 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.03010588707775586 0.03010588707775586 0.5100573057489501 0.1851777881912776 0.712082347204135 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6707312349096596 0.3982214026210127 0.9992508850402342 0.8161088430237258 0.9999885204521288 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8148069470356223 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9715178383658845


ris (2 : 2): [ -1 0.9715178383658845 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24630 interne); stringhe deallocate: 0 (24550 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892628847e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9715178383658845


ris (2 : 2): [ -1 0.9715178383658845 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24650 interne); stringhe deallocate: 0 (24570 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5050473581505696


ris (2 : 2): [ 1 0.5050473581505696 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24670 interne); stringhe deallocate: 0 (24590 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9715175717315256 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.814888152496272


ris (2 : 2): [ -1 0.814888152496272 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24690 interne); stringhe deallocate: 0 (24610 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5050473301834408 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7097793319198654


ris (2 : 2): [ 1 0.7097793319198654 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24710 interne); stringhe deallocate: 0 (24630 interne)


Stringhe allocate: 1 (24710 interne); stringhe deallocate: 0 (24635 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.02848216163411554 0.02848216163411554 0.5050473581505696 0.185111847503728 0.7097793319198654 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6705307136964864 0.3978442202233639 0.9991721432826231 0.8159808027102042 0.9999880038224126 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8148222058257639 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9717431418631159


ris (2 : 2): [ -1 0.9717431418631159 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24745 interne); stringhe deallocate: 0 (24665 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618311e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9717431418631159


ris (2 : 2): [ -1 0.9717431418631159 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24765 interne); stringhe deallocate: 0 (24685 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5043535895019736


ris (2 : 2): [ 1 0.5043535895019736 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24785 interne); stringhe deallocate: 0 (24705 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9717431157058671 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8148983927395794


ris (2 : 2): [ -1 0.8148983927395794 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24805 interne); stringhe deallocate: 0 (24725 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5043535321182828 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7094601959969936


ris (2 : 2): [ 1 0.7094601959969936 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24825 interne); stringhe deallocate: 0 (24745 interne)


Stringhe allocate: 1 (24825 interne); stringhe deallocate: 0 (24750 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.02825685813688406 0.02825685813688406 0.5043535895019736 0.1851016072604206 0.7094601959969936 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6705033777115697 0.3977927611080737 0.9991606068481335 0.8159609176788037 0.999987930420567 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8148880093521074 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.970270097695307


ris (2 : 2): [ -1 0.970270097695307 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24860 interne); stringhe deallocate: 0 (24780 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617502e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.970270097695307


ris (2 : 2): [ -1 0.970270097695307 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24880 interne); stringhe deallocate: 0 (24800 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5089003005406898


ris (2 : 2): [ 1 0.5089003005406898 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24900 interne); stringhe deallocate: 0 (24820 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9702696888870799 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8148372458808619


ris (2 : 2): [ -1 0.8148372458808619 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24920 interne); stringhe deallocate: 0 (24840 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5089001744217203 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7115496058804777


ris (2 : 2): [ 1 0.7115496058804777 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24940 interne); stringhe deallocate: 0 (24860 interne)


Stringhe allocate: 1 (24940 interne); stringhe deallocate: 0 (24865 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.02972990230469297 0.02972990230469297 0.5089003005406898 0.1851627541191381 0.7115496058804777 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6706842486072024 0.398133066624943 0.9992333915853662 0.8160796516426183 0.9999884029574186 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.81489802293249 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9717336436730235


ris (2 : 2): [ -1 0.9717336436730235 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24975 interne); stringhe deallocate: 0 (24895 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892620272e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9717336436730235


ris (2 : 2): [ -1 0.9717336436730235 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24995 interne); stringhe deallocate: 0 (24915 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5043675527719455


ris (2 : 2): [ 1 0.5043675527719455 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25015 interne); stringhe deallocate: 0 (24935 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9717335789627013 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8148950760138721


ris (2 : 2): [ -1 0.8148950760138721 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25035 interne); stringhe deallocate: 0 (24955 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5043673603958467 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7094703463132238


ris (2 : 2): [ 1 0.7094703463132238 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25055 interne); stringhe deallocate: 0 (24975 interne)


Stringhe allocate: 1 (25055 interne); stringhe deallocate: 0 (24980 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.02826635632697649 0.02826635632697649 0.5043675527719455 0.1851049239861279 0.7094703463132238 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6705045277501929 0.3977949262140205 0.9991608406131565 0.8159673582980099 0.9999879327620588 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8148369877761779 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9717336436730235


ris (2 : 2): [ -1 0.9717336436730235 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25090 interne); stringhe deallocate: 0 (25010 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618805e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9717336436730235


ris (2 : 2): [ -1 0.9717336436730235 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25110 interne); stringhe deallocate: 0 (25030 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5043675527719455


ris (2 : 2): [ 1 0.5043675527719455 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25130 interne); stringhe deallocate: 0 (25050 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9717335789631107 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8148950760138721


ris (2 : 2): [ -1 0.8148950760138721 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25150 interne); stringhe deallocate: 0 (25070 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5043673603963192 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7094703463132238


ris (2 : 2): [ 1 0.7094703463132238 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25170 interne); stringhe deallocate: 0 (25090 interne)


Stringhe allocate: 1 (25170 interne); stringhe deallocate: 0 (25095 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.02826635632697649 0.02826635632697649 0.5043675527719455 0.1851049239861279 0.7094703463132238 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6705045277501929 0.3977949262140205 0.9991608406131565 0.8159673582980099 0.9999879327620588 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8148946850727299 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9724445817807936


ris (2 : 2): [ -1 0.9724445817807936 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25205 interne); stringhe deallocate: 0 (25125 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617894e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9724445817807936


ris (2 : 2): [ -1 0.9724445817807936 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25225 interne); stringhe deallocate: 0 (25145 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5021462877210442


ris (2 : 2): [ 1 0.5021462877210442 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25245 interne); stringhe deallocate: 0 (25165 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.972444543166417 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8149216121159384


ris (2 : 2): [ -1 0.8149216121159384 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25265 interne); stringhe deallocate: 0 (25185 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.502146252912933 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7084564272633214


ris (2 : 2): [ 1 0.7084564272633214 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25285 interne); stringhe deallocate: 0 (25205 interne)


Stringhe allocate: 1 (25285 interne); stringhe deallocate: 0 (25210 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.02755541821920637 0.02755541821920637 0.5021462877210442 0.1850783878840616 0.7084564272633214 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6704190216035986 0.3976339021055954 0.9991228243023533 0.8159158280665013 0.999987696611377 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8148946850731553 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9727782105508138


ris (2 : 2): [ -1 0.9727782105508138 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25320 interne); stringhe deallocate: 0 (25240 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892621764e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9727782105508138


ris (2 : 2): [ -1 0.9727782105508138 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25340 interne); stringhe deallocate: 0 (25260 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.501083963884405


ris (2 : 2): [ 1 0.501083963884405 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25360 interne); stringhe deallocate: 0 (25280 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9727778523392612 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8149327067437465


ris (2 : 2): [ -1 0.8149327067437465 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25380 interne); stringhe deallocate: 0 (25300 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.501083859724484 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7079766454676979


ris (2 : 2): [ 1 0.7079766454676979 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25400 interne); stringhe deallocate: 0 (25320 interne)


Stringhe allocate: 1 (25400 interne); stringhe deallocate: 0 (25325 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.02722178944918618 0.02722178944918618 0.501083963884405 0.1850672932562535 0.7079766454676979 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6703792939633346 0.3975590548486657 0.9991040401150726 0.8158942829491157 0.9999875832607508 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8149213879532749 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9742339091030269


ris (2 : 2): [ -1 0.9742339091030269 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25435 interne); stringhe deallocate: 0 (25355 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622814e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9742339091030269


ris (2 : 2): [ -1 0.9742339091030269 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25455 interne); stringhe deallocate: 0 (25375 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4964468627334867


ris (2 : 2): [ 1 0.4964468627334867 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25475 interne); stringhe deallocate: 0 (25395 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9742336361831985 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8149819880494027


ris (2 : 2): [ -1 0.8149819880494027 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25495 interne); stringhe deallocate: 0 (25415 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4964468523475789 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7058829715349559


ris (2 : 2): [ 1 0.7058829715349559 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25515 interne); stringhe deallocate: 0 (25435 interne)


Stringhe allocate: 1 (25515 interne); stringhe deallocate: 0 (25440 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.02576609089697313 0.02576609089697313 0.4964468627334867 0.1850180119505973 0.7058829715349559 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6702088875362747 0.3972377684588299 0.9990172324335261 0.8157985776095533 0.9999870762728438 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8149323552078567 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9744359045055964


ris (2 : 2): [ -1 0.9744359045055964 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25550 interne); stringhe deallocate: 0 (25470 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892638181e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9744359045055964


ris (2 : 2): [ -1 0.9744359045055964 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25570 interne); stringhe deallocate: 0 (25490 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4958046974573407


ris (2 : 2): [ 1 0.4958046974573407 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25590 interne); stringhe deallocate: 0 (25510 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9744358151384711 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.814989641461083


ris (2 : 2): [ -1 0.814989641461083 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25610 interne); stringhe deallocate: 0 (25530 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.495804552695482 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.70559282086655


ris (2 : 2): [ 1 0.70559282086655 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25630 interne); stringhe deallocate: 0 (25550 interne)


Stringhe allocate: 1 (25630 interne); stringhe deallocate: 0 (25555 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.02556409549440364 0.02556409549440364 0.4958046974573407 0.185010358538917 0.70559282086655 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6701856142690114 0.3971938582562887 0.9990045670745495 0.8157837139481774 0.9999870043978899 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8149819462725043 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9731153236839949


ris (2 : 2): [ -1 0.9731153236839949 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25665 interne); stringhe deallocate: 0 (25585 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616983e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9731153236839949


ris (2 : 2): [ -1 0.9731153236839949 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25685 interne); stringhe deallocate: 0 (25605 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.5000130215422851


ris (2 : 2): [ 1 0.5000130215422851 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25705 interne); stringhe deallocate: 0 (25625 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9731149762101454 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8149439424798761


ris (2 : 2): [ -1 0.8149439424798761 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25725 interne); stringhe deallocate: 0 (25645 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.5000128834676083 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7074923113479843


ris (2 : 2): [ 1 0.7074923113479843 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25745 interne); stringhe deallocate: 0 (25665 interne)


Stringhe allocate: 1 (25745 interne); stringhe deallocate: 0 (25670 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.02688467631600511 0.02688467631600511 0.5000130215422851 0.1850560575201239 0.7074923113479843 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6703394078915768 0.3974838880648628 0.9990846972158358 0.8158724634756138 0.9999874677754395 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8149895756669325 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9744272395572007


ris (2 : 2): [ -1 0.9744272395572007 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25780 interne); stringhe deallocate: 0 (25700 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617843e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9744272395572007


ris (2 : 2): [ -1 0.9744272395572007 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25800 interne); stringhe deallocate: 0 (25720 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4958178566624539


ris (2 : 2): [ 1 0.4958178566624539 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25820 interne); stringhe deallocate: 0 (25740 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9744272320694565 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8149871620689314


ris (2 : 2): [ -1 0.8149871620689314 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25840 interne); stringhe deallocate: 0 (25760 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4958176657173308 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7056021900961579


ris (2 : 2): [ 1 0.7056021900961579 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25860 interne); stringhe deallocate: 0 (25780 interne)


Stringhe allocate: 1 (25860 interne); stringhe deallocate: 0 (25785 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.02557276044279933 0.02557276044279933 0.4958178566624539 0.1850128379310686 0.7056021900961579 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6701866107713156 0.3971957385317124 0.9990048282393953 0.8157885291829832 0.9999870067250308 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8149437992996811 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9744272395572007


ris (2 : 2): [ -1 0.9744272395572007 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25895 interne); stringhe deallocate: 0 (25815 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616958e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9744272395572007


ris (2 : 2): [ -1 0.9744272395572007 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25915 interne); stringhe deallocate: 0 (25835 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4958178566624539


ris (2 : 2): [ 1 0.4958178566624539 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25935 interne); stringhe deallocate: 0 (25855 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9744272320697283 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8149871620689314


ris (2 : 2): [ -1 0.8149871620689314 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25955 interne); stringhe deallocate: 0 (25875 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4958176657173445 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7056021900961579


ris (2 : 2): [ 1 0.7056021900961579 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25975 interne); stringhe deallocate: 0 (25895 interne)


Stringhe allocate: 1 (25975 interne); stringhe deallocate: 0 (25900 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.02557276044279933 0.02557276044279933 0.4958178566624539 0.1850128379310686 0.7056021900961579 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6701866107713156 0.3971957385317124 0.9990048282393953 0.8157885291829832 0.9999870067250308 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8149867146441912 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9750643132045519


ris (2 : 2): [ -1 0.9750643132045519 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26010 interne); stringhe deallocate: 0 (25930 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622789e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9750643132045519


ris (2 : 2): [ -1 0.9750643132045519 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26030 interne); stringhe deallocate: 0 (25950 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4937623019545984


ris (2 : 2): [ 1 0.4937623019545984 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26050 interne); stringhe deallocate: 0 (25970 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9750642865131614 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8150069937493066


ris (2 : 2): [ -1 0.8150069937493066 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26070 interne); stringhe deallocate: 0 (25990 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4937622591468953 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7046806508634402


ris (2 : 2): [ 1 0.7046806508634402 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26090 interne); stringhe deallocate: 0 (26010 interne)


Stringhe allocate: 1 (26090 interne); stringhe deallocate: 0 (26015 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.02493568679544811 0.02493568679544811 0.4937623019545984 0.1849930062506934 0.7046806508634402 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.670113783649252 0.3970582868577668 0.9989631924463931 0.8157500135666465 0.9999867758249277 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8149867146442649 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9753630581604296


ris (2 : 2): [ -1 0.9753630581604296 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26125 interne); stringhe deallocate: 0 (26045 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892628847e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9753630581604296


ris (2 : 2): [ -1 0.9753630581604296 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26145 interne); stringhe deallocate: 0 (26065 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4927795004288192


ris (2 : 2): [ 1 0.4927795004288192 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26165 interne); stringhe deallocate: 0 (26085 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9753627865752756 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8150152851585265


ris (2 : 2): [ -1 0.8150152851585265 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26185 interne); stringhe deallocate: 0 (26105 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4927794977638413 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7042447258694886


ris (2 : 2): [ 1 0.7042447258694886 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26205 interne); stringhe deallocate: 0 (26125 interne)


Stringhe allocate: 1 (26205 interne); stringhe deallocate: 0 (26130 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.02463694183957044 0.02463694183957044 0.4927795004288192 0.1849847148414735 0.7042447258694886 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6700799372778701 0.3969943812623574 0.9989426759243698 0.8157339103021106 0.9999866651748469 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8150067418059885 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9766665077137019


ris (2 : 2): [ -1 0.9766665077137019 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26240 interne); stringhe deallocate: 0 (26160 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618311e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9766665077137019


ris (2 : 2): [ -1 0.9766665077137019 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26260 interne); stringhe deallocate: 0 (26180 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4884895147504451


ris (2 : 2): [ 1 0.4884895147504451 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26280 interne); stringhe deallocate: 0 (26200 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9766664593643144 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8150521150336355


ris (2 : 2): [ -1 0.8150521150336355 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26300 interne); stringhe deallocate: 0 (26220 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4884893938517241 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7023424213754234


ris (2 : 2): [ 1 0.7023424213754234 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26320 interne); stringhe deallocate: 0 (26240 interne)


Stringhe allocate: 1 (26320 interne); stringhe deallocate: 0 (26245 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.02333349228629811 0.02333349228629811 0.4884895147504451 0.1849478849663645 0.7023424213754234 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6699345075413685 0.3967196110423886 0.9988482725341389 0.815662378527063 0.9999861713792211 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8150148480361894 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9768473846595008


ris (2 : 2): [ -1 0.9768473846595008 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26355 interne); stringhe deallocate: 0 (26275 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617502e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9768473846595008


ris (2 : 2): [ -1 0.9768473846595008 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26375 interne); stringhe deallocate: 0 (26295 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4878953988128732


ris (2 : 2): [ 1 0.4878953988128732 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26395 interne); stringhe deallocate: 0 (26315 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9768471806473338 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8150578348875552


ris (2 : 2): [ -1 0.8150578348875552 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26415 interne); stringhe deallocate: 0 (26335 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.487895254752365 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7020787739592153


ris (2 : 2): [ 1 0.7020787739592153 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26435 interne); stringhe deallocate: 0 (26355 interne)


Stringhe allocate: 1 (26435 interne); stringhe deallocate: 0 (26360 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.02315261534049917 0.02315261534049917 0.4878953988128732 0.1849421651124448 0.7020787739592153 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6699146120086711 0.3966819976769385 0.9988345523405748 0.8156512689867141 0.999986101514682 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8150520413345896 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9756649500201364


ris (2 : 2): [ -1 0.9756649500201364 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26470 interne); stringhe deallocate: 0 (26390 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892620272e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9756649500201364


ris (2 : 2): [ -1 0.9756649500201364 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26490 interne); stringhe deallocate: 0 (26410 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.491788689249754


ris (2 : 2): [ 1 0.491788689249754 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26510 interne); stringhe deallocate: 0 (26430 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9756646244949279 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8150236820154615


ris (2 : 2): [ -1 0.8150236820154615 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26530 interne); stringhe deallocate: 0 (26450 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4917886301491072 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7038046465321082


ris (2 : 2): [ 1 0.7038046465321082 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26550 interne); stringhe deallocate: 0 (26470 interne)


Stringhe allocate: 1 (26550 interne); stringhe deallocate: 0 (26475 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.02433504997986358 0.02433504997986358 0.491788689249754 0.1849763179845385 0.7038046465321082 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.670045930491866 0.3969301566801819 0.9989215822434501 0.8157176020576904 0.9999865525311918 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8150577633804259 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9768394706690351


ris (2 : 2): [ -1 0.9768394706690351 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26585 interne); stringhe deallocate: 0 (26505 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618805e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9768394706690351


ris (2 : 2): [ -1 0.9768394706690351 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26605 interne); stringhe deallocate: 0 (26525 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4879077597810097


ris (2 : 2): [ 1 0.4879077597810097 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26625 interne); stringhe deallocate: 0 (26545 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9768390744159916 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8150559816035454


ris (2 : 2): [ -1 0.8150559816035454 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26645 interne); stringhe deallocate: 0 (26565 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4879076525184773 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7020873965334195


ris (2 : 2): [ 1 0.7020873965334195 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26665 interne); stringhe deallocate: 0 (26585 interne)


Stringhe allocate: 1 (26665 interne); stringhe deallocate: 0 (26590 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.02316052933096491 0.02316052933096491 0.4879077597810097 0.1849440183964546 0.7020873965334195 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6699154810647542 0.3966836407838379 0.9988348394518285 0.8156548685868225 0.9999861038051711 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8150234311054447 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9768394706690351


ris (2 : 2): [ -1 0.9768394706690351 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26700 interne); stringhe deallocate: 0 (26620 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617894e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9768394706690351


ris (2 : 2): [ -1 0.9768394706690351 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26720 interne); stringhe deallocate: 0 (26640 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4879077597810097


ris (2 : 2): [ 1 0.4879077597810097 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26740 interne); stringhe deallocate: 0 (26660 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.976839074416417 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8150559816035454


ris (2 : 2): [ -1 0.8150559816035454 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26760 interne); stringhe deallocate: 0 (26680 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.48790765251848 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7020873965334195


ris (2 : 2): [ 1 0.7020873965334195 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26780 interne); stringhe deallocate: 0 (26700 interne)


Stringhe allocate: 1 (26780 interne); stringhe deallocate: 0 (26705 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.02316052933096491 0.02316052933096491 0.4879077597810097 0.1849440183964546 0.7020873965334195 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6699154810647542 0.3966836407838379 0.9988348394518285 0.8156548685868225 0.9999861038051711 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.815055856032628 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9774096108075362


ris (2 : 2): [ -1 0.9774096108075362 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26815 interne); stringhe deallocate: 0 (26735 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892621764e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9774096108075362


ris (2 : 2): [ -1 0.9774096108075362 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26835 interne); stringhe deallocate: 0 (26755 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4860063996112147


ris (2 : 2): [ 1 0.4860063996112147 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26855 interne); stringhe deallocate: 0 (26775 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9774093716568881 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8150708024453606


ris (2 : 2): [ -1 0.8150708024453606 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26875 interne); stringhe deallocate: 0 (26795 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4860062643503813 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7012502598026007


ris (2 : 2): [ 1 0.7012502598026007 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26895 interne); stringhe deallocate: 0 (26815 interne)


Stringhe allocate: 1 (26895 interne); stringhe deallocate: 0 (26820 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.02259038919246381 0.02259038919246381 0.4860063996112147 0.1849291975546394 0.7012502598026007 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.669853208646821 0.3965658759698448 0.9987898364665662 0.815626082083342 0.9999858796591962 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8150558560318881 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9776767426683893


ris (2 : 2): [ -1 0.9776767426683893 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26930 interne); stringhe deallocate: 0 (26850 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622814e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9776767426683893


ris (2 : 2): [ -1 0.9776767426683893 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26950 interne); stringhe deallocate: 0 (26870 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4850975414080363


ris (2 : 2): [ 1 0.4850975414080363 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26970 interne); stringhe deallocate: 0 (26890 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.977676400465425 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8150769988062155


ris (2 : 2): [ -1 0.8150769988062155 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26990 interne); stringhe deallocate: 0 (26910 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4850974127266081 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7008543742892783


ris (2 : 2): [ 1 0.7008543742892783 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27010 interne); stringhe deallocate: 0 (26930 interne)


Stringhe allocate: 1 (27010 interne); stringhe deallocate: 0 (26935 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.02232325733161067 0.02232325733161067 0.4850975414080363 0.1849230011937845 0.7008543742892783 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6698242650682023 0.3965111209320929 0.99876771665498 0.8156140467299463 0.9999857724040694 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8150706379837356 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9788422207514319


ris (2 : 2): [ -1 0.9788422207514319 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27045 interne); stringhe deallocate: 0 (26965 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892638181e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9788422207514319


ris (2 : 2): [ -1 0.9788422207514319 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27065 interne); stringhe deallocate: 0 (26985 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4811303226328729


ris (2 : 2): [ 1 0.4811303226328729 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27085 interne); stringhe deallocate: 0 (27005 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.978841790480268 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8151045227327229


ris (2 : 2): [ -1 0.8151045227327229 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27105 interne); stringhe deallocate: 0 (27025 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4811301275703719 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6991267870285565


ris (2 : 2): [ 1 0.6991267870285565 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27125 interne); stringhe deallocate: 0 (27045 interne)


Stringhe allocate: 1 (27125 interne); stringhe deallocate: 0 (27050 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.0211577792485681 0.0211577792485681 0.4811303226328729 0.1848954772672771 0.6991267870285565 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6696997069440285 0.3962753430299633 0.9986663449842261 0.8155605850871819 0.9999852947424819 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8150768368669867 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9790039605350368


ris (2 : 2): [ -1 0.9790039605350368 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27160 interne); stringhe deallocate: 0 (27080 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616983e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9790039605350368


ris (2 : 2): [ -1 0.9790039605350368 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27180 interne); stringhe deallocate: 0 (27100 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4805808909738159


ris (2 : 2): [ 1 0.4805808909738159 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27200 interne); stringhe deallocate: 0 (27120 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.979003915113954 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8151087974147256


ris (2 : 2): [ -1 0.8151087974147256 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27220 interne); stringhe deallocate: 0 (27140 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4805808111641072 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6988873413680268


ris (2 : 2): [ 1 0.6988873413680268 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27240 interne); stringhe deallocate: 0 (27160 interne)


Stringhe allocate: 1 (27240 interne); stringhe deallocate: 0 (27165 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.0209960394649632 0.0209960394649632 0.4805808909738159 0.1848912025852744 0.6988873413680268 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6696826403907903 0.3962430195266295 0.9986516652722914 0.8155522818983666 0.9999852272847355 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8151044934220595 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9779467160635113


ris (2 : 2): [ -1 0.9779467160635113 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27275 interne); stringhe deallocate: 0 (27195 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617843e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9779467160635113


ris (2 : 2): [ -1 0.9779467160635113 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27295 interne); stringhe deallocate: 0 (27215 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4841812465789622


ris (2 : 2): [ 1 0.4841812465789622 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27315 interne); stringhe deallocate: 0 (27235 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9779462902969955 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.815083273966408


ris (2 : 2): [ -1 0.815083273966408 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27335 interne); stringhe deallocate: 0 (27255 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4841811701271226 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7004547014300655


ris (2 : 2): [ 1 0.7004547014300655 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27355 interne); stringhe deallocate: 0 (27275 interne)


Stringhe allocate: 1 (27355 interne); stringhe deallocate: 0 (27280 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.02205328393648876 0.02205328393648876 0.4841812465789622 0.184916726033592 0.7004547014300655 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6697951638756431 0.3964560553691415 0.998745007734547 0.8156018582210809 0.9999856632964734 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8151087849564194 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9789967249680022


ris (2 : 2): [ -1 0.9789967249680022 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27390 interne); stringhe deallocate: 0 (27310 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616958e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9789967249680022


ris (2 : 2): [ -1 0.9789967249680022 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27410 interne); stringhe deallocate: 0 (27330 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4805924717154632


ris (2 : 2): [ 1 0.4805924717154632 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27430 interne); stringhe deallocate: 0 (27350 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9789962857196306 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8151074122217545


ris (2 : 2): [ -1 0.8151074122217545 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27450 interne); stringhe deallocate: 0 (27370 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.480592255256143 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.698895257766682


ris (2 : 2): [ 1 0.698895257766682 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27470 interne); stringhe deallocate: 0 (27390 interne)


Stringhe allocate: 1 (27470 interne); stringhe deallocate: 0 (27395 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.02100327503199784 0.02100327503199784 0.4805924717154632 0.1848925877782455 0.698895257766682 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6696834027460524 0.396244463496252 0.9986519763420521 0.8155549725174263 0.9999852295199184 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8150830357501482 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9789967249680022


ris (2 : 2): [ -1 0.9789967249680022 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27505 interne); stringhe deallocate: 0 (27425 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622789e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9789967249680022


ris (2 : 2): [ -1 0.9789967249680022 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27525 interne); stringhe deallocate: 0 (27445 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4805924717154632


ris (2 : 2): [ 1 0.4805924717154632 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27545 interne); stringhe deallocate: 0 (27465 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9789962857197043 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8151074122217545


ris (2 : 2): [ -1 0.8151074122217545 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27565 interne); stringhe deallocate: 0 (27485 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.480592255255905 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.698895257766682


ris (2 : 2): [ 1 0.698895257766682 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27585 interne); stringhe deallocate: 0 (27505 interne)


Stringhe allocate: 1 (27585 interne); stringhe deallocate: 0 (27510 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.02100327503199784 0.02100327503199784 0.4805924717154632 0.1848925877782455 0.698895257766682 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6696834027460524 0.396244463496252 0.9986519763420521 0.8155549725174263 0.9999852295199184 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8151073544452903 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9795062071163279


ris (2 : 2): [ -1 0.9795062071163279 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27620 interne); stringhe deallocate: 0 (27540 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892628847e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9795062071163279


ris (2 : 2): [ -1 0.9795062071163279 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27640 interne); stringhe deallocate: 0 (27560 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4788344285028506


ris (2 : 2): [ 1 0.4788344285028506 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27660 interne); stringhe deallocate: 0 (27580 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9795060246429026 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.815118488135124


ris (2 : 2): [ -1 0.815118488135124 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27680 interne); stringhe deallocate: 0 (27600 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4788343950722029 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6981351439700093


ris (2 : 2): [ 1 0.6981351439700093 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27700 interne); stringhe deallocate: 0 (27620 interne)


Stringhe allocate: 1 (27700 interne); stringhe deallocate: 0 (27625 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.02049379288367215 0.02049379288367215 0.4788344285028506 0.184881511864876 0.6981351439700093 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6696299805271367 0.3961432557942716 0.9986039250909577 0.8155334583630592 0.9999850133527575 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8151073544463694 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9797446899411161


ris (2 : 2): [ -1 0.9797446899411161 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27735 interne); stringhe deallocate: 0 (27655 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618311e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9797446899411161


ris (2 : 2): [ -1 0.9797446899411161 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27755 interne); stringhe deallocate: 0 (27675 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4779942565036192


ris (2 : 2): [ 1 0.4779942565036192 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27775 interne); stringhe deallocate: 0 (27695 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9797444432205156 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8151231187607368


ris (2 : 2): [ -1 0.8151231187607368 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27795 interne); stringhe deallocate: 0 (27715 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4779942079994344 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6977757742813726


ris (2 : 2): [ 1 0.6977757742813726 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27815 interne); stringhe deallocate: 0 (27735 interne)


Stringhe allocate: 1 (27815 interne); stringhe deallocate: 0 (27740 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.02025531005888392 0.02025531005888392 0.4779942565036192 0.1848768812392632 0.6977757742813726 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.669605153179507 0.3960962059916868 0.9985803621233821 0.8155244636165873 0.9999849100538285 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8151183216995195 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9807851356815046


ris (2 : 2): [ -1 0.9807851356815046 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27850 interne); stringhe deallocate: 0 (27770 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617502e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9807851356815046


ris (2 : 2): [ -1 0.9807851356815046 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27870 interne); stringhe deallocate: 0 (27790 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4743268595371759


ris (2 : 2): [ 1 0.4743268595371759 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27890 interne); stringhe deallocate: 0 (27810 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9807849018997752 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8151436878320526


ris (2 : 2): [ -1 0.8151436878320526 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27910 interne); stringhe deallocate: 0 (27830 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4743268534156968 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6962075317246469


ris (2 : 2): [ 1 0.6962075317246469 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27930 interne); stringhe deallocate: 0 (27850 interne)


Stringhe allocate: 1 (27930 interne); stringhe deallocate: 0 (27855 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.0192148643184954 0.0192148643184954 0.4743268595371759 0.1848563121679474 0.6962075317246469 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6694981577018709 0.3958933329201875 0.9984727795110922 0.8154845086114059 0.9999844508735332 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8151230900711619 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9809295337195457


ris (2 : 2): [ -1 0.9809295337195457 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27965 interne); stringhe deallocate: 0 (27885 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892620272e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9809295337195457


ris (2 : 2): [ -1 0.9809295337195457 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27985 interne); stringhe deallocate: 0 (27905 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4738189396277123


ris (2 : 2): [ 1 0.4738189396277123 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28005 interne); stringhe deallocate: 0 (27925 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9809293835586486 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8151468824179866


ris (2 : 2): [ -1 0.8151468824179866 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28025 interne); stringhe deallocate: 0 (27945 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4738187834238676 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6959901619172006


ris (2 : 2): [ 1 0.6959901619172006 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28045 interne); stringhe deallocate: 0 (27965 interne)


Stringhe allocate: 1 (28045 interne); stringhe deallocate: 0 (27970 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.01907046628045428 0.01907046628045428 0.4738189396277123 0.1848531175820134 0.6959901619172006 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.66948347665498 0.3958654825075987 0.9984572527645256 0.8154783030952577 0.9999843861348067 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8151435940689025 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9799857376765772


ris (2 : 2): [ -1 0.9799857376765772 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28080 interne); stringhe deallocate: 0 (28000 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618805e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9799857376765772


ris (2 : 2): [ -1 0.9799857376765772 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28100 interne); stringhe deallocate: 0 (28020 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4771471855151016


ris (2 : 2): [ 1 0.4771471855151016 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28120 interne); stringhe deallocate: 0 (28040 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.979985722822974 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8151278082718705


ris (2 : 2): [ -1 0.8151278082718705 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28140 interne); stringhe deallocate: 0 (28060 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4771471067878874 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6974129547342968


ris (2 : 2): [ 1 0.6974129547342968 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28160 interne); stringhe deallocate: 0 (28080 interne)


Stringhe allocate: 1 (28160 interne); stringhe deallocate: 0 (28085 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.02001426232342285 0.02001426232342285 0.4771471855151016 0.1848721917281295 0.6974129547342968 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6695801740889558 0.3960488591385401 0.9985562043963666 0.815515354431804 0.9999848050409905 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8151464550922611 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9809229126903905


ris (2 : 2): [ -1 0.9809229126903905 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28195 interne); stringhe deallocate: 0 (28115 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617894e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9809229126903905


ris (2 : 2): [ -1 0.9809229126903905 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28215 interne); stringhe deallocate: 0 (28135 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4738297663415297


ris (2 : 2): [ 1 0.4738297663415297 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28235 interne); stringhe deallocate: 0 (28155 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9809227078392686 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8151458471383748


ris (2 : 2): [ -1 0.8151458471383748 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28255 interne); stringhe deallocate: 0 (28175 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.473829750678282 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6959974157733192


ris (2 : 2): [ 1 0.6959974157733192 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28275 interne); stringhe deallocate: 0 (28195 interne)


Stringhe allocate: 1 (28275 interne); stringhe deallocate: 0 (28200 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.01907708730960955 0.01907708730960955 0.4738297663415297 0.1848541528616252 0.6959974157733192 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6694841489287206 0.3958667579057154 0.998457585364371 0.8154803141394584 0.999984388299546 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8151273816063585 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9809229126903905


ris (2 : 2): [ -1 0.9809229126903905 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28310 interne); stringhe deallocate: 0 (28230 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892621764e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9809229126903905


ris (2 : 2): [ -1 0.9809229126903905 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28330 interne); stringhe deallocate: 0 (28250 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4738297663415297


ris (2 : 2): [ 1 0.4738297663415297 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28350 interne); stringhe deallocate: 0 (28270 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9809227078385288 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8151458471383748


ris (2 : 2): [ -1 0.8151458471383748 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28370 interne); stringhe deallocate: 0 (28290 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4738297506782674 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6959974157733192


ris (2 : 2): [ 1 0.6959974157733192 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28390 interne); stringhe deallocate: 0 (28310 interne)


Stringhe allocate: 1 (28390 interne); stringhe deallocate: 0 (28315 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.01907708730960955 0.01907708730960955 0.4738297663415297 0.1848541528616252 0.6959974157733192 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6694841489287206 0.3958667579057154 0.998457585364371 0.8154803141394584 0.999984388299546 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8151455014176303 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9813774274932855


ris (2 : 2): [ -1 0.9813774274932855 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28425 interne); stringhe deallocate: 0 (28345 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622814e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9813774274932855


ris (2 : 2): [ -1 0.9813774274932855 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28445 interne); stringhe deallocate: 0 (28365 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4722048039896122


ris (2 : 2): [ 1 0.4722048039896122 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28465 interne); stringhe deallocate: 0 (28385 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9813771336502395 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.815154124296927


ris (2 : 2): [ -1 0.815154124296927 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28485 interne); stringhe deallocate: 0 (28405 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4722046896431138 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.695307521211361


ris (2 : 2): [ 1 0.695307521211361 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28505 interne); stringhe deallocate: 0 (28425 interne)


Stringhe allocate: 1 (28505 interne); stringhe deallocate: 0 (28430 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.01862257250671451 0.01862257250671451 0.4722048039896122 0.184845875703073 0.695307521211361 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6694381973159462 0.3957795649196301 0.9984068580153256 0.8154642355736924 0.9999841810680754 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8151455014175735 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9815899515121062


ris (2 : 2): [ -1 0.9815899515121062 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28540 interne); stringhe deallocate: 0 (28460 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892638181e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9815899515121062


ris (2 : 2): [ -1 0.9815899515121062 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28560 interne); stringhe deallocate: 0 (28480 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4714283805485651


ris (2 : 2): [ 1 0.4714283805485651 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28580 interne); stringhe deallocate: 0 (28500 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9815898030229926 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8151575847952114


ris (2 : 2): [ -1 0.8151575847952114 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28600 interne); stringhe deallocate: 0 (28520 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4714281603312163 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6949814242793087


ris (2 : 2): [ 1 0.6949814242793087 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28620 interne); stringhe deallocate: 0 (28540 interne)


Stringhe allocate: 1 (28620 interne); stringhe deallocate: 0 (28545 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.01841004848789385 0.01841004848789385 0.4714283805485651 0.1848424152047886 0.6949814242793087 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6694168484222517 0.395739044184153 0.9983820364940281 0.8154575134262274 0.9999840821595022 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8151540844866156 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9825171088072106


ris (2 : 2): [ -1 0.9825171088072106 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28655 interne); stringhe deallocate: 0 (28575 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616983e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9825171088072106


ris (2 : 2): [ -1 0.9825171088072106 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28675 interne); stringhe deallocate: 0 (28595 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4680392537681513


ris (2 : 2): [ 1 0.4680392537681513 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28695 interne); stringhe deallocate: 0 (28615 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9825167744584364 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8151729562381339


ris (2 : 2): [ -1 0.8151729562381339 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28715 interne); stringhe deallocate: 0 (28635 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4680390402290495 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6935583770252466


ris (2 : 2): [ 1 0.6935583770252466 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28735 interne); stringhe deallocate: 0 (28655 interne)


Stringhe allocate: 1 (28735 interne); stringhe deallocate: 0 (28660 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.01748289119278945 0.01748289119278945 0.4680392537681513 0.1848270437618661 0.6935583770252466 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6693247255405436 0.3955641095326205 0.998269099712376 0.8154276534521834 0.999983643246239 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.81515742234662 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9826457945064547


ris (2 : 2): [ -1 0.9826457945064547 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28770 interne); stringhe deallocate: 0 (28690 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617843e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9826457945064547


ris (2 : 2): [ -1 0.9826457945064547 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28790 interne); stringhe deallocate: 0 (28710 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4675698646933356


ris (2 : 2): [ 1 0.4675698646933356 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28810 interne); stringhe deallocate: 0 (28730 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9826455204910873 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8151753436059198


ris (2 : 2): [ -1 0.8151753436059198 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28830 interne); stringhe deallocate: 0 (28750 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4675698324653914 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6933611253880093


ris (2 : 2): [ 1 0.6933611253880093 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28850 interne); stringhe deallocate: 0 (28770 interne)


Stringhe allocate: 1 (28850 interne); stringhe deallocate: 0 (28775 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.01735420549354527 0.01735420549354527 0.4675698646933356 0.1848246563940802 0.6933611253880093 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6693120685937369 0.3955400642768125 0.9982528511686131 0.8154230157890681 0.9999835814600245 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8151726811356186 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9818047895967402


ris (2 : 2): [ -1 0.9818047895967402 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28885 interne); stringhe deallocate: 0 (28805 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616958e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9818047895967402


ris (2 : 2): [ -1 0.9818047895967402 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28905 interne); stringhe deallocate: 0 (28825 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4706455612975779


ris (2 : 2): [ 1 0.4706455612975779 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28925 interne); stringhe deallocate: 0 (28845 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9818043797442888 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8151610892977691


ris (2 : 2): [ -1 0.8151610892977691 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28945 interne); stringhe deallocate: 0 (28865 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4706454321357869 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6946521871458665


ris (2 : 2): [ 1 0.6946521871458665 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28965 interne); stringhe deallocate: 0 (28885 interne)


Stringhe allocate: 1 (28965 interne); stringhe deallocate: 0 (28890 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.01819521040325978 0.01819521040325978 0.4706455612975779 0.1848389107022309 0.6946521871458665 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6693953555501967 0.3956982428878794 0.9983566204685346 0.8154507057675364 0.9999839816711127 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8151750653216814 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9826397317369605


ris (2 : 2): [ -1 0.9826397317369605 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29000 interne); stringhe deallocate: 0 (28920 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622789e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9826397317369605


ris (2 : 2): [ -1 0.9826397317369605 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29020 interne); stringhe deallocate: 0 (28940 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4675799688704938


ris (2 : 2): [ 1 0.4675799688704938 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29040 interne); stringhe deallocate: 0 (28960 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9826393216083762 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8151745698756184


ris (2 : 2): [ -1 0.8151745698756184 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29060 interne); stringhe deallocate: 0 (28980 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4675798460457017 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.693367761481486


ris (2 : 2): [ 1 0.693367761481486 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29080 interne); stringhe deallocate: 0 (29000 interne)


Stringhe allocate: 1 (29080 interne); stringhe deallocate: 0 (29005 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.01736026826303949 0.01736026826303949 0.4675799688704938 0.1848254301243816 0.693367761481486 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6693126641974058 0.3955411958433011 0.9982532025332458 0.8154245188269792 0.9999835835424733 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.815160760207009 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9826397317369605


ris (2 : 2): [ -1 0.9826397317369605 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29115 interne); stringhe deallocate: 0 (29035 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892628847e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9826397317369605


ris (2 : 2): [ -1 0.9826397317369605 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29135 interne); stringhe deallocate: 0 (29055 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4675799688704938


ris (2 : 2): [ 1 0.4675799688704938 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29155 interne); stringhe deallocate: 0 (29075 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9826393216094553 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8151745698756184


ris (2 : 2): [ -1 0.8151745698756184 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29175 interne); stringhe deallocate: 0 (29095 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4675798460459379 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.693367761481486


ris (2 : 2): [ 1 0.693367761481486 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29195 interne); stringhe deallocate: 0 (29115 interne)


Stringhe allocate: 1 (29195 interne); stringhe deallocate: 0 (29120 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.01736026826303949 0.01736026826303949 0.4675799688704938 0.1848254301243816 0.693367761481486 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6693126641974058 0.3955411958433011 0.9982532025332458 0.8154245188269792 0.9999835835424733 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8151741116485178 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.983044447224579


ris (2 : 2): [ -1 0.983044447224579 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29230 interne); stringhe deallocate: 0 (29150 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618311e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.983044447224579


ris (2 : 2): [ -1 0.983044447224579 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29250 interne); stringhe deallocate: 0 (29170 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4660784837893492


ris (2 : 2): [ 1 0.4660784837893492 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29270 interne); stringhe deallocate: 0 (29190 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9830441563552812 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8151807554397956


ris (2 : 2): [ -1 0.8151807554397956 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29290 interne); stringhe deallocate: 0 (29210 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4660782858345183 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.692741830286325


ris (2 : 2): [ 1 0.692741830286325 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29310 interne); stringhe deallocate: 0 (29230 interne)


Stringhe allocate: 1 (29310 interne); stringhe deallocate: 0 (29235 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.01695555277542105 0.01695555277542105 0.4660784837893492 0.1848192445602044 0.692741830286325 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6692730572196469 0.3954659354154426 0.9982002101131827 0.8154125027917536 0.9999833859541568 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8151741116470292 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9832334577333857


ris (2 : 2): [ -1 0.9832334577333857 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29345 interne); stringhe deallocate: 0 (29265 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617502e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9832334577333857


ris (2 : 2): [ -1 0.9832334577333857 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29365 interne); stringhe deallocate: 0 (29285 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4653611834746498


ris (2 : 2): [ 1 0.4653611834746498 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29385 interne); stringhe deallocate: 0 (29305 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9832334607071482 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.815183341476184


ris (2 : 2): [ -1 0.815183341476184 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29405 interne); stringhe deallocate: 0 (29325 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4653611227485945 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6924460283460161


ris (2 : 2): [ 1 0.6924460283460161 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29425 interne); stringhe deallocate: 0 (29345 interne)


Stringhe allocate: 1 (29425 interne); stringhe deallocate: 0 (29350 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.01676654226661434 0.01676654226661434 0.4653611834746498 0.184816658523816 0.6924460283460161 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6692546653379707 0.3954309788317086 0.9981743321004446 0.8154074791459441 0.9999832917523737 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8151803105301463 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9840580012673811


ris (2 : 2): [ -1 0.9840580012673811 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29460 interne); stringhe deallocate: 0 (29380 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892620272e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9840580012673811


ris (2 : 2): [ -1 0.9840580012673811 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29480 interne); stringhe deallocate: 0 (29400 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4622301373656488


ris (2 : 2): [ 1 0.4622301373656488 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29500 interne); stringhe deallocate: 0 (29420 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9840579121536193 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.815194828601572


ris (2 : 2): [ -1 0.815194828601572 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29520 interne); stringhe deallocate: 0 (29440 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4622299715492391 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6911551837924018


ris (2 : 2): [ 1 0.6911551837924018 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29540 interne); stringhe deallocate: 0 (29460 interne)


Stringhe allocate: 1 (29540 interne); stringhe deallocate: 0 (29465 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.01594199873261892 0.01594199873261892 0.4622301373656488 0.184805171398428 0.6911551837924018 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.669175210211921 0.395279898354555 0.9980569658033696 0.8153851639987011 0.9999828743763431 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8151831715530333 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.984172455521301


ris (2 : 2): [ -1 0.984172455521301 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29575 interne); stringhe deallocate: 0 (29495 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618805e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.984172455521301


ris (2 : 2): [ -1 0.984172455521301 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29595 interne); stringhe deallocate: 0 (29515 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4617964858265816


ris (2 : 2): [ 1 0.4617964858265816 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29615 interne); stringhe deallocate: 0 (29535 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9841723530719975 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8151966127033434


ris (2 : 2): [ -1 0.8151966127033434 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29635 interne); stringhe deallocate: 0 (29555 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.461796288153856 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6909762520088474


ris (2 : 2): [ 1 0.6909762520088474 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29655 interne); stringhe deallocate: 0 (29575 interne)


Stringhe allocate: 1 (29655 interne); stringhe deallocate: 0 (29580 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.01582754447869905 0.01582754447869905 0.4617964858265816 0.1848033872966566 0.6909762520088474 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6691642804592315 0.3952591077275476 0.9980401289731196 0.8153816981324223 0.9999828157044355 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8151946156452397 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9834245546167365


ris (2 : 2): [ -1 0.9834245546167365 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29690 interne); stringhe deallocate: 0 (29610 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617894e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9834245546167365


ris (2 : 2): [ -1 0.9834245546167365 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29710 interne); stringhe deallocate: 0 (29630 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4646379573345605


ris (2 : 2): [ 1 0.4646379573345605 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29730 interne); stringhe deallocate: 0 (29650 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9834241955712022 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.815185960396331


ris (2 : 2): [ -1 0.815185960396331 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29750 interne); stringhe deallocate: 0 (29670 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4646377607798247 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6921473698099517


ris (2 : 2): [ 1 0.6921473698099517 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29770 interne); stringhe deallocate: 0 (29690 interne)


Stringhe allocate: 1 (29770 interne); stringhe deallocate: 0 (29695 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.0165754453832635 0.0165754453832635 0.4646379573345605 0.184814039603669 0.6921473698099517 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6692361383276649 0.3953957598207476 0.998147865204647 0.8154023916025969 0.999983196099015 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8151965229942979 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9841669013690645


ris (2 : 2): [ -1 0.9841669013690645 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29805 interne); stringhe deallocate: 0 (29725 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892621764e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9841669013690645


ris (2 : 2): [ -1 0.9841669013690645 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29825 interne); stringhe deallocate: 0 (29745 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4618059021502544


ris (2 : 2): [ 1 0.4618059021502544 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29845 interne); stringhe deallocate: 0 (29765 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9841666310257846 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8151960344606942


ris (2 : 2): [ -1 0.8151960344606942 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29865 interne); stringhe deallocate: 0 (29785 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4618058248970183 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6909823148918836


ris (2 : 2): [ 1 0.6909823148918836 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29885 interne); stringhe deallocate: 0 (29805 interne)


Stringhe allocate: 1 (29885 interne); stringhe deallocate: 0 (29810 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.01583309863093552 0.01583309863093552 0.4618059021502544 0.1848039655393058 0.6909823148918836 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.669164810294361 0.3952601156283173 0.998040496106587 0.8153828214502263 0.9999828176957468 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8151855557389194 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9841669013690645


ris (2 : 2): [ -1 0.9841669013690645 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29920 interne); stringhe deallocate: 0 (29840 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622814e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9841669013690645


ris (2 : 2): [ -1 0.9841669013690645 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29940 interne); stringhe deallocate: 0 (29860 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4618059021502544


ris (2 : 2): [ 1 0.4618059021502544 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29960 interne); stringhe deallocate: 0 (29880 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9841666310257278 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8151960344606942


ris (2 : 2): [ -1 0.8151960344606942 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29980 interne); stringhe deallocate: 0 (29900 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.461805824897032 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6909823148918836


ris (2 : 2): [ 1 0.6909823148918836 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30000 interne); stringhe deallocate: 0 (29920 interne)


Stringhe allocate: 1 (30000 interne); stringhe deallocate: 0 (29925 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.01583309863093552 0.01583309863093552 0.4618059021502544 0.1848039655393058 0.6909823148918836 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.669164810294361 0.3952601156283173 0.998040496106587 0.8153828214502263 0.9999828176957468 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8151955693191848 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9845265176729906


ris (2 : 2): [ -1 0.9845265176729906 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30035 interne); stringhe deallocate: 0 (29955 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892638181e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9845265176729906


ris (2 : 2): [ -1 0.9845265176729906 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30055 interne); stringhe deallocate: 0 (29975 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4604189059331201


ris (2 : 2): [ 1 0.4604189059331201 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30075 interne); stringhe deallocate: 0 (29995 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9845261662432074 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152006569362235


ris (2 : 2): [ -1 0.8152006569362235 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30095 interne); stringhe deallocate: 0 (30015 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4604187056038045 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6904146074922051


ris (2 : 2): [ 1 0.6904146074922051 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30115 interne); stringhe deallocate: 0 (30035 interne)


Stringhe allocate: 1 (30115 interne); stringhe deallocate: 0 (30040 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.0154734823270094 0.0154734823270094 0.4604189059331201 0.1847993430637765 0.6904146074922051 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6691306215890605 0.3951950691365637 0.9979856740443277 0.8153738416165207 0.9999826302318622 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8151955693193793 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9846942403744409


ris (2 : 2): [ -1 0.9846942403744409 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30150 interne); stringhe deallocate: 0 (30070 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616983e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9846942403744409


ris (2 : 2): [ -1 0.9846942403744409 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30170 interne); stringhe deallocate: 0 (30090 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4597564050038591


ris (2 : 2): [ 1 0.4597564050038591 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30190 interne); stringhe deallocate: 0 (30110 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9846940129227919 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152025894758547


ris (2 : 2): [ -1 0.8152025894758547 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30210 interne); stringhe deallocate: 0 (30130 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.459756378791063 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6901463716565892


ris (2 : 2): [ 1 0.6901463716565892 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30230 interne); stringhe deallocate: 0 (30150 interne)


Stringhe allocate: 1 (30230 interne); stringhe deallocate: 0 (30155 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.01530575962555913 0.01530575962555913 0.4597564050038591 0.1847974105241453 0.6901463716565892 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6691147569903319 0.3951648789291228 0.997958952094443 0.8153700873599579 0.9999825409470524 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152003376908583 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9854258861517724


ris (2 : 2): [ -1 0.9854258861517724 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30265 interne); stringhe deallocate: 0 (30185 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617843e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9854258861517724


ris (2 : 2): [ -1 0.9854258861517724 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30285 interne); stringhe deallocate: 0 (30205 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.456864566453746


ris (2 : 2): [ 1 0.456864566453746 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30305 interne); stringhe deallocate: 0 (30225 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9854254811234116 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152111737916021


ris (2 : 2): [ -1 0.8152111737916021 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30325 interne); stringhe deallocate: 0 (30245 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4568643614267973 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6889758225886605


ris (2 : 2): [ 1 0.6889758225886605 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30345 interne); stringhe deallocate: 0 (30265 interne)


Stringhe allocate: 1 (30345 interne); stringhe deallocate: 0 (30270 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.0145741138482276 0.0145741138482276 0.456864566453746 0.1847888262083979 0.6889758225886605 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6690461482573725 0.3950342680435541 0.9978381180118705 0.8153534108865541 0.9999821459168545 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152022450394272 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.985527456695444


ris (2 : 2): [ -1 0.985527456695444 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30380 interne); stringhe deallocate: 0 (30300 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616958e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.985527456695444


ris (2 : 2): [ -1 0.985527456695444 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30400 interne); stringhe deallocate: 0 (30320 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4564640406948423


ris (2 : 2): [ 1 0.4564640406948423 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30420 interne); stringhe deallocate: 0 (30340 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9855270474383806 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152125070569882


ris (2 : 2): [ -1 0.8152125070569882 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30440 interne); stringhe deallocate: 0 (30360 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4564638182136687 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6888135620618269


ris (2 : 2): [ 1 0.6888135620618269 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30460 interne); stringhe deallocate: 0 (30380 interne)


Stringhe allocate: 1 (30460 interne); stringhe deallocate: 0 (30385 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.01447254330455605 0.01447254330455605 0.4564640406948423 0.1847874929430118 0.6888135620618269 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6690366998913585 0.3950162748506763 0.9978208303754748 0.8153508207780618 0.9999820904573289 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152108281085466 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9848638425954912


ris (2 : 2): [ -1 0.9848638425954912 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30495 interne); stringhe deallocate: 0 (30415 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622789e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9848638425954912


ris (2 : 2): [ -1 0.9848638425954912 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30515 interne); stringhe deallocate: 0 (30435 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4590884165079796


ris (2 : 2): [ 1 0.4590884165079796 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30535 interne); stringhe deallocate: 0 (30455 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9848637669513938 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152045465890546


ris (2 : 2): [ -1 0.8152045465890546 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30555 interne); stringhe deallocate: 0 (30475 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4590883299324324 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6898755385841874


ris (2 : 2): [ 1 0.6898755385841874 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30575 interne); stringhe deallocate: 0 (30495 interne)


Stringhe allocate: 1 (30575 interne); stringhe deallocate: 0 (30500 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.0151361574045088 0.0151361574045088 0.4590884165079796 0.1847954534109454 0.6898755385841874 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6690987666435815 0.3951344451335258 0.9979316516110048 0.8153662853557536 0.9999824503321231 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152122586200949 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9855223672619808


ris (2 : 2): [ -1 0.9855223672619808 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30610 interne); stringhe deallocate: 0 (30530 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892628847e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9855223672619808


ris (2 : 2): [ -1 0.9855223672619808 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30630 interne); stringhe deallocate: 0 (30550 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4564728055190954


ris (2 : 2): [ 1 0.4564728055190954 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30650 interne); stringhe deallocate: 0 (30570 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9855222790679514 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152120749192886


ris (2 : 2): [ -1 0.8152120749192886 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30670 interne); stringhe deallocate: 0 (30590 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4564726397010945 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6888190951347124


ris (2 : 2): [ 1 0.6888190951347124 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30690 interne); stringhe deallocate: 0 (30610 interne)


Stringhe allocate: 1 (30690 interne); stringhe deallocate: 0 (30615 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.01447763273801916 0.01447763273801916 0.4564728055190954 0.1847879250807114 0.6888190951347124 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6690371728842077 0.3950171756408121 0.9978212101539499 0.8153516602839827 0.9999820923513287 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152041523894846 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9855223672619808


ris (2 : 2): [ -1 0.9855223672619808 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30725 interne); stringhe deallocate: 0 (30645 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618311e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9855223672619808


ris (2 : 2): [ -1 0.9855223672619808 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30745 interne); stringhe deallocate: 0 (30665 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4564728055190954


ris (2 : 2): [ 1 0.4564728055190954 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30765 interne); stringhe deallocate: 0 (30685 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9855222790664628 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152120749192886


ris (2 : 2): [ -1 0.8152120749192886 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30785 interne); stringhe deallocate: 0 (30705 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4564726397010972 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6888190951347124


ris (2 : 2): [ 1 0.6888190951347124 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30805 interne); stringhe deallocate: 0 (30725 interne)


Stringhe allocate: 1 (30805 interne); stringhe deallocate: 0 (30730 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.01447763273801916 0.01447763273801916 0.4564728055190954 0.1847879250807114 0.6888190951347124 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6690371728842077 0.3950171756408121 0.9978212101539499 0.8153516602839827 0.9999820923513287 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152117817825273 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9858411645533141


ris (2 : 2): [ -1 0.9858411645533141 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30840 interne); stringhe deallocate: 0 (30760 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617502e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9858411645533141


ris (2 : 2): [ -1 0.9858411645533141 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30860 interne); stringhe deallocate: 0 (30780 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4551919020897748


ris (2 : 2): [ 1 0.4551919020897748 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30880 interne); stringhe deallocate: 0 (30800 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9858408062882029 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152155292815767


ris (2 : 2): [ -1 0.8152155292815767 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30900 interne); stringhe deallocate: 0 (30820 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4551918550943999 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6883043550739837


ris (2 : 2): [ 1 0.6883043550739837 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30920 interne); stringhe deallocate: 0 (30840 interne)


Stringhe allocate: 1 (30920 interne); stringhe deallocate: 0 (30845 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.01415883544668595 0.01415883544668595 0.4551919020897748 0.1847844707184233 0.6883043550739837 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6690076344401358 0.3949609138500265 0.9977650045081088 0.8153449495449516 0.9999819152929029 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152117817825877 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9859896277262804


ris (2 : 2): [ -1 0.9859896277262804 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30955 interne); stringhe deallocate: 0 (30875 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892620272e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9859896277262804


ris (2 : 2): [ -1 0.9859896277262804 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30975 interne); stringhe deallocate: 0 (30895 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4545801658668814


ris (2 : 2): [ 1 0.4545801658668814 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30995 interne); stringhe deallocate: 0 (30915 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9859895794815001 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152169734589433


ris (2 : 2): [ -1 0.8152169734589433 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31015 interne); stringhe deallocate: 0 (30935 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4545800730201872 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6880611885064967


ris (2 : 2): [ 1 0.6880611885064967 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31035 interne); stringhe deallocate: 0 (30955 interne)


Stringhe allocate: 1 (31035 interne); stringhe deallocate: 0 (30960 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.0140103722737196 0.0140103722737196 0.4545801658668814 0.1847830265410567 0.6880611885064967 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6689939402736487 0.3949348255123394 0.9977376550922051 0.8153421439537408 0.9999818310416013 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152151196426329 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9866372297892105


ris (2 : 2): [ -1 0.9866372297892105 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31070 interne); stringhe deallocate: 0 (30990 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618805e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9866372297892105


ris (2 : 2): [ -1 0.9866372297892105 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31090 interne); stringhe deallocate: 0 (31010 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4519099232000685


ris (2 : 2): [ 1 0.4519099232000685 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31110 interne); stringhe deallocate: 0 (31030 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9866371243427494 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152233884818951


ris (2 : 2): [ -1 0.8152233884818951 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31130 interne); stringhe deallocate: 0 (31050 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4519097849342635 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6870000398580748


ris (2 : 2): [ 1 0.6870000398580748 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31150 interne); stringhe deallocate: 0 (31070 interne)


Stringhe allocate: 1 (31150 interne); stringhe deallocate: 0 (31075 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.01336277021078947 0.01336277021078947 0.4519099232000685 0.1847766115181049 0.6870000398580748 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6689346620273264 0.394821858814017 0.9976143234195453 0.8153296814786328 0.9999814587620103 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.815216550154517 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9867271446418227


ris (2 : 2): [ -1 0.9867271446418227 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31185 interne); stringhe deallocate: 0 (31105 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617894e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9867271446418227


ris (2 : 2): [ -1 0.9867271446418227 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31205 interne); stringhe deallocate: 0 (31125 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4515400855893968


ris (2 : 2): [ 1 0.4515400855893968 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31225 interne); stringhe deallocate: 0 (31145 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.986726769728917 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152243848300389


ris (2 : 2): [ -1 0.8152243848300389 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31245 interne); stringhe deallocate: 0 (31165 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4515399977180623 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6868529417459044


ris (2 : 2): [ 1 0.6868529417459044 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31265 interne); stringhe deallocate: 0 (31185 interne)


Stringhe allocate: 1 (31265 interne); stringhe deallocate: 0 (31190 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.01327285535817735 0.01327285535817735 0.4515400855893968 0.1847756151699611 0.6868529417459044 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6689264900348673 0.3948062806179825 0.997596722488584 0.8153277458621637 0.9999814065575891 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152232258751573 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9861397823574388


ris (2 : 2): [ -1 0.9861397823574388 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31300 interne); stringhe deallocate: 0 (31220 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892621764e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9861397823574388


ris (2 : 2): [ -1 0.9861397823574388 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31320 interne); stringhe deallocate: 0 (31240 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4539633501981051


ris (2 : 2): [ 1 0.4539633501981051 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31340 interne); stringhe deallocate: 0 (31260 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9861397831864291 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152184359997964


ris (2 : 2): [ -1 0.8152184359997964 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31360 interne); stringhe deallocate: 0 (31280 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4539632841560533 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6878156615953627


ris (2 : 2): [ 1 0.6878156615953627 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31380 interne); stringhe deallocate: 0 (31300 interne)


Stringhe allocate: 1 (31380 interne); stringhe deallocate: 0 (31305 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.01386021764256118 0.01386021764256118 0.4539633501981051 0.1847815640002036 0.6878156615953627 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.668980129892306 0.394908512493117 0.9977097415302507 0.8153393026825389 0.9999817455742885 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152241795487338 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9867224809669764


ris (2 : 2): [ -1 0.9867224809669764 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31415 interne); stringhe deallocate: 0 (31335 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622814e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9867224809669764


ris (2 : 2): [ -1 0.9867224809669764 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31435 interne); stringhe deallocate: 0 (31355 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4515482358428229


ris (2 : 2): [ 1 0.4515482358428229 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31455 interne); stringhe deallocate: 0 (31375 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9867224781936965 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152240618855424


ris (2 : 2): [ -1 0.8152240618855424 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31475 interne); stringhe deallocate: 0 (31395 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4515481039499907 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6868579866545137


ris (2 : 2): [ 1 0.6868579866545137 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31495 interne); stringhe deallocate: 0 (31415 interne)


Stringhe allocate: 1 (31495 interne); stringhe deallocate: 0 (31420 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.01327751903302366 0.01327751903302366 0.4515482358428229 0.1847759381144576 0.6868579866545137 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6689269135488478 0.3948070879876691 0.9975971117550387 0.8153283732502558 0.9999814083504347 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152179806656204 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9867224809669764


ris (2 : 2): [ -1 0.9867224809669764 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31530 interne); stringhe deallocate: 0 (31450 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892638181e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9867224809669764


ris (2 : 2): [ -1 0.9867224809669764 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31550 interne); stringhe deallocate: 0 (31470 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4515482358428229


ris (2 : 2): [ 1 0.4515482358428229 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31570 interne); stringhe deallocate: 0 (31490 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.986722478193891 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152240618855424


ris (2 : 2): [ -1 0.8152240618855424 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31590 interne); stringhe deallocate: 0 (31510 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4515481039497526 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6868579866545137


ris (2 : 2): [ 1 0.6868579866545137 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31610 interne); stringhe deallocate: 0 (31530 interne)


Stringhe allocate: 1 (31610 interne); stringhe deallocate: 0 (31535 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.01327751903302366 0.01327751903302366 0.4515482358428229 0.1847759381144576 0.6868579866545137 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6689269135488478 0.3948070879876691 0.9975971117550387 0.8153283732502558 0.9999814083504347 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152237027117133 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.987004361373933


ris (2 : 2): [ -1 0.987004361373933 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31645 interne); stringhe deallocate: 0 (31565 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616983e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.987004361373933


ris (2 : 2): [ -1 0.987004361373933 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31665 interne); stringhe deallocate: 0 (31585 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4503655951146227


ris (2 : 2): [ 1 0.4503655951146227 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31685 interne); stringhe deallocate: 0 (31605 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9870042889542861 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152266433112189


ris (2 : 2): [ -1 0.8152266433112189 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31705 interne); stringhe deallocate: 0 (31625 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4503655477974227 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6863914070399313


ris (2 : 2): [ 1 0.6863914070399313 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31725 interne); stringhe deallocate: 0 (31645 interne)


Stringhe allocate: 1 (31725 interne); stringhe deallocate: 0 (31650 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.01299563862606701 0.01299563862606701 0.4503655951146227 0.1847733566887811 0.6863914070399313 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6689013839480688 0.3947584137687987 0.9975399667064091 0.8153233582766717 0.9999812418051821 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152237027116103 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9871354152452075


ris (2 : 2): [ -1 0.9871354152452075 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31760 interne); stringhe deallocate: 0 (31680 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617843e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9871354152452075


ris (2 : 2): [ -1 0.9871354152452075 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31780 interne); stringhe deallocate: 0 (31700 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4498008640848535


ris (2 : 2): [ 1 0.4498008640848535 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31800 interne); stringhe deallocate: 0 (31720 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.987135419172728 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.815227722534804


ris (2 : 2): [ -1 0.815227722534804 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31820 interne); stringhe deallocate: 0 (31740 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4498007341835164 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6861710282314558


ris (2 : 2): [ 1 0.6861710282314558 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31840 interne); stringhe deallocate: 0 (31760 interne)


Stringhe allocate: 1 (31840 interne); stringhe deallocate: 0 (31765 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.01286458475479246 0.01286458475479246 0.4498008640848535 0.184772277465196 0.6861710282314558 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6688895617233246 0.3947358698622377 0.9975122042935964 0.8153212616481466 0.9999811626232256 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152265637344955 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9877070502025123


ris (2 : 2): [ -1 0.9877070502025123 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31875 interne); stringhe deallocate: 0 (31795 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616958e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9877070502025123


ris (2 : 2): [ -1 0.9877070502025123 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31895 interne); stringhe deallocate: 0 (31815 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6875543683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4473358065209092


ris (2 : 2): [ 1 0.4473358065209092 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31915 interne); stringhe deallocate: 0 (31835 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9877066700885271 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152325164396597


ris (2 : 2): [ -1 0.8152325164396597 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31935 interne); stringhe deallocate: 0 (31855 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.447335724494188 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6852093242484943


ris (2 : 2): [ 1 0.6852093242484943 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31955 interne); stringhe deallocate: 0 (31875 interne)


Stringhe allocate: 1 (31955 interne); stringhe deallocate: 0 (31880 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.01229294979748774 0.01229294979748774 0.4473358065209092 0.1847674835603403 0.6852093242484943 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6688383432244269 0.3946381721944043 0.9973873283236207 0.8153119484007925 0.9999808131535628 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152275174090837 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9877864294211968


ris (2 : 2): [ -1 0.9877864294211968 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31990 interne); stringhe deallocate: 0 (31910 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622789e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9877864294211968


ris (2 : 2): [ -1 0.9877864294211968 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32010 interne); stringhe deallocate: 0 (31930 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4469943853106064


ris (2 : 2): [ 1 0.4469943853106064 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32030 interne); stringhe deallocate: 0 (31950 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9877863018940207 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152332610066682


ris (2 : 2): [ -1 0.8152332610066682 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32050 interne); stringhe deallocate: 0 (31970 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4469943090891508 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6850760095075927


ris (2 : 2): [ 1 0.6850760095075927 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32070 interne); stringhe deallocate: 0 (31990 interne)


Stringhe allocate: 1 (32070 interne); stringhe deallocate: 0 (31995 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.01221357057880323 0.01221357057880323 0.4469943853106064 0.1847667389933319 0.6850760095075927 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6688312754055035 0.3946246868783253 0.9973695481988284 0.8153105019052964 0.9999807641999464 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152322857807395 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.987267989506443


ris (2 : 2): [ -1 0.987267989506443 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32105 interne); stringhe deallocate: 0 (32025 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892628847e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.987267989506443


ris (2 : 2): [ -1 0.987267989506443 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32125 interne); stringhe deallocate: 0 (32045 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4492314332355262


ris (2 : 2): [ 1 0.4492314332355262 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32145 interne); stringhe deallocate: 0 (32065 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9872679799041331 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152288154811707


ris (2 : 2): [ -1 0.8152288154811707 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32165 interne); stringhe deallocate: 0 (32085 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4492313906166228 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6859485052307692


ris (2 : 2): [ 1 0.6859485052307692 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32185 interne); stringhe deallocate: 0 (32105 interne)


Stringhe allocate: 1 (32185 interne); stringhe deallocate: 0 (32110 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.01273201049355699 0.01273201049355699 0.4492314332355262 0.1847711845188294 0.6859485052307692 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6688776327134902 0.3947131198194027 0.9974838954553994 0.8153191383570975 0.9999810823317494 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.815233239456135 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.987782156767242


ris (2 : 2): [ -1 0.987782156767242 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32220 interne); stringhe deallocate: 0 (32140 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618311e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.987782156767242


ris (2 : 2): [ -1 0.987782156767242 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32240 interne); stringhe deallocate: 0 (32160 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4470019577129212


ris (2 : 2): [ 1 0.4470019577129212 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32260 interne); stringhe deallocate: 0 (32180 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9877820103591875 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152330196668796


ris (2 : 2): [ -1 0.8152330196668796 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32280 interne); stringhe deallocate: 0 (32200 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4470019384834578 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6850806057706982


ris (2 : 2): [ 1 0.6850806057706982 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32300 interne); stringhe deallocate: 0 (32220 interne)


Stringhe allocate: 1 (32300 interne); stringhe deallocate: 0 (32225 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.01221784323275799 0.01221784323275799 0.4470019577129212 0.1847669803331205 0.6850806057706982 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6688316555612758 0.3946254122338833 0.9973699438463339 0.8153109707644157 0.9999807658897864 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152284710830644 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.987782156767242


ris (2 : 2): [ -1 0.987782156767242 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32335 interne); stringhe deallocate: 0 (32255 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617502e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.987782156767242


ris (2 : 2): [ -1 0.987782156767242 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32355 interne); stringhe deallocate: 0 (32275 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4470019577129212


ris (2 : 2): [ 1 0.4470019577129212 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32375 interne); stringhe deallocate: 0 (32295 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9877820103592478 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152330196668796


ris (2 : 2): [ -1 0.8152330196668796 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32395 interne); stringhe deallocate: 0 (32315 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4470019384834432 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6850806057706982


ris (2 : 2): [ 1 0.6850806057706982 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32415 interne); stringhe deallocate: 0 (32335 interne)


Stringhe allocate: 1 (32415 interne); stringhe deallocate: 0 (32340 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.01221784323275799 0.01221784323275799 0.4470019577129212 0.1847669803331205 0.6850806057706982 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6688316555612758 0.3946254122338833 0.9973699438463339 0.8153109707644157 0.9999807658897864 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152327626175486 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9880306810046473


ris (2 : 2): [ -1 0.9880306810046473 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32450 interne); stringhe deallocate: 0 (32370 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892620272e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9880306810046473


ris (2 : 2): [ -1 0.9880306810046473 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32470 interne); stringhe deallocate: 0 (32390 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4459102872369544


ris (2 : 2): [ 1 0.4459102872369544 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32490 interne); stringhe deallocate: 0 (32410 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9880304425186095 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152349487468532


ris (2 : 2): [ -1 0.8152349487468532 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32510 interne); stringhe deallocate: 0 (32430 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4459102198097398 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.684657796222078


ris (2 : 2): [ 1 0.684657796222078 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32530 interne); stringhe deallocate: 0 (32450 interne)


Stringhe allocate: 1 (32530 interne); stringhe deallocate: 0 (32455 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.0119693189953527 0.0119693189953527 0.4459102872369544 0.1847650512531468 0.684657796222078 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6688095953532658 0.3945833159981985 0.9973122908489971 0.815307223070186 0.9999806098187457 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152327626174865 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9881460146791699


ris (2 : 2): [ -1 0.9881460146791699 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32565 interne); stringhe deallocate: 0 (32485 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618805e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9881460146791699


ris (2 : 2): [ -1 0.9881460146791699 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32585 interne); stringhe deallocate: 0 (32505 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4453890624968564


ris (2 : 2): [ 1 0.4453890624968564 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32605 interne); stringhe deallocate: 0 (32525 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9881458371113041 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152357552413377


ris (2 : 2): [ -1 0.8152357552413377 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32625 interne); stringhe deallocate: 0 (32545 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.44538903679606 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.684458122712024


ris (2 : 2): [ 1 0.684458122712024 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32645 interne); stringhe deallocate: 0 (32565 interne)


Stringhe allocate: 1 (32645 interne); stringhe deallocate: 0 (32570 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.01185398532083015 0.01185398532083015 0.4453890624968564 0.1847642447586623 0.684458122712024 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6687993936669444 0.3945638457402237 0.997284322818234 0.8153056562610543 0.9999805356739809 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152346699665287 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9886490555972598


ris (2 : 2): [ -1 0.9886490555972598 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32680 interne); stringhe deallocate: 0 (32600 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617894e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9886490555972598


ris (2 : 2): [ -1 0.9886490555972598 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32700 interne); stringhe deallocate: 0 (32620 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.443113916694716


ris (2 : 2): [ 1 0.443113916694716 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32720 interne); stringhe deallocate: 0 (32640 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9886489003136338 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152393376869845


ris (2 : 2): [ -1 0.8152393376869845 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32740 interne); stringhe deallocate: 0 (32660 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4431138082954558 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6835867760163682


ris (2 : 2): [ 1 0.6835867760163682 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32760 interne); stringhe deallocate: 0 (32680 interne)


Stringhe allocate: 1 (32760 interne); stringhe deallocate: 0 (32685 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.0113509444027402 0.0113509444027402 0.443113916694716 0.1847606623130155 0.6835867760163682 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6687551624224729 0.3944794071412544 0.997158817470722 0.8152986964805191 0.9999802087846822 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152356236412706 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9887189215556476


ris (2 : 2): [ -1 0.9887189215556476 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32795 interne); stringhe deallocate: 0 (32715 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892621764e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9887189215556476


ris (2 : 2): [ -1 0.9887189215556476 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32815 interne); stringhe deallocate: 0 (32735 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4427987973424404


ris (2 : 2): [ 1 0.4427987973424404 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32835 interne); stringhe deallocate: 0 (32755 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9887185185379916 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152398940971944


ris (2 : 2): [ -1 0.8152398940971944 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32855 interne); stringhe deallocate: 0 (32775 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4427986189338973 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6834659856741511


ris (2 : 2): [ 1 0.6834659856741511 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32875 interne); stringhe deallocate: 0 (32795 interne)


Stringhe allocate: 1 (32875 interne); stringhe deallocate: 0 (32800 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.01128107844435244 0.01128107844435244 0.4427987973424404 0.1847601059028056 0.6834659856741511 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6687490531647684 0.3944677416119217 0.9971409859729756 0.8152976155141131 0.9999801630385331 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152389615006381 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9882627130804961


ris (2 : 2): [ -1 0.9882627130804961 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32910 interne); stringhe deallocate: 0 (32830 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622814e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9882627130804961


ris (2 : 2): [ -1 0.9882627130804961 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32930 interne); stringhe deallocate: 0 (32850 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4448634907239295


ris (2 : 2): [ 1 0.4448634907239295 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32950 interne); stringhe deallocate: 0 (32870 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9882626622146926 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152365719906701


ris (2 : 2): [ -1 0.8152365719906701 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32970 interne); stringhe deallocate: 0 (32890 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4448633238289022 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6842565020660826


ris (2 : 2): [ 1 0.6842565020660826 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32990 interne); stringhe deallocate: 0 (32910 interne)


Stringhe allocate: 1 (32990 interne); stringhe deallocate: 0 (32915 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.01173728691950393 0.01173728691950393 0.4448634907239295 0.1847634280093299 0.6842565020660826 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6687890943513259 0.3945441872469132 0.9972558287275616 0.8153040695277395 0.9999804605185295 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152394383377395 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9887150087812103


ris (2 : 2): [ -1 0.9887150087812103 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33025 interne); stringhe deallocate: 0 (32945 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892638181e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9887150087812103


ris (2 : 2): [ -1 0.9887150087812103 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33045 interne); stringhe deallocate: 0 (32965 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4428058278525887


ris (2 : 2): [ 1 0.4428058278525887 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33065 interne); stringhe deallocate: 0 (32985 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9887147038408637 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152397137429059


ris (2 : 2): [ -1 0.8152397137429059 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33085 interne); stringhe deallocate: 0 (33005 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4428057714912583 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6834701704745105


ris (2 : 2): [ 1 0.6834701704745105 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33105 interne); stringhe deallocate: 0 (33025 interne)


Stringhe allocate: 1 (33105 interne); stringhe deallocate: 0 (33030 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.01128499121878968 0.01128499121878968 0.4428058278525887 0.1847602862570941 0.6834701704745105 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6687493950899861 0.3944683945306295 0.9971413850146937 0.8152979658976456 0.9999801646251822 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152365773149848 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9887150087812103


ris (2 : 2): [ -1 0.9887150087812103 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33140 interne); stringhe deallocate: 0 (33060 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616983e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9887150087812103


ris (2 : 2): [ -1 0.9887150087812103 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33160 interne); stringhe deallocate: 0 (33080 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4428058278525887


ris (2 : 2): [ 1 0.4428058278525887 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33180 interne); stringhe deallocate: 0 (33100 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9887147038407607 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152397137429059


ris (2 : 2): [ -1 0.8152397137429059 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33200 interne); stringhe deallocate: 0 (33120 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4428057714914946 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6834701704745105


ris (2 : 2): [ 1 0.6834701704745105 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33220 interne); stringhe deallocate: 0 (33140 interne)


Stringhe allocate: 1 (33220 interne); stringhe deallocate: 0 (33145 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.01128499121878968 0.01128499121878968 0.4428058278525887 0.1847602862570941 0.6834701704745105 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6687493950899861 0.3944683945306295 0.9971413850146937 0.8152979658976456 0.9999801646251822 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.815239438337831 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9889334281839611


ris (2 : 2): [ -1 0.9889334281839611 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33255 interne); stringhe deallocate: 0 (33175 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617843e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9889334281839611


ris (2 : 2): [ -1 0.9889334281839611 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33275 interne); stringhe deallocate: 0 (33195 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4417983435223609


ris (2 : 2): [ 1 0.4417983435223609 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33295 interne); stringhe deallocate: 0 (33215 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9889330952591537 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.815241155327036


ris (2 : 2): [ -1 0.815241155327036 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33315 interne); stringhe deallocate: 0 (33235 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4417982145759734 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6830871251506311


ris (2 : 2): [ 1 0.6830871251506311 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33335 interne); stringhe deallocate: 0 (33255 interne)


Stringhe allocate: 1 (33335 interne); stringhe deallocate: 0 (33260 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.01106657181603887 0.01106657181603887 0.4417983435223609 0.184758844672964 0.6830871251506311 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6687303475623985 0.3944320193209885 0.9970836338274225 0.815295165255869 0.9999800188681112 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.815239438337767 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9890345844658871


ris (2 : 2): [ -1 0.9890345844658871 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33370 interne); stringhe deallocate: 0 (33290 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616958e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9890345844658871


ris (2 : 2): [ -1 0.9890345844658871 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33390 interne); stringhe deallocate: 0 (33310 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4413173719989428


ris (2 : 2): [ 1 0.4413173719989428 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33410 interne); stringhe deallocate: 0 (33330 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9890341847369646 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152417580124616


ris (2 : 2): [ -1 0.8152417580124616 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33430 interne); stringhe deallocate: 0 (33350 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4413173243019393 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6829062579131779


ris (2 : 2): [ 1 0.6829062579131779 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33450 interne); stringhe deallocate: 0 (33370 interne)


Stringhe allocate: 1 (33450 interne); stringhe deallocate: 0 (33375 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.0109654155341129 0.0109654155341129 0.4413173719989428 0.1847582419875384 0.6829062579131779 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6687215532838903 0.3944152225753859 0.9970556563026691 0.8152939943854397 0.9999799496724368 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152408688495134 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9894757655686399


ris (2 : 2): [ -1 0.9894757655686399 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33485 interne); stringhe deallocate: 0 (33405 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622789e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9894757655686399


ris (2 : 2): [ -1 0.9894757655686399 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33505 interne); stringhe deallocate: 0 (33425 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4392179376028552


ris (2 : 2): [ 1 0.4392179376028552 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33525 interne); stringhe deallocate: 0 (33445 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9894757359455344 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152444351400275


ris (2 : 2): [ -1 0.8152444351400275 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33545 interne); stringhe deallocate: 0 (33465 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4392178102943563 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6821169814415216


ris (2 : 2): [ 1 0.6821169814415216 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33565 interne); stringhe deallocate: 0 (33485 interne)


Stringhe allocate: 1 (33565 interne); stringhe deallocate: 0 (33490 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.01052423443136008 0.01052423443136008 0.4392179376028552 0.1847555648599725 0.6821169814415216 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6686833982796032 0.3943423314284993 0.996930380856871 0.8152887933700065 0.9999796448981349 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152413456867453 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9895370519593014


ris (2 : 2): [ -1 0.9895370519593014 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33600 interne); stringhe deallocate: 0 (33520 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892628847e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9895370519593014


ris (2 : 2): [ -1 0.9895370519593014 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33620 interne); stringhe deallocate: 0 (33540 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.438927153928463


ris (2 : 2): [ 1 0.438927153928463 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33640 interne); stringhe deallocate: 0 (33560 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9895367711028635 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.815244850940874


ris (2 : 2): [ -1 0.815244850940874 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33660 interne); stringhe deallocate: 0 (33580 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.438926939627855 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6820075672408419


ris (2 : 2): [ 1 0.6820075672408419 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33680 interne); stringhe deallocate: 0 (33600 interne)


Stringhe allocate: 1 (33680 interne); stringhe deallocate: 0 (33605 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.01046294804069858 0.01046294804069858 0.438927153928463 0.184755149059126 0.6820075672408419 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6686781236700914 0.3943322527193022 0.9969126172606214 0.8152879855672692 0.9999796022845038 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152442067107737 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9891369638128129


ris (2 : 2): [ -1 0.9891369638128129 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33715 interne); stringhe deallocate: 0 (33635 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618311e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9891369638128129


ris (2 : 2): [ -1 0.9891369638128129 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33735 interne); stringhe deallocate: 0 (33655 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4408323810243881


ris (2 : 2): [ 1 0.4408323810243881 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33755 interne); stringhe deallocate: 0 (33675 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9891367047256425 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152423683611962


ris (2 : 2): [ -1 0.8152423683611962 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33775 interne); stringhe deallocate: 0 (33695 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.440832380912271 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6827236230577395


ris (2 : 2): [ 1 0.6827236230577395 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33795 interne); stringhe deallocate: 0 (33715 interne)


Stringhe allocate: 1 (33795 interne); stringhe deallocate: 0 (33720 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.01086303618718709 0.01086303618718709 0.4408323810243881 0.1847576316388038 0.6827236230577395 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6687126701471183 0.3943982546702729 0.9970271750796975 0.8152928086261373 0.9999798795573781 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152446835464433 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9895334709802884


ris (2 : 2): [ -1 0.9895334709802884 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33830 interne); stringhe deallocate: 0 (33750 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617502e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9895334709802884


ris (2 : 2): [ -1 0.9895334709802884 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33850 interne); stringhe deallocate: 0 (33770 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4389336773644304


ris (2 : 2): [ 1 0.4389336773644304 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33870 interne); stringhe deallocate: 0 (33790 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9895334332413279 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152447161621277


ris (2 : 2): [ -1 0.8152447161621277 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33890 interne); stringhe deallocate: 0 (33810 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4389336153480681 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6820113753323446


ris (2 : 2): [ 1 0.6820113753323446 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33910 interne); stringhe deallocate: 0 (33830 interne)


Stringhe allocate: 1 (33910 interne); stringhe deallocate: 0 (33835 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.01046652901971157 0.01046652901971157 0.4389336773644304 0.1847552838378723 0.6820113753323446 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6686784316951264 0.3943328413068831 0.9969130168857072 0.8152882474105555 0.9999796037691413 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152422993607127 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9895334709802884


ris (2 : 2): [ -1 0.9895334709802884 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33945 interne); stringhe deallocate: 0 (33865 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892620272e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9895334709802884


ris (2 : 2): [ -1 0.9895334709802884 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33965 interne); stringhe deallocate: 0 (33885 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4389336773644304


ris (2 : 2): [ 1 0.4389336773644304 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33985 interne); stringhe deallocate: 0 (33905 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9895334332412658 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152447161621277


ris (2 : 2): [ -1 0.8152447161621277 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34005 interne); stringhe deallocate: 0 (33925 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4389336153480818 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6820113753323446


ris (2 : 2): [ 1 0.6820113753323446 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34025 interne); stringhe deallocate: 0 (33945 interne)


Stringhe allocate: 1 (34025 interne); stringhe deallocate: 0 (33950 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.01046652901971157 0.01046652901971157 0.4389336773644304 0.1847552838378723 0.6820113753323446 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6686784316951264 0.3943328413068831 0.9969130168857072 0.8152882474105555 0.9999796037691413 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152446835464415 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9897247555805213


ris (2 : 2): [ -1 0.9897247555805213 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34060 interne); stringhe deallocate: 0 (33980 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618805e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9897247555805213


ris (2 : 2): [ -1 0.9897247555805213 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34080 interne); stringhe deallocate: 0 (34000 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4380040739420942


ris (2 : 2): [ 1 0.4380040739420942 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34100 interne); stringhe deallocate: 0 (34020 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9897246449421147 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152457934434261


ris (2 : 2): [ -1 0.8152457934434261 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34120 interne); stringhe deallocate: 0 (34040 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4380040213081502 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6816644424038554


ris (2 : 2): [ 1 0.6816644424038554 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34140 interne); stringhe deallocate: 0 (34060 interne)


Stringhe allocate: 1 (34140 interne); stringhe deallocate: 0 (34065 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.01027524441947869 0.01027524441947869 0.4380040739420942 0.1847542065565739 0.6816644424038554 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6686620077579846 0.3943014552753751 0.9968555485562868 0.8152861545060257 0.9999794680680356 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.815244683546851 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9898131439884633


ris (2 : 2): [ -1 0.9898131439884633 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34175 interne); stringhe deallocate: 0 (34095 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617894e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9898131439884633


ris (2 : 2): [ -1 0.9898131439884633 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34195 interne); stringhe deallocate: 0 (34115 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4375603337017104


ris (2 : 2): [ 1 0.4375603337017104 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34215 interne); stringhe deallocate: 0 (34135 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9898128598168077 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152462438238075


ris (2 : 2): [ -1 0.8152462438238075 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34235 interne); stringhe deallocate: 0 (34155 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4375603243324449 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6815006510355463


ris (2 : 2): [ 1 0.6815006510355463 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34255 interne); stringhe deallocate: 0 (34175 interne)


Stringhe allocate: 1 (34255 interne); stringhe deallocate: 0 (34180 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.01018685601153668 0.01018685601153668 0.4375603337017104 0.1847537561761925 0.6815006510355463 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6686544390910961 0.3942869899132551 0.9968277431879248 0.8152852795218599 0.9999794036885009 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152456372215928 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9901986174857028


ris (2 : 2): [ -1 0.9901986174857028 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34290 interne); stringhe deallocate: 0 (34210 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892621764e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9901986174857028


ris (2 : 2): [ -1 0.9901986174857028 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34310 interne); stringhe deallocate: 0 (34230 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.435623419255232


ris (2 : 2): [ 1 0.435623419255232 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34330 interne); stringhe deallocate: 0 (34250 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9901986210770541 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.815248244413223


ris (2 : 2): [ -1 0.815248244413223 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34350 interne); stringhe deallocate: 0 (34270 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.43562341179606 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6807858934552781


ris (2 : 2): [ 1 0.6807858934552781 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34370 interne); stringhe deallocate: 0 (34290 interne)


Stringhe allocate: 1 (34370 interne); stringhe deallocate: 0 (34295 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.009801382514297186 0.009801382514297186 0.435623419255232 0.184751755586777 0.6807858934552781 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6686215817910666 0.3942241800666458 0.9967034882320085 0.8152813928364584 0.999979120376554 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152461140580112 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9902521772284635


ris (2 : 2): [ -1 0.9902521772284635 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34405 interne); stringhe deallocate: 0 (34325 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622814e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9902521772284635


ris (2 : 2): [ -1 0.9902521772284635 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34425 interne); stringhe deallocate: 0 (34345 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4353551446284018


ris (2 : 2): [ 1 0.4353551446284018 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34445 interne); stringhe deallocate: 0 (34365 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9902520268387161 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152485551372837


ris (2 : 2): [ -1 0.8152485551372837 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34465 interne); stringhe deallocate: 0 (34385 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4353549524757536 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6806868089614706


ris (2 : 2): [ 1 0.6806868089614706 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34485 interne); stringhe deallocate: 0 (34405 interne)


Stringhe allocate: 1 (34485 interne); stringhe deallocate: 0 (34410 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.009747822771536518 0.009747822771536518 0.4353551446284018 0.1847514448627163 0.6806868089614706 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6686170357527541 0.3942154882864975 0.9966859015920776 0.8152807891701198 0.9999790807956188 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152480214065871 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9899026265563347


ris (2 : 2): [ -1 0.9899026265563347 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34520 interne); stringhe deallocate: 0 (34440 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892638181e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9899026265563347


ris (2 : 2): [ -1 0.9899026265563347 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34540 interne); stringhe deallocate: 0 (34460 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4371128779793941


ris (2 : 2): [ 1 0.4371128779793941 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34560 interne); stringhe deallocate: 0 (34480 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9899025052019477 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152466999308766


ris (2 : 2): [ -1 0.8152466999308766 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34580 interne); stringhe deallocate: 0 (34500 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4371128126594832 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6813352554891218


ris (2 : 2): [ 1 0.6813352554891218 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34600 interne); stringhe deallocate: 0 (34520 interne)


Stringhe allocate: 1 (34600 interne); stringhe deallocate: 0 (34525 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.01009737344366535 0.01009737344366535 0.4371128779793941 0.1847533000691234 0.6813352554891218 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6686467898834023 0.3942723695332393 0.996799457886496 0.8152843934115512 0.9999793384736045 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152484982439399 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9902489025608188


ris (2 : 2): [ -1 0.9902489025608188 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34635 interne); stringhe deallocate: 0 (34555 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616983e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9902489025608188


ris (2 : 2): [ -1 0.9902489025608188 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34655 interne); stringhe deallocate: 0 (34575 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4353611944145213


ris (2 : 2): [ 1 0.4353611944145213 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34675 interne); stringhe deallocate: 0 (34595 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9902486889787001 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152484544175878


ris (2 : 2): [ -1 0.8152484544175878 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34695 interne); stringhe deallocate: 0 (34615 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4353611513588094 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6806902726577214


ris (2 : 2): [ 1 0.6806902726577214 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34715 interne); stringhe deallocate: 0 (34635 interne)


Stringhe allocate: 1 (34715 interne); stringhe deallocate: 0 (34640 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.009751097439181233 0.009751097439181233 0.4353611944145213 0.1847515455824123 0.6806902726577214 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6686173135646608 0.3942160194590511 0.9966862992076497 0.8152809848456598 0.999979082180514 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.815246590895204 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9902489025608188


ris (2 : 2): [ -1 0.9902489025608188 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34750 interne); stringhe deallocate: 0 (34670 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617843e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9902489025608188


ris (2 : 2): [ -1 0.9902489025608188 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34770 interne); stringhe deallocate: 0 (34690 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4353611944145213


ris (2 : 2): [ 1 0.4353611944145213 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34790 interne); stringhe deallocate: 0 (34710 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9902486889786362 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152484544175878


ris (2 : 2): [ -1 0.8152484544175878 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34810 interne); stringhe deallocate: 0 (34730 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.435361151358812 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6806902726577214


ris (2 : 2): [ 1 0.6806902726577214 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34830 interne); stringhe deallocate: 0 (34750 interne)


Stringhe allocate: 1 (34830 interne); stringhe deallocate: 0 (34755 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.009751097439181233 0.009751097439181233 0.4353611944145213 0.1847515455824123 0.6806902726577214 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6686173135646608 0.3942160194590511 0.9966862992076497 0.8152809848456598 0.999979082180514 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152480214066147 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9904157657878941


ris (2 : 2): [ -1 0.9904157657878941 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34865 interne); stringhe deallocate: 0 (34785 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616958e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9904157657878941


ris (2 : 2): [ -1 0.9904157657878941 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34885 interne); stringhe deallocate: 0 (34805 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4345036164219949


ris (2 : 2): [ 1 0.4345036164219949 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34905 interne); stringhe deallocate: 0 (34825 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.990415581984279 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152492594581748


ris (2 : 2): [ -1 0.8152492594581748 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34925 interne); stringhe deallocate: 0 (34845 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.43450355973002 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.680376125447049


ris (2 : 2): [ 1 0.680376125447049 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34945 interne); stringhe deallocate: 0 (34865 interne)


Stringhe allocate: 1 (34945 interne); stringhe deallocate: 0 (34870 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.009584234212105858 0.009584234212105858 0.4345036164219949 0.1847507405418252 0.680376125447049 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6686031797914984 0.3941889940318047 0.9966294609633701 0.8152794208335529 0.9999789562008733 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152480214068865 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9904926740356379


ris (2 : 2): [ -1 0.9904926740356379 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34980 interne); stringhe deallocate: 0 (34900 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622789e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9904926740356379


ris (2 : 2): [ -1 0.9904926740356379 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35000 interne); stringhe deallocate: 0 (34920 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4340943022864582


ris (2 : 2): [ 1 0.4340943022864582 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35020 interne); stringhe deallocate: 0 (34940 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9904923527668235 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152495960223269


ris (2 : 2): [ -1 0.8152495960223269 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35040 interne); stringhe deallocate: 0 (34960 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4340941950294646 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6802278342314988


ris (2 : 2): [ 1 0.6802278342314988 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35060 interne); stringhe deallocate: 0 (34980 interne)


Stringhe allocate: 1 (35060 interne); stringhe deallocate: 0 (34985 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.009507325964362101 0.009507325964362101 0.4340943022864582 0.1847504039776731 0.6802278342314988 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.668596680777672 0.3941765658906553 0.9966019926238861 0.8152787669649055 0.9999788964696718 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152489750812766 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9908280602608273


ris (2 : 2): [ -1 0.9908280602608273 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35095 interne); stringhe deallocate: 0 (35015 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892628847e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9908280602608273


ris (2 : 2): [ -1 0.9908280602608273 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35115 interne); stringhe deallocate: 0 (35035 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4323076624751843


ris (2 : 2): [ 1 0.4323076624751843 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35135 interne); stringhe deallocate: 0 (35055 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9908280461272776 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152510910404348


ris (2 : 2): [ -1 0.8152510910404348 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35155 interne); stringhe deallocate: 0 (35075 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4323074861976912 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6795807191693633


ris (2 : 2): [ 1 0.6795807191693633 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35175 interne); stringhe deallocate: 0 (35095 interne)


Stringhe allocate: 1 (35175 interne); stringhe deallocate: 0 (35100 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.009171939739172741 0.009171939739172741 0.4323076624751843 0.1847489089595652 0.6795807191693633 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6685684521048834 0.3941225745690303 0.996479471011539 0.8152758624766323 0.999978633823554 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152494519195139 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9908746724799759


ris (2 : 2): [ -1 0.9908746724799759 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35210 interne); stringhe deallocate: 0 (35130 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618311e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9908746724799759


ris (2 : 2): [ -1 0.9908746724799759 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35230 interne); stringhe deallocate: 0 (35150 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4320602011718561


ris (2 : 2): [ 1 0.4320602011718561 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35250 interne); stringhe deallocate: 0 (35170 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9908742993301347 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152513232412973


ris (2 : 2): [ -1 0.8152513232412973 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35270 interne); stringhe deallocate: 0 (35190 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4320600077125691 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6794910113910885


ris (2 : 2): [ 1 0.6794910113910885 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35290 interne); stringhe deallocate: 0 (35210 interne)


Stringhe allocate: 1 (35290 interne); stringhe deallocate: 0 (35215 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.009125327520024151 0.009125327520024151 0.4320602011718561 0.1847486767587027 0.6794910113910885 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6685645433247275 0.3941150972803078 0.9964621590453644 0.8152754113614005 0.9999785971566062 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152508824295 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9905705591869308


ris (2 : 2): [ -1 0.9905705591869308 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35325 interne); stringhe deallocate: 0 (35245 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617502e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9905705591869308


ris (2 : 2): [ -1 0.9905705591869308 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35345 interne); stringhe deallocate: 0 (35265 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4336815545616057


ris (2 : 2): [ 1 0.4336815545616057 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35365 interne); stringhe deallocate: 0 (35285 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9905705540604197 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152499368659558


ris (2 : 2): [ -1 0.8152499368659558 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35385 interne); stringhe deallocate: 0 (35305 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4336814924690415 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6800780875615302


ris (2 : 2): [ 1 0.6800780875615302 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35405 interne); stringhe deallocate: 0 (35325 interne)


Stringhe allocate: 1 (35405 interne); stringhe deallocate: 0 (35330 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.009429440813069179 0.009429440813069179 0.4336815545616057 0.1847500631340442 0.6800780875615302 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6685901090476391 0.3941639978802979 0.9965740689927604 0.8152781047819029 0.9999788359801856 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152508824295603 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9908716808573385


ris (2 : 2): [ -1 0.9908716808573385 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35440 interne); stringhe deallocate: 0 (35360 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892620272e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9908716808573385


ris (2 : 2): [ -1 0.9908716808573385 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35460 interne); stringhe deallocate: 0 (35380 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4320658091807157


ris (2 : 2): [ 1 0.4320658091807157 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35480 interne); stringhe deallocate: 0 (35400 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9908714383071837 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152512479740647


ris (2 : 2): [ -1 0.8152512479740647 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35500 interne); stringhe deallocate: 0 (35420 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4320657297587065 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.679494160610236


ris (2 : 2): [ 1 0.679494160610236 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35520 interne); stringhe deallocate: 0 (35440 interne)


Stringhe allocate: 1 (35520 interne); stringhe deallocate: 0 (35445 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.009128319142661545 0.009128319142661545 0.4320658091807157 0.1847487520259353 0.679494160610236 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6685647940887334 0.3941155769872729 0.9964625523053978 0.8152755575891026 0.9999785984448757 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152499287551818 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9908716808573385


ris (2 : 2): [ -1 0.9908716808573385 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35555 interne); stringhe deallocate: 0 (35475 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618805e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9908716808573385


ris (2 : 2): [ -1 0.9908716808573385 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35575 interne); stringhe deallocate: 0 (35495 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4320658091807157


ris (2 : 2): [ 1 0.4320658091807157 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35595 interne); stringhe deallocate: 0 (35515 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9908714383075932 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152512479740647


ris (2 : 2): [ -1 0.8152512479740647 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35615 interne); stringhe deallocate: 0 (35535 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4320657297584685 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.679494160610236


ris (2 : 2): [ 1 0.679494160610236 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35635 interne); stringhe deallocate: 0 (35555 interne)


Stringhe allocate: 1 (35635 interne); stringhe deallocate: 0 (35560 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.009128319142661545 0.009128319142661545 0.4320658091807157 0.1847487520259353 0.679494160610236 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6685647940887334 0.3941155769872729 0.9964625523053978 0.8152755575891026 0.9999785984448757 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152508824299076 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9910166013746171


ris (2 : 2): [ -1 0.9910166013746171 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35670 interne); stringhe deallocate: 0 (35590 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617894e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9910166013746171


ris (2 : 2): [ -1 0.9910166013746171 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35690 interne); stringhe deallocate: 0 (35610 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4312748225346367


ris (2 : 2): [ 1 0.4312748225346367 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35710 interne); stringhe deallocate: 0 (35630 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9910163968041124 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152518495716434


ris (2 : 2): [ -1 0.8152518495716434 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35730 interne); stringhe deallocate: 0 (35650 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4312746569130233 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6792097705132696


ris (2 : 2): [ 1 0.6792097705132696 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35750 interne); stringhe deallocate: 0 (35670 interne)


Stringhe allocate: 1 (35750 interne); stringhe deallocate: 0 (35675 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.008983398625382888 0.008983398625382888 0.4312748225346367 0.1847481504283566 0.6792097705132696 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6685526631962409 0.3940923694353239 0.9964066542146519 0.8152743888167354 0.9999784817945334 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152508824303331 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9910832055553753


ris (2 : 2): [ -1 0.9910832055553753 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35785 interne); stringhe deallocate: 0 (35705 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892621764e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9910832055553753


ris (2 : 2): [ -1 0.9910832055553753 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35805 interne); stringhe deallocate: 0 (35725 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4308973321551217


ris (2 : 2): [ 1 0.4308973321551217 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35825 interne); stringhe deallocate: 0 (35745 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9910831540055209 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152521010820522


ris (2 : 2): [ -1 0.8152521010820522 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35845 interne); stringhe deallocate: 0 (35765 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4308972403022908 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6790755453959881


ris (2 : 2): [ 1 0.6790755453959881 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35865 interne); stringhe deallocate: 0 (35785 interne)


Stringhe allocate: 1 (35865 interne); stringhe deallocate: 0 (35790 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.008916794444624676 0.008916794444624676 0.4308973321551217 0.1847478989179479 0.6790755453959881 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6685470993324166 0.3940817242928961 0.9963796695365876 0.8152739001868118 0.9999784265178189 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152518361039096 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9913736374485449


ris (2 : 2): [ -1 0.9913736374485449 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35900 interne); stringhe deallocate: 0 (35820 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622814e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9913736374485449


ris (2 : 2): [ -1 0.9913736374485449 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35920 interne); stringhe deallocate: 0 (35840 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4292496070386934


ris (2 : 2): [ 1 0.4292496070386934 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35940 interne); stringhe deallocate: 0 (35860 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9913735478348098 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152532182915767


ris (2 : 2): [ -1 0.8152532182915767 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35960 interne); stringhe deallocate: 0 (35880 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4292495295021226 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6784898146274135


ris (2 : 2): [ 1 0.6784898146274135 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35980 interne); stringhe deallocate: 0 (35900 interne)


Stringhe allocate: 1 (35980 interne); stringhe deallocate: 0 (35905 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.008626362551455102 0.008626362551455102 0.4292496070386934 0.1847467817084233 0.6784898146274135 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6685229212838325 0.3940354583948773 0.9962595109831551 0.8152717296901973 0.9999781836351622 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152518361038528 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9914140136622295


ris (2 : 2): [ -1 0.9914140136622295 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36015 interne); stringhe deallocate: 0 (35935 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892638181e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9914140136622295


ris (2 : 2): [ -1 0.9914140136622295 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36035 interne); stringhe deallocate: 0 (35955 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4290213858614041


ris (2 : 2): [ 1 0.4290213858614041 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36055 interne); stringhe deallocate: 0 (35975 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9914136021562934 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152533918126991


ris (2 : 2): [ -1 0.8152533918126991 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36075 interne); stringhe deallocate: 0 (35995 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4290213629221586 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6784086161753767


ris (2 : 2): [ 1 0.6784086161753767 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36095 interne); stringhe deallocate: 0 (36015 interne)


Stringhe allocate: 1 (36095 interne); stringhe deallocate: 0 (36020 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.008585986337770524 0.008585986337770524 0.4290213858614041 0.1847466081873009 0.6784086161753767 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.668519570754969 0.3940290461040495 0.9962425594509281 0.8152713925758812 0.999978149749825 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152527897783637 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9911506800407904


ris (2 : 2): [ -1 0.9911506800407904 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36130 interne); stringhe deallocate: 0 (36050 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616983e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9911506800407904


ris (2 : 2): [ -1 0.9911506800407904 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36150 interne); stringhe deallocate: 0 (36070 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4305166694721499


ris (2 : 2): [ 1 0.4305166694721499 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36170 interne); stringhe deallocate: 0 (36090 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9911503880448622 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152523557904567


ris (2 : 2): [ -1 0.8152523557904567 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36190 interne); stringhe deallocate: 0 (36110 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4305164858314665 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6789400000957909


ris (2 : 2): [ 1 0.6789400000957909 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36210 interne); stringhe deallocate: 0 (36130 interne)


Stringhe allocate: 1 (36210 interne); stringhe deallocate: 0 (36135 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.008849319959209567 0.008849319959209567 0.4305166694721499 0.1847476442095433 0.6789400000957909 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6685414700656385 0.3940709534137191 0.9963522546274289 0.8152734053437161 0.9999783705533393 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152532666154189 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9914112837204747


ris (2 : 2): [ -1 0.9914112837204747 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36245 interne); stringhe deallocate: 0 (36165 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617843e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9914112837204747


ris (2 : 2): [ -1 0.9914112837204747 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36265 interne); stringhe deallocate: 0 (36185 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4290265823257505


ris (2 : 2): [ 1 0.4290265823257505 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36285 interne); stringhe deallocate: 0 (36205 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9914112179703354 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152533355660815


ris (2 : 2): [ -1 0.8152533355660815 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36305 interne); stringhe deallocate: 0 (36225 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4290263697120955 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6784114785228222


ris (2 : 2): [ 1 0.6784114785228222 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36325 interne); stringhe deallocate: 0 (36245 interne)


Stringhe allocate: 1 (36325 interne); stringhe deallocate: 0 (36250 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.008588716279525288 0.008588716279525288 0.4290265823257505 0.1847466644339185 0.6784114785228222 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6685197972105925 0.3940294795049333 0.9962429462733976 0.8152715018510012 0.99997815094522 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152523129410385 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9914112837204747


ris (2 : 2): [ -1 0.9914112837204747 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36360 interne); stringhe deallocate: 0 (36280 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616958e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9914112837204747


ris (2 : 2): [ -1 0.9914112837204747 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36380 interne); stringhe deallocate: 0 (36300 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4290265823257505


ris (2 : 2): [ 1 0.4290265823257505 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36400 interne); stringhe deallocate: 0 (36320 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9914112179706072 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152533355660815


ris (2 : 2): [ -1 0.8152533355660815 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36420 interne); stringhe deallocate: 0 (36340 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4290263697120809 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6784114785228222


ris (2 : 2): [ 1 0.6784114785228222 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36440 interne); stringhe deallocate: 0 (36360 interne)


Stringhe allocate: 1 (36440 interne); stringhe deallocate: 0 (36365 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.008588716279525288 0.008588716279525288 0.4290265823257505 0.1847466644339185 0.6784114785228222 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6685197972105925 0.3940294795049333 0.9962429462733976 0.8152715018510012 0.99997815094522 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152532666156267 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9915365248466553


ris (2 : 2): [ -1 0.9915365248466553 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36475 interne); stringhe deallocate: 0 (36395 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622789e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9915365248466553


ris (2 : 2): [ -1 0.9915365248466553 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36495 interne); stringhe deallocate: 0 (36415 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4282971469736395


ris (2 : 2): [ 1 0.4282971469736395 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36515 interne); stringhe deallocate: 0 (36435 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9915361493061301 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152537851327655


ris (2 : 2): [ -1 0.8152537851327655 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36535 interne); stringhe deallocate: 0 (36455 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4282970472786118 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6781540897526669


ris (2 : 2): [ 1 0.6781540897526669 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36555 interne); stringhe deallocate: 0 (36475 interne)


Stringhe allocate: 1 (36555 interne); stringhe deallocate: 0 (36480 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.008463475153344668 0.008463475153344668 0.4282971469736395 0.1847462148672345 0.6781540897526669 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6685094204331877 0.3940096189484484 0.9961882594843682 0.8152706284390876 0.9999780431907089 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152532666157004 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9915938985260289


ris (2 : 2): [ -1 0.9915938985260289 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36590 interne); stringhe deallocate: 0 (36510 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892628847e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9915938985260289


ris (2 : 2): [ -1 0.9915938985260289 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36610 interne); stringhe deallocate: 0 (36530 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4279490674622197


ris (2 : 2): [ 1 0.4279490674622197 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36630 interne); stringhe deallocate: 0 (36550 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9915938466033518 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152539730834258


ris (2 : 2): [ -1 0.8152539730834258 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36650 interne); stringhe deallocate: 0 (36570 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4279489561533598 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6780326262290474


ris (2 : 2): [ 1 0.6780326262290474 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36670 interne); stringhe deallocate: 0 (36590 interne)


Stringhe allocate: 1 (36670 interne); stringhe deallocate: 0 (36595 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.008406101473971139 0.008406101473971139 0.4279490674622197 0.1847460269165742 0.6780326262290474 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6685046751567241 0.394000536068198 0.9961618861425042 0.8152702632910021 0.9999779921562315 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152537434539378 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9918440613549927


ris (2 : 2): [ -1 0.9918440613549927 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36705 interne); stringhe deallocate: 0 (36625 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618311e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9918440613549927


ris (2 : 2): [ -1 0.9918440613549927 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36725 interne); stringhe deallocate: 0 (36645 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.426429724133845


ris (2 : 2): [ 1 0.426429724133845 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36745 interne); stringhe deallocate: 0 (36665 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9918437092727617 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152548079605756


ris (2 : 2): [ -1 0.8152548079605756 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36765 interne); stringhe deallocate: 0 (36685 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4264295145485075 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6775025868442672


ris (2 : 2): [ 1 0.6775025868442672 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36785 interne); stringhe deallocate: 0 (36705 interne)


Stringhe allocate: 1 (36785 interne); stringhe deallocate: 0 (36710 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.008155938645007299 0.008155938645007299 0.426429724133845 0.1847451920394244 0.6775025868442672 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6684840460303773 0.3939610450168734 0.9960446349952553 0.8152686413015122 0.9999777680615812 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152537434524492 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9918788510005445


ris (2 : 2): [ -1 0.9918788510005445 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36820 interne); stringhe deallocate: 0 (36740 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617502e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9918788510005445


ris (2 : 2): [ -1 0.9918788510005445 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36840 interne); stringhe deallocate: 0 (36760 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4262192843593683


ris (2 : 2): [ 1 0.4262192843593683 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36860 interne); stringhe deallocate: 0 (36780 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9918785183853709 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152549376308855


ris (2 : 2): [ -1 0.8152549376308855 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36880 interne); stringhe deallocate: 0 (36800 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4262192293617537 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6774291086327292


ris (2 : 2): [ 1 0.6774291086327292 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36900 interne); stringhe deallocate: 0 (36820 interne)


Stringhe allocate: 1 (36900 interne); stringhe deallocate: 0 (36825 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.008121148999455485 0.008121148999455485 0.4262192843593683 0.1847450623691145 0.6774291086327292 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6684811850740341 0.3939555675362352 0.9960281175089287 0.8152683893794039 0.9999777368162776 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.815254697126826 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9916520456772693


ris (2 : 2): [ -1 0.9916520456772693 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36935 interne); stringhe deallocate: 0 (36855 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892620272e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9916520456772693


ris (2 : 2): [ -1 0.9916520456772693 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36955 interne); stringhe deallocate: 0 (36875 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.427598057724608


ris (2 : 2): [ 1 0.427598057724608 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36975 interne); stringhe deallocate: 0 (36895 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9916520207351622 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152541634239058


ris (2 : 2): [ -1 0.8152541634239058 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36995 interne); stringhe deallocate: 0 (36915 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4275980040046834 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6779099655105186


ris (2 : 2): [ 1 0.6779099655105186 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37015 interne); stringhe deallocate: 0 (36935 interne)


Stringhe allocate: 1 (37015 interne); stringhe deallocate: 0 (36940 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.008347954322730722 0.008347954322730722 0.427598057724608 0.1847458365760942 0.6779099655105186 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6684998712753618 0.3939913405689801 0.9961351076624294 0.8152698934999152 0.9999779404983681 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152546971267638 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9918763630206758


ris (2 : 2): [ -1 0.9918763630206758 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37050 interne); stringhe deallocate: 0 (36970 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618805e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9918763630206758


ris (2 : 2): [ -1 0.9918763630206758 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37070 interne); stringhe deallocate: 0 (36990 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4262240978355135


ris (2 : 2): [ 1 0.4262240978355135 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37090 interne); stringhe deallocate: 0 (37010 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9918761341999272 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152548955983043


ris (2 : 2): [ -1 0.8152548955983043 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37110 interne); stringhe deallocate: 0 (37030 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4262239977333238 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.677431709508331


ris (2 : 2): [ 1 0.677431709508331 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37130 interne); stringhe deallocate: 0 (37050 interne)


Stringhe allocate: 1 (37130 interne); stringhe deallocate: 0 (37055 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.008123636979324167 0.008123636979324167 0.4262240978355135 0.1847451044016957 0.677431709508331 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6684813896113022 0.3939559591409712 0.9960284960828094 0.8152684710398632 0.9999777379230029 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152537434528568 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9918763630206758


ris (2 : 2): [ -1 0.9918763630206758 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37165 interne); stringhe deallocate: 0 (37085 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617894e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9918763630206758


ris (2 : 2): [ -1 0.9918763630206758 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37185 interne); stringhe deallocate: 0 (37105 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4262240978355135


ris (2 : 2): [ 1 0.4262240978355135 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37205 interne); stringhe deallocate: 0 (37125 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9918761342003526 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152548955983043


ris (2 : 2): [ -1 0.8152548955983043 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37225 interne); stringhe deallocate: 0 (37145 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.42622399773356 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.677431709508331


ris (2 : 2): [ 1 0.677431709508331 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37245 interne); stringhe deallocate: 0 (37165 interne)


Stringhe allocate: 1 (37245 interne); stringhe deallocate: 0 (37170 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.008123636979324167 0.008123636979324167 0.4262240978355135 0.1847451044016957 0.677431709508331 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6684813896113022 0.3939559591409712 0.9960284960828094 0.8152684710398632 0.9999777379230029 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152546971275987 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9919839901190208


ris (2 : 2): [ -1 0.9919839901190208 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37280 interne); stringhe deallocate: 0 (37200 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892621764e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9919839901190208


ris (2 : 2): [ -1 0.9919839901190208 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37300 interne); stringhe deallocate: 0 (37220 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4255515415604661


ris (2 : 2): [ 1 0.4255515415604661 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37320 interne); stringhe deallocate: 0 (37240 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9919838993973666 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152552315539646


ris (2 : 2): [ -1 0.8152552315539646 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37340 interne); stringhe deallocate: 0 (37260 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4255514189216765 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6771988156495342


ris (2 : 2): [ 1 0.6771988156495342 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37360 interne); stringhe deallocate: 0 (37280 interne)


Stringhe allocate: 1 (37360 interne); stringhe deallocate: 0 (37285 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.008016009880979169 0.008016009880979169 0.4255515415604661 0.1847447684460354 0.6771988156495342 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.668472550556515 0.3939390352433775 0.9959752524119715 0.8152678183485935 0.9999776386035286 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152546971268588 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9920331125105242


ris (2 : 2): [ -1 0.9920331125105242 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37395 interne); stringhe deallocate: 0 (37315 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622814e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9920331125105242


ris (2 : 2): [ -1 0.9920331125105242 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37415 interne); stringhe deallocate: 0 (37335 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4252306367415888


ris (2 : 2): [ 1 0.4252306367415888 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37435 interne); stringhe deallocate: 0 (37355 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9920330136246047 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152553720071487


ris (2 : 2): [ -1 0.8152553720071487 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37455 interne); stringhe deallocate: 0 (37375 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4252305075142195 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.677088927548429


ris (2 : 2): [ 1 0.677088927548429 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37475 interne); stringhe deallocate: 0 (37395 interne)


Stringhe allocate: 1 (37475 interne); stringhe deallocate: 0 (37400 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.007966887489475827 0.007966887489475827 0.4252306367415888 0.1847446279928513 0.677088927548429 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6684685224083647 0.3939313221523535 0.9959495990377161 0.815267545477479 0.9999775915871326 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152551739639602 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9922472795873621


ris (2 : 2): [ -1 0.9922472795873621 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37510 interne); stringhe deallocate: 0 (37430 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892638181e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9922472795873621


ris (2 : 2): [ -1 0.9922472795873621 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37530 interne); stringhe deallocate: 0 (37450 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4238299136887871


ris (2 : 2): [ 1 0.4238299136887871 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37550 interne); stringhe deallocate: 0 (37470 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9922471135088324 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152559959004853


ris (2 : 2): [ -1 0.8152559959004853 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37570 interne); stringhe deallocate: 0 (37490 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4238297983619832 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6766094030207492


ris (2 : 2): [ 1 0.6766094030207492 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37590 interne); stringhe deallocate: 0 (37510 interne)


Stringhe allocate: 1 (37590 interne); stringhe deallocate: 0 (37515 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.007752720412637859 0.007752720412637859 0.4238299136887871 0.1847440040995148 0.6766094030207492 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.668451004860952 0.3938977758937267 0.9958357147077181 0.8152663333828168 0.9999773852596703 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152551739641547 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9922770749876272


ris (2 : 2): [ -1 0.9922770749876272 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37625 interne); stringhe deallocate: 0 (37545 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616983e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9922770749876272


ris (2 : 2): [ -1 0.9922770749876272 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37645 interne); stringhe deallocate: 0 (37565 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4236359033830506


ris (2 : 2): [ 1 0.4236359033830506 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37665 interne); stringhe deallocate: 0 (37585 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.992276677412538 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152560928015419


ris (2 : 2): [ -1 0.8152560928015419 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37685 interne); stringhe deallocate: 0 (37605 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4236357256385972 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6765429275035053


ris (2 : 2): [ 1 0.6765429275035053 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37705 interne); stringhe deallocate: 0 (37625 interne)


Stringhe allocate: 1 (37705 interne); stringhe deallocate: 0 (37630 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.007722925012372817 0.007722925012372817 0.4236359033830506 0.1847439071984581 0.6765429275035053 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6684485735249115 0.3938931193885844 0.9958196928951253 0.8152661451241809 0.9999773565073842 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152556508012099 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9920829205011661


ris (2 : 2): [ -1 0.9920829205011661 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37740 interne); stringhe deallocate: 0 (37660 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617843e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9920829205011661


ris (2 : 2): [ -1 0.9920829205011661 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37760 interne); stringhe deallocate: 0 (37680 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4249070258888819


ris (2 : 2): [ 1 0.4249070258888819 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37780 interne); stringhe deallocate: 0 (37700 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9920826046890854 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152555142462131


ris (2 : 2): [ -1 0.8152555142462131 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37800 interne); stringhe deallocate: 0 (37720 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.424906973502603 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6769779540342173


ris (2 : 2): [ 1 0.6769779540342173 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37820 interne); stringhe deallocate: 0 (37740 interne)


Stringhe allocate: 1 (37820 interne); stringhe deallocate: 0 (37745 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.007917079498833912 0.007917079498833912 0.4249070258888819 0.1847444857537869 0.6769779540342173 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6684644419445867 0.3939235085643745 0.9959235653313315 0.8152672691367223 0.9999775440060194 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152556508011459 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9922748106884641


ris (2 : 2): [ -1 0.9922748106884641 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37855 interne); stringhe deallocate: 0 (37775 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616958e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9922748106884641


ris (2 : 2): [ -1 0.9922748106884641 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37875 interne); stringhe deallocate: 0 (37795 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4236403607518362


ris (2 : 2): [ 1 0.4236403607518362 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37895 interne); stringhe deallocate: 0 (37815 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.992274770064113 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152560613910231


ris (2 : 2): [ -1 0.8152560613910231 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37915 interne); stringhe deallocate: 0 (37835 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4236402555915984 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6765452902235473


ris (2 : 2): [ 1 0.6765452902235473 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37935 interne); stringhe deallocate: 0 (37855 interne)


Stringhe allocate: 1 (37935 interne); stringhe deallocate: 0 (37860 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.007725189311535874 0.007725189311535874 0.4236403607518362 0.1847439386089769 0.6765452902235473 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6684487582449209 0.3938934731692045 0.9958200616789683 0.8152662061483005 0.9999773575299444 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152551739642595 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9922748106884641


ris (2 : 2): [ -1 0.9922748106884641 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37970 interne); stringhe deallocate: 0 (37890 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622789e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9922748106884641


ris (2 : 2): [ -1 0.9922748106884641 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37990 interne); stringhe deallocate: 0 (37910 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4236403607518362


ris (2 : 2): [ 1 0.4236403607518362 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38010 interne); stringhe deallocate: 0 (37930 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9922747700641867 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152560613910231


ris (2 : 2): [ -1 0.8152560613910231 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38030 interne); stringhe deallocate: 0 (37950 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4236402555916121 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6765452902235473


ris (2 : 2): [ 1 0.6765452902235473 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38050 interne); stringhe deallocate: 0 (37970 interne)


Stringhe allocate: 1 (38050 interne); stringhe deallocate: 0 (37975 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.007725189311535874 0.007725189311535874 0.4236403607518362 0.1847439386089769 0.6765452902235473 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6684487582449209 0.3938934731692045 0.9958200616789683 0.8152662061483005 0.9999773575299444 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152556508014914 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9923667068467286


ris (2 : 2): [ -1 0.9923667068467286 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38085 interne); stringhe deallocate: 0 (38005 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892628847e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9923667068467286


ris (2 : 2): [ -1 0.9923667068467286 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38105 interne); stringhe deallocate: 0 (38025 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4230203542464652


ris (2 : 2): [ 1 0.4230203542464652 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38125 interne); stringhe deallocate: 0 (38045 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9923663227996409 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152563124464761


ris (2 : 2): [ -1 0.8152563124464761 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38145 interne); stringhe deallocate: 0 (38065 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4230201288673543 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6763346125497806


ris (2 : 2): [ 1 0.6763346125497806 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38165 interne); stringhe deallocate: 0 (38085 interne)


Stringhe allocate: 1 (38165 interne); stringhe deallocate: 0 (38090 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.007633293153271437 0.007633293153271437 0.4230203542464652 0.1847436875535239 0.6763346125497806 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6684412679120886 0.393879126949483 0.9957684543098964 0.8152657183995851 0.9999772661691165 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152556508025706 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9924084702148891


ris (2 : 2): [ -1 0.9924084702148891 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38200 interne); stringhe deallocate: 0 (38120 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618311e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9924084702148891


ris (2 : 2): [ -1 0.9924084702148891 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38220 interne); stringhe deallocate: 0 (38140 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4227245525629562


ris (2 : 2): [ 1 0.4227245525629562 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38240 interne); stringhe deallocate: 0 (38160 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9924082844680742 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152564174053598


ris (2 : 2): [ -1 0.8152564174053598 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38260 interne); stringhe deallocate: 0 (38180 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.422724489829271 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6762352216812366


ris (2 : 2): [ 1 0.6762352216812366 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38280 interne); stringhe deallocate: 0 (38200 interne)


Stringhe allocate: 1 (38280 interne); stringhe deallocate: 0 (38205 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.007591529785110907 0.007591529785110907 0.4227245525629562 0.1847435825946402 0.6762352216812366 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6684378682333436 0.3938726151876538 0.9957436109215923 0.815265514486179 0.9999772229401778 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152561276382402 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9925905352392781


ris (2 : 2): [ -1 0.9925905352392781 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38315 interne); stringhe deallocate: 0 (38235 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617502e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9925905352392781


ris (2 : 2): [ -1 0.9925905352392781 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38335 interne); stringhe deallocate: 0 (38255 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4214334068818189


ris (2 : 2): [ 1 0.4214334068818189 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38355 interne); stringhe deallocate: 0 (38275 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9925904362625682 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152568836329716


ris (2 : 2): [ -1 0.8152568836329716 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38375 interne); stringhe deallocate: 0 (38295 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4214332148050932 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6758015067018404


ris (2 : 2): [ 1 0.6758015067018404 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38395 interne); stringhe deallocate: 0 (38315 interne)


Stringhe allocate: 1 (38395 interne); stringhe deallocate: 0 (38320 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.007409464760721907 0.007409464760721907 0.4214334068818189 0.1847431163670285 0.6758015067018404 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6684230795672774 0.3938442862531023 0.9956334704575997 0.8152646087020063 0.9999770333367839 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152561276383006 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9926158760978063


ris (2 : 2): [ -1 0.9926158760978063 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38430 interne); stringhe deallocate: 0 (38350 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892620272e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9926158760978063


ris (2 : 2): [ -1 0.9926158760978063 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38450 interne); stringhe deallocate: 0 (38370 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4212545736047683


ris (2 : 2): [ 1 0.4212545736047683 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38470 interne); stringhe deallocate: 0 (38390 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9926157086318908 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152569560459314


ris (2 : 2): [ -1 0.8152569560459314 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38490 interne); stringhe deallocate: 0 (38410 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.421254400870529 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.675741381625404


ris (2 : 2): [ 1 0.675741381625404 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38510 interne); stringhe deallocate: 0 (38430 interne)


Stringhe allocate: 1 (38510 interne); stringhe deallocate: 0 (38435 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.007384123902193673 0.007384123902193673 0.4212545736047683 0.1847430439540686 0.675741381625404 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6684210253213908 0.3938403508309044 0.9956179944084094 0.8152644680184984 0.9999770069281723 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152566044753966 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9924508395366855


ris (2 : 2): [ -1 0.9924508395366855 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38545 interne); stringhe deallocate: 0 (38465 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618805e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9924508395366855


ris (2 : 2): [ -1 0.9924508395366855 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38565 interne); stringhe deallocate: 0 (38485 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4224262524015175


ris (2 : 2): [ 1 0.4224262524015175 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38585 interne); stringhe deallocate: 0 (38505 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9924507229755619 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152565236988081


ris (2 : 2): [ -1 0.8152565236988081 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38605 interne); stringhe deallocate: 0 (38525 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.422426228186827 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6761348469657388


ris (2 : 2): [ 1 0.6761348469657388 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38625 interne); stringhe deallocate: 0 (38545 interne)


Stringhe allocate: 1 (38625 interne); stringhe deallocate: 0 (38550 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.007549160463314553 0.007549160463314553 0.4224262524015175 0.1847434763011919 0.6761348469657388 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6684344220330097 0.3938660140860201 0.9957184114641372 0.8152653079799616 0.9999771791999083 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152566044758061 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9926138184702703


ris (2 : 2): [ -1 0.9926138184702703 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38660 interne); stringhe deallocate: 0 (38580 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617894e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9926138184702703


ris (2 : 2): [ -1 0.9926138184702703 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38680 interne); stringhe deallocate: 0 (38600 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4212587000995425


ris (2 : 2): [ 1 0.4212587000995425 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38700 interne); stringhe deallocate: 0 (38620 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9926138012840928 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152569325731959


ris (2 : 2): [ -1 0.8152569325731959 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38720 interne); stringhe deallocate: 0 (38640 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.421258692404952 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6757435275522844


ris (2 : 2): [ 1 0.6757435275522844 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38740 interne); stringhe deallocate: 0 (38660 interne)


Stringhe allocate: 1 (38740 interne); stringhe deallocate: 0 (38665 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.007386181529729696 0.007386181529729696 0.4212587000995425 0.1847430674268041 0.6757435275522844 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.66842119208453 0.3938406703105495 0.9956183521221987 0.8152645136212039 0.9999770078712456 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152561276390733 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9926138184702703


ris (2 : 2): [ -1 0.9926138184702703 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38775 interne); stringhe deallocate: 0 (38695 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892621764e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9926138184702703


ris (2 : 2): [ -1 0.9926138184702703 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38795 interne); stringhe deallocate: 0 (38715 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4212587000995425


ris (2 : 2): [ 1 0.4212587000995425 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38815 interne); stringhe deallocate: 0 (38735 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.992613801283353 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152569325731959


ris (2 : 2): [ -1 0.8152569325731959 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38835 interne); stringhe deallocate: 0 (38755 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4212586924049546 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6757435275522844


ris (2 : 2): [ 1 0.6757435275522844 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38855 interne); stringhe deallocate: 0 (38775 interne)


Stringhe allocate: 1 (38855 interne); stringhe deallocate: 0 (38780 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.007386181529729696 0.007386181529729696 0.4212587000995425 0.1847430674268041 0.6757435275522844 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.66842119208453 0.3938406703105495 0.9956183521221987 0.8152645136212039 0.9999770078712456 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152566044754916 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9926916987390377


ris (2 : 2): [ -1 0.9926916987390377 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38890 interne); stringhe deallocate: 0 (38810 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622814e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9926916987390377


ris (2 : 2): [ -1 0.9926916987390377 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38910 interne); stringhe deallocate: 0 (38830 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4206872333608321


ris (2 : 2): [ 1 0.4206872333608321 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38930 interne); stringhe deallocate: 0 (38850 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9926915257400832 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152571201837409


ris (2 : 2): [ -1 0.8152571201837409 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38950 interne); stringhe deallocate: 0 (38870 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4206872030710844 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6755529950370102


ris (2 : 2): [ 1 0.6755529950370102 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38970 interne); stringhe deallocate: 0 (38890 interne)


Stringhe allocate: 1 (38970 interne); stringhe deallocate: 0 (38895 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.007308301260962269 0.007308301260962269 0.4206872333608321 0.1847428798162591 0.6755529950370102 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6684148848019192 0.3938285866314875 0.9955685371790117 0.8152641491323983 0.9999769239867543 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152566044754348 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9927269151492426


ris (2 : 2): [ -1 0.9927269151492426 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39005 interne); stringhe deallocate: 0 (38925 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892638181e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9927269151492426


ris (2 : 2): [ -1 0.9927269151492426 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39025 interne); stringhe deallocate: 0 (38945 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4204146164486824


ris (2 : 2): [ 1 0.4204146164486824 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39045 interne); stringhe deallocate: 0 (38965 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9927268116899848 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152571986181679


ris (2 : 2): [ -1 0.8152571986181679 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39065 interne); stringhe deallocate: 0 (38985 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4204144522163542 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6754631216638223


ris (2 : 2): [ 1 0.6754631216638223 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39085 interne); stringhe deallocate: 0 (39005 interne)


Stringhe allocate: 1 (39085 interne); stringhe deallocate: 0 (39010 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.007273084850757394 0.007273084850757394 0.4204146164486824 0.1847428013818321 0.6754631216638223 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6684120358518806 0.3938231282704781 0.9955445760149582 0.815263996750369 0.9999768843126502 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152570813127875 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9928804216979187


ris (2 : 2): [ -1 0.9928804216979187 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39120 interne); stringhe deallocate: 0 (39040 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616983e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9928804216979187


ris (2 : 2): [ -1 0.9928804216979187 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39140 interne); stringhe deallocate: 0 (39060 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.419224673974807


ris (2 : 2): [ 1 0.419224673974807 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39160 interne); stringhe deallocate: 0 (39080 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9928803532548232 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152575470240969


ris (2 : 2): [ -1 0.8152575470240969 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39180 interne); stringhe deallocate: 0 (39100 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4192245050880721 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6750709405682189


ris (2 : 2): [ 1 0.6750709405682189 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39200 interne); stringhe deallocate: 0 (39120 interne)


Stringhe allocate: 1 (39200 interne); stringhe deallocate: 0 (39125 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.00711957830208132 0.00711957830208132 0.419224673974807 0.1847424529759031 0.6750709405682189 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683996400668989 0.3937993770626139 0.9954384783221696 0.8152633198688104 0.9999767103867532 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152570813126845 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9929017991953776


ris (2 : 2): [ -1 0.9929017991953776 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39235 interne); stringhe deallocate: 0 (39155 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617843e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9929017991953776


ris (2 : 2): [ -1 0.9929017991953776 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39255 interne); stringhe deallocate: 0 (39175 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4190598578851811


ris (2 : 2): [ 1 0.4190598578851811 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39275 interne); stringhe deallocate: 0 (39195 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9929013340897201 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152576011373885


ris (2 : 2): [ -1 0.8152576011373885 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39295 interne); stringhe deallocate: 0 (39215 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4190597578498982 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6750165732191394


ris (2 : 2): [ 1 0.6750165732191394 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39315 interne); stringhe deallocate: 0 (39235 interne)


Stringhe allocate: 1 (39315 interne); stringhe deallocate: 0 (39240 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.007098200804622423 0.007098200804622423 0.4190598578851811 0.1847423988626115 0.6750165732191394 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683979167340415 0.3937960747925167 0.9954235872466343 0.8152632147377098 0.9999766861726744 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152570813126205 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9927626654251091


ris (2 : 2): [ -1 0.9927626654251091 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39350 interne); stringhe deallocate: 0 (39270 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616958e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9927626654251091


ris (2 : 2): [ -1 0.9927626654251091 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39370 interne); stringhe deallocate: 0 (39290 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4201396931519024


ris (2 : 2): [ 1 0.4201396931519024 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39390 interne); stringhe deallocate: 0 (39310 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9927625744769548 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152572780498972


ris (2 : 2): [ -1 0.8152572780498972 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39410 interne); stringhe deallocate: 0 (39330 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4201395555946519 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6753723567031119


ris (2 : 2): [ 1 0.6753723567031119 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39430 interne); stringhe deallocate: 0 (39350 interne)


Stringhe allocate: 1 (39430 interne); stringhe deallocate: 0 (39355 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.007237334574890952 0.007237334574890952 0.4201396931519024 0.1847427219501028 0.6753723567031119 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6684091456975045 0.3938175908010011 0.9955202823020715 0.8152638424307697 0.9999768441757371 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152575581500505 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9928999323708061


ris (2 : 2): [ -1 0.9928999323708061 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39465 interne); stringhe deallocate: 0 (39385 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622789e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9928999323708061


ris (2 : 2): [ -1 0.9928999323708061 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39485 interne); stringhe deallocate: 0 (39405 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4190636771388063


ris (2 : 2): [ 1 0.4190636771388063 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39505 interne); stringhe deallocate: 0 (39425 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.992899903578591 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.815257583596485


ris (2 : 2): [ -1 0.815257583596485 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39525 interne); stringhe deallocate: 0 (39445 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4190635725474028 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6750185218937219


ris (2 : 2): [ 1 0.6750185218937219 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39545 interne); stringhe deallocate: 0 (39465 interne)


Stringhe allocate: 1 (39545 interne); stringhe deallocate: 0 (39470 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.007100067629193907 0.007100067629193907 0.4190636771388063 0.184742416403515 0.6750185218937219 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683980671984722 0.3937963631165281 0.9954239328585329 0.8152632488161122 0.9999766870410081 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.815257081312966 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9928999323708061


ris (2 : 2): [ -1 0.9928999323708061 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39580 interne); stringhe deallocate: 0 (39500 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892628847e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9928999323708061


ris (2 : 2): [ -1 0.9928999323708061 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39600 interne); stringhe deallocate: 0 (39520 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4190636771388063


ris (2 : 2): [ 1 0.4190636771388063 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39620 interne); stringhe deallocate: 0 (39540 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9928999035796702 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.815257583596485


ris (2 : 2): [ -1 0.815257583596485 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39640 interne); stringhe deallocate: 0 (39560 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4190635725471648 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6750185218937219


ris (2 : 2): [ 1 0.6750185218937219 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39660 interne); stringhe deallocate: 0 (39580 interne)


Stringhe allocate: 1 (39660 interne); stringhe deallocate: 0 (39585 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.007100067629193907 0.007100067629193907 0.4190636771388063 0.184742416403515 0.6750185218937219 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683980671984722 0.3937963631165281 0.9954239328585329 0.8152632488161122 0.9999766870410081 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152575581512034 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9929653567790923


ris (2 : 2): [ -1 0.9929653567790923 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39695 interne); stringhe deallocate: 0 (39615 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618311e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9929653567790923


ris (2 : 2): [ -1 0.9929653567790923 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39715 interne); stringhe deallocate: 0 (39635 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4185370371996346


ris (2 : 2): [ 1 0.4185370371996346 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39735 interne); stringhe deallocate: 0 (39655 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9929652302688554 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152577237954313


ris (2 : 2): [ -1 0.8152577237954313 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39755 interne); stringhe deallocate: 0 (39675 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4185369059059432 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6748462528286265


ris (2 : 2): [ 1 0.6748462528286265 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39775 interne); stringhe deallocate: 0 (39695 interne)


Stringhe allocate: 1 (39775 interne); stringhe deallocate: 0 (39700 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.007034643220907744 0.007034643220907744 0.4185370371996346 0.1847422762045687 0.6748462528286265 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683927972889181 0.3937862645051206 0.9953760316335597 0.8152629764380958 0.999976610152463 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152575581497148 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9929947642908025


ris (2 : 2): [ -1 0.9929947642908025 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39810 interne); stringhe deallocate: 0 (39730 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617502e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9929947642908025


ris (2 : 2): [ -1 0.9929947642908025 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39830 interne); stringhe deallocate: 0 (39750 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4182858291310146


ris (2 : 2): [ 1 0.4182858291310146 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39850 interne); stringhe deallocate: 0 (39770 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9929943173355662 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152577824084631


ris (2 : 2): [ -1 0.8152577824084631 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39870 interne); stringhe deallocate: 0 (39790 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4182856127235555 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6747650069160357


ris (2 : 2): [ 1 0.6747650069160357 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39890 interne); stringhe deallocate: 0 (39810 interne)


Stringhe allocate: 1 (39890 interne); stringhe deallocate: 0 (39815 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.007005235709197533 0.007005235709197533 0.4182858291310146 0.1847422175915369 0.6747650069160357 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683904306978888 0.3937817292791745 0.9953530082827624 0.8152628625648902 0.9999765738021788 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152575581497752 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9931229328743613


ris (2 : 2): [ -1 0.9931229328743613 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39925 interne); stringhe deallocate: 0 (39845 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892620272e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9931229328743613


ris (2 : 2): [ -1 0.9931229328743613 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39945 interne); stringhe deallocate: 0 (39865 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4171893374854129


ris (2 : 2): [ 1 0.4171893374854129 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39965 interne); stringhe deallocate: 0 (39885 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9931225865310607 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152580427677132


ris (2 : 2): [ -1 0.8152580427677132 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39985 interne); stringhe deallocate: 0 (39905 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4171891256782701 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6744104755036997


ris (2 : 2): [ 1 0.6744104755036997 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40005 interne); stringhe deallocate: 0 (39925 interne)


Stringhe allocate: 1 (40005 interne); stringhe deallocate: 0 (39930 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006877067125638736 0.006877067125638736 0.4171893374854129 0.1847419572322868 0.6744104755036997 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683801319457446 0.3937619919259169 0.9952511795317187 0.8152623567396905 0.9999764145188627 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.815257558149713 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9931407934250029


ris (2 : 2): [ -1 0.9931407934250029 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40040 interne); stringhe deallocate: 0 (39960 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618805e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9931407934250029


ris (2 : 2): [ -1 0.9931407934250029 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40060 interne); stringhe deallocate: 0 (39980 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4170374648461319


ris (2 : 2): [ 1 0.4170374648461319 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40080 interne); stringhe deallocate: 0 (40000 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9931407063434818 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152580832058843


ris (2 : 2): [ -1 0.8152580832058843 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40100 interne); stringhe deallocate: 0 (40020 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4170372530436186 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6743613274233998


ris (2 : 2): [ 1 0.6743613274233998 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40120 interne); stringhe deallocate: 0 (40040 interne)


Stringhe allocate: 1 (40120 interne); stringhe deallocate: 0 (40045 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006859206574997057 0.006859206574997057 0.4170374648461319 0.1847419167941157 0.6743613274233998 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683786988202186 0.3937592452017115 0.995236902569856 0.8152622781765129 0.9999763923523898 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152580349872807 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9930246405229115


ris (2 : 2): [ -1 0.9930246405229115 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40155 interne); stringhe deallocate: 0 (40075 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617894e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9930246405229115


ris (2 : 2): [ -1 0.9930246405229115 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40175 interne); stringhe deallocate: 0 (40095 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4180324924094463


ris (2 : 2): [ 1 0.4180324924094463 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40195 interne); stringhe deallocate: 0 (40115 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9930243580773057 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152578417667656


ris (2 : 2): [ -1 0.8152578417667656 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40215 interne); stringhe deallocate: 0 (40135 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4180324121925505 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6746829532012461


ris (2 : 2): [ 1 0.6746829532012461 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40235 interne); stringhe deallocate: 0 (40155 interne)


Stringhe allocate: 1 (40235 interne); stringhe deallocate: 0 (40160 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006975359477088494 0.006975359477088494 0.4180324924094463 0.1847421582332344 0.6746829532012461 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683880277646908 0.3937771242946725 0.995329675011249 0.8152627472437665 0.9999765370331433 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152580349877061 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.993139102570714


ris (2 : 2): [ -1 0.993139102570714 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40270 interne); stringhe deallocate: 0 (40190 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892621764e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.993139102570714


ris (2 : 2): [ -1 0.993139102570714 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40290 interne); stringhe deallocate: 0 (40210 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4170409989509822


ris (2 : 2): [ 1 0.4170409989509822 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40310 interne); stringhe deallocate: 0 (40230 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9931387989945346 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152580700977776


ris (2 : 2): [ -1 0.8152580700977776 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40330 interne); stringhe deallocate: 0 (40250 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4170408293220809 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6743630966964458


ris (2 : 2): [ 1 0.6743630966964458 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40350 interne); stringhe deallocate: 0 (40270 interne)


Stringhe allocate: 1 (40350 interne); stringhe deallocate: 0 (40275 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006860897429285973 0.006860897429285973 0.4170409989509822 0.1847419299022224 0.6743630966964458 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683788344726654 0.3937595051945529 0.9952372352792884 0.8152623036429102 0.9999763931507181 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152575581498081 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.993139102570714


ris (2 : 2): [ -1 0.993139102570714 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40385 interne); stringhe deallocate: 0 (40305 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622814e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.993139102570714


ris (2 : 2): [ -1 0.993139102570714 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40405 interne); stringhe deallocate: 0 (40325 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4170409989509822


ris (2 : 2): [ 1 0.4170409989509822 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40425 interne); stringhe deallocate: 0 (40345 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9931387989944778 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152580700977776


ris (2 : 2): [ -1 0.8152580700977776 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40445 interne); stringhe deallocate: 0 (40365 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4170408293220662 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6743630966964458


ris (2 : 2): [ 1 0.6743630966964458 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40465 interne); stringhe deallocate: 0 (40385 interne)


Stringhe allocate: 1 (40465 interne); stringhe deallocate: 0 (40390 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006860897429285973 0.006860897429285973 0.4170409989509822 0.1847419299022224 0.6743630966964458 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683788344726654 0.3937595051945529 0.9952372352792884 0.8152623036429102 0.9999763931507181 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152580349869094 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9931934880954522


ris (2 : 2): [ -1 0.9931934880954522 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40500 interne); stringhe deallocate: 0 (40420 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892638181e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9931934880954522


ris (2 : 2): [ -1 0.9931934880954522 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40520 interne); stringhe deallocate: 0 (40440 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4165557489380642


ris (2 : 2): [ 1 0.4165557489380642 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40540 interne); stringhe deallocate: 0 (40460 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9931931584307074 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152581748666313


ris (2 : 2): [ -1 0.8152581748666313 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40560 interne); stringhe deallocate: 0 (40480 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4165556475135972 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.674207381823974


ris (2 : 2): [ 1 0.674207381823974 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40580 interne); stringhe deallocate: 0 (40500 interne)


Stringhe allocate: 1 (40580 interne); stringhe deallocate: 0 (40505 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006806511904547841 0.006806511904547841 0.4165557489380642 0.1847418251333687 0.674207381823974 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683744734997124 0.3937511467259655 0.9951913369171076 0.815262100098228 0.9999763227858665 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152580349871039 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9932177564761725


ris (2 : 2): [ -1 0.9932177564761725 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40615 interne); stringhe deallocate: 0 (40535 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616983e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9932177564761725


ris (2 : 2): [ -1 0.9932177564761725 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40635 interne); stringhe deallocate: 0 (40555 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4163243061213856


ris (2 : 2): [ 1 0.4163243061213856 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40655 interne); stringhe deallocate: 0 (40575 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9932174771256728 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152582186673861


ris (2 : 2): [ -1 0.8152582186673861 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40675 interne); stringhe deallocate: 0 (40595 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4163241430735258 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6741339550190867


ris (2 : 2): [ 1 0.6741339550190867 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40695 interne); stringhe deallocate: 0 (40615 interne)


Stringhe allocate: 1 (40695 interne); stringhe deallocate: 0 (40620 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006782243523827503 0.006782243523827503 0.4163243061213856 0.1847417813326139 0.6741339550190867 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683725289888113 0.3937474196522575 0.9951692916541925 0.8152620150022165 0.9999762895328436 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152580349870009 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9933235095007622


ris (2 : 2): [ -1 0.9933235095007622 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40730 interne); stringhe deallocate: 0 (40650 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617843e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9933235095007622


ris (2 : 2): [ -1 0.9933235095007622 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40750 interne); stringhe deallocate: 0 (40670 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4153140906230888


ris (2 : 2): [ 1 0.4153140906230888 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40770 interne); stringhe deallocate: 0 (40690 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9933233349747299 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152584132304663


ris (2 : 2): [ -1 0.8152584132304663 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40790 interne); stringhe deallocate: 0 (40710 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4153139635536345 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6738135455556245


ris (2 : 2): [ 1 0.6738135455556245 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40810 interne); stringhe deallocate: 0 (40730 interne)


Stringhe allocate: 1 (40810 interne); stringhe deallocate: 0 (40735 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006676490499237797 0.006676490499237797 0.4153140906230888 0.1847415867695337 0.6738135455556245 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683640661486392 0.3937311979161285 0.9950718914793788 0.8152616370054275 0.9999761438806908 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152580349869369 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9933382582161799


ris (2 : 2): [ -1 0.9933382582161799 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40845 interne); stringhe deallocate: 0 (40765 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616958e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9933382582161799


ris (2 : 2): [ -1 0.9933382582161799 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40865 interne); stringhe deallocate: 0 (40785 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4151741677013001


ris (2 : 2): [ 1 0.4151741677013001 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40885 interne); stringhe deallocate: 0 (40805 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.993338116926906 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152584434493898


ris (2 : 2): [ -1 0.8152584434493898 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40905 interne); stringhe deallocate: 0 (40825 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4151740118477156 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6737691276942465


ris (2 : 2): [ 1 0.6737691276942465 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40925 interne); stringhe deallocate: 0 (40845 interne)


Stringhe allocate: 1 (40925 interne); stringhe deallocate: 0 (40850 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006661741783820063 0.006661741783820063 0.4151741677013001 0.1847415565506102 0.6737691276942465 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683628872644656 0.3937289380942458 0.9950582486062853 0.8152615782961509 0.9999761236186776 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152580349872087 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9932424348080766


ris (2 : 2): [ -1 0.9932424348080766 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40960 interne); stringhe deallocate: 0 (40880 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622789e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9932424348080766


ris (2 : 2): [ -1 0.9932424348080766 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40980 interne); stringhe deallocate: 0 (40900 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4160908990523334


ris (2 : 2): [ 1 0.4160908990523334 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41000 interne); stringhe deallocate: 0 (40920 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9932422726581809 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152582630250719


ris (2 : 2): [ -1 0.8152582630250719 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41020 interne); stringhe deallocate: 0 (40940 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4160907312843465 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6740597964848479


ris (2 : 2): [ 1 0.6740597964848479 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41040 interne); stringhe deallocate: 0 (40960 interne)


Stringhe allocate: 1 (41040 interne); stringhe deallocate: 0 (40965 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006757565191923387 0.006757565191923387 0.4160908990523334 0.1847417369749281 0.6740597964848479 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683705525665983 0.3937436313361541 0.9951469581000743 0.8152619288241959 0.9999762559010428 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152580349872824 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9933367294523926


ris (2 : 2): [ -1 0.9933367294523926 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41075 interne); stringhe deallocate: 0 (40995 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892628847e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9933367294523926


ris (2 : 2): [ -1 0.9933367294523926 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41095 interne); stringhe deallocate: 0 (41015 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4151774372776857


ris (2 : 2): [ 1 0.4151774372776857 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41115 interne); stringhe deallocate: 0 (41035 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9933366864165842 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152584336538631


ris (2 : 2): [ -1 0.8152584336538631 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41135 interne); stringhe deallocate: 0 (41055 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4151773497078111 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6737707338544396


ris (2 : 2): [ 1 0.6737707338544396 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41155 interne); stringhe deallocate: 0 (41075 interne)


Stringhe allocate: 1 (41155 interne); stringhe deallocate: 0 (41080 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006663270547607403 0.006663270547607403 0.4151774372776857 0.1847415663461369 0.6737707338544396 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683630094449319 0.3937291723052251 0.9950585678246176 0.8152615973268849 0.9999761243516565 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152580349883616 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9933367294523926


ris (2 : 2): [ -1 0.9933367294523926 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41190 interne); stringhe deallocate: 0 (41110 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618311e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9933367294523926


ris (2 : 2): [ -1 0.9933367294523926 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41210 interne); stringhe deallocate: 0 (41130 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4151774372776857


ris (2 : 2): [ 1 0.4151774372776857 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41230 interne); stringhe deallocate: 0 (41150 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9933366864150957 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152584336538631


ris (2 : 2): [ -1 0.8152584336538631 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41250 interne); stringhe deallocate: 0 (41170 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4151773497080473 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6737707338544396


ris (2 : 2): [ 1 0.6737707338544396 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41270 interne); stringhe deallocate: 0 (41190 interne)


Stringhe allocate: 1 (41270 interne); stringhe deallocate: 0 (41195 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006663270547607403 0.006663270547607403 0.4151774372776857 0.1847415663461369 0.6737707338544396 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683630094449319 0.3937291723052251 0.9950585678246176 0.8152615973268849 0.9999761243516565 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.815258034986873 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9933813610827013


ris (2 : 2): [ -1 0.9933813610827013 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41305 interne); stringhe deallocate: 0 (41225 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617502e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9933813610827013


ris (2 : 2): [ -1 0.9933813610827013 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41325 interne); stringhe deallocate: 0 (41245 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.414730396767148


ris (2 : 2): [ 1 0.414730396767148 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41345 interne); stringhe deallocate: 0 (41265 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9933810322708689 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.81525851194626


ris (2 : 2): [ -1 0.81525851194626 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41365 interne); stringhe deallocate: 0 (41285 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4147303148719939 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6736300209168543


ris (2 : 2): [ 1 0.6736300209168543 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41385 interne); stringhe deallocate: 0 (41305 interne)


Stringhe allocate: 1 (41385 interne); stringhe deallocate: 0 (41310 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006618638917298747 0.006618638917298747 0.414730396767148 0.18474148805374 0.6736300209168543 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683594439235892 0.3937223373395961 0.9950147322911439 0.8152614452205313 0.9999760600511992 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152580349869334 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.99340109710405


ris (2 : 2): [ -1 0.99340109710405 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41420 interne); stringhe deallocate: 0 (41340 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892620272e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.99340109710405


ris (2 : 2): [ -1 0.99340109710405 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41440 interne); stringhe deallocate: 0 (41360 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4145171984855103


ris (2 : 2): [ 1 0.4145171984855103 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41460 interne); stringhe deallocate: 0 (41380 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9934010594314513 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152585446779905


ris (2 : 2): [ -1 0.8152585446779905 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41480 interne); stringhe deallocate: 0 (41400 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4145171686622908 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6735636792084591


ris (2 : 2): [ 1 0.6735636792084591 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41500 interne); stringhe deallocate: 0 (41420 interne)


Stringhe allocate: 1 (41500 interne); stringhe deallocate: 0 (41425 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006598902895949999 0.006598902895949999 0.4145171984855103 0.1847414553220095 0.6735636792084591 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683578682385433 0.3937193167314296 0.9949936915349373 0.8152613816293688 0.9999760296755296 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152585118240294 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9934870820057062


ris (2 : 2): [ -1 0.9934870820057062 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41535 interne); stringhe deallocate: 0 (41455 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618805e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9934870820057062


ris (2 : 2): [ -1 0.9934870820057062 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41555 interne); stringhe deallocate: 0 (41475 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4135866208498213


ris (2 : 2): [ 1 0.4135866208498213 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41575 interne); stringhe deallocate: 0 (41495 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9934868901203373 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152586900724352


ris (2 : 2): [ -1 0.8152586900724352 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41595 interne); stringhe deallocate: 0 (41515 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4135866209480428 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6732741883955546


ris (2 : 2): [ 1 0.6732741883955546 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41615 interne); stringhe deallocate: 0 (41535 interne)


Stringhe allocate: 1 (41615 interne); stringhe deallocate: 0 (41540 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006512917994293765 0.006512917994293765 0.4135866208498213 0.1847413099275648 0.6732741883955546 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683510103913224 0.3937061695707755 0.9949008196823791 0.8152610991572025 0.9999758966756552 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152585118244389 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9934990859034328


ris (2 : 2): [ -1 0.9934990859034328 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41650 interne); stringhe deallocate: 0 (41570 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617894e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9934990859034328


ris (2 : 2): [ -1 0.9934990859034328 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41670 interne); stringhe deallocate: 0 (41590 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4134577282009429


ris (2 : 2): [ 1 0.4134577282009429 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41690 interne); stringhe deallocate: 0 (41610 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9934988110497178 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152587126546437


ris (2 : 2): [ -1 0.8152587126546437 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41710 interne); stringhe deallocate: 0 (41630 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4134576364967515 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6732340566755777


ris (2 : 2): [ 1 0.6732340566755777 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41730 interne); stringhe deallocate: 0 (41650 interne)


Stringhe allocate: 1 (41730 interne); stringhe deallocate: 0 (41655 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006500914096567168 0.006500914096567168 0.4134577282009429 0.1847412873453563 0.6732340566755777 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683500539109121 0.3937043358296127 0.9948878226639558 0.8152610552845081 0.9999758781799195 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152585118248643 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.993421190159463


ris (2 : 2): [ -1 0.993421190159463 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41765 interne); stringhe deallocate: 0 (41685 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892621764e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.993421190159463


ris (2 : 2): [ -1 0.993421190159463 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41785 interne); stringhe deallocate: 0 (41705 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4143021879838809


ris (2 : 2): [ 1 0.4143021879838809 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41805 interne); stringhe deallocate: 0 (41725 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9934210865921909 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152585778259082


ris (2 : 2): [ -1 0.8152585778259082 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41825 interne); stringhe deallocate: 0 (41745 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4143021151041655 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6734966748269664


ris (2 : 2): [ 1 0.6734966748269664 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41845 interne); stringhe deallocate: 0 (41765 interne)


Stringhe allocate: 1 (41845 interne); stringhe deallocate: 0 (41770 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006578809840537048 0.006578809840537048 0.4143021879838809 0.1847414221740918 0.6734966748269664 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683562646666853 0.3937162426127195 0.9949723830484947 0.8152613172296358 0.9999759989573269 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152585118241245 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9934977062365411


ris (2 : 2): [ -1 0.9934977062365411 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41880 interne); stringhe deallocate: 0 (41800 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622814e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9934977062365411


ris (2 : 2): [ -1 0.9934977062365411 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41900 interne); stringhe deallocate: 0 (41820 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.413460752470527


ris (2 : 2): [ 1 0.413460752470527 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41920 interne); stringhe deallocate: 0 (41840 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9934973805374465 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152587053345699


ris (2 : 2): [ -1 0.8152587053345699 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41940 interne); stringhe deallocate: 0 (41860 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.413460735938278 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.673235514572462


ris (2 : 2): [ 1 0.673235514572462 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41960 interne); stringhe deallocate: 0 (41880 interne)


Stringhe allocate: 1 (41960 interne); stringhe deallocate: 0 (41885 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.0065022937634589 0.0065022937634589 0.413460752470527 0.1847412946654301 0.673235514572462 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683501638326002 0.3937045465697564 0.9948881279938326 0.8152610695059409 0.9999758788520771 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152585118240676 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9934977062365411


ris (2 : 2): [ -1 0.9934977062365411 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41995 interne); stringhe deallocate: 0 (41915 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892638181e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9934977062365411


ris (2 : 2): [ -1 0.9934977062365411 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42015 interne); stringhe deallocate: 0 (41935 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.413460752470527


ris (2 : 2): [ 1 0.413460752470527 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42035 interne); stringhe deallocate: 0 (41955 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.993497380537641 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152587053345699


ris (2 : 2): [ -1 0.8152587053345699 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42055 interne); stringhe deallocate: 0 (41975 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4134607359382918 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.673235514572462


ris (2 : 2): [ 1 0.673235514572462 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42075 interne); stringhe deallocate: 0 (41995 interne)


Stringhe allocate: 1 (42075 interne); stringhe deallocate: 0 (42000 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.0065022937634589 0.0065022937634589 0.413460752470527 0.1847412946654301 0.673235514572462 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683501638326002 0.3937045465697564 0.9948881279938326 0.8152610695059409 0.9999758788520771 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152585118242621 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9935337472441326


ris (2 : 2): [ -1 0.9935337472441326 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42110 interne); stringhe deallocate: 0 (42030 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616983e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9935337472441326


ris (2 : 2): [ -1 0.9935337472441326 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42130 interne); stringhe deallocate: 0 (42050 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4130489790994171


ris (2 : 2): [ 1 0.4130489790994171 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42150 interne); stringhe deallocate: 0 (42070 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9935336201615614 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152587638414517


ris (2 : 2): [ -1 0.8152587638414517 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42170 interne); stringhe deallocate: 0 (42090 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4130487486335897 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.673108394179172


ris (2 : 2): [ 1 0.673108394179172 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42190 interne); stringhe deallocate: 0 (42110 interne)


Stringhe allocate: 1 (42190 interne); stringhe deallocate: 0 (42115 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.00646625275586743 0.00646625275586743 0.4130489790994171 0.1847412361585483 0.673108394179172 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683472933136152 0.3936990431758721 0.9948463891869748 0.8152609558388184 0.9999758201732857 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152585118241591 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9935494996082599


ris (2 : 2): [ -1 0.9935494996082599 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42225 interne); stringhe deallocate: 0 (42145 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617843e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9935494996082599


ris (2 : 2): [ -1 0.9935494996082599 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42245 interne); stringhe deallocate: 0 (42165 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4128526186636802


ris (2 : 2): [ 1 0.4128526186636802 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42265 interne); stringhe deallocate: 0 (42185 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9935493557877182 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152587883014436


ris (2 : 2): [ -1 0.8152587883014436 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42285 interne); stringhe deallocate: 0 (42205 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4128525301429917 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6730484711890337


ris (2 : 2): [ 1 0.6730484711890337 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42305 interne); stringhe deallocate: 0 (42225 interne)


Stringhe allocate: 1 (42305 interne); stringhe deallocate: 0 (42230 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006450500391740111 0.006450500391740111 0.4128526186636802 0.1847412116985564 0.6730484711890337 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683460393308029 0.3936966389727392 0.9948263670157678 0.8152609083179634 0.9999757924633475 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152585118240951 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9936181103706122


ris (2 : 2): [ -1 0.9936181103706122 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42340 interne); stringhe deallocate: 0 (42260 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616958e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9936181103706122


ris (2 : 2): [ -1 0.9936181103706122 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42360 interne); stringhe deallocate: 0 (42280 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4119955383826505


ris (2 : 2): [ 1 0.4119955383826505 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42380 interne); stringhe deallocate: 0 (42300 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9936180203387712 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.815258896952803


ris (2 : 2): [ -1 0.815258896952803 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42400 interne); stringhe deallocate: 0 (42320 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4119954153513579 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6727869908890726


ris (2 : 2): [ 1 0.6727869908890726 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42420 interne); stringhe deallocate: 0 (42340 interne)


Stringhe allocate: 1 (42420 interne); stringhe deallocate: 0 (42345 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006381889629387794 0.006381889629387794 0.4119955383826505 0.184741103047197 0.6727869908890726 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683405819583885 0.3936861754366566 0.9947380701591975 0.8152606972301607 0.9999756711760528 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152585118243669 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.993627701357172


ris (2 : 2): [ -1 0.993627701357172 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42455 interne); stringhe deallocate: 0 (42375 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622789e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.993627701357172


ris (2 : 2): [ -1 0.993627701357172 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42475 interne); stringhe deallocate: 0 (42395 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4118768255045302


ris (2 : 2): [ 1 0.4118768255045302 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42495 interne); stringhe deallocate: 0 (42415 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.993627557082009 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152589138281923


ris (2 : 2): [ -1 0.8152589138281923 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42515 interne); stringhe deallocate: 0 (42435 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4118766828987273 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6727507421495675


ris (2 : 2): [ 1 0.6727507421495675 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42535 interne); stringhe deallocate: 0 (42455 interne)


Stringhe allocate: 1 (42535 interne); stringhe deallocate: 0 (42460 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006372298642827956 0.006372298642827956 0.4118768255045302 0.1847410861718077 0.6727507421495675 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683398196583188 0.3936847138147573 0.9947257235210621 0.8152606644446607 0.9999756543142355 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152585118244407 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9935655614557865


ris (2 : 2): [ -1 0.9935655614557865 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42570 interne); stringhe deallocate: 0 (42490 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892628847e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9935655614557865


ris (2 : 2): [ -1 0.9935655614557865 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42590 interne); stringhe deallocate: 0 (42510 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4126545865706215


ris (2 : 2): [ 1 0.4126545865706215 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42610 interne); stringhe deallocate: 0 (42530 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9935655682525217 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152588130724466


ris (2 : 2): [ -1 0.8152588130724466 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42630 interne); stringhe deallocate: 0 (42550 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4126544043037703 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6729879482006486


ris (2 : 2): [ 1 0.6729879482006486 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42650 interne); stringhe deallocate: 0 (42570 interne)


Stringhe allocate: 1 (42650 interne); stringhe deallocate: 0 (42575 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.00643443854421355 0.00643443854421355 0.4126545865706215 0.1847411869275534 0.6729879482006486 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.668344761104805 0.3936941882566842 0.994806096567028 0.8152608601928746 0.9999757644437239 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152585118255198 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9936264586252351


ris (2 : 2): [ -1 0.9936264586252351 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42685 interne); stringhe deallocate: 0 (42605 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618311e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9936264586252351


ris (2 : 2): [ -1 0.9936264586252351 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42705 interne); stringhe deallocate: 0 (42625 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4118796223661709


ris (2 : 2): [ 1 0.4118796223661709 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42725 interne); stringhe deallocate: 0 (42645 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.993626126570125 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152589083579942


ris (2 : 2): [ -1 0.8152589083579942 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42745 interne); stringhe deallocate: 0 (42665 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4118795439216756 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6727520653103253


ris (2 : 2): [ 1 0.6727520653103253 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42765 interne); stringhe deallocate: 0 (42685 interne)


Stringhe allocate: 1 (42765 interne); stringhe deallocate: 0 (42690 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006373541374764868 0.006373541374764868 0.4118796223661709 0.1847410916420058 0.6727520653103253 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683399184237701 0.3936849031867066 0.9947260147352649 0.8152606750721596 0.9999756549299355 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152585118240312 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9936264586252351


ris (2 : 2): [ -1 0.9936264586252351 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42800 interne); stringhe deallocate: 0 (42720 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617502e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9936264586252351


ris (2 : 2): [ -1 0.9936264586252351 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42820 interne); stringhe deallocate: 0 (42740 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4118796223661709


ris (2 : 2): [ 1 0.4118796223661709 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42840 interne); stringhe deallocate: 0 (42760 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9936261265701853 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152589083579942


ris (2 : 2): [ -1 0.8152589083579942 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42860 interne); stringhe deallocate: 0 (42780 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4118795439216783 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6727520653103253


ris (2 : 2): [ 1 0.6727520653103253 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42880 interne); stringhe deallocate: 0 (42800 interne)


Stringhe allocate: 1 (42880 interne); stringhe deallocate: 0 (42805 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006373541374764868 0.006373541374764868 0.4118796223661709 0.1847410916420058 0.6727520653103253 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683399184237701 0.3936849031867066 0.9947260147352649 0.8152606750721596 0.9999756549299355 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152585118240916 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9936549601283948


ris (2 : 2): [ -1 0.9936549601283948 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42915 interne); stringhe deallocate: 0 (42835 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892620272e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9936549601283948


ris (2 : 2): [ -1 0.9936549601283948 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42935 interne); stringhe deallocate: 0 (42855 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4115003946495457


ris (2 : 2): [ 1 0.4115003946495457 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42955 interne); stringhe deallocate: 0 (42875 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9936547367996154 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152589520794172


ris (2 : 2): [ -1 0.8152589520794172 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42975 interne); stringhe deallocate: 0 (42895 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4115002199625639 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6726372580268081


ris (2 : 2): [ 1 0.6726372580268081 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42995 interne); stringhe deallocate: 0 (42915 interne)


Stringhe allocate: 1 (42995 interne); stringhe deallocate: 0 (42920 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006345039871605174 0.006345039871605174 0.4115003946495457 0.1847410479205828 0.6726372580268081 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.668337653879536 0.3936805611213846 0.9946863836209716 0.8152605901301927 0.9999756014492595 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152585118240294 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9936672240625279


ris (2 : 2): [ -1 0.9936672240625279 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43030 interne); stringhe deallocate: 0 (42950 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618805e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9936672240625279


ris (2 : 2): [ -1 0.9936672240625279 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43050 interne); stringhe deallocate: 0 (42970 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4113195711389518


ris (2 : 2): [ 1 0.4113195711389518 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43070 interne); stringhe deallocate: 0 (42990 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9936671345661381 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.815258970358047


ris (2 : 2): [ -1 0.815258970358047 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43090 interne); stringhe deallocate: 0 (43010 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4113194986793669 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6725831488848298


ris (2 : 2): [ 1 0.6725831488848298 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43110 interne); stringhe deallocate: 0 (43030 interne)


Stringhe allocate: 1 (43110 interne); stringhe deallocate: 0 (43035 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006332775937472057 0.006332775937472057 0.4113195711389518 0.1847410296419531 0.6725831488848298 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683366798513386 0.3936786934757651 0.9946673832905886 0.8152605546184752 0.9999755762028844 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152585118244389 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9937206212830096


ris (2 : 2): [ -1 0.9937206212830096 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43145 interne); stringhe deallocate: 0 (43065 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617894e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9937206212830096


ris (2 : 2): [ -1 0.9937206212830096 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43165 interne); stringhe deallocate: 0 (43085 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4105303094261401


ris (2 : 2): [ 1 0.4105303094261401 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43185 interne); stringhe deallocate: 0 (43105 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9937205403282823 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152590515517767


ris (2 : 2): [ -1 0.8152590515517767 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43205 interne); stringhe deallocate: 0 (43125 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4105300947639754 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6723470393927187


ris (2 : 2): [ 1 0.6723470393927187 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43225 interne); stringhe deallocate: 0 (43145 interne)


Stringhe allocate: 1 (43225 interne); stringhe deallocate: 0 (43150 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006279378716990358 0.006279378716990358 0.4105303094261401 0.1847409484482233 0.6723470393927187 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683324416221166 0.3936705666808162 0.9945836617932211 0.8152603968753063 0.9999754657323169 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152585118248643 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.993728098934673


ris (2 : 2): [ -1 0.993728098934673 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43260 interne); stringhe deallocate: 0 (43180 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892621764e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.993728098934673


ris (2 : 2): [ -1 0.993728098934673 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43280 interne); stringhe deallocate: 0 (43200 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4104209897673377


ris (2 : 2): [ 1 0.4104209897673377 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43300 interne); stringhe deallocate: 0 (43220 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9937276928849155 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152590641625334


ris (2 : 2): [ -1 0.8152590641625334 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43320 interne); stringhe deallocate: 0 (43240 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4104208990547322 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6723143076857983


ris (2 : 2): [ 1 0.6723143076857983 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43340 interne); stringhe deallocate: 0 (43260 interne)


Stringhe allocate: 1 (43340 interne); stringhe deallocate: 0 (43265 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006271901065327046 0.006271901065327046 0.4104209897673377 0.1847409358374667 0.6723143076857983 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683318484575969 0.3936694292602492 0.99457196377355 0.8152603723751281 0.999975450378473 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152589886612827 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9936797548449627


ris (2 : 2): [ -1 0.9936797548449627 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43375 interne); stringhe deallocate: 0 (43295 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622814e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9936797548449627


ris (2 : 2): [ -1 0.9936797548449627 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43395 interne); stringhe deallocate: 0 (43315 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4111372059013689


ris (2 : 2): [ 1 0.4111372059013689 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43415 interne); stringhe deallocate: 0 (43335 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9936795323318801 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.815258988869091


ris (2 : 2): [ -1 0.815258988869091 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43435 interne); stringhe deallocate: 0 (43355 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.411137108466356 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6725284966173687


ris (2 : 2): [ 1 0.6725284966173687 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43455 interne); stringhe deallocate: 0 (43375 interne)


Stringhe allocate: 1 (43455 interne); stringhe deallocate: 0 (43380 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006320245155037263 0.006320245155037263 0.4111372059013689 0.184741011130909 0.6725284966173687 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683356848682297 0.3936767856304823 0.9946481530119551 0.8152605186552224 0.999975550676581 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152589886612258 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9937269817617817


ris (2 : 2): [ -1 0.9937269817617817 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43490 interne); stringhe deallocate: 0 (43410 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892638181e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9937269817617817


ris (2 : 2): [ -1 0.9937269817617817 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43510 interne); stringhe deallocate: 0 (43430 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4104235758734523


ris (2 : 2): [ 1 0.4104235758734523 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43530 interne); stringhe deallocate: 0 (43450 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9937267392107367 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152590600747252


ris (2 : 2): [ -1 0.8152590600747252 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43550 interne); stringhe deallocate: 0 (43470 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4104235216593413 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6723155084252338


ris (2 : 2): [ 1 0.6723155084252338 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43570 interne); stringhe deallocate: 0 (43490 interne)


Stringhe allocate: 1 (43570 interne); stringhe deallocate: 0 (43495 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006273018238218353 0.006273018238218353 0.4104235758734523 0.1847409399252749 0.6723155084252338 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683319370718523 0.393669599182659 0.9945722407940514 0.8152603803169219 0.9999754509418877 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152589886614203 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9937269817617817


ris (2 : 2): [ -1 0.9937269817617817 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43605 interne); stringhe deallocate: 0 (43525 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616983e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9937269817617817


ris (2 : 2): [ -1 0.9937269817617817 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43625 interne); stringhe deallocate: 0 (43545 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4104235758734523


ris (2 : 2): [ 1 0.4104235758734523 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43645 interne); stringhe deallocate: 0 (43565 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9937267392106337 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152590600747252


ris (2 : 2): [ -1 0.8152590600747252 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43665 interne); stringhe deallocate: 0 (43585 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4104235216591032 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6723155084252338


ris (2 : 2): [ 1 0.6723155084252338 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43685 interne); stringhe deallocate: 0 (43605 interne)


Stringhe allocate: 1 (43685 interne); stringhe deallocate: 0 (43610 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006273018238218353 0.006273018238218353 0.4104235758734523 0.1847409399252749 0.6723155084252338 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683319370718523 0.393669599182659 0.9945722407940514 0.8152603803169219 0.9999754509418877 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152589886613173 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.993748891651381


ris (2 : 2): [ -1 0.993748891651381 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43720 interne); stringhe deallocate: 0 (43640 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617843e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.993748891651381


ris (2 : 2): [ -1 0.993748891651381 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43740 interne); stringhe deallocate: 0 (43660 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.410074377171226


ris (2 : 2): [ 1 0.410074377171226 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43760 interne); stringhe deallocate: 0 (43680 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9937486737198471 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.815259092747168


ris (2 : 2): [ -1 0.815259092747168 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43780 interne); stringhe deallocate: 0 (43700 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4100742384407332 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6722118529900142


ris (2 : 2): [ 1 0.6722118529900142 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43800 interne); stringhe deallocate: 0 (43720 interne)


Stringhe allocate: 1 (43800 interne); stringhe deallocate: 0 (43725 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006251108348618972 0.006251108348618972 0.410074377171226 0.184740907252832 0.6722118529900142 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683301995270544 0.3936662673218508 0.9945347084769978 0.8152603168408982 0.9999754022567222 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152589886612534 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9937581132000825


ris (2 : 2): [ -1 0.9937581132000825 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43835 interne); stringhe deallocate: 0 (43755 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616958e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9937581132000825


ris (2 : 2): [ -1 0.9937581132000825 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43855 interne); stringhe deallocate: 0 (43775 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4099078877325352


ris (2 : 2): [ 1 0.4099078877325352 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43875 interne); stringhe deallocate: 0 (43795 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9937577336261247 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152591064065465


ris (2 : 2): [ -1 0.8152591064065465 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43895 interne); stringhe deallocate: 0 (43815 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4099078222725057 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6721630087475691


ris (2 : 2): [ 1 0.6721630087475691 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43915 interne); stringhe deallocate: 0 (43835 interne)


Stringhe allocate: 1 (43915 interne); stringhe deallocate: 0 (43840 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006241886799917551 0.006241886799917551 0.4099078877325352 0.1847408935934535 0.6721630087475691 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683294684404176 0.3936648653950576 0.9945167238998989 0.815260290303456 0.9999753792819737 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152589886615251 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9937982428340839


ris (2 : 2): [ -1 0.9937982428340839 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43950 interne); stringhe deallocate: 0 (43870 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622789e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9937982428340839


ris (2 : 2): [ -1 0.9937982428340839 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43970 interne); stringhe deallocate: 0 (43890 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4091811939054603


ris (2 : 2): [ 1 0.4091811939054603 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43990 interne); stringhe deallocate: 0 (43910 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9937977879474875 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152591670815491


ris (2 : 2): [ -1 0.8152591670815491 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44010 interne); stringhe deallocate: 0 (43930 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4091811224434068 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6719498744105564


ris (2 : 2): [ 1 0.6719498744105564 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44030 interne); stringhe deallocate: 0 (43950 interne)


Stringhe allocate: 1 (44030 interne); stringhe deallocate: 0 (43955 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006201757165916089 0.006201757165916089 0.4091811939054603 0.1847408329184509 0.6719498744105564 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.668326288472209 0.3936587673837523 0.9944375383512768 0.8152601724240486 0.9999752787791409 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152589886615989 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9938038769935759


ris (2 : 2): [ -1 0.9938038769935759 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44065 interne); stringhe deallocate: 0 (43985 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892628847e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9938038769935759


ris (2 : 2): [ -1 0.9938038769935759 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44085 interne); stringhe deallocate: 0 (44005 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4090805402103872


ris (2 : 2): [ 1 0.4090805402103872 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44105 interne); stringhe deallocate: 0 (44025 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9938035099944651 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152591765054017


ris (2 : 2): [ -1 0.8152591765054017 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44125 interne); stringhe deallocate: 0 (44045 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4090805098032622 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6719203276226468


ris (2 : 2): [ 1 0.6719203276226468 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44145 interne); stringhe deallocate: 0 (44065 interne)


Stringhe allocate: 1 (44145 interne); stringhe deallocate: 0 (44070 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006196123006424137 0.006196123006424137 0.4090805402103872 0.1847408234945983 0.6719203276226468 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.668325842205625 0.3936579115919485 0.9944264818155031 0.815260154115385 0.9999752648141074 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.815258988662678 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9937675634585242


ris (2 : 2): [ -1 0.9937675634585242 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44180 interne); stringhe deallocate: 0 (44100 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618311e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9937675634585242


ris (2 : 2): [ -1 0.9937675634585242 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44200 interne); stringhe deallocate: 0 (44120 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4097399766445024


ris (2 : 2): [ 1 0.4097399766445024 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44220 interne); stringhe deallocate: 0 (44140 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9937672703689531 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152591202396053


ris (2 : 2): [ -1 0.8152591202396053 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44240 interne); stringhe deallocate: 0 (44160 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4097399755928191 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6721136729783188


ris (2 : 2): [ 1 0.6721136729783188 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44260 interne); stringhe deallocate: 0 (44180 interne)


Stringhe allocate: 1 (44260 interne); stringhe deallocate: 0 (44185 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006232436541475761 0.006232436541475761 0.4097399766445024 0.1847408797603947 0.6721136729783188 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683287193569818 0.3936634289465145 0.9944985265848012 0.8152602634285874 0.9999753560542454 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152589886611894 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9938028747504653


ris (2 : 2): [ -1 0.9938028747504653 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44295 interne); stringhe deallocate: 0 (44215 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617502e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9938028747504653


ris (2 : 2): [ -1 0.9938028747504653 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44315 interne); stringhe deallocate: 0 (44235 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.409082931042449


ris (2 : 2): [ 1 0.409082931042449 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44335 interne); stringhe deallocate: 0 (44255 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9938025563187205 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152591734506355


ris (2 : 2): [ -1 0.8152591734506355 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44355 interne); stringhe deallocate: 0 (44275 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4090828939888289 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6719214171460709


ris (2 : 2): [ 1 0.6719214171460709 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44375 interne); stringhe deallocate: 0 (44295 interne)


Stringhe allocate: 1 (44375 interne); stringhe deallocate: 0 (44300 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006197125249534752 0.006197125249534752 0.409082931042449 0.1847408265493645 0.6719214171460709 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683259215870414 0.393658063819562 0.994426744693236 0.8152601600501858 0.9999752653292011 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152589886612498 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9938028747504653


ris (2 : 2): [ -1 0.9938028747504653 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44410 interne); stringhe deallocate: 0 (44330 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892620272e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9938028747504653


ris (2 : 2): [ -1 0.9938028747504653 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44430 interne); stringhe deallocate: 0 (44350 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.409082931042449


ris (2 : 2): [ 1 0.409082931042449 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44450 interne); stringhe deallocate: 0 (44370 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9938025563186583 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152591734506355


ris (2 : 2): [ -1 0.8152591734506355 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44470 interne); stringhe deallocate: 0 (44390 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4090828939888143 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6719214171460709


ris (2 : 2): [ 1 0.6719214171460709 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44490 interne); stringhe deallocate: 0 (44410 interne)


Stringhe allocate: 1 (44490 interne); stringhe deallocate: 0 (44415 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006197125249534752 0.006197125249534752 0.409082931042449 0.1847408265493645 0.6719214171460709 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683259215870414 0.393658063819562 0.994426744693236 0.8152601600501858 0.9999752653292011 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152589886611876 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9938190460317513


ris (2 : 2): [ -1 0.9938190460317513 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44525 interne); stringhe deallocate: 0 (44445 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618805e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9938190460317513


ris (2 : 2): [ -1 0.9938190460317513 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44545 interne); stringhe deallocate: 0 (44465 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4087614346171135


ris (2 : 2): [ 1 0.4087614346171135 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44565 interne); stringhe deallocate: 0 (44485 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9938187687824467 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152591978663204


ris (2 : 2): [ -1 0.8152591978663204 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44585 interne); stringhe deallocate: 0 (44505 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4087612673256089 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6718278597263738


ris (2 : 2): [ 1 0.6718278597263738 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44605 interne); stringhe deallocate: 0 (44525 interne)


Stringhe allocate: 1 (44605 interne); stringhe deallocate: 0 (44530 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006180953968248693 0.006180953968248693 0.4087614346171135 0.1847408021336796 0.6718278597263738 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683246409488659 0.3936556079585075 0.994391285354201 0.8152601126153851 0.9999752210589653 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152589886615971 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9938256260702163


ris (2 : 2): [ -1 0.9938256260702163 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44640 interne); stringhe deallocate: 0 (44560 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617894e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9938256260702163


ris (2 : 2): [ -1 0.9938256260702163 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44660 interne); stringhe deallocate: 0 (44580 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4086081672922488


ris (2 : 2): [ 1 0.4086081672922488 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44680 interne); stringhe deallocate: 0 (44600 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.993825444503087 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152592080737933


ris (2 : 2): [ -1 0.8152592080737933 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44700 interne); stringhe deallocate: 0 (44620 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4086079641794829 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6717837822644103


ris (2 : 2): [ 1 0.6717837822644103 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44720 interne); stringhe deallocate: 0 (44640 interne)


Stringhe allocate: 1 (44720 interne); stringhe deallocate: 0 (44645 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006174373929783705 0.006174373929783705 0.4086081672922488 0.1847407919262067 0.6717837822644103 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683241199763382 0.3936546088876289 0.9943743025086376 0.815260092784303 0.9999752001745983 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152589886620225 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9938542369553045


ris (2 : 2): [ -1 0.9938542369553045 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44755 interne); stringhe deallocate: 0 (44675 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892621764e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9938542369553045


ris (2 : 2): [ -1 0.9938542369553045 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44775 interne); stringhe deallocate: 0 (44695 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4079391874617129


ris (2 : 2): [ 1 0.4079391874617129 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44795 interne); stringhe deallocate: 0 (44715 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9938540547318393 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152592534154206


ris (2 : 2): [ -1 0.8152592534154206 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44815 interne); stringhe deallocate: 0 (44735 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4079389616462859 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6715914492606937


ris (2 : 2): [ 1 0.6715914492606937 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44835 interne); stringhe deallocate: 0 (44755 interne)


Stringhe allocate: 1 (44835 interne); stringhe deallocate: 0 (44760 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006145763044695496 0.006145763044695496 0.4079391874617129 0.1847407465845794 0.6715914492606937 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683218554895886 0.3936502662094296 0.9942995799121728 0.8152600046945693 0.9999751088390408 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152589886612827 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9938582701588856


ris (2 : 2): [ -1 0.9938582701588856 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44870 interne); stringhe deallocate: 0 (44790 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622814e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9938582701588856


ris (2 : 2): [ -1 0.9938582701588856 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44890 interne); stringhe deallocate: 0 (44810 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4078465274347173


ris (2 : 2): [ 1 0.4078465274347173 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44910 interne); stringhe deallocate: 0 (44830 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9938578694290481 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152592604577412


ris (2 : 2): [ -1 0.8152592604577412 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44930 interne); stringhe deallocate: 0 (44850 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4078464552376082 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6715647860325866


ris (2 : 2): [ 1 0.6715647860325866 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44950 interne); stringhe deallocate: 0 (44870 interne)


Stringhe allocate: 1 (44950 interne); stringhe deallocate: 0 (44875 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006141729841114385 0.006141729841114385 0.4078465274347173 0.1847407395422588 0.6715647860325866 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683215363714955 0.3936496542181717 0.9942891532137387 0.8152599910127452 0.9999750961506254 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152589886612258 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.993832400786832


ris (2 : 2): [ -1 0.993832400786832 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44985 interne); stringhe deallocate: 0 (44905 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892638181e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.993832400786832


ris (2 : 2): [ -1 0.993832400786832 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45005 interne); stringhe deallocate: 0 (44925 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4084535892683084


ris (2 : 2): [ 1 0.4084535892683084 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45025 interne); stringhe deallocate: 0 (44945 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9938321202226996 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152592184110551


ris (2 : 2): [ -1 0.8152592184110551 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45045 interne); stringhe deallocate: 0 (44965 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4084534689399861 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6717392600811913


ris (2 : 2): [ 1 0.6717392600811913 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45065 interne); stringhe deallocate: 0 (44985 interne)


Stringhe allocate: 1 (45065 interne); stringhe deallocate: 0 (44990 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006167599213168007 0.006167599213168007 0.4084535892683084 0.1847407815889449 0.6717392600811913 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683235836595464 0.3936535803852595 0.9943571230358798 0.8152600727010666 0.9999751790616503 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152589886614203 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9938573729277808


ris (2 : 2): [ -1 0.9938573729277808 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45100 interne); stringhe deallocate: 0 (45020 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616983e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9938573729277808


ris (2 : 2): [ -1 0.9938573729277808 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45120 interne); stringhe deallocate: 0 (45040 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4078487373768868


ris (2 : 2): [ 1 0.4078487373768868 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45140 interne); stringhe deallocate: 0 (45060 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9938569157548232 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152592581749543


ris (2 : 2): [ -1 0.8152592581749543 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45160 interne); stringhe deallocate: 0 (45080 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4078486010048081 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6715657745315316


ris (2 : 2): [ 1 0.6715657745315316 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45180 interne); stringhe deallocate: 0 (45100 interne)


Stringhe allocate: 1 (45180 interne); stringhe deallocate: 0 (45105 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006142627072219242 0.006142627072219242 0.4078487373768868 0.1847407418250457 0.6715657745315316 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683216073607188 0.393649790358497 0.9942894021094451 0.8152599954477449 0.9999750966211447 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152589886613173 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9938573729277808


ris (2 : 2): [ -1 0.9938573729277808 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45215 interne); stringhe deallocate: 0 (45135 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617843e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9938573729277808


ris (2 : 2): [ -1 0.9938573729277808 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45235 interne); stringhe deallocate: 0 (45155 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4078487373768868


ris (2 : 2): [ 1 0.4078487373768868 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45255 interne); stringhe deallocate: 0 (45175 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9938569157547592 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152592581749543


ris (2 : 2): [ -1 0.8152592581749543 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45275 interne); stringhe deallocate: 0 (45195 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4078486010050444 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6715657745315316


ris (2 : 2): [ 1 0.6715657745315316 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45295 interne); stringhe deallocate: 0 (45215 interne)


Stringhe allocate: 1 (45295 interne); stringhe deallocate: 0 (45220 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006142627072219242 0.006142627072219242 0.4078487373768868 0.1847407418250457 0.6715657745315316 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683216073607188 0.393649790358497 0.9942894021094451 0.8152599954477449 0.9999750966211447 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152589886612534 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9938685715205347


ris (2 : 2): [ -1 0.9938685715205347 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45330 interne); stringhe deallocate: 0 (45250 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616958e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9938685715205347


ris (2 : 2): [ -1 0.9938685715205347 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45350 interne); stringhe deallocate: 0 (45270 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4075527924819338


ris (2 : 2): [ 1 0.4075527924819338 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45370 interne); stringhe deallocate: 0 (45290 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9938683598468279 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152592764204726


ris (2 : 2): [ -1 0.8152592764204726 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45390 interne); stringhe deallocate: 0 (45310 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4075527235481413 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6714813589330183


ris (2 : 2): [ 1 0.6714813589330183 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45410 interne); stringhe deallocate: 0 (45330 interne)


Stringhe allocate: 1 (45410 interne); stringhe deallocate: 0 (45335 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006131428479465351 0.006131428479465351 0.4075527924819338 0.1847407235795274 0.6714813589330183 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683207214126627 0.3936480913150338 0.9942559757612077 0.8152599600003421 0.9999750564078018 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152589886615251 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9938728695075735


ris (2 : 2): [ -1 0.9938728695075735 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45445 interne); stringhe deallocate: 0 (45365 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622789e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9938728695075735


ris (2 : 2): [ -1 0.9938728695075735 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45465 interne); stringhe deallocate: 0 (45385 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4074117195339191


ris (2 : 2): [ 1 0.4074117195339191 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45485 interne); stringhe deallocate: 0 (45405 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9938726513813254 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152592840483819


ris (2 : 2): [ -1 0.8152592840483819 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45505 interne); stringhe deallocate: 0 (45425 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.407411579749327 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6714415963240675


ris (2 : 2): [ 1 0.6714415963240675 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45525 interne); stringhe deallocate: 0 (45445 interne)


Stringhe allocate: 1 (45525 interne); stringhe deallocate: 0 (45450 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006127130492426525 0.006127130492426525 0.4074117195339191 0.1847407159516181 0.6714415963240675 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683203814393891 0.3936474393207038 0.9942399740087438 0.8152599451808356 0.9999750374434656 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152589886615989 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9938915297494976


ris (2 : 2): [ -1 0.9938915297494976 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45560 interne); stringhe deallocate: 0 (45480 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892628847e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9938915297494976


ris (2 : 2): [ -1 0.9938915297494976 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45580 interne); stringhe deallocate: 0 (45500 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4067959674683843


ris (2 : 2): [ 1 0.4067959674683843 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45600 interne); stringhe deallocate: 0 (45520 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9938912480315745 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152593179315798


ris (2 : 2): [ -1 0.8152593179315798 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45620 interne); stringhe deallocate: 0 (45540 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.406795744559493 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6712680924219536


ris (2 : 2): [ 1 0.6712680924219536 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45640 interne); stringhe deallocate: 0 (45560 interne)


Stringhe allocate: 1 (45640 interne); stringhe deallocate: 0 (45565 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006108470250502429 0.006108470250502429 0.4067959674683843 0.1847406820684202 0.6712680924219536 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683189057313128 0.3936446092084427 0.9941696135350127 0.8152598793525376 0.9999749545238538 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.815258988662678 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9938941794959556


ris (2 : 2): [ -1 0.9938941794959556 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45675 interne); stringhe deallocate: 0 (45595 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618311e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9938941794959556


ris (2 : 2): [ -1 0.9938941794959556 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45695 interne); stringhe deallocate: 0 (45615 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4067106797386836


ris (2 : 2): [ 1 0.4067106797386836 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45715 interne); stringhe deallocate: 0 (45635 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9938941090530351 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152593231942129


ris (2 : 2): [ -1 0.8152593231942129 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45735 interne); stringhe deallocate: 0 (45655 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4067106291267564 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6712440393430722


ris (2 : 2): [ 1 0.6712440393430722 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45755 interne); stringhe deallocate: 0 (45675 interne)


Stringhe allocate: 1 (45755 interne); stringhe deallocate: 0 (45680 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006105820504044401 0.006105820504044401 0.4067106797386836 0.1847406768057871 0.6712440393430722 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683186962246033 0.3936442074129943 0.9941598013116626 0.8152598691282905 0.9999749430068807 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152589886611894 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9938773318860479


ris (2 : 2): [ -1 0.9938773318860479 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45790 interne); stringhe deallocate: 0 (45710 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617502e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9938773318860479


ris (2 : 2): [ -1 0.9938773318860479 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45810 interne); stringhe deallocate: 0 (45730 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4072694383839843


ris (2 : 2): [ 1 0.4072694383839843 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45830 interne); stringhe deallocate: 0 (45750 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9938769429154002 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152592917732807


ris (2 : 2): [ -1 0.8152592917732807 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45850 interne); stringhe deallocate: 0 (45770 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4072692438578276 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6714014314441833


ris (2 : 2): [ 1 0.6714014314441833 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45870 interne); stringhe deallocate: 0 (45790 interne)


Stringhe allocate: 1 (45870 interne); stringhe deallocate: 0 (45795 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006122668113952123 0.006122668113952123 0.4072694383839843 0.1847407082267193 0.6714014314441833 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683200284925818 0.3936467624434973 0.9942237906715155 0.8152599301728976 0.9999750182726344 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152589886612498 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9938933780381566


ris (2 : 2): [ -1 0.9938933780381566 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45905 interne); stringhe deallocate: 0 (45825 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892620272e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9938933780381566


ris (2 : 2): [ -1 0.9938933780381566 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45925 interne); stringhe deallocate: 0 (45845 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4067127221488817


ris (2 : 2): [ 1 0.4067127221488817 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45945 interne); stringhe deallocate: 0 (45865 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9938931553787169 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152593214883162


ris (2 : 2): [ -1 0.8152593214883162 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45965 interne); stringhe deallocate: 0 (45885 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4067125364753874 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6712449360839345


ris (2 : 2): [ 1 0.6712449360839345 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45985 interne); stringhe deallocate: 0 (45905 interne)


Stringhe allocate: 1 (45985 interne); stringhe deallocate: 0 (45910 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006106621961843417 0.006106621961843417 0.4067127221488817 0.1847406785116839 0.6712449360839345 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683187595920935 0.3936443289403138 0.9941600364780772 0.8152598724425079 0.9999749434363487 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152589886611876 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9938933780381566


ris (2 : 2): [ -1 0.9938933780381566 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46020 interne); stringhe deallocate: 0 (45940 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618805e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9938933780381566


ris (2 : 2): [ -1 0.9938933780381566 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46040 interne); stringhe deallocate: 0 (45960 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4067127221488817


ris (2 : 2): [ 1 0.4067127221488817 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46060 interne); stringhe deallocate: 0 (45980 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9938931553791264 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152593214883162


ris (2 : 2): [ -1 0.8152593214883162 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46080 interne); stringhe deallocate: 0 (46000 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4067125364754012 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6712449360839345


ris (2 : 2): [ 1 0.6712449360839345 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46100 interne); stringhe deallocate: 0 (46020 interne)


Stringhe allocate: 1 (46100 interne); stringhe deallocate: 0 (46025 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006106621961843417 0.006106621961843417 0.4067127221488817 0.1847406785116839 0.6712449360839345 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683187595920935 0.3936443289403138 0.9941600364780772 0.8152598724425079 0.9999749434363487 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152589886615971 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9939002900695652


ris (2 : 2): [ -1 0.9939002900695652 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46135 interne); stringhe deallocate: 0 (46055 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617894e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9939002900695652


ris (2 : 2): [ -1 0.9939002900695652 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46155 interne); stringhe deallocate: 0 (46075 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4064403410877858


ris (2 : 2): [ 1 0.4064403410877858 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46175 interne); stringhe deallocate: 0 (46095 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9938998310997667 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152593351229504


ris (2 : 2): [ -1 0.8152593351229504 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46195 interne); stringhe deallocate: 0 (46115 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4064402624580525 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6711687948350691


ris (2 : 2): [ 1 0.6711687948350691 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46215 interne); stringhe deallocate: 0 (46135 interne)


Stringhe allocate: 1 (46215 interne); stringhe deallocate: 0 (46140 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006099709930434849 0.006099709930434849 0.4064403410877858 0.1847406648770497 0.6711687948350691 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683182131226697 0.3936432809086871 0.9941285915083116 0.8152598459531312 0.999974906944483 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152589886620225 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9939026275555257


ris (2 : 2): [ -1 0.9939026275555257 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46250 interne); stringhe deallocate: 0 (46170 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892621764e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9939026275555257


ris (2 : 2): [ -1 0.9939026275555257 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46270 interne); stringhe deallocate: 0 (46190 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4063105127950784


ris (2 : 2): [ 1 0.4063105127950784 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46290 interne); stringhe deallocate: 0 (46210 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9939022152848178 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152593408231859


ris (2 : 2): [ -1 0.8152593408231859 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46310 interne); stringhe deallocate: 0 (46230 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4063103243324449 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6711329371209125


ris (2 : 2): [ 1 0.6711329371209125 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46330 interne); stringhe deallocate: 0 (46250 interne)


Stringhe allocate: 1 (46330 interne); stringhe deallocate: 0 (46255 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006097372444474281 0.006097372444474281 0.4063105127950784 0.1847406591768142 0.6711329371209125 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683180283361444 0.39364292651947 0.9941135448058196 0.8152598348787096 0.9999748897407207 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152589886612827 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9939127398428915


ris (2 : 2): [ -1 0.9939127398428915 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46365 interne); stringhe deallocate: 0 (46285 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622814e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9939127398428915


ris (2 : 2): [ -1 0.9939127398428915 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46385 interne); stringhe deallocate: 0 (46305 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4057438428296764


ris (2 : 2): [ 1 0.4057438428296764 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46405 interne); stringhe deallocate: 0 (46325 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9939127057022414 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152593661436508


ris (2 : 2): [ -1 0.8152593661436508 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46425 interne); stringhe deallocate: 0 (46345 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4057438417887358 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6709764732517461


ris (2 : 2): [ 1 0.6709764732517461 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46445 interne); stringhe deallocate: 0 (46365 interne)


Stringhe allocate: 1 (46445 interne); stringhe deallocate: 0 (46370 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006087260157108476 0.006087260157108476 0.4057438428296764 0.1847406338563492 0.6709764732517461 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683172290204064 0.3936413935594662 0.9940474230593732 0.8152597856860911 0.9999748145346008 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152589886612258 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9939142007138829


ris (2 : 2): [ -1 0.9939142007138829 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46480 interne); stringhe deallocate: 0 (46400 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892638181e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9939142007138829


ris (2 : 2): [ -1 0.9939142007138829 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46500 interne); stringhe deallocate: 0 (46420 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4056653531991956


ris (2 : 2): [ 1 0.4056653531991956 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46520 interne); stringhe deallocate: 0 (46440 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9939141362139106 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.815259370076347


ris (2 : 2): [ -1 0.815259370076347 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46540 interne); stringhe deallocate: 0 (46460 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4056651636573943 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6709547823056135


ris (2 : 2): [ 1 0.6709547823056135 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46560 interne); stringhe deallocate: 0 (46480 interne)


Stringhe allocate: 1 (46560 interne); stringhe deallocate: 0 (46485 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006085799286117077 0.006085799286117077 0.4056653531991956 0.184740629923653 0.6709547823056135 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683171135602388 0.3936411721242228 0.9940382069588422 0.815259778045646 0.9999748040908429 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152589886614203 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9939051025547347


ris (2 : 2): [ -1 0.9939051025547347 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46595 interne); stringhe deallocate: 0 (46515 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616983e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9939051025547347


ris (2 : 2): [ -1 0.9939051025547347 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46615 interne); stringhe deallocate: 0 (46535 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4061795709709493


ris (2 : 2): [ 1 0.4061795709709493 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46635 interne); stringhe deallocate: 0 (46555 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9939050763078017 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152593465959004


ris (2 : 2): [ -1 0.8152593465959004 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46655 interne); stringhe deallocate: 0 (46575 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4061794325325301 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6710967156294603


ris (2 : 2): [ 1 0.6710967156294603 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46675 interne); stringhe deallocate: 0 (46595 interne)


Stringhe allocate: 1 (46675 interne); stringhe deallocate: 0 (46600 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006094897445265257 0.006094897445265257 0.4061795709709493 0.1847406534040996 0.6710967156294603 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683178326878234 0.3936425512984161 0.994098330532073 0.8152598236634756 0.999974872350452 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152589886613173 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9939134864390236


ris (2 : 2): [ -1 0.9939134864390236 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46710 interne); stringhe deallocate: 0 (46630 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617843e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9939134864390236


ris (2 : 2): [ -1 0.9939134864390236 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46730 interne); stringhe deallocate: 0 (46650 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4056672404771544


ris (2 : 2): [ 1 0.4056672404771544 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46750 interne); stringhe deallocate: 0 (46670 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9939131825394272 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152593688015526


ris (2 : 2): [ -1 0.8152593688015526 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46770 interne); stringhe deallocate: 0 (46690 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4056670710060262 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6709555957114418


ris (2 : 2): [ 1 0.6709555957114418 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46790 interne); stringhe deallocate: 0 (46710 interne)


Stringhe allocate: 1 (46790 interne); stringhe deallocate: 0 (46715 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006086513560976448 0.006086513560976448 0.4056672404771544 0.1847406311984474 0.6709555957114418 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683171700126563 0.3936412803915063 0.9940384287243569 0.8152597805223175 0.9999748044825597 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152589886612534 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9939134864390236


ris (2 : 2): [ -1 0.9939134864390236 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46825 interne); stringhe deallocate: 0 (46745 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616958e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9939134864390236


ris (2 : 2): [ -1 0.9939134864390236 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46845 interne); stringhe deallocate: 0 (46765 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4056672404771544


ris (2 : 2): [ 1 0.4056672404771544 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46865 interne); stringhe deallocate: 0 (46785 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.993913182539699 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152593688015526


ris (2 : 2): [ -1 0.8152593688015526 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46885 interne); stringhe deallocate: 0 (46805 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4056670710060288 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6709555957114418


ris (2 : 2): [ 1 0.6709555957114418 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46905 interne); stringhe deallocate: 0 (46825 interne)


Stringhe allocate: 1 (46905 interne); stringhe deallocate: 0 (46830 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006086513560976448 0.006086513560976448 0.4056672404771544 0.1847406311984474 0.6709555957114418 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683171700126563 0.3936412803915063 0.9940384287243569 0.8152597805223175 0.9999748044825597 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152589886615251 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9939167250576877


ris (2 : 2): [ -1 0.9939167250576877 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46940 interne); stringhe deallocate: 0 (46860 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622789e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9939167250576877


ris (2 : 2): [ -1 0.9939167250576877 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46960 interne); stringhe deallocate: 0 (46880 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4054165865737596


ris (2 : 2): [ 1 0.4054165865737596 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46980 interne); stringhe deallocate: 0 (46900 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9939165203998801 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.815259378990534


ris (2 : 2): [ -1 0.815259378990534 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47000 interne); stringhe deallocate: 0 (46920 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4054164930796294 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6708869419483129


ris (2 : 2): [ 1 0.6708869419483129 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47020 interne); stringhe deallocate: 0 (46940 interne)


Stringhe allocate: 1 (47020 interne); stringhe deallocate: 0 (46945 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006083274942312311 0.006083274942312311 0.4054165865737596 0.184740621009466 0.6708869419483129 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683169140560258 0.3936407895044978 0.9940089042076405 0.8152597607271562 0.9999747713991055 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152589886615989 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9939173889601762


ris (2 : 2): [ -1 0.9939173889601762 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47055 interne); stringhe deallocate: 0 (46975 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892628847e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9939173889601762


ris (2 : 2): [ -1 0.9939173889601762 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47075 interne); stringhe deallocate: 0 (46995 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4052971254638002


ris (2 : 2): [ 1 0.4052971254638002 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47095 interne); stringhe deallocate: 0 (47015 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9939169972381174 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152593832502445


ris (2 : 2): [ -1 0.8152593832502445 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47115 interne); stringhe deallocate: 0 (47035 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4052970453712614 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6708546172977224


ris (2 : 2): [ 1 0.6708546172977224 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47135 interne); stringhe deallocate: 0 (47055 interne)


Stringhe allocate: 1 (47135 interne); stringhe deallocate: 0 (47060 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006082611039823771 0.006082611039823771 0.4052971254638002 0.1847406167497555 0.6708546172977224 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683168615880314 0.3936406888784707 0.99399478220622 0.8152597524513872 0.9999747558071936 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.815258988662678 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9939202048642144


ris (2 : 2): [ -1 0.9939202048642144 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47170 interne); stringhe deallocate: 0 (47090 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618311e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9939202048642144


ris (2 : 2): [ -1 0.9939202048642144 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47190 interne); stringhe deallocate: 0 (47110 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.404775707326651


ris (2 : 2): [ 1 0.404775707326651 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47210 interne); stringhe deallocate: 0 (47130 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9939198582595781 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152594021718921


ris (2 : 2): [ -1 0.8152594021718921 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47230 interne); stringhe deallocate: 0 (47150 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4047756239387801 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6707135707873523


ris (2 : 2): [ 1 0.6707135707873523 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47250 interne); stringhe deallocate: 0 (47170 interne)


Stringhe allocate: 1 (47250 interne); stringhe deallocate: 0 (47175 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006079795135785604 0.006079795135785604 0.404775707326651 0.1847405978281079 0.6707135707873523 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683166390555596 0.3936402620927445 0.9939327579800659 0.8152597156903941 0.9999746876600764 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152589886611894 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9939206505039081


ris (2 : 2): [ -1 0.9939206505039081 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47285 interne); stringhe deallocate: 0 (47205 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617502e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9939206505039081


ris (2 : 2): [ -1 0.9939206505039081 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47305 interne); stringhe deallocate: 0 (47225 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4047034852832255


ris (2 : 2): [ 1 0.4047034852832255 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47325 interne); stringhe deallocate: 0 (47245 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9939203350967967 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152594051107437


ris (2 : 2): [ -1 0.8152594051107437 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47345 interne); stringhe deallocate: 0 (47265 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4047033831092977 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6706940170268231


ris (2 : 2): [ 1 0.6706940170268231 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47365 interne); stringhe deallocate: 0 (47285 interne)


Stringhe allocate: 1 (47365 interne); stringhe deallocate: 0 (47290 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006079349496091902 0.006079349496091902 0.4047034852832255 0.1847405948892563 0.6706940170268231 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683166038390994 0.3936401945524755 0.9939241173124945 0.8152597099807907 0.9999746781981014 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152589886612498 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9939181665941563


ris (2 : 2): [ -1 0.9939181665941563 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47400 interne); stringhe deallocate: 0 (47320 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892620272e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9939181665941563


ris (2 : 2): [ -1 0.9939181665941563 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47420 interne); stringhe deallocate: 0 (47340 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4051766382479892


ris (2 : 2): [ 1 0.4051766382479892 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47440 interne); stringhe deallocate: 0 (47360 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9939179509109435 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152593875641175


ris (2 : 2): [ -1 0.8152593875641175 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47460 interne); stringhe deallocate: 0 (47380 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4051764055702378 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6708219637693972


ris (2 : 2): [ 1 0.6708219637693972 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47480 interne); stringhe deallocate: 0 (47400 interne)


Stringhe allocate: 1 (47480 interne); stringhe deallocate: 0 (47405 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006081833405843673 0.006081833405843673 0.4051766382479892 0.1847406124358825 0.6708219637693972 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683168001327321 0.3936405710160214 0.9939805056634099 0.815259744070391 0.9999747400468636 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152589886611876 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9939200154401621


ris (2 : 2): [ -1 0.9939200154401621 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47515 interne); stringhe deallocate: 0 (47435 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892618805e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9939200154401621


ris (2 : 2): [ -1 0.9939200154401621 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47535 interne); stringhe deallocate: 0 (47455 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4047052289352321


ris (2 : 2): [ 1 0.4047052289352321 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47555 interne); stringhe deallocate: 0 (47475 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9939198582599857 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152594041581069


ris (2 : 2): [ -1 0.8152594041581069 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47575 interne); stringhe deallocate: 0 (47495 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4047050520395903 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6706947547525477


ris (2 : 2): [ 1 0.6706947547525477 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47595 interne); stringhe deallocate: 0 (47515 interne)


Stringhe allocate: 1 (47595 interne); stringhe deallocate: 0 (47520 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006079984559837937 0.006079984559837937 0.4047052289352321 0.1847405958418931 0.6706947547525477 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683166540247952 0.3936402908016474 0.9939243260663792 0.8152597118315742 0.9999746785551478 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152589886615971 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9939200154401621


ris (2 : 2): [ -1 0.9939200154401621 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47630 interne); stringhe deallocate: 0 (47550 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617894e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9939200154401621


ris (2 : 2): [ -1 0.9939200154401621 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47650 interne); stringhe deallocate: 0 (47570 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4047052289352321


ris (2 : 2): [ 1 0.4047052289352321 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47670 interne); stringhe deallocate: 0 (47590 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9939198582604112 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152594041581069


ris (2 : 2): [ -1 0.8152594041581069 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47690 interne); stringhe deallocate: 0 (47610 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4047050520393523 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6706947547525477


ris (2 : 2): [ 1 0.6706947547525477 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47710 interne); stringhe deallocate: 0 (47630 interne)


Stringhe allocate: 1 (47710 interne); stringhe deallocate: 0 (47635 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006079984559837937 0.006079984559837937 0.4047052289352321 0.1847405958418931 0.6706947547525477 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683166540247952 0.3936402908016474 0.9939243260663792 0.8152597118315742 0.9999746785551478 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152589886620225 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9939201271755483


ris (2 : 2): [ -1 0.9939201271755483 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47745 interne); stringhe deallocate: 0 (47665 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892621764e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9939201271755483


ris (2 : 2): [ -1 0.9939201271755483 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47765 interne); stringhe deallocate: 0 (47685 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4044746053580496


ris (2 : 2): [ 1 0.4044746053580496 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47785 interne); stringhe deallocate: 0 (47705 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9939198582596713 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152594117721976


ris (2 : 2): [ -1 0.8152594117721976 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47805 interne); stringhe deallocate: 0 (47725 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4044745012733748 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6706328748352414


ris (2 : 2): [ 1 0.6706328748352414 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47825 interne); stringhe deallocate: 0 (47745 interne)


Stringhe allocate: 1 (47825 interne); stringhe deallocate: 0 (47750 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.00607987282445166 0.00607987282445166 0.4044746053580496 0.1847405882278024 0.6706328748352414 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683166451948998 0.3936402738671418 0.9938966538382743 0.815259697038912 0.9999746485888512 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152589886612827 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9939193728341894


ris (2 : 2): [ -1 0.9939193728341894 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47860 interne); stringhe deallocate: 0 (47780 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892622814e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9939193728341894


ris (2 : 2): [ -1 0.9939193728341894 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47880 interne); stringhe deallocate: 0 (47800 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4043647008518346


ris (2 : 2): [ 1 0.4043647008518346 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47900 interne); stringhe deallocate: 0 (47820 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9939193814224563 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152594149554228


ris (2 : 2): [ -1 0.8152594149554228 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47920 interne); stringhe deallocate: 0 (47840 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4043645903083943 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79842848 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6706037460488165


ris (2 : 2): [ 1 0.6706037460488165 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47940 interne); stringhe deallocate: 0 (47860 interne)


Stringhe allocate: 1 (47940 interne); stringhe deallocate: 0 (47865 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006080627165810593 0.006080627165810593 0.4043647008518346 0.1847405850445772 0.6706037460488165 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683167048071408 0.3936403881950584 0.9938834228665585 0.8152596908545393 0.9999746344705189 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152589886612258 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9939160061429327


ris (2 : 2): [ -1 0.9939160061429327 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47975 interne); stringhe deallocate: 0 (47895 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892638181e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9939160061429327


ris (2 : 2): [ -1 0.9939160061429327 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47995 interne); stringhe deallocate: 0 (47915 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4038849962846466


ris (2 : 2): [ 1 0.4038849962846466 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48015 interne); stringhe deallocate: 0 (47935 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9939155667253852 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.815259429095319


ris (2 : 2): [ -1 0.815259429095319 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48035 interne); stringhe deallocate: 0 (47955 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4038848921272447 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838560 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6704766453637491


ris (2 : 2): [ 1 0.6704766453637491 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48055 interne); stringhe deallocate: 0 (47975 interne)


Stringhe allocate: 1 (48055 interne); stringhe deallocate: 0 (47980 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.00608399385706726 0.00608399385706726 0.4038849962846466 0.184740570904681 0.6704766453637491 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683169708723818 0.3936408984699908 0.9938253413791356 0.8152596633835358 0.9999745727744703 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152589886614203 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9939155911038866


ris (2 : 2): [ -1 0.9939155911038866 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48090 interne); stringhe deallocate: 0 (48010 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616983e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9939155911038866


ris (2 : 2): [ -1 0.9939155911038866 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48110 interne); stringhe deallocate: 0 (48030 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4038185517636208


ris (2 : 2): [ 1 0.4038185517636208 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48130 interne); stringhe deallocate: 0 (48050 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9939155667252821 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152594312914838


ris (2 : 2): [ -1 0.8152594312914838 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48150 interne); stringhe deallocate: 0 (48070 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.4038183733439116 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838808 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6704590247961255


ris (2 : 2): [ 1 0.6704590247961255 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48170 interne); stringhe deallocate: 0 (48090 interne)


Stringhe allocate: 1 (48170 interne); stringhe deallocate: 0 (48095 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006084408896113391 0.006084408896113391 0.4038185517636208 0.1847405687085162 0.6704590247961255 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683170036735795 0.3936409613778792 0.9938172536962462 0.8152596591168247 0.9999745642094217 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152589886613173 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9939187112497906


ris (2 : 2): [ -1 0.9939187112497906 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48205 interne); stringhe deallocate: 0 (48125 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892617843e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9939187112497906


ris (2 : 2): [ -1 0.9939187112497906 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48225 interne); stringhe deallocate: 0 (48145 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043682999199 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4042538509603715


ris (2 : 2): [ 1 0.4042538509603715 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48245 interne); stringhe deallocate: 0 (48165 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9939184277481674 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152594181791228


ris (2 : 2): [ -1 0.8152594181791228 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48265 interne); stringhe deallocate: 0 (48185 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.404253725669113 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838544 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6705743200199658


ris (2 : 2): [ 1 0.6705743200199658 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48285 interne); stringhe deallocate: 0 (48205 interne)


Stringhe allocate: 1 (48285 interne); stringhe deallocate: 0 (48210 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006081288750209413 0.006081288750209413 0.4042538509603715 0.1847405818208772 0.6705743200199658 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683167570899286 0.3936404884660522 0.9938700494486893 0.8152596845915319 0.9999746202001347 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.8152589886612534 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79851640 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9939150278686653


ris (2 : 2): [ -1 0.9939150278686653 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48320 interne); stringhe deallocate: 0 (48240 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
st = 1
end = 1


r (1 : 1): [ 3 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.456054892616958e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.9939150278686653


ris (2 : 2): [ -1 0.9939150278686653 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48340 interne); stringhe deallocate: 0 (48260 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6563043683001988 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.4038201624637987


ris (2 : 2): [ 1 0.4038201624637987 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48360 interne); stringhe deallocate: 0 (48280 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
st = 1
end = 1


r (1 : 1): [ 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.9939146130511736 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 0.8152594305795909


ris (2 : 2): [ -1 0.8152594305795909 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48380 interne); stringhe deallocate: 0 (48300 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
st = 1
end = 1


r (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.403820042273741 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838592 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.6704596937975735


ris (2 : 2): [ 1 0.6704596937975735 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48400 interne); stringhe deallocate: 0 (48320 interne)


Stringhe allocate: 1 (48400 interne); stringhe deallocate: 0 (48325 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.006084972131334743 0.006084972131334743 0.4038201624637987 0.1847405694204091 0.6704596937975735 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.6683170481873787 0.3936410467487852 0.9938174498754335 0.8152596604998909 0.9999745645346643 ]
------------------------------ Fine f_aux5_d


Stringhe allocate: 1 (48405 interne); stringhe deallocate: 0 (48345 interne)

119: moltiplica1_mv_d	m <- m * v
ris (5 x 51 : 5 x 51): [
	 0.8988629876690203 0.8932524527824008 0.8844403511900205 0.8733313381593231 0.8608256339006417 0.8476701456108425 0.8344175798067797 0.8214454379828815 0.8089946183388406 0.7972073467967857 0.786157660819843 0.7758738359470363 0.7663541783674795 0.7575778984501406 0.7495125081409756 0.7421188166870639 0.7353542829105327 0.7291752460977106 0.7235383913976432 0.7184016918328762 0.7137249919760988 0.7094703463132238 0.7056021900961579 0.7020873965334195 0.698895257766682 0.6959974157733192 0.693367761481486 0.6909823148918836 0.6888190951347124 0.6868579866545137 0.6850806057706982 0.6834701704745105 0.6820113753323446 0.6806902726577214 0.679494160610236 0.6784114785228222 0.677431709508331 0.6765452902235473 0.6757435275522844 0.6750185218937219 0.6743630966964458 0.6737707338544396 0.673235514572462 0.6727520653103253 0.6723155084252338 0.6719214171460709 0.6715657745315316 0.6712449360839345 0.6709555957114418 0.6706947547525477 0.6704596937975735
	 0.86013003877782 0.8470566531196632 0.8297218096585345 0.8093530727487208 0.7871472827419761 0.7640934004373313 0.7409291689254087 0.7181679435179006 0.6961474561324397 0.6750770640450391 0.655075790570154 0.636200543602661 0.6184662287434888 0.6018598092661583 0.5863500482840626 0.5718942353737266 0.55844282456501 0.54594262764173 0.534339005782274 0.5235773638101413 0.5136041566063866 0.5043675527719455 0.4958178566624539 0.4879077597810097 0.4805924717154632 0.4738297663415297 0.4675799688704938 0.4618059021502544 0.4564728055190954 0.4515482358428229 0.4470019577129212 0.4428058278525887 0.4389336773644304 0.4353611944145213 0.4320658091807157 0.4290265823257505 0.4262240978355135 0.4236403607518362 0.4212587000995425 0.4190636771388063 0.4170409989509822 0.4151774372776857 0.413460752470527 0.4118796223661709 0.4104235758734523 0.409082931042449 0.4078487373768868 0.4067127221488817 0.4056672404771544 0.4047052289352321 0.4038201624637987
	 0.7529666664997292 0.7772967971859057 0.7992306358604472 0.8190041717850969 0.8368301385431872 0.8529002980919023 0.8673874962857874 0.8804475133334996 0.8922207292432512 0.9028336230219076 0.912400123036562 0.921022824676633 0.9287940901669293 0.9357970440060223 0.9421064760139571 0.9477896623926864 0.9529071135962676 0.9575132562635507 0.9616570550735722 0.9653825792162376 0.9687295172719088 0.9717336436730235 0.9744272395572007 0.9768394706690351 0.9789967249680022 0.9809229126903905 0.9826397317369605 0.9841669013690645 0.9855223672619808 0.9867224809669764 0.987782156767242 0.9887150087812103 0.9895334709802884 0.9902489025608188 0.9908716808573385 0.9914112837204747 0.9918763630206758 0.9922748106884641 0.9926138184702703 0.9928999323708061 0.993139102570714 0.9933367294523926 0.9934977062365411 0.9936264586252351 0.9937269817617817 0.9938028747504653 0.9938573729277808 0.9938933780381566 0.9939134864390236 0.9939200154401621 0.9939150278686653
	 0.6820456255132146 0.7091111733001936 0.7320184721308201 0.7508822772771566 0.7660120875484692 0.7778825936530953 0.7870439402523729 0.7940346591920764 0.7993294849699011 0.8033207963160903 0.8063204510328977 0.8085705222824355 0.8102562538471408 0.8115181790267809 0.8124623462735735 0.8131685161924288 0.8136965516620303 0.8140913204380154 0.8143864210093995 0.8146069977900691 0.8147718605042306 0.8148950760138721 0.8149871620689314 0.8150559816035454 0.8151074122217545 0.8151458471383748 0.8151745698756184 0.8151960344606942 0.8152120749192886 0.8152240618855424 0.8152330196668796 0.8152397137429059 0.8152447161621277 0.8152484544175878 0.8152512479740647 0.8152533355660815 0.8152548955983043 0.8152560613910231 0.8152569325731959 0.815257583596485 0.8152580700977776 0.8152584336538631 0.8152587053345699 0.8152589083579942 0.8152590600747252 0.8152591734506355 0.8152592581749543 0.8152593214883162 0.8152593688015526 0.8152594041581069 0.8152594305795909
	 0.8224436778595854 0.8420709766245098 0.8595286392686602 0.8750564973982185 0.8888678698856849 0.9011524945728625 0.9120791345512564 0.9217978967666645 0.9304422944010367 0.9381310813459298 0.9449698839447075 0.9510526523927009 0.9564629517077994 0.9612751099839088 0.9655552396852347 0.969362146002395 0.9727481347469599 0.975759730887093 0.9784383176041048 0.9808207046609334 0.9829396339039399 0.9848242288558621 0.9865003945887725 0.9879911733812261 0.9893170610543601 0.9904962883394243 0.9915450711468041 0.9924778331775648 0.9933074039370541 0.9940451948709523 0.9947013560426752 0.9952849155030564 0.9958039032650402 0.9962654615843847 0.9966759430591683 0.9970409978935745 0.9973656515226783 0.9976543736626964 0.9979111397335572 0.99813948549606 0.998342555652879 0.9985231470799386 0.9986837472811053 0.9988265685936816 0.9989535786139652 0.999066527260338 0.999166970845267 0.9992562934866078 0.9993357261521275 0.9994063635987165 0.9994691794388955
 ]
parm1[j][i] (5 : 5): [ 12.67431725 9.032985081 12.19219754 9.171903361 10.26385753 ]


ris (5 x 51 : 5 x 51): [
	 11.39247467 11.32136497090479 11.20967759968374 11.06887844419829 10.91037718098909 10.74364034882551 10.57567312544832 10.41126008456024 10.25345444636913 10.10405882733323 9.964011601748585 9.833671142767193 9.713015982492523 9.601782626545365 9.499559311021931 9.405849319886443 9.320113472754345 9.241798399889207 9.1703551151284 9.105250955226607 9.04597697755878 8.992052248641166 8.943026009573513 8.898478400891108 8.858020221455455 8.8212920526912 8.787962979938683 8.757729073079132 8.730311739595276 8.705456028555572 8.682928939360009 8.662517771505529 8.644028539070959 8.627284464652961 8.612124561096586 8.59840230483981 8.585984401518429 8.574749642286561 8.564587847831769 8.555398896107102 8.547091829223181 8.539584034636484 8.532800495658382 8.526673106335782 8.521140045876461 8.516145207978893 8.511637680654602 8.507571272383759 8.503904080709553 8.500598099644735 8.497618862528304
	 7.769541808 7.651450110391709 7.494864728025863 7.310874231400702 7.110289661557959 6.902044286640972 6.692802128980945 6.487200319449647 6.288289585420429 6.09796104804412 5.917289843144481 5.746790018886927 5.586596217342267 5.436590677954714 5.296491238393567 5.165912096040775 5.044405702887236 4.931491610569685 4.826676267427653 4.729466516046315 4.639378684165077 4.555944579529463 4.478715302125343 4.407263515005992 4.341184627046694 4.280097210296754 4.223642882981614 4.171485824440993 4.123312042136203 4.078828477720088 4.03776201519861 3.999858436772288 3.964881359181367 3.932611173992711 3.902844008339597 3.875390717500922 3.850075916910878 3.826737058380794 3.805223553240621 3.785395943583838 3.767125121689559 3.750291596897148 3.734784808645304 3.720502484001535 3.707350037755566 3.695240012998193 3.684091560030105 3.673829951423747 3.664386131080575 3.655696295174641 3.647701502942489
	 9.180318338999999 9.47695609849988 9.744377792430381 9.985460648487996 10.20279835654411 10.39872891626136 10.57535969844234 10.73459000616381 10.87813138021657 11.00752587763699 11.12416253558207 11.2292922173063 11.32404102129977 11.4094224178695 11.48634825927544 11.55563879026154 11.61803176623691 11.67419076753385 11.72471278119165 11.77013510747907 11.81094163740796 11.84756853992547 11.88040939303829 11.90981979126591 11.93612146182293 11.95960592303341 11.98053771998963 11.99915727382133 12.0156833817465 12.03031540510827 12.04323518179346 12.05460869782335 12.06458755063354 12.07331023378971 12.08090326980451 12.08748221450501 12.09315255320483 12.09801050587986 12.10214375572324 12.10563211291751 12.10854812324047 12.11095762922111 12.1129202899728 12.1144900645295 12.11571566246762 12.11664096477755 12.11730541732095 12.1177443987391 12.11798956433469 12.11806916720631 12.11800835774937
	 6.255656565 6.503899153714699 6.714002684850754 6.887019682673687 7.025788840352431 7.134663975190223 7.218690960855422 7.282809159394295 7.331372789741835 7.367980711692745 7.395493254871671 7.416130690927796 7.43159205793186 7.443166313728332 7.451826124472535 7.458303046724721 7.463146137023085 7.466766918086361 7.469473552008872 7.471496660924854 7.473008765806975 7.474138886553984 7.474983490951884 7.475614697072713 7.476086413732723 7.476438935073652 7.476702377243914 7.476899248343913 7.477046369880007 7.477156313176079 7.477238473080832 7.477299870499237 7.47734575220491 7.477380039122728 7.477405661352768 7.477424808545004 7.477439117009792 7.477449809547948 7.477457799946645 7.477463771069339 7.47746823321218 7.477471567713462 7.47747405954265 7.477475921653878 7.477477313185073 7.477478353057966 7.47747913014123 7.477479710845266 7.477480144797699 7.477480469084599 7.477480711419896
	 8.441444735999999 8.642896534221928 8.822079496408291 8.981455219996128 9.123213179501246 9.249300817099959 9.361450293119797 9.46120228386669 9.549927149618556 9.628843763399464 9.699036258949111 9.761468927687295 9.816999469052123 9.866390776009919 9.91032141747425 9.949394961543641 9.984148267616037 10.01505886133626 10.04255149378142 10.06700397511403 10.0887523629804 10.10809557706868 10.12529950334794 10.14060064448243 10.15420936666026 10.16631278750965 10.17707734482451 10.18665108141763 10.19516567750408 10.20273825853654 10.20947300331982 10.21546257448146 10.22078939093027 10.22552675976181 10.2297398831377 10.23348675394868 10.2368189525444 10.2397823554553 10.24241776582515 10.24476147419906 10.24684575735725 10.24869932203573 10.25034769961979 10.25181359722432 10.25311720997739 10.25427649879197 10.25530743743748 10.25622423230241 10.25703951786453 10.2577645305526 10.25840926338683
 ]
------------------------------ Fine moltiplica1_mv_d


*** write_m_d ***
ris (5 x 51 : 5 x 51): [
	 11.39247467 11.32136497090479 11.20967759968374 11.06887844419829 10.91037718098909 10.74364034882551 10.57567312544832 10.41126008456024 10.25345444636913 10.10405882733323 9.964011601748585 9.833671142767193 9.713015982492523 9.601782626545365 9.499559311021931 9.405849319886443 9.320113472754345 9.241798399889207 9.1703551151284 9.105250955226607 9.04597697755878 8.992052248641166 8.943026009573513 8.898478400891108 8.858020221455455 8.8212920526912 8.787962979938683 8.757729073079132 8.730311739595276 8.705456028555572 8.682928939360009 8.662517771505529 8.644028539070959 8.627284464652961 8.612124561096586 8.59840230483981 8.585984401518429 8.574749642286561 8.564587847831769 8.555398896107102 8.547091829223181 8.539584034636484 8.532800495658382 8.526673106335782 8.521140045876461 8.516145207978893 8.511637680654602 8.507571272383759 8.503904080709553 8.500598099644735 8.497618862528304
	 7.769541808 7.651450110391709 7.494864728025863 7.310874231400702 7.110289661557959 6.902044286640972 6.692802128980945 6.487200319449647 6.288289585420429 6.09796104804412 5.917289843144481 5.746790018886927 5.586596217342267 5.436590677954714 5.296491238393567 5.165912096040775 5.044405702887236 4.931491610569685 4.826676267427653 4.729466516046315 4.639378684165077 4.555944579529463 4.478715302125343 4.407263515005992 4.341184627046694 4.280097210296754 4.223642882981614 4.171485824440993 4.123312042136203 4.078828477720088 4.03776201519861 3.999858436772288 3.964881359181367 3.932611173992711 3.902844008339597 3.875390717500922 3.850075916910878 3.826737058380794 3.805223553240621 3.785395943583838 3.767125121689559 3.750291596897148 3.734784808645304 3.720502484001535 3.707350037755566 3.695240012998193 3.684091560030105 3.673829951423747 3.664386131080575 3.655696295174641 3.647701502942489
	 9.180318338999999 9.47695609849988 9.744377792430381 9.985460648487996 10.20279835654411 10.39872891626136 10.57535969844234 10.73459000616381 10.87813138021657 11.00752587763699 11.12416253558207 11.2292922173063 11.32404102129977 11.4094224178695 11.48634825927544 11.55563879026154 11.61803176623691 11.67419076753385 11.72471278119165 11.77013510747907 11.81094163740796 11.84756853992547 11.88040939303829 11.90981979126591 11.93612146182293 11.95960592303341 11.98053771998963 11.99915727382133 12.0156833817465 12.03031540510827 12.04323518179346 12.05460869782335 12.06458755063354 12.07331023378971 12.08090326980451 12.08748221450501 12.09315255320483 12.09801050587986 12.10214375572324 12.10563211291751 12.10854812324047 12.11095762922111 12.1129202899728 12.1144900645295 12.11571566246762 12.11664096477755 12.11730541732095 12.1177443987391 12.11798956433469 12.11806916720631 12.11800835774937
	 6.255656565 6.503899153714699 6.714002684850754 6.887019682673687 7.025788840352431 7.134663975190223 7.218690960855422 7.282809159394295 7.331372789741835 7.367980711692745 7.395493254871671 7.416130690927796 7.43159205793186 7.443166313728332 7.451826124472535 7.458303046724721 7.463146137023085 7.466766918086361 7.469473552008872 7.471496660924854 7.473008765806975 7.474138886553984 7.474983490951884 7.475614697072713 7.476086413732723 7.476438935073652 7.476702377243914 7.476899248343913 7.477046369880007 7.477156313176079 7.477238473080832 7.477299870499237 7.47734575220491 7.477380039122728 7.477405661352768 7.477424808545004 7.477439117009792 7.477449809547948 7.477457799946645 7.477463771069339 7.47746823321218 7.477471567713462 7.47747405954265 7.477475921653878 7.477477313185073 7.477478353057966 7.47747913014123 7.477479710845266 7.477480144797699 7.477480469084599 7.477480711419896
	 8.441444735999999 8.642896534221928 8.822079496408291 8.981455219996128 9.123213179501246 9.249300817099959 9.361450293119797 9.46120228386669 9.549927149618556 9.628843763399464 9.699036258949111 9.761468927687295 9.816999469052123 9.866390776009919 9.91032141747425 9.949394961543641 9.984148267616037 10.01505886133626 10.04255149378142 10.06700397511403 10.0887523629804 10.10809557706868 10.12529950334794 10.14060064448243 10.15420936666026 10.16631278750965 10.17707734482451 10.18665108141763 10.19516567750408 10.20273825853654 10.20947300331982 10.21546257448146 10.22078939093027 10.22552675976181 10.2297398831377 10.23348675394868 10.2368189525444 10.2397823554553 10.24241776582515 10.24476147419906 10.24684575735725 10.24869932203573 10.25034769961979 10.25181359722432 10.25311720997739 10.25427649879197 10.25530743743748 10.25622423230241 10.25703951786453 10.2577645305526 10.25840926338683
 ]

Stringhe allocate: 1 (48405 interne); stringhe deallocate: 0 (48345 interne)


*** write_vn_d ***
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]

Stringhe allocate: 1 (48405 interne); stringhe deallocate: 0 (48345 interne)


*** write_vn_d ***
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]

Stringhe allocate: 1 (48405 interne); stringhe deallocate: 0 (48345 interne)


*** write_vn_d ***
parm1[j][i] (5 : 5): [ 1.040829206 0.833709414 1.036836698 0.989892399 1.171423905 ]

Stringhe allocate: 1 (48405 interne); stringhe deallocate: 0 (48345 interne)


*** write_vn_d ***
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]

Stringhe allocate: 1 (48405 interne); stringhe deallocate: 0 (48345 interne)


*** write_vn_d ***
parm1[j][i] (5 : 5): [ 12.67431725 9.032985081 12.19219754 9.171903361 10.26385753 ]

Stringhe allocate: 1 (48405 interne); stringhe deallocate: 0 (48345 interne)


*** write_vn_d ***
parm1[j][i] (5 : 5): [ 0.8988629876690203 0.86013003877782 0.7529666664997292 0.6820456255132146 0.8224436778595854 ]

Stringhe allocate: 1 (48405 interne); stringhe deallocate: 0 (48345 interne)


Stringhe allocate: 1 (48410 interne); stringhe deallocate: 0 (48380 interne)

Trasformo la lista ... ris (5 : 5): {
	ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
	ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
	ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
	ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
	ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
}

Trasformo il vettore ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
Trasformo il vettore ACCEDIlst(ris, i, vi) (1 : 1): [ 3 ]
Trasformo il vettore ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
Trasformo il vettore ACCEDIlst(ris, i, vi) (1 : 1): [ 4 ]
Trasformo il vettore ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
bene
------------------------------ Fine daLISTA

Trasformo la lista ... ris (5 : 5): {
	ris (5 x 51 : 5 x 51): [
	 11.39247467 11.32136497090479 11.20967759968374 11.06887844419829 10.91037718098909 10.74364034882551 10.57567312544832 10.41126008456024 10.25345444636913 10.10405882733323 9.964011601748585 9.833671142767193 9.713015982492523 9.601782626545365 9.499559311021931 9.405849319886443 9.320113472754345 9.241798399889207 9.1703551151284 9.105250955226607 9.04597697755878 8.992052248641166 8.943026009573513 8.898478400891108 8.858020221455455 8.8212920526912 8.787962979938683 8.757729073079132 8.730311739595276 8.705456028555572 8.682928939360009 8.662517771505529 8.644028539070959 8.627284464652961 8.612124561096586 8.59840230483981 8.585984401518429 8.574749642286561 8.564587847831769 8.555398896107102 8.547091829223181 8.539584034636484 8.532800495658382 8.526673106335782 8.521140045876461 8.516145207978893 8.511637680654602 8.507571272383759 8.503904080709553 8.500598099644735 8.497618862528304
	 7.769541808 7.651450110391709 7.494864728025863 7.310874231400702 7.110289661557959 6.902044286640972 6.692802128980945 6.487200319449647 6.288289585420429 6.09796104804412 5.917289843144481 5.746790018886927 5.586596217342267 5.436590677954714 5.296491238393567 5.165912096040775 5.044405702887236 4.931491610569685 4.826676267427653 4.729466516046315 4.639378684165077 4.555944579529463 4.478715302125343 4.407263515005992 4.341184627046694 4.280097210296754 4.223642882981614 4.171485824440993 4.123312042136203 4.078828477720088 4.03776201519861 3.999858436772288 3.964881359181367 3.932611173992711 3.902844008339597 3.875390717500922 3.850075916910878 3.826737058380794 3.805223553240621 3.785395943583838 3.767125121689559 3.750291596897148 3.734784808645304 3.720502484001535 3.707350037755566 3.695240012998193 3.684091560030105 3.673829951423747 3.664386131080575 3.655696295174641 3.647701502942489
	 9.180318338999999 9.47695609849988 9.744377792430381 9.985460648487996 10.20279835654411 10.39872891626136 10.57535969844234 10.73459000616381 10.87813138021657 11.00752587763699 11.12416253558207 11.2292922173063 11.32404102129977 11.4094224178695 11.48634825927544 11.55563879026154 11.61803176623691 11.67419076753385 11.72471278119165 11.77013510747907 11.81094163740796 11.84756853992547 11.88040939303829 11.90981979126591 11.93612146182293 11.95960592303341 11.98053771998963 11.99915727382133 12.0156833817465 12.03031540510827 12.04323518179346 12.05460869782335 12.06458755063354 12.07331023378971 12.08090326980451 12.08748221450501 12.09315255320483 12.09801050587986 12.10214375572324 12.10563211291751 12.10854812324047 12.11095762922111 12.1129202899728 12.1144900645295 12.11571566246762 12.11664096477755 12.11730541732095 12.1177443987391 12.11798956433469 12.11806916720631 12.11800835774937
	 6.255656565 6.503899153714699 6.714002684850754 6.887019682673687 7.025788840352431 7.134663975190223 7.218690960855422 7.282809159394295 7.331372789741835 7.367980711692745 7.395493254871671 7.416130690927796 7.43159205793186 7.443166313728332 7.451826124472535 7.458303046724721 7.463146137023085 7.466766918086361 7.469473552008872 7.471496660924854 7.473008765806975 7.474138886553984 7.474983490951884 7.475614697072713 7.476086413732723 7.476438935073652 7.476702377243914 7.476899248343913 7.477046369880007 7.477156313176079 7.477238473080832 7.477299870499237 7.47734575220491 7.477380039122728 7.477405661352768 7.477424808545004 7.477439117009792 7.477449809547948 7.477457799946645 7.477463771069339 7.47746823321218 7.477471567713462 7.47747405954265 7.477475921653878 7.477477313185073 7.477478353057966 7.47747913014123 7.477479710845266 7.477480144797699 7.477480469084599 7.477480711419896
	 8.441444735999999 8.642896534221928 8.822079496408291 8.981455219996128 9.123213179501246 9.249300817099959 9.361450293119797 9.46120228386669 9.549927149618556 9.628843763399464 9.699036258949111 9.761468927687295 9.816999469052123 9.866390776009919 9.91032141747425 9.949394961543641 9.984148267616037 10.01505886133626 10.04255149378142 10.06700397511403 10.0887523629804 10.10809557706868 10.12529950334794 10.14060064448243 10.15420936666026 10.16631278750965 10.17707734482451 10.18665108141763 10.19516567750408 10.20273825853654 10.20947300331982 10.21546257448146 10.22078939093027 10.22552675976181 10.2297398831377 10.23348675394868 10.2368189525444 10.2397823554553 10.24241776582515 10.24476147419906 10.24684575735725 10.24869932203573 10.25034769961979 10.25181359722432 10.25311720997739 10.25427649879197 10.25530743743748 10.25622423230241 10.25703951786453 10.2577645305526 10.25840926338683
 ]
	tmpm1_d (5 x 5 : 5 x 5): [
	 0 0 -1 0 0
	 0 0 -1 0 0
	 0 1 0 0 0
	 0 0 0 -1 0
	 1 0 0 0 0
 ]
	parm1[j][i] (5 : 5): [ 1.040829206 0.833709414 1.036836698 0.989892399 1.171423905 ]
	parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
	parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
}

Trasformo la matrice
ris (5 x 51 : 5 x 51): [
	 11.39247467 11.32136497090479 11.20967759968374 11.06887844419829 10.91037718098909 10.74364034882551 10.57567312544832 10.41126008456024 10.25345444636913 10.10405882733323 9.964011601748585 9.833671142767193 9.713015982492523 9.601782626545365 9.499559311021931 9.405849319886443 9.320113472754345 9.241798399889207 9.1703551151284 9.105250955226607 9.04597697755878 8.992052248641166 8.943026009573513 8.898478400891108 8.858020221455455 8.8212920526912 8.787962979938683 8.757729073079132 8.730311739595276 8.705456028555572 8.682928939360009 8.662517771505529 8.644028539070959 8.627284464652961 8.612124561096586 8.59840230483981 8.585984401518429 8.574749642286561 8.564587847831769 8.555398896107102 8.547091829223181 8.539584034636484 8.532800495658382 8.526673106335782 8.521140045876461 8.516145207978893 8.511637680654602 8.507571272383759 8.503904080709553 8.500598099644735 8.497618862528304
	 7.769541808 7.651450110391709 7.494864728025863 7.310874231400702 7.110289661557959 6.902044286640972 6.692802128980945 6.487200319449647 6.288289585420429 6.09796104804412 5.917289843144481 5.746790018886927 5.586596217342267 5.436590677954714 5.296491238393567 5.165912096040775 5.044405702887236 4.931491610569685 4.826676267427653 4.729466516046315 4.639378684165077 4.555944579529463 4.478715302125343 4.407263515005992 4.341184627046694 4.280097210296754 4.223642882981614 4.171485824440993 4.123312042136203 4.078828477720088 4.03776201519861 3.999858436772288 3.964881359181367 3.932611173992711 3.902844008339597 3.875390717500922 3.850075916910878 3.826737058380794 3.805223553240621 3.785395943583838 3.767125121689559 3.750291596897148 3.734784808645304 3.720502484001535 3.707350037755566 3.695240012998193 3.684091560030105 3.673829951423747 3.664386131080575 3.655696295174641 3.647701502942489
	 9.180318338999999 9.47695609849988 9.744377792430381 9.985460648487996 10.20279835654411 10.39872891626136 10.57535969844234 10.73459000616381 10.87813138021657 11.00752587763699 11.12416253558207 11.2292922173063 11.32404102129977 11.4094224178695 11.48634825927544 11.55563879026154 11.61803176623691 11.67419076753385 11.72471278119165 11.77013510747907 11.81094163740796 11.84756853992547 11.88040939303829 11.90981979126591 11.93612146182293 11.95960592303341 11.98053771998963 11.99915727382133 12.0156833817465 12.03031540510827 12.04323518179346 12.05460869782335 12.06458755063354 12.07331023378971 12.08090326980451 12.08748221450501 12.09315255320483 12.09801050587986 12.10214375572324 12.10563211291751 12.10854812324047 12.11095762922111 12.1129202899728 12.1144900645295 12.11571566246762 12.11664096477755 12.11730541732095 12.1177443987391 12.11798956433469 12.11806916720631 12.11800835774937
	 6.255656565 6.503899153714699 6.714002684850754 6.887019682673687 7.025788840352431 7.134663975190223 7.218690960855422 7.282809159394295 7.331372789741835 7.367980711692745 7.395493254871671 7.416130690927796 7.43159205793186 7.443166313728332 7.451826124472535 7.458303046724721 7.463146137023085 7.466766918086361 7.469473552008872 7.471496660924854 7.473008765806975 7.474138886553984 7.474983490951884 7.475614697072713 7.476086413732723 7.476438935073652 7.476702377243914 7.476899248343913 7.477046369880007 7.477156313176079 7.477238473080832 7.477299870499237 7.47734575220491 7.477380039122728 7.477405661352768 7.477424808545004 7.477439117009792 7.477449809547948 7.477457799946645 7.477463771069339 7.47746823321218 7.477471567713462 7.47747405954265 7.477475921653878 7.477477313185073 7.477478353057966 7.47747913014123 7.477479710845266 7.477480144797699 7.477480469084599 7.477480711419896
	 8.441444735999999 8.642896534221928 8.822079496408291 8.981455219996128 9.123213179501246 9.249300817099959 9.361450293119797 9.46120228386669 9.549927149618556 9.628843763399464 9.699036258949111 9.761468927687295 9.816999469052123 9.866390776009919 9.91032141747425 9.949394961543641 9.984148267616037 10.01505886133626 10.04255149378142 10.06700397511403 10.0887523629804 10.10809557706868 10.12529950334794 10.14060064448243 10.15420936666026 10.16631278750965 10.17707734482451 10.18665108141763 10.19516567750408 10.20273825853654 10.20947300331982 10.21546257448146 10.22078939093027 10.22552675976181 10.2297398831377 10.23348675394868 10.2368189525444 10.2397823554553 10.24241776582515 10.24476147419906 10.24684575735725 10.24869932203573 10.25034769961979 10.25181359722432 10.25311720997739 10.25427649879197 10.25530743743748 10.25622423230241 10.25703951786453 10.2577645305526 10.25840926338683
 ]
Trasformo la matrice
tmpm1_d (5 x 5 : 5 x 5): [
	 0 0 -1 0 0
	 0 0 -1 0 0
	 0 1 0 0 0
	 0 0 0 -1 0
	 1 0 0 0 0
 ]
Trasformo il vettore parm1[j][i] (5 : 5): [ 1.040829206 0.833709414 1.036836698 0.989892399 1.171423905 ]
Trasformo il vettore parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
Trasformo il vettore parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
bene
------------------------------ Fine daLISTA


Stringhe allocate: 1 (48410 interne); stringhe deallocate: 5 (48535 interne)

