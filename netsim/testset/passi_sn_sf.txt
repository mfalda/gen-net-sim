
*** simulatenet ***
Ho trasformato la stringa 'connectivity' che vale 'scale free'
Ho trasformato la stringa 'INdegree' che vale 'free'
Ho trasformato il vettore num_subnet (3 : 3): [ 5 5 10 ]
Ho trasformato la stringa 'formula' che vale ''
Ho trasformato il vettore Xmax (5 : 5): [ 10.000 10.000 10.000 10.000 10.000 ]
Ho trasformato il vettore lambda (2 : 2): [ 1.000 0.100 ]
Ho trasformato il vettore X0 (2 : 2): [ 0.000 1.000 ]
Ho trasformato il vettore weight_par (2 : 2): [ 1.000 0.000 ]
Ho trasformato la stringa 'act_fun' che vale 'sigmoidal'
Ho trasformato il vettore alpha (2 : 2): [ 10.000 0.200 ]
Ho trasformato il vettore beta (2 : 2): [ 0.500 0.010 ]
Ho trasformato il vettore times (5 : 5): [ 1.000 2.000 3.000 4.000 5.000 ]
Ho trasformato la stringa 'method' che vale 'Euler'
Ho trasformato il vettore param (5 : 5): [ 2 2 2 0 1 ]
226: copia_v_d
Xmax (5 : 5): [ 10.000 10.000 10.000 10.000 10.000 ]
start = 1
end = 5


parm1[j] (5 : 5): [ 10.000 10.000 10.000 10.000 10.000 ]
*****************************************

254: dividi1_vv_d
parm1[j] (5 : 5): [ 0.336 0.871 0.685 0.033 0.386 ]
parm1[j] (5 : 5): [ 2.669 18.260 8.229 13.476 5.121 ]


parm1[j] (5 : 5): [ 0.126 0.048 0.083 0.002 0.075 ]
*****************************************


*** simulatenet1 ***

*** connectivity_scalefree1 ***
24: seq_d
da = 1.000, a = 5.000, incremento = 1.000


tmp1_d (5 : 5): [ 1.000 2.000 3.000 4.000 5.000 ]
*****************************************

25: exp_d
tmp1_d (5 : 5): [ 1.000 2.000 3.000 4.000 5.000 ]
val = -12.000


tmp2_d (5 : 5): [ 1.000 0.000 0.000 0.000 0.000 ]
*****************************************

36: vettore2v_d
tmp1_d (5 : 5): [ 1.000 2.000 3.000 4.000 5.000 ]
scalare_d (1 : 1): [ 0.000 ]


Prob (6 : 6): [ 1.000 2.000 3.000 4.000 5.000 0.000 ]
*****************************************

38: somma_v_d
Prob (6 : 6): [ 1.000 2.000 3.000 4.000 5.000 0.000 ]
canc_NA = 0



ris: 15.000
*****************************************

38: dividi1_vs_d
Prob (6 : 6): [ 1.000 2.000 3.000 4.000 5.000 0.000 ]
div = 15.000


Prob (6 : 6): [ 0.067 0.133 0.200 0.267 0.333 0.000 ]
*****************************************

41: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 6


tmp2_d (6 : 16): [ 0.000 0.000 0.000 0.000 0.000 0.000 ]
*****************************************

43: vettore2v_d
scalare_d (1 : 1): [ 5.000 ]
tmp2_d (6 : 16): [ 0.000 0.000 0.000 0.000 0.000 0.000 ]


Freq_out (7 : 7): [ 5.000 0.000 0.000 0.000 0.000 0.000 0.000 ]
*****************************************

44: copia_v_d
Freq_out (7 : 7): [ 5.000 0.000 0.000 0.000 0.000 0.000 0.000 ]
start = 1
end = 7


Freq_in (7 : 7): [ 5.000 0.000 0.000 0.000 0.000 0.000 0.000 ]
*****************************************

46: moltiplica_vs_d
Prob (6 : 6): [ 0.067 0.133 0.200 0.267 0.333 0.000 ]
val = 5.000


tmp1_d (6 : 16): [ 0.333 0.667 1.000 1.333 1.667 0.000 ]
*****************************************

48: vettore2v_d
scalare_d (1 : 1): [ 1.#QO ]
tmp1_d (6 : 16): [ 0.333 0.667 1.000 1.333 1.667 0.000 ]


STout (7 : 7): [ 1.#QO 0.333 0.667 1.000 1.333 1.667 0.000 ]
*****************************************

49: copia_v_d
STout (7 : 7): [ 1.#QO 0.333 0.667 1.000 1.333 1.667 0.000 ]
start = 1
end = 7


STin (7 : 7): [ 1.#QO 0.333 0.667 1.000 1.333 1.667 0.000 ]
*****************************************

51: segmento_v_d
Prob (6 : 6): [ 0.067 0.133 0.200 0.267 0.333 0.000 ]
start = 1
end = 2


p (2 : 2): [ 0.067 0.133 ]
*****************************************

53: assegna_v_segms_d
STin (7 : 7): [ 1.#QO 0.333 0.667 1.000 1.333 1.667 0.000 ]
start = 4
end = 7
val = 0.000


STin (7 : 7): [ 1.#QO 0.333 0.667 0.000 0.000 0.000 0.000 ]
*****************************************

55: moltiplica_vs_d
p (2 : 2): [ 0.067 0.133 ]
val = 5.000


tmp2_d (2 : 16): [ 0.333 0.667 ]
*****************************************

57: somma_v_d
p (2 : 2): [ 0.067 0.133 ]
canc_NA = 0



ris: 0.200
*****************************************

57: dividi1_vs_d
tmp2_d (2 : 16): [ 0.333 0.667 ]
div = 0.200


tmp2_d (2 : 16): [ 1.667 3.333 ]
*****************************************

58: assegna_v_segmv_d
STin (7 : 7): [ 1.#QO 0.333 0.667 0.000 0.000 0.000 0.000 ]
start = 2
end = 3
tmp2_d (2 : 16): [ 1.667 3.333 ]


STin (7 : 7): [ 1.#QO 1.667 3.333 0.000 0.000 0.000 0.000 ]
*****************************************

63: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 7


tmp1_d (7 : 16): [ 0.000 0.000 0.000 0.000 0.000 0.000 0.000 ]
*****************************************

64: moltiplica_vs_d
STout (7 : 7): [ 1.#QO 0.333 0.667 1.000 1.333 1.667 0.000 ]
val = 1.000


tmp2_d (7 : 16): [ 1.#QO 0.333 0.667 1.000 1.333 1.667 0.000 ]
*****************************************

65: cbind2v_d
tmp2_d (7 : 16): [ 1.#QO 0.333 0.667 1.000 1.333 1.667 0.000 ]
tmp1_d (7 : 16): [ 0.000 0.000 0.000 0.000 0.000 0.000 0.000 ]


aus (7 x 2 : 7 x 2): [
	 1.#QO 0.000
	 0.333 0.000
	 0.667 0.000
	 1.000 0.000
	 1.333 0.000
	 1.667 0.000
	 0.000 0.000
 ]
*****************************************

67: max_righe_d
aus (7 x 2 : 7 x 2): [
	 1.#QO 0.000
	 0.333 0.000
	 0.667 0.000
	 1.000 0.000
	 1.333 0.000
	 1.667 0.000
	 0.000 0.000
 ]


toll_out (7 : 7): [ 1.#QO 0.333 0.667 1.000 1.333 1.667 0.000 ]
*****************************************

69: which_v_indxeq_d
STout (7 : 7): [ 1.#QO 0.333 0.667 1.000 1.333 1.667 0.000 ]
val = 0.000


tmp1_i (1 : 7): [ 7 ]
*****************************************

70: assegna1_v_indxv_d
toll_out (7 : 7): [ 1.#QO 0.333 0.667 1.000 1.333 1.667 0.000 ]
tmp1_i (1 : 7): [ 7 ]
val = 0.000


toll_out (7 : 7): [ 7.000 0.333 0.667 1.000 1.333 1.667 0.000 ]
*****************************************

73: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 7


tmp1_d (7 : 16): [ 0.000 0.000 0.000 0.000 0.000 0.000 0.000 ]
*****************************************

74: moltiplica_vs_d
STin (7 : 7): [ 0.000 1.667 3.333 0.000 0.000 0.000 0.000 ]
val = 1.000


tmp2_d (7 : 16): [ 0.000 1.667 3.333 0.000 0.000 0.000 0.000 ]
*****************************************

75: cbind2v_d
tmp2_d (7 : 16): [ 0.000 1.667 3.333 0.000 0.000 0.000 0.000 ]
tmp1_d (7 : 16): [ 0.000 0.000 0.000 0.000 0.000 0.000 0.000 ]


aus (7 x 2 : 7 x 2): [
	 0.000 0.000
	 1.667 0.000
	 3.333 0.000
	 0.000 0.000
	 0.000 0.000
	 0.000 0.000
	 0.000 0.000
 ]
*****************************************

77: max_righe_d
aus (7 x 2 : 7 x 2): [
	 0.000 0.000
	 1.667 0.000
	 3.333 0.000
	 0.000 0.000
	 0.000 0.000
	 0.000 0.000
	 0.000 0.000
 ]


toll_in (7 : 7): [ 0.000 1.667 3.333 0.000 0.000 0.000 0.000 ]
*****************************************

79: assegna1_v_indxeq_d
toll_in (7 : 7): [ 0.000 1.667 3.333 0.000 0.000 0.000 0.000 ]
val1 = 0.000
val2 = 0.000


toll_in (7 : 7): [ 0.000 1.667 3.333 0.000 0.000 0.000 0.000 ]
*****************************************

86: seq_i
da = 2, a = 5, incremento = 1


not_inthenet (4 : 4): [ 2 3 4 5 ]
*****************************************

99: somma_righe_i
Mdiscr (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]


Sin (5 : 5): [ 1 0 0 0 0 ]
*****************************************

101: max_v_i
Sin (5 : 5): [ 1 0 0 0 0 ]


max = 1
*****************************************

103: seq_i
da = 0, a = 2, incremento = 1


tmp2_i (3 : 3): [ 0 1 2 ]
*****************************************


*** hist ***
Sin (5 : 5): [ 1 0 0 0 0 ]
tmp2_i (3 : 3): [ 0 1 2 ]
right = 0
include_border = 1
naok = 0


tmp1_i (2 : 7): [ 4 1 ]

Stringhe allocate: 5 (185 interne); stringhe deallocate: 0 (0 interne)

105: promuovi_i
tmp1_i (2 : 7): [ 4 1 ]
ATTENZIONE (promuovi_i, linea connectivity_scalefree.c # 105): il vettore e` stato promosso da intero a double: i calcoli saranno rallentati!

tmp1_d (2 : 16): [ 4.000 1.000 ]
*****************************************

106: assegna_v_segmv_d
Freq_in (7 : 7): [ 5.000 0.000 0.000 0.000 0.000 0.000 0.000 ]
start = 1
end = 2
tmp1_d (2 : 16): [ 4.000 1.000 ]


Freq_in (7 : 7): [ 4.000 1.000 0.000 0.000 0.000 0.000 0.000 ]
*****************************************

108: somma_colonne_i
Mdiscr (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]


Sout (5 : 5): [ 0 1 0 0 0 ]
*****************************************

110: max_v_i
Sout (5 : 5): [ 0 1 0 0 0 ]


max = 1
*****************************************

112: seq_i
da = 0, a = 2, incremento = 1


tmp2_i (3 : 3): [ 0 1 2 ]
*****************************************


*** hist ***
Sout (5 : 5): [ 0 1 0 0 0 ]
tmp2_i (3 : 3): [ 0 1 2 ]
right = 0
include_border = 1
naok = 0


tmp1_i (2 : 7): [ 4 1 ]

Stringhe allocate: 5 (191 interne); stringhe deallocate: 0 (1 interne)

114: promuovi_i
tmp1_i (2 : 7): [ 4 1 ]
ATTENZIONE (promuovi_i, linea connectivity_scalefree.c # 114): il vettore e` stato promosso da intero a double: i calcoli saranno rallentati!

tmp1_d (2 : 16): [ 4.000 1.000 ]
*****************************************

115: assegna_v_segmv_d
Freq_out (7 : 7): [ 5.000 0.000 0.000 0.000 0.000 0.000 0.000 ]
start = 1
end = 2
tmp1_d (2 : 16): [ 4.000 1.000 ]


Freq_out (7 : 7): [ 4.000 1.000 0.000 0.000 0.000 0.000 0.000 ]
*****************************************

119: f_aux1_d
Freq_in (7 : 7): [ 4.000 1.000 0.000 0.000 0.000 0.000 0.000 ]
STin (7 : 7): [ 0.000 1.667 3.333 0.000 0.000 0.000 0.000 ]
toll_in (7 : 7): [ 0.000 1.667 3.333 0.000 0.000 0.000 0.000 ]
da = 2
a = 2
sgn1 = -1
sgn2 = -1


tmp1_d (1 : 16): [ -2.333 ]
*****************************************

121: assegna1_v_indxNA_d
tmp1_d (1 : 16): [ -2.333 ]
val = 1.000
complemento = 0


tmp1_d (1 : 16): [ -2.333 ]
*****************************************

123: which_v_indxlt_d
tmp1_d (1 : 16): [ -2.333 ]
val = 0.000

numposs (1 : 1): [ 1 ]
*****************************************

129: f_aux1_d
Freq_in (7 : 7): [ 4.000 1.000 0.000 0.000 0.000 0.000 0.000 ]
STin (7 : 7): [ 0.000 1.667 3.333 0.000 0.000 0.000 0.000 ]
toll_in (7 : 7): [ 0.000 1.667 3.333 0.000 0.000 0.000 0.000 ]
da = 2
a = 2
sgn1 = -1
sgn2 = 1


tmp1_d (1 : 16): [ 1.000 ]
*****************************************

131: assegna1_v_indxNA_d
tmp1_d (1 : 16): [ 1.000 ]
val = 1.000
complemento = 0


tmp1_d (1 : 16): [ 1.000 ]
*****************************************

133: copia_v_d
tmp1_d (1 : 16): [ 1.000 ]
start = 1
end = 1


tmp2_d (1 : 16): [ 1.000 ]
*****************************************

135: which_v_indxlt_d
tmp2_d (1 : 16): [ 1.000 ]
val = 0.000

primi (0 : 1): [ ]
*****************************************

149: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


p (1 : 2): [ 0.000 ]
*****************************************


*** score_sf1 ***
21: somma_vs_i
tmp1_i (1 : 7): [ 0 ]
s = 1.000


S_new (1 : 1): [ 1 ]
*****************************************

23: somma_vs_i
tmp1_i (1 : 7): [ 0 ]
s = 1.000


tmp_i1 (1 : 1): [ 1 ]
*****************************************

24: assegna_v_indxNA_d
STin (7 : 7): [ 0.000 1.667 3.333 0.000 0.000 0.000 0.000 ]
tmp_i1 (1 : 1): [ 1 ]


T1 (1 : 1): [ 0.000 ]
*****************************************

26: somma_vs_i
S_new (1 : 1): [ 1 ]
s = 1.000


tmp_i1 (1 : 1): [ 2 ]
*****************************************

27: assegna_v_indxNA_d
STin (7 : 7): [ 0.000 1.667 3.333 0.000 0.000 0.000 0.000 ]
tmp_i1 (1 : 1): [ 2 ]


T2 (1 : 1): [ 1.667 ]
*****************************************

29: somma_vs_i
tmp1_i (1 : 7): [ 0 ]
s = 1.000


tmp_i1 (1 : 1): [ 1 ]
*****************************************

30: assegna_v_indxNA_d
Freq_in (7 : 7): [ 4.000 1.000 0.000 0.000 0.000 0.000 0.000 ]
tmp_i1 (1 : 1): [ 1 ]


old1 (1 : 1): [ 4.000 ]
*****************************************

32: somma_vs_i
S_new (1 : 1): [ 1 ]
s = 1.000


tmp_i1 (1 : 1): [ 2 ]
*****************************************

33: assegna_v_indxNA_d
Freq_in (7 : 7): [ 4.000 1.000 0.000 0.000 0.000 0.000 0.000 ]
tmp_i1 (1 : 1): [ 2 ]


old2 (1 : 1): [ 1.000 ]
*****************************************

35: somma_vs_d
old1 (1 : 1): [ 4.000 ]
s = -1.000


new1 (1 : 1): [ 3.000 ]
*****************************************

37: somma_vs_d
old2 (1 : 1): [ 1.000 ]
s = 1.000


new2 (1 : 1): [ 2.000 ]
*****************************************

39: somma_vs_i
tmp1_i (1 : 7): [ 0 ]
s = 1.000


tmp_i1 (1 : 1): [ 1 ]
*****************************************

40: assegna_v_indx_d
toll_in (7 : 7): [ 0.000 1.667 3.333 0.000 0.000 0.000 0.000 ]
tmp_i1 (1 : 1): [ 1 ]


toll1 (1 : 1): [ 0.000 ]
*****************************************

42: somma_vs_i
S_new (1 : 1): [ 1 ]
s = 1.000


tmp_i2 (1 : 1): [ 2 ]
*****************************************

43: assegna_v_indx_d
toll_in (7 : 7): [ 0.000 1.667 3.333 0.000 0.000 0.000 0.000 ]
tmp_i2 (1 : 1): [ 2 ]


toll2 (1 : 1): [ 1.667 ]
*****************************************

45: diff_vv_d
old1 (1 : 1): [ 4.000 ]
T1 (1 : 1): [ 0.000 ]


a (1 : 1): [ 4.000 ]
*****************************************

46: abs1_v_d
a (1 : 1): [ 4.000 ]


a (1 : 1): [ 4.000 ]
*****************************************

48: diff_vv_d
new1 (1 : 1): [ 3.000 ]
T1 (1 : 1): [ 0.000 ]


b (1 : 1): [ 3.000 ]
*****************************************

49: abs1_v_d
b (1 : 1): [ 3.000 ]


b (1 : 1): [ 3.000 ]
*****************************************

51: which_v_indxna_d
T1 (1 : 1): [ 0.000 ]
complemento = 0


ind (0 : 1): [ ]
*****************************************

55: assegna1_vs_indx_d
a (1 : 1): [ 4.000 ]
ind (0 : 1): [ ]
val = 0.000


a (1 : 1): [ 4.000 ]
*****************************************

57: assegna1_vs_indx_d
b (1 : 1): [ 3.000 ]
ind (0 : 1): [ ]
val = 0.000


b (1 : 1): [ 3.000 ]
*****************************************

59: cbind2v_d
a (1 : 1): [ 4.000 ]
b (1 : 1): [ 3.000 ]


tmpm_d (1 x 2 : 1 x 2): [
	 4.000 3.000
 ]
*****************************************

60: max_righe_d
tmpm_d (1 x 2 : 1 x 2): [
	 4.000 3.000
 ]


m (1 : 1): [ 4.000 ]
*****************************************

62: f_aux_d
a (1 : 1): [ 4.000 ]
b (1 : 1): [ 3.000 ]
m (1 : 1): [ 4.000 ]
T1 (1 : 1): [ 0.000 ]
ATTENZIONE (f_aux_d, linea score_sf.c # 62): l'elemento 1 ha provocato una divisione per zero e gli e` stato assegnato un valore al di fuori del dominio!


S1 (1 : 1): [ 1.#IO ]
*****************************************

64: diff_vv_d
b (1 : 1): [ 3.000 ]
toll1 (1 : 1): [ 0.000 ]


tmp_d1 (1 : 1): [ 3.000 ]
*****************************************

65: which_v_indxgt_d
tmp_d1 (1 : 1): [ 3.000 ]
val = 0.000


indbad (1 : 1): [ 1 ]
*****************************************

69: diff_vv_d
a (1 : 1): [ 4.000 ]
toll1 (1 : 1): [ 0.000 ]


tmp_d1 (1 : 1): [ 4.000 ]
*****************************************

70: which_v_indxlt_d
tmp_d1 (1 : 1): [ 4.000 ]
val = 0.000

ind1 (0 : 1): [ ]
*****************************************

72: f_aux2_d
old1 (1 : 1): [ 4.000 ]
new1 (1 : 1): [ 3.000 ]
T1 (1 : 1): [ 0.000 ]


ind2 (0 : 1): [ ]
*****************************************

74: f_aux3_d
a (1 : 1): [ 4.000 ]
toll1 (1 : 1): [ 0.000 ]
b (1 : 1): [ 3.000 ]


ind3 (0 : 1): [ ]
*****************************************

76: unione1_i
ind1 (0 : 1): [ ]
ind2 (0 : 1): [ ]
2858: elimina_doppi_i
ind1 (0 : 0): [ ]


ris (0 : 0): [ ]
*****************************************



ris (0 : 0): [ ]
*****************************************

77: unione_i
ind3 (0 : 1): [ ]
ris (0 : 0): [ ]
4663: elimina_doppi_i
ind0 (0 : 0): [ ]


ris (0 : 0): [ ]
*****************************************



ris (0 : 0): [ ]
*****************************************

79: which_v_indxlt_d
new1 (1 : 1): [ 3.000 ]
val = 0.000

tmp_i1 (0 : 1): [ ]
*****************************************

80: interseca_i
ris (0 : 0): [ ]
indbad (1 : 1): [ 1 ]


tmp_i2 (0 : 0): [ ]
*****************************************

81: unione_i
tmp_i2 (0 : 0): [ ]
tmp_i1 (0 : 1): [ ]
4663: elimina_doppi_i
indinf (0 : 0): [ ]


ris (0 : 0): [ ]
*****************************************



ris (0 : 0): [ ]
*****************************************

82: assegna1_vs_indx_d
S1 (1 : 1): [ 1.#IO ]
ris (0 : 0): [ ]
val = -1.#IO


S1 (1 : 1): [ 1.#IO ]
*****************************************

86: assegna1_vs_indx_d
S1 (1 : 1): [ 1.#IO ]
ind (0 : 1): [ ]
val = 0.000


S1 (1 : 1): [ 1.#IO ]
*****************************************

95: somma_v_d
STin (7 : 7): [ 0.000 1.667 3.333 0.000 0.000 0.000 0.000 ]
canc_NA = 1



ris: 5.000
*****************************************

96: assegna1_v_indxeq_d
S1 (1 : 1): [ 1.#IO ]
val1 = 1.#IO
val2 = 5.000


S1 (1 : 1): [ 5.000 ]
*****************************************

99: diff_vv_d
old2 (1 : 1): [ 1.000 ]
T2 (1 : 1): [ 1.667 ]


a (1 : 1): [ -0.667 ]
*****************************************

100: abs1_v_d
a (1 : 1): [ -0.667 ]


a (1 : 1): [ 0.667 ]
*****************************************

102: diff_vv_d
new2 (1 : 1): [ 2.000 ]
T2 (1 : 1): [ 1.667 ]


b (1 : 1): [ 0.333 ]
*****************************************

103: abs1_v_d
b (1 : 1): [ 0.333 ]


b (1 : 1): [ 0.333 ]
*****************************************

105: cbind2v_d
a (1 : 1): [ 0.667 ]
b (1 : 1): [ 0.333 ]


tmpm_d (1 x 2 : 1 x 2): [
	 0.667 0.333
 ]
*****************************************

106: max_righe_d
tmpm_d (1 x 2 : 1 x 2): [
	 0.667 0.333
 ]


m (1 : 1): [ 0.667 ]
*****************************************

108: which_v_indxna_d
T2 (1 : 1): [ 1.667 ]
complemento = 0


ind (0 : 1): [ ]
*****************************************

112: assegna1_vs_indx_d
a (1 : 1): [ 0.667 ]
ind (0 : 1): [ ]
val = 0.000


a (1 : 1): [ 0.667 ]
*****************************************

114: assegna1_vs_indx_d
b (1 : 1): [ 0.333 ]
ind (0 : 1): [ ]
val = 0.000


b (1 : 1): [ 0.333 ]
*****************************************

116: cbind2v_d
a (1 : 1): [ 0.667 ]
b (1 : 1): [ 0.333 ]


tmpm_d (1 x 2 : 1 x 2): [
	 0.667 0.333
 ]
*****************************************

117: max_righe_d
tmpm_d (1 x 2 : 1 x 2): [
	 0.667 0.333
 ]


m (1 : 1): [ 0.667 ]
*****************************************

119: f_aux_d
a (1 : 1): [ 0.667 ]
b (1 : 1): [ 0.333 ]
m (1 : 1): [ 0.667 ]
T2 (1 : 1): [ 1.667 ]


S2 (1 : 1): [ 0.400 ]
*****************************************

121: diff_vv_d
b (1 : 1): [ 0.333 ]
toll2 (1 : 1): [ 1.667 ]


tmp_d1 (1 : 1): [ -1.333 ]
*****************************************

122: which_v_indxgt_d
tmp_d1 (1 : 1): [ -1.333 ]
val = 0.000


indbad (0 : 1): [ ]
*****************************************

142: assegna1_vs_indx_d
S2 (1 : 1): [ 0.400 ]
ind (0 : 1): [ ]
val = 0.000


S2 (1 : 1): [ 0.400 ]
*****************************************

151: which_v_indxeq_d
T2 (1 : 1): [ 1.667 ]
val = 0.000


ind (0 : 1): [ ]
*****************************************

153: assegna1_vs_indx_d
S2 (1 : 1): [ 0.400 ]
ind (0 : 1): [ ]
val = -1.#IO


S2 (1 : 1): [ 0.400 ]
*****************************************

155: somma_vv_d
S1 (1 : 1): [ 5.000 ]
S2 (1 : 1): [ 0.400 ]


tmp1_d (1 : 16): [ 5.400 ]
*****************************************

156: dividi1_vs_d
tmp1_d (1 : 16): [ 5.400 ]
div = 2.000


tmp1_d (1 : 16): [ 2.700 ]
*****************************************


Stringhe allocate: 5 (353 interne); stringhe deallocate: 0 (153 interne)

158: which_v_indxeq_d
p (1 : 2): [ 2.700 ]
val = -1.#IO


indInf (0 : 1): [ ]
*****************************************

160: assegna1_v_indxv_d
p (1 : 2): [ 2.700 ]
indInf (0 : 1): [ ]
val = 0.000


p (1 : 2): [ 2.700 ]
*****************************************

162: min_v_d
p (1 : 2): [ 2.700 ]


min = 2.700
*****************************************

165: assegna1_v_indxv_d
p (1 : 2): [ 2.700 ]
indInf (0 : 1): [ ]
val = 0.000


p (1 : 2): [ 2.700 ]
*****************************************

168: somma_v_d
p (1 : 2): [ 2.700 ]
canc_NA = 0



ris: 2.700
*****************************************

170: seq_i
da = 1, a = 1, incremento = 1


tmp1_i (1 : 7): [ 1 ]
*****************************************

171: dividi_vs_d
p (1 : 2): [ 2.700 ]
div = 2.700


tmp1_d (1 : 16): [ 1.000 ]
*****************************************


*** sampleB_p ***
12: rep_i
tmp1_i (1 : 7): [ 1 ]
ripetizioni = 1


ris (1 : 1): [ 1 ]
*****************************************

189: elimina_doppi_i
give_outlink (0 : 0): [ ]


aus_give_outlink (0 : 0): [ ]
*****************************************

213: somma_colonne_i
Mdiscr (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]


Sout (5 : 5): [ 0 1 0 0 0 ]
*****************************************

215: max_v_i
Sout (5 : 5): [ 0 1 0 0 0 ]


max = 1
*****************************************

217: seq_i
da = 0, a = 2, incremento = 1


tmp2_i (3 : 3): [ 0 1 2 ]
*****************************************


*** hist ***
Sout (5 : 5): [ 0 1 0 0 0 ]
tmp2_i (3 : 3): [ 0 1 2 ]
right = 0
include_border = 1
naok = 0


tmp1_i (2 : 7): [ 4 1 ]

Stringhe allocate: 5 (373 interne); stringhe deallocate: 0 (153 interne)

219: promuovi_i
tmp1_i (2 : 7): [ 4 1 ]
ATTENZIONE (promuovi_i, linea connectivity_scalefree.c # 219): il vettore e` stato promosso da intero a double: i calcoli saranno rallentati!

tmp1_d (2 : 16): [ 4.000 1.000 ]
*****************************************

220: assegna_v_segmv_d
Freq_out (7 : 7): [ 4.000 1.000 0.000 0.000 0.000 0.000 0.000 ]
start = 1
end = 2
tmp1_d (2 : 16): [ 4.000 1.000 ]


Freq_out (7 : 7): [ 4.000 1.000 0.000 0.000 0.000 0.000 0.000 ]
*****************************************

222: copia_v_indx_i
Sout (5 : 5): [ 0 1 0 0 0 ]
inthenet (1 : 1): [ 1 ]


tmp1_i (1 : 7): [ 0 ]
*****************************************


*** score_sf1 ***
21: somma_vs_i
tmp1_i (1 : 7): [ 0 ]
s = 1.000


S_new (1 : 1): [ 1 ]
*****************************************

23: somma_vs_i
tmp1_i (1 : 7): [ 0 ]
s = 1.000


tmp_i1 (1 : 1): [ 1 ]
*****************************************

24: assegna_v_indxNA_d
STout (7 : 7): [ 1.#QO 0.333 0.667 1.000 1.333 1.667 0.000 ]
tmp_i1 (1 : 1): [ 1 ]


T1 (1 : 1): [ 1.#QO ]
*****************************************

26: somma_vs_i
S_new (1 : 1): [ 1 ]
s = 1.000


tmp_i1 (1 : 1): [ 2 ]
*****************************************

27: assegna_v_indxNA_d
STout (7 : 7): [ 1.#QO 0.333 0.667 1.000 1.333 1.667 0.000 ]
tmp_i1 (1 : 1): [ 2 ]


T2 (1 : 1): [ 0.333 ]
*****************************************

29: somma_vs_i
tmp1_i (1 : 7): [ 0 ]
s = 1.000


tmp_i1 (1 : 1): [ 1 ]
*****************************************

30: assegna_v_indxNA_d
Freq_out (7 : 7): [ 4.000 1.000 0.000 0.000 0.000 0.000 0.000 ]
tmp_i1 (1 : 1): [ 1 ]


old1 (1 : 1): [ 4.000 ]
*****************************************

32: somma_vs_i
S_new (1 : 1): [ 1 ]
s = 1.000


tmp_i1 (1 : 1): [ 2 ]
*****************************************

33: assegna_v_indxNA_d
Freq_out (7 : 7): [ 4.000 1.000 0.000 0.000 0.000 0.000 0.000 ]
tmp_i1 (1 : 1): [ 2 ]


old2 (1 : 1): [ 1.000 ]
*****************************************

35: somma_vs_d
old1 (1 : 1): [ 4.000 ]
s = -1.000


new1 (1 : 1): [ 3.000 ]
*****************************************

37: somma_vs_d
old2 (1 : 1): [ 1.000 ]
s = 1.000


new2 (1 : 1): [ 2.000 ]
*****************************************

39: somma_vs_i
tmp1_i (1 : 7): [ 0 ]
s = 1.000


tmp_i1 (1 : 1): [ 1 ]
*****************************************

40: assegna_v_indx_d
toll_out (7 : 7): [ 7.000 0.333 0.667 1.000 1.333 1.667 0.000 ]
tmp_i1 (1 : 1): [ 1 ]


toll1 (1 : 1): [ 7.000 ]
*****************************************

42: somma_vs_i
S_new (1 : 1): [ 1 ]
s = 1.000


tmp_i2 (1 : 1): [ 2 ]
*****************************************

43: assegna_v_indx_d
toll_out (7 : 7): [ 7.000 0.333 0.667 1.000 1.333 1.667 0.000 ]
tmp_i2 (1 : 1): [ 2 ]


toll2 (1 : 1): [ 0.333 ]
*****************************************

45: diff_vv_d
old1 (1 : 1): [ 4.000 ]
T1 (1 : 1): [ 1.#QO ]


a (1 : 1): [ 1.#QO ]
*****************************************

46: abs1_v_d
a (1 : 1): [ 1.#QO ]


a (1 : 1): [ 1.#QO ]
*****************************************

48: diff_vv_d
new1 (1 : 1): [ 3.000 ]
T1 (1 : 1): [ 1.#QO ]


b (1 : 1): [ 1.#QO ]
*****************************************

49: abs1_v_d
b (1 : 1): [ 1.#QO ]


b (1 : 1): [ 1.#QO ]
*****************************************

51: which_v_indxna_d
T1 (1 : 1): [ 1.#QO ]
complemento = 0


ind (1 : 1): [ 1 ]
*****************************************

92: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


S1 (1 : 1): [ 0.000 ]
*****************************************

95: somma_v_d
STout (7 : 7): [ 1.#QO 0.333 0.667 1.000 1.333 1.667 0.000 ]
canc_NA = 1



ris: 5.000
*****************************************

96: assegna1_v_indxeq_d
S1 (1 : 1): [ 0.000 ]
val1 = 1.#IO
val2 = 5.000


S1 (1 : 1): [ 0.000 ]
*****************************************

99: diff_vv_d
old2 (1 : 1): [ 1.000 ]
T2 (1 : 1): [ 0.333 ]


a (1 : 1): [ 0.667 ]
*****************************************

100: abs1_v_d
a (1 : 1): [ 0.667 ]


a (1 : 1): [ 0.667 ]
*****************************************

102: diff_vv_d
new2 (1 : 1): [ 2.000 ]
T2 (1 : 1): [ 0.333 ]


b (1 : 1): [ 1.667 ]
*****************************************

103: abs1_v_d
b (1 : 1): [ 1.667 ]


b (1 : 1): [ 1.667 ]
*****************************************

105: cbind2v_d
a (1 : 1): [ 0.667 ]
b (1 : 1): [ 1.667 ]


tmpm_d (1 x 2 : 1 x 2): [
	 0.667 1.667
 ]
*****************************************

106: max_righe_d
tmpm_d (1 x 2 : 1 x 2): [
	 0.667 1.667
 ]


m (1 : 1): [ 1.667 ]
*****************************************

108: which_v_indxna_d
T2 (1 : 1): [ 0.333 ]
complemento = 0


ind (0 : 1): [ ]
*****************************************

112: assegna1_vs_indx_d
a (1 : 1): [ 0.667 ]
ind (0 : 1): [ ]
val = 0.000


a (1 : 1): [ 0.667 ]
*****************************************

114: assegna1_vs_indx_d
b (1 : 1): [ 1.667 ]
ind (0 : 1): [ ]
val = 0.000


b (1 : 1): [ 1.667 ]
*****************************************

116: cbind2v_d
a (1 : 1): [ 0.667 ]
b (1 : 1): [ 1.667 ]


tmpm_d (1 x 2 : 1 x 2): [
	 0.667 1.667
 ]
*****************************************

117: max_righe_d
tmpm_d (1 x 2 : 1 x 2): [
	 0.667 1.667
 ]


m (1 : 1): [ 1.667 ]
*****************************************

119: f_aux_d
a (1 : 1): [ 0.667 ]
b (1 : 1): [ 1.667 ]
m (1 : 1): [ 1.667 ]
T2 (1 : 1): [ 0.333 ]


S2 (1 : 1): [ -5.000 ]
*****************************************

121: diff_vv_d
b (1 : 1): [ 1.667 ]
toll2 (1 : 1): [ 0.333 ]


tmp_d1 (1 : 1): [ 1.333 ]
*****************************************

122: which_v_indxgt_d
tmp_d1 (1 : 1): [ 1.333 ]
val = 0.000


indbad (1 : 1): [ 1 ]
*****************************************

126: diff_vv_d
a (1 : 1): [ 0.667 ]
toll2 (1 : 1): [ 0.333 ]


tmp_d1 (1 : 1): [ 0.333 ]
*****************************************

127: which_v_indxle_d
tmp_d1 (1 : 1): [ 0.333 ]
val = 0.000


ind1 (0 : 1): [ ]
*****************************************

129: f_aux2_d
old2 (1 : 1): [ 1.000 ]
new2 (1 : 1): [ 2.000 ]
T2 (1 : 1): [ 0.333 ]


ind2 (0 : 1): [ ]
*****************************************

131: f_aux3_d
a (1 : 1): [ 0.667 ]
toll2 (1 : 1): [ 0.333 ]
b (1 : 1): [ 1.667 ]


ind3 (1 : 1): [ 1 ]
*****************************************

133: unione1_i
ind1 (0 : 1): [ ]
ind2 (0 : 1): [ ]
2858: elimina_doppi_i
ind1 (0 : 0): [ ]


ris (0 : 0): [ ]
*****************************************



ris (0 : 0): [ ]
*****************************************

134: unione_i
ind3 (1 : 1): [ 1 ]
ris (0 : 0): [ ]
4663: elimina_doppi_i
ind0 (1 : 1): [ 1 ]


ris (1 : 1): [ 1 ]
*****************************************



ris (1 : 1): [ 1 ]
*****************************************

136: interseca_i
ris (1 : 1): [ 1 ]
indbad (1 : 1): [ 1 ]
2306: esiste_v_i
el = 1
indbad (1 : 1): [ 1 ]


indx = 1
*****************************************

2307: esiste_v_i
el = 1
indinf (1 : 1): [ 37874248 ]


indx = 0
*****************************************



indinf (1 : 1): [ 1 ]
*****************************************

138: assegna1_vs_indx_d
S2 (1 : 1): [ -5.000 ]
indinf (1 : 1): [ 1 ]
val = -1.#IO


S2 (1 : 1): [ -1.#IO ]
*****************************************

142: assegna1_vs_indx_d
S2 (1 : 1): [ -1.#IO ]
ind (0 : 1): [ ]
val = 0.000


S2 (1 : 1): [ -1.#IO ]
*****************************************

151: which_v_indxeq_d
T2 (1 : 1): [ 0.333 ]
val = 0.000


ind (0 : 1): [ ]
*****************************************

153: assegna1_vs_indx_d
S2 (1 : 1): [ -1.#IO ]
ind (0 : 1): [ ]
val = -1.#IO


S2 (1 : 1): [ -1.#IO ]
*****************************************

155: somma_vv_d
S1 (1 : 1): [ 0.000 ]
S2 (1 : 1): [ -1.#IO ]


Sc (1 : 1): [ -1.#IO ]
*****************************************

156: dividi1_vs_d
Sc (1 : 1): [ -1.#IO ]
div = 2.000


Sc (1 : 1): [ -1.#IO ]
*****************************************


Stringhe allocate: 5 (524 interne); stringhe deallocate: 0 (299 interne)

225: which_v_indxeq_d
Sc (1 : 1): [ -1.#IO ]
val = -1.#IO


indInf (1 : 1): [ 1 ]
*****************************************

227: assegna1_v_indxv_d
Sc (1 : 1): [ -1.#IO ]
indInf (1 : 1): [ 1 ]
val = 0.000


Sc (1 : 1): [ 1.000 ]
*****************************************

229: min_v_d
Sc (1 : 1): [ 1.000 ]


min = 1.000
*****************************************

232: assegna1_v_indxv_d
Sc (1 : 1): [ 1.000 ]
indInf (1 : 1): [ 1 ]
val = 0.000


Sc (1 : 1): [ 1.000 ]
*****************************************

234: which_v_indxgt_d
Sc (1 : 1): [ 1.000 ]
val = 0.000


tmp1_i (1 : 7): [ 1 ]
*****************************************

235: setdiff_i
tmp1_i (1 : 7): [ 1 ]
linked (0 : 1): [ ]
2944: copia_v_i
tmp1_i (1 : 7): [ 1 ]
start = 1
end = 1


ind (1 : 1): [ 1 ]
*****************************************



ind (1 : 1): [ 1 ]
*****************************************

241: copia_v_indx_d
Sc (1 : 1): [ 1.000 ]
ind (1 : 1): [ 1 ]


tmp1_d (1 : 16): [ 1.000 ]
*****************************************

242: somma_v_d
tmp1_d (1 : 16): [ 1.000 ]
canc_NA = 0



ris: 1.000
*****************************************

242: dividi_vs_d
tmp1_d (1 : 16): [ 1.000 ]
div = 1.000


p_ind (1 : 1): [ 1.000 ]
*****************************************


*** sampleB_p ***
12: rep_i
ind (1 : 1): [ 1 ]
ripetizioni = 1


ris (1 : 1): [ 1 ]
*****************************************

246: assegna1_ms_rigaindx_i
Mdiscr (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 2
ris (1 : 1): [ 1 ]
val = 1


Mdiscr (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 1 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
*****************************************

251: accoda1_vv_i
linked (0 : 1): [ ]
ris (1 : 1): [ 1 ]


linked (1 : 1): [ 1 ]
*****************************************

334: somma_riga_i
Mdiscr (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 1 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 2


ris: 1
*****************************************

335: accoda1_vs_i
inthenet (1 : 1): [ 1 ]
s: 2
ATTENZIONE (accoda1_vs_i, linea connectivity_scalefree.c # 335): ingrandito il vettore da 1 a 2


inthenet (2 : 4): [ 1 2 ]
*****************************************

99: somma_righe_i
Mdiscr (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 1 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]


Sin (5 : 5): [ 1 1 0 0 0 ]
*****************************************

101: max_v_i
Sin (5 : 5): [ 1 1 0 0 0 ]


max = 1
*****************************************

103: seq_i
da = 0, a = 2, incremento = 1


tmp2_i (3 : 3): [ 0 1 2 ]
*****************************************


*** hist ***
Sin (5 : 5): [ 1 1 0 0 0 ]
tmp2_i (3 : 3): [ 0 1 2 ]
right = 0
include_border = 1
naok = 0


tmp1_i (2 : 7): [ 3 2 ]

Stringhe allocate: 5 (545 interne); stringhe deallocate: 0 (305 interne)

105: promuovi_i
tmp1_i (2 : 7): [ 3 2 ]
ATTENZIONE (promuovi_i, linea connectivity_scalefree.c # 105): il vettore e` stato promosso da intero a double: i calcoli saranno rallentati!

tmp1_d (2 : 16): [ 3.000 2.000 ]
*****************************************

106: assegna_v_segmv_d
Freq_in (7 : 7): [ 4.000 1.000 0.000 0.000 0.000 0.000 0.000 ]
start = 1
end = 2
tmp1_d (2 : 16): [ 3.000 2.000 ]


Freq_in (7 : 7): [ 3.000 2.000 0.000 0.000 0.000 0.000 0.000 ]
*****************************************

108: somma_colonne_i
Mdiscr (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 1 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]


Sout (5 : 5): [ 1 1 0 0 0 ]
*****************************************

110: max_v_i
Sout (5 : 5): [ 1 1 0 0 0 ]


max = 1
*****************************************

112: seq_i
da = 0, a = 2, incremento = 1


tmp2_i (3 : 3): [ 0 1 2 ]
*****************************************


*** hist ***
Sout (5 : 5): [ 1 1 0 0 0 ]
tmp2_i (3 : 3): [ 0 1 2 ]
right = 0
include_border = 1
naok = 0


tmp1_i (2 : 7): [ 3 2 ]

Stringhe allocate: 5 (546 interne); stringhe deallocate: 0 (306 interne)

114: promuovi_i
tmp1_i (2 : 7): [ 3 2 ]
ATTENZIONE (promuovi_i, linea connectivity_scalefree.c # 114): il vettore e` stato promosso da intero a double: i calcoli saranno rallentati!

tmp1_d (2 : 16): [ 3.000 2.000 ]
*****************************************

115: assegna_v_segmv_d
Freq_out (7 : 7): [ 4.000 1.000 0.000 0.000 0.000 0.000 0.000 ]
start = 1
end = 2
tmp1_d (2 : 16): [ 3.000 2.000 ]


Freq_out (7 : 7): [ 3.000 2.000 0.000 0.000 0.000 0.000 0.000 ]
*****************************************

119: f_aux1_d
Freq_in (7 : 7): [ 3.000 2.000 0.000 0.000 0.000 0.000 0.000 ]
STin (7 : 7): [ 0.000 1.667 3.333 0.000 0.000 0.000 0.000 ]
toll_in (7 : 7): [ 0.000 1.667 3.333 0.000 0.000 0.000 0.000 ]
da = 2
a = 3
sgn1 = -1
sgn2 = -1


tmp1_d (2 : 16): [ -1.333 -6.667 ]
*****************************************

121: assegna1_v_indxNA_d
tmp1_d (2 : 16): [ -1.333 -6.667 ]
val = 1.000
complemento = 0


tmp1_d (2 : 16): [ -1.333 -6.667 ]
*****************************************

123: which_v_indxlt_d
tmp1_d (2 : 16): [ -1.333 -6.667 ]
val = 0.000

numposs (2 : 4): [ 1 2 ]
*****************************************

129: f_aux1_d
Freq_in (7 : 7): [ 3.000 2.000 0.000 0.000 0.000 0.000 0.000 ]
STin (7 : 7): [ 0.000 1.667 3.333 0.000 0.000 0.000 0.000 ]
toll_in (7 : 7): [ 0.000 1.667 3.333 0.000 0.000 0.000 0.000 ]
da = 2
a = 3
sgn1 = -1
sgn2 = 1


tmp1_d (2 : 16): [ 2.000 0.000 ]
*****************************************

131: assegna1_v_indxNA_d
tmp1_d (2 : 16): [ 2.000 0.000 ]
val = 1.000
complemento = 0


tmp1_d (2 : 16): [ 2.000 0.000 ]
*****************************************

133: copia_v_d
tmp1_d (2 : 16): [ 2.000 0.000 ]
start = 1
end = 2


tmp2_d (2 : 16): [ 2.000 0.000 ]
*****************************************

135: which_v_indxlt_d
tmp2_d (2 : 16): [ 2.000 0.000 ]
val = 0.000

primi (0 : 4): [ ]
*****************************************

149: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 2


p (2 : 2): [ 0.000 0.000 ]
*****************************************


*** score_sf1 ***
21: somma_vs_i
tmp1_i (1 : 7): [ 0 ]
s = 1.000


S_new (1 : 1): [ 1 ]
*****************************************

23: somma_vs_i
tmp1_i (1 : 7): [ 0 ]
s = 1.000


tmp_i1 (1 : 1): [ 1 ]
*****************************************

24: assegna_v_indxNA_d
STin (7 : 7): [ 0.000 1.667 3.333 0.000 0.000 0.000 0.000 ]
tmp_i1 (1 : 1): [ 1 ]


T1 (1 : 1): [ 0.000 ]
*****************************************

26: somma_vs_i
S_new (1 : 1): [ 1 ]
s = 1.000


tmp_i1 (1 : 1): [ 2 ]
*****************************************

27: assegna_v_indxNA_d
STin (7 : 7): [ 0.000 1.667 3.333 0.000 0.000 0.000 0.000 ]
tmp_i1 (1 : 1): [ 2 ]


T2 (1 : 1): [ 1.667 ]
*****************************************

29: somma_vs_i
tmp1_i (1 : 7): [ 0 ]
s = 1.000


tmp_i1 (1 : 1): [ 1 ]
*****************************************

30: assegna_v_indxNA_d
Freq_in (7 : 7): [ 3.000 2.000 0.000 0.000 0.000 0.000 0.000 ]
tmp_i1 (1 : 1): [ 1 ]


old1 (1 : 1): [ 3.000 ]
*****************************************

32: somma_vs_i
S_new (1 : 1): [ 1 ]
s = 1.000


tmp_i1 (1 : 1): [ 2 ]
*****************************************

33: assegna_v_indxNA_d
Freq_in (7 : 7): [ 3.000 2.000 0.000 0.000 0.000 0.000 0.000 ]
tmp_i1 (1 : 1): [ 2 ]


old2 (1 : 1): [ 2.000 ]
*****************************************

35: somma_vs_d
old1 (1 : 1): [ 3.000 ]
s = -1.000


new1 (1 : 1): [ 2.000 ]
*****************************************

37: somma_vs_d
old2 (1 : 1): [ 2.000 ]
s = 1.000


new2 (1 : 1): [ 3.000 ]
*****************************************

39: somma_vs_i
tmp1_i (1 : 7): [ 0 ]
s = 1.000


tmp_i1 (1 : 1): [ 1 ]
*****************************************

40: assegna_v_indx_d
toll_in (7 : 7): [ 0.000 1.667 3.333 0.000 0.000 0.000 0.000 ]
tmp_i1 (1 : 1): [ 1 ]


toll1 (1 : 1): [ 0.000 ]
*****************************************

42: somma_vs_i
S_new (1 : 1): [ 1 ]
s = 1.000


tmp_i2 (1 : 1): [ 2 ]
*****************************************

43: assegna_v_indx_d
toll_in (7 : 7): [ 0.000 1.667 3.333 0.000 0.000 0.000 0.000 ]
tmp_i2 (1 : 1): [ 2 ]


toll2 (1 : 1): [ 1.667 ]
*****************************************

45: diff_vv_d
old1 (1 : 1): [ 3.000 ]
T1 (1 : 1): [ 0.000 ]


a (1 : 1): [ 3.000 ]
*****************************************

46: abs1_v_d
a (1 : 1): [ 3.000 ]


a (1 : 1): [ 3.000 ]
*****************************************

48: diff_vv_d
new1 (1 : 1): [ 2.000 ]
T1 (1 : 1): [ 0.000 ]


b (1 : 1): [ 2.000 ]
*****************************************

49: abs1_v_d
b (1 : 1): [ 2.000 ]


b (1 : 1): [ 2.000 ]
*****************************************

51: which_v_indxna_d
T1 (1 : 1): [ 0.000 ]
complemento = 0


ind (0 : 1): [ ]
*****************************************

55: assegna1_vs_indx_d
a (1 : 1): [ 3.000 ]
ind (0 : 1): [ ]
val = 0.000


a (1 : 1): [ 3.000 ]
*****************************************

57: assegna1_vs_indx_d
b (1 : 1): [ 2.000 ]
ind (0 : 1): [ ]
val = 0.000


b (1 : 1): [ 2.000 ]
*****************************************

59: cbind2v_d
a (1 : 1): [ 3.000 ]
b (1 : 1): [ 2.000 ]


tmpm_d (1 x 2 : 1 x 2): [
	 3.000 2.000
 ]
*****************************************

60: max_righe_d
tmpm_d (1 x 2 : 1 x 2): [
	 3.000 2.000
 ]


m (1 : 1): [ 3.000 ]
*****************************************

62: f_aux_d
a (1 : 1): [ 3.000 ]
b (1 : 1): [ 2.000 ]
m (1 : 1): [ 3.000 ]
T1 (1 : 1): [ 0.000 ]
ATTENZIONE (f_aux_d, linea score_sf.c # 62): l'elemento 1 ha provocato una divisione per zero e gli e` stato assegnato un valore al di fuori del dominio!


S1 (1 : 1): [ 1.#IO ]
*****************************************

64: diff_vv_d
b (1 : 1): [ 2.000 ]
toll1 (1 : 1): [ 0.000 ]


tmp_d1 (1 : 1): [ 2.000 ]
*****************************************

65: which_v_indxgt_d
tmp_d1 (1 : 1): [ 2.000 ]
val = 0.000


indbad (1 : 1): [ 1 ]
*****************************************

69: diff_vv_d
a (1 : 1): [ 3.000 ]
toll1 (1 : 1): [ 0.000 ]


tmp_d1 (1 : 1): [ 3.000 ]
*****************************************

70: which_v_indxlt_d
tmp_d1 (1 : 1): [ 3.000 ]
val = 0.000

ind1 (0 : 1): [ ]
*****************************************

72: f_aux2_d
old1 (1 : 1): [ 3.000 ]
new1 (1 : 1): [ 2.000 ]
T1 (1 : 1): [ 0.000 ]


ind2 (0 : 1): [ ]
*****************************************

74: f_aux3_d
a (1 : 1): [ 3.000 ]
toll1 (1 : 1): [ 0.000 ]
b (1 : 1): [ 2.000 ]


ind3 (0 : 1): [ ]
*****************************************

76: unione1_i
ind1 (0 : 1): [ ]
ind2 (0 : 1): [ ]
2858: elimina_doppi_i
ind1 (0 : 0): [ ]


ris (0 : 0): [ ]
*****************************************



ris (0 : 0): [ ]
*****************************************

77: unione_i
ind3 (0 : 1): [ ]
ris (0 : 0): [ ]
4663: elimina_doppi_i
ind0 (0 : 0): [ ]


ris (0 : 0): [ ]
*****************************************



ris (0 : 0): [ ]
*****************************************

79: which_v_indxlt_d
new1 (1 : 1): [ 2.000 ]
val = 0.000

tmp_i1 (0 : 1): [ ]
*****************************************

80: interseca_i
ris (0 : 0): [ ]
indbad (1 : 1): [ 1 ]


tmp_i2 (0 : 0): [ ]
*****************************************

81: unione_i
tmp_i2 (0 : 0): [ ]
tmp_i1 (0 : 1): [ ]
4663: elimina_doppi_i
indinf (0 : 0): [ ]


ris (0 : 0): [ ]
*****************************************



ris (0 : 0): [ ]
*****************************************

82: assegna1_vs_indx_d
S1 (1 : 1): [ 1.#IO ]
ris (0 : 0): [ ]
val = -1.#IO


S1 (1 : 1): [ 1.#IO ]
*****************************************

86: assegna1_vs_indx_d
S1 (1 : 1): [ 1.#IO ]
ind (0 : 1): [ ]
val = 0.000


S1 (1 : 1): [ 1.#IO ]
*****************************************

95: somma_v_d
STin (7 : 7): [ 0.000 1.667 3.333 0.000 0.000 0.000 0.000 ]
canc_NA = 1



ris: 5.000
*****************************************

96: assegna1_v_indxeq_d
S1 (1 : 1): [ 1.#IO ]
val1 = 1.#IO
val2 = 5.000


S1 (1 : 1): [ 5.000 ]
*****************************************

99: diff_vv_d
old2 (1 : 1): [ 2.000 ]
T2 (1 : 1): [ 1.667 ]


a (1 : 1): [ 0.333 ]
*****************************************

100: abs1_v_d
a (1 : 1): [ 0.333 ]


a (1 : 1): [ 0.333 ]
*****************************************

102: diff_vv_d
new2 (1 : 1): [ 3.000 ]
T2 (1 : 1): [ 1.667 ]


b (1 : 1): [ 1.333 ]
*****************************************

103: abs1_v_d
b (1 : 1): [ 1.333 ]


b (1 : 1): [ 1.333 ]
*****************************************

105: cbind2v_d
a (1 : 1): [ 0.333 ]
b (1 : 1): [ 1.333 ]


tmpm_d (1 x 2 : 1 x 2): [
	 0.333 1.333
 ]
*****************************************

106: max_righe_d
tmpm_d (1 x 2 : 1 x 2): [
	 0.333 1.333
 ]


m (1 : 1): [ 1.333 ]
*****************************************

108: which_v_indxna_d
T2 (1 : 1): [ 1.667 ]
complemento = 0


ind (0 : 1): [ ]
*****************************************

112: assegna1_vs_indx_d
a (1 : 1): [ 0.333 ]
ind (0 : 1): [ ]
val = 0.000


a (1 : 1): [ 0.333 ]
*****************************************

114: assegna1_vs_indx_d
b (1 : 1): [ 1.333 ]
ind (0 : 1): [ ]
val = 0.000


b (1 : 1): [ 1.333 ]
*****************************************

116: cbind2v_d
a (1 : 1): [ 0.333 ]
b (1 : 1): [ 1.333 ]


tmpm_d (1 x 2 : 1 x 2): [
	 0.333 1.333
 ]
*****************************************

117: max_righe_d
tmpm_d (1 x 2 : 1 x 2): [
	 0.333 1.333
 ]


m (1 : 1): [ 1.333 ]
*****************************************

119: f_aux_d
a (1 : 1): [ 0.333 ]
b (1 : 1): [ 1.333 ]
m (1 : 1): [ 1.333 ]
T2 (1 : 1): [ 1.667 ]


S2 (1 : 1): [ -0.800 ]
*****************************************

121: diff_vv_d
b (1 : 1): [ 1.333 ]
toll2 (1 : 1): [ 1.667 ]


tmp_d1 (1 : 1): [ -0.333 ]
*****************************************

122: which_v_indxgt_d
tmp_d1 (1 : 1): [ -0.333 ]
val = 0.000


indbad (0 : 1): [ ]
*****************************************

142: assegna1_vs_indx_d
S2 (1 : 1): [ -0.800 ]
ind (0 : 1): [ ]
val = 0.000


S2 (1 : 1): [ -0.800 ]
*****************************************

151: which_v_indxeq_d
T2 (1 : 1): [ 1.667 ]
val = 0.000


ind (0 : 1): [ ]
*****************************************

153: assegna1_vs_indx_d
S2 (1 : 1): [ -0.800 ]
ind (0 : 1): [ ]
val = -1.#IO


S2 (1 : 1): [ -0.800 ]
*****************************************

155: somma_vv_d
S1 (1 : 1): [ 5.000 ]
S2 (1 : 1): [ -0.800 ]


tmp1_d (1 : 16): [ 4.200 ]
*****************************************

156: dividi1_vs_d
tmp1_d (1 : 16): [ 4.200 ]
div = 2.000


tmp1_d (1 : 16): [ 2.100 ]
*****************************************


Stringhe allocate: 5 (698 interne); stringhe deallocate: 0 (458 interne)


*** score_sf1 ***
21: somma_vs_i
tmp1_i (2 : 7): [ 0 0 ]
s = 2.000


S_new (2 : 2): [ 2 2 ]
*****************************************

23: somma_vs_i
tmp1_i (2 : 7): [ 0 0 ]
s = 1.000


tmp_i1 (2 : 2): [ 1 1 ]
*****************************************

24: assegna_v_indxNA_d
STin (7 : 7): [ 0.000 1.667 3.333 0.000 0.000 0.000 0.000 ]
tmp_i1 (2 : 2): [ 1 1 ]


T1 (2 : 2): [ 0.000 0.000 ]
*****************************************

26: somma_vs_i
S_new (2 : 2): [ 2 2 ]
s = 1.000


tmp_i1 (2 : 2): [ 3 3 ]
*****************************************

27: assegna_v_indxNA_d
STin (7 : 7): [ 0.000 1.667 3.333 0.000 0.000 0.000 0.000 ]
tmp_i1 (2 : 2): [ 3 3 ]


T2 (2 : 2): [ 3.333 3.333 ]
*****************************************

29: somma_vs_i
tmp1_i (2 : 7): [ 0 0 ]
s = 1.000


tmp_i1 (2 : 2): [ 1 1 ]
*****************************************

30: assegna_v_indxNA_d
Freq_in (7 : 7): [ 3.000 2.000 0.000 0.000 0.000 0.000 0.000 ]
tmp_i1 (2 : 2): [ 1 1 ]


old1 (2 : 2): [ 3.000 3.000 ]
*****************************************

32: somma_vs_i
S_new (2 : 2): [ 2 2 ]
s = 1.000


tmp_i1 (2 : 2): [ 3 3 ]
*****************************************

33: assegna_v_indxNA_d
Freq_in (7 : 7): [ 3.000 2.000 0.000 0.000 0.000 0.000 0.000 ]
tmp_i1 (2 : 2): [ 3 3 ]


old2 (2 : 2): [ 0.000 0.000 ]
*****************************************

35: somma_vs_d
old1 (2 : 2): [ 3.000 3.000 ]
s = -1.000


new1 (2 : 2): [ 2.000 2.000 ]
*****************************************

37: somma_vs_d
old2 (2 : 2): [ 0.000 0.000 ]
s = 1.000


new2 (2 : 2): [ 1.000 1.000 ]
*****************************************

39: somma_vs_i
tmp1_i (2 : 7): [ 0 0 ]
s = 1.000


tmp_i1 (2 : 2): [ 1 1 ]
*****************************************

40: assegna_v_indx_d
toll_in (7 : 7): [ 0.000 1.667 3.333 0.000 0.000 0.000 0.000 ]
tmp_i1 (2 : 2): [ 1 1 ]


toll1 (2 : 2): [ 0.000 0.000 ]
*****************************************

42: somma_vs_i
S_new (2 : 2): [ 2 2 ]
s = 1.000


tmp_i2 (2 : 2): [ 3 3 ]
*****************************************

43: assegna_v_indx_d
toll_in (7 : 7): [ 0.000 1.667 3.333 0.000 0.000 0.000 0.000 ]
tmp_i2 (2 : 2): [ 3 3 ]


toll2 (2 : 2): [ 3.333 3.333 ]
*****************************************

45: diff_vv_d
old1 (2 : 2): [ 3.000 3.000 ]
T1 (2 : 2): [ 0.000 0.000 ]


a (2 : 2): [ 3.000 3.000 ]
*****************************************

46: abs1_v_d
a (2 : 2): [ 3.000 3.000 ]


a (2 : 2): [ 3.000 3.000 ]
*****************************************

48: diff_vv_d
new1 (2 : 2): [ 2.000 2.000 ]
T1 (2 : 2): [ 0.000 0.000 ]


b (2 : 2): [ 2.000 2.000 ]
*****************************************

49: abs1_v_d
b (2 : 2): [ 2.000 2.000 ]


b (2 : 2): [ 2.000 2.000 ]
*****************************************

51: which_v_indxna_d
T1 (2 : 2): [ 0.000 0.000 ]
complemento = 0


ind (0 : 2): [ ]
*****************************************

55: assegna1_vs_indx_d
a (2 : 2): [ 3.000 3.000 ]
ind (0 : 2): [ ]
val = 0.000


a (2 : 2): [ 3.000 3.000 ]
*****************************************

57: assegna1_vs_indx_d
b (2 : 2): [ 2.000 2.000 ]
ind (0 : 2): [ ]
val = 0.000


b (2 : 2): [ 2.000 2.000 ]
*****************************************

59: cbind2v_d
a (2 : 2): [ 3.000 3.000 ]
b (2 : 2): [ 2.000 2.000 ]


tmpm_d (2 x 2 : 2 x 2): [
	 3.000 2.000
	 3.000 2.000
 ]
*****************************************

60: max_righe_d
tmpm_d (2 x 2 : 2 x 2): [
	 3.000 2.000
	 3.000 2.000
 ]


m (2 : 2): [ 3.000 3.000 ]
*****************************************

62: f_aux_d
a (2 : 2): [ 3.000 3.000 ]
b (2 : 2): [ 2.000 2.000 ]
m (2 : 2): [ 3.000 3.000 ]
T1 (2 : 2): [ 0.000 0.000 ]
ATTENZIONE (f_aux_d, linea score_sf.c # 62): l'elemento 1 ha provocato una divisione per zero e gli e` stato assegnato un valore al di fuori del dominio!
ATTENZIONE (f_aux_d, linea score_sf.c # 62): l'elemento 2 ha provocato una divisione per zero e gli e` stato assegnato un valore al di fuori del dominio!


S1 (2 : 2): [ 1.#IO 1.#IO ]
*****************************************

64: diff_vv_d
b (2 : 2): [ 2.000 2.000 ]
toll1 (2 : 2): [ 0.000 0.000 ]


tmp_d1 (2 : 2): [ 2.000 2.000 ]
*****************************************

65: which_v_indxgt_d
tmp_d1 (2 : 2): [ 2.000 2.000 ]
val = 0.000


indbad (2 : 2): [ 1 2 ]
*****************************************

69: diff_vv_d
a (2 : 2): [ 3.000 3.000 ]
toll1 (2 : 2): [ 0.000 0.000 ]


tmp_d1 (2 : 2): [ 3.000 3.000 ]
*****************************************

70: which_v_indxlt_d
tmp_d1 (2 : 2): [ 3.000 3.000 ]
val = 0.000

ind1 (0 : 2): [ ]
*****************************************

72: f_aux2_d
old1 (2 : 2): [ 3.000 3.000 ]
new1 (2 : 2): [ 2.000 2.000 ]
T1 (2 : 2): [ 0.000 0.000 ]


ind2 (0 : 2): [ ]
*****************************************

74: f_aux3_d
a (2 : 2): [ 3.000 3.000 ]
toll1 (2 : 2): [ 0.000 0.000 ]
b (2 : 2): [ 2.000 2.000 ]


ind3 (0 : 2): [ ]
*****************************************

76: unione1_i
ind1 (0 : 2): [ ]
ind2 (0 : 2): [ ]
2858: elimina_doppi_i
ind1 (0 : 0): [ ]


ris (0 : 0): [ ]
*****************************************



ris (0 : 0): [ ]
*****************************************

77: unione_i
ind3 (0 : 2): [ ]
ris (0 : 0): [ ]
4663: elimina_doppi_i
ind0 (0 : 0): [ ]


ris (0 : 0): [ ]
*****************************************



ris (0 : 0): [ ]
*****************************************

79: which_v_indxlt_d
new1 (2 : 2): [ 2.000 2.000 ]
val = 0.000

tmp_i1 (0 : 2): [ ]
*****************************************

80: interseca_i
ris (0 : 0): [ ]
indbad (2 : 2): [ 1 2 ]


tmp_i2 (0 : 0): [ ]
*****************************************

81: unione_i
tmp_i2 (0 : 0): [ ]
tmp_i1 (0 : 2): [ ]
4663: elimina_doppi_i
indinf (0 : 0): [ ]


ris (0 : 0): [ ]
*****************************************



ris (0 : 0): [ ]
*****************************************

82: assegna1_vs_indx_d
S1 (2 : 2): [ 1.#IO 1.#IO ]
ris (0 : 0): [ ]
val = -1.#IO


S1 (2 : 2): [ 1.#IO 1.#IO ]
*****************************************

86: assegna1_vs_indx_d
S1 (2 : 2): [ 1.#IO 1.#IO ]
ind (0 : 2): [ ]
val = 0.000


S1 (2 : 2): [ 1.#IO 1.#IO ]
*****************************************

95: somma_v_d
STin (7 : 7): [ 0.000 1.667 3.333 0.000 0.000 0.000 0.000 ]
canc_NA = 1



ris: 5.000
*****************************************

96: assegna1_v_indxeq_d
S1 (2 : 2): [ 1.#IO 1.#IO ]
val1 = 1.#IO
val2 = 5.000


S1 (2 : 2): [ 5.000 5.000 ]
*****************************************

99: diff_vv_d
old2 (2 : 2): [ 0.000 0.000 ]
T2 (2 : 2): [ 3.333 3.333 ]


a (2 : 2): [ -3.333 -3.333 ]
*****************************************

100: abs1_v_d
a (2 : 2): [ -3.333 -3.333 ]


a (2 : 2): [ 3.333 3.333 ]
*****************************************

102: diff_vv_d
new2 (2 : 2): [ 1.000 1.000 ]
T2 (2 : 2): [ 3.333 3.333 ]


b (2 : 2): [ -2.333 -2.333 ]
*****************************************

103: abs1_v_d
b (2 : 2): [ -2.333 -2.333 ]


b (2 : 2): [ 2.333 2.333 ]
*****************************************

105: cbind2v_d
a (2 : 2): [ 3.333 3.333 ]
b (2 : 2): [ 2.333 2.333 ]


tmpm_d (2 x 2 : 2 x 2): [
	 3.333 2.333
	 3.333 2.333
 ]
*****************************************

106: max_righe_d
tmpm_d (2 x 2 : 2 x 2): [
	 3.333 2.333
	 3.333 2.333
 ]


m (2 : 2): [ 3.333 3.333 ]
*****************************************

108: which_v_indxna_d
T2 (2 : 2): [ 3.333 3.333 ]
complemento = 0


ind (0 : 2): [ ]
*****************************************

112: assegna1_vs_indx_d
a (2 : 2): [ 3.333 3.333 ]
ind (0 : 2): [ ]
val = 0.000


a (2 : 2): [ 3.333 3.333 ]
*****************************************

114: assegna1_vs_indx_d
b (2 : 2): [ 2.333 2.333 ]
ind (0 : 2): [ ]
val = 0.000


b (2 : 2): [ 2.333 2.333 ]
*****************************************

116: cbind2v_d
a (2 : 2): [ 3.333 3.333 ]
b (2 : 2): [ 2.333 2.333 ]


tmpm_d (2 x 2 : 2 x 2): [
	 3.333 2.333
	 3.333 2.333
 ]
*****************************************

117: max_righe_d
tmpm_d (2 x 2 : 2 x 2): [
	 3.333 2.333
	 3.333 2.333
 ]


m (2 : 2): [ 3.333 3.333 ]
*****************************************

119: f_aux_d
a (2 : 2): [ 3.333 3.333 ]
b (2 : 2): [ 2.333 2.333 ]
m (2 : 2): [ 3.333 3.333 ]
T2 (2 : 2): [ 3.333 3.333 ]


S2 (2 : 2): [ 1.000 1.000 ]
*****************************************

121: diff_vv_d
b (2 : 2): [ 2.333 2.333 ]
toll2 (2 : 2): [ 3.333 3.333 ]


tmp_d1 (2 : 2): [ -1.000 -1.000 ]
*****************************************

122: which_v_indxgt_d
tmp_d1 (2 : 2): [ -1.000 -1.000 ]
val = 0.000


indbad (0 : 2): [ ]
*****************************************

142: assegna1_vs_indx_d
S2 (2 : 2): [ 1.000 1.000 ]
ind (0 : 2): [ ]
val = 0.000


S2 (2 : 2): [ 1.000 1.000 ]
*****************************************

151: which_v_indxeq_d
T2 (2 : 2): [ 3.333 3.333 ]
val = 0.000


ind (0 : 2): [ ]
*****************************************

153: assegna1_vs_indx_d
S2 (2 : 2): [ 1.000 1.000 ]
ind (0 : 2): [ ]
val = -1.#IO


S2 (2 : 2): [ 1.000 1.000 ]
*****************************************

155: somma_vv_d
S1 (2 : 2): [ 5.000 5.000 ]
S2 (2 : 2): [ 1.000 1.000 ]


tmp1_d (2 : 16): [ 6.000 6.000 ]
*****************************************

156: dividi1_vs_d
tmp1_d (2 : 16): [ 6.000 6.000 ]
div = 2.000


tmp1_d (2 : 16): [ 3.000 3.000 ]
*****************************************


Stringhe allocate: 5 (850 interne); stringhe deallocate: 0 (610 interne)

158: which_v_indxeq_d
p (2 : 2): [ 2.100 3.000 ]
val = -1.#IO


indInf (0 : 4): [ ]
*****************************************

160: assegna1_v_indxv_d
p (2 : 2): [ 2.100 3.000 ]
indInf (0 : 4): [ ]
val = 0.000


p (2 : 2): [ 2.100 3.000 ]
*****************************************

162: min_v_d
p (2 : 2): [ 2.100 3.000 ]


min = 2.100
*****************************************

165: assegna1_v_indxv_d
p (2 : 2): [ 2.100 3.000 ]
indInf (0 : 4): [ ]
val = 0.000


p (2 : 2): [ 2.100 3.000 ]
*****************************************

168: somma_v_d
p (2 : 2): [ 2.100 3.000 ]
canc_NA = 0



ris: 5.100
*****************************************

170: seq_i
da = 1, a = 2, incremento = 1


tmp1_i (2 : 7): [ 1 2 ]
*****************************************

171: dividi_vs_d
p (2 : 2): [ 2.100 3.000 ]
div = 5.100


tmp1_d (2 : 16): [ 0.412 0.588 ]
*****************************************


*** sampleB_p ***

*** sample_p ***
tmp1_i (2 : 7): [ 1 2 ]
k = 1, replace = 0
tmp1_d (2 : 16): [ 0.412 0.588 ]


ris (1 : 1): [ 2 ]
*****************************************


Stringhe allocate: 5 (850 interne); stringhe deallocate: 0 (610 interne)

189: elimina_doppi_i
give_outlink (0 : 0): [ ]


aus_give_outlink (0 : 0): [ ]
*****************************************

213: somma_colonne_i
Mdiscr (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 1 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]


Sout (5 : 5): [ 1 1 0 0 0 ]
*****************************************

215: max_v_i
Sout (5 : 5): [ 1 1 0 0 0 ]


max = 1
*****************************************

217: seq_i
da = 0, a = 2, incremento = 1


tmp2_i (3 : 3): [ 0 1 2 ]
*****************************************


*** hist ***
Sout (5 : 5): [ 1 1 0 0 0 ]
tmp2_i (3 : 3): [ 0 1 2 ]
right = 0
include_border = 1
naok = 0


tmp1_i (2 : 7): [ 3 2 ]

Stringhe allocate: 5 (850 interne); stringhe deallocate: 0 (610 interne)

219: promuovi_i
tmp1_i (2 : 7): [ 3 2 ]
ATTENZIONE (promuovi_i, linea connectivity_scalefree.c # 219): il vettore e` stato promosso da intero a double: i calcoli saranno rallentati!

tmp1_d (2 : 16): [ 3.000 2.000 ]
*****************************************

220: assegna_v_segmv_d
Freq_out (7 : 7): [ 3.000 2.000 0.000 0.000 0.000 0.000 0.000 ]
start = 1
end = 2
tmp1_d (2 : 16): [ 3.000 2.000 ]


Freq_out (7 : 7): [ 3.000 2.000 0.000 0.000 0.000 0.000 0.000 ]
*****************************************

222: copia_v_indx_i
Sout (5 : 5): [ 1 1 0 0 0 ]
inthenet (2 : 4): [ 1 2 ]


tmp1_i (2 : 7): [ 1 1 ]
*****************************************


*** score_sf1 ***
21: somma_vs_i
tmp1_i (2 : 7): [ 1 1 ]
s = 1.000


S_new (2 : 2): [ 2 2 ]
*****************************************

23: somma_vs_i
tmp1_i (2 : 7): [ 1 1 ]
s = 1.000


tmp_i1 (2 : 2): [ 2 2 ]
*****************************************

24: assegna_v_indxNA_d
STout (7 : 7): [ 1.#QO 0.333 0.667 1.000 1.333 1.667 0.000 ]
tmp_i1 (2 : 2): [ 2 2 ]


T1 (2 : 2): [ 0.333 0.333 ]
*****************************************

26: somma_vs_i
S_new (2 : 2): [ 2 2 ]
s = 1.000


tmp_i1 (2 : 2): [ 3 3 ]
*****************************************

27: assegna_v_indxNA_d
STout (7 : 7): [ 1.#QO 0.333 0.667 1.000 1.333 1.667 0.000 ]
tmp_i1 (2 : 2): [ 3 3 ]


T2 (2 : 2): [ 0.667 0.667 ]
*****************************************

29: somma_vs_i
tmp1_i (2 : 7): [ 1 1 ]
s = 1.000


tmp_i1 (2 : 2): [ 2 2 ]
*****************************************

30: assegna_v_indxNA_d
Freq_out (7 : 7): [ 3.000 2.000 0.000 0.000 0.000 0.000 0.000 ]
tmp_i1 (2 : 2): [ 2 2 ]


old1 (2 : 2): [ 2.000 2.000 ]
*****************************************

32: somma_vs_i
S_new (2 : 2): [ 2 2 ]
s = 1.000


tmp_i1 (2 : 2): [ 3 3 ]
*****************************************

33: assegna_v_indxNA_d
Freq_out (7 : 7): [ 3.000 2.000 0.000 0.000 0.000 0.000 0.000 ]
tmp_i1 (2 : 2): [ 3 3 ]


old2 (2 : 2): [ 0.000 0.000 ]
*****************************************

35: somma_vs_d
old1 (2 : 2): [ 2.000 2.000 ]
s = -1.000


new1 (2 : 2): [ 1.000 1.000 ]
*****************************************

37: somma_vs_d
old2 (2 : 2): [ 0.000 0.000 ]
s = 1.000


new2 (2 : 2): [ 1.000 1.000 ]
*****************************************

39: somma_vs_i
tmp1_i (2 : 7): [ 1 1 ]
s = 1.000


tmp_i1 (2 : 2): [ 2 2 ]
*****************************************

40: assegna_v_indx_d
toll_out (7 : 7): [ 7.000 0.333 0.667 1.000 1.333 1.667 0.000 ]
tmp_i1 (2 : 2): [ 2 2 ]


toll1 (2 : 2): [ 0.333 0.333 ]
*****************************************

42: somma_vs_i
S_new (2 : 2): [ 2 2 ]
s = 1.000


tmp_i2 (2 : 2): [ 3 3 ]
*****************************************

43: assegna_v_indx_d
toll_out (7 : 7): [ 7.000 0.333 0.667 1.000 1.333 1.667 0.000 ]
tmp_i2 (2 : 2): [ 3 3 ]


toll2 (2 : 2): [ 0.667 0.667 ]
*****************************************

45: diff_vv_d
old1 (2 : 2): [ 2.000 2.000 ]
T1 (2 : 2): [ 0.333 0.333 ]


a (2 : 2): [ 1.667 1.667 ]
*****************************************

46: abs1_v_d
a (2 : 2): [ 1.667 1.667 ]


a (2 : 2): [ 1.667 1.667 ]
*****************************************

48: diff_vv_d
new1 (2 : 2): [ 1.000 1.000 ]
T1 (2 : 2): [ 0.333 0.333 ]


b (2 : 2): [ 0.667 0.667 ]
*****************************************

49: abs1_v_d
b (2 : 2): [ 0.667 0.667 ]


b (2 : 2): [ 0.667 0.667 ]
*****************************************

51: which_v_indxna_d
T1 (2 : 2): [ 0.333 0.333 ]
complemento = 0


ind (0 : 2): [ ]
*****************************************

55: assegna1_vs_indx_d
a (2 : 2): [ 1.667 1.667 ]
ind (0 : 2): [ ]
val = 0.000


a (2 : 2): [ 1.667 1.667 ]
*****************************************

57: assegna1_vs_indx_d
b (2 : 2): [ 0.667 0.667 ]
ind (0 : 2): [ ]
val = 0.000


b (2 : 2): [ 0.667 0.667 ]
*****************************************

59: cbind2v_d
a (2 : 2): [ 1.667 1.667 ]
b (2 : 2): [ 0.667 0.667 ]


tmpm_d (2 x 2 : 2 x 2): [
	 1.667 0.667
	 1.667 0.667
 ]
*****************************************

60: max_righe_d
tmpm_d (2 x 2 : 2 x 2): [
	 1.667 0.667
	 1.667 0.667
 ]


m (2 : 2): [ 1.667 1.667 ]
*****************************************

62: f_aux_d
a (2 : 2): [ 1.667 1.667 ]
b (2 : 2): [ 0.667 0.667 ]
m (2 : 2): [ 1.667 1.667 ]
T1 (2 : 2): [ 0.333 0.333 ]


S1 (2 : 2): [ 5.000 5.000 ]
*****************************************

64: diff_vv_d
b (2 : 2): [ 0.667 0.667 ]
toll1 (2 : 2): [ 0.333 0.333 ]


tmp_d1 (2 : 2): [ 0.333 0.333 ]
*****************************************

65: which_v_indxgt_d
tmp_d1 (2 : 2): [ 0.333 0.333 ]
val = 0.000


indbad (2 : 2): [ 1 2 ]
*****************************************

69: diff_vv_d
a (2 : 2): [ 1.667 1.667 ]
toll1 (2 : 2): [ 0.333 0.333 ]


tmp_d1 (2 : 2): [ 1.333 1.333 ]
*****************************************

70: which_v_indxlt_d
tmp_d1 (2 : 2): [ 1.333 1.333 ]
val = 0.000

ind1 (0 : 2): [ ]
*****************************************

72: f_aux2_d
old1 (2 : 2): [ 2.000 2.000 ]
new1 (2 : 2): [ 1.000 1.000 ]
T1 (2 : 2): [ 0.333 0.333 ]


ind2 (0 : 2): [ ]
*****************************************

74: f_aux3_d
a (2 : 2): [ 1.667 1.667 ]
toll1 (2 : 2): [ 0.333 0.333 ]
b (2 : 2): [ 0.667 0.667 ]


ind3 (0 : 2): [ ]
*****************************************

76: unione1_i
ind1 (0 : 2): [ ]
ind2 (0 : 2): [ ]
2858: elimina_doppi_i
ind1 (0 : 0): [ ]


ris (0 : 0): [ ]
*****************************************



ris (0 : 0): [ ]
*****************************************

77: unione_i
ind3 (0 : 2): [ ]
ris (0 : 0): [ ]
4663: elimina_doppi_i
ind0 (0 : 0): [ ]


ris (0 : 0): [ ]
*****************************************



ris (0 : 0): [ ]
*****************************************

79: which_v_indxlt_d
new1 (2 : 2): [ 1.000 1.000 ]
val = 0.000

tmp_i1 (0 : 2): [ ]
*****************************************

80: interseca_i
ris (0 : 0): [ ]
indbad (2 : 2): [ 1 2 ]


tmp_i2 (0 : 0): [ ]
*****************************************

81: unione_i
tmp_i2 (0 : 0): [ ]
tmp_i1 (0 : 2): [ ]
4663: elimina_doppi_i
indinf (0 : 0): [ ]


ris (0 : 0): [ ]
*****************************************



ris (0 : 0): [ ]
*****************************************

82: assegna1_vs_indx_d
S1 (2 : 2): [ 5.000 5.000 ]
ris (0 : 0): [ ]
val = -1.#IO


S1 (2 : 2): [ 5.000 5.000 ]
*****************************************

86: assegna1_vs_indx_d
S1 (2 : 2): [ 5.000 5.000 ]
ind (0 : 2): [ ]
val = 0.000


S1 (2 : 2): [ 5.000 5.000 ]
*****************************************

95: somma_v_d
STout (7 : 7): [ 1.#QO 0.333 0.667 1.000 1.333 1.667 0.000 ]
canc_NA = 1



ris: 5.000
*****************************************

96: assegna1_v_indxeq_d
S1 (2 : 2): [ 5.000 5.000 ]
val1 = 1.#IO
val2 = 5.000


S1 (2 : 2): [ 5.000 5.000 ]
*****************************************

99: diff_vv_d
old2 (2 : 2): [ 0.000 0.000 ]
T2 (2 : 2): [ 0.667 0.667 ]


a (2 : 2): [ -0.667 -0.667 ]
*****************************************

100: abs1_v_d
a (2 : 2): [ -0.667 -0.667 ]


a (2 : 2): [ 0.667 0.667 ]
*****************************************

102: diff_vv_d
new2 (2 : 2): [ 1.000 1.000 ]
T2 (2 : 2): [ 0.667 0.667 ]


b (2 : 2): [ 0.333 0.333 ]
*****************************************

103: abs1_v_d
b (2 : 2): [ 0.333 0.333 ]


b (2 : 2): [ 0.333 0.333 ]
*****************************************

105: cbind2v_d
a (2 : 2): [ 0.667 0.667 ]
b (2 : 2): [ 0.333 0.333 ]


tmpm_d (2 x 2 : 2 x 2): [
	 0.667 0.333
	 0.667 0.333
 ]
*****************************************

106: max_righe_d
tmpm_d (2 x 2 : 2 x 2): [
	 0.667 0.333
	 0.667 0.333
 ]


m (2 : 2): [ 0.667 0.667 ]
*****************************************

108: which_v_indxna_d
T2 (2 : 2): [ 0.667 0.667 ]
complemento = 0


ind (0 : 2): [ ]
*****************************************

112: assegna1_vs_indx_d
a (2 : 2): [ 0.667 0.667 ]
ind (0 : 2): [ ]
val = 0.000


a (2 : 2): [ 0.667 0.667 ]
*****************************************

114: assegna1_vs_indx_d
b (2 : 2): [ 0.333 0.333 ]
ind (0 : 2): [ ]
val = 0.000


b (2 : 2): [ 0.333 0.333 ]
*****************************************

116: cbind2v_d
a (2 : 2): [ 0.667 0.667 ]
b (2 : 2): [ 0.333 0.333 ]


tmpm_d (2 x 2 : 2 x 2): [
	 0.667 0.333
	 0.667 0.333
 ]
*****************************************

117: max_righe_d
tmpm_d (2 x 2 : 2 x 2): [
	 0.667 0.333
	 0.667 0.333
 ]


m (2 : 2): [ 0.667 0.667 ]
*****************************************

119: f_aux_d
a (2 : 2): [ 0.667 0.667 ]
b (2 : 2): [ 0.333 0.333 ]
m (2 : 2): [ 0.667 0.667 ]
T2 (2 : 2): [ 0.667 0.667 ]


S2 (2 : 2): [ 1.000 1.000 ]
*****************************************

121: diff_vv_d
b (2 : 2): [ 0.333 0.333 ]
toll2 (2 : 2): [ 0.667 0.667 ]


tmp_d1 (2 : 2): [ -0.333 -0.333 ]
*****************************************

122: which_v_indxgt_d
tmp_d1 (2 : 2): [ -0.333 -0.333 ]
val = 0.000


indbad (0 : 2): [ ]
*****************************************

142: assegna1_vs_indx_d
S2 (2 : 2): [ 1.000 1.000 ]
ind (0 : 2): [ ]
val = 0.000


S2 (2 : 2): [ 1.000 1.000 ]
*****************************************

151: which_v_indxeq_d
T2 (2 : 2): [ 0.667 0.667 ]
val = 0.000


ind (0 : 2): [ ]
*****************************************

153: assegna1_vs_indx_d
S2 (2 : 2): [ 1.000 1.000 ]
ind (0 : 2): [ ]
val = -1.#IO


S2 (2 : 2): [ 1.000 1.000 ]
*****************************************

155: somma_vv_d
S1 (2 : 2): [ 5.000 5.000 ]
S2 (2 : 2): [ 1.000 1.000 ]


Sc (2 : 4): [ 6.000 6.000 ]
*****************************************

156: dividi1_vs_d
Sc (2 : 4): [ 6.000 6.000 ]
div = 2.000


Sc (2 : 4): [ 3.000 3.000 ]
*****************************************


Stringhe allocate: 5 (1001 interne); stringhe deallocate: 0 (761 interne)

225: which_v_indxeq_d
Sc (2 : 4): [ 3.000 3.000 ]
val = -1.#IO


indInf (0 : 4): [ ]
*****************************************

227: assegna1_v_indxv_d
Sc (2 : 4): [ 3.000 3.000 ]
indInf (0 : 4): [ ]
val = 0.000


Sc (2 : 4): [ 3.000 3.000 ]
*****************************************

229: min_v_d
Sc (2 : 4): [ 3.000 3.000 ]


min = 3.000
*****************************************

232: assegna1_v_indxv_d
Sc (2 : 4): [ 3.000 3.000 ]
indInf (0 : 4): [ ]
val = 0.000


Sc (2 : 4): [ 3.000 3.000 ]
*****************************************

234: which_v_indxgt_d
Sc (2 : 4): [ 3.000 3.000 ]
val = 0.000


tmp1_i (2 : 7): [ 1 2 ]
*****************************************

235: setdiff_i
tmp1_i (2 : 7): [ 1 2 ]
linked (0 : 1): [ ]
2944: copia_v_i
tmp1_i (2 : 7): [ 1 2 ]
start = 1
end = 2


ind (2 : 4): [ 1 2 ]
*****************************************



ind (2 : 4): [ 1 2 ]
*****************************************

241: copia_v_indx_d
Sc (2 : 4): [ 3.000 3.000 ]
ind (2 : 4): [ 1 2 ]


tmp1_d (2 : 16): [ 3.000 3.000 ]
*****************************************

242: somma_v_d
tmp1_d (2 : 16): [ 3.000 3.000 ]
canc_NA = 0



ris: 6.000
*****************************************

242: dividi_vs_d
tmp1_d (2 : 16): [ 3.000 3.000 ]
div = 6.000


p_ind (2 : 4): [ 0.500 0.500 ]
*****************************************


*** sampleB_p ***

*** sample_p ***
ind (2 : 4): [ 1 2 ]
k = 1, replace = 0
p_ind (2 : 4): [ 0.500 0.500 ]


ris (1 : 1): [ 2 ]
*****************************************


Stringhe allocate: 5 (1001 interne); stringhe deallocate: 0 (761 interne)

246: assegna1_ms_rigaindx_i
Mdiscr (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 1 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 3
ris (1 : 1): [ 2 ]
val = 1


Mdiscr (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 1 0 0 0 0
	 0 1 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
*****************************************

251: accoda1_vv_i
linked (0 : 1): [ ]
ris (1 : 1): [ 2 ]


linked (1 : 1): [ 2 ]
*****************************************

213: somma_colonne_i
Mdiscr (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 1 0 0 0 0
	 0 1 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]


Sout (5 : 5): [ 1 2 0 0 0 ]
*****************************************

215: max_v_i
Sout (5 : 5): [ 1 2 0 0 0 ]


max = 2
*****************************************

217: seq_i
da = 0, a = 3, incremento = 1


tmp2_i (4 : 10): [ 0 1 2 3 ]
*****************************************


*** hist ***
Sout (5 : 5): [ 1 2 0 0 0 ]
tmp2_i (4 : 10): [ 0 1 2 3 ]
right = 0
include_border = 1
naok = 0


tmp1_i (3 : 7): [ 3 1 1 ]

Stringhe allocate: 5 (1001 interne); stringhe deallocate: 0 (761 interne)

219: promuovi_i
tmp1_i (3 : 7): [ 3 1 1 ]
ATTENZIONE (promuovi_i, linea connectivity_scalefree.c # 219): il vettore e` stato promosso da intero a double: i calcoli saranno rallentati!

tmp1_d (3 : 16): [ 3.000 1.000 1.000 ]
*****************************************

220: assegna_v_segmv_d
Freq_out (7 : 7): [ 3.000 2.000 0.000 0.000 0.000 0.000 0.000 ]
start = 1
end = 3
tmp1_d (3 : 16): [ 3.000 1.000 1.000 ]


Freq_out (7 : 7): [ 3.000 1.000 1.000 0.000 0.000 0.000 0.000 ]
*****************************************

222: copia_v_indx_i
Sout (5 : 5): [ 1 2 0 0 0 ]
inthenet (2 : 4): [ 1 2 ]


tmp1_i (2 : 7): [ 1 2 ]
*****************************************


*** score_sf1 ***
21: somma_vs_i
tmp1_i (2 : 7): [ 1 2 ]
s = 1.000


S_new (2 : 2): [ 2 3 ]
*****************************************

23: somma_vs_i
tmp1_i (2 : 7): [ 1 2 ]
s = 1.000


tmp_i1 (2 : 2): [ 2 3 ]
*****************************************

24: assegna_v_indxNA_d
STout (7 : 7): [ 1.#QO 0.333 0.667 1.000 1.333 1.667 0.000 ]
tmp_i1 (2 : 2): [ 2 3 ]


T1 (2 : 2): [ 0.333 0.667 ]
*****************************************

26: somma_vs_i
S_new (2 : 2): [ 2 3 ]
s = 1.000


tmp_i1 (2 : 2): [ 3 4 ]
*****************************************

27: assegna_v_indxNA_d
STout (7 : 7): [ 1.#QO 0.333 0.667 1.000 1.333 1.667 0.000 ]
tmp_i1 (2 : 2): [ 3 4 ]


T2 (2 : 2): [ 0.667 1.000 ]
*****************************************

29: somma_vs_i
tmp1_i (2 : 7): [ 1 2 ]
s = 1.000


tmp_i1 (2 : 2): [ 2 3 ]
*****************************************

30: assegna_v_indxNA_d
Freq_out (7 : 7): [ 3.000 1.000 1.000 0.000 0.000 0.000 0.000 ]
tmp_i1 (2 : 2): [ 2 3 ]


old1 (2 : 2): [ 1.000 1.000 ]
*****************************************

32: somma_vs_i
S_new (2 : 2): [ 2 3 ]
s = 1.000


tmp_i1 (2 : 2): [ 3 4 ]
*****************************************

33: assegna_v_indxNA_d
Freq_out (7 : 7): [ 3.000 1.000 1.000 0.000 0.000 0.000 0.000 ]
tmp_i1 (2 : 2): [ 3 4 ]


old2 (2 : 2): [ 1.000 0.000 ]
*****************************************

35: somma_vs_d
old1 (2 : 2): [ 1.000 1.000 ]
s = -1.000


new1 (2 : 2): [ 0.000 0.000 ]
*****************************************

37: somma_vs_d
old2 (2 : 2): [ 1.000 0.000 ]
s = 1.000


new2 (2 : 2): [ 2.000 1.000 ]
*****************************************

39: somma_vs_i
tmp1_i (2 : 7): [ 1 2 ]
s = 1.000


tmp_i1 (2 : 2): [ 2 3 ]
*****************************************

40: assegna_v_indx_d
toll_out (7 : 7): [ 7.000 0.333 0.667 1.000 1.333 1.667 0.000 ]
tmp_i1 (2 : 2): [ 2 3 ]


toll1 (2 : 2): [ 0.333 0.667 ]
*****************************************

42: somma_vs_i
S_new (2 : 2): [ 2 3 ]
s = 1.000


tmp_i2 (2 : 2): [ 3 4 ]
*****************************************

43: assegna_v_indx_d
toll_out (7 : 7): [ 7.000 0.333 0.667 1.000 1.333 1.667 0.000 ]
tmp_i2 (2 : 2): [ 3 4 ]


toll2 (2 : 2): [ 0.667 1.000 ]
*****************************************

45: diff_vv_d
old1 (2 : 2): [ 1.000 1.000 ]
T1 (2 : 2): [ 0.333 0.667 ]


a (2 : 2): [ 0.667 0.333 ]
*****************************************

46: abs1_v_d
a (2 : 2): [ 0.667 0.333 ]


a (2 : 2): [ 0.667 0.333 ]
*****************************************

48: diff_vv_d
new1 (2 : 2): [ 0.000 0.000 ]
T1 (2 : 2): [ 0.333 0.667 ]


b (2 : 2): [ -0.333 -0.667 ]
*****************************************

49: abs1_v_d
b (2 : 2): [ -0.333 -0.667 ]


b (2 : 2): [ 0.333 0.667 ]
*****************************************

51: which_v_indxna_d
T1 (2 : 2): [ 0.333 0.667 ]
complemento = 0


ind (0 : 2): [ ]
*****************************************

55: assegna1_vs_indx_d
a (2 : 2): [ 0.667 0.333 ]
ind (0 : 2): [ ]
val = 0.000


a (2 : 2): [ 0.667 0.333 ]
*****************************************

57: assegna1_vs_indx_d
b (2 : 2): [ 0.333 0.667 ]
ind (0 : 2): [ ]
val = 0.000


b (2 : 2): [ 0.333 0.667 ]
*****************************************

59: cbind2v_d
a (2 : 2): [ 0.667 0.333 ]
b (2 : 2): [ 0.333 0.667 ]


tmpm_d (2 x 2 : 2 x 2): [
	 0.667 0.333
	 0.333 0.667
 ]
*****************************************

60: max_righe_d
tmpm_d (2 x 2 : 2 x 2): [
	 0.667 0.333
	 0.333 0.667
 ]


m (2 : 2): [ 0.667 0.667 ]
*****************************************

62: f_aux_d
a (2 : 2): [ 0.667 0.333 ]
b (2 : 2): [ 0.333 0.667 ]
m (2 : 2): [ 0.667 0.667 ]
T1 (2 : 2): [ 0.333 0.667 ]


S1 (2 : 2): [ 2.000 -1.000 ]
*****************************************

64: diff_vv_d
b (2 : 2): [ 0.333 0.667 ]
toll1 (2 : 2): [ 0.333 0.667 ]


tmp_d1 (2 : 2): [ 0.000 0.000 ]
*****************************************

65: which_v_indxgt_d
tmp_d1 (2 : 2): [ 0.000 0.000 ]
val = 0.000


indbad (0 : 2): [ ]
*****************************************

86: assegna1_vs_indx_d
S1 (2 : 2): [ 2.000 -1.000 ]
ind (0 : 2): [ ]
val = 0.000


S1 (2 : 2): [ 2.000 -1.000 ]
*****************************************

95: somma_v_d
STout (7 : 7): [ 1.#QO 0.333 0.667 1.000 1.333 1.667 0.000 ]
canc_NA = 1



ris: 5.000
*****************************************

96: assegna1_v_indxeq_d
S1 (2 : 2): [ 2.000 -1.000 ]
val1 = 1.#IO
val2 = 5.000


S1 (2 : 2): [ 2.000 -1.000 ]
*****************************************

99: diff_vv_d
old2 (2 : 2): [ 1.000 0.000 ]
T2 (2 : 2): [ 0.667 1.000 ]


a (2 : 2): [ 0.333 -1.000 ]
*****************************************

100: abs1_v_d
a (2 : 2): [ 0.333 -1.000 ]


a (2 : 2): [ 0.333 1.000 ]
*****************************************

102: diff_vv_d
new2 (2 : 2): [ 2.000 1.000 ]
T2 (2 : 2): [ 0.667 1.000 ]


b (2 : 2): [ 1.333 0.000 ]
*****************************************

103: abs1_v_d
b (2 : 2): [ 1.333 0.000 ]


b (2 : 2): [ 1.333 0.000 ]
*****************************************

105: cbind2v_d
a (2 : 2): [ 0.333 1.000 ]
b (2 : 2): [ 1.333 0.000 ]


tmpm_d (2 x 2 : 2 x 2): [
	 0.333 1.333
	 1.000 0.000
 ]
*****************************************

106: max_righe_d
tmpm_d (2 x 2 : 2 x 2): [
	 0.333 1.333
	 1.000 0.000
 ]


m (2 : 2): [ 1.333 1.000 ]
*****************************************

108: which_v_indxna_d
T2 (2 : 2): [ 0.667 1.000 ]
complemento = 0


ind (0 : 2): [ ]
*****************************************

112: assegna1_vs_indx_d
a (2 : 2): [ 0.333 1.000 ]
ind (0 : 2): [ ]
val = 0.000


a (2 : 2): [ 0.333 1.000 ]
*****************************************

114: assegna1_vs_indx_d
b (2 : 2): [ 1.333 0.000 ]
ind (0 : 2): [ ]
val = 0.000


b (2 : 2): [ 1.333 0.000 ]
*****************************************

116: cbind2v_d
a (2 : 2): [ 0.333 1.000 ]
b (2 : 2): [ 1.333 0.000 ]


tmpm_d (2 x 2 : 2 x 2): [
	 0.333 1.333
	 1.000 0.000
 ]
*****************************************

117: max_righe_d
tmpm_d (2 x 2 : 2 x 2): [
	 0.333 1.333
	 1.000 0.000
 ]


m (2 : 2): [ 1.333 1.000 ]
*****************************************

119: f_aux_d
a (2 : 2): [ 0.333 1.000 ]
b (2 : 2): [ 1.333 0.000 ]
m (2 : 2): [ 1.333 1.000 ]
T2 (2 : 2): [ 0.667 1.000 ]


S2 (2 : 2): [ -2.000 1.000 ]
*****************************************

121: diff_vv_d
b (2 : 2): [ 1.333 0.000 ]
toll2 (2 : 2): [ 0.667 1.000 ]


tmp_d1 (2 : 2): [ 0.667 -1.000 ]
*****************************************

122: which_v_indxgt_d
tmp_d1 (2 : 2): [ 0.667 -1.000 ]
val = 0.000


indbad (1 : 2): [ 1 ]
*****************************************

126: diff_vv_d
a (2 : 2): [ 0.333 1.000 ]
toll2 (2 : 2): [ 0.667 1.000 ]


tmp_d1 (2 : 2): [ -0.333 0.000 ]
*****************************************

127: which_v_indxle_d
tmp_d1 (2 : 2): [ -0.333 0.000 ]
val = 0.000


ind1 (2 : 2): [ 1 2 ]
*****************************************

129: f_aux2_d
old2 (2 : 2): [ 1.000 0.000 ]
new2 (2 : 2): [ 2.000 1.000 ]
T2 (2 : 2): [ 0.667 1.000 ]


ind2 (1 : 2): [ 2 ]
*****************************************

131: f_aux3_d
a (2 : 2): [ 0.333 1.000 ]
toll2 (2 : 2): [ 0.667 1.000 ]
b (2 : 2): [ 1.333 0.000 ]


ind3 (0 : 2): [ ]
*****************************************

133: unione1_i
ind1 (2 : 2): [ 1 2 ]
ind2 (1 : 2): [ 2 ]
2858: elimina_doppi_i
ind1 (3 : 3): [ 1 2 2 ]


ris (2 : 3): [ 1 2 ]
*****************************************



ris (2 : 3): [ 1 2 ]
*****************************************

134: unione_i
ind3 (0 : 2): [ ]
ris (2 : 3): [ 1 2 ]
4663: elimina_doppi_i
ind0 (2 : 2): [ 1 2 ]


ris (2 : 2): [ 1 2 ]
*****************************************



ris (2 : 2): [ 1 2 ]
*****************************************

136: interseca_i
ris (2 : 2): [ 1 2 ]
indbad (1 : 2): [ 1 ]
2306: esiste_v_i
el = 1
indbad (1 : 2): [ 1 ]


indx = 1
*****************************************

2307: esiste_v_i
el = 1
indinf (1 : 1): [ 36997792 ]


indx = 0
*****************************************

2306: esiste_v_i
el = 2
indbad (1 : 2): [ 1 ]


indx = 0
*****************************************

2307: esiste_v_i
el = 2
indinf (1 : 1): [ 1 ]


indx = 0
*****************************************



indinf (1 : 1): [ 1 ]
*****************************************

138: assegna1_vs_indx_d
S2 (2 : 2): [ -2.000 1.000 ]
indinf (1 : 1): [ 1 ]
val = -1.#IO


S2 (2 : 2): [ -1.#IO 1.000 ]
*****************************************

142: assegna1_vs_indx_d
S2 (2 : 2): [ -1.#IO 1.000 ]
ind (0 : 2): [ ]
val = 0.000


S2 (2 : 2): [ -1.#IO 1.000 ]
*****************************************

151: which_v_indxeq_d
T2 (2 : 2): [ 0.667 1.000 ]
val = 0.000


ind (0 : 2): [ ]
*****************************************

153: assegna1_vs_indx_d
S2 (2 : 2): [ -1.#IO 1.000 ]
ind (0 : 2): [ ]
val = -1.#IO


S2 (2 : 2): [ -1.#IO 1.000 ]
*****************************************

155: somma_vv_d
S1 (2 : 2): [ 2.000 -1.000 ]
S2 (2 : 2): [ -1.#IO 1.000 ]


Sc (2 : 4): [ -1.#IO 0.000 ]
*****************************************

156: dividi1_vs_d
Sc (2 : 4): [ -1.#IO 0.000 ]
div = 2.000


Sc (2 : 4): [ -1.#IO 0.000 ]
*****************************************


Stringhe allocate: 5 (1147 interne); stringhe deallocate: 0 (907 interne)

225: which_v_indxeq_d
Sc (2 : 4): [ -1.#IO 0.000 ]
val = -1.#IO


indInf (1 : 4): [ 1 ]
*****************************************

227: assegna1_v_indxv_d
Sc (2 : 4): [ -1.#IO 0.000 ]
indInf (1 : 4): [ 1 ]
val = 0.000


Sc (2 : 4): [ 1.000 0.000 ]
*****************************************

229: min_v_d
Sc (2 : 4): [ 1.000 0.000 ]


min = 0.000
*****************************************

230: min_v_d
Sc (2 : 4): [ 1.000 0.000 ]


min = 0.000
*****************************************

230: incr1_v_d
Sc (2 : 4): [ 1.000 0.000 ]
s = 0.000


Sc (2 : 4): [ 1.000 0.000 ]
*****************************************

232: assegna1_v_indxv_d
Sc (2 : 4): [ 1.000 0.000 ]
indInf (1 : 4): [ 1 ]
val = 0.000


Sc (2 : 4): [ 1.000 0.000 ]
*****************************************

234: which_v_indxgt_d
Sc (2 : 4): [ 1.000 0.000 ]
val = 0.000


tmp1_i (1 : 7): [ 1 ]
*****************************************

235: setdiff_i
tmp1_i (1 : 7): [ 1 ]
linked (1 : 1): [ 2 ]
2944: copia_v_i
tmp1_i (1 : 7): [ 1 ]
start = 1
end = 1


ind (1 : 4): [ 1 ]
*****************************************

2946: esiste_v_i
el = 2
ind (1 : 4): [ 1 ]


indx = 0
*****************************************



ind (1 : 4): [ 1 ]
*****************************************

241: copia_v_indx_d
Sc (2 : 4): [ 1.000 0.000 ]
ind (1 : 4): [ 1 ]


tmp1_d (1 : 16): [ 1.000 ]
*****************************************

242: somma_v_d
tmp1_d (1 : 16): [ 1.000 ]
canc_NA = 0



ris: 1.000
*****************************************

242: dividi_vs_d
tmp1_d (1 : 16): [ 1.000 ]
div = 1.000


p_ind (1 : 4): [ 1.000 ]
*****************************************


*** sampleB_p ***
12: rep_i
ind (1 : 4): [ 1 ]
ripetizioni = 1


ris (1 : 1): [ 1 ]
*****************************************

246: assegna1_ms_rigaindx_i
Mdiscr (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 1 0 0 0 0
	 0 1 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 3
ris (1 : 1): [ 1 ]
val = 1


Mdiscr (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 1 0 0 0 0
	 1 1 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
*****************************************

251: accoda1_vv_i
linked (1 : 1): [ 2 ]
ris (1 : 1): [ 1 ]
ATTENZIONE (accoda_vv_i, linea connectivity_scalefree.c # 251): ingrandito il vettore da 1 a 2!


linked (2 : 4): [ 2 1 ]
*****************************************

334: somma_riga_i
Mdiscr (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 1 0 0 0 0
	 1 1 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 3


ris: 2
*****************************************

335: accoda1_vs_i
inthenet (2 : 4): [ 1 2 ]
s: 3


inthenet (3 : 4): [ 1 2 3 ]
*****************************************

99: somma_righe_i
Mdiscr (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 1 0 0 0 0
	 1 1 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]


Sin (5 : 5): [ 1 1 2 0 0 ]
*****************************************

101: max_v_i
Sin (5 : 5): [ 1 1 2 0 0 ]


max = 2
*****************************************

103: seq_i
da = 0, a = 3, incremento = 1


tmp2_i (4 : 10): [ 0 1 2 3 ]
*****************************************


*** hist ***
Sin (5 : 5): [ 1 1 2 0 0 ]
tmp2_i (4 : 10): [ 0 1 2 3 ]
right = 0
include_border = 1
naok = 0


tmp1_i (3 : 7): [ 2 2 1 ]

Stringhe allocate: 5 (1153 interne); stringhe deallocate: 0 (913 interne)

105: promuovi_i
tmp1_i (3 : 7): [ 2 2 1 ]
ATTENZIONE (promuovi_i, linea connectivity_scalefree.c # 105): il vettore e` stato promosso da intero a double: i calcoli saranno rallentati!

tmp1_d (3 : 16): [ 2.000 2.000 1.000 ]
*****************************************

106: assegna_v_segmv_d
Freq_in (7 : 7): [ 3.000 2.000 0.000 0.000 0.000 0.000 0.000 ]
start = 1
end = 3
tmp1_d (3 : 16): [ 2.000 2.000 1.000 ]


Freq_in (7 : 7): [ 2.000 2.000 1.000 0.000 0.000 0.000 0.000 ]
*****************************************

108: somma_colonne_i
Mdiscr (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 1 0 0 0 0
	 1 1 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]


Sout (5 : 5): [ 2 2 0 0 0 ]
*****************************************

110: max_v_i
Sout (5 : 5): [ 2 2 0 0 0 ]


max = 2
*****************************************

112: seq_i
da = 0, a = 3, incremento = 1


tmp2_i (4 : 10): [ 0 1 2 3 ]
*****************************************


*** hist ***
Sout (5 : 5): [ 2 2 0 0 0 ]
tmp2_i (4 : 10): [ 0 1 2 3 ]
right = 0
include_border = 1
naok = 0


tmp1_i (3 : 7): [ 3 0 2 ]

Stringhe allocate: 5 (1154 interne); stringhe deallocate: 0 (914 interne)

114: promuovi_i
tmp1_i (3 : 7): [ 3 0 2 ]
ATTENZIONE (promuovi_i, linea connectivity_scalefree.c # 114): il vettore e` stato promosso da intero a double: i calcoli saranno rallentati!

tmp1_d (3 : 16): [ 3.000 0.000 2.000 ]
*****************************************

115: assegna_v_segmv_d
Freq_out (7 : 7): [ 3.000 1.000 1.000 0.000 0.000 0.000 0.000 ]
start = 1
end = 3
tmp1_d (3 : 16): [ 3.000 0.000 2.000 ]


Freq_out (7 : 7): [ 3.000 0.000 2.000 0.000 0.000 0.000 0.000 ]
*****************************************

119: f_aux1_d
Freq_in (7 : 7): [ 2.000 2.000 1.000 0.000 0.000 0.000 0.000 ]
STin (7 : 7): [ 0.000 1.667 3.333 0.000 0.000 0.000 0.000 ]
toll_in (7 : 7): [ 0.000 1.667 3.333 0.000 0.000 0.000 0.000 ]
da = 2
a = 4
sgn1 = -1
sgn2 = -1


tmp1_d (3 : 16): [ -1.333 -5.667 0.000 ]
*****************************************

121: assegna1_v_indxNA_d
tmp1_d (3 : 16): [ -1.333 -5.667 0.000 ]
val = 1.000
complemento = 0


tmp1_d (3 : 16): [ -1.333 -5.667 0.000 ]
*****************************************

123: which_v_indxlt_d
tmp1_d (3 : 16): [ -1.333 -5.667 0.000 ]
val = 0.000

numposs (2 : 4): [ 1 2 ]
*****************************************

129: f_aux1_d
Freq_in (7 : 7): [ 2.000 2.000 1.000 0.000 0.000 0.000 0.000 ]
STin (7 : 7): [ 0.000 1.667 3.333 0.000 0.000 0.000 0.000 ]
toll_in (7 : 7): [ 0.000 1.667 3.333 0.000 0.000 0.000 0.000 ]
da = 2
a = 4
sgn1 = -1
sgn2 = 1


tmp1_d (3 : 16): [ 2.000 1.000 0.000 ]
*****************************************

131: assegna1_v_indxNA_d
tmp1_d (3 : 16): [ 2.000 1.000 0.000 ]
val = 1.000
complemento = 0


tmp1_d (3 : 16): [ 2.000 1.000 0.000 ]
*****************************************

133: copia_v_d
tmp1_d (3 : 16): [ 2.000 1.000 0.000 ]
start = 1
end = 3


tmp2_d (3 : 16): [ 2.000 1.000 0.000 ]
*****************************************

135: which_v_indxlt_d
tmp2_d (3 : 16): [ 2.000 1.000 0.000 ]
val = 0.000

primi (0 : 4): [ ]
*****************************************

149: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 2


p (2 : 2): [ 0.000 0.000 ]
*****************************************


*** score_sf1 ***
21: somma_vs_i
tmp1_i (1 : 7): [ 0 ]
s = 1.000


S_new (1 : 1): [ 1 ]
*****************************************

23: somma_vs_i
tmp1_i (1 : 7): [ 0 ]
s = 1.000


tmp_i1 (1 : 1): [ 1 ]
*****************************************

24: assegna_v_indxNA_d
STin (7 : 7): [ 0.000 1.667 3.333 0.000 0.000 0.000 0.000 ]
tmp_i1 (1 : 1): [ 1 ]


T1 (1 : 1): [ 0.000 ]
*****************************************

26: somma_vs_i
S_new (1 : 1): [ 1 ]
s = 1.000


tmp_i1 (1 : 1): [ 2 ]
*****************************************

27: assegna_v_indxNA_d
STin (7 : 7): [ 0.000 1.667 3.333 0.000 0.000 0.000 0.000 ]
tmp_i1 (1 : 1): [ 2 ]


T2 (1 : 1): [ 1.667 ]
*****************************************

29: somma_vs_i
tmp1_i (1 : 7): [ 0 ]
s = 1.000


tmp_i1 (1 : 1): [ 1 ]
*****************************************

30: assegna_v_indxNA_d
Freq_in (7 : 7): [ 2.000 2.000 1.000 0.000 0.000 0.000 0.000 ]
tmp_i1 (1 : 1): [ 1 ]


old1 (1 : 1): [ 2.000 ]
*****************************************

32: somma_vs_i
S_new (1 : 1): [ 1 ]
s = 1.000


tmp_i1 (1 : 1): [ 2 ]
*****************************************

33: assegna_v_indxNA_d
Freq_in (7 : 7): [ 2.000 2.000 1.000 0.000 0.000 0.000 0.000 ]
tmp_i1 (1 : 1): [ 2 ]


old2 (1 : 1): [ 2.000 ]
*****************************************

35: somma_vs_d
old1 (1 : 1): [ 2.000 ]
s = -1.000


new1 (1 : 1): [ 1.000 ]
*****************************************

37: somma_vs_d
old2 (1 : 1): [ 2.000 ]
s = 1.000


new2 (1 : 1): [ 3.000 ]
*****************************************

39: somma_vs_i
tmp1_i (1 : 7): [ 0 ]
s = 1.000


tmp_i1 (1 : 1): [ 1 ]
*****************************************

40: assegna_v_indx_d
toll_in (7 : 7): [ 0.000 1.667 3.333 0.000 0.000 0.000 0.000 ]
tmp_i1 (1 : 1): [ 1 ]


toll1 (1 : 1): [ 0.000 ]
*****************************************

42: somma_vs_i
S_new (1 : 1): [ 1 ]
s = 1.000


tmp_i2 (1 : 1): [ 2 ]
*****************************************

43: assegna_v_indx_d
toll_in (7 : 7): [ 0.000 1.667 3.333 0.000 0.000 0.000 0.000 ]
tmp_i2 (1 : 1): [ 2 ]


toll2 (1 : 1): [ 1.667 ]
*****************************************

45: diff_vv_d
old1 (1 : 1): [ 2.000 ]
T1 (1 : 1): [ 0.000 ]


a (1 : 1): [ 2.000 ]
*****************************************

46: abs1_v_d
a (1 : 1): [ 2.000 ]


a (1 : 1): [ 2.000 ]
*****************************************

48: diff_vv_d
new1 (1 : 1): [ 1.000 ]
T1 (1 : 1): [ 0.000 ]


b (1 : 1): [ 1.000 ]
*****************************************

49: abs1_v_d
b (1 : 1): [ 1.000 ]


b (1 : 1): [ 1.000 ]
*****************************************

51: which_v_indxna_d
T1 (1 : 1): [ 0.000 ]
complemento = 0


ind (0 : 1): [ ]
*****************************************

55: assegna1_vs_indx_d
a (1 : 1): [ 2.000 ]
ind (0 : 1): [ ]
val = 0.000


a (1 : 1): [ 2.000 ]
*****************************************

57: assegna1_vs_indx_d
b (1 : 1): [ 1.000 ]
ind (0 : 1): [ ]
val = 0.000


b (1 : 1): [ 1.000 ]
*****************************************

59: cbind2v_d
a (1 : 1): [ 2.000 ]
b (1 : 1): [ 1.000 ]


tmpm_d (1 x 2 : 1 x 2): [
	 2.000 1.000
 ]
*****************************************

60: max_righe_d
tmpm_d (1 x 2 : 1 x 2): [
	 2.000 1.000
 ]


m (1 : 1): [ 2.000 ]
*****************************************

62: f_aux_d
a (1 : 1): [ 2.000 ]
b (1 : 1): [ 1.000 ]
m (1 : 1): [ 2.000 ]
T1 (1 : 1): [ 0.000 ]
ATTENZIONE (f_aux_d, linea score_sf.c # 62): l'elemento 1 ha provocato una divisione per zero e gli e` stato assegnato un valore al di fuori del dominio!


S1 (1 : 1): [ 1.#IO ]
*****************************************

64: diff_vv_d
b (1 : 1): [ 1.000 ]
toll1 (1 : 1): [ 0.000 ]


tmp_d1 (1 : 1): [ 1.000 ]
*****************************************

65: which_v_indxgt_d
tmp_d1 (1 : 1): [ 1.000 ]
val = 0.000


indbad (1 : 1): [ 1 ]
*****************************************

69: diff_vv_d
a (1 : 1): [ 2.000 ]
toll1 (1 : 1): [ 0.000 ]


tmp_d1 (1 : 1): [ 2.000 ]
*****************************************

70: which_v_indxlt_d
tmp_d1 (1 : 1): [ 2.000 ]
val = 0.000

ind1 (0 : 1): [ ]
*****************************************

72: f_aux2_d
old1 (1 : 1): [ 2.000 ]
new1 (1 : 1): [ 1.000 ]
T1 (1 : 1): [ 0.000 ]


ind2 (0 : 1): [ ]
*****************************************

74: f_aux3_d
a (1 : 1): [ 2.000 ]
toll1 (1 : 1): [ 0.000 ]
b (1 : 1): [ 1.000 ]


ind3 (0 : 1): [ ]
*****************************************

76: unione1_i
ind1 (0 : 1): [ ]
ind2 (0 : 1): [ ]
2858: elimina_doppi_i
ind1 (0 : 0): [ ]


ris (0 : 0): [ ]
*****************************************



ris (0 : 0): [ ]
*****************************************

77: unione_i
ind3 (0 : 1): [ ]
ris (0 : 0): [ ]
4663: elimina_doppi_i
ind0 (0 : 0): [ ]


ris (0 : 0): [ ]
*****************************************



ris (0 : 0): [ ]
*****************************************

79: which_v_indxlt_d
new1 (1 : 1): [ 1.000 ]
val = 0.000

tmp_i1 (0 : 1): [ ]
*****************************************

80: interseca_i
ris (0 : 0): [ ]
indbad (1 : 1): [ 1 ]


tmp_i2 (0 : 0): [ ]
*****************************************

81: unione_i
tmp_i2 (0 : 0): [ ]
tmp_i1 (0 : 1): [ ]
4663: elimina_doppi_i
indinf (0 : 0): [ ]


ris (0 : 0): [ ]
*****************************************



ris (0 : 0): [ ]
*****************************************

82: assegna1_vs_indx_d
S1 (1 : 1): [ 1.#IO ]
ris (0 : 0): [ ]
val = -1.#IO


S1 (1 : 1): [ 1.#IO ]
*****************************************

86: assegna1_vs_indx_d
S1 (1 : 1): [ 1.#IO ]
ind (0 : 1): [ ]
val = 0.000


S1 (1 : 1): [ 1.#IO ]
*****************************************

95: somma_v_d
STin (7 : 7): [ 0.000 1.667 3.333 0.000 0.000 0.000 0.000 ]
canc_NA = 1



ris: 5.000
*****************************************

96: assegna1_v_indxeq_d
S1 (1 : 1): [ 1.#IO ]
val1 = 1.#IO
val2 = 5.000


S1 (1 : 1): [ 5.000 ]
*****************************************

99: diff_vv_d
old2 (1 : 1): [ 2.000 ]
T2 (1 : 1): [ 1.667 ]


a (1 : 1): [ 0.333 ]
*****************************************

100: abs1_v_d
a (1 : 1): [ 0.333 ]


a (1 : 1): [ 0.333 ]
*****************************************

102: diff_vv_d
new2 (1 : 1): [ 3.000 ]
T2 (1 : 1): [ 1.667 ]


b (1 : 1): [ 1.333 ]
*****************************************

103: abs1_v_d
b (1 : 1): [ 1.333 ]


b (1 : 1): [ 1.333 ]
*****************************************

105: cbind2v_d
a (1 : 1): [ 0.333 ]
b (1 : 1): [ 1.333 ]


tmpm_d (1 x 2 : 1 x 2): [
	 0.333 1.333
 ]
*****************************************

106: max_righe_d
tmpm_d (1 x 2 : 1 x 2): [
	 0.333 1.333
 ]


m (1 : 1): [ 1.333 ]
*****************************************

108: which_v_indxna_d
T2 (1 : 1): [ 1.667 ]
complemento = 0


ind (0 : 1): [ ]
*****************************************

112: assegna1_vs_indx_d
a (1 : 1): [ 0.333 ]
ind (0 : 1): [ ]
val = 0.000


a (1 : 1): [ 0.333 ]
*****************************************

114: assegna1_vs_indx_d
b (1 : 1): [ 1.333 ]
ind (0 : 1): [ ]
val = 0.000


b (1 : 1): [ 1.333 ]
*****************************************

116: cbind2v_d
a (1 : 1): [ 0.333 ]
b (1 : 1): [ 1.333 ]


tmpm_d (1 x 2 : 1 x 2): [
	 0.333 1.333
 ]
*****************************************

117: max_righe_d
tmpm_d (1 x 2 : 1 x 2): [
	 0.333 1.333
 ]


m (1 : 1): [ 1.333 ]
*****************************************

119: f_aux_d
a (1 : 1): [ 0.333 ]
b (1 : 1): [ 1.333 ]
m (1 : 1): [ 1.333 ]
T2 (1 : 1): [ 1.667 ]


S2 (1 : 1): [ -0.800 ]
*****************************************

121: diff_vv_d
b (1 : 1): [ 1.333 ]
toll2 (1 : 1): [ 1.667 ]


tmp_d1 (1 : 1): [ -0.333 ]
*****************************************

122: which_v_indxgt_d
tmp_d1 (1 : 1): [ -0.333 ]
val = 0.000


indbad (0 : 1): [ ]
*****************************************

142: assegna1_vs_indx_d
S2 (1 : 1): [ -0.800 ]
ind (0 : 1): [ ]
val = 0.000


S2 (1 : 1): [ -0.800 ]
*****************************************

151: which_v_indxeq_d
T2 (1 : 1): [ 1.667 ]
val = 0.000


ind (0 : 1): [ ]
*****************************************

153: assegna1_vs_indx_d
S2 (1 : 1): [ -0.800 ]
ind (0 : 1): [ ]
val = -1.#IO


S2 (1 : 1): [ -0.800 ]
*****************************************

155: somma_vv_d
S1 (1 : 1): [ 5.000 ]
S2 (1 : 1): [ -0.800 ]


tmp1_d (1 : 16): [ 4.200 ]
*****************************************

156: dividi1_vs_d
tmp1_d (1 : 16): [ 4.200 ]
div = 2.000


tmp1_d (1 : 16): [ 2.100 ]
*****************************************


Stringhe allocate: 5 (1306 interne); stringhe deallocate: 0 (1066 interne)


*** score_sf1 ***
21: somma_vs_i
tmp1_i (2 : 7): [ 0 0 ]
s = 2.000


S_new (2 : 2): [ 2 2 ]
*****************************************

23: somma_vs_i
tmp1_i (2 : 7): [ 0 0 ]
s = 1.000


tmp_i1 (2 : 2): [ 1 1 ]
*****************************************

24: assegna_v_indxNA_d
STin (7 : 7): [ 0.000 1.667 3.333 0.000 0.000 0.000 0.000 ]
tmp_i1 (2 : 2): [ 1 1 ]


T1 (2 : 2): [ 0.000 0.000 ]
*****************************************

26: somma_vs_i
S_new (2 : 2): [ 2 2 ]
s = 1.000


tmp_i1 (2 : 2): [ 3 3 ]
*****************************************

27: assegna_v_indxNA_d
STin (7 : 7): [ 0.000 1.667 3.333 0.000 0.000 0.000 0.000 ]
tmp_i1 (2 : 2): [ 3 3 ]


T2 (2 : 2): [ 3.333 3.333 ]
*****************************************

29: somma_vs_i
tmp1_i (2 : 7): [ 0 0 ]
s = 1.000


tmp_i1 (2 : 2): [ 1 1 ]
*****************************************

30: assegna_v_indxNA_d
Freq_in (7 : 7): [ 2.000 2.000 1.000 0.000 0.000 0.000 0.000 ]
tmp_i1 (2 : 2): [ 1 1 ]


old1 (2 : 2): [ 2.000 2.000 ]
*****************************************

32: somma_vs_i
S_new (2 : 2): [ 2 2 ]
s = 1.000


tmp_i1 (2 : 2): [ 3 3 ]
*****************************************

33: assegna_v_indxNA_d
Freq_in (7 : 7): [ 2.000 2.000 1.000 0.000 0.000 0.000 0.000 ]
tmp_i1 (2 : 2): [ 3 3 ]


old2 (2 : 2): [ 1.000 1.000 ]
*****************************************

35: somma_vs_d
old1 (2 : 2): [ 2.000 2.000 ]
s = -1.000


new1 (2 : 2): [ 1.000 1.000 ]
*****************************************

37: somma_vs_d
old2 (2 : 2): [ 1.000 1.000 ]
s = 1.000


new2 (2 : 2): [ 2.000 2.000 ]
*****************************************

39: somma_vs_i
tmp1_i (2 : 7): [ 0 0 ]
s = 1.000


tmp_i1 (2 : 2): [ 1 1 ]
*****************************************

40: assegna_v_indx_d
toll_in (7 : 7): [ 0.000 1.667 3.333 0.000 0.000 0.000 0.000 ]
tmp_i1 (2 : 2): [ 1 1 ]


toll1 (2 : 2): [ 0.000 0.000 ]
*****************************************

42: somma_vs_i
S_new (2 : 2): [ 2 2 ]
s = 1.000


tmp_i2 (2 : 2): [ 3 3 ]
*****************************************

43: assegna_v_indx_d
toll_in (7 : 7): [ 0.000 1.667 3.333 0.000 0.000 0.000 0.000 ]
tmp_i2 (2 : 2): [ 3 3 ]


toll2 (2 : 2): [ 3.333 3.333 ]
*****************************************

45: diff_vv_d
old1 (2 : 2): [ 2.000 2.000 ]
T1 (2 : 2): [ 0.000 0.000 ]


a (2 : 2): [ 2.000 2.000 ]
*****************************************

46: abs1_v_d
a (2 : 2): [ 2.000 2.000 ]


a (2 : 2): [ 2.000 2.000 ]
*****************************************

48: diff_vv_d
new1 (2 : 2): [ 1.000 1.000 ]
T1 (2 : 2): [ 0.000 0.000 ]


b (2 : 2): [ 1.000 1.000 ]
*****************************************

49: abs1_v_d
b (2 : 2): [ 1.000 1.000 ]


b (2 : 2): [ 1.000 1.000 ]
*****************************************

51: which_v_indxna_d
T1 (2 : 2): [ 0.000 0.000 ]
complemento = 0


ind (0 : 2): [ ]
*****************************************

55: assegna1_vs_indx_d
a (2 : 2): [ 2.000 2.000 ]
ind (0 : 2): [ ]
val = 0.000


a (2 : 2): [ 2.000 2.000 ]
*****************************************

57: assegna1_vs_indx_d
b (2 : 2): [ 1.000 1.000 ]
ind (0 : 2): [ ]
val = 0.000


b (2 : 2): [ 1.000 1.000 ]
*****************************************

59: cbind2v_d
a (2 : 2): [ 2.000 2.000 ]
b (2 : 2): [ 1.000 1.000 ]


tmpm_d (2 x 2 : 2 x 2): [
	 2.000 1.000
	 2.000 1.000
 ]
*****************************************

60: max_righe_d
tmpm_d (2 x 2 : 2 x 2): [
	 2.000 1.000
	 2.000 1.000
 ]


m (2 : 2): [ 2.000 2.000 ]
*****************************************

62: f_aux_d
a (2 : 2): [ 2.000 2.000 ]
b (2 : 2): [ 1.000 1.000 ]
m (2 : 2): [ 2.000 2.000 ]
T1 (2 : 2): [ 0.000 0.000 ]
ATTENZIONE (f_aux_d, linea score_sf.c # 62): l'elemento 1 ha provocato una divisione per zero e gli e` stato assegnato un valore al di fuori del dominio!
ATTENZIONE (f_aux_d, linea score_sf.c # 62): l'elemento 2 ha provocato una divisione per zero e gli e` stato assegnato un valore al di fuori del dominio!


S1 (2 : 2): [ 1.#IO 1.#IO ]
*****************************************

64: diff_vv_d
b (2 : 2): [ 1.000 1.000 ]
toll1 (2 : 2): [ 0.000 0.000 ]


tmp_d1 (2 : 2): [ 1.000 1.000 ]
*****************************************

65: which_v_indxgt_d
tmp_d1 (2 : 2): [ 1.000 1.000 ]
val = 0.000


indbad (2 : 2): [ 1 2 ]
*****************************************

69: diff_vv_d
a (2 : 2): [ 2.000 2.000 ]
toll1 (2 : 2): [ 0.000 0.000 ]


tmp_d1 (2 : 2): [ 2.000 2.000 ]
*****************************************

70: which_v_indxlt_d
tmp_d1 (2 : 2): [ 2.000 2.000 ]
val = 0.000

ind1 (0 : 2): [ ]
*****************************************

72: f_aux2_d
old1 (2 : 2): [ 2.000 2.000 ]
new1 (2 : 2): [ 1.000 1.000 ]
T1 (2 : 2): [ 0.000 0.000 ]


ind2 (0 : 2): [ ]
*****************************************

74: f_aux3_d
a (2 : 2): [ 2.000 2.000 ]
toll1 (2 : 2): [ 0.000 0.000 ]
b (2 : 2): [ 1.000 1.000 ]


ind3 (0 : 2): [ ]
*****************************************

76: unione1_i
ind1 (0 : 2): [ ]
ind2 (0 : 2): [ ]
2858: elimina_doppi_i
ind1 (0 : 0): [ ]


ris (0 : 0): [ ]
*****************************************



ris (0 : 0): [ ]
*****************************************

77: unione_i
ind3 (0 : 2): [ ]
ris (0 : 0): [ ]
4663: elimina_doppi_i
ind0 (0 : 0): [ ]


ris (0 : 0): [ ]
*****************************************



ris (0 : 0): [ ]
*****************************************

79: which_v_indxlt_d
new1 (2 : 2): [ 1.000 1.000 ]
val = 0.000

tmp_i1 (0 : 2): [ ]
*****************************************

80: interseca_i
ris (0 : 0): [ ]
indbad (2 : 2): [ 1 2 ]


tmp_i2 (0 : 0): [ ]
*****************************************

81: unione_i
tmp_i2 (0 : 0): [ ]
tmp_i1 (0 : 2): [ ]
4663: elimina_doppi_i
indinf (0 : 0): [ ]


ris (0 : 0): [ ]
*****************************************



ris (0 : 0): [ ]
*****************************************

82: assegna1_vs_indx_d
S1 (2 : 2): [ 1.#IO 1.#IO ]
ris (0 : 0): [ ]
val = -1.#IO


S1 (2 : 2): [ 1.#IO 1.#IO ]
*****************************************

86: assegna1_vs_indx_d
S1 (2 : 2): [ 1.#IO 1.#IO ]
ind (0 : 2): [ ]
val = 0.000


S1 (2 : 2): [ 1.#IO 1.#IO ]
*****************************************

95: somma_v_d
STin (7 : 7): [ 0.000 1.667 3.333 0.000 0.000 0.000 0.000 ]
canc_NA = 1



ris: 5.000
*****************************************

96: assegna1_v_indxeq_d
S1 (2 : 2): [ 1.#IO 1.#IO ]
val1 = 1.#IO
val2 = 5.000


S1 (2 : 2): [ 5.000 5.000 ]
*****************************************

99: diff_vv_d
old2 (2 : 2): [ 1.000 1.000 ]
T2 (2 : 2): [ 3.333 3.333 ]


a (2 : 2): [ -2.333 -2.333 ]
*****************************************

100: abs1_v_d
a (2 : 2): [ -2.333 -2.333 ]


a (2 : 2): [ 2.333 2.333 ]
*****************************************

102: diff_vv_d
new2 (2 : 2): [ 2.000 2.000 ]
T2 (2 : 2): [ 3.333 3.333 ]


b (2 : 2): [ -1.333 -1.333 ]
*****************************************

103: abs1_v_d
b (2 : 2): [ -1.333 -1.333 ]


b (2 : 2): [ 1.333 1.333 ]
*****************************************

105: cbind2v_d
a (2 : 2): [ 2.333 2.333 ]
b (2 : 2): [ 1.333 1.333 ]


tmpm_d (2 x 2 : 2 x 2): [
	 2.333 1.333
	 2.333 1.333
 ]
*****************************************

106: max_righe_d
tmpm_d (2 x 2 : 2 x 2): [
	 2.333 1.333
	 2.333 1.333
 ]


m (2 : 2): [ 2.333 2.333 ]
*****************************************

108: which_v_indxna_d
T2 (2 : 2): [ 3.333 3.333 ]
complemento = 0


ind (0 : 2): [ ]
*****************************************

112: assegna1_vs_indx_d
a (2 : 2): [ 2.333 2.333 ]
ind (0 : 2): [ ]
val = 0.000


a (2 : 2): [ 2.333 2.333 ]
*****************************************

114: assegna1_vs_indx_d
b (2 : 2): [ 1.333 1.333 ]
ind (0 : 2): [ ]
val = 0.000


b (2 : 2): [ 1.333 1.333 ]
*****************************************

116: cbind2v_d
a (2 : 2): [ 2.333 2.333 ]
b (2 : 2): [ 1.333 1.333 ]


tmpm_d (2 x 2 : 2 x 2): [
	 2.333 1.333
	 2.333 1.333
 ]
*****************************************

117: max_righe_d
tmpm_d (2 x 2 : 2 x 2): [
	 2.333 1.333
	 2.333 1.333
 ]


m (2 : 2): [ 2.333 2.333 ]
*****************************************

119: f_aux_d
a (2 : 2): [ 2.333 2.333 ]
b (2 : 2): [ 1.333 1.333 ]
m (2 : 2): [ 2.333 2.333 ]
T2 (2 : 2): [ 3.333 3.333 ]


S2 (2 : 2): [ 0.700 0.700 ]
*****************************************

121: diff_vv_d
b (2 : 2): [ 1.333 1.333 ]
toll2 (2 : 2): [ 3.333 3.333 ]


tmp_d1 (2 : 2): [ -2.000 -2.000 ]
*****************************************

122: which_v_indxgt_d
tmp_d1 (2 : 2): [ -2.000 -2.000 ]
val = 0.000


indbad (0 : 2): [ ]
*****************************************

142: assegna1_vs_indx_d
S2 (2 : 2): [ 0.700 0.700 ]
ind (0 : 2): [ ]
val = 0.000


S2 (2 : 2): [ 0.700 0.700 ]
*****************************************

151: which_v_indxeq_d
T2 (2 : 2): [ 3.333 3.333 ]
val = 0.000


ind (0 : 2): [ ]
*****************************************

153: assegna1_vs_indx_d
S2 (2 : 2): [ 0.700 0.700 ]
ind (0 : 2): [ ]
val = -1.#IO


S2 (2 : 2): [ 0.700 0.700 ]
*****************************************

155: somma_vv_d
S1 (2 : 2): [ 5.000 5.000 ]
S2 (2 : 2): [ 0.700 0.700 ]


tmp1_d (2 : 16): [ 5.700 5.700 ]
*****************************************

156: dividi1_vs_d
tmp1_d (2 : 16): [ 5.700 5.700 ]
div = 2.000


tmp1_d (2 : 16): [ 2.850 2.850 ]
*****************************************


Stringhe allocate: 5 (1458 interne); stringhe deallocate: 0 (1218 interne)

158: which_v_indxeq_d
p (2 : 2): [ 2.100 2.850 ]
val = -1.#IO


indInf (0 : 4): [ ]
*****************************************

160: assegna1_v_indxv_d
p (2 : 2): [ 2.100 2.850 ]
indInf (0 : 4): [ ]
val = 0.000


p (2 : 2): [ 2.100 2.850 ]
*****************************************

162: min_v_d
p (2 : 2): [ 2.100 2.850 ]


min = 2.100
*****************************************

165: assegna1_v_indxv_d
p (2 : 2): [ 2.100 2.850 ]
indInf (0 : 4): [ ]
val = 0.000


p (2 : 2): [ 2.100 2.850 ]
*****************************************

168: somma_v_d
p (2 : 2): [ 2.100 2.850 ]
canc_NA = 0



ris: 4.950
*****************************************

170: seq_i
da = 1, a = 2, incremento = 1


tmp1_i (2 : 7): [ 1 2 ]
*****************************************

171: dividi_vs_d
p (2 : 2): [ 2.100 2.850 ]
div = 4.950


tmp1_d (2 : 16): [ 0.424 0.576 ]
*****************************************


*** sampleB_p ***

*** sample_p ***
tmp1_i (2 : 7): [ 1 2 ]
k = 1, replace = 0
tmp1_d (2 : 16): [ 0.424 0.576 ]


ris (1 : 1): [ 2 ]
*****************************************


Stringhe allocate: 5 (1458 interne); stringhe deallocate: 0 (1218 interne)

189: elimina_doppi_i
give_outlink (0 : 0): [ ]


aus_give_outlink (0 : 0): [ ]
*****************************************

213: somma_colonne_i
Mdiscr (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 1 0 0 0 0
	 1 1 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]


Sout (5 : 5): [ 2 2 0 0 0 ]
*****************************************

215: max_v_i
Sout (5 : 5): [ 2 2 0 0 0 ]


max = 2
*****************************************

217: seq_i
da = 0, a = 3, incremento = 1


tmp2_i (4 : 10): [ 0 1 2 3 ]
*****************************************


*** hist ***
Sout (5 : 5): [ 2 2 0 0 0 ]
tmp2_i (4 : 10): [ 0 1 2 3 ]
right = 0
include_border = 1
naok = 0


tmp1_i (3 : 7): [ 3 0 2 ]

Stringhe allocate: 5 (1458 interne); stringhe deallocate: 0 (1218 interne)

219: promuovi_i
tmp1_i (3 : 7): [ 3 0 2 ]
ATTENZIONE (promuovi_i, linea connectivity_scalefree.c # 219): il vettore e` stato promosso da intero a double: i calcoli saranno rallentati!

tmp1_d (3 : 16): [ 3.000 0.000 2.000 ]
*****************************************

220: assegna_v_segmv_d
Freq_out (7 : 7): [ 3.000 0.000 2.000 0.000 0.000 0.000 0.000 ]
start = 1
end = 3
tmp1_d (3 : 16): [ 3.000 0.000 2.000 ]


Freq_out (7 : 7): [ 3.000 0.000 2.000 0.000 0.000 0.000 0.000 ]
*****************************************

222: copia_v_indx_i
Sout (5 : 5): [ 2 2 0 0 0 ]
inthenet (3 : 4): [ 1 2 3 ]


tmp1_i (3 : 7): [ 2 2 0 ]
*****************************************


*** score_sf1 ***
21: somma_vs_i
tmp1_i (3 : 7): [ 2 2 0 ]
s = 1.000


S_new (3 : 3): [ 3 3 1 ]
*****************************************

23: somma_vs_i
tmp1_i (3 : 7): [ 2 2 0 ]
s = 1.000


tmp_i1 (3 : 3): [ 3 3 1 ]
*****************************************

24: assegna_v_indxNA_d
STout (7 : 7): [ 1.#QO 0.333 0.667 1.000 1.333 1.667 0.000 ]
tmp_i1 (3 : 3): [ 3 3 1 ]


T1 (3 : 3): [ 0.667 0.667 1.#QO ]
*****************************************

26: somma_vs_i
S_new (3 : 3): [ 3 3 1 ]
s = 1.000


tmp_i1 (3 : 3): [ 4 4 2 ]
*****************************************

27: assegna_v_indxNA_d
STout (7 : 7): [ 1.#QO 0.333 0.667 1.000 1.333 1.667 0.000 ]
tmp_i1 (3 : 3): [ 4 4 2 ]


T2 (3 : 3): [ 1.000 1.000 0.333 ]
*****************************************

29: somma_vs_i
tmp1_i (3 : 7): [ 2 2 0 ]
s = 1.000


tmp_i1 (3 : 3): [ 3 3 1 ]
*****************************************

30: assegna_v_indxNA_d
Freq_out (7 : 7): [ 3.000 0.000 2.000 0.000 0.000 0.000 0.000 ]
tmp_i1 (3 : 3): [ 3 3 1 ]


old1 (3 : 3): [ 2.000 2.000 3.000 ]
*****************************************

32: somma_vs_i
S_new (3 : 3): [ 3 3 1 ]
s = 1.000


tmp_i1 (3 : 3): [ 4 4 2 ]
*****************************************

33: assegna_v_indxNA_d
Freq_out (7 : 7): [ 3.000 0.000 2.000 0.000 0.000 0.000 0.000 ]
tmp_i1 (3 : 3): [ 4 4 2 ]


old2 (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

35: somma_vs_d
old1 (3 : 3): [ 2.000 2.000 3.000 ]
s = -1.000


new1 (3 : 3): [ 1.000 1.000 2.000 ]
*****************************************

37: somma_vs_d
old2 (3 : 3): [ 0.000 0.000 0.000 ]
s = 1.000


new2 (3 : 3): [ 1.000 1.000 1.000 ]
*****************************************

39: somma_vs_i
tmp1_i (3 : 7): [ 2 2 0 ]
s = 1.000


tmp_i1 (3 : 3): [ 3 3 1 ]
*****************************************

40: assegna_v_indx_d
toll_out (7 : 7): [ 7.000 0.333 0.667 1.000 1.333 1.667 0.000 ]
tmp_i1 (3 : 3): [ 3 3 1 ]


toll1 (3 : 3): [ 0.667 0.667 7.000 ]
*****************************************

42: somma_vs_i
S_new (3 : 3): [ 3 3 1 ]
s = 1.000


tmp_i2 (3 : 3): [ 4 4 2 ]
*****************************************

43: assegna_v_indx_d
toll_out (7 : 7): [ 7.000 0.333 0.667 1.000 1.333 1.667 0.000 ]
tmp_i2 (3 : 3): [ 4 4 2 ]


toll2 (3 : 3): [ 1.000 1.000 0.333 ]
*****************************************

45: diff_vv_d
old1 (3 : 3): [ 2.000 2.000 3.000 ]
T1 (3 : 3): [ 0.667 0.667 1.#QO ]


a (3 : 3): [ 1.333 1.333 1.#QO ]
*****************************************

46: abs1_v_d
a (3 : 3): [ 1.333 1.333 1.#QO ]


a (3 : 3): [ 1.333 1.333 1.#QO ]
*****************************************

48: diff_vv_d
new1 (3 : 3): [ 1.000 1.000 2.000 ]
T1 (3 : 3): [ 0.667 0.667 1.#QO ]


b (3 : 3): [ 0.333 0.333 1.#QO ]
*****************************************

49: abs1_v_d
b (3 : 3): [ 0.333 0.333 1.#QO ]


b (3 : 3): [ 0.333 0.333 1.#QO ]
*****************************************

51: which_v_indxna_d
T1 (3 : 3): [ 0.667 0.667 1.#QO ]
complemento = 0


ind (1 : 3): [ 3 ]
*****************************************

55: assegna1_vs_indx_d
a (3 : 3): [ 1.333 1.333 1.#QO ]
ind (1 : 3): [ 3 ]
val = 0.000


a (3 : 3): [ 1.333 1.333 0.000 ]
*****************************************

57: assegna1_vs_indx_d
b (3 : 3): [ 0.333 0.333 1.#QO ]
ind (1 : 3): [ 3 ]
val = 0.000


b (3 : 3): [ 0.333 0.333 0.000 ]
*****************************************

59: cbind2v_d
a (3 : 3): [ 1.333 1.333 0.000 ]
b (3 : 3): [ 0.333 0.333 0.000 ]


tmpm_d (3 x 2 : 3 x 2): [
	 1.333 0.333
	 1.333 0.333
	 0.000 0.000
 ]
*****************************************

60: max_righe_d
tmpm_d (3 x 2 : 3 x 2): [
	 1.333 0.333
	 1.333 0.333
	 0.000 0.000
 ]


m (3 : 3): [ 1.333 1.333 0.000 ]
*****************************************

62: f_aux_d
a (3 : 3): [ 1.333 1.333 0.000 ]
b (3 : 3): [ 0.333 0.333 0.000 ]
m (3 : 3): [ 1.333 1.333 0.000 ]
T1 (3 : 3): [ 0.667 0.667 1.#QO ]


S1 (3 : 3): [ 2.000 2.000 1.#QO ]
*****************************************

64: diff_vv_d
b (3 : 3): [ 0.333 0.333 0.000 ]
toll1 (3 : 3): [ 0.667 0.667 7.000 ]


tmp_d1 (3 : 3): [ -0.333 -0.333 -7.000 ]
*****************************************

65: which_v_indxgt_d
tmp_d1 (3 : 3): [ -0.333 -0.333 -7.000 ]
val = 0.000


indbad (0 : 3): [ ]
*****************************************

86: assegna1_vs_indx_d
S1 (3 : 3): [ 2.000 2.000 1.#QO ]
ind (1 : 3): [ 3 ]
val = 0.000


S1 (3 : 3): [ 2.000 2.000 0.000 ]
*****************************************

95: somma_v_d
STout (7 : 7): [ 1.#QO 0.333 0.667 1.000 1.333 1.667 0.000 ]
canc_NA = 1



ris: 5.000
*****************************************

96: assegna1_v_indxeq_d
S1 (3 : 3): [ 2.000 2.000 0.000 ]
val1 = 1.#IO
val2 = 5.000


S1 (3 : 3): [ 2.000 2.000 0.000 ]
*****************************************

99: diff_vv_d
old2 (3 : 3): [ 0.000 0.000 0.000 ]
T2 (3 : 3): [ 1.000 1.000 0.333 ]


a (3 : 3): [ -1.000 -1.000 -0.333 ]
*****************************************

100: abs1_v_d
a (3 : 3): [ -1.000 -1.000 -0.333 ]


a (3 : 3): [ 1.000 1.000 0.333 ]
*****************************************

102: diff_vv_d
new2 (3 : 3): [ 1.000 1.000 1.000 ]
T2 (3 : 3): [ 1.000 1.000 0.333 ]


b (3 : 3): [ 0.000 0.000 0.667 ]
*****************************************

103: abs1_v_d
b (3 : 3): [ 0.000 0.000 0.667 ]


b (3 : 3): [ 0.000 0.000 0.667 ]
*****************************************

105: cbind2v_d
a (3 : 3): [ 1.000 1.000 0.333 ]
b (3 : 3): [ 0.000 0.000 0.667 ]


tmpm_d (3 x 2 : 3 x 2): [
	 1.000 0.000
	 1.000 0.000
	 0.333 0.667
 ]
*****************************************

106: max_righe_d
tmpm_d (3 x 2 : 3 x 2): [
	 1.000 0.000
	 1.000 0.000
	 0.333 0.667
 ]


m (3 : 3): [ 1.000 1.000 0.667 ]
*****************************************

108: which_v_indxna_d
T2 (3 : 3): [ 1.000 1.000 0.333 ]
complemento = 0


ind (0 : 3): [ ]
*****************************************

112: assegna1_vs_indx_d
a (3 : 3): [ 1.000 1.000 0.333 ]
ind (0 : 3): [ ]
val = 0.000


a (3 : 3): [ 1.000 1.000 0.333 ]
*****************************************

114: assegna1_vs_indx_d
b (3 : 3): [ 0.000 0.000 0.667 ]
ind (0 : 3): [ ]
val = 0.000


b (3 : 3): [ 0.000 0.000 0.667 ]
*****************************************

116: cbind2v_d
a (3 : 3): [ 1.000 1.000 0.333 ]
b (3 : 3): [ 0.000 0.000 0.667 ]


tmpm_d (3 x 2 : 3 x 2): [
	 1.000 0.000
	 1.000 0.000
	 0.333 0.667
 ]
*****************************************

117: max_righe_d
tmpm_d (3 x 2 : 3 x 2): [
	 1.000 0.000
	 1.000 0.000
	 0.333 0.667
 ]


m (3 : 3): [ 1.000 1.000 0.667 ]
*****************************************

119: f_aux_d
a (3 : 3): [ 1.000 1.000 0.333 ]
b (3 : 3): [ 0.000 0.000 0.667 ]
m (3 : 3): [ 1.000 1.000 0.667 ]
T2 (3 : 3): [ 1.000 1.000 0.333 ]


S2 (3 : 3): [ 1.000 1.000 -2.000 ]
*****************************************

121: diff_vv_d
b (3 : 3): [ 0.000 0.000 0.667 ]
toll2 (3 : 3): [ 1.000 1.000 0.333 ]


tmp_d1 (3 : 3): [ -1.000 -1.000 0.333 ]
*****************************************

122: which_v_indxgt_d
tmp_d1 (3 : 3): [ -1.000 -1.000 0.333 ]
val = 0.000


indbad (1 : 3): [ 3 ]
*****************************************

126: diff_vv_d
a (3 : 3): [ 1.000 1.000 0.333 ]
toll2 (3 : 3): [ 1.000 1.000 0.333 ]


tmp_d1 (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

127: which_v_indxle_d
tmp_d1 (3 : 3): [ 0.000 0.000 0.000 ]
val = 0.000


ind1 (3 : 3): [ 1 2 3 ]
*****************************************

129: f_aux2_d
old2 (3 : 3): [ 0.000 0.000 0.000 ]
new2 (3 : 3): [ 1.000 1.000 1.000 ]
T2 (3 : 3): [ 1.000 1.000 0.333 ]


ind2 (3 : 3): [ 1 2 3 ]
*****************************************

131: f_aux3_d
a (3 : 3): [ 1.000 1.000 0.333 ]
toll2 (3 : 3): [ 1.000 1.000 0.333 ]
b (3 : 3): [ 0.000 0.000 0.667 ]


ind3 (0 : 3): [ ]
*****************************************

133: unione1_i
ind1 (3 : 3): [ 1 2 3 ]
ind2 (3 : 3): [ 1 2 3 ]
2858: elimina_doppi_i
ind1 (6 : 6): [ 1 2 3 1 2 3 ]


ris (3 : 6): [ 1 2 3 ]
*****************************************



ris (3 : 6): [ 1 2 3 ]
*****************************************

134: unione_i
ind3 (0 : 3): [ ]
ris (3 : 6): [ 1 2 3 ]
4663: elimina_doppi_i
ind0 (3 : 3): [ 1 2 3 ]


ris (3 : 3): [ 1 2 3 ]
*****************************************



ris (3 : 3): [ 1 2 3 ]
*****************************************

136: interseca_i
ris (3 : 3): [ 1 2 3 ]
indbad (1 : 3): [ 3 ]
2306: esiste_v_i
el = 1
indbad (1 : 3): [ 3 ]


indx = 0
*****************************************

2307: esiste_v_i
el = 1
indinf (1 : 1): [ 37877944 ]


indx = 0
*****************************************

2306: esiste_v_i
el = 2
indbad (1 : 3): [ 3 ]


indx = 0
*****************************************

2307: esiste_v_i
el = 2
indinf (1 : 1): [ 37877944 ]


indx = 0
*****************************************

2306: esiste_v_i
el = 3
indbad (1 : 3): [ 3 ]


indx = 1
*****************************************

2307: esiste_v_i
el = 3
indinf (1 : 1): [ 37877944 ]


indx = 0
*****************************************



indinf (1 : 1): [ 3 ]
*****************************************

138: assegna1_vs_indx_d
S2 (3 : 3): [ 1.000 1.000 -2.000 ]
indinf (1 : 1): [ 3 ]
val = -1.#IO


S2 (3 : 3): [ 1.000 1.000 -1.#IO ]
*****************************************

142: assegna1_vs_indx_d
S2 (3 : 3): [ 1.000 1.000 -1.#IO ]
ind (0 : 3): [ ]
val = 0.000


S2 (3 : 3): [ 1.000 1.000 -1.#IO ]
*****************************************

151: which_v_indxeq_d
T2 (3 : 3): [ 1.000 1.000 0.333 ]
val = 0.000


ind (0 : 3): [ ]
*****************************************

153: assegna1_vs_indx_d
S2 (3 : 3): [ 1.000 1.000 -1.#IO ]
ind (0 : 3): [ ]
val = -1.#IO


S2 (3 : 3): [ 1.000 1.000 -1.#IO ]
*****************************************

155: somma_vv_d
S1 (3 : 3): [ 2.000 2.000 0.000 ]
S2 (3 : 3): [ 1.000 1.000 -1.#IO ]


Sc (3 : 4): [ 3.000 3.000 -1.#IO ]
*****************************************

156: dividi1_vs_d
Sc (3 : 4): [ 3.000 3.000 -1.#IO ]
div = 2.000


Sc (3 : 4): [ 1.500 1.500 -1.#IO ]
*****************************************


Stringhe allocate: 5 (1604 interne); stringhe deallocate: 0 (1364 interne)

225: which_v_indxeq_d
Sc (3 : 4): [ 1.500 1.500 -1.#IO ]
val = -1.#IO


indInf (1 : 4): [ 3 ]
*****************************************

227: assegna1_v_indxv_d
Sc (3 : 4): [ 1.500 1.500 -1.#IO ]
indInf (1 : 4): [ 3 ]
val = 0.000


Sc (3 : 4): [ 3.000 1.500 -1.#IO ]
*****************************************

229: min_v_d
Sc (3 : 4): [ 3.000 1.500 -1.#IO ]


min = -1.#IO
*****************************************

230: min_v_d
Sc (3 : 4): [ 3.000 1.500 -1.#IO ]


min = -1.#IO
*****************************************

230: incr1_v_d
Sc (3 : 4): [ 3.000 1.500 -1.#IO ]
s = 1.#IO


Sc (3 : 4): [ 1.#IO 1.#IO -1.#IO ]
*****************************************

232: assegna1_v_indxv_d
Sc (3 : 4): [ 1.#IO 1.#IO -1.#IO ]
indInf (1 : 4): [ 3 ]
val = 0.000


Sc (3 : 4): [ 3.000 1.#IO -1.#IO ]
*****************************************

234: which_v_indxgt_d
Sc (3 : 4): [ 3.000 1.#IO -1.#IO ]
val = 0.000


tmp1_i (2 : 7): [ 1 2 ]
*****************************************

235: setdiff_i
tmp1_i (2 : 7): [ 1 2 ]
linked (0 : 4): [ ]
2944: copia_v_i
tmp1_i (2 : 7): [ 1 2 ]
start = 1
end = 2


ind (2 : 4): [ 1 2 ]
*****************************************



ind (2 : 4): [ 1 2 ]
*****************************************

241: copia_v_indx_d
Sc (3 : 4): [ 3.000 1.#IO -1.#IO ]
ind (2 : 4): [ 1 2 ]


tmp1_d (2 : 16): [ 3.000 1.#IO ]
*****************************************

242: somma_v_d
tmp1_d (2 : 16): [ 3.000 1.#IO ]
canc_NA = 0



ris: 1.#IO
*****************************************

242: dividi_vs_d
tmp1_d (2 : 16): [ 3.000 1.#IO ]
div = 1.#IO


p_ind (2 : 4): [ 0.000 -1.#IO ]
*****************************************


*** sampleB_p ***

*** sample_p ***
ind (2 : 4): [ 1 2 ]
k = 1, replace = 0
p_ind (2 : 4): [ 0.000 -1.#IO ]


ris (1 : 1): [ 1 ]
*****************************************


Stringhe allocate: 5 (1604 interne); stringhe deallocate: 0 (1364 interne)

246: assegna1_ms_rigaindx_i
Mdiscr (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 1 0 0 0 0
	 1 1 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 4
ris (1 : 1): [ 1 ]
val = 1


Mdiscr (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 1 0 0 0 0
	 1 1 0 0 0
	 1 0 0 0 0
	 0 0 0 0 0
 ]
*****************************************

251: accoda1_vv_i
linked (0 : 4): [ ]
ris (1 : 1): [ 1 ]


linked (1 : 4): [ 1 ]
*****************************************

213: somma_colonne_i
Mdiscr (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 1 0 0 0 0
	 1 1 0 0 0
	 1 0 0 0 0
	 0 0 0 0 0
 ]


Sout (5 : 5): [ 3 2 0 0 0 ]
*****************************************

215: max_v_i
Sout (5 : 5): [ 3 2 0 0 0 ]


max = 3
*****************************************

217: seq_i
da = 0, a = 4, incremento = 1


tmp2_i (5 : 10): [ 0 1 2 3 4 ]
*****************************************


*** hist ***
Sout (5 : 5): [ 3 2 0 0 0 ]
tmp2_i (5 : 10): [ 0 1 2 3 4 ]
right = 0
include_border = 1
naok = 0


tmp1_i (4 : 7): [ 3 0 1 1 ]

Stringhe allocate: 5 (1604 interne); stringhe deallocate: 0 (1364 interne)

219: promuovi_i
tmp1_i (4 : 7): [ 3 0 1 1 ]
ATTENZIONE (promuovi_i, linea connectivity_scalefree.c # 219): il vettore e` stato promosso da intero a double: i calcoli saranno rallentati!

tmp1_d (4 : 16): [ 3.000 0.000 1.000 1.000 ]
*****************************************

220: assegna_v_segmv_d
Freq_out (7 : 7): [ 3.000 0.000 2.000 0.000 0.000 0.000 0.000 ]
start = 1
end = 4
tmp1_d (4 : 16): [ 3.000 0.000 1.000 1.000 ]


Freq_out (7 : 7): [ 3.000 0.000 1.000 1.000 0.000 0.000 0.000 ]
*****************************************

222: copia_v_indx_i
Sout (5 : 5): [ 3 2 0 0 0 ]
inthenet (3 : 4): [ 1 2 3 ]


tmp1_i (3 : 7): [ 3 2 0 ]
*****************************************


*** score_sf1 ***
21: somma_vs_i
tmp1_i (3 : 7): [ 3 2 0 ]
s = 1.000


S_new (3 : 3): [ 4 3 1 ]
*****************************************

23: somma_vs_i
tmp1_i (3 : 7): [ 3 2 0 ]
s = 1.000


tmp_i1 (3 : 3): [ 4 3 1 ]
*****************************************

24: assegna_v_indxNA_d
STout (7 : 7): [ 1.#QO 0.333 0.667 1.000 1.333 1.667 0.000 ]
tmp_i1 (3 : 3): [ 4 3 1 ]


T1 (3 : 3): [ 1.000 0.667 1.#QO ]
*****************************************

26: somma_vs_i
S_new (3 : 3): [ 4 3 1 ]
s = 1.000


tmp_i1 (3 : 3): [ 5 4 2 ]
*****************************************

27: assegna_v_indxNA_d
STout (7 : 7): [ 1.#QO 0.333 0.667 1.000 1.333 1.667 0.000 ]
tmp_i1 (3 : 3): [ 5 4 2 ]


T2 (3 : 3): [ 1.333 1.000 0.333 ]
*****************************************

29: somma_vs_i
tmp1_i (3 : 7): [ 3 2 0 ]
s = 1.000


tmp_i1 (3 : 3): [ 4 3 1 ]
*****************************************

30: assegna_v_indxNA_d
Freq_out (7 : 7): [ 3.000 0.000 1.000 1.000 0.000 0.000 0.000 ]
tmp_i1 (3 : 3): [ 4 3 1 ]


old1 (3 : 3): [ 1.000 1.000 3.000 ]
*****************************************

32: somma_vs_i
S_new (3 : 3): [ 4 3 1 ]
s = 1.000


tmp_i1 (3 : 3): [ 5 4 2 ]
*****************************************

33: assegna_v_indxNA_d
Freq_out (7 : 7): [ 3.000 0.000 1.000 1.000 0.000 0.000 0.000 ]
tmp_i1 (3 : 3): [ 5 4 2 ]


old2 (3 : 3): [ 0.000 1.000 0.000 ]
*****************************************

35: somma_vs_d
old1 (3 : 3): [ 1.000 1.000 3.000 ]
s = -1.000


new1 (3 : 3): [ 0.000 0.000 2.000 ]
*****************************************

37: somma_vs_d
old2 (3 : 3): [ 0.000 1.000 0.000 ]
s = 1.000


new2 (3 : 3): [ 1.000 2.000 1.000 ]
*****************************************

39: somma_vs_i
tmp1_i (3 : 7): [ 3 2 0 ]
s = 1.000


tmp_i1 (3 : 3): [ 4 3 1 ]
*****************************************

40: assegna_v_indx_d
toll_out (7 : 7): [ 7.000 0.333 0.667 1.000 1.333 1.667 0.000 ]
tmp_i1 (3 : 3): [ 4 3 1 ]


toll1 (3 : 3): [ 1.000 0.667 7.000 ]
*****************************************

42: somma_vs_i
S_new (3 : 3): [ 4 3 1 ]
s = 1.000


tmp_i2 (3 : 3): [ 5 4 2 ]
*****************************************

43: assegna_v_indx_d
toll_out (7 : 7): [ 7.000 0.333 0.667 1.000 1.333 1.667 0.000 ]
tmp_i2 (3 : 3): [ 5 4 2 ]


toll2 (3 : 3): [ 1.333 1.000 0.333 ]
*****************************************

45: diff_vv_d
old1 (3 : 3): [ 1.000 1.000 3.000 ]
T1 (3 : 3): [ 1.000 0.667 1.#QO ]


a (3 : 3): [ 0.000 0.333 1.#QO ]
*****************************************

46: abs1_v_d
a (3 : 3): [ 0.000 0.333 1.#QO ]


a (3 : 3): [ 0.000 0.333 1.#QO ]
*****************************************

48: diff_vv_d
new1 (3 : 3): [ 0.000 0.000 2.000 ]
T1 (3 : 3): [ 1.000 0.667 1.#QO ]


b (3 : 3): [ -1.000 -0.667 1.#QO ]
*****************************************

49: abs1_v_d
b (3 : 3): [ -1.000 -0.667 1.#QO ]


b (3 : 3): [ 1.000 0.667 1.#QO ]
*****************************************

51: which_v_indxna_d
T1 (3 : 3): [ 1.000 0.667 1.#QO ]
complemento = 0


ind (1 : 3): [ 3 ]
*****************************************

55: assegna1_vs_indx_d
a (3 : 3): [ 0.000 0.333 1.#QO ]
ind (1 : 3): [ 3 ]
val = 0.000


a (3 : 3): [ 0.000 0.333 0.000 ]
*****************************************

57: assegna1_vs_indx_d
b (3 : 3): [ 1.000 0.667 1.#QO ]
ind (1 : 3): [ 3 ]
val = 0.000


b (3 : 3): [ 1.000 0.667 0.000 ]
*****************************************

59: cbind2v_d
a (3 : 3): [ 0.000 0.333 0.000 ]
b (3 : 3): [ 1.000 0.667 0.000 ]


tmpm_d (3 x 2 : 3 x 2): [
	 0.000 1.000
	 0.333 0.667
	 0.000 0.000
 ]
*****************************************

60: max_righe_d
tmpm_d (3 x 2 : 3 x 2): [
	 0.000 1.000
	 0.333 0.667
	 0.000 0.000
 ]


m (3 : 3): [ 1.000 0.667 0.000 ]
*****************************************

62: f_aux_d
a (3 : 3): [ 0.000 0.333 0.000 ]
b (3 : 3): [ 1.000 0.667 0.000 ]
m (3 : 3): [ 1.000 0.667 0.000 ]
T1 (3 : 3): [ 1.000 0.667 1.#QO ]


S1 (3 : 3): [ -1.000 -1.000 1.#QO ]
*****************************************

64: diff_vv_d
b (3 : 3): [ 1.000 0.667 0.000 ]
toll1 (3 : 3): [ 1.000 0.667 7.000 ]


tmp_d1 (3 : 3): [ 0.000 0.000 -7.000 ]
*****************************************

65: which_v_indxgt_d
tmp_d1 (3 : 3): [ 0.000 0.000 -7.000 ]
val = 0.000


indbad (0 : 3): [ ]
*****************************************

86: assegna1_vs_indx_d
S1 (3 : 3): [ -1.000 -1.000 1.#QO ]
ind (1 : 3): [ 3 ]
val = 0.000


S1 (3 : 3): [ -1.000 -1.000 0.000 ]
*****************************************

95: somma_v_d
STout (7 : 7): [ 1.#QO 0.333 0.667 1.000 1.333 1.667 0.000 ]
canc_NA = 1



ris: 5.000
*****************************************

96: assegna1_v_indxeq_d
S1 (3 : 3): [ -1.000 -1.000 0.000 ]
val1 = 1.#IO
val2 = 5.000


S1 (3 : 3): [ -1.000 -1.000 0.000 ]
*****************************************

99: diff_vv_d
old2 (3 : 3): [ 0.000 1.000 0.000 ]
T2 (3 : 3): [ 1.333 1.000 0.333 ]


a (3 : 3): [ -1.333 0.000 -0.333 ]
*****************************************

100: abs1_v_d
a (3 : 3): [ -1.333 0.000 -0.333 ]


a (3 : 3): [ 1.333 0.000 0.333 ]
*****************************************

102: diff_vv_d
new2 (3 : 3): [ 1.000 2.000 1.000 ]
T2 (3 : 3): [ 1.333 1.000 0.333 ]


b (3 : 3): [ -0.333 1.000 0.667 ]
*****************************************

103: abs1_v_d
b (3 : 3): [ -0.333 1.000 0.667 ]


b (3 : 3): [ 0.333 1.000 0.667 ]
*****************************************

105: cbind2v_d
a (3 : 3): [ 1.333 0.000 0.333 ]
b (3 : 3): [ 0.333 1.000 0.667 ]


tmpm_d (3 x 2 : 3 x 2): [
	 1.333 0.333
	 0.000 1.000
	 0.333 0.667
 ]
*****************************************

106: max_righe_d
tmpm_d (3 x 2 : 3 x 2): [
	 1.333 0.333
	 0.000 1.000
	 0.333 0.667
 ]


m (3 : 3): [ 1.333 1.000 0.667 ]
*****************************************

108: which_v_indxna_d
T2 (3 : 3): [ 1.333 1.000 0.333 ]
complemento = 0


ind (0 : 3): [ ]
*****************************************

112: assegna1_vs_indx_d
a (3 : 3): [ 1.333 0.000 0.333 ]
ind (0 : 3): [ ]
val = 0.000


a (3 : 3): [ 1.333 0.000 0.333 ]
*****************************************

114: assegna1_vs_indx_d
b (3 : 3): [ 0.333 1.000 0.667 ]
ind (0 : 3): [ ]
val = 0.000


b (3 : 3): [ 0.333 1.000 0.667 ]
*****************************************

116: cbind2v_d
a (3 : 3): [ 1.333 0.000 0.333 ]
b (3 : 3): [ 0.333 1.000 0.667 ]


tmpm_d (3 x 2 : 3 x 2): [
	 1.333 0.333
	 0.000 1.000
	 0.333 0.667
 ]
*****************************************

117: max_righe_d
tmpm_d (3 x 2 : 3 x 2): [
	 1.333 0.333
	 0.000 1.000
	 0.333 0.667
 ]


m (3 : 3): [ 1.333 1.000 0.667 ]
*****************************************

119: f_aux_d
a (3 : 3): [ 1.333 0.000 0.333 ]
b (3 : 3): [ 0.333 1.000 0.667 ]
m (3 : 3): [ 1.333 1.000 0.667 ]
T2 (3 : 3): [ 1.333 1.000 0.333 ]


S2 (3 : 3): [ 1.000 -1.000 -2.000 ]
*****************************************

121: diff_vv_d
b (3 : 3): [ 0.333 1.000 0.667 ]
toll2 (3 : 3): [ 1.333 1.000 0.333 ]


tmp_d1 (3 : 3): [ -1.000 0.000 0.333 ]
*****************************************

122: which_v_indxgt_d
tmp_d1 (3 : 3): [ -1.000 0.000 0.333 ]
val = 0.000


indbad (1 : 3): [ 3 ]
*****************************************

126: diff_vv_d
a (3 : 3): [ 1.333 0.000 0.333 ]
toll2 (3 : 3): [ 1.333 1.000 0.333 ]


tmp_d1 (3 : 3): [ 0.000 -1.000 0.000 ]
*****************************************

127: which_v_indxle_d
tmp_d1 (3 : 3): [ 0.000 -1.000 0.000 ]
val = 0.000


ind1 (3 : 3): [ 1 2 3 ]
*****************************************

129: f_aux2_d
old2 (3 : 3): [ 0.000 1.000 0.000 ]
new2 (3 : 3): [ 1.000 2.000 1.000 ]
T2 (3 : 3): [ 1.333 1.000 0.333 ]


ind2 (2 : 3): [ 2 3 ]
*****************************************

131: f_aux3_d
a (3 : 3): [ 1.333 0.000 0.333 ]
toll2 (3 : 3): [ 1.333 1.000 0.333 ]
b (3 : 3): [ 0.333 1.000 0.667 ]


ind3 (0 : 3): [ ]
*****************************************

133: unione1_i
ind1 (3 : 3): [ 1 2 3 ]
ind2 (2 : 3): [ 2 3 ]
2858: elimina_doppi_i
ind1 (5 : 5): [ 1 2 3 2 3 ]


ris (3 : 5): [ 1 2 3 ]
*****************************************



ris (3 : 5): [ 1 2 3 ]
*****************************************

134: unione_i
ind3 (0 : 3): [ ]
ris (3 : 5): [ 1 2 3 ]
4663: elimina_doppi_i
ind0 (3 : 3): [ 1 2 3 ]


ris (3 : 3): [ 1 2 3 ]
*****************************************



ris (3 : 3): [ 1 2 3 ]
*****************************************

136: interseca_i
ris (3 : 3): [ 1 2 3 ]
indbad (1 : 3): [ 3 ]
2306: esiste_v_i
el = 1
indbad (1 : 3): [ 3 ]


indx = 0
*****************************************

2307: esiste_v_i
el = 1
indinf (1 : 1): [ 37877944 ]


indx = 0
*****************************************

2306: esiste_v_i
el = 2
indbad (1 : 3): [ 3 ]


indx = 0
*****************************************

2307: esiste_v_i
el = 2
indinf (1 : 1): [ 37877944 ]


indx = 0
*****************************************

2306: esiste_v_i
el = 3
indbad (1 : 3): [ 3 ]


indx = 1
*****************************************

2307: esiste_v_i
el = 3
indinf (1 : 1): [ 37877944 ]


indx = 0
*****************************************



indinf (1 : 1): [ 3 ]
*****************************************

138: assegna1_vs_indx_d
S2 (3 : 3): [ 1.000 -1.000 -2.000 ]
indinf (1 : 1): [ 3 ]
val = -1.#IO


S2 (3 : 3): [ 1.000 -1.000 -1.#IO ]
*****************************************

142: assegna1_vs_indx_d
S2 (3 : 3): [ 1.000 -1.000 -1.#IO ]
ind (0 : 3): [ ]
val = 0.000


S2 (3 : 3): [ 1.000 -1.000 -1.#IO ]
*****************************************

151: which_v_indxeq_d
T2 (3 : 3): [ 1.333 1.000 0.333 ]
val = 0.000


ind (0 : 3): [ ]
*****************************************

153: assegna1_vs_indx_d
S2 (3 : 3): [ 1.000 -1.000 -1.#IO ]
ind (0 : 3): [ ]
val = -1.#IO


S2 (3 : 3): [ 1.000 -1.000 -1.#IO ]
*****************************************

155: somma_vv_d
S1 (3 : 3): [ -1.000 -1.000 0.000 ]
S2 (3 : 3): [ 1.000 -1.000 -1.#IO ]


Sc (3 : 4): [ 0.000 -2.000 -1.#IO ]
*****************************************

156: dividi1_vs_d
Sc (3 : 4): [ 0.000 -2.000 -1.#IO ]
div = 2.000


Sc (3 : 4): [ 0.000 -1.000 -1.#IO ]
*****************************************


Stringhe allocate: 5 (1750 interne); stringhe deallocate: 0 (1510 interne)

225: which_v_indxeq_d
Sc (3 : 4): [ 0.000 -1.000 -1.#IO ]
val = -1.#IO


indInf (1 : 4): [ 3 ]
*****************************************

227: assegna1_v_indxv_d
Sc (3 : 4): [ 0.000 -1.000 -1.#IO ]
indInf (1 : 4): [ 3 ]
val = 0.000


Sc (3 : 4): [ 3.000 -1.000 -1.#IO ]
*****************************************

229: min_v_d
Sc (3 : 4): [ 3.000 -1.000 -1.#IO ]


min = -1.#IO
*****************************************

230: min_v_d
Sc (3 : 4): [ 3.000 -1.000 -1.#IO ]


min = -1.#IO
*****************************************

230: incr1_v_d
Sc (3 : 4): [ 3.000 -1.000 -1.#IO ]
s = 1.#IO


Sc (3 : 4): [ 1.#IO 1.#IO -1.#IO ]
*****************************************

232: assegna1_v_indxv_d
Sc (3 : 4): [ 1.#IO 1.#IO -1.#IO ]
indInf (1 : 4): [ 3 ]
val = 0.000


Sc (3 : 4): [ 3.000 1.#IO -1.#IO ]
*****************************************

234: which_v_indxgt_d
Sc (3 : 4): [ 3.000 1.#IO -1.#IO ]
val = 0.000


tmp1_i (2 : 7): [ 1 2 ]
*****************************************

235: setdiff_i
tmp1_i (2 : 7): [ 1 2 ]
linked (1 : 4): [ 1 ]
2944: copia_v_i
tmp1_i (2 : 7): [ 1 2 ]
start = 1
end = 2


ind (2 : 4): [ 1 2 ]
*****************************************

2946: esiste_v_i
el = 1
ind (2 : 4): [ 1 2 ]


indx = 1
*****************************************

2948: elimina_indx_i
ind (2 : 4): [ 1 2 ]
indx = 1


ind (1 : 4): [ 2 ]
*****************************************



ind (1 : 4): [ 2 ]
*****************************************

241: copia_v_indx_d
Sc (3 : 4): [ 3.000 1.#IO -1.#IO ]
ind (1 : 4): [ 2 ]


tmp1_d (1 : 16): [ 1.#IO ]
*****************************************

242: somma_v_d
tmp1_d (1 : 16): [ 1.#IO ]
canc_NA = 0



ris: 1.#IO
*****************************************

242: dividi_vs_d
tmp1_d (1 : 16): [ 1.#IO ]
div = 1.#IO


p_ind (1 : 4): [ -1.#IO ]
*****************************************


*** sampleB_p ***
12: rep_i
ind (1 : 4): [ 2 ]
ripetizioni = 1


ris (1 : 1): [ 2 ]
*****************************************

246: assegna1_ms_rigaindx_i
Mdiscr (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 1 0 0 0 0
	 1 1 0 0 0
	 1 0 0 0 0
	 0 0 0 0 0
 ]
riga = 4
ris (1 : 1): [ 2 ]
val = 1


Mdiscr (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 1 0 0 0 0
	 1 1 0 0 0
	 1 1 0 0 0
	 0 0 0 0 0
 ]
*****************************************

251: accoda1_vv_i
linked (1 : 4): [ 1 ]
ris (1 : 1): [ 2 ]


linked (2 : 4): [ 1 2 ]
*****************************************

334: somma_riga_i
Mdiscr (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 1 0 0 0 0
	 1 1 0 0 0
	 1 1 0 0 0
	 0 0 0 0 0
 ]
riga = 4


ris: 2
*****************************************

335: accoda1_vs_i
inthenet (3 : 4): [ 1 2 3 ]
s: 4


inthenet (4 : 4): [ 1 2 3 4 ]
*****************************************

99: somma_righe_i
Mdiscr (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 1 0 0 0 0
	 1 1 0 0 0
	 1 1 0 0 0
	 0 0 0 0 0
 ]


Sin (5 : 5): [ 1 1 2 2 0 ]
*****************************************

101: max_v_i
Sin (5 : 5): [ 1 1 2 2 0 ]


max = 2
*****************************************

103: seq_i
da = 0, a = 3, incremento = 1


tmp2_i (4 : 10): [ 0 1 2 3 ]
*****************************************


*** hist ***
Sin (5 : 5): [ 1 1 2 2 0 ]
tmp2_i (4 : 10): [ 0 1 2 3 ]
right = 0
include_border = 1
naok = 0


tmp1_i (3 : 7): [ 1 2 2 ]

Stringhe allocate: 5 (1750 interne); stringhe deallocate: 0 (1510 interne)

105: promuovi_i
tmp1_i (3 : 7): [ 1 2 2 ]
ATTENZIONE (promuovi_i, linea connectivity_scalefree.c # 105): il vettore e` stato promosso da intero a double: i calcoli saranno rallentati!

tmp1_d (3 : 16): [ 1.000 2.000 2.000 ]
*****************************************

106: assegna_v_segmv_d
Freq_in (7 : 7): [ 2.000 2.000 1.000 0.000 0.000 0.000 0.000 ]
start = 1
end = 3
tmp1_d (3 : 16): [ 1.000 2.000 2.000 ]


Freq_in (7 : 7): [ 1.000 2.000 2.000 0.000 0.000 0.000 0.000 ]
*****************************************

108: somma_colonne_i
Mdiscr (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 1 0 0 0 0
	 1 1 0 0 0
	 1 1 0 0 0
	 0 0 0 0 0
 ]


Sout (5 : 5): [ 3 3 0 0 0 ]
*****************************************

110: max_v_i
Sout (5 : 5): [ 3 3 0 0 0 ]


max = 3
*****************************************

112: seq_i
da = 0, a = 4, incremento = 1


tmp2_i (5 : 10): [ 0 1 2 3 4 ]
*****************************************


*** hist ***
Sout (5 : 5): [ 3 3 0 0 0 ]
tmp2_i (5 : 10): [ 0 1 2 3 4 ]
right = 0
include_border = 1
naok = 0


tmp1_i (4 : 7): [ 3 0 0 2 ]

Stringhe allocate: 5 (1751 interne); stringhe deallocate: 0 (1511 interne)

114: promuovi_i
tmp1_i (4 : 7): [ 3 0 0 2 ]
ATTENZIONE (promuovi_i, linea connectivity_scalefree.c # 114): il vettore e` stato promosso da intero a double: i calcoli saranno rallentati!

tmp1_d (4 : 16): [ 3.000 0.000 0.000 2.000 ]
*****************************************

115: assegna_v_segmv_d
Freq_out (7 : 7): [ 3.000 0.000 1.000 1.000 0.000 0.000 0.000 ]
start = 1
end = 4
tmp1_d (4 : 16): [ 3.000 0.000 0.000 2.000 ]


Freq_out (7 : 7): [ 3.000 0.000 0.000 2.000 0.000 0.000 0.000 ]
*****************************************

119: f_aux1_d
Freq_in (7 : 7): [ 1.000 2.000 2.000 0.000 0.000 0.000 0.000 ]
STin (7 : 7): [ 0.000 1.667 3.333 0.000 0.000 0.000 0.000 ]
toll_in (7 : 7): [ 0.000 1.667 3.333 0.000 0.000 0.000 0.000 ]
da = 2
a = 5
sgn1 = -1
sgn2 = -1


tmp1_d (4 : 16): [ -1.333 -4.667 0.000 0.000 ]
*****************************************

121: assegna1_v_indxNA_d
tmp1_d (4 : 16): [ -1.333 -4.667 0.000 0.000 ]
val = 1.000
complemento = 0


tmp1_d (4 : 16): [ -1.333 -4.667 0.000 0.000 ]
*****************************************

123: which_v_indxlt_d
tmp1_d (4 : 16): [ -1.333 -4.667 0.000 0.000 ]
val = 0.000

numposs (2 : 4): [ 1 2 ]
*****************************************

129: f_aux1_d
Freq_in (7 : 7): [ 1.000 2.000 2.000 0.000 0.000 0.000 0.000 ]
STin (7 : 7): [ 0.000 1.667 3.333 0.000 0.000 0.000 0.000 ]
toll_in (7 : 7): [ 0.000 1.667 3.333 0.000 0.000 0.000 0.000 ]
da = 2
a = 5
sgn1 = -1
sgn2 = 1


tmp1_d (4 : 16): [ 2.000 2.000 0.000 0.000 ]
*****************************************

131: assegna1_v_indxNA_d
tmp1_d (4 : 16): [ 2.000 2.000 0.000 0.000 ]
val = 1.000
complemento = 0


tmp1_d (4 : 16): [ 2.000 2.000 0.000 0.000 ]
*****************************************

133: copia_v_d
tmp1_d (4 : 16): [ 2.000 2.000 0.000 0.000 ]
start = 1
end = 4


tmp2_d (4 : 16): [ 2.000 2.000 0.000 0.000 ]
*****************************************

135: which_v_indxlt_d
tmp2_d (4 : 16): [ 2.000 2.000 0.000 0.000 ]
val = 0.000

primi (0 : 4): [ ]
*****************************************

149: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 2


p (2 : 2): [ 0.000 0.000 ]
*****************************************


*** score_sf1 ***
21: somma_vs_i
tmp1_i (1 : 7): [ 0 ]
s = 1.000


S_new (1 : 1): [ 1 ]
*****************************************

23: somma_vs_i
tmp1_i (1 : 7): [ 0 ]
s = 1.000


tmp_i1 (1 : 1): [ 1 ]
*****************************************

24: assegna_v_indxNA_d
STin (7 : 7): [ 0.000 1.667 3.333 0.000 0.000 0.000 0.000 ]
tmp_i1 (1 : 1): [ 1 ]


T1 (1 : 1): [ 0.000 ]
*****************************************

26: somma_vs_i
S_new (1 : 1): [ 1 ]
s = 1.000


tmp_i1 (1 : 1): [ 2 ]
*****************************************

27: assegna_v_indxNA_d
STin (7 : 7): [ 0.000 1.667 3.333 0.000 0.000 0.000 0.000 ]
tmp_i1 (1 : 1): [ 2 ]


T2 (1 : 1): [ 1.667 ]
*****************************************

29: somma_vs_i
tmp1_i (1 : 7): [ 0 ]
s = 1.000


tmp_i1 (1 : 1): [ 1 ]
*****************************************

30: assegna_v_indxNA_d
Freq_in (7 : 7): [ 1.000 2.000 2.000 0.000 0.000 0.000 0.000 ]
tmp_i1 (1 : 1): [ 1 ]


old1 (1 : 1): [ 1.000 ]
*****************************************

32: somma_vs_i
S_new (1 : 1): [ 1 ]
s = 1.000


tmp_i1 (1 : 1): [ 2 ]
*****************************************

33: assegna_v_indxNA_d
Freq_in (7 : 7): [ 1.000 2.000 2.000 0.000 0.000 0.000 0.000 ]
tmp_i1 (1 : 1): [ 2 ]


old2 (1 : 1): [ 2.000 ]
*****************************************

35: somma_vs_d
old1 (1 : 1): [ 1.000 ]
s = -1.000


new1 (1 : 1): [ 0.000 ]
*****************************************

37: somma_vs_d
old2 (1 : 1): [ 2.000 ]
s = 1.000


new2 (1 : 1): [ 3.000 ]
*****************************************

39: somma_vs_i
tmp1_i (1 : 7): [ 0 ]
s = 1.000


tmp_i1 (1 : 1): [ 1 ]
*****************************************

40: assegna_v_indx_d
toll_in (7 : 7): [ 0.000 1.667 3.333 0.000 0.000 0.000 0.000 ]
tmp_i1 (1 : 1): [ 1 ]


toll1 (1 : 1): [ 0.000 ]
*****************************************

42: somma_vs_i
S_new (1 : 1): [ 1 ]
s = 1.000


tmp_i2 (1 : 1): [ 2 ]
*****************************************

43: assegna_v_indx_d
toll_in (7 : 7): [ 0.000 1.667 3.333 0.000 0.000 0.000 0.000 ]
tmp_i2 (1 : 1): [ 2 ]


toll2 (1 : 1): [ 1.667 ]
*****************************************

45: diff_vv_d
old1 (1 : 1): [ 1.000 ]
T1 (1 : 1): [ 0.000 ]


a (1 : 1): [ 1.000 ]
*****************************************

46: abs1_v_d
a (1 : 1): [ 1.000 ]


a (1 : 1): [ 1.000 ]
*****************************************

48: diff_vv_d
new1 (1 : 1): [ 0.000 ]
T1 (1 : 1): [ 0.000 ]


b (1 : 1): [ 0.000 ]
*****************************************

49: abs1_v_d
b (1 : 1): [ 0.000 ]


b (1 : 1): [ 0.000 ]
*****************************************

51: which_v_indxna_d
T1 (1 : 1): [ 0.000 ]
complemento = 0


ind (0 : 1): [ ]
*****************************************

55: assegna1_vs_indx_d
a (1 : 1): [ 1.000 ]
ind (0 : 1): [ ]
val = 0.000


a (1 : 1): [ 1.000 ]
*****************************************

57: assegna1_vs_indx_d
b (1 : 1): [ 0.000 ]
ind (0 : 1): [ ]
val = 0.000


b (1 : 1): [ 0.000 ]
*****************************************

59: cbind2v_d
a (1 : 1): [ 1.000 ]
b (1 : 1): [ 0.000 ]


tmpm_d (1 x 2 : 1 x 2): [
	 1.000 0.000
 ]
*****************************************

60: max_righe_d
tmpm_d (1 x 2 : 1 x 2): [
	 1.000 0.000
 ]


m (1 : 1): [ 1.000 ]
*****************************************

62: f_aux_d
a (1 : 1): [ 1.000 ]
b (1 : 1): [ 0.000 ]
m (1 : 1): [ 1.000 ]
T1 (1 : 1): [ 0.000 ]
ATTENZIONE (f_aux_d, linea score_sf.c # 62): l'elemento 1 ha provocato una divisione per zero e gli e` stato assegnato un valore al di fuori del dominio!


S1 (1 : 1): [ 1.#IO ]
*****************************************

64: diff_vv_d
b (1 : 1): [ 0.000 ]
toll1 (1 : 1): [ 0.000 ]


tmp_d1 (1 : 1): [ 0.000 ]
*****************************************

65: which_v_indxgt_d
tmp_d1 (1 : 1): [ 0.000 ]
val = 0.000


indbad (0 : 1): [ ]
*****************************************

86: assegna1_vs_indx_d
S1 (1 : 1): [ 1.#IO ]
ind (0 : 1): [ ]
val = 0.000


S1 (1 : 1): [ 1.#IO ]
*****************************************

95: somma_v_d
STin (7 : 7): [ 0.000 1.667 3.333 0.000 0.000 0.000 0.000 ]
canc_NA = 1



ris: 5.000
*****************************************

96: assegna1_v_indxeq_d
S1 (1 : 1): [ 1.#IO ]
val1 = 1.#IO
val2 = 5.000


S1 (1 : 1): [ 5.000 ]
*****************************************

99: diff_vv_d
old2 (1 : 1): [ 2.000 ]
T2 (1 : 1): [ 1.667 ]


a (1 : 1): [ 0.333 ]
*****************************************

100: abs1_v_d
a (1 : 1): [ 0.333 ]


a (1 : 1): [ 0.333 ]
*****************************************

102: diff_vv_d
new2 (1 : 1): [ 3.000 ]
T2 (1 : 1): [ 1.667 ]


b (1 : 1): [ 1.333 ]
*****************************************

103: abs1_v_d
b (1 : 1): [ 1.333 ]


b (1 : 1): [ 1.333 ]
*****************************************

105: cbind2v_d
a (1 : 1): [ 0.333 ]
b (1 : 1): [ 1.333 ]


tmpm_d (1 x 2 : 1 x 2): [
	 0.333 1.333
 ]
*****************************************

106: max_righe_d
tmpm_d (1 x 2 : 1 x 2): [
	 0.333 1.333
 ]


m (1 : 1): [ 1.333 ]
*****************************************

108: which_v_indxna_d
T2 (1 : 1): [ 1.667 ]
complemento = 0


ind (0 : 1): [ ]
*****************************************

112: assegna1_vs_indx_d
a (1 : 1): [ 0.333 ]
ind (0 : 1): [ ]
val = 0.000


a (1 : 1): [ 0.333 ]
*****************************************

114: assegna1_vs_indx_d
b (1 : 1): [ 1.333 ]
ind (0 : 1): [ ]
val = 0.000


b (1 : 1): [ 1.333 ]
*****************************************

116: cbind2v_d
a (1 : 1): [ 0.333 ]
b (1 : 1): [ 1.333 ]


tmpm_d (1 x 2 : 1 x 2): [
	 0.333 1.333
 ]
*****************************************

117: max_righe_d
tmpm_d (1 x 2 : 1 x 2): [
	 0.333 1.333
 ]


m (1 : 1): [ 1.333 ]
*****************************************

119: f_aux_d
a (1 : 1): [ 0.333 ]
b (1 : 1): [ 1.333 ]
m (1 : 1): [ 1.333 ]
T2 (1 : 1): [ 1.667 ]


S2 (1 : 1): [ -0.800 ]
*****************************************

121: diff_vv_d
b (1 : 1): [ 1.333 ]
toll2 (1 : 1): [ 1.667 ]


tmp_d1 (1 : 1): [ -0.333 ]
*****************************************

122: which_v_indxgt_d
tmp_d1 (1 : 1): [ -0.333 ]
val = 0.000


indbad (0 : 1): [ ]
*****************************************

142: assegna1_vs_indx_d
S2 (1 : 1): [ -0.800 ]
ind (0 : 1): [ ]
val = 0.000


S2 (1 : 1): [ -0.800 ]
*****************************************

151: which_v_indxeq_d
T2 (1 : 1): [ 1.667 ]
val = 0.000


ind (0 : 1): [ ]
*****************************************

153: assegna1_vs_indx_d
S2 (1 : 1): [ -0.800 ]
ind (0 : 1): [ ]
val = -1.#IO


S2 (1 : 1): [ -0.800 ]
*****************************************

155: somma_vv_d
S1 (1 : 1): [ 5.000 ]
S2 (1 : 1): [ -0.800 ]


tmp1_d (1 : 16): [ 4.200 ]
*****************************************

156: dividi1_vs_d
tmp1_d (1 : 16): [ 4.200 ]
div = 2.000


tmp1_d (1 : 16): [ 2.100 ]
*****************************************


Stringhe allocate: 5 (1858 interne); stringhe deallocate: 0 (1618 interne)


*** score_sf1 ***
21: somma_vs_i
tmp1_i (2 : 7): [ 0 0 ]
s = 2.000


S_new (2 : 2): [ 2 2 ]
*****************************************

23: somma_vs_i
tmp1_i (2 : 7): [ 0 0 ]
s = 1.000


tmp_i1 (2 : 2): [ 1 1 ]
*****************************************

24: assegna_v_indxNA_d
STin (7 : 7): [ 0.000 1.667 3.333 0.000 0.000 0.000 0.000 ]
tmp_i1 (2 : 2): [ 1 1 ]


T1 (2 : 2): [ 0.000 0.000 ]
*****************************************

26: somma_vs_i
S_new (2 : 2): [ 2 2 ]
s = 1.000


tmp_i1 (2 : 2): [ 3 3 ]
*****************************************

27: assegna_v_indxNA_d
STin (7 : 7): [ 0.000 1.667 3.333 0.000 0.000 0.000 0.000 ]
tmp_i1 (2 : 2): [ 3 3 ]


T2 (2 : 2): [ 3.333 3.333 ]
*****************************************

29: somma_vs_i
tmp1_i (2 : 7): [ 0 0 ]
s = 1.000


tmp_i1 (2 : 2): [ 1 1 ]
*****************************************

30: assegna_v_indxNA_d
Freq_in (7 : 7): [ 1.000 2.000 2.000 0.000 0.000 0.000 0.000 ]
tmp_i1 (2 : 2): [ 1 1 ]


old1 (2 : 2): [ 1.000 1.000 ]
*****************************************

32: somma_vs_i
S_new (2 : 2): [ 2 2 ]
s = 1.000


tmp_i1 (2 : 2): [ 3 3 ]
*****************************************

33: assegna_v_indxNA_d
Freq_in (7 : 7): [ 1.000 2.000 2.000 0.000 0.000 0.000 0.000 ]
tmp_i1 (2 : 2): [ 3 3 ]


old2 (2 : 2): [ 2.000 2.000 ]
*****************************************

35: somma_vs_d
old1 (2 : 2): [ 1.000 1.000 ]
s = -1.000


new1 (2 : 2): [ 0.000 0.000 ]
*****************************************

37: somma_vs_d
old2 (2 : 2): [ 2.000 2.000 ]
s = 1.000


new2 (2 : 2): [ 3.000 3.000 ]
*****************************************

39: somma_vs_i
tmp1_i (2 : 7): [ 0 0 ]
s = 1.000


tmp_i1 (2 : 2): [ 1 1 ]
*****************************************

40: assegna_v_indx_d
toll_in (7 : 7): [ 0.000 1.667 3.333 0.000 0.000 0.000 0.000 ]
tmp_i1 (2 : 2): [ 1 1 ]


toll1 (2 : 2): [ 0.000 0.000 ]
*****************************************

42: somma_vs_i
S_new (2 : 2): [ 2 2 ]
s = 1.000


tmp_i2 (2 : 2): [ 3 3 ]
*****************************************

43: assegna_v_indx_d
toll_in (7 : 7): [ 0.000 1.667 3.333 0.000 0.000 0.000 0.000 ]
tmp_i2 (2 : 2): [ 3 3 ]


toll2 (2 : 2): [ 3.333 3.333 ]
*****************************************

45: diff_vv_d
old1 (2 : 2): [ 1.000 1.000 ]
T1 (2 : 2): [ 0.000 0.000 ]


a (2 : 2): [ 1.000 1.000 ]
*****************************************

46: abs1_v_d
a (2 : 2): [ 1.000 1.000 ]


a (2 : 2): [ 1.000 1.000 ]
*****************************************

48: diff_vv_d
new1 (2 : 2): [ 0.000 0.000 ]
T1 (2 : 2): [ 0.000 0.000 ]


b (2 : 2): [ 0.000 0.000 ]
*****************************************

49: abs1_v_d
b (2 : 2): [ 0.000 0.000 ]


b (2 : 2): [ 0.000 0.000 ]
*****************************************

51: which_v_indxna_d
T1 (2 : 2): [ 0.000 0.000 ]
complemento = 0


ind (0 : 2): [ ]
*****************************************

55: assegna1_vs_indx_d
a (2 : 2): [ 1.000 1.000 ]
ind (0 : 2): [ ]
val = 0.000


a (2 : 2): [ 1.000 1.000 ]
*****************************************

57: assegna1_vs_indx_d
b (2 : 2): [ 0.000 0.000 ]
ind (0 : 2): [ ]
val = 0.000


b (2 : 2): [ 0.000 0.000 ]
*****************************************

59: cbind2v_d
a (2 : 2): [ 1.000 1.000 ]
b (2 : 2): [ 0.000 0.000 ]


tmpm_d (2 x 2 : 2 x 2): [
	 1.000 0.000
	 1.000 0.000
 ]
*****************************************

60: max_righe_d
tmpm_d (2 x 2 : 2 x 2): [
	 1.000 0.000
	 1.000 0.000
 ]


m (2 : 2): [ 1.000 1.000 ]
*****************************************

62: f_aux_d
a (2 : 2): [ 1.000 1.000 ]
b (2 : 2): [ 0.000 0.000 ]
m (2 : 2): [ 1.000 1.000 ]
T1 (2 : 2): [ 0.000 0.000 ]
ATTENZIONE (f_aux_d, linea score_sf.c # 62): l'elemento 1 ha provocato una divisione per zero e gli e` stato assegnato un valore al di fuori del dominio!
ATTENZIONE (f_aux_d, linea score_sf.c # 62): l'elemento 2 ha provocato una divisione per zero e gli e` stato assegnato un valore al di fuori del dominio!


S1 (2 : 2): [ 1.#IO 1.#IO ]
*****************************************

64: diff_vv_d
b (2 : 2): [ 0.000 0.000 ]
toll1 (2 : 2): [ 0.000 0.000 ]


tmp_d1 (2 : 2): [ 0.000 0.000 ]
*****************************************

65: which_v_indxgt_d
tmp_d1 (2 : 2): [ 0.000 0.000 ]
val = 0.000


indbad (0 : 2): [ ]
*****************************************

86: assegna1_vs_indx_d
S1 (2 : 2): [ 1.#IO 1.#IO ]
ind (0 : 2): [ ]
val = 0.000


S1 (2 : 2): [ 1.#IO 1.#IO ]
*****************************************

95: somma_v_d
STin (7 : 7): [ 0.000 1.667 3.333 0.000 0.000 0.000 0.000 ]
canc_NA = 1



ris: 5.000
*****************************************

96: assegna1_v_indxeq_d
S1 (2 : 2): [ 1.#IO 1.#IO ]
val1 = 1.#IO
val2 = 5.000


S1 (2 : 2): [ 5.000 5.000 ]
*****************************************

99: diff_vv_d
old2 (2 : 2): [ 2.000 2.000 ]
T2 (2 : 2): [ 3.333 3.333 ]


a (2 : 2): [ -1.333 -1.333 ]
*****************************************

100: abs1_v_d
a (2 : 2): [ -1.333 -1.333 ]


a (2 : 2): [ 1.333 1.333 ]
*****************************************

102: diff_vv_d
new2 (2 : 2): [ 3.000 3.000 ]
T2 (2 : 2): [ 3.333 3.333 ]


b (2 : 2): [ -0.333 -0.333 ]
*****************************************

103: abs1_v_d
b (2 : 2): [ -0.333 -0.333 ]


b (2 : 2): [ 0.333 0.333 ]
*****************************************

105: cbind2v_d
a (2 : 2): [ 1.333 1.333 ]
b (2 : 2): [ 0.333 0.333 ]


tmpm_d (2 x 2 : 2 x 2): [
	 1.333 0.333
	 1.333 0.333
 ]
*****************************************

106: max_righe_d
tmpm_d (2 x 2 : 2 x 2): [
	 1.333 0.333
	 1.333 0.333
 ]


m (2 : 2): [ 1.333 1.333 ]
*****************************************

108: which_v_indxna_d
T2 (2 : 2): [ 3.333 3.333 ]
complemento = 0


ind (0 : 2): [ ]
*****************************************

112: assegna1_vs_indx_d
a (2 : 2): [ 1.333 1.333 ]
ind (0 : 2): [ ]
val = 0.000


a (2 : 2): [ 1.333 1.333 ]
*****************************************

114: assegna1_vs_indx_d
b (2 : 2): [ 0.333 0.333 ]
ind (0 : 2): [ ]
val = 0.000


b (2 : 2): [ 0.333 0.333 ]
*****************************************

116: cbind2v_d
a (2 : 2): [ 1.333 1.333 ]
b (2 : 2): [ 0.333 0.333 ]


tmpm_d (2 x 2 : 2 x 2): [
	 1.333 0.333
	 1.333 0.333
 ]
*****************************************

117: max_righe_d
tmpm_d (2 x 2 : 2 x 2): [
	 1.333 0.333
	 1.333 0.333
 ]


m (2 : 2): [ 1.333 1.333 ]
*****************************************

119: f_aux_d
a (2 : 2): [ 1.333 1.333 ]
b (2 : 2): [ 0.333 0.333 ]
m (2 : 2): [ 1.333 1.333 ]
T2 (2 : 2): [ 3.333 3.333 ]


S2 (2 : 2): [ 0.400 0.400 ]
*****************************************

121: diff_vv_d
b (2 : 2): [ 0.333 0.333 ]
toll2 (2 : 2): [ 3.333 3.333 ]


tmp_d1 (2 : 2): [ -3.000 -3.000 ]
*****************************************

122: which_v_indxgt_d
tmp_d1 (2 : 2): [ -3.000 -3.000 ]
val = 0.000


indbad (0 : 2): [ ]
*****************************************

142: assegna1_vs_indx_d
S2 (2 : 2): [ 0.400 0.400 ]
ind (0 : 2): [ ]
val = 0.000


S2 (2 : 2): [ 0.400 0.400 ]
*****************************************

151: which_v_indxeq_d
T2 (2 : 2): [ 3.333 3.333 ]
val = 0.000


ind (0 : 2): [ ]
*****************************************

153: assegna1_vs_indx_d
S2 (2 : 2): [ 0.400 0.400 ]
ind (0 : 2): [ ]
val = -1.#IO


S2 (2 : 2): [ 0.400 0.400 ]
*****************************************

155: somma_vv_d
S1 (2 : 2): [ 5.000 5.000 ]
S2 (2 : 2): [ 0.400 0.400 ]


tmp1_d (2 : 16): [ 5.400 5.400 ]
*****************************************

156: dividi1_vs_d
tmp1_d (2 : 16): [ 5.400 5.400 ]
div = 2.000


tmp1_d (2 : 16): [ 2.700 2.700 ]
*****************************************


Stringhe allocate: 5 (1965 interne); stringhe deallocate: 0 (1725 interne)

158: which_v_indxeq_d
p (2 : 2): [ 2.100 2.700 ]
val = -1.#IO


indInf (0 : 4): [ ]
*****************************************

160: assegna1_v_indxv_d
p (2 : 2): [ 2.100 2.700 ]
indInf (0 : 4): [ ]
val = 0.000


p (2 : 2): [ 2.100 2.700 ]
*****************************************

162: min_v_d
p (2 : 2): [ 2.100 2.700 ]


min = 2.100
*****************************************

165: assegna1_v_indxv_d
p (2 : 2): [ 2.100 2.700 ]
indInf (0 : 4): [ ]
val = 0.000


p (2 : 2): [ 2.100 2.700 ]
*****************************************

168: somma_v_d
p (2 : 2): [ 2.100 2.700 ]
canc_NA = 0



ris: 4.800
*****************************************

170: seq_i
da = 1, a = 2, incremento = 1


tmp1_i (2 : 7): [ 1 2 ]
*****************************************

171: dividi_vs_d
p (2 : 2): [ 2.100 2.700 ]
div = 4.800


tmp1_d (2 : 16): [ 0.437 0.563 ]
*****************************************


*** sampleB_p ***

*** sample_p ***
tmp1_i (2 : 7): [ 1 2 ]
k = 1, replace = 0
tmp1_d (2 : 16): [ 0.437 0.563 ]


ris (1 : 1): [ 1 ]
*****************************************


Stringhe allocate: 5 (1965 interne); stringhe deallocate: 0 (1725 interne)

189: elimina_doppi_i
give_outlink (0 : 0): [ ]


aus_give_outlink (0 : 0): [ ]
*****************************************

213: somma_colonne_i
Mdiscr (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 1 0 0 0 0
	 1 1 0 0 0
	 1 1 0 0 0
	 0 0 0 0 0
 ]


Sout (5 : 5): [ 3 3 0 0 0 ]
*****************************************

215: max_v_i
Sout (5 : 5): [ 3 3 0 0 0 ]


max = 3
*****************************************

217: seq_i
da = 0, a = 4, incremento = 1


tmp2_i (5 : 10): [ 0 1 2 3 4 ]
*****************************************


*** hist ***
Sout (5 : 5): [ 3 3 0 0 0 ]
tmp2_i (5 : 10): [ 0 1 2 3 4 ]
right = 0
include_border = 1
naok = 0


tmp1_i (4 : 7): [ 3 0 0 2 ]

Stringhe allocate: 5 (1965 interne); stringhe deallocate: 0 (1725 interne)

219: promuovi_i
tmp1_i (4 : 7): [ 3 0 0 2 ]
ATTENZIONE (promuovi_i, linea connectivity_scalefree.c # 219): il vettore e` stato promosso da intero a double: i calcoli saranno rallentati!

tmp1_d (4 : 16): [ 3.000 0.000 0.000 2.000 ]
*****************************************

220: assegna_v_segmv_d
Freq_out (7 : 7): [ 3.000 0.000 0.000 2.000 0.000 0.000 0.000 ]
start = 1
end = 4
tmp1_d (4 : 16): [ 3.000 0.000 0.000 2.000 ]


Freq_out (7 : 7): [ 3.000 0.000 0.000 2.000 0.000 0.000 0.000 ]
*****************************************

222: copia_v_indx_i
Sout (5 : 5): [ 3 3 0 0 0 ]
inthenet (4 : 4): [ 1 2 3 4 ]


tmp1_i (4 : 7): [ 3 3 0 0 ]
*****************************************


*** score_sf1 ***
21: somma_vs_i
tmp1_i (4 : 7): [ 3 3 0 0 ]
s = 1.000


S_new (4 : 4): [ 4 4 1 1 ]
*****************************************

23: somma_vs_i
tmp1_i (4 : 7): [ 3 3 0 0 ]
s = 1.000


tmp_i1 (4 : 4): [ 4 4 1 1 ]
*****************************************

24: assegna_v_indxNA_d
STout (7 : 7): [ 1.#QO 0.333 0.667 1.000 1.333 1.667 0.000 ]
tmp_i1 (4 : 4): [ 4 4 1 1 ]


T1 (4 : 4): [ 1.000 1.000 1.#QO 1.#QO ]
*****************************************

26: somma_vs_i
S_new (4 : 4): [ 4 4 1 1 ]
s = 1.000


tmp_i1 (4 : 4): [ 5 5 2 2 ]
*****************************************

27: assegna_v_indxNA_d
STout (7 : 7): [ 1.#QO 0.333 0.667 1.000 1.333 1.667 0.000 ]
tmp_i1 (4 : 4): [ 5 5 2 2 ]


T2 (4 : 4): [ 1.333 1.333 0.333 0.333 ]
*****************************************

29: somma_vs_i
tmp1_i (4 : 7): [ 3 3 0 0 ]
s = 1.000


tmp_i1 (4 : 4): [ 4 4 1 1 ]
*****************************************

30: assegna_v_indxNA_d
Freq_out (7 : 7): [ 3.000 0.000 0.000 2.000 0.000 0.000 0.000 ]
tmp_i1 (4 : 4): [ 4 4 1 1 ]


old1 (4 : 4): [ 2.000 2.000 3.000 3.000 ]
*****************************************

32: somma_vs_i
S_new (4 : 4): [ 4 4 1 1 ]
s = 1.000


tmp_i1 (4 : 4): [ 5 5 2 2 ]
*****************************************

33: assegna_v_indxNA_d
Freq_out (7 : 7): [ 3.000 0.000 0.000 2.000 0.000 0.000 0.000 ]
tmp_i1 (4 : 4): [ 5 5 2 2 ]


old2 (4 : 4): [ 0.000 0.000 0.000 0.000 ]
*****************************************

35: somma_vs_d
old1 (4 : 4): [ 2.000 2.000 3.000 3.000 ]
s = -1.000


new1 (4 : 4): [ 1.000 1.000 2.000 2.000 ]
*****************************************

37: somma_vs_d
old2 (4 : 4): [ 0.000 0.000 0.000 0.000 ]
s = 1.000


new2 (4 : 4): [ 1.000 1.000 1.000 1.000 ]
*****************************************

39: somma_vs_i
tmp1_i (4 : 7): [ 3 3 0 0 ]
s = 1.000


tmp_i1 (4 : 4): [ 4 4 1 1 ]
*****************************************

40: assegna_v_indx_d
toll_out (7 : 7): [ 7.000 0.333 0.667 1.000 1.333 1.667 0.000 ]
tmp_i1 (4 : 4): [ 4 4 1 1 ]


toll1 (4 : 4): [ 1.000 1.000 7.000 7.000 ]
*****************************************

42: somma_vs_i
S_new (4 : 4): [ 4 4 1 1 ]
s = 1.000


tmp_i2 (4 : 4): [ 5 5 2 2 ]
*****************************************

43: assegna_v_indx_d
toll_out (7 : 7): [ 7.000 0.333 0.667 1.000 1.333 1.667 0.000 ]
tmp_i2 (4 : 4): [ 5 5 2 2 ]


toll2 (4 : 4): [ 1.333 1.333 0.333 0.333 ]
*****************************************

45: diff_vv_d
old1 (4 : 4): [ 2.000 2.000 3.000 3.000 ]
T1 (4 : 4): [ 1.000 1.000 1.#QO 1.#QO ]


a (4 : 4): [ 1.000 1.000 1.#QO 1.#QO ]
*****************************************

46: abs1_v_d
a (4 : 4): [ 1.000 1.000 1.#QO 1.#QO ]


a (4 : 4): [ 1.000 1.000 1.#QO 1.#QO ]
*****************************************

48: diff_vv_d
new1 (4 : 4): [ 1.000 1.000 2.000 2.000 ]
T1 (4 : 4): [ 1.000 1.000 1.#QO 1.#QO ]


b (4 : 4): [ 0.000 0.000 1.#QO 1.#QO ]
*****************************************

49: abs1_v_d
b (4 : 4): [ 0.000 0.000 1.#QO 1.#QO ]


b (4 : 4): [ 0.000 0.000 1.#QO 1.#QO ]
*****************************************

51: which_v_indxna_d
T1 (4 : 4): [ 1.000 1.000 1.#QO 1.#QO ]
complemento = 0


ind (2 : 4): [ 3 4 ]
*****************************************

55: assegna1_vs_indx_d
a (4 : 4): [ 1.000 1.000 1.#QO 1.#QO ]
ind (2 : 4): [ 3 4 ]
val = 0.000


a (4 : 4): [ 1.000 1.000 0.000 0.000 ]
*****************************************

57: assegna1_vs_indx_d
b (4 : 4): [ 0.000 0.000 1.#QO 1.#QO ]
ind (2 : 4): [ 3 4 ]
val = 0.000


b (4 : 4): [ 0.000 0.000 0.000 0.000 ]
*****************************************

59: cbind2v_d
a (4 : 4): [ 1.000 1.000 0.000 0.000 ]
b (4 : 4): [ 0.000 0.000 0.000 0.000 ]


tmpm_d (4 x 2 : 4 x 2): [
	 1.000 0.000
	 1.000 0.000
	 0.000 0.000
	 0.000 0.000
 ]
*****************************************

60: max_righe_d
tmpm_d (4 x 2 : 4 x 2): [
	 1.000 0.000
	 1.000 0.000
	 0.000 0.000
	 0.000 0.000
 ]


m (4 : 4): [ 1.000 1.000 0.000 0.000 ]
*****************************************

62: f_aux_d
a (4 : 4): [ 1.000 1.000 0.000 0.000 ]
b (4 : 4): [ 0.000 0.000 0.000 0.000 ]
m (4 : 4): [ 1.000 1.000 0.000 0.000 ]
T1 (4 : 4): [ 1.000 1.000 1.#QO 1.#QO ]


S1 (4 : 4): [ 1.000 1.000 1.#QO 1.#QO ]
*****************************************

64: diff_vv_d
b (4 : 4): [ 0.000 0.000 0.000 0.000 ]
toll1 (4 : 4): [ 1.000 1.000 7.000 7.000 ]


tmp_d1 (4 : 4): [ -1.000 -1.000 -7.000 -7.000 ]
*****************************************

65: which_v_indxgt_d
tmp_d1 (4 : 4): [ -1.000 -1.000 -7.000 -7.000 ]
val = 0.000


indbad (0 : 4): [ ]
*****************************************

86: assegna1_vs_indx_d
S1 (4 : 4): [ 1.000 1.000 1.#QO 1.#QO ]
ind (2 : 4): [ 3 4 ]
val = 0.000


S1 (4 : 4): [ 1.000 1.000 0.000 0.000 ]
*****************************************

95: somma_v_d
STout (7 : 7): [ 1.#QO 0.333 0.667 1.000 1.333 1.667 0.000 ]
canc_NA = 1



ris: 5.000
*****************************************

96: assegna1_v_indxeq_d
S1 (4 : 4): [ 1.000 1.000 0.000 0.000 ]
val1 = 1.#IO
val2 = 5.000


S1 (4 : 4): [ 1.000 1.000 0.000 0.000 ]
*****************************************

99: diff_vv_d
old2 (4 : 4): [ 0.000 0.000 0.000 0.000 ]
T2 (4 : 4): [ 1.333 1.333 0.333 0.333 ]


a (4 : 4): [ -1.333 -1.333 -0.333 -0.333 ]
*****************************************

100: abs1_v_d
a (4 : 4): [ -1.333 -1.333 -0.333 -0.333 ]


a (4 : 4): [ 1.333 1.333 0.333 0.333 ]
*****************************************

102: diff_vv_d
new2 (4 : 4): [ 1.000 1.000 1.000 1.000 ]
T2 (4 : 4): [ 1.333 1.333 0.333 0.333 ]


b (4 : 4): [ -0.333 -0.333 0.667 0.667 ]
*****************************************

103: abs1_v_d
b (4 : 4): [ -0.333 -0.333 0.667 0.667 ]


b (4 : 4): [ 0.333 0.333 0.667 0.667 ]
*****************************************

105: cbind2v_d
a (4 : 4): [ 1.333 1.333 0.333 0.333 ]
b (4 : 4): [ 0.333 0.333 0.667 0.667 ]


tmpm_d (4 x 2 : 4 x 2): [
	 1.333 0.333
	 1.333 0.333
	 0.333 0.667
	 0.333 0.667
 ]
*****************************************

106: max_righe_d
tmpm_d (4 x 2 : 4 x 2): [
	 1.333 0.333
	 1.333 0.333
	 0.333 0.667
	 0.333 0.667
 ]


m (4 : 4): [ 1.333 1.333 0.667 0.667 ]
*****************************************

108: which_v_indxna_d
T2 (4 : 4): [ 1.333 1.333 0.333 0.333 ]
complemento = 0


ind (0 : 4): [ ]
*****************************************

112: assegna1_vs_indx_d
a (4 : 4): [ 1.333 1.333 0.333 0.333 ]
ind (0 : 4): [ ]
val = 0.000


a (4 : 4): [ 1.333 1.333 0.333 0.333 ]
*****************************************

114: assegna1_vs_indx_d
b (4 : 4): [ 0.333 0.333 0.667 0.667 ]
ind (0 : 4): [ ]
val = 0.000


b (4 : 4): [ 0.333 0.333 0.667 0.667 ]
*****************************************

116: cbind2v_d
a (4 : 4): [ 1.333 1.333 0.333 0.333 ]
b (4 : 4): [ 0.333 0.333 0.667 0.667 ]


tmpm_d (4 x 2 : 4 x 2): [
	 1.333 0.333
	 1.333 0.333
	 0.333 0.667
	 0.333 0.667
 ]
*****************************************

117: max_righe_d
tmpm_d (4 x 2 : 4 x 2): [
	 1.333 0.333
	 1.333 0.333
	 0.333 0.667
	 0.333 0.667
 ]


m (4 : 4): [ 1.333 1.333 0.667 0.667 ]
*****************************************

119: f_aux_d
a (4 : 4): [ 1.333 1.333 0.333 0.333 ]
b (4 : 4): [ 0.333 0.333 0.667 0.667 ]
m (4 : 4): [ 1.333 1.333 0.667 0.667 ]
T2 (4 : 4): [ 1.333 1.333 0.333 0.333 ]


S2 (4 : 4): [ 1.000 1.000 -2.000 -2.000 ]
*****************************************

121: diff_vv_d
b (4 : 4): [ 0.333 0.333 0.667 0.667 ]
toll2 (4 : 4): [ 1.333 1.333 0.333 0.333 ]


tmp_d1 (4 : 4): [ -1.000 -1.000 0.333 0.333 ]
*****************************************

122: which_v_indxgt_d
tmp_d1 (4 : 4): [ -1.000 -1.000 0.333 0.333 ]
val = 0.000


indbad (2 : 4): [ 3 4 ]
*****************************************

126: diff_vv_d
a (4 : 4): [ 1.333 1.333 0.333 0.333 ]
toll2 (4 : 4): [ 1.333 1.333 0.333 0.333 ]


tmp_d1 (4 : 4): [ 0.000 0.000 0.000 0.000 ]
*****************************************

127: which_v_indxle_d
tmp_d1 (4 : 4): [ 0.000 0.000 0.000 0.000 ]
val = 0.000


ind1 (4 : 4): [ 1 2 3 4 ]
*****************************************

129: f_aux2_d
old2 (4 : 4): [ 0.000 0.000 0.000 0.000 ]
new2 (4 : 4): [ 1.000 1.000 1.000 1.000 ]
T2 (4 : 4): [ 1.333 1.333 0.333 0.333 ]


ind2 (2 : 4): [ 3 4 ]
*****************************************

131: f_aux3_d
a (4 : 4): [ 1.333 1.333 0.333 0.333 ]
toll2 (4 : 4): [ 1.333 1.333 0.333 0.333 ]
b (4 : 4): [ 0.333 0.333 0.667 0.667 ]


ind3 (0 : 4): [ ]
*****************************************

133: unione1_i
ind1 (4 : 4): [ 1 2 3 4 ]
ind2 (2 : 4): [ 3 4 ]
2858: elimina_doppi_i
ind1 (6 : 6): [ 1 2 3 4 3 4 ]


ris (4 : 6): [ 1 2 3 4 ]
*****************************************



ris (4 : 6): [ 1 2 3 4 ]
*****************************************

134: unione_i
ind3 (0 : 4): [ ]
ris (4 : 6): [ 1 2 3 4 ]
4663: elimina_doppi_i
ind0 (4 : 4): [ 1 2 3 4 ]


ris (4 : 4): [ 1 2 3 4 ]
*****************************************



ris (4 : 4): [ 1 2 3 4 ]
*****************************************

136: interseca_i
ris (4 : 4): [ 1 2 3 4 ]
indbad (2 : 4): [ 3 4 ]
2306: esiste_v_i
el = 1
indbad (2 : 4): [ 3 4 ]


indx = 0
*****************************************

2307: esiste_v_i
el = 1
indinf (2 : 2): [ 78517984 1074266112 ]


indx = 0
*****************************************

2306: esiste_v_i
el = 2
indbad (2 : 4): [ 3 4 ]


indx = 0
*****************************************

2307: esiste_v_i
el = 2
indinf (2 : 2): [ 78517984 1074266112 ]


indx = 0
*****************************************

2306: esiste_v_i
el = 3
indbad (2 : 4): [ 3 4 ]


indx = 1
*****************************************

2307: esiste_v_i
el = 3
indinf (2 : 2): [ 78517984 1074266112 ]


indx = 0
*****************************************

2306: esiste_v_i
el = 4
indbad (2 : 4): [ 3 4 ]


indx = 2
*****************************************

2307: esiste_v_i
el = 4
indinf (2 : 2): [ 3 1074266112 ]


indx = 0
*****************************************



indinf (2 : 2): [ 3 4 ]
*****************************************

138: assegna1_vs_indx_d
S2 (4 : 4): [ 1.000 1.000 -2.000 -2.000 ]
indinf (2 : 2): [ 3 4 ]
val = -1.#IO


S2 (4 : 4): [ 1.000 1.000 -1.#IO -1.#IO ]
*****************************************

142: assegna1_vs_indx_d
S2 (4 : 4): [ 1.000 1.000 -1.#IO -1.#IO ]
ind (0 : 4): [ ]
val = 0.000


S2 (4 : 4): [ 1.000 1.000 -1.#IO -1.#IO ]
*****************************************

151: which_v_indxeq_d
T2 (4 : 4): [ 1.333 1.333 0.333 0.333 ]
val = 0.000


ind (0 : 4): [ ]
*****************************************

153: assegna1_vs_indx_d
S2 (4 : 4): [ 1.000 1.000 -1.#IO -1.#IO ]
ind (0 : 4): [ ]
val = -1.#IO


S2 (4 : 4): [ 1.000 1.000 -1.#IO -1.#IO ]
*****************************************

155: somma_vv_d
S1 (4 : 4): [ 1.000 1.000 0.000 0.000 ]
S2 (4 : 4): [ 1.000 1.000 -1.#IO -1.#IO ]


Sc (4 : 4): [ 2.000 2.000 -1.#IO -1.#IO ]
*****************************************

156: dividi1_vs_d
Sc (4 : 4): [ 2.000 2.000 -1.#IO -1.#IO ]
div = 2.000


Sc (4 : 4): [ 1.000 1.000 -1.#IO -1.#IO ]
*****************************************


Stringhe allocate: 5 (2111 interne); stringhe deallocate: 0 (1871 interne)

225: which_v_indxeq_d
Sc (4 : 4): [ 1.000 1.000 -1.#IO -1.#IO ]
val = -1.#IO


indInf (2 : 4): [ 3 4 ]
*****************************************

227: assegna1_v_indxv_d
Sc (4 : 4): [ 1.000 1.000 -1.#IO -1.#IO ]
indInf (2 : 4): [ 3 4 ]
val = 0.000


Sc (4 : 4): [ 3.000 4.000 -1.#IO -1.#IO ]
*****************************************

229: min_v_d
Sc (4 : 4): [ 3.000 4.000 -1.#IO -1.#IO ]


min = -1.#IO
*****************************************

230: min_v_d
Sc (4 : 4): [ 3.000 4.000 -1.#IO -1.#IO ]


min = -1.#IO
*****************************************

230: incr1_v_d
Sc (4 : 4): [ 3.000 4.000 -1.#IO -1.#IO ]
s = 1.#IO


Sc (4 : 4): [ 1.#IO 1.#IO -1.#IO -1.#IO ]
*****************************************

232: assegna1_v_indxv_d
Sc (4 : 4): [ 1.#IO 1.#IO -1.#IO -1.#IO ]
indInf (2 : 4): [ 3 4 ]
val = 0.000


Sc (4 : 4): [ 3.000 4.000 -1.#IO -1.#IO ]
*****************************************

234: which_v_indxgt_d
Sc (4 : 4): [ 3.000 4.000 -1.#IO -1.#IO ]
val = 0.000


tmp1_i (2 : 7): [ 1 2 ]
*****************************************

235: setdiff_i
tmp1_i (2 : 7): [ 1 2 ]
linked (0 : 4): [ ]
2944: copia_v_i
tmp1_i (2 : 7): [ 1 2 ]
start = 1
end = 2


ind (2 : 4): [ 1 2 ]
*****************************************



ind (2 : 4): [ 1 2 ]
*****************************************

241: copia_v_indx_d
Sc (4 : 4): [ 3.000 4.000 -1.#IO -1.#IO ]
ind (2 : 4): [ 1 2 ]


tmp1_d (2 : 16): [ 3.000 4.000 ]
*****************************************

242: somma_v_d
tmp1_d (2 : 16): [ 3.000 4.000 ]
canc_NA = 0



ris: 7.000
*****************************************

242: dividi_vs_d
tmp1_d (2 : 16): [ 3.000 4.000 ]
div = 7.000


p_ind (2 : 4): [ 0.429 0.571 ]
*****************************************


*** sampleB_p ***

*** sample_p ***
ind (2 : 4): [ 1 2 ]
k = 1, replace = 0
p_ind (2 : 4): [ 0.429 0.571 ]


ris (1 : 1): [ 2 ]
*****************************************


Stringhe allocate: 5 (2111 interne); stringhe deallocate: 0 (1871 interne)

246: assegna1_ms_rigaindx_i
Mdiscr (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 1 0 0 0 0
	 1 1 0 0 0
	 1 1 0 0 0
	 0 0 0 0 0
 ]
riga = 5
ris (1 : 1): [ 2 ]
val = 1


Mdiscr (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 1 0 0 0 0
	 1 1 0 0 0
	 1 1 0 0 0
	 0 1 0 0 0
 ]
*****************************************

251: accoda1_vv_i
linked (0 : 4): [ ]
ris (1 : 1): [ 2 ]


linked (1 : 4): [ 2 ]
*****************************************

334: somma_riga_i
Mdiscr (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 1 0 0 0 0
	 1 1 0 0 0
	 1 1 0 0 0
	 0 1 0 0 0
 ]
riga = 5


ris: 1
*****************************************

335: accoda1_vs_i
inthenet (4 : 4): [ 1 2 3 4 ]
s: 5
ATTENZIONE (accoda1_vs_i, linea connectivity_scalefree.c # 335): ingrandito il vettore da 4 a 5


inthenet (5 : 10): [ 1 2 3 4 5 ]
*****************************************

383: copia_v_i
not_regulated (0 : 0): [ ]
start = 1
end = 0


not_inthenet (0 : 0): [ ]
*****************************************

391: somma_righe_i
Mdiscr (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 1 0 0 0 0
	 1 1 0 0 0
	 1 1 0 0 0
	 0 1 0 0 0
 ]


Sr (5 : 5): [ 1 1 2 2 1 ]
*****************************************

393: which_v_indxeq_i
Sr (5 : 5): [ 1 1 2 2 1 ]
val = 0


ind (0 : 13): [ ]
*****************************************

461: which_m_indxeq_i
Mdiscr (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 1 0 0 0 0
	 1 1 0 0 0
	 1 1 0 0 0
	 0 1 0 0 0
 ]
val = 1


ind (7 : 51): [ 2 3 4 6 8 9 10 ]
*****************************************

468: abs_v_d
tmp1_d (7 : 16): [ 1.229 1.318 1.562 -0.098 -0.470 0.492 -0.482 ]


tmp2_d (7 : 16): [ 1.229 1.318 1.562 0.098 0.470 0.492 0.482 ]
*****************************************

473: assegna1_mv_indx_d
M (5 x 5 : 5 x 5): [
	 0.000 0.000 0.000 0.000 0.000
	 0.000 0.000 0.000 0.000 0.000
	 0.000 0.000 0.000 0.000 0.000
	 0.000 0.000 0.000 0.000 0.000
	 0.000 0.000 0.000 0.000 0.000
 ]
ind (7 : 51): [ 2 3 4 6 8 9 10 ]
tmp2_d (7 : 16): [ 1.229 1.318 1.562 0.098 0.470 0.492 0.482 ]


M (5 x 5 : 5 x 5): [
	 0.000 0.098 0.000 0.000 0.000
	 1.229 0.000 0.000 0.000 0.000
	 1.318 0.470 0.000 0.000 0.000
	 1.562 0.492 0.000 0.000 0.000
	 0.000 0.482 0.000 0.000 0.000
 ]
*****************************************


Stringhe allocate: 5 (2132 interne); stringhe deallocate: 0 (2047 interne)


*** createRules1 ***
42: which_m_rowindxne_d
M (5 x 5 : 5 x 5): [
	 0.000 0.098 0.000 0.000 0.000
	 1.229 0.000 0.000 0.000 0.000
	 1.318 0.470 0.000 0.000 0.000
	 1.562 0.492 0.000 0.000 0.000
	 0.000 0.482 0.000 0.000 0.000
 ]
riga = 1, val = 0.000


op (1 : 25): [ 2 ]
*****************************************

54: copia_v_i
op (1 : 25): [ 2 ]
start = 1
end = 1


ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
*****************************************

42: which_m_rowindxne_d
M (5 x 5 : 5 x 5): [
	 0.000 0.098 0.000 0.000 0.000
	 1.229 0.000 0.000 0.000 0.000
	 1.318 0.470 0.000 0.000 0.000
	 1.562 0.492 0.000 0.000 0.000
	 0.000 0.482 0.000 0.000 0.000
 ]
riga = 2, val = 0.000


op (1 : 25): [ 1 ]
*****************************************

54: copia_v_i
op (1 : 25): [ 1 ]
start = 1
end = 1


ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
*****************************************

42: which_m_rowindxne_d
M (5 x 5 : 5 x 5): [
	 0.000 0.098 0.000 0.000 0.000
	 1.229 0.000 0.000 0.000 0.000
	 1.318 0.470 0.000 0.000 0.000
	 1.562 0.492 0.000 0.000 0.000
	 0.000 0.482 0.000 0.000 0.000
 ]
riga = 3, val = 0.000


op (2 : 25): [ 1 2 ]
*****************************************


*** create_logicRule ***
43: op_ss_seqdiv_d
da = 1.000, a = 2.000, div = 2.000


x (2 : 2): [ 0.500 1.000 ]
*****************************************

47: rep_d
scalare_d (1 : 1): [ 0.500 ]
ripetizioni = 2


pr_and (2 : 2): [ 0.500 0.500 ]
*****************************************

70: complementa_d
pr_and (2 : 2): [ 0.500 0.500 ]


pr_or (2 : 2): [ 0.500 0.500 ]
*****************************************

73: vettore2s_d
el1 = 0.500, el2 = 0.500


prob (2 : 2): [ 0.500 0.500 ]
*****************************************

74: vettore2s_i
el1 = -2, el2 = -3


tmp_i (2 : 2): [ -2 -3 ]
*****************************************


*** sample_p ***
tmp_i (2 : 2): [ -2 -3 ]
k = 1, replace = 0
prob (2 : 2): [ 0.500 0.500 ]


ris (1 : 1): [ -3 ]
*****************************************


Stringhe allocate: 0 (60 interne); stringhe deallocate: 0 (5 interne)

77: vettore3v_i
ris (1 : 1): [ -3 ]
scalare_i (1 : 1): [ 0 ]
scalare_i (1 : 1): [ 0 ]


ris (3 : 3): [ -3 0 0 ]
*****************************************

80: vettore2s_i
el1 = 2, el2 = 3


o (2 : 2): [ 2 3 ]
*****************************************


Stringhe allocate: 0 (80 interne); stringhe deallocate: 0 (55 interne)

48: copia_v_i
ris (3 : 3): [ -3 1 2 ]
start = 1
end = 3


ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 2 ]
*****************************************

42: which_m_rowindxne_d
M (5 x 5 : 5 x 5): [
	 0.000 0.098 0.000 0.000 0.000
	 1.229 0.000 0.000 0.000 0.000
	 1.318 0.470 0.000 0.000 0.000
	 1.562 0.492 0.000 0.000 0.000
	 0.000 0.482 0.000 0.000 0.000
 ]
riga = 4, val = 0.000


op (2 : 25): [ 1 2 ]
*****************************************


*** create_logicRule ***
43: op_ss_seqdiv_d
da = 1.000, a = 2.000, div = 2.000


x (2 : 2): [ 0.500 1.000 ]
*****************************************

47: rep_d
scalare_d (1 : 1): [ 0.500 ]
ripetizioni = 2


pr_and (2 : 2): [ 0.500 0.500 ]
*****************************************

70: complementa_d
pr_and (2 : 2): [ 0.500 0.500 ]


pr_or (2 : 2): [ 0.500 0.500 ]
*****************************************

73: vettore2s_d
el1 = 0.500, el2 = 0.500


prob (2 : 2): [ 0.500 0.500 ]
*****************************************

74: vettore2s_i
el1 = -2, el2 = -3


tmp_i (2 : 2): [ -2 -3 ]
*****************************************


*** sample_p ***
tmp_i (2 : 2): [ -2 -3 ]
k = 1, replace = 0
prob (2 : 2): [ 0.500 0.500 ]


ris (1 : 1): [ -3 ]
*****************************************


Stringhe allocate: 0 (125 interne); stringhe deallocate: 0 (60 interne)

77: vettore3v_i
ris (1 : 1): [ -3 ]
scalare_i (1 : 1): [ 0 ]
scalare_i (1 : 1): [ 0 ]


ris (3 : 3): [ -3 0 0 ]
*****************************************

80: vettore2s_i
el1 = 2, el2 = 3


o (2 : 2): [ 2 3 ]
*****************************************


Stringhe allocate: 0 (140 interne); stringhe deallocate: 0 (110 interne)

48: copia_v_i
ris (3 : 3): [ -3 1 2 ]
start = 1
end = 3


ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 2 ]
*****************************************

42: which_m_rowindxne_d
M (5 x 5 : 5 x 5): [
	 0.000 0.098 0.000 0.000 0.000
	 1.229 0.000 0.000 0.000 0.000
	 1.318 0.470 0.000 0.000 0.000
	 1.562 0.492 0.000 0.000 0.000
	 0.000 0.482 0.000 0.000 0.000
 ]
riga = 5, val = 0.000


op (1 : 25): [ 2 ]
*****************************************

54: copia_v_i
op (1 : 25): [ 2 ]
start = 1
end = 1


ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
*****************************************


Stringhe allocate: 0 (150 interne); stringhe deallocate: 0 (120 interne)

56: assegna1_mv_riga_i
reg (5 x 3 : 5 x 3): [
	 0 0 0
	 0 0 0
	 0 0 0
	 0 0 0
	 0 0 0
 ]
riga = 1
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]


reg (5 x 3 : 5 x 3): [
	 2 0 0
	 0 0 0
	 0 0 0
	 0 0 0
	 0 0 0
 ]
*****************************************

56: assegna1_mv_riga_i
reg (5 x 3 : 5 x 3): [
	 2 0 0
	 0 0 0
	 0 0 0
	 0 0 0
	 0 0 0
 ]
riga = 2
ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]


reg (5 x 3 : 5 x 3): [
	 2 0 0
	 1 0 0
	 0 0 0
	 0 0 0
	 0 0 0
 ]
*****************************************

56: assegna1_mv_riga_i
reg (5 x 3 : 5 x 3): [
	 2 0 0
	 1 0 0
	 0 0 0
	 0 0 0
	 0 0 0
 ]
riga = 3
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 2 ]


reg (5 x 3 : 5 x 3): [
	 2 0 0
	 1 0 0
	 -3 1 2
	 0 0 0
	 0 0 0
 ]
*****************************************

56: assegna1_mv_riga_i
reg (5 x 3 : 5 x 3): [
	 2 0 0
	 1 0 0
	 -3 1 2
	 0 0 0
	 0 0 0
 ]
riga = 4
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 2 ]


reg (5 x 3 : 5 x 3): [
	 2 0 0
	 1 0 0
	 -3 1 2
	 -3 1 2
	 0 0 0
 ]
*****************************************

56: assegna1_mv_riga_i
reg (5 x 3 : 5 x 3): [
	 2 0 0
	 1 0 0
	 -3 1 2
	 -3 1 2
	 0 0 0
 ]
riga = 5
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]


reg (5 x 3 : 5 x 3): [
	 2 0 0
	 1 0 0
	 -3 1 2
	 -3 1 2
	 2 0 0
 ]
*****************************************


*** createNEG1 ***
13: which_m_indxeq_i
Mdiscr (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 1 0 0 0 0
	 1 1 0 0 0
	 1 1 0 0 0
	 0 1 0 0 0
 ]
val = 1


ind (7 : 25): [ 2 3 4 6 8 9 10 ]
*****************************************

16: vettore2s_i
el1 = -1, el2 = 1


tmp_i (2 : 2): [ -1 1 ]
*****************************************


*** sample ***
tmp_i (2 : 2): [ -1 1 ]
k = 7, replace = 1


ris (7 : 7): [ -1 1 1 1 1 1 1 ]
*****************************************


Stringhe allocate: 0 (175 interne); stringhe deallocate: 0 (120 interne)

19: assegna1_ms_indxv_i
ris (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
ind (7 : 25): [ 2 3 4 6 8 9 10 ]
val = -1


ris (5 x 5 : 5 x 5): [
	 0 -1 0 0 0
	 -1 0 0 0 0
	 -1 -1 0 0 0
	 -1 -1 0 0 0
	 0 -1 0 0 0
 ]
*****************************************


Stringhe allocate: 0 (175 interne); stringhe deallocate: 0 (135 interne)

71: moltiplica_mm_di
M (5 x 5 : 5 x 5): [
	 0.000 0.098 0.000 0.000 0.000
	 1.229 0.000 0.000 0.000 0.000
	 1.318 0.470 0.000 0.000 0.000
	 1.562 0.492 0.000 0.000 0.000
	 0.000 0.482 0.000 0.000 0.000
 ]
ris (5 x 5 : 5 x 5): [
	 0 -1 0 0 0
	 -1 0 0 0 0
	 -1 -1 0 0 0
	 -1 -1 0 0 0
	 0 -1 0 0 0
 ]


tmpm1_d (5 x 5 : 5 x 5): [
	 0.000 -0.098 0.000 0.000 0.000
	 -1.229 0.000 0.000 0.000 0.000
	 -1.318 -0.470 0.000 0.000 0.000
	 -1.562 -0.492 0.000 0.000 0.000
	 0.000 -0.482 0.000 0.000 0.000
 ]
*****************************************


*** dinamica1 ***
62: media_v_d
parm1[j] (5 : 5): [ 1.055 0.972 0.929 1.080 1.060 ]


media = 1.019
*****************************************

74: f_aux4_d
times (5 : 5): [ 1.000 2.000 3.000 4.000 5.000 ]
res = 0.100

ris = 0.000

*****************************************

82: max_v_d
times (5 : 5): [ 1.000 2.000 3.000 4.000 5.000 ]


max = 5.000
*****************************************

85: assegna1_mv_colonna_d
D (5 x 49 : 5 x 49): [
	 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
colonna = 1
parm1[j] (5 : 5): [ 0.126 0.048 0.083 0.002 0.075 ]


D (5 x 49 : 5 x 49): [
	 0.126 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.048 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.083 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.002 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.075 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
*****************************************

86: copia_v_d
parm1[j] (5 : 5): [ 0.126 0.048 0.083 0.002 0.075 ]
start = 1
end = 5


n (5 : 5): [ 0.126 0.048 0.083 0.002 0.075 ]
*****************************************


*** target1 ***

*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (225 interne); stringhe deallocate: 0 (150 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.126 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.126


ris (2 : 2): [ -1.000 0.126 ]
*****************************************


Stringhe allocate: 2 (240 interne); stringhe deallocate: 0 (165 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.126 0.000 ]
*** next_op ***
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.126


ris (2 : 2): [ -1.000 0.126 ]
*****************************************


Stringhe allocate: 2 (255 interne); stringhe deallocate: 0 (180 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.126 0.000 ]
*** next_op ***
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.126


ris (2 : 2): [ -1.000 0.126 ]
*****************************************


Stringhe allocate: 2 (270 interne); stringhe deallocate: 0 (195 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (285 interne); stringhe deallocate: 0 (210 interne)


Stringhe allocate: 2 (285 interne); stringhe deallocate: 0 (215 interne)

105: f_aux5_d
parm1[j] (5 : 5): [ 9.966 10.144 10.104 9.914 9.961 ]
ris (5 : 5): [ 1.000 0.874 0.874 0.874 1.000 ]
parm1[j] (5 : 5): [ 0.489 0.481 0.495 0.515 0.505 ]


targetT (5 : 5): [ 0.994 0.982 0.979 0.972 0.993 ]
*****************************************

114: f_aux6_d
res = 0.100
parm1[j] (5 : 5): [ 1.055 0.972 0.929 1.080 1.060 ]
targetT (5 : 5): [ 0.994 0.982 0.979 0.972 0.993 ]
n (5 : 5): [ 0.126 0.048 0.083 0.002 0.075 ]


incr (5 : 5): [ 0.092 0.091 0.083 0.105 0.097 ]
*****************************************

116: somma1_vv_d
n (5 : 5): [ 0.126 0.048 0.083 0.002 0.075 ]
incr (5 : 5): [ 0.092 0.091 0.083 0.105 0.097 ]


n (5 : 5): [ 0.217 0.138 0.166 0.107 0.173 ]
*****************************************

118: assegna1_mv_colonna_d
D (5 x 49 : 5 x 49): [
	 0.126 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.048 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.083 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.002 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.075 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
colonna = 1
n (5 : 5): [ 0.217 0.138 0.166 0.107 0.173 ]


D (5 x 49 : 5 x 49): [
	 0.217 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
*****************************************


*** target1 ***

*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (315 interne); stringhe deallocate: 0 (230 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.217 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.217


ris (2 : 2): [ -1.000 0.217 ]
*****************************************


Stringhe allocate: 2 (330 interne); stringhe deallocate: 0 (245 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (345 interne); stringhe deallocate: 0 (260 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (360 interne); stringhe deallocate: 0 (275 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (375 interne); stringhe deallocate: 0 (290 interne)


Stringhe allocate: 2 (375 interne); stringhe deallocate: 0 (295 interne)

105: f_aux5_d
parm1[j] (5 : 5): [ 9.966 10.144 10.104 9.914 9.961 ]
ris (5 : 5): [ 1.000 0.783 0.000 0.000 1.000 ]
parm1[j] (5 : 5): [ 0.489 0.481 0.495 0.515 0.505 ]


targetT (5 : 5): [ 0.994 0.955 0.007 0.006 0.993 ]
*****************************************

114: f_aux6_d
res = 0.100
parm1[j] (5 : 5): [ 1.055 0.972 0.929 1.080 1.060 ]
targetT (5 : 5): [ 0.994 0.955 0.007 0.006 0.993 ]
n (5 : 5): [ 0.217 0.138 0.166 0.107 0.173 ]


incr (5 : 5): [ 0.082 0.079 -0.015 -0.011 0.087 ]
*****************************************

116: somma1_vv_d
n (5 : 5): [ 0.217 0.138 0.166 0.107 0.173 ]
incr (5 : 5): [ 0.082 0.079 -0.015 -0.011 0.087 ]


n (5 : 5): [ 0.299 0.218 0.152 0.096 0.259 ]
*****************************************

118: assegna1_mv_colonna_d
D (5 x 49 : 5 x 49): [
	 0.217 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
colonna = 2
n (5 : 5): [ 0.299 0.218 0.152 0.096 0.259 ]


D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
*****************************************


*** target1 ***

*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (395 interne); stringhe deallocate: 0 (310 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.299 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.299


ris (2 : 2): [ -1.000 0.299 ]
*****************************************


Stringhe allocate: 2 (410 interne); stringhe deallocate: 0 (325 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (425 interne); stringhe deallocate: 0 (340 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (440 interne); stringhe deallocate: 0 (355 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (455 interne); stringhe deallocate: 0 (370 interne)


Stringhe allocate: 2 (455 interne); stringhe deallocate: 0 (375 interne)

105: f_aux5_d
parm1[j] (5 : 5): [ 9.966 10.144 10.104 9.914 9.961 ]
ris (5 : 5): [ 1.000 0.701 0.000 0.000 1.000 ]
parm1[j] (5 : 5): [ 0.489 0.481 0.495 0.515 0.505 ]


targetT (5 : 5): [ 0.994 0.903 0.007 0.006 0.993 ]
*****************************************

114: f_aux6_d
res = 0.100
parm1[j] (5 : 5): [ 1.055 0.972 0.929 1.080 1.060 ]
targetT (5 : 5): [ 0.994 0.903 0.007 0.006 0.993 ]
n (5 : 5): [ 0.299 0.218 0.152 0.096 0.259 ]


incr (5 : 5): [ 0.073 0.067 -0.013 -0.010 0.078 ]
*****************************************

116: somma1_vv_d
n (5 : 5): [ 0.299 0.218 0.152 0.096 0.259 ]
incr (5 : 5): [ 0.073 0.067 -0.013 -0.010 0.078 ]


n (5 : 5): [ 0.373 0.284 0.138 0.087 0.337 ]
*****************************************

118: assegna1_mv_colonna_d
D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
colonna = 3
n (5 : 5): [ 0.373 0.284 0.138 0.087 0.337 ]


D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
*****************************************


*** target1 ***

*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (475 interne); stringhe deallocate: 0 (390 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.373 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.373


ris (2 : 2): [ -1.000 0.373 ]
*****************************************


Stringhe allocate: 2 (490 interne); stringhe deallocate: 0 (405 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (505 interne); stringhe deallocate: 0 (420 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (520 interne); stringhe deallocate: 0 (435 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (535 interne); stringhe deallocate: 0 (450 interne)


Stringhe allocate: 2 (535 interne); stringhe deallocate: 0 (455 interne)

105: f_aux5_d
parm1[j] (5 : 5): [ 9.966 10.144 10.104 9.914 9.961 ]
ris (5 : 5): [ 1.000 0.627 0.000 0.000 1.000 ]
parm1[j] (5 : 5): [ 0.489 0.481 0.495 0.515 0.505 ]


targetT (5 : 5): [ 0.994 0.815 0.007 0.006 0.993 ]
*****************************************

114: f_aux6_d
res = 0.100
parm1[j] (5 : 5): [ 1.055 0.972 0.929 1.080 1.060 ]
targetT (5 : 5): [ 0.994 0.815 0.007 0.006 0.993 ]
n (5 : 5): [ 0.373 0.284 0.138 0.087 0.337 ]


incr (5 : 5): [ 0.066 0.052 -0.012 -0.009 0.069 ]
*****************************************

116: somma1_vv_d
n (5 : 5): [ 0.373 0.284 0.138 0.087 0.337 ]
incr (5 : 5): [ 0.066 0.052 -0.012 -0.009 0.069 ]


n (5 : 5): [ 0.438 0.336 0.126 0.078 0.407 ]
*****************************************

118: assegna1_mv_colonna_d
D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
colonna = 4
n (5 : 5): [ 0.438 0.336 0.126 0.078 0.407 ]


D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
*****************************************


*** target1 ***

*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (555 interne); stringhe deallocate: 0 (470 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.438 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.438


ris (2 : 2): [ -1.000 0.438 ]
*****************************************


Stringhe allocate: 2 (570 interne); stringhe deallocate: 0 (485 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (585 interne); stringhe deallocate: 0 (500 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (600 interne); stringhe deallocate: 0 (515 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (615 interne); stringhe deallocate: 0 (530 interne)


Stringhe allocate: 2 (615 interne); stringhe deallocate: 0 (535 interne)

105: f_aux5_d
parm1[j] (5 : 5): [ 9.966 10.144 10.104 9.914 9.961 ]
ris (5 : 5): [ 1.000 0.562 0.000 0.000 1.000 ]
parm1[j] (5 : 5): [ 0.489 0.481 0.495 0.515 0.505 ]


targetT (5 : 5): [ 0.994 0.694 0.007 0.006 0.993 ]
*****************************************

114: f_aux6_d
res = 0.100
parm1[j] (5 : 5): [ 1.055 0.972 0.929 1.080 1.060 ]
targetT (5 : 5): [ 0.994 0.694 0.007 0.006 0.993 ]
n (5 : 5): [ 0.438 0.336 0.126 0.078 0.407 ]


incr (5 : 5): [ 0.059 0.035 -0.011 -0.008 0.062 ]
*****************************************

116: somma1_vv_d
n (5 : 5): [ 0.438 0.336 0.126 0.078 0.407 ]
incr (5 : 5): [ 0.059 0.035 -0.011 -0.008 0.062 ]


n (5 : 5): [ 0.497 0.371 0.115 0.070 0.469 ]
*****************************************

118: assegna1_mv_colonna_d
D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
colonna = 5
n (5 : 5): [ 0.497 0.371 0.115 0.070 0.469 ]


D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
*****************************************


*** target1 ***

*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (635 interne); stringhe deallocate: 0 (550 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.497 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.497


ris (2 : 2): [ -1.000 0.497 ]
*****************************************


Stringhe allocate: 2 (650 interne); stringhe deallocate: 0 (565 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (665 interne); stringhe deallocate: 0 (580 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (680 interne); stringhe deallocate: 0 (595 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (695 interne); stringhe deallocate: 0 (610 interne)


Stringhe allocate: 2 (695 interne); stringhe deallocate: 0 (615 interne)

105: f_aux5_d
parm1[j] (5 : 5): [ 9.966 10.144 10.104 9.914 9.961 ]
ris (5 : 5): [ 1.000 0.503 0.000 0.000 1.000 ]
parm1[j] (5 : 5): [ 0.489 0.481 0.495 0.515 0.505 ]


targetT (5 : 5): [ 0.994 0.555 0.007 0.006 0.993 ]
*****************************************

114: f_aux6_d
res = 0.100
parm1[j] (5 : 5): [ 1.055 0.972 0.929 1.080 1.060 ]
targetT (5 : 5): [ 0.994 0.555 0.007 0.006 0.993 ]
n (5 : 5): [ 0.497 0.371 0.115 0.070 0.469 ]


incr (5 : 5): [ 0.052 0.018 -0.010 -0.007 0.056 ]
*****************************************

116: somma1_vv_d
n (5 : 5): [ 0.497 0.371 0.115 0.070 0.469 ]
incr (5 : 5): [ 0.052 0.018 -0.010 -0.007 0.056 ]


n (5 : 5): [ 0.549 0.389 0.105 0.063 0.524 ]
*****************************************

118: assegna1_mv_colonna_d
D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
colonna = 6
n (5 : 5): [ 0.549 0.389 0.105 0.063 0.524 ]


D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
*****************************************


*** target1 ***

*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (715 interne); stringhe deallocate: 0 (630 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.549 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.549


ris (2 : 2): [ -1.000 0.549 ]
*****************************************


Stringhe allocate: 2 (730 interne); stringhe deallocate: 0 (645 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (745 interne); stringhe deallocate: 0 (660 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (760 interne); stringhe deallocate: 0 (675 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (775 interne); stringhe deallocate: 0 (690 interne)


Stringhe allocate: 2 (775 interne); stringhe deallocate: 0 (695 interne)

105: f_aux5_d
parm1[j] (5 : 5): [ 9.966 10.144 10.104 9.914 9.961 ]
ris (5 : 5): [ 1.000 0.451 0.000 0.000 1.000 ]
parm1[j] (5 : 5): [ 0.489 0.481 0.495 0.515 0.505 ]


targetT (5 : 5): [ 0.994 0.423 0.007 0.006 0.993 ]
*****************************************

114: f_aux6_d
res = 0.100
parm1[j] (5 : 5): [ 1.055 0.972 0.929 1.080 1.060 ]
targetT (5 : 5): [ 0.994 0.423 0.007 0.006 0.993 ]
n (5 : 5): [ 0.549 0.389 0.105 0.063 0.524 ]


incr (5 : 5): [ 0.047 0.003 -0.009 -0.006 0.050 ]
*****************************************

116: somma1_vv_d
n (5 : 5): [ 0.549 0.389 0.105 0.063 0.524 ]
incr (5 : 5): [ 0.047 0.003 -0.009 -0.006 0.050 ]


n (5 : 5): [ 0.596 0.392 0.096 0.057 0.574 ]
*****************************************

118: assegna1_mv_colonna_d
D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
colonna = 7
n (5 : 5): [ 0.596 0.392 0.096 0.057 0.574 ]


D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
*****************************************


*** target1 ***

*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (795 interne); stringhe deallocate: 0 (710 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.596 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.596


ris (2 : 2): [ -1.000 0.596 ]
*****************************************


Stringhe allocate: 2 (810 interne); stringhe deallocate: 0 (725 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (825 interne); stringhe deallocate: 0 (740 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (840 interne); stringhe deallocate: 0 (755 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (855 interne); stringhe deallocate: 0 (770 interne)


Stringhe allocate: 2 (855 interne); stringhe deallocate: 0 (775 interne)

105: f_aux5_d
parm1[j] (5 : 5): [ 9.966 10.144 10.104 9.914 9.961 ]
ris (5 : 5): [ 1.000 0.404 0.000 0.000 1.000 ]
parm1[j] (5 : 5): [ 0.489 0.481 0.495 0.515 0.505 ]


targetT (5 : 5): [ 0.994 0.313 0.007 0.006 0.993 ]
*****************************************

114: f_aux6_d
res = 0.100
parm1[j] (5 : 5): [ 1.055 0.972 0.929 1.080 1.060 ]
targetT (5 : 5): [ 0.994 0.313 0.007 0.006 0.993 ]
n (5 : 5): [ 0.596 0.392 0.096 0.057 0.574 ]


incr (5 : 5): [ 0.042 -0.008 -0.008 -0.006 0.044 ]
*****************************************

116: somma1_vv_d
n (5 : 5): [ 0.596 0.392 0.096 0.057 0.574 ]
incr (5 : 5): [ 0.042 -0.008 -0.008 -0.006 0.044 ]


n (5 : 5): [ 0.638 0.384 0.087 0.052 0.618 ]
*****************************************

118: assegna1_mv_colonna_d
D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
colonna = 8
n (5 : 5): [ 0.638 0.384 0.087 0.052 0.618 ]


D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
*****************************************


*** target1 ***

*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (875 interne); stringhe deallocate: 0 (790 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.638 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.638


ris (2 : 2): [ -1.000 0.638 ]
*****************************************


Stringhe allocate: 2 (890 interne); stringhe deallocate: 0 (805 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (905 interne); stringhe deallocate: 0 (820 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (920 interne); stringhe deallocate: 0 (835 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (935 interne); stringhe deallocate: 0 (850 interne)


Stringhe allocate: 2 (935 interne); stringhe deallocate: 0 (855 interne)

105: f_aux5_d
parm1[j] (5 : 5): [ 9.966 10.144 10.104 9.914 9.961 ]
ris (5 : 5): [ 1.000 0.362 0.000 0.000 1.000 ]
parm1[j] (5 : 5): [ 0.489 0.481 0.495 0.515 0.505 ]


targetT (5 : 5): [ 0.994 0.230 0.007 0.006 0.993 ]
*****************************************

114: f_aux6_d
res = 0.100
parm1[j] (5 : 5): [ 1.055 0.972 0.929 1.080 1.060 ]
targetT (5 : 5): [ 0.994 0.230 0.007 0.006 0.993 ]
n (5 : 5): [ 0.638 0.384 0.087 0.052 0.618 ]


incr (5 : 5): [ 0.038 -0.015 -0.008 -0.005 0.040 ]
*****************************************

116: somma1_vv_d
n (5 : 5): [ 0.638 0.384 0.087 0.052 0.618 ]
incr (5 : 5): [ 0.038 -0.015 -0.008 -0.005 0.040 ]


n (5 : 5): [ 0.676 0.369 0.080 0.047 0.658 ]
*****************************************

118: assegna1_mv_colonna_d
D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
colonna = 9
n (5 : 5): [ 0.676 0.369 0.080 0.047 0.658 ]


D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
*****************************************


*** target1 ***

*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (955 interne); stringhe deallocate: 0 (870 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.676 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.676


ris (2 : 2): [ -1.000 0.676 ]
*****************************************


Stringhe allocate: 2 (970 interne); stringhe deallocate: 0 (885 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (985 interne); stringhe deallocate: 0 (900 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (1000 interne); stringhe deallocate: 0 (915 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (1015 interne); stringhe deallocate: 0 (930 interne)


Stringhe allocate: 2 (1015 interne); stringhe deallocate: 0 (935 interne)

105: f_aux5_d
parm1[j] (5 : 5): [ 9.966 10.144 10.104 9.914 9.961 ]
ris (5 : 5): [ 1.000 0.324 0.000 0.000 1.000 ]
parm1[j] (5 : 5): [ 0.489 0.481 0.495 0.515 0.505 ]


targetT (5 : 5): [ 0.994 0.169 0.007 0.006 0.993 ]
*****************************************

114: f_aux6_d
res = 0.100
parm1[j] (5 : 5): [ 1.055 0.972 0.929 1.080 1.060 ]
targetT (5 : 5): [ 0.994 0.169 0.007 0.006 0.993 ]
n (5 : 5): [ 0.676 0.369 0.080 0.047 0.658 ]


incr (5 : 5): [ 0.034 -0.019 -0.007 -0.004 0.035 ]
*****************************************

116: somma1_vv_d
n (5 : 5): [ 0.676 0.369 0.080 0.047 0.658 ]
incr (5 : 5): [ 0.034 -0.019 -0.007 -0.004 0.035 ]


n (5 : 5): [ 0.709 0.350 0.073 0.042 0.694 ]
*****************************************

118: assegna1_mv_colonna_d
D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
colonna = 10
n (5 : 5): [ 0.709 0.350 0.073 0.042 0.694 ]


D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
*****************************************


*** target1 ***

*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (1035 interne); stringhe deallocate: 0 (950 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.709 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.709


ris (2 : 2): [ -1.000 0.709 ]
*****************************************


Stringhe allocate: 2 (1050 interne); stringhe deallocate: 0 (965 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (1065 interne); stringhe deallocate: 0 (980 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (1080 interne); stringhe deallocate: 0 (995 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (1095 interne); stringhe deallocate: 0 (1010 interne)


Stringhe allocate: 2 (1095 interne); stringhe deallocate: 0 (1015 interne)

105: f_aux5_d
parm1[j] (5 : 5): [ 9.966 10.144 10.104 9.914 9.961 ]
ris (5 : 5): [ 1.000 0.291 0.000 0.000 1.000 ]
parm1[j] (5 : 5): [ 0.489 0.481 0.495 0.515 0.505 ]


targetT (5 : 5): [ 0.994 0.127 0.007 0.006 0.993 ]
*****************************************

114: f_aux6_d
res = 0.100
parm1[j] (5 : 5): [ 1.055 0.972 0.929 1.080 1.060 ]
targetT (5 : 5): [ 0.994 0.127 0.007 0.006 0.993 ]
n (5 : 5): [ 0.709 0.350 0.073 0.042 0.694 ]


incr (5 : 5): [ 0.030 -0.022 -0.006 -0.004 0.032 ]
*****************************************

116: somma1_vv_d
n (5 : 5): [ 0.709 0.350 0.073 0.042 0.694 ]
incr (5 : 5): [ 0.030 -0.022 -0.006 -0.004 0.032 ]


n (5 : 5): [ 0.739 0.328 0.067 0.038 0.725 ]
*****************************************

118: assegna1_mv_colonna_d
D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
colonna = 11
n (5 : 5): [ 0.739 0.328 0.067 0.038 0.725 ]


D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
*****************************************


*** target1 ***

*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (1115 interne); stringhe deallocate: 0 (1030 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.739 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.739


ris (2 : 2): [ -1.000 0.739 ]
*****************************************


Stringhe allocate: 2 (1130 interne); stringhe deallocate: 0 (1045 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (1145 interne); stringhe deallocate: 0 (1060 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (1160 interne); stringhe deallocate: 0 (1075 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (1175 interne); stringhe deallocate: 0 (1090 interne)


Stringhe allocate: 2 (1175 interne); stringhe deallocate: 0 (1095 interne)

105: f_aux5_d
parm1[j] (5 : 5): [ 9.966 10.144 10.104 9.914 9.961 ]
ris (5 : 5): [ 1.000 0.261 0.000 0.000 1.000 ]
parm1[j] (5 : 5): [ 0.489 0.481 0.495 0.515 0.505 ]


targetT (5 : 5): [ 0.994 0.097 0.007 0.006 0.993 ]
*****************************************

114: f_aux6_d
res = 0.100
parm1[j] (5 : 5): [ 1.055 0.972 0.929 1.080 1.060 ]
targetT (5 : 5): [ 0.994 0.097 0.007 0.006 0.993 ]
n (5 : 5): [ 0.739 0.328 0.067 0.038 0.725 ]


incr (5 : 5): [ 0.027 -0.023 -0.006 -0.003 0.028 ]
*****************************************

116: somma1_vv_d
n (5 : 5): [ 0.739 0.328 0.067 0.038 0.725 ]
incr (5 : 5): [ 0.027 -0.023 -0.006 -0.003 0.028 ]


n (5 : 5): [ 0.766 0.306 0.061 0.035 0.754 ]
*****************************************

118: assegna1_mv_colonna_d
D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
colonna = 12
n (5 : 5): [ 0.766 0.306 0.061 0.035 0.754 ]


D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
*****************************************


*** target1 ***

*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (1195 interne); stringhe deallocate: 0 (1110 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.766 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.766


ris (2 : 2): [ -1.000 0.766 ]
*****************************************


Stringhe allocate: 2 (1210 interne); stringhe deallocate: 0 (1125 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (1225 interne); stringhe deallocate: 0 (1140 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (1240 interne); stringhe deallocate: 0 (1155 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (1255 interne); stringhe deallocate: 0 (1170 interne)


Stringhe allocate: 2 (1255 interne); stringhe deallocate: 0 (1175 interne)

105: f_aux5_d
parm1[j] (5 : 5): [ 9.966 10.144 10.104 9.914 9.961 ]
ris (5 : 5): [ 1.000 0.234 0.000 0.000 1.000 ]
parm1[j] (5 : 5): [ 0.489 0.481 0.495 0.515 0.505 ]


targetT (5 : 5): [ 0.994 0.075 0.007 0.006 0.993 ]
*****************************************

114: f_aux6_d
res = 0.100
parm1[j] (5 : 5): [ 1.055 0.972 0.929 1.080 1.060 ]
targetT (5 : 5): [ 0.994 0.075 0.007 0.006 0.993 ]
n (5 : 5): [ 0.766 0.306 0.061 0.035 0.754 ]


incr (5 : 5): [ 0.024 -0.022 -0.005 -0.003 0.025 ]
*****************************************

116: somma1_vv_d
n (5 : 5): [ 0.766 0.306 0.061 0.035 0.754 ]
incr (5 : 5): [ 0.024 -0.022 -0.005 -0.003 0.025 ]


n (5 : 5): [ 0.790 0.283 0.056 0.032 0.779 ]
*****************************************

118: assegna1_mv_colonna_d
D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
colonna = 13
n (5 : 5): [ 0.790 0.283 0.056 0.032 0.779 ]


D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
*****************************************


*** target1 ***

*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (1275 interne); stringhe deallocate: 0 (1190 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.790 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.790


ris (2 : 2): [ -1.000 0.790 ]
*****************************************


Stringhe allocate: 2 (1290 interne); stringhe deallocate: 0 (1205 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (1305 interne); stringhe deallocate: 0 (1220 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (1320 interne); stringhe deallocate: 0 (1235 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (1335 interne); stringhe deallocate: 0 (1250 interne)


Stringhe allocate: 2 (1335 interne); stringhe deallocate: 0 (1255 interne)

105: f_aux5_d
parm1[j] (5 : 5): [ 9.966 10.144 10.104 9.914 9.961 ]
ris (5 : 5): [ 1.000 0.210 0.000 0.000 1.000 ]
parm1[j] (5 : 5): [ 0.489 0.481 0.495 0.515 0.505 ]


targetT (5 : 5): [ 0.994 0.060 0.007 0.006 0.993 ]
*****************************************

114: f_aux6_d
res = 0.100
parm1[j] (5 : 5): [ 1.055 0.972 0.929 1.080 1.060 ]
targetT (5 : 5): [ 0.994 0.060 0.007 0.006 0.993 ]
n (5 : 5): [ 0.790 0.283 0.056 0.032 0.779 ]


incr (5 : 5): [ 0.021 -0.022 -0.005 -0.003 0.023 ]
*****************************************

116: somma1_vv_d
n (5 : 5): [ 0.790 0.283 0.056 0.032 0.779 ]
incr (5 : 5): [ 0.021 -0.022 -0.005 -0.003 0.023 ]


n (5 : 5): [ 0.812 0.262 0.052 0.029 0.802 ]
*****************************************

118: assegna1_mv_colonna_d
D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
colonna = 14
n (5 : 5): [ 0.812 0.262 0.052 0.029 0.802 ]


D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
*****************************************


*** target1 ***

*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (1355 interne); stringhe deallocate: 0 (1270 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.812 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.812


ris (2 : 2): [ -1.000 0.812 ]
*****************************************


Stringhe allocate: 2 (1370 interne); stringhe deallocate: 0 (1285 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (1385 interne); stringhe deallocate: 0 (1300 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (1400 interne); stringhe deallocate: 0 (1315 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (1415 interne); stringhe deallocate: 0 (1330 interne)


Stringhe allocate: 2 (1415 interne); stringhe deallocate: 0 (1335 interne)

105: f_aux5_d
parm1[j] (5 : 5): [ 9.966 10.144 10.104 9.914 9.961 ]
ris (5 : 5): [ 1.000 0.188 0.000 0.000 1.000 ]
parm1[j] (5 : 5): [ 0.489 0.481 0.495 0.515 0.505 ]


targetT (5 : 5): [ 0.994 0.049 0.007 0.006 0.993 ]
*****************************************

114: f_aux6_d
res = 0.100
parm1[j] (5 : 5): [ 1.055 0.972 0.929 1.080 1.060 ]
targetT (5 : 5): [ 0.994 0.049 0.007 0.006 0.993 ]
n (5 : 5): [ 0.812 0.262 0.052 0.029 0.802 ]


incr (5 : 5): [ 0.019 -0.021 -0.004 -0.002 0.020 ]
*****************************************

116: somma1_vv_d
n (5 : 5): [ 0.812 0.262 0.052 0.029 0.802 ]
incr (5 : 5): [ 0.019 -0.021 -0.004 -0.002 0.020 ]


n (5 : 5): [ 0.831 0.241 0.047 0.026 0.822 ]
*****************************************

118: assegna1_mv_colonna_d
D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
colonna = 15
n (5 : 5): [ 0.831 0.241 0.047 0.026 0.822 ]


D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
*****************************************


*** target1 ***

*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (1435 interne); stringhe deallocate: 0 (1350 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.831 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.831


ris (2 : 2): [ -1.000 0.831 ]
*****************************************


Stringhe allocate: 2 (1450 interne); stringhe deallocate: 0 (1365 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (1465 interne); stringhe deallocate: 0 (1380 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (1480 interne); stringhe deallocate: 0 (1395 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (1495 interne); stringhe deallocate: 0 (1410 interne)


Stringhe allocate: 2 (1495 interne); stringhe deallocate: 0 (1415 interne)

105: f_aux5_d
parm1[j] (5 : 5): [ 9.966 10.144 10.104 9.914 9.961 ]
ris (5 : 5): [ 1.000 0.169 0.000 0.000 1.000 ]
parm1[j] (5 : 5): [ 0.489 0.481 0.495 0.515 0.505 ]


targetT (5 : 5): [ 0.994 0.040 0.007 0.006 0.993 ]
*****************************************

114: f_aux6_d
res = 0.100
parm1[j] (5 : 5): [ 1.055 0.972 0.929 1.080 1.060 ]
targetT (5 : 5): [ 0.994 0.040 0.007 0.006 0.993 ]
n (5 : 5): [ 0.831 0.241 0.047 0.026 0.822 ]


incr (5 : 5): [ 0.017 -0.019 -0.004 -0.002 0.018 ]
*****************************************

116: somma1_vv_d
n (5 : 5): [ 0.831 0.241 0.047 0.026 0.822 ]
incr (5 : 5): [ 0.017 -0.019 -0.004 -0.002 0.018 ]


n (5 : 5): [ 0.848 0.221 0.044 0.024 0.840 ]
*****************************************

118: assegna1_mv_colonna_d
D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
colonna = 16
n (5 : 5): [ 0.848 0.221 0.044 0.024 0.840 ]


D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
*****************************************


*** target1 ***

*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (1515 interne); stringhe deallocate: 0 (1430 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.848 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.848


ris (2 : 2): [ -1.000 0.848 ]
*****************************************


Stringhe allocate: 2 (1530 interne); stringhe deallocate: 0 (1445 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (1545 interne); stringhe deallocate: 0 (1460 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (1560 interne); stringhe deallocate: 0 (1475 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (1575 interne); stringhe deallocate: 0 (1490 interne)


Stringhe allocate: 2 (1575 interne); stringhe deallocate: 0 (1495 interne)

105: f_aux5_d
parm1[j] (5 : 5): [ 9.966 10.144 10.104 9.914 9.961 ]
ris (5 : 5): [ 1.000 0.152 0.000 0.000 1.000 ]
parm1[j] (5 : 5): [ 0.489 0.481 0.495 0.515 0.505 ]


targetT (5 : 5): [ 0.994 0.034 0.007 0.006 0.993 ]
*****************************************

114: f_aux6_d
res = 0.100
parm1[j] (5 : 5): [ 1.055 0.972 0.929 1.080 1.060 ]
targetT (5 : 5): [ 0.994 0.034 0.007 0.006 0.993 ]
n (5 : 5): [ 0.848 0.221 0.044 0.024 0.840 ]


incr (5 : 5): [ 0.015 -0.018 -0.003 -0.002 0.016 ]
*****************************************

116: somma1_vv_d
n (5 : 5): [ 0.848 0.221 0.044 0.024 0.840 ]
incr (5 : 5): [ 0.015 -0.018 -0.003 -0.002 0.016 ]


n (5 : 5): [ 0.863 0.203 0.040 0.022 0.856 ]
*****************************************

118: assegna1_mv_colonna_d
D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
colonna = 17
n (5 : 5): [ 0.863 0.203 0.040 0.022 0.856 ]


D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
*****************************************


*** target1 ***

*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (1595 interne); stringhe deallocate: 0 (1510 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.863 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.863


ris (2 : 2): [ -1.000 0.863 ]
*****************************************


Stringhe allocate: 2 (1610 interne); stringhe deallocate: 0 (1525 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (1625 interne); stringhe deallocate: 0 (1540 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (1640 interne); stringhe deallocate: 0 (1555 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (1655 interne); stringhe deallocate: 0 (1570 interne)


Stringhe allocate: 2 (1655 interne); stringhe deallocate: 0 (1575 interne)

105: f_aux5_d
parm1[j] (5 : 5): [ 9.966 10.144 10.104 9.914 9.961 ]
ris (5 : 5): [ 1.000 0.137 0.000 0.000 1.000 ]
parm1[j] (5 : 5): [ 0.489 0.481 0.495 0.515 0.505 ]


targetT (5 : 5): [ 0.994 0.029 0.007 0.006 0.993 ]
*****************************************

114: f_aux6_d
res = 0.100
parm1[j] (5 : 5): [ 1.055 0.972 0.929 1.080 1.060 ]
targetT (5 : 5): [ 0.994 0.029 0.007 0.006 0.993 ]
n (5 : 5): [ 0.863 0.203 0.040 0.022 0.856 ]


incr (5 : 5): [ 0.014 -0.017 -0.003 -0.002 0.014 ]
*****************************************

116: somma1_vv_d
n (5 : 5): [ 0.863 0.203 0.040 0.022 0.856 ]
incr (5 : 5): [ 0.014 -0.017 -0.003 -0.002 0.014 ]


n (5 : 5): [ 0.877 0.186 0.037 0.021 0.871 ]
*****************************************

118: assegna1_mv_colonna_d
D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
colonna = 18
n (5 : 5): [ 0.877 0.186 0.037 0.021 0.871 ]


D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
*****************************************


*** target1 ***

*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (1675 interne); stringhe deallocate: 0 (1590 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.877 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.877


ris (2 : 2): [ -1.000 0.877 ]
*****************************************


Stringhe allocate: 2 (1690 interne); stringhe deallocate: 0 (1605 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (1705 interne); stringhe deallocate: 0 (1620 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (1720 interne); stringhe deallocate: 0 (1635 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (1735 interne); stringhe deallocate: 0 (1650 interne)


Stringhe allocate: 2 (1735 interne); stringhe deallocate: 0 (1655 interne)

105: f_aux5_d
parm1[j] (5 : 5): [ 9.966 10.144 10.104 9.914 9.961 ]
ris (5 : 5): [ 1.000 0.123 0.000 0.000 1.000 ]
parm1[j] (5 : 5): [ 0.489 0.481 0.495 0.515 0.505 ]


targetT (5 : 5): [ 0.994 0.026 0.007 0.006 0.993 ]
*****************************************

114: f_aux6_d
res = 0.100
parm1[j] (5 : 5): [ 1.055 0.972 0.929 1.080 1.060 ]
targetT (5 : 5): [ 0.994 0.026 0.007 0.006 0.993 ]
n (5 : 5): [ 0.877 0.186 0.037 0.021 0.871 ]


incr (5 : 5): [ 0.012 -0.016 -0.003 -0.002 0.013 ]
*****************************************

116: somma1_vv_d
n (5 : 5): [ 0.877 0.186 0.037 0.021 0.871 ]
incr (5 : 5): [ 0.012 -0.016 -0.003 -0.002 0.013 ]


n (5 : 5): [ 0.890 0.171 0.034 0.019 0.884 ]
*****************************************

118: assegna1_mv_colonna_d
D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
colonna = 19
n (5 : 5): [ 0.890 0.171 0.034 0.019 0.884 ]


D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.890 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.171 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.034 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.019 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.884 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
*****************************************


*** target1 ***

*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (1755 interne); stringhe deallocate: 0 (1670 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.890 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.890


ris (2 : 2): [ -1.000 0.890 ]
*****************************************


Stringhe allocate: 2 (1770 interne); stringhe deallocate: 0 (1685 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (1785 interne); stringhe deallocate: 0 (1700 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (1800 interne); stringhe deallocate: 0 (1715 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (1815 interne); stringhe deallocate: 0 (1730 interne)


Stringhe allocate: 2 (1815 interne); stringhe deallocate: 0 (1735 interne)

105: f_aux5_d
parm1[j] (5 : 5): [ 9.966 10.144 10.104 9.914 9.961 ]
ris (5 : 5): [ 1.000 0.110 0.000 0.000 1.000 ]
parm1[j] (5 : 5): [ 0.489 0.481 0.495 0.515 0.505 ]


targetT (5 : 5): [ 0.994 0.023 0.007 0.006 0.993 ]
*****************************************

114: f_aux6_d
res = 0.100
parm1[j] (5 : 5): [ 1.055 0.972 0.929 1.080 1.060 ]
targetT (5 : 5): [ 0.994 0.023 0.007 0.006 0.993 ]
n (5 : 5): [ 0.890 0.171 0.034 0.019 0.884 ]


incr (5 : 5): [ 0.011 -0.014 -0.003 -0.001 0.012 ]
*****************************************

116: somma1_vv_d
n (5 : 5): [ 0.890 0.171 0.034 0.019 0.884 ]
incr (5 : 5): [ 0.011 -0.014 -0.003 -0.001 0.012 ]


n (5 : 5): [ 0.901 0.156 0.032 0.018 0.895 ]
*****************************************

118: assegna1_mv_colonna_d
D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.890 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.171 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.034 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.019 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.884 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
colonna = 20
n (5 : 5): [ 0.901 0.156 0.032 0.018 0.895 ]


D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.890 0.901 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.171 0.156 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.034 0.032 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.019 0.018 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.884 0.895 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
*****************************************


*** target1 ***

*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (1835 interne); stringhe deallocate: 0 (1750 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.901 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.901


ris (2 : 2): [ -1.000 0.901 ]
*****************************************


Stringhe allocate: 2 (1850 interne); stringhe deallocate: 0 (1765 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (1865 interne); stringhe deallocate: 0 (1780 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (1880 interne); stringhe deallocate: 0 (1795 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (1895 interne); stringhe deallocate: 0 (1810 interne)


Stringhe allocate: 2 (1895 interne); stringhe deallocate: 0 (1815 interne)

105: f_aux5_d
parm1[j] (5 : 5): [ 9.966 10.144 10.104 9.914 9.961 ]
ris (5 : 5): [ 1.000 0.099 0.000 0.000 1.000 ]
parm1[j] (5 : 5): [ 0.489 0.481 0.495 0.515 0.505 ]


targetT (5 : 5): [ 0.994 0.020 0.007 0.006 0.993 ]
*****************************************

114: f_aux6_d
res = 0.100
parm1[j] (5 : 5): [ 1.055 0.972 0.929 1.080 1.060 ]
targetT (5 : 5): [ 0.994 0.020 0.007 0.006 0.993 ]
n (5 : 5): [ 0.901 0.156 0.032 0.018 0.895 ]


incr (5 : 5): [ 0.010 -0.013 -0.002 -0.001 0.010 ]
*****************************************

116: somma1_vv_d
n (5 : 5): [ 0.901 0.156 0.032 0.018 0.895 ]
incr (5 : 5): [ 0.010 -0.013 -0.002 -0.001 0.010 ]


n (5 : 5): [ 0.910 0.143 0.029 0.016 0.906 ]
*****************************************

118: assegna1_mv_colonna_d
D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.890 0.901 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.171 0.156 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.034 0.032 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.019 0.018 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.884 0.895 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
colonna = 21
n (5 : 5): [ 0.910 0.143 0.029 0.016 0.906 ]


D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.890 0.901 0.910 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.171 0.156 0.143 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.034 0.032 0.029 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.019 0.018 0.016 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.884 0.895 0.906 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
*****************************************


*** target1 ***

*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (1915 interne); stringhe deallocate: 0 (1830 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.910 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.910


ris (2 : 2): [ -1.000 0.910 ]
*****************************************


Stringhe allocate: 2 (1930 interne); stringhe deallocate: 0 (1845 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (1945 interne); stringhe deallocate: 0 (1860 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (1960 interne); stringhe deallocate: 0 (1875 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (1975 interne); stringhe deallocate: 0 (1890 interne)


Stringhe allocate: 2 (1975 interne); stringhe deallocate: 0 (1895 interne)

105: f_aux5_d
parm1[j] (5 : 5): [ 9.966 10.144 10.104 9.914 9.961 ]
ris (5 : 5): [ 1.000 0.090 0.000 0.000 1.000 ]
parm1[j] (5 : 5): [ 0.489 0.481 0.495 0.515 0.505 ]


targetT (5 : 5): [ 0.994 0.018 0.007 0.006 0.993 ]
*****************************************

114: f_aux6_d
res = 0.100
parm1[j] (5 : 5): [ 1.055 0.972 0.929 1.080 1.060 ]
targetT (5 : 5): [ 0.994 0.018 0.007 0.006 0.993 ]
n (5 : 5): [ 0.910 0.143 0.029 0.016 0.906 ]


incr (5 : 5): [ 0.009 -0.012 -0.002 -0.001 0.009 ]
*****************************************

116: somma1_vv_d
n (5 : 5): [ 0.910 0.143 0.029 0.016 0.906 ]
incr (5 : 5): [ 0.009 -0.012 -0.002 -0.001 0.009 ]


n (5 : 5): [ 0.919 0.131 0.027 0.015 0.915 ]
*****************************************

118: assegna1_mv_colonna_d
D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.890 0.901 0.910 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.171 0.156 0.143 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.034 0.032 0.029 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.019 0.018 0.016 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.884 0.895 0.906 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
colonna = 22
n (5 : 5): [ 0.919 0.131 0.027 0.015 0.915 ]


D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.890 0.901 0.910 0.919 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.171 0.156 0.143 0.131 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.034 0.032 0.029 0.027 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.019 0.018 0.016 0.015 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.884 0.895 0.906 0.915 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
*****************************************


*** target1 ***

*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (1995 interne); stringhe deallocate: 0 (1910 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.919 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.919


ris (2 : 2): [ -1.000 0.919 ]
*****************************************


Stringhe allocate: 2 (2010 interne); stringhe deallocate: 0 (1925 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (2025 interne); stringhe deallocate: 0 (1940 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (2040 interne); stringhe deallocate: 0 (1955 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (2055 interne); stringhe deallocate: 0 (1970 interne)


Stringhe allocate: 2 (2055 interne); stringhe deallocate: 0 (1975 interne)

105: f_aux5_d
parm1[j] (5 : 5): [ 9.966 10.144 10.104 9.914 9.961 ]
ris (5 : 5): [ 1.000 0.081 0.000 0.000 1.000 ]
parm1[j] (5 : 5): [ 0.489 0.481 0.495 0.515 0.505 ]


targetT (5 : 5): [ 0.994 0.017 0.007 0.006 0.993 ]
*****************************************

114: f_aux6_d
res = 0.100
parm1[j] (5 : 5): [ 1.055 0.972 0.929 1.080 1.060 ]
targetT (5 : 5): [ 0.994 0.017 0.007 0.006 0.993 ]
n (5 : 5): [ 0.919 0.131 0.027 0.015 0.915 ]


incr (5 : 5): [ 0.008 -0.011 -0.002 -0.001 0.008 ]
*****************************************

116: somma1_vv_d
n (5 : 5): [ 0.919 0.131 0.027 0.015 0.915 ]
incr (5 : 5): [ 0.008 -0.011 -0.002 -0.001 0.008 ]


n (5 : 5): [ 0.927 0.120 0.025 0.014 0.923 ]
*****************************************

118: assegna1_mv_colonna_d
D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.890 0.901 0.910 0.919 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.171 0.156 0.143 0.131 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.034 0.032 0.029 0.027 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.019 0.018 0.016 0.015 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.884 0.895 0.906 0.915 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
colonna = 23
n (5 : 5): [ 0.927 0.120 0.025 0.014 0.923 ]


D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.890 0.901 0.910 0.919 0.927 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.171 0.156 0.143 0.131 0.120 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.034 0.032 0.029 0.027 0.025 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.019 0.018 0.016 0.015 0.014 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.884 0.895 0.906 0.915 0.923 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
*****************************************


*** target1 ***

*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (2075 interne); stringhe deallocate: 0 (1990 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.927 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.927


ris (2 : 2): [ -1.000 0.927 ]
*****************************************


Stringhe allocate: 2 (2090 interne); stringhe deallocate: 0 (2005 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (2105 interne); stringhe deallocate: 0 (2020 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (2120 interne); stringhe deallocate: 0 (2035 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (2135 interne); stringhe deallocate: 0 (2050 interne)


Stringhe allocate: 2 (2135 interne); stringhe deallocate: 0 (2055 interne)

105: f_aux5_d
parm1[j] (5 : 5): [ 9.966 10.144 10.104 9.914 9.961 ]
ris (5 : 5): [ 1.000 0.073 0.000 0.000 1.000 ]
parm1[j] (5 : 5): [ 0.489 0.481 0.495 0.515 0.505 ]


targetT (5 : 5): [ 0.994 0.016 0.007 0.006 0.993 ]
*****************************************

114: f_aux6_d
res = 0.100
parm1[j] (5 : 5): [ 1.055 0.972 0.929 1.080 1.060 ]
targetT (5 : 5): [ 0.994 0.016 0.007 0.006 0.993 ]
n (5 : 5): [ 0.927 0.120 0.025 0.014 0.923 ]


incr (5 : 5): [ 0.007 -0.010 -0.002 -0.001 0.007 ]
*****************************************

116: somma1_vv_d
n (5 : 5): [ 0.927 0.120 0.025 0.014 0.923 ]
incr (5 : 5): [ 0.007 -0.010 -0.002 -0.001 0.007 ]


n (5 : 5): [ 0.934 0.110 0.024 0.013 0.930 ]
*****************************************

118: assegna1_mv_colonna_d
D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.890 0.901 0.910 0.919 0.927 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.171 0.156 0.143 0.131 0.120 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.034 0.032 0.029 0.027 0.025 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.019 0.018 0.016 0.015 0.014 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.884 0.895 0.906 0.915 0.923 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
colonna = 24
n (5 : 5): [ 0.934 0.110 0.024 0.013 0.930 ]


D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.890 0.901 0.910 0.919 0.927 0.934 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.171 0.156 0.143 0.131 0.120 0.110 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.034 0.032 0.029 0.027 0.025 0.024 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.019 0.018 0.016 0.015 0.014 0.013 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.884 0.895 0.906 0.915 0.923 0.930 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
*****************************************


*** target1 ***

*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (2155 interne); stringhe deallocate: 0 (2070 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.934 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.934


ris (2 : 2): [ -1.000 0.934 ]
*****************************************


Stringhe allocate: 2 (2170 interne); stringhe deallocate: 0 (2085 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (2185 interne); stringhe deallocate: 0 (2100 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (2200 interne); stringhe deallocate: 0 (2115 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (2215 interne); stringhe deallocate: 0 (2130 interne)


Stringhe allocate: 2 (2215 interne); stringhe deallocate: 0 (2135 interne)

105: f_aux5_d
parm1[j] (5 : 5): [ 9.966 10.144 10.104 9.914 9.961 ]
ris (5 : 5): [ 1.000 0.066 0.000 0.000 1.000 ]
parm1[j] (5 : 5): [ 0.489 0.481 0.495 0.515 0.505 ]


targetT (5 : 5): [ 0.994 0.015 0.007 0.006 0.993 ]
*****************************************

114: f_aux6_d
res = 0.100
parm1[j] (5 : 5): [ 1.055 0.972 0.929 1.080 1.060 ]
targetT (5 : 5): [ 0.994 0.015 0.007 0.006 0.993 ]
n (5 : 5): [ 0.934 0.110 0.024 0.013 0.930 ]


incr (5 : 5): [ 0.006 -0.009 -0.002 -0.001 0.007 ]
*****************************************

116: somma1_vv_d
n (5 : 5): [ 0.934 0.110 0.024 0.013 0.930 ]
incr (5 : 5): [ 0.006 -0.009 -0.002 -0.001 0.007 ]


n (5 : 5): [ 0.940 0.101 0.022 0.013 0.937 ]
*****************************************

118: assegna1_mv_colonna_d
D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.890 0.901 0.910 0.919 0.927 0.934 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.171 0.156 0.143 0.131 0.120 0.110 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.034 0.032 0.029 0.027 0.025 0.024 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.019 0.018 0.016 0.015 0.014 0.013 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.884 0.895 0.906 0.915 0.923 0.930 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
colonna = 25
n (5 : 5): [ 0.940 0.101 0.022 0.013 0.937 ]


D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.890 0.901 0.910 0.919 0.927 0.934 0.940 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.171 0.156 0.143 0.131 0.120 0.110 0.101 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.034 0.032 0.029 0.027 0.025 0.024 0.022 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.019 0.018 0.016 0.015 0.014 0.013 0.013 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.884 0.895 0.906 0.915 0.923 0.930 0.937 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
*****************************************


*** target1 ***

*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (2235 interne); stringhe deallocate: 0 (2150 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.940 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.940


ris (2 : 2): [ -1.000 0.940 ]
*****************************************


Stringhe allocate: 2 (2250 interne); stringhe deallocate: 0 (2165 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (2265 interne); stringhe deallocate: 0 (2180 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (2280 interne); stringhe deallocate: 0 (2195 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (2295 interne); stringhe deallocate: 0 (2210 interne)


Stringhe allocate: 2 (2295 interne); stringhe deallocate: 0 (2215 interne)

105: f_aux5_d
parm1[j] (5 : 5): [ 9.966 10.144 10.104 9.914 9.961 ]
ris (5 : 5): [ 1.000 0.060 0.000 0.000 1.000 ]
parm1[j] (5 : 5): [ 0.489 0.481 0.495 0.515 0.505 ]


targetT (5 : 5): [ 0.994 0.014 0.007 0.006 0.993 ]
*****************************************

114: f_aux6_d
res = 0.100
parm1[j] (5 : 5): [ 1.055 0.972 0.929 1.080 1.060 ]
targetT (5 : 5): [ 0.994 0.014 0.007 0.006 0.993 ]
n (5 : 5): [ 0.940 0.101 0.022 0.013 0.937 ]


incr (5 : 5): [ 0.006 -0.008 -0.001 -0.001 0.006 ]
*****************************************

116: somma1_vv_d
n (5 : 5): [ 0.940 0.101 0.022 0.013 0.937 ]
incr (5 : 5): [ 0.006 -0.008 -0.001 -0.001 0.006 ]


n (5 : 5): [ 0.946 0.092 0.021 0.012 0.943 ]
*****************************************

118: assegna1_mv_colonna_d
D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.890 0.901 0.910 0.919 0.927 0.934 0.940 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.171 0.156 0.143 0.131 0.120 0.110 0.101 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.034 0.032 0.029 0.027 0.025 0.024 0.022 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.019 0.018 0.016 0.015 0.014 0.013 0.013 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.884 0.895 0.906 0.915 0.923 0.930 0.937 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
colonna = 26
n (5 : 5): [ 0.946 0.092 0.021 0.012 0.943 ]


D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.890 0.901 0.910 0.919 0.927 0.934 0.940 0.946 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.171 0.156 0.143 0.131 0.120 0.110 0.101 0.092 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.034 0.032 0.029 0.027 0.025 0.024 0.022 0.021 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.019 0.018 0.016 0.015 0.014 0.013 0.013 0.012 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.884 0.895 0.906 0.915 0.923 0.930 0.937 0.943 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
*****************************************


*** target1 ***

*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (2315 interne); stringhe deallocate: 0 (2230 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.946 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.946


ris (2 : 2): [ -1.000 0.946 ]
*****************************************


Stringhe allocate: 2 (2330 interne); stringhe deallocate: 0 (2245 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (2345 interne); stringhe deallocate: 0 (2260 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (2360 interne); stringhe deallocate: 0 (2275 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (2375 interne); stringhe deallocate: 0 (2290 interne)


Stringhe allocate: 2 (2375 interne); stringhe deallocate: 0 (2295 interne)

105: f_aux5_d
parm1[j] (5 : 5): [ 9.966 10.144 10.104 9.914 9.961 ]
ris (5 : 5): [ 1.000 0.054 0.000 0.000 1.000 ]
parm1[j] (5 : 5): [ 0.489 0.481 0.495 0.515 0.505 ]


targetT (5 : 5): [ 0.994 0.013 0.007 0.006 0.993 ]
*****************************************

114: f_aux6_d
res = 0.100
parm1[j] (5 : 5): [ 1.055 0.972 0.929 1.080 1.060 ]
targetT (5 : 5): [ 0.994 0.013 0.007 0.006 0.993 ]
n (5 : 5): [ 0.946 0.092 0.021 0.012 0.943 ]


incr (5 : 5): [ 0.005 -0.008 -0.001 -0.001 0.005 ]
*****************************************

116: somma1_vv_d
n (5 : 5): [ 0.946 0.092 0.021 0.012 0.943 ]
incr (5 : 5): [ 0.005 -0.008 -0.001 -0.001 0.005 ]


n (5 : 5): [ 0.951 0.084 0.019 0.011 0.948 ]
*****************************************

118: assegna1_mv_colonna_d
D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.890 0.901 0.910 0.919 0.927 0.934 0.940 0.946 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.171 0.156 0.143 0.131 0.120 0.110 0.101 0.092 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.034 0.032 0.029 0.027 0.025 0.024 0.022 0.021 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.019 0.018 0.016 0.015 0.014 0.013 0.013 0.012 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.884 0.895 0.906 0.915 0.923 0.930 0.937 0.943 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
colonna = 27
n (5 : 5): [ 0.951 0.084 0.019 0.011 0.948 ]


D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.890 0.901 0.910 0.919 0.927 0.934 0.940 0.946 0.951 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.171 0.156 0.143 0.131 0.120 0.110 0.101 0.092 0.084 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.034 0.032 0.029 0.027 0.025 0.024 0.022 0.021 0.019 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.019 0.018 0.016 0.015 0.014 0.013 0.013 0.012 0.011 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.884 0.895 0.906 0.915 0.923 0.930 0.937 0.943 0.948 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
*****************************************


*** target1 ***

*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (2395 interne); stringhe deallocate: 0 (2310 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.951 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.951


ris (2 : 2): [ -1.000 0.951 ]
*****************************************


Stringhe allocate: 2 (2410 interne); stringhe deallocate: 0 (2325 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (2425 interne); stringhe deallocate: 0 (2340 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (2440 interne); stringhe deallocate: 0 (2355 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (2455 interne); stringhe deallocate: 0 (2370 interne)


Stringhe allocate: 2 (2455 interne); stringhe deallocate: 0 (2375 interne)

105: f_aux5_d
parm1[j] (5 : 5): [ 9.966 10.144 10.104 9.914 9.961 ]
ris (5 : 5): [ 1.000 0.049 0.000 0.000 1.000 ]
parm1[j] (5 : 5): [ 0.489 0.481 0.495 0.515 0.505 ]


targetT (5 : 5): [ 0.994 0.012 0.007 0.006 0.993 ]
*****************************************

114: f_aux6_d
res = 0.100
parm1[j] (5 : 5): [ 1.055 0.972 0.929 1.080 1.060 ]
targetT (5 : 5): [ 0.994 0.012 0.007 0.006 0.993 ]
n (5 : 5): [ 0.951 0.084 0.019 0.011 0.948 ]


incr (5 : 5): [ 0.005 -0.007 -0.001 -0.001 0.005 ]
*****************************************

116: somma1_vv_d
n (5 : 5): [ 0.951 0.084 0.019 0.011 0.948 ]
incr (5 : 5): [ 0.005 -0.007 -0.001 -0.001 0.005 ]


n (5 : 5): [ 0.956 0.077 0.018 0.011 0.953 ]
*****************************************

118: assegna1_mv_colonna_d
D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.890 0.901 0.910 0.919 0.927 0.934 0.940 0.946 0.951 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.171 0.156 0.143 0.131 0.120 0.110 0.101 0.092 0.084 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.034 0.032 0.029 0.027 0.025 0.024 0.022 0.021 0.019 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.019 0.018 0.016 0.015 0.014 0.013 0.013 0.012 0.011 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.884 0.895 0.906 0.915 0.923 0.930 0.937 0.943 0.948 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
colonna = 28
n (5 : 5): [ 0.956 0.077 0.018 0.011 0.953 ]


D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.890 0.901 0.910 0.919 0.927 0.934 0.940 0.946 0.951 0.956 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.171 0.156 0.143 0.131 0.120 0.110 0.101 0.092 0.084 0.077 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.034 0.032 0.029 0.027 0.025 0.024 0.022 0.021 0.019 0.018 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.019 0.018 0.016 0.015 0.014 0.013 0.013 0.012 0.011 0.011 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.884 0.895 0.906 0.915 0.923 0.930 0.937 0.943 0.948 0.953 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
*****************************************


*** target1 ***

*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (2475 interne); stringhe deallocate: 0 (2390 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.956 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.956


ris (2 : 2): [ -1.000 0.956 ]
*****************************************


Stringhe allocate: 2 (2490 interne); stringhe deallocate: 0 (2405 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (2505 interne); stringhe deallocate: 0 (2420 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (2520 interne); stringhe deallocate: 0 (2435 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (2535 interne); stringhe deallocate: 0 (2450 interne)


Stringhe allocate: 2 (2535 interne); stringhe deallocate: 0 (2455 interne)

105: f_aux5_d
parm1[j] (5 : 5): [ 9.966 10.144 10.104 9.914 9.961 ]
ris (5 : 5): [ 1.000 0.044 0.000 0.000 1.000 ]
parm1[j] (5 : 5): [ 0.489 0.481 0.495 0.515 0.505 ]


targetT (5 : 5): [ 0.994 0.012 0.007 0.006 0.993 ]
*****************************************

114: f_aux6_d
res = 0.100
parm1[j] (5 : 5): [ 1.055 0.972 0.929 1.080 1.060 ]
targetT (5 : 5): [ 0.994 0.012 0.007 0.006 0.993 ]
n (5 : 5): [ 0.956 0.077 0.018 0.011 0.953 ]


incr (5 : 5): [ 0.004 -0.006 -0.001 -0.000 0.004 ]
*****************************************

116: somma1_vv_d
n (5 : 5): [ 0.956 0.077 0.018 0.011 0.953 ]
incr (5 : 5): [ 0.004 -0.006 -0.001 -0.000 0.004 ]


n (5 : 5): [ 0.960 0.071 0.017 0.010 0.957 ]
*****************************************

118: assegna1_mv_colonna_d
D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.890 0.901 0.910 0.919 0.927 0.934 0.940 0.946 0.951 0.956 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.171 0.156 0.143 0.131 0.120 0.110 0.101 0.092 0.084 0.077 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.034 0.032 0.029 0.027 0.025 0.024 0.022 0.021 0.019 0.018 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.019 0.018 0.016 0.015 0.014 0.013 0.013 0.012 0.011 0.011 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.884 0.895 0.906 0.915 0.923 0.930 0.937 0.943 0.948 0.953 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
colonna = 29
n (5 : 5): [ 0.960 0.071 0.017 0.010 0.957 ]


D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.890 0.901 0.910 0.919 0.927 0.934 0.940 0.946 0.951 0.956 0.960 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.171 0.156 0.143 0.131 0.120 0.110 0.101 0.092 0.084 0.077 0.071 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.034 0.032 0.029 0.027 0.025 0.024 0.022 0.021 0.019 0.018 0.017 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.019 0.018 0.016 0.015 0.014 0.013 0.013 0.012 0.011 0.011 0.010 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.884 0.895 0.906 0.915 0.923 0.930 0.937 0.943 0.948 0.953 0.957 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
*****************************************


*** target1 ***

*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (2555 interne); stringhe deallocate: 0 (2470 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.960 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.960


ris (2 : 2): [ -1.000 0.960 ]
*****************************************


Stringhe allocate: 2 (2570 interne); stringhe deallocate: 0 (2485 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (2585 interne); stringhe deallocate: 0 (2500 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (2600 interne); stringhe deallocate: 0 (2515 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (2615 interne); stringhe deallocate: 0 (2530 interne)


Stringhe allocate: 2 (2615 interne); stringhe deallocate: 0 (2535 interne)

105: f_aux5_d
parm1[j] (5 : 5): [ 9.966 10.144 10.104 9.914 9.961 ]
ris (5 : 5): [ 1.000 0.040 0.000 0.000 1.000 ]
parm1[j] (5 : 5): [ 0.489 0.481 0.495 0.515 0.505 ]


targetT (5 : 5): [ 0.994 0.011 0.007 0.006 0.993 ]
*****************************************

114: f_aux6_d
res = 0.100
parm1[j] (5 : 5): [ 1.055 0.972 0.929 1.080 1.060 ]
targetT (5 : 5): [ 0.994 0.011 0.007 0.006 0.993 ]
n (5 : 5): [ 0.960 0.071 0.017 0.010 0.957 ]


incr (5 : 5): [ 0.004 -0.006 -0.001 -0.000 0.004 ]
*****************************************

116: somma1_vv_d
n (5 : 5): [ 0.960 0.071 0.017 0.010 0.957 ]
incr (5 : 5): [ 0.004 -0.006 -0.001 -0.000 0.004 ]


n (5 : 5): [ 0.963 0.065 0.016 0.010 0.961 ]
*****************************************

118: assegna1_mv_colonna_d
D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.890 0.901 0.910 0.919 0.927 0.934 0.940 0.946 0.951 0.956 0.960 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.171 0.156 0.143 0.131 0.120 0.110 0.101 0.092 0.084 0.077 0.071 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.034 0.032 0.029 0.027 0.025 0.024 0.022 0.021 0.019 0.018 0.017 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.019 0.018 0.016 0.015 0.014 0.013 0.013 0.012 0.011 0.011 0.010 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.884 0.895 0.906 0.915 0.923 0.930 0.937 0.943 0.948 0.953 0.957 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
colonna = 30
n (5 : 5): [ 0.963 0.065 0.016 0.010 0.961 ]


D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.890 0.901 0.910 0.919 0.927 0.934 0.940 0.946 0.951 0.956 0.960 0.963 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.171 0.156 0.143 0.131 0.120 0.110 0.101 0.092 0.084 0.077 0.071 0.065 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.034 0.032 0.029 0.027 0.025 0.024 0.022 0.021 0.019 0.018 0.017 0.016 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.019 0.018 0.016 0.015 0.014 0.013 0.013 0.012 0.011 0.011 0.010 0.010 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.884 0.895 0.906 0.915 0.923 0.930 0.937 0.943 0.948 0.953 0.957 0.961 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
*****************************************


*** target1 ***

*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (2635 interne); stringhe deallocate: 0 (2550 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.963 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.963


ris (2 : 2): [ -1.000 0.963 ]
*****************************************


Stringhe allocate: 2 (2650 interne); stringhe deallocate: 0 (2565 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (2665 interne); stringhe deallocate: 0 (2580 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (2680 interne); stringhe deallocate: 0 (2595 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (2695 interne); stringhe deallocate: 0 (2610 interne)


Stringhe allocate: 2 (2695 interne); stringhe deallocate: 0 (2615 interne)

105: f_aux5_d
parm1[j] (5 : 5): [ 9.966 10.144 10.104 9.914 9.961 ]
ris (5 : 5): [ 1.000 0.037 0.000 0.000 1.000 ]
parm1[j] (5 : 5): [ 0.489 0.481 0.495 0.515 0.505 ]


targetT (5 : 5): [ 0.994 0.011 0.007 0.006 0.993 ]
*****************************************

114: f_aux6_d
res = 0.100
parm1[j] (5 : 5): [ 1.055 0.972 0.929 1.080 1.060 ]
targetT (5 : 5): [ 0.994 0.011 0.007 0.006 0.993 ]
n (5 : 5): [ 0.963 0.065 0.016 0.010 0.961 ]


incr (5 : 5): [ 0.003 -0.005 -0.001 -0.000 0.003 ]
*****************************************

116: somma1_vv_d
n (5 : 5): [ 0.963 0.065 0.016 0.010 0.961 ]
incr (5 : 5): [ 0.003 -0.005 -0.001 -0.000 0.003 ]


n (5 : 5): [ 0.967 0.060 0.015 0.009 0.964 ]
*****************************************

118: assegna1_mv_colonna_d
D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.890 0.901 0.910 0.919 0.927 0.934 0.940 0.946 0.951 0.956 0.960 0.963 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.171 0.156 0.143 0.131 0.120 0.110 0.101 0.092 0.084 0.077 0.071 0.065 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.034 0.032 0.029 0.027 0.025 0.024 0.022 0.021 0.019 0.018 0.017 0.016 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.019 0.018 0.016 0.015 0.014 0.013 0.013 0.012 0.011 0.011 0.010 0.010 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.884 0.895 0.906 0.915 0.923 0.930 0.937 0.943 0.948 0.953 0.957 0.961 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
colonna = 31
n (5 : 5): [ 0.967 0.060 0.015 0.009 0.964 ]


D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.890 0.901 0.910 0.919 0.927 0.934 0.940 0.946 0.951 0.956 0.960 0.963 0.967 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.171 0.156 0.143 0.131 0.120 0.110 0.101 0.092 0.084 0.077 0.071 0.065 0.060 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.034 0.032 0.029 0.027 0.025 0.024 0.022 0.021 0.019 0.018 0.017 0.016 0.015 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.019 0.018 0.016 0.015 0.014 0.013 0.013 0.012 0.011 0.011 0.010 0.010 0.009 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.884 0.895 0.906 0.915 0.923 0.930 0.937 0.943 0.948 0.953 0.957 0.961 0.964 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
*****************************************


*** target1 ***

*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (2715 interne); stringhe deallocate: 0 (2630 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.967 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.967


ris (2 : 2): [ -1.000 0.967 ]
*****************************************


Stringhe allocate: 2 (2730 interne); stringhe deallocate: 0 (2645 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (2745 interne); stringhe deallocate: 0 (2660 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (2760 interne); stringhe deallocate: 0 (2675 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (2775 interne); stringhe deallocate: 0 (2690 interne)


Stringhe allocate: 2 (2775 interne); stringhe deallocate: 0 (2695 interne)

105: f_aux5_d
parm1[j] (5 : 5): [ 9.966 10.144 10.104 9.914 9.961 ]
ris (5 : 5): [ 1.000 0.033 0.000 0.000 1.000 ]
parm1[j] (5 : 5): [ 0.489 0.481 0.495 0.515 0.505 ]


targetT (5 : 5): [ 0.994 0.011 0.007 0.006 0.993 ]
*****************************************

114: f_aux6_d
res = 0.100
parm1[j] (5 : 5): [ 1.055 0.972 0.929 1.080 1.060 ]
targetT (5 : 5): [ 0.994 0.011 0.007 0.006 0.993 ]
n (5 : 5): [ 0.967 0.060 0.015 0.009 0.964 ]


incr (5 : 5): [ 0.003 -0.005 -0.001 -0.000 0.003 ]
*****************************************

116: somma1_vv_d
n (5 : 5): [ 0.967 0.060 0.015 0.009 0.964 ]
incr (5 : 5): [ 0.003 -0.005 -0.001 -0.000 0.003 ]


n (5 : 5): [ 0.969 0.055 0.014 0.009 0.967 ]
*****************************************

118: assegna1_mv_colonna_d
D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.890 0.901 0.910 0.919 0.927 0.934 0.940 0.946 0.951 0.956 0.960 0.963 0.967 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.171 0.156 0.143 0.131 0.120 0.110 0.101 0.092 0.084 0.077 0.071 0.065 0.060 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.034 0.032 0.029 0.027 0.025 0.024 0.022 0.021 0.019 0.018 0.017 0.016 0.015 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.019 0.018 0.016 0.015 0.014 0.013 0.013 0.012 0.011 0.011 0.010 0.010 0.009 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.884 0.895 0.906 0.915 0.923 0.930 0.937 0.943 0.948 0.953 0.957 0.961 0.964 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
colonna = 32
n (5 : 5): [ 0.969 0.055 0.014 0.009 0.967 ]


D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.890 0.901 0.910 0.919 0.927 0.934 0.940 0.946 0.951 0.956 0.960 0.963 0.967 0.969 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.171 0.156 0.143 0.131 0.120 0.110 0.101 0.092 0.084 0.077 0.071 0.065 0.060 0.055 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.034 0.032 0.029 0.027 0.025 0.024 0.022 0.021 0.019 0.018 0.017 0.016 0.015 0.014 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.019 0.018 0.016 0.015 0.014 0.013 0.013 0.012 0.011 0.011 0.010 0.010 0.009 0.009 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.884 0.895 0.906 0.915 0.923 0.930 0.937 0.943 0.948 0.953 0.957 0.961 0.964 0.967 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
*****************************************


*** target1 ***

*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (2795 interne); stringhe deallocate: 0 (2710 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.969 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.969


ris (2 : 2): [ -1.000 0.969 ]
*****************************************


Stringhe allocate: 2 (2810 interne); stringhe deallocate: 0 (2725 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (2825 interne); stringhe deallocate: 0 (2740 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (2840 interne); stringhe deallocate: 0 (2755 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (2855 interne); stringhe deallocate: 0 (2770 interne)


Stringhe allocate: 2 (2855 interne); stringhe deallocate: 0 (2775 interne)

105: f_aux5_d
parm1[j] (5 : 5): [ 9.966 10.144 10.104 9.914 9.961 ]
ris (5 : 5): [ 1.000 0.031 0.000 0.000 1.000 ]
parm1[j] (5 : 5): [ 0.489 0.481 0.495 0.515 0.505 ]


targetT (5 : 5): [ 0.994 0.010 0.007 0.006 0.993 ]
*****************************************

114: f_aux6_d
res = 0.100
parm1[j] (5 : 5): [ 1.055 0.972 0.929 1.080 1.060 ]
targetT (5 : 5): [ 0.994 0.010 0.007 0.006 0.993 ]
n (5 : 5): [ 0.969 0.055 0.014 0.009 0.967 ]


incr (5 : 5): [ 0.003 -0.004 -0.001 -0.000 0.003 ]
*****************************************

116: somma1_vv_d
n (5 : 5): [ 0.969 0.055 0.014 0.009 0.967 ]
incr (5 : 5): [ 0.003 -0.004 -0.001 -0.000 0.003 ]


n (5 : 5): [ 0.972 0.051 0.014 0.009 0.970 ]
*****************************************

118: assegna1_mv_colonna_d
D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.890 0.901 0.910 0.919 0.927 0.934 0.940 0.946 0.951 0.956 0.960 0.963 0.967 0.969 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.171 0.156 0.143 0.131 0.120 0.110 0.101 0.092 0.084 0.077 0.071 0.065 0.060 0.055 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.034 0.032 0.029 0.027 0.025 0.024 0.022 0.021 0.019 0.018 0.017 0.016 0.015 0.014 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.019 0.018 0.016 0.015 0.014 0.013 0.013 0.012 0.011 0.011 0.010 0.010 0.009 0.009 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.884 0.895 0.906 0.915 0.923 0.930 0.937 0.943 0.948 0.953 0.957 0.961 0.964 0.967 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
colonna = 33
n (5 : 5): [ 0.972 0.051 0.014 0.009 0.970 ]


D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.890 0.901 0.910 0.919 0.927 0.934 0.940 0.946 0.951 0.956 0.960 0.963 0.967 0.969 0.972 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.171 0.156 0.143 0.131 0.120 0.110 0.101 0.092 0.084 0.077 0.071 0.065 0.060 0.055 0.051 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.034 0.032 0.029 0.027 0.025 0.024 0.022 0.021 0.019 0.018 0.017 0.016 0.015 0.014 0.014 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.019 0.018 0.016 0.015 0.014 0.013 0.013 0.012 0.011 0.011 0.010 0.010 0.009 0.009 0.009 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.884 0.895 0.906 0.915 0.923 0.930 0.937 0.943 0.948 0.953 0.957 0.961 0.964 0.967 0.970 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
*****************************************


*** target1 ***

*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (2875 interne); stringhe deallocate: 0 (2790 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.972 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.972


ris (2 : 2): [ -1.000 0.972 ]
*****************************************


Stringhe allocate: 2 (2890 interne); stringhe deallocate: 0 (2805 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (2905 interne); stringhe deallocate: 0 (2820 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (2920 interne); stringhe deallocate: 0 (2835 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (2935 interne); stringhe deallocate: 0 (2850 interne)


Stringhe allocate: 2 (2935 interne); stringhe deallocate: 0 (2855 interne)

105: f_aux5_d
parm1[j] (5 : 5): [ 9.966 10.144 10.104 9.914 9.961 ]
ris (5 : 5): [ 1.000 0.028 0.000 0.000 1.000 ]
parm1[j] (5 : 5): [ 0.489 0.481 0.495 0.515 0.505 ]


targetT (5 : 5): [ 0.994 0.010 0.007 0.006 0.993 ]
*****************************************

114: f_aux6_d
res = 0.100
parm1[j] (5 : 5): [ 1.055 0.972 0.929 1.080 1.060 ]
targetT (5 : 5): [ 0.994 0.010 0.007 0.006 0.993 ]
n (5 : 5): [ 0.972 0.051 0.014 0.009 0.970 ]


incr (5 : 5): [ 0.002 -0.004 -0.001 -0.000 0.002 ]
*****************************************

116: somma1_vv_d
n (5 : 5): [ 0.972 0.051 0.014 0.009 0.970 ]
incr (5 : 5): [ 0.002 -0.004 -0.001 -0.000 0.002 ]


n (5 : 5): [ 0.974 0.047 0.013 0.008 0.973 ]
*****************************************

118: assegna1_mv_colonna_d
D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.890 0.901 0.910 0.919 0.927 0.934 0.940 0.946 0.951 0.956 0.960 0.963 0.967 0.969 0.972 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.171 0.156 0.143 0.131 0.120 0.110 0.101 0.092 0.084 0.077 0.071 0.065 0.060 0.055 0.051 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.034 0.032 0.029 0.027 0.025 0.024 0.022 0.021 0.019 0.018 0.017 0.016 0.015 0.014 0.014 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.019 0.018 0.016 0.015 0.014 0.013 0.013 0.012 0.011 0.011 0.010 0.010 0.009 0.009 0.009 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.884 0.895 0.906 0.915 0.923 0.930 0.937 0.943 0.948 0.953 0.957 0.961 0.964 0.967 0.970 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
colonna = 34
n (5 : 5): [ 0.974 0.047 0.013 0.008 0.973 ]


D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.890 0.901 0.910 0.919 0.927 0.934 0.940 0.946 0.951 0.956 0.960 0.963 0.967 0.969 0.972 0.974 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.171 0.156 0.143 0.131 0.120 0.110 0.101 0.092 0.084 0.077 0.071 0.065 0.060 0.055 0.051 0.047 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.034 0.032 0.029 0.027 0.025 0.024 0.022 0.021 0.019 0.018 0.017 0.016 0.015 0.014 0.014 0.013 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.019 0.018 0.016 0.015 0.014 0.013 0.013 0.012 0.011 0.011 0.010 0.010 0.009 0.009 0.009 0.008 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.884 0.895 0.906 0.915 0.923 0.930 0.937 0.943 0.948 0.953 0.957 0.961 0.964 0.967 0.970 0.973 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
*****************************************


*** target1 ***

*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (2955 interne); stringhe deallocate: 0 (2870 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.974 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.974


ris (2 : 2): [ -1.000 0.974 ]
*****************************************


Stringhe allocate: 2 (2970 interne); stringhe deallocate: 0 (2885 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (2985 interne); stringhe deallocate: 0 (2900 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (3000 interne); stringhe deallocate: 0 (2915 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (3015 interne); stringhe deallocate: 0 (2930 interne)


Stringhe allocate: 2 (3015 interne); stringhe deallocate: 0 (2935 interne)

105: f_aux5_d
parm1[j] (5 : 5): [ 9.966 10.144 10.104 9.914 9.961 ]
ris (5 : 5): [ 1.000 0.026 0.000 0.000 1.000 ]
parm1[j] (5 : 5): [ 0.489 0.481 0.495 0.515 0.505 ]


targetT (5 : 5): [ 0.994 0.010 0.007 0.006 0.993 ]
*****************************************

114: f_aux6_d
res = 0.100
parm1[j] (5 : 5): [ 1.055 0.972 0.929 1.080 1.060 ]
targetT (5 : 5): [ 0.994 0.010 0.007 0.006 0.993 ]
n (5 : 5): [ 0.974 0.047 0.013 0.008 0.973 ]


incr (5 : 5): [ 0.002 -0.004 -0.001 -0.000 0.002 ]
*****************************************

116: somma1_vv_d
n (5 : 5): [ 0.974 0.047 0.013 0.008 0.973 ]
incr (5 : 5): [ 0.002 -0.004 -0.001 -0.000 0.002 ]


n (5 : 5): [ 0.976 0.043 0.012 0.008 0.975 ]
*****************************************

118: assegna1_mv_colonna_d
D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.890 0.901 0.910 0.919 0.927 0.934 0.940 0.946 0.951 0.956 0.960 0.963 0.967 0.969 0.972 0.974 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.171 0.156 0.143 0.131 0.120 0.110 0.101 0.092 0.084 0.077 0.071 0.065 0.060 0.055 0.051 0.047 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.034 0.032 0.029 0.027 0.025 0.024 0.022 0.021 0.019 0.018 0.017 0.016 0.015 0.014 0.014 0.013 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.019 0.018 0.016 0.015 0.014 0.013 0.013 0.012 0.011 0.011 0.010 0.010 0.009 0.009 0.009 0.008 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.884 0.895 0.906 0.915 0.923 0.930 0.937 0.943 0.948 0.953 0.957 0.961 0.964 0.967 0.970 0.973 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
colonna = 35
n (5 : 5): [ 0.976 0.043 0.012 0.008 0.975 ]


D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.890 0.901 0.910 0.919 0.927 0.934 0.940 0.946 0.951 0.956 0.960 0.963 0.967 0.969 0.972 0.974 0.976 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.171 0.156 0.143 0.131 0.120 0.110 0.101 0.092 0.084 0.077 0.071 0.065 0.060 0.055 0.051 0.047 0.043 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.034 0.032 0.029 0.027 0.025 0.024 0.022 0.021 0.019 0.018 0.017 0.016 0.015 0.014 0.014 0.013 0.012 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.019 0.018 0.016 0.015 0.014 0.013 0.013 0.012 0.011 0.011 0.010 0.010 0.009 0.009 0.009 0.008 0.008 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.884 0.895 0.906 0.915 0.923 0.930 0.937 0.943 0.948 0.953 0.957 0.961 0.964 0.967 0.970 0.973 0.975 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
*****************************************


*** target1 ***

*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (3035 interne); stringhe deallocate: 0 (2950 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.976 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.976


ris (2 : 2): [ -1.000 0.976 ]
*****************************************


Stringhe allocate: 2 (3050 interne); stringhe deallocate: 0 (2965 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (3065 interne); stringhe deallocate: 0 (2980 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (3080 interne); stringhe deallocate: 0 (2995 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (3095 interne); stringhe deallocate: 0 (3010 interne)


Stringhe allocate: 2 (3095 interne); stringhe deallocate: 0 (3015 interne)

105: f_aux5_d
parm1[j] (5 : 5): [ 9.966 10.144 10.104 9.914 9.961 ]
ris (5 : 5): [ 1.000 0.024 0.000 0.000 1.000 ]
parm1[j] (5 : 5): [ 0.489 0.481 0.495 0.515 0.505 ]


targetT (5 : 5): [ 0.994 0.010 0.007 0.006 0.993 ]
*****************************************

114: f_aux6_d
res = 0.100
parm1[j] (5 : 5): [ 1.055 0.972 0.929 1.080 1.060 ]
targetT (5 : 5): [ 0.994 0.010 0.007 0.006 0.993 ]
n (5 : 5): [ 0.976 0.043 0.012 0.008 0.975 ]


incr (5 : 5): [ 0.002 -0.003 -0.001 -0.000 0.002 ]
*****************************************

116: somma1_vv_d
n (5 : 5): [ 0.976 0.043 0.012 0.008 0.975 ]
incr (5 : 5): [ 0.002 -0.003 -0.001 -0.000 0.002 ]


n (5 : 5): [ 0.978 0.040 0.012 0.008 0.977 ]
*****************************************

118: assegna1_mv_colonna_d
D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.890 0.901 0.910 0.919 0.927 0.934 0.940 0.946 0.951 0.956 0.960 0.963 0.967 0.969 0.972 0.974 0.976 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.171 0.156 0.143 0.131 0.120 0.110 0.101 0.092 0.084 0.077 0.071 0.065 0.060 0.055 0.051 0.047 0.043 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.034 0.032 0.029 0.027 0.025 0.024 0.022 0.021 0.019 0.018 0.017 0.016 0.015 0.014 0.014 0.013 0.012 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.019 0.018 0.016 0.015 0.014 0.013 0.013 0.012 0.011 0.011 0.010 0.010 0.009 0.009 0.009 0.008 0.008 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.884 0.895 0.906 0.915 0.923 0.930 0.937 0.943 0.948 0.953 0.957 0.961 0.964 0.967 0.970 0.973 0.975 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
colonna = 36
n (5 : 5): [ 0.978 0.040 0.012 0.008 0.977 ]


D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.890 0.901 0.910 0.919 0.927 0.934 0.940 0.946 0.951 0.956 0.960 0.963 0.967 0.969 0.972 0.974 0.976 0.978 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.171 0.156 0.143 0.131 0.120 0.110 0.101 0.092 0.084 0.077 0.071 0.065 0.060 0.055 0.051 0.047 0.043 0.040 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.034 0.032 0.029 0.027 0.025 0.024 0.022 0.021 0.019 0.018 0.017 0.016 0.015 0.014 0.014 0.013 0.012 0.012 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.019 0.018 0.016 0.015 0.014 0.013 0.013 0.012 0.011 0.011 0.010 0.010 0.009 0.009 0.009 0.008 0.008 0.008 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.884 0.895 0.906 0.915 0.923 0.930 0.937 0.943 0.948 0.953 0.957 0.961 0.964 0.967 0.970 0.973 0.975 0.977 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
*****************************************


*** target1 ***

*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (3115 interne); stringhe deallocate: 0 (3030 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.978 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.978


ris (2 : 2): [ -1.000 0.978 ]
*****************************************


Stringhe allocate: 2 (3130 interne); stringhe deallocate: 0 (3045 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (3145 interne); stringhe deallocate: 0 (3060 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (3160 interne); stringhe deallocate: 0 (3075 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (3175 interne); stringhe deallocate: 0 (3090 interne)


Stringhe allocate: 2 (3175 interne); stringhe deallocate: 0 (3095 interne)

105: f_aux5_d
parm1[j] (5 : 5): [ 9.966 10.144 10.104 9.914 9.961 ]
ris (5 : 5): [ 1.000 0.022 0.000 0.000 1.000 ]
parm1[j] (5 : 5): [ 0.489 0.481 0.495 0.515 0.505 ]


targetT (5 : 5): [ 0.994 0.009 0.007 0.006 0.993 ]
*****************************************

114: f_aux6_d
res = 0.100
parm1[j] (5 : 5): [ 1.055 0.972 0.929 1.080 1.060 ]
targetT (5 : 5): [ 0.994 0.009 0.007 0.006 0.993 ]
n (5 : 5): [ 0.978 0.040 0.012 0.008 0.977 ]


incr (5 : 5): [ 0.002 -0.003 -0.000 -0.000 0.002 ]
*****************************************

116: somma1_vv_d
n (5 : 5): [ 0.978 0.040 0.012 0.008 0.977 ]
incr (5 : 5): [ 0.002 -0.003 -0.000 -0.000 0.002 ]


n (5 : 5): [ 0.980 0.037 0.011 0.008 0.978 ]
*****************************************

118: assegna1_mv_colonna_d
D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.890 0.901 0.910 0.919 0.927 0.934 0.940 0.946 0.951 0.956 0.960 0.963 0.967 0.969 0.972 0.974 0.976 0.978 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.171 0.156 0.143 0.131 0.120 0.110 0.101 0.092 0.084 0.077 0.071 0.065 0.060 0.055 0.051 0.047 0.043 0.040 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.034 0.032 0.029 0.027 0.025 0.024 0.022 0.021 0.019 0.018 0.017 0.016 0.015 0.014 0.014 0.013 0.012 0.012 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.019 0.018 0.016 0.015 0.014 0.013 0.013 0.012 0.011 0.011 0.010 0.010 0.009 0.009 0.009 0.008 0.008 0.008 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.884 0.895 0.906 0.915 0.923 0.930 0.937 0.943 0.948 0.953 0.957 0.961 0.964 0.967 0.970 0.973 0.975 0.977 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
colonna = 37
n (5 : 5): [ 0.980 0.037 0.011 0.008 0.978 ]


D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.890 0.901 0.910 0.919 0.927 0.934 0.940 0.946 0.951 0.956 0.960 0.963 0.967 0.969 0.972 0.974 0.976 0.978 0.980 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.171 0.156 0.143 0.131 0.120 0.110 0.101 0.092 0.084 0.077 0.071 0.065 0.060 0.055 0.051 0.047 0.043 0.040 0.037 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.034 0.032 0.029 0.027 0.025 0.024 0.022 0.021 0.019 0.018 0.017 0.016 0.015 0.014 0.014 0.013 0.012 0.012 0.011 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.019 0.018 0.016 0.015 0.014 0.013 0.013 0.012 0.011 0.011 0.010 0.010 0.009 0.009 0.009 0.008 0.008 0.008 0.008 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.884 0.895 0.906 0.915 0.923 0.930 0.937 0.943 0.948 0.953 0.957 0.961 0.964 0.967 0.970 0.973 0.975 0.977 0.978 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
*****************************************


*** target1 ***

*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (3195 interne); stringhe deallocate: 0 (3110 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.980 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.980


ris (2 : 2): [ -1.000 0.980 ]
*****************************************


Stringhe allocate: 2 (3210 interne); stringhe deallocate: 0 (3125 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (3225 interne); stringhe deallocate: 0 (3140 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (3240 interne); stringhe deallocate: 0 (3155 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (3255 interne); stringhe deallocate: 0 (3170 interne)


Stringhe allocate: 2 (3255 interne); stringhe deallocate: 0 (3175 interne)

105: f_aux5_d
parm1[j] (5 : 5): [ 9.966 10.144 10.104 9.914 9.961 ]
ris (5 : 5): [ 1.000 0.020 0.000 0.000 1.000 ]
parm1[j] (5 : 5): [ 0.489 0.481 0.495 0.515 0.505 ]


targetT (5 : 5): [ 0.994 0.009 0.007 0.006 0.993 ]
*****************************************

114: f_aux6_d
res = 0.100
parm1[j] (5 : 5): [ 1.055 0.972 0.929 1.080 1.060 ]
targetT (5 : 5): [ 0.994 0.009 0.007 0.006 0.993 ]
n (5 : 5): [ 0.980 0.037 0.011 0.008 0.978 ]


incr (5 : 5): [ 0.001 -0.003 -0.000 -0.000 0.002 ]
*****************************************

116: somma1_vv_d
n (5 : 5): [ 0.980 0.037 0.011 0.008 0.978 ]
incr (5 : 5): [ 0.001 -0.003 -0.000 -0.000 0.002 ]


n (5 : 5): [ 0.981 0.034 0.011 0.008 0.980 ]
*****************************************

118: assegna1_mv_colonna_d
D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.890 0.901 0.910 0.919 0.927 0.934 0.940 0.946 0.951 0.956 0.960 0.963 0.967 0.969 0.972 0.974 0.976 0.978 0.980 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.171 0.156 0.143 0.131 0.120 0.110 0.101 0.092 0.084 0.077 0.071 0.065 0.060 0.055 0.051 0.047 0.043 0.040 0.037 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.034 0.032 0.029 0.027 0.025 0.024 0.022 0.021 0.019 0.018 0.017 0.016 0.015 0.014 0.014 0.013 0.012 0.012 0.011 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.019 0.018 0.016 0.015 0.014 0.013 0.013 0.012 0.011 0.011 0.010 0.010 0.009 0.009 0.009 0.008 0.008 0.008 0.008 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.884 0.895 0.906 0.915 0.923 0.930 0.937 0.943 0.948 0.953 0.957 0.961 0.964 0.967 0.970 0.973 0.975 0.977 0.978 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
colonna = 38
n (5 : 5): [ 0.981 0.034 0.011 0.008 0.980 ]


D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.890 0.901 0.910 0.919 0.927 0.934 0.940 0.946 0.951 0.956 0.960 0.963 0.967 0.969 0.972 0.974 0.976 0.978 0.980 0.981 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.171 0.156 0.143 0.131 0.120 0.110 0.101 0.092 0.084 0.077 0.071 0.065 0.060 0.055 0.051 0.047 0.043 0.040 0.037 0.034 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.034 0.032 0.029 0.027 0.025 0.024 0.022 0.021 0.019 0.018 0.017 0.016 0.015 0.014 0.014 0.013 0.012 0.012 0.011 0.011 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.019 0.018 0.016 0.015 0.014 0.013 0.013 0.012 0.011 0.011 0.010 0.010 0.009 0.009 0.009 0.008 0.008 0.008 0.008 0.008 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.884 0.895 0.906 0.915 0.923 0.930 0.937 0.943 0.948 0.953 0.957 0.961 0.964 0.967 0.970 0.973 0.975 0.977 0.978 0.980 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
*****************************************


*** target1 ***

*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (3275 interne); stringhe deallocate: 0 (3190 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.981 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.981


ris (2 : 2): [ -1.000 0.981 ]
*****************************************


Stringhe allocate: 2 (3290 interne); stringhe deallocate: 0 (3205 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (3305 interne); stringhe deallocate: 0 (3220 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (3320 interne); stringhe deallocate: 0 (3235 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (3335 interne); stringhe deallocate: 0 (3250 interne)


Stringhe allocate: 2 (3335 interne); stringhe deallocate: 0 (3255 interne)

105: f_aux5_d
parm1[j] (5 : 5): [ 9.966 10.144 10.104 9.914 9.961 ]
ris (5 : 5): [ 1.000 0.019 0.000 0.000 1.000 ]
parm1[j] (5 : 5): [ 0.489 0.481 0.495 0.515 0.505 ]


targetT (5 : 5): [ 0.994 0.009 0.007 0.006 0.993 ]
*****************************************

114: f_aux6_d
res = 0.100
parm1[j] (5 : 5): [ 1.055 0.972 0.929 1.080 1.060 ]
targetT (5 : 5): [ 0.994 0.009 0.007 0.006 0.993 ]
n (5 : 5): [ 0.981 0.034 0.011 0.008 0.980 ]


incr (5 : 5): [ 0.001 -0.002 -0.000 -0.000 0.001 ]
*****************************************

116: somma1_vv_d
n (5 : 5): [ 0.981 0.034 0.011 0.008 0.980 ]
incr (5 : 5): [ 0.001 -0.002 -0.000 -0.000 0.001 ]


n (5 : 5): [ 0.983 0.032 0.011 0.007 0.981 ]
*****************************************

118: assegna1_mv_colonna_d
D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.890 0.901 0.910 0.919 0.927 0.934 0.940 0.946 0.951 0.956 0.960 0.963 0.967 0.969 0.972 0.974 0.976 0.978 0.980 0.981 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.171 0.156 0.143 0.131 0.120 0.110 0.101 0.092 0.084 0.077 0.071 0.065 0.060 0.055 0.051 0.047 0.043 0.040 0.037 0.034 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.034 0.032 0.029 0.027 0.025 0.024 0.022 0.021 0.019 0.018 0.017 0.016 0.015 0.014 0.014 0.013 0.012 0.012 0.011 0.011 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.019 0.018 0.016 0.015 0.014 0.013 0.013 0.012 0.011 0.011 0.010 0.010 0.009 0.009 0.009 0.008 0.008 0.008 0.008 0.008 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.884 0.895 0.906 0.915 0.923 0.930 0.937 0.943 0.948 0.953 0.957 0.961 0.964 0.967 0.970 0.973 0.975 0.977 0.978 0.980 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
colonna = 39
n (5 : 5): [ 0.983 0.032 0.011 0.007 0.981 ]


D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.890 0.901 0.910 0.919 0.927 0.934 0.940 0.946 0.951 0.956 0.960 0.963 0.967 0.969 0.972 0.974 0.976 0.978 0.980 0.981 0.983 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.171 0.156 0.143 0.131 0.120 0.110 0.101 0.092 0.084 0.077 0.071 0.065 0.060 0.055 0.051 0.047 0.043 0.040 0.037 0.034 0.032 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.034 0.032 0.029 0.027 0.025 0.024 0.022 0.021 0.019 0.018 0.017 0.016 0.015 0.014 0.014 0.013 0.012 0.012 0.011 0.011 0.011 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.019 0.018 0.016 0.015 0.014 0.013 0.013 0.012 0.011 0.011 0.010 0.010 0.009 0.009 0.009 0.008 0.008 0.008 0.008 0.008 0.007 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.884 0.895 0.906 0.915 0.923 0.930 0.937 0.943 0.948 0.953 0.957 0.961 0.964 0.967 0.970 0.973 0.975 0.977 0.978 0.980 0.981 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
*****************************************


*** target1 ***

*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (3355 interne); stringhe deallocate: 0 (3270 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.983 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.983


ris (2 : 2): [ -1.000 0.983 ]
*****************************************


Stringhe allocate: 2 (3370 interne); stringhe deallocate: 0 (3285 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (3385 interne); stringhe deallocate: 0 (3300 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (3400 interne); stringhe deallocate: 0 (3315 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (3415 interne); stringhe deallocate: 0 (3330 interne)


Stringhe allocate: 2 (3415 interne); stringhe deallocate: 0 (3335 interne)

105: f_aux5_d
parm1[j] (5 : 5): [ 9.966 10.144 10.104 9.914 9.961 ]
ris (5 : 5): [ 1.000 0.017 0.000 0.000 1.000 ]
parm1[j] (5 : 5): [ 0.489 0.481 0.495 0.515 0.505 ]


targetT (5 : 5): [ 0.994 0.009 0.007 0.006 0.993 ]
*****************************************

114: f_aux6_d
res = 0.100
parm1[j] (5 : 5): [ 1.055 0.972 0.929 1.080 1.060 ]
targetT (5 : 5): [ 0.994 0.009 0.007 0.006 0.993 ]
n (5 : 5): [ 0.983 0.032 0.011 0.007 0.981 ]


incr (5 : 5): [ 0.001 -0.002 -0.000 -0.000 0.001 ]
*****************************************

116: somma1_vv_d
n (5 : 5): [ 0.983 0.032 0.011 0.007 0.981 ]
incr (5 : 5): [ 0.001 -0.002 -0.000 -0.000 0.001 ]


n (5 : 5): [ 0.984 0.030 0.010 0.007 0.982 ]
*****************************************

118: assegna1_mv_colonna_d
D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.890 0.901 0.910 0.919 0.927 0.934 0.940 0.946 0.951 0.956 0.960 0.963 0.967 0.969 0.972 0.974 0.976 0.978 0.980 0.981 0.983 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.171 0.156 0.143 0.131 0.120 0.110 0.101 0.092 0.084 0.077 0.071 0.065 0.060 0.055 0.051 0.047 0.043 0.040 0.037 0.034 0.032 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.034 0.032 0.029 0.027 0.025 0.024 0.022 0.021 0.019 0.018 0.017 0.016 0.015 0.014 0.014 0.013 0.012 0.012 0.011 0.011 0.011 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.019 0.018 0.016 0.015 0.014 0.013 0.013 0.012 0.011 0.011 0.010 0.010 0.009 0.009 0.009 0.008 0.008 0.008 0.008 0.008 0.007 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.884 0.895 0.906 0.915 0.923 0.930 0.937 0.943 0.948 0.953 0.957 0.961 0.964 0.967 0.970 0.973 0.975 0.977 0.978 0.980 0.981 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
colonna = 40
n (5 : 5): [ 0.984 0.030 0.010 0.007 0.982 ]


D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.890 0.901 0.910 0.919 0.927 0.934 0.940 0.946 0.951 0.956 0.960 0.963 0.967 0.969 0.972 0.974 0.976 0.978 0.980 0.981 0.983 0.984 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.171 0.156 0.143 0.131 0.120 0.110 0.101 0.092 0.084 0.077 0.071 0.065 0.060 0.055 0.051 0.047 0.043 0.040 0.037 0.034 0.032 0.030 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.034 0.032 0.029 0.027 0.025 0.024 0.022 0.021 0.019 0.018 0.017 0.016 0.015 0.014 0.014 0.013 0.012 0.012 0.011 0.011 0.011 0.010 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.019 0.018 0.016 0.015 0.014 0.013 0.013 0.012 0.011 0.011 0.010 0.010 0.009 0.009 0.009 0.008 0.008 0.008 0.008 0.008 0.007 0.007 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.884 0.895 0.906 0.915 0.923 0.930 0.937 0.943 0.948 0.953 0.957 0.961 0.964 0.967 0.970 0.973 0.975 0.977 0.978 0.980 0.981 0.982 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
*****************************************


*** target1 ***

*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (3435 interne); stringhe deallocate: 0 (3350 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.984 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.984


ris (2 : 2): [ -1.000 0.984 ]
*****************************************


Stringhe allocate: 2 (3450 interne); stringhe deallocate: 0 (3365 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (3465 interne); stringhe deallocate: 0 (3380 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (3480 interne); stringhe deallocate: 0 (3395 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (3495 interne); stringhe deallocate: 0 (3410 interne)


Stringhe allocate: 2 (3495 interne); stringhe deallocate: 0 (3415 interne)

105: f_aux5_d
parm1[j] (5 : 5): [ 9.966 10.144 10.104 9.914 9.961 ]
ris (5 : 5): [ 1.000 0.016 0.000 0.000 1.000 ]
parm1[j] (5 : 5): [ 0.489 0.481 0.495 0.515 0.505 ]


targetT (5 : 5): [ 0.994 0.009 0.007 0.006 0.993 ]
*****************************************

114: f_aux6_d
res = 0.100
parm1[j] (5 : 5): [ 1.055 0.972 0.929 1.080 1.060 ]
targetT (5 : 5): [ 0.994 0.009 0.007 0.006 0.993 ]
n (5 : 5): [ 0.984 0.030 0.010 0.007 0.982 ]


incr (5 : 5): [ 0.001 -0.002 -0.000 -0.000 0.001 ]
*****************************************

116: somma1_vv_d
n (5 : 5): [ 0.984 0.030 0.010 0.007 0.982 ]
incr (5 : 5): [ 0.001 -0.002 -0.000 -0.000 0.001 ]


n (5 : 5): [ 0.985 0.028 0.010 0.007 0.984 ]
*****************************************

118: assegna1_mv_colonna_d
D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.890 0.901 0.910 0.919 0.927 0.934 0.940 0.946 0.951 0.956 0.960 0.963 0.967 0.969 0.972 0.974 0.976 0.978 0.980 0.981 0.983 0.984 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.171 0.156 0.143 0.131 0.120 0.110 0.101 0.092 0.084 0.077 0.071 0.065 0.060 0.055 0.051 0.047 0.043 0.040 0.037 0.034 0.032 0.030 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.034 0.032 0.029 0.027 0.025 0.024 0.022 0.021 0.019 0.018 0.017 0.016 0.015 0.014 0.014 0.013 0.012 0.012 0.011 0.011 0.011 0.010 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.019 0.018 0.016 0.015 0.014 0.013 0.013 0.012 0.011 0.011 0.010 0.010 0.009 0.009 0.009 0.008 0.008 0.008 0.008 0.008 0.007 0.007 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.884 0.895 0.906 0.915 0.923 0.930 0.937 0.943 0.948 0.953 0.957 0.961 0.964 0.967 0.970 0.973 0.975 0.977 0.978 0.980 0.981 0.982 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
colonna = 41
n (5 : 5): [ 0.985 0.028 0.010 0.007 0.984 ]


D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.890 0.901 0.910 0.919 0.927 0.934 0.940 0.946 0.951 0.956 0.960 0.963 0.967 0.969 0.972 0.974 0.976 0.978 0.980 0.981 0.983 0.984 0.985 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.171 0.156 0.143 0.131 0.120 0.110 0.101 0.092 0.084 0.077 0.071 0.065 0.060 0.055 0.051 0.047 0.043 0.040 0.037 0.034 0.032 0.030 0.028 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.034 0.032 0.029 0.027 0.025 0.024 0.022 0.021 0.019 0.018 0.017 0.016 0.015 0.014 0.014 0.013 0.012 0.012 0.011 0.011 0.011 0.010 0.010 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.019 0.018 0.016 0.015 0.014 0.013 0.013 0.012 0.011 0.011 0.010 0.010 0.009 0.009 0.009 0.008 0.008 0.008 0.008 0.008 0.007 0.007 0.007 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.884 0.895 0.906 0.915 0.923 0.930 0.937 0.943 0.948 0.953 0.957 0.961 0.964 0.967 0.970 0.973 0.975 0.977 0.978 0.980 0.981 0.982 0.984 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
*****************************************


*** target1 ***

*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (3515 interne); stringhe deallocate: 0 (3430 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.985 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.985


ris (2 : 2): [ -1.000 0.985 ]
*****************************************


Stringhe allocate: 2 (3530 interne); stringhe deallocate: 0 (3445 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (3545 interne); stringhe deallocate: 0 (3460 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (3560 interne); stringhe deallocate: 0 (3475 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (3575 interne); stringhe deallocate: 0 (3490 interne)


Stringhe allocate: 2 (3575 interne); stringhe deallocate: 0 (3495 interne)

105: f_aux5_d
parm1[j] (5 : 5): [ 9.966 10.144 10.104 9.914 9.961 ]
ris (5 : 5): [ 1.000 0.015 0.000 0.000 1.000 ]
parm1[j] (5 : 5): [ 0.489 0.481 0.495 0.515 0.505 ]


targetT (5 : 5): [ 0.994 0.009 0.007 0.006 0.993 ]
*****************************************

114: f_aux6_d
res = 0.100
parm1[j] (5 : 5): [ 1.055 0.972 0.929 1.080 1.060 ]
targetT (5 : 5): [ 0.994 0.009 0.007 0.006 0.993 ]
n (5 : 5): [ 0.985 0.028 0.010 0.007 0.984 ]


incr (5 : 5): [ 0.001 -0.002 -0.000 -0.000 0.001 ]
*****************************************

116: somma1_vv_d
n (5 : 5): [ 0.985 0.028 0.010 0.007 0.984 ]
incr (5 : 5): [ 0.001 -0.002 -0.000 -0.000 0.001 ]


n (5 : 5): [ 0.986 0.026 0.010 0.007 0.985 ]
*****************************************

118: assegna1_mv_colonna_d
D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.890 0.901 0.910 0.919 0.927 0.934 0.940 0.946 0.951 0.956 0.960 0.963 0.967 0.969 0.972 0.974 0.976 0.978 0.980 0.981 0.983 0.984 0.985 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.171 0.156 0.143 0.131 0.120 0.110 0.101 0.092 0.084 0.077 0.071 0.065 0.060 0.055 0.051 0.047 0.043 0.040 0.037 0.034 0.032 0.030 0.028 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.034 0.032 0.029 0.027 0.025 0.024 0.022 0.021 0.019 0.018 0.017 0.016 0.015 0.014 0.014 0.013 0.012 0.012 0.011 0.011 0.011 0.010 0.010 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.019 0.018 0.016 0.015 0.014 0.013 0.013 0.012 0.011 0.011 0.010 0.010 0.009 0.009 0.009 0.008 0.008 0.008 0.008 0.008 0.007 0.007 0.007 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.884 0.895 0.906 0.915 0.923 0.930 0.937 0.943 0.948 0.953 0.957 0.961 0.964 0.967 0.970 0.973 0.975 0.977 0.978 0.980 0.981 0.982 0.984 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
colonna = 42
n (5 : 5): [ 0.986 0.026 0.010 0.007 0.985 ]


D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.890 0.901 0.910 0.919 0.927 0.934 0.940 0.946 0.951 0.956 0.960 0.963 0.967 0.969 0.972 0.974 0.976 0.978 0.980 0.981 0.983 0.984 0.985 0.986 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.171 0.156 0.143 0.131 0.120 0.110 0.101 0.092 0.084 0.077 0.071 0.065 0.060 0.055 0.051 0.047 0.043 0.040 0.037 0.034 0.032 0.030 0.028 0.026 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.034 0.032 0.029 0.027 0.025 0.024 0.022 0.021 0.019 0.018 0.017 0.016 0.015 0.014 0.014 0.013 0.012 0.012 0.011 0.011 0.011 0.010 0.010 0.010 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.019 0.018 0.016 0.015 0.014 0.013 0.013 0.012 0.011 0.011 0.010 0.010 0.009 0.009 0.009 0.008 0.008 0.008 0.008 0.008 0.007 0.007 0.007 0.007 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.884 0.895 0.906 0.915 0.923 0.930 0.937 0.943 0.948 0.953 0.957 0.961 0.964 0.967 0.970 0.973 0.975 0.977 0.978 0.980 0.981 0.982 0.984 0.985 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
*****************************************


*** target1 ***

*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (3595 interne); stringhe deallocate: 0 (3510 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.986 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.986


ris (2 : 2): [ -1.000 0.986 ]
*****************************************


Stringhe allocate: 2 (3610 interne); stringhe deallocate: 0 (3525 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (3625 interne); stringhe deallocate: 0 (3540 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (3640 interne); stringhe deallocate: 0 (3555 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (3655 interne); stringhe deallocate: 0 (3570 interne)


Stringhe allocate: 2 (3655 interne); stringhe deallocate: 0 (3575 interne)

105: f_aux5_d
parm1[j] (5 : 5): [ 9.966 10.144 10.104 9.914 9.961 ]
ris (5 : 5): [ 1.000 0.014 0.000 0.000 1.000 ]
parm1[j] (5 : 5): [ 0.489 0.481 0.495 0.515 0.505 ]


targetT (5 : 5): [ 0.994 0.009 0.007 0.006 0.993 ]
*****************************************

114: f_aux6_d
res = 0.100
parm1[j] (5 : 5): [ 1.055 0.972 0.929 1.080 1.060 ]
targetT (5 : 5): [ 0.994 0.009 0.007 0.006 0.993 ]
n (5 : 5): [ 0.986 0.026 0.010 0.007 0.985 ]


incr (5 : 5): [ 0.001 -0.002 -0.000 -0.000 0.001 ]
*****************************************

116: somma1_vv_d
n (5 : 5): [ 0.986 0.026 0.010 0.007 0.985 ]
incr (5 : 5): [ 0.001 -0.002 -0.000 -0.000 0.001 ]


n (5 : 5): [ 0.987 0.024 0.009 0.007 0.985 ]
*****************************************

118: assegna1_mv_colonna_d
D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.890 0.901 0.910 0.919 0.927 0.934 0.940 0.946 0.951 0.956 0.960 0.963 0.967 0.969 0.972 0.974 0.976 0.978 0.980 0.981 0.983 0.984 0.985 0.986 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.171 0.156 0.143 0.131 0.120 0.110 0.101 0.092 0.084 0.077 0.071 0.065 0.060 0.055 0.051 0.047 0.043 0.040 0.037 0.034 0.032 0.030 0.028 0.026 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.034 0.032 0.029 0.027 0.025 0.024 0.022 0.021 0.019 0.018 0.017 0.016 0.015 0.014 0.014 0.013 0.012 0.012 0.011 0.011 0.011 0.010 0.010 0.010 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.019 0.018 0.016 0.015 0.014 0.013 0.013 0.012 0.011 0.011 0.010 0.010 0.009 0.009 0.009 0.008 0.008 0.008 0.008 0.008 0.007 0.007 0.007 0.007 0.000 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.884 0.895 0.906 0.915 0.923 0.930 0.937 0.943 0.948 0.953 0.957 0.961 0.964 0.967 0.970 0.973 0.975 0.977 0.978 0.980 0.981 0.982 0.984 0.985 0.000 0.000 0.000 0.000 0.000 0.000 0.000
 ]
colonna = 43
n (5 : 5): [ 0.987 0.024 0.009 0.007 0.985 ]


D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.890 0.901 0.910 0.919 0.927 0.934 0.940 0.946 0.951 0.956 0.960 0.963 0.967 0.969 0.972 0.974 0.976 0.978 0.980 0.981 0.983 0.984 0.985 0.986 0.987 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.171 0.156 0.143 0.131 0.120 0.110 0.101 0.092 0.084 0.077 0.071 0.065 0.060 0.055 0.051 0.047 0.043 0.040 0.037 0.034 0.032 0.030 0.028 0.026 0.024 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.034 0.032 0.029 0.027 0.025 0.024 0.022 0.021 0.019 0.018 0.017 0.016 0.015 0.014 0.014 0.013 0.012 0.012 0.011 0.011 0.011 0.010 0.010 0.010 0.009 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.019 0.018 0.016 0.015 0.014 0.013 0.013 0.012 0.011 0.011 0.010 0.010 0.009 0.009 0.009 0.008 0.008 0.008 0.008 0.008 0.007 0.007 0.007 0.007 0.007 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.884 0.895 0.906 0.915 0.923 0.930 0.937 0.943 0.948 0.953 0.957 0.961 0.964 0.967 0.970 0.973 0.975 0.977 0.978 0.980 0.981 0.982 0.984 0.985 0.985 0.000 0.000 0.000 0.000 0.000 0.000
 ]
*****************************************


*** target1 ***

*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (3675 interne); stringhe deallocate: 0 (3590 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.987 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.987


ris (2 : 2): [ -1.000 0.987 ]
*****************************************


Stringhe allocate: 2 (3690 interne); stringhe deallocate: 0 (3605 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (3705 interne); stringhe deallocate: 0 (3620 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (3720 interne); stringhe deallocate: 0 (3635 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (3735 interne); stringhe deallocate: 0 (3650 interne)


Stringhe allocate: 2 (3735 interne); stringhe deallocate: 0 (3655 interne)

105: f_aux5_d
parm1[j] (5 : 5): [ 9.966 10.144 10.104 9.914 9.961 ]
ris (5 : 5): [ 1.000 0.013 0.000 0.000 1.000 ]
parm1[j] (5 : 5): [ 0.489 0.481 0.495 0.515 0.505 ]


targetT (5 : 5): [ 0.994 0.009 0.007 0.006 0.993 ]
*****************************************

114: f_aux6_d
res = 0.100
parm1[j] (5 : 5): [ 1.055 0.972 0.929 1.080 1.060 ]
targetT (5 : 5): [ 0.994 0.009 0.007 0.006 0.993 ]
n (5 : 5): [ 0.987 0.024 0.009 0.007 0.985 ]


incr (5 : 5): [ 0.001 -0.002 -0.000 -0.000 0.001 ]
*****************************************

116: somma1_vv_d
n (5 : 5): [ 0.987 0.024 0.009 0.007 0.985 ]
incr (5 : 5): [ 0.001 -0.002 -0.000 -0.000 0.001 ]


n (5 : 5): [ 0.987 0.023 0.009 0.007 0.986 ]
*****************************************

118: assegna1_mv_colonna_d
D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.890 0.901 0.910 0.919 0.927 0.934 0.940 0.946 0.951 0.956 0.960 0.963 0.967 0.969 0.972 0.974 0.976 0.978 0.980 0.981 0.983 0.984 0.985 0.986 0.987 0.000 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.171 0.156 0.143 0.131 0.120 0.110 0.101 0.092 0.084 0.077 0.071 0.065 0.060 0.055 0.051 0.047 0.043 0.040 0.037 0.034 0.032 0.030 0.028 0.026 0.024 0.000 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.034 0.032 0.029 0.027 0.025 0.024 0.022 0.021 0.019 0.018 0.017 0.016 0.015 0.014 0.014 0.013 0.012 0.012 0.011 0.011 0.011 0.010 0.010 0.010 0.009 0.000 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.019 0.018 0.016 0.015 0.014 0.013 0.013 0.012 0.011 0.011 0.010 0.010 0.009 0.009 0.009 0.008 0.008 0.008 0.008 0.008 0.007 0.007 0.007 0.007 0.007 0.000 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.884 0.895 0.906 0.915 0.923 0.930 0.937 0.943 0.948 0.953 0.957 0.961 0.964 0.967 0.970 0.973 0.975 0.977 0.978 0.980 0.981 0.982 0.984 0.985 0.985 0.000 0.000 0.000 0.000 0.000 0.000
 ]
colonna = 44
n (5 : 5): [ 0.987 0.023 0.009 0.007 0.986 ]


D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.890 0.901 0.910 0.919 0.927 0.934 0.940 0.946 0.951 0.956 0.960 0.963 0.967 0.969 0.972 0.974 0.976 0.978 0.980 0.981 0.983 0.984 0.985 0.986 0.987 0.987 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.171 0.156 0.143 0.131 0.120 0.110 0.101 0.092 0.084 0.077 0.071 0.065 0.060 0.055 0.051 0.047 0.043 0.040 0.037 0.034 0.032 0.030 0.028 0.026 0.024 0.023 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.034 0.032 0.029 0.027 0.025 0.024 0.022 0.021 0.019 0.018 0.017 0.016 0.015 0.014 0.014 0.013 0.012 0.012 0.011 0.011 0.011 0.010 0.010 0.010 0.009 0.009 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.019 0.018 0.016 0.015 0.014 0.013 0.013 0.012 0.011 0.011 0.010 0.010 0.009 0.009 0.009 0.008 0.008 0.008 0.008 0.008 0.007 0.007 0.007 0.007 0.007 0.007 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.884 0.895 0.906 0.915 0.923 0.930 0.937 0.943 0.948 0.953 0.957 0.961 0.964 0.967 0.970 0.973 0.975 0.977 0.978 0.980 0.981 0.982 0.984 0.985 0.985 0.986 0.000 0.000 0.000 0.000 0.000
 ]
*****************************************


*** target1 ***

*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (3755 interne); stringhe deallocate: 0 (3670 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.987 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.987


ris (2 : 2): [ -1.000 0.987 ]
*****************************************


Stringhe allocate: 2 (3770 interne); stringhe deallocate: 0 (3685 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (3785 interne); stringhe deallocate: 0 (3700 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (3800 interne); stringhe deallocate: 0 (3715 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (3815 interne); stringhe deallocate: 0 (3730 interne)


Stringhe allocate: 2 (3815 interne); stringhe deallocate: 0 (3735 interne)

105: f_aux5_d
parm1[j] (5 : 5): [ 9.966 10.144 10.104 9.914 9.961 ]
ris (5 : 5): [ 1.000 0.013 0.000 0.000 1.000 ]
parm1[j] (5 : 5): [ 0.489 0.481 0.495 0.515 0.505 ]


targetT (5 : 5): [ 0.994 0.009 0.007 0.006 0.993 ]
*****************************************

114: f_aux6_d
res = 0.100
parm1[j] (5 : 5): [ 1.055 0.972 0.929 1.080 1.060 ]
targetT (5 : 5): [ 0.994 0.009 0.007 0.006 0.993 ]
n (5 : 5): [ 0.987 0.023 0.009 0.007 0.986 ]


incr (5 : 5): [ 0.001 -0.001 -0.000 -0.000 0.001 ]
*****************************************

116: somma1_vv_d
n (5 : 5): [ 0.987 0.023 0.009 0.007 0.986 ]
incr (5 : 5): [ 0.001 -0.001 -0.000 -0.000 0.001 ]


n (5 : 5): [ 0.988 0.021 0.009 0.007 0.987 ]
*****************************************

118: assegna1_mv_colonna_d
D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.890 0.901 0.910 0.919 0.927 0.934 0.940 0.946 0.951 0.956 0.960 0.963 0.967 0.969 0.972 0.974 0.976 0.978 0.980 0.981 0.983 0.984 0.985 0.986 0.987 0.987 0.000 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.171 0.156 0.143 0.131 0.120 0.110 0.101 0.092 0.084 0.077 0.071 0.065 0.060 0.055 0.051 0.047 0.043 0.040 0.037 0.034 0.032 0.030 0.028 0.026 0.024 0.023 0.000 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.034 0.032 0.029 0.027 0.025 0.024 0.022 0.021 0.019 0.018 0.017 0.016 0.015 0.014 0.014 0.013 0.012 0.012 0.011 0.011 0.011 0.010 0.010 0.010 0.009 0.009 0.000 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.019 0.018 0.016 0.015 0.014 0.013 0.013 0.012 0.011 0.011 0.010 0.010 0.009 0.009 0.009 0.008 0.008 0.008 0.008 0.008 0.007 0.007 0.007 0.007 0.007 0.007 0.000 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.884 0.895 0.906 0.915 0.923 0.930 0.937 0.943 0.948 0.953 0.957 0.961 0.964 0.967 0.970 0.973 0.975 0.977 0.978 0.980 0.981 0.982 0.984 0.985 0.985 0.986 0.000 0.000 0.000 0.000 0.000
 ]
colonna = 45
n (5 : 5): [ 0.988 0.021 0.009 0.007 0.987 ]


D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.890 0.901 0.910 0.919 0.927 0.934 0.940 0.946 0.951 0.956 0.960 0.963 0.967 0.969 0.972 0.974 0.976 0.978 0.980 0.981 0.983 0.984 0.985 0.986 0.987 0.987 0.988 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.171 0.156 0.143 0.131 0.120 0.110 0.101 0.092 0.084 0.077 0.071 0.065 0.060 0.055 0.051 0.047 0.043 0.040 0.037 0.034 0.032 0.030 0.028 0.026 0.024 0.023 0.021 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.034 0.032 0.029 0.027 0.025 0.024 0.022 0.021 0.019 0.018 0.017 0.016 0.015 0.014 0.014 0.013 0.012 0.012 0.011 0.011 0.011 0.010 0.010 0.010 0.009 0.009 0.009 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.019 0.018 0.016 0.015 0.014 0.013 0.013 0.012 0.011 0.011 0.010 0.010 0.009 0.009 0.009 0.008 0.008 0.008 0.008 0.008 0.007 0.007 0.007 0.007 0.007 0.007 0.007 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.884 0.895 0.906 0.915 0.923 0.930 0.937 0.943 0.948 0.953 0.957 0.961 0.964 0.967 0.970 0.973 0.975 0.977 0.978 0.980 0.981 0.982 0.984 0.985 0.985 0.986 0.987 0.000 0.000 0.000 0.000
 ]
*****************************************


*** target1 ***

*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (3835 interne); stringhe deallocate: 0 (3750 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.988 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.988


ris (2 : 2): [ -1.000 0.988 ]
*****************************************


Stringhe allocate: 2 (3850 interne); stringhe deallocate: 0 (3765 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (3865 interne); stringhe deallocate: 0 (3780 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (3880 interne); stringhe deallocate: 0 (3795 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (3895 interne); stringhe deallocate: 0 (3810 interne)


Stringhe allocate: 2 (3895 interne); stringhe deallocate: 0 (3815 interne)

105: f_aux5_d
parm1[j] (5 : 5): [ 9.966 10.144 10.104 9.914 9.961 ]
ris (5 : 5): [ 1.000 0.012 0.000 0.000 1.000 ]
parm1[j] (5 : 5): [ 0.489 0.481 0.495 0.515 0.505 ]


targetT (5 : 5): [ 0.994 0.008 0.007 0.006 0.993 ]
*****************************************

114: f_aux6_d
res = 0.100
parm1[j] (5 : 5): [ 1.055 0.972 0.929 1.080 1.060 ]
targetT (5 : 5): [ 0.994 0.008 0.007 0.006 0.993 ]
n (5 : 5): [ 0.988 0.021 0.009 0.007 0.987 ]


incr (5 : 5): [ 0.001 -0.001 -0.000 -0.000 0.001 ]
*****************************************

116: somma1_vv_d
n (5 : 5): [ 0.988 0.021 0.009 0.007 0.987 ]
incr (5 : 5): [ 0.001 -0.001 -0.000 -0.000 0.001 ]


n (5 : 5): [ 0.989 0.020 0.009 0.007 0.988 ]
*****************************************

118: assegna1_mv_colonna_d
D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.890 0.901 0.910 0.919 0.927 0.934 0.940 0.946 0.951 0.956 0.960 0.963 0.967 0.969 0.972 0.974 0.976 0.978 0.980 0.981 0.983 0.984 0.985 0.986 0.987 0.987 0.988 0.000 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.171 0.156 0.143 0.131 0.120 0.110 0.101 0.092 0.084 0.077 0.071 0.065 0.060 0.055 0.051 0.047 0.043 0.040 0.037 0.034 0.032 0.030 0.028 0.026 0.024 0.023 0.021 0.000 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.034 0.032 0.029 0.027 0.025 0.024 0.022 0.021 0.019 0.018 0.017 0.016 0.015 0.014 0.014 0.013 0.012 0.012 0.011 0.011 0.011 0.010 0.010 0.010 0.009 0.009 0.009 0.000 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.019 0.018 0.016 0.015 0.014 0.013 0.013 0.012 0.011 0.011 0.010 0.010 0.009 0.009 0.009 0.008 0.008 0.008 0.008 0.008 0.007 0.007 0.007 0.007 0.007 0.007 0.007 0.000 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.884 0.895 0.906 0.915 0.923 0.930 0.937 0.943 0.948 0.953 0.957 0.961 0.964 0.967 0.970 0.973 0.975 0.977 0.978 0.980 0.981 0.982 0.984 0.985 0.985 0.986 0.987 0.000 0.000 0.000 0.000
 ]
colonna = 46
n (5 : 5): [ 0.989 0.020 0.009 0.007 0.988 ]


D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.890 0.901 0.910 0.919 0.927 0.934 0.940 0.946 0.951 0.956 0.960 0.963 0.967 0.969 0.972 0.974 0.976 0.978 0.980 0.981 0.983 0.984 0.985 0.986 0.987 0.987 0.988 0.989 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.171 0.156 0.143 0.131 0.120 0.110 0.101 0.092 0.084 0.077 0.071 0.065 0.060 0.055 0.051 0.047 0.043 0.040 0.037 0.034 0.032 0.030 0.028 0.026 0.024 0.023 0.021 0.020 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.034 0.032 0.029 0.027 0.025 0.024 0.022 0.021 0.019 0.018 0.017 0.016 0.015 0.014 0.014 0.013 0.012 0.012 0.011 0.011 0.011 0.010 0.010 0.010 0.009 0.009 0.009 0.009 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.019 0.018 0.016 0.015 0.014 0.013 0.013 0.012 0.011 0.011 0.010 0.010 0.009 0.009 0.009 0.008 0.008 0.008 0.008 0.008 0.007 0.007 0.007 0.007 0.007 0.007 0.007 0.007 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.884 0.895 0.906 0.915 0.923 0.930 0.937 0.943 0.948 0.953 0.957 0.961 0.964 0.967 0.970 0.973 0.975 0.977 0.978 0.980 0.981 0.982 0.984 0.985 0.985 0.986 0.987 0.988 0.000 0.000 0.000
 ]
*****************************************


*** target1 ***

*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (3915 interne); stringhe deallocate: 0 (3830 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.989 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.989


ris (2 : 2): [ -1.000 0.989 ]
*****************************************


Stringhe allocate: 2 (3930 interne); stringhe deallocate: 0 (3845 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (3945 interne); stringhe deallocate: 0 (3860 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (3960 interne); stringhe deallocate: 0 (3875 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (3975 interne); stringhe deallocate: 0 (3890 interne)


Stringhe allocate: 2 (3975 interne); stringhe deallocate: 0 (3895 interne)

105: f_aux5_d
parm1[j] (5 : 5): [ 9.966 10.144 10.104 9.914 9.961 ]
ris (5 : 5): [ 1.000 0.011 0.000 0.000 1.000 ]
parm1[j] (5 : 5): [ 0.489 0.481 0.495 0.515 0.505 ]


targetT (5 : 5): [ 0.994 0.008 0.007 0.006 0.993 ]
*****************************************

114: f_aux6_d
res = 0.100
parm1[j] (5 : 5): [ 1.055 0.972 0.929 1.080 1.060 ]
targetT (5 : 5): [ 0.994 0.008 0.007 0.006 0.993 ]
n (5 : 5): [ 0.989 0.020 0.009 0.007 0.988 ]


incr (5 : 5): [ 0.001 -0.001 -0.000 -0.000 0.001 ]
*****************************************

116: somma1_vv_d
n (5 : 5): [ 0.989 0.020 0.009 0.007 0.988 ]
incr (5 : 5): [ 0.001 -0.001 -0.000 -0.000 0.001 ]


n (5 : 5): [ 0.989 0.019 0.008 0.007 0.988 ]
*****************************************

118: assegna1_mv_colonna_d
D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.890 0.901 0.910 0.919 0.927 0.934 0.940 0.946 0.951 0.956 0.960 0.963 0.967 0.969 0.972 0.974 0.976 0.978 0.980 0.981 0.983 0.984 0.985 0.986 0.987 0.987 0.988 0.989 0.000 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.171 0.156 0.143 0.131 0.120 0.110 0.101 0.092 0.084 0.077 0.071 0.065 0.060 0.055 0.051 0.047 0.043 0.040 0.037 0.034 0.032 0.030 0.028 0.026 0.024 0.023 0.021 0.020 0.000 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.034 0.032 0.029 0.027 0.025 0.024 0.022 0.021 0.019 0.018 0.017 0.016 0.015 0.014 0.014 0.013 0.012 0.012 0.011 0.011 0.011 0.010 0.010 0.010 0.009 0.009 0.009 0.009 0.000 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.019 0.018 0.016 0.015 0.014 0.013 0.013 0.012 0.011 0.011 0.010 0.010 0.009 0.009 0.009 0.008 0.008 0.008 0.008 0.008 0.007 0.007 0.007 0.007 0.007 0.007 0.007 0.007 0.000 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.884 0.895 0.906 0.915 0.923 0.930 0.937 0.943 0.948 0.953 0.957 0.961 0.964 0.967 0.970 0.973 0.975 0.977 0.978 0.980 0.981 0.982 0.984 0.985 0.985 0.986 0.987 0.988 0.000 0.000 0.000
 ]
colonna = 47
n (5 : 5): [ 0.989 0.019 0.008 0.007 0.988 ]


D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.890 0.901 0.910 0.919 0.927 0.934 0.940 0.946 0.951 0.956 0.960 0.963 0.967 0.969 0.972 0.974 0.976 0.978 0.980 0.981 0.983 0.984 0.985 0.986 0.987 0.987 0.988 0.989 0.989 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.171 0.156 0.143 0.131 0.120 0.110 0.101 0.092 0.084 0.077 0.071 0.065 0.060 0.055 0.051 0.047 0.043 0.040 0.037 0.034 0.032 0.030 0.028 0.026 0.024 0.023 0.021 0.020 0.019 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.034 0.032 0.029 0.027 0.025 0.024 0.022 0.021 0.019 0.018 0.017 0.016 0.015 0.014 0.014 0.013 0.012 0.012 0.011 0.011 0.011 0.010 0.010 0.010 0.009 0.009 0.009 0.009 0.008 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.019 0.018 0.016 0.015 0.014 0.013 0.013 0.012 0.011 0.011 0.010 0.010 0.009 0.009 0.009 0.008 0.008 0.008 0.008 0.008 0.007 0.007 0.007 0.007 0.007 0.007 0.007 0.007 0.007 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.884 0.895 0.906 0.915 0.923 0.930 0.937 0.943 0.948 0.953 0.957 0.961 0.964 0.967 0.970 0.973 0.975 0.977 0.978 0.980 0.981 0.982 0.984 0.985 0.985 0.986 0.987 0.988 0.988 0.000 0.000
 ]
*****************************************


*** target1 ***

*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (3995 interne); stringhe deallocate: 0 (3910 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.989 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.989


ris (2 : 2): [ -1.000 0.989 ]
*****************************************


Stringhe allocate: 2 (4010 interne); stringhe deallocate: 0 (3925 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (4025 interne); stringhe deallocate: 0 (3940 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (4040 interne); stringhe deallocate: 0 (3955 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (4055 interne); stringhe deallocate: 0 (3970 interne)


Stringhe allocate: 2 (4055 interne); stringhe deallocate: 0 (3975 interne)

105: f_aux5_d
parm1[j] (5 : 5): [ 9.966 10.144 10.104 9.914 9.961 ]
ris (5 : 5): [ 1.000 0.011 0.000 0.000 1.000 ]
parm1[j] (5 : 5): [ 0.489 0.481 0.495 0.515 0.505 ]


targetT (5 : 5): [ 0.994 0.008 0.007 0.006 0.993 ]
*****************************************

114: f_aux6_d
res = 0.100
parm1[j] (5 : 5): [ 1.055 0.972 0.929 1.080 1.060 ]
targetT (5 : 5): [ 0.994 0.008 0.007 0.006 0.993 ]
n (5 : 5): [ 0.989 0.019 0.008 0.007 0.988 ]


incr (5 : 5): [ 0.000 -0.001 -0.000 -0.000 0.001 ]
*****************************************

116: somma1_vv_d
n (5 : 5): [ 0.989 0.019 0.008 0.007 0.988 ]
incr (5 : 5): [ 0.000 -0.001 -0.000 -0.000 0.001 ]


n (5 : 5): [ 0.990 0.018 0.008 0.007 0.989 ]
*****************************************

118: assegna1_mv_colonna_d
D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.890 0.901 0.910 0.919 0.927 0.934 0.940 0.946 0.951 0.956 0.960 0.963 0.967 0.969 0.972 0.974 0.976 0.978 0.980 0.981 0.983 0.984 0.985 0.986 0.987 0.987 0.988 0.989 0.989 0.000 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.171 0.156 0.143 0.131 0.120 0.110 0.101 0.092 0.084 0.077 0.071 0.065 0.060 0.055 0.051 0.047 0.043 0.040 0.037 0.034 0.032 0.030 0.028 0.026 0.024 0.023 0.021 0.020 0.019 0.000 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.034 0.032 0.029 0.027 0.025 0.024 0.022 0.021 0.019 0.018 0.017 0.016 0.015 0.014 0.014 0.013 0.012 0.012 0.011 0.011 0.011 0.010 0.010 0.010 0.009 0.009 0.009 0.009 0.008 0.000 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.019 0.018 0.016 0.015 0.014 0.013 0.013 0.012 0.011 0.011 0.010 0.010 0.009 0.009 0.009 0.008 0.008 0.008 0.008 0.008 0.007 0.007 0.007 0.007 0.007 0.007 0.007 0.007 0.007 0.000 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.884 0.895 0.906 0.915 0.923 0.930 0.937 0.943 0.948 0.953 0.957 0.961 0.964 0.967 0.970 0.973 0.975 0.977 0.978 0.980 0.981 0.982 0.984 0.985 0.985 0.986 0.987 0.988 0.988 0.000 0.000
 ]
colonna = 48
n (5 : 5): [ 0.990 0.018 0.008 0.007 0.989 ]


D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.890 0.901 0.910 0.919 0.927 0.934 0.940 0.946 0.951 0.956 0.960 0.963 0.967 0.969 0.972 0.974 0.976 0.978 0.980 0.981 0.983 0.984 0.985 0.986 0.987 0.987 0.988 0.989 0.989 0.990 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.171 0.156 0.143 0.131 0.120 0.110 0.101 0.092 0.084 0.077 0.071 0.065 0.060 0.055 0.051 0.047 0.043 0.040 0.037 0.034 0.032 0.030 0.028 0.026 0.024 0.023 0.021 0.020 0.019 0.018 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.034 0.032 0.029 0.027 0.025 0.024 0.022 0.021 0.019 0.018 0.017 0.016 0.015 0.014 0.014 0.013 0.012 0.012 0.011 0.011 0.011 0.010 0.010 0.010 0.009 0.009 0.009 0.009 0.008 0.008 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.019 0.018 0.016 0.015 0.014 0.013 0.013 0.012 0.011 0.011 0.010 0.010 0.009 0.009 0.009 0.008 0.008 0.008 0.008 0.008 0.007 0.007 0.007 0.007 0.007 0.007 0.007 0.007 0.007 0.007 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.884 0.895 0.906 0.915 0.923 0.930 0.937 0.943 0.948 0.953 0.957 0.961 0.964 0.967 0.970 0.973 0.975 0.977 0.978 0.980 0.981 0.982 0.984 0.985 0.985 0.986 0.987 0.988 0.988 0.989 0.000
 ]
*****************************************


*** target1 ***

*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (4075 interne); stringhe deallocate: 0 (3990 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.990 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.990


ris (2 : 2): [ -1.000 0.990 ]
*****************************************


Stringhe allocate: 2 (4090 interne); stringhe deallocate: 0 (4005 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (4105 interne); stringhe deallocate: 0 (4020 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


valr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 3


signr (3 : 3): [ 0.000 0.000 0.000 ]
*****************************************

valr (3 : 3): [ 0.000 0.000 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = 0.000, el2 = 0.000


ris (2 : 2): [ 0.000 0.000 ]
*****************************************


Stringhe allocate: 2 (4120 interne); stringhe deallocate: 0 (4035 interne)


*** boole_result ***
27: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


valr (1 : 1): [ 0.000 ]
*****************************************

28: rep_d
scalare_d (1 : 1): [ 0.000 ]
ripetizioni = 1


signr (1 : 1): [ 0.000 ]
*****************************************

valr (1 : 1): [ 0.000 ]
*** next_op ***
96: vettore2s_d
el1 = -1.000, el2 = 0.000


ris (2 : 2): [ -1.000 0.000 ]
*****************************************


Stringhe allocate: 2 (4135 interne); stringhe deallocate: 0 (4050 interne)


Stringhe allocate: 2 (4135 interne); stringhe deallocate: 0 (4055 interne)

105: f_aux5_d
parm1[j] (5 : 5): [ 9.966 10.144 10.104 9.914 9.961 ]
ris (5 : 5): [ 1.000 0.010 0.000 0.000 1.000 ]
parm1[j] (5 : 5): [ 0.489 0.481 0.495 0.515 0.505 ]


targetT (5 : 5): [ 0.994 0.008 0.007 0.006 0.993 ]
*****************************************

114: f_aux6_d
res = 0.100
parm1[j] (5 : 5): [ 1.055 0.972 0.929 1.080 1.060 ]
targetT (5 : 5): [ 0.994 0.008 0.007 0.006 0.993 ]
n (5 : 5): [ 0.990 0.018 0.008 0.007 0.989 ]


incr (5 : 5): [ 0.000 -0.001 -0.000 -0.000 0.000 ]
*****************************************

116: somma1_vv_d
n (5 : 5): [ 0.990 0.018 0.008 0.007 0.989 ]
incr (5 : 5): [ 0.000 -0.001 -0.000 -0.000 0.000 ]


n (5 : 5): [ 0.990 0.017 0.008 0.006 0.989 ]
*****************************************

118: assegna1_mv_colonna_d
D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.890 0.901 0.910 0.919 0.927 0.934 0.940 0.946 0.951 0.956 0.960 0.963 0.967 0.969 0.972 0.974 0.976 0.978 0.980 0.981 0.983 0.984 0.985 0.986 0.987 0.987 0.988 0.989 0.989 0.990 0.000
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.171 0.156 0.143 0.131 0.120 0.110 0.101 0.092 0.084 0.077 0.071 0.065 0.060 0.055 0.051 0.047 0.043 0.040 0.037 0.034 0.032 0.030 0.028 0.026 0.024 0.023 0.021 0.020 0.019 0.018 0.000
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.034 0.032 0.029 0.027 0.025 0.024 0.022 0.021 0.019 0.018 0.017 0.016 0.015 0.014 0.014 0.013 0.012 0.012 0.011 0.011 0.011 0.010 0.010 0.010 0.009 0.009 0.009 0.009 0.008 0.008 0.000
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.019 0.018 0.016 0.015 0.014 0.013 0.013 0.012 0.011 0.011 0.010 0.010 0.009 0.009 0.009 0.008 0.008 0.008 0.008 0.008 0.007 0.007 0.007 0.007 0.007 0.007 0.007 0.007 0.007 0.007 0.000
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.884 0.895 0.906 0.915 0.923 0.930 0.937 0.943 0.948 0.953 0.957 0.961 0.964 0.967 0.970 0.973 0.975 0.977 0.978 0.980 0.981 0.982 0.984 0.985 0.985 0.986 0.987 0.988 0.988 0.989 0.000
 ]
colonna = 49
n (5 : 5): [ 0.990 0.017 0.008 0.006 0.989 ]


D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.890 0.901 0.910 0.919 0.927 0.934 0.940 0.946 0.951 0.956 0.960 0.963 0.967 0.969 0.972 0.974 0.976 0.978 0.980 0.981 0.983 0.984 0.985 0.986 0.987 0.987 0.988 0.989 0.989 0.990 0.990
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.171 0.156 0.143 0.131 0.120 0.110 0.101 0.092 0.084 0.077 0.071 0.065 0.060 0.055 0.051 0.047 0.043 0.040 0.037 0.034 0.032 0.030 0.028 0.026 0.024 0.023 0.021 0.020 0.019 0.018 0.017
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.034 0.032 0.029 0.027 0.025 0.024 0.022 0.021 0.019 0.018 0.017 0.016 0.015 0.014 0.014 0.013 0.012 0.012 0.011 0.011 0.011 0.010 0.010 0.010 0.009 0.009 0.009 0.009 0.008 0.008 0.008
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.019 0.018 0.016 0.015 0.014 0.013 0.013 0.012 0.011 0.011 0.010 0.010 0.009 0.009 0.009 0.008 0.008 0.008 0.008 0.008 0.007 0.007 0.007 0.007 0.007 0.007 0.007 0.007 0.007 0.007 0.006
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.884 0.895 0.906 0.915 0.923 0.930 0.937 0.943 0.948 0.953 0.957 0.961 0.964 0.967 0.970 0.973 0.975 0.977 0.978 0.980 0.981 0.982 0.984 0.985 0.985 0.986 0.987 0.988 0.988 0.989 0.989
 ]
*****************************************

126: rep_i
scalare_i (1 : 1): [ 0 ]
ripetizioni = 5


ind (5 : 5): [ 0 0 0 0 0 ]
*****************************************

129: max_v_d
times (5 : 5): [ 1.000 2.000 3.000 4.000 5.000 ]


max = 5.000
*****************************************

129: seq_d
da = 0.000, a = 5.000, incremento = 0.100


aus (60 : 60): [ 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 ]
*****************************************

133: f_aux7_d
aus (60 : 60): [ 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 ]
scalare = 1.000

ris = 1

*****************************************

133: f_aux7_d
aus (60 : 60): [ 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 ]
scalare = 2.000

ris = 1

*****************************************

133: f_aux7_d
aus (60 : 60): [ 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 ]
scalare = 3.000

ris = 1

*****************************************

133: f_aux7_d
aus (60 : 60): [ 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 ]
scalare = 4.000

ris = 1

*****************************************

133: f_aux7_d
aus (60 : 60): [ 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 0.000 ]
scalare = 5.000

ris = 1

*****************************************

141: seleziona_colonne_d
D (5 x 49 : 5 x 49): [
	 0.217 0.299 0.373 0.438 0.497 0.549 0.596 0.638 0.676 0.709 0.739 0.766 0.790 0.812 0.831 0.848 0.863 0.877 0.890 0.901 0.910 0.919 0.927 0.934 0.940 0.946 0.951 0.956 0.960 0.963 0.967 0.969 0.972 0.974 0.976 0.978 0.980 0.981 0.983 0.984 0.985 0.986 0.987 0.987 0.988 0.989 0.989 0.990 0.990
	 0.138 0.218 0.284 0.336 0.371 0.389 0.392 0.384 0.369 0.350 0.328 0.306 0.283 0.262 0.241 0.221 0.203 0.186 0.171 0.156 0.143 0.131 0.120 0.110 0.101 0.092 0.084 0.077 0.071 0.065 0.060 0.055 0.051 0.047 0.043 0.040 0.037 0.034 0.032 0.030 0.028 0.026 0.024 0.023 0.021 0.020 0.019 0.018 0.017
	 0.166 0.152 0.138 0.126 0.115 0.105 0.096 0.087 0.080 0.073 0.067 0.061 0.056 0.052 0.047 0.044 0.040 0.037 0.034 0.032 0.029 0.027 0.025 0.024 0.022 0.021 0.019 0.018 0.017 0.016 0.015 0.014 0.014 0.013 0.012 0.012 0.011 0.011 0.011 0.010 0.010 0.010 0.009 0.009 0.009 0.009 0.008 0.008 0.008
	 0.107 0.096 0.087 0.078 0.070 0.063 0.057 0.052 0.047 0.042 0.038 0.035 0.032 0.029 0.026 0.024 0.022 0.021 0.019 0.018 0.016 0.015 0.014 0.013 0.013 0.012 0.011 0.011 0.010 0.010 0.009 0.009 0.009 0.008 0.008 0.008 0.008 0.008 0.007 0.007 0.007 0.007 0.007 0.007 0.007 0.007 0.007 0.007 0.006
	 0.173 0.259 0.337 0.407 0.469 0.524 0.574 0.618 0.658 0.694 0.725 0.754 0.779 0.802 0.822 0.840 0.856 0.871 0.884 0.895 0.906 0.915 0.923 0.930 0.937 0.943 0.948 0.953 0.957 0.961 0.964 0.967 0.970 0.973 0.975 0.977 0.978 0.980 0.981 0.982 0.984 0.985 0.985 0.986 0.987 0.988 0.988 0.989 0.989
 ]
ind (5 : 5): [ 1 1 1 1 1 ]


ris (5 x 5 : 5 x 5): [
	 0.217 0.217 0.217 0.217 0.217
	 0.138 0.138 0.138 0.138 0.138
	 0.166 0.166 0.166 0.166 0.166
	 0.107 0.107 0.107 0.107 0.107
	 0.173 0.173 0.173 0.173 0.173
 ]
*****************************************


Stringhe allocate: 2 (4155 interne); stringhe deallocate: 0 (4095 interne)

119: moltiplica_mv_d
ris (5 x 5 : 5 x 5): [
	 0.217 0.217 0.217 0.217 0.217
	 0.138 0.138 0.138 0.138 0.138
	 0.166 0.166 0.166 0.166 0.166
	 0.107 0.107 0.107 0.107 0.107
	 0.173 0.173 0.173 0.173 0.173
 ]
parm1[j] (5 : 5): [ 2.669 18.260 8.229 13.476 5.121 ]


ris (5 x 5 : 5 x 5): [
	 0.580 3.971 1.790 2.931 1.114
	 0.370 2.529 1.139 1.866 0.709
	 0.444 3.039 1.369 2.243 0.852
	 0.286 1.958 0.882 1.445 0.549
	 0.461 3.150 1.420 2.325 0.883
 ]
*****************************************


Stringhe allocate: 2 (4160 interne); stringhe deallocate: 0 (4130 interne)

Trasformo la lista
ris (5 : 5): {
	ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
	ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
	ACCEDIlst(ris, i, vi) (3 : 3): [ 0 -1 -1 ]
	ACCEDIlst(ris, i, vi) (3 : 3): [ 0 -1 -1 ]
	ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
}

Trasformo il vettore ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
Trasformo il vettore ACCEDIlst(ris, i, vi) (1 : 1): [ 1 ]
Trasformo il vettore ACCEDIlst(ris, i, vi) (3 : 3): [ 0 -1 -1 ]
Trasformo il vettore ACCEDIlst(ris, i, vi) (3 : 3): [ 0 -1 -1 ]
Trasformo il vettore ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
Trasformo la lista
ris (5 : 5): {
	ris (5 x 5 : 5 x 5): [
	 0.580 3.971 1.790 2.931 1.114
	 0.370 2.529 1.139 1.866 0.709
	 0.444 3.039 1.369 2.243 0.852
	 0.286 1.958 0.882 1.445 0.549
	 0.461 3.150 1.420 2.325 0.883
 ]
	tmpm1_d (5 x 5 : 5 x 5): [
	 0.000 -0.098 0.000 0.000 0.000
	 -1.229 0.000 0.000 0.000 0.000
	 -1.318 -0.470 0.000 0.000 0.000
	 -1.562 -0.492 0.000 0.000 0.000
	 0.000 -0.482 0.000 0.000 0.000
 ]
	parm1[j] (5 : 5): [ 1.055 0.972 0.929 1.080 1.060 ]
	parm1[j] (5 : 5): [ 9.966 10.144 10.104 9.914 9.961 ]
	parm1[j] (5 : 5): [ 0.489 0.481 0.495 0.515 0.505 ]
}

Trasformo la matrice
ris (5 x 5 : 5 x 5): [
	 0.580 3.971 1.790 2.931 1.114
	 0.370 2.529 1.139 1.866 0.709
	 0.444 3.039 1.369 2.243 0.852
	 0.286 1.958 0.882 1.445 0.549
	 0.461 3.150 1.420 2.325 0.883
 ]
Trasformo la matrice
tmpm1_d (5 x 5 : 5 x 5): [
	 0.000 -0.098 0.000 0.000 0.000
	 -1.229 0.000 0.000 0.000 0.000
	 -1.318 -0.470 0.000 0.000 0.000
	 -1.562 -0.492 0.000 0.000 0.000
	 0.000 -0.482 0.000 0.000 0.000
 ]
Trasformo il vettore parm1[j] (5 : 5): [ 1.055 0.972 0.929 1.080 1.060 ]
Trasformo il vettore parm1[j] (5 : 5): [ 9.966 10.144 10.104 9.914 9.961 ]
Trasformo il vettore parm1[j] (5 : 5): [ 0.489 0.481 0.495 0.515 0.505 ]

Stringhe allocate: 2 (4160 interne); stringhe deallocate: 4 (4245 interne)

