
*** simulatenet ***
Ho trasformato la stringa 'connectivity' che vale 'MTM'
------------------------------ Fine inSTRINGA

Ho trasformato la stringa 'INdegree' che vale 'out'
------------------------------ Fine inSTRINGA

Ho trasformato il vettore num_subnet (3 : 3): [ 5 5 10 ]
Ho trasformato la stringa 'formula' che vale ''
------------------------------ Fine inSTRINGA

Ho trasformato il vettore Xmin (5 : 5): [ 8.419340674000001 3.482809808 6.932805339 5.544149565 7.900224736 ]
Ho trasformato il vettore Xmax (5 : 5): [ 12.67431725 9.032985081 12.19219754 9.171903361 10.26385753 ]
Ho trasformato il vettore lambda (5 : 5): [ 1.040829206 0.833709414 1.036836698 0.989892399 1.171423905 ]
Ho trasformato il vettore X0 (5 : 5): [ 11.39247467 7.769541808 9.180318338999999 6.255656565 8.441444735999999 ]
Ho trasformato il vettore weight_par (2 : 2): [ 1 0 ]
Ho trasformato la stringa 'act_fun' che vale 'sigmoidal'
------------------------------ Fine inSTRINGA

Ho trasformato il vettore alpha (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
Ho trasformato il vettore beta (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
Ho trasformato il vettore times (51 : 51): [ 0 0.1 0.2 0.3 0.4 0.5 0.6000000000000001 0.7000000000000001 0.8 0.9 1 1.1 1.2 1.3 1.4 1.5 1.6 1.7 1.8 1.9 2 2.1 2.2 2.3 2.4 2.5 2.6 2.7 2.8 2.9 3 3.1 3.2 3.3 3.4 3.5 3.6 3.7 3.8 3.9 4 4.100000000000001 4.2 4.3 4.4 4.5 4.600000000000001 4.7 4.800000000000001 4.9 5 ]
Ho trasformato la stringa 'method' che vale 'rkf45'
------------------------------ Fine inSTRINGA

Ho trasformato il vettore param (6 : 6): [ 0 0 0 0 0 0 ]
230: copia_v_d	<=>	ris[st:end] <- v[st:end]
lambda (5 : 5): [ 1.040829206 0.833709414 1.036836698 0.989892399 1.171423905 ]
st = 1
end = 5


parm0[LAMBDA] (5 : 5): [ 1.040829206 0.833709414 1.036836698 0.989892399 1.171423905 ]
------------------------------ Fine copia_v_d

232: copia_v_d	<=>	ris[st:end] <- v[st:end]
alpha (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
st = 1
end = 5


parm0[ALPHA] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
------------------------------ Fine copia_v_d

234: copia_v_d	<=>	ris[st:end] <- v[st:end]
beta (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
st = 1
end = 5


parm0[BETA] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
------------------------------ Fine copia_v_d

236: copia_v_d	<=>	ris[st:end] <- v[st:end]
Xmin (5 : 5): [ 8.419340674000001 3.482809808 6.932805339 5.544149565 7.900224736 ]
st = 1
end = 5


parm0[XMIN] (5 : 5): [ 8.419340674000001 3.482809808 6.932805339 5.544149565 7.900224736 ]
------------------------------ Fine copia_v_d

238: copia_v_d	<=>	ris[st:end] <- v[st:end]
Xmax (5 : 5): [ 12.67431725 9.032985081 12.19219754 9.171903361 10.26385753 ]
st = 1
end = 5


parm0[XMAX] (5 : 5): [ 12.67431725 9.032985081 12.19219754 9.171903361 10.26385753 ]
------------------------------ Fine copia_v_d

240: copia_v_d	<=>	ris[st:end] <- v[st:end]
X0 (5 : 5): [ 11.39247467 7.769541808 9.180318338999999 6.255656565 8.441444735999999 ]
st = 1
end = 5


parm0[XZERO] (5 : 5): [ 11.39247467 7.769541808 9.180318338999999 6.255656565 8.441444735999999 ]
------------------------------ Fine copia_v_d

275: dividi1_vv_d	<=>	v1 <- v1 / v2
parm0[XMIN] (5 : 5): [ 8.419340674000001 3.482809808 6.932805339 5.544149565 7.900224736 ]
parm0[XMAX] (5 : 5): [ 12.67431725 9.032985081 12.19219754 9.171903361 10.26385753 ]


parm0[XMIN] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]
------------------------------ Fine dividi_vv_d

278: dividi1_vv_d	<=>	v1 <- v1 / v2
parm0[XZERO] (5 : 5): [ 11.39247467 7.769541808 9.180318338999999 6.255656565 8.441444735999999 ]
parm0[XMAX] (5 : 5): [ 12.67431725 9.032985081 12.19219754 9.171903361 10.26385753 ]


parm0[XZERO] (5 : 5): [ 0.8988629876690203 0.86013003877782 0.7529666664997292 0.6820456255132146 0.8224436778595854 ]
------------------------------ Fine dividi_vv_d

287: copia_v_d	<=>	ris[st:end] <- v[st:end]
parm0[LAMBDA] (5 : 5): [ 1.040829206 0.833709414 1.036836698 0.989892399 1.171423905 ]
st = 1
end = 5


parm1[j][i] (5 : 5): [ 1.040829206 0.833709414 1.036836698 0.989892399 1.171423905 ]
------------------------------ Fine copia_v_d

287: copia_v_d	<=>	ris[st:end] <- v[st:end]
parm0[ALPHA] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
st = 1
end = 5


parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
------------------------------ Fine copia_v_d

287: copia_v_d	<=>	ris[st:end] <- v[st:end]
parm0[BETA] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
st = 1
end = 5


parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
------------------------------ Fine copia_v_d

287: copia_v_d	<=>	ris[st:end] <- v[st:end]
parm0[XMIN] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]
st = 1
end = 5


parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]
------------------------------ Fine copia_v_d

287: copia_v_d	<=>	ris[st:end] <- v[st:end]
parm0[XMAX] (5 : 5): [ 12.67431725 9.032985081 12.19219754 9.171903361 10.26385753 ]
st = 1
end = 5


parm1[j][i] (5 : 5): [ 12.67431725 9.032985081 12.19219754 9.171903361 10.26385753 ]
------------------------------ Fine copia_v_d

287: copia_v_d	<=>	ris[st:end] <- v[st:end]
parm0[XZERO] (5 : 5): [ 0.8988629876690203 0.86013003877782 0.7529666664997292 0.6820456255132146 0.8224436778595854 ]
st = 1
end = 5


parm1[j][i] (5 : 5): [ 0.8988629876690203 0.86013003877782 0.7529666664997292 0.6820456255132146 0.8224436778595854 ]
------------------------------ Fine copia_v_d


*** simulatenet1 ***

*** connectivity_modular1 ***
48: InitMatr_i
Mdiscr (5 x 5 : 5 x 5): [
	 2425208 0 0 0 0
	 2425208 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
val = 0


Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine InitMatr_i

53: seq_d	<=>	ris <- seq(da, a, incr)
da = 1
a = 5
incr = 1


tmp1_d (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine seq_d

54: exp_d	<=>	ris <- v ^ val
tmp1_d (5 : 5): [ 1 2 3 4 5 ]
val = -2.2


tmp2_d (5 : 5): [ 1 0.217637640824031 0.08919350686224783 0.04736614270344993 0.02899118654710781 ]
------------------------------ Fine exp_d

56: vettore2v_d		<=>	ris <- c(v1, v2)
tmp2_d (5 : 5): [ 1 0.217637640824031 0.08919350686224783 0.04736614270344993 0.02899118654710781 ]
scalare_d (1 : 1): [ 0 ]


Prob (6 : 6): [ 1 0.217637640824031 0.08919350686224783 0.04736614270344993 0.02899118654710781 0 ]
------------------------------ Fine vettore2v_d

58: somma_v_d	<=>	ris <- sum(v, na.rm=canc_NA)
Prob (6 : 6): [ 1 0.217637640824031 0.08919350686224783 0.04736614270344993 0.02899118654710781 0 ]
canc_NA = 0



ris: 1.383188476936837
------------------------------ Fine somma_v_d

58: dividi1_vs_d	<=>	v <- v / div
Prob (6 : 6): [ 1 0.217637640824031 0.08919350686224783 0.04736614270344993 0.02899118654710781 0 ]
div = 1.383


Prob (6 : 6): [ 0.722967272120837 0.1573448914973642 0.06448398634709048 0.03424417098119949 0.02095967905350884 0 ]
------------------------------ Fine dividi1_vs_d

61: InitVett_d
tmp2_d (6 : 16): [ 5.842414621812633e-308 0 0 0 0 0 ]
val = 0


tmp2_d (6 : 16): [ 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

63: vettore2v_d		<=>	ris <- c(v1, v2)
scalare_d (1 : 1): [ 5 ]
tmp2_d (6 : 16): [ 0 0 0 0 0 0 ]


Freq_out (7 : 7): [ 5 0 0 0 0 0 0 ]
------------------------------ Fine vettore2v_d

64: copia_v_d	<=>	ris[st:end] <- v[st:end]
Freq_out (7 : 7): [ 5 0 0 0 0 0 0 ]
st = 1
end = 7


Freq_in (7 : 7): [ 5 0 0 0 0 0 0 ]
------------------------------ Fine copia_v_d

66: moltiplica_vs_d	<=>	ris <- v1 * v2
Prob (6 : 6): [ 0.722967272120837 0.1573448914973642 0.06448398634709048 0.03424417098119949 0.02095967905350884 0 ]
val = 5


tmp1_d (6 : 16): [ 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
------------------------------ Fine moltiplica_vs_d

68: vettore2v_d		<=>	ris <- c(v1, v2)
scalare_d (1 : 1): [ 1.#QNAN ]
tmp1_d (6 : 16): [ 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]


STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
------------------------------ Fine vettore2v_d

69: copia_v_d	<=>	ris[st:end] <- v[st:end]
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
st = 1
end = 7


STin (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
------------------------------ Fine copia_v_d

72: InitVett_d
tmp1_d (7 : 16): [ 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 0 ]
val = 1


tmp1_d (7 : 16): [ 1 1 1 1 1 1 1 ]
------------------------------ Fine InitVett_d

73: moltiplica_vs_d	<=>	ris <- v1 * v2
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
val = 0.1


tmp2_d (7 : 16): [ 1.#QNAN 0.3614836360604186 0.07867244574868211 0.03224199317354524 0.01712208549059974 0.01047983952675442 0 ]
------------------------------ Fine moltiplica_vs_d

74: cbind2v_d	<=>	ris <- cbind(v1, v2)
tmp2_d (7 : 16): [ 1.#QNAN 0.3614836360604186 0.07867244574868211 0.03224199317354524 0.01712208549059974 0.01047983952675442 0 ]
tmp1_d (7 : 16): [ 1 1 1 1 1 1 1 ]


aus (7 x 2 : 7 x 2): [
	 1.#QNAN 1
	 0.3614836360604186 1
	 0.07867244574868211 1
	 0.03224199317354524 1
	 0.01712208549059974 1
	 0.01047983952675442 1
	 0 1
 ]
------------------------------ Fine cbind2v_d

76: max_righe_d	<=>	ris <- apply(m, 1, max)
aus (7 x 2 : 7 x 2): [
	 1.#QNAN 1
	 0.3614836360604186 1
	 0.07867244574868211 1
	 0.03224199317354524 1
	 0.01712208549059974 1
	 0.01047983952675442 1
	 0 1
 ]


toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
------------------------------ Fine max_righe_d

78: assegna_v_segm_d	<=>	v[st:end] <- val
STin (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
start = 7
end = 7
val = 0


STin (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
------------------------------ Fine assegna_v_segm_d

81: segmento_v_d	<=>	ris <- v[st:end]
Prob (6 : 6): [ 0.722967272120837 0.1573448914973642 0.06448398634709048 0.03424417098119949 0.02095967905350884 0 ]
start = 1
end = 5


tmp1_d (5 : 16): [ 0.722967272120837 0.1573448914973642 0.06448398634709048 0.03424417098119949 0.02095967905350884 ]
------------------------------ Fine segmento_v_d

82: moltiplica_vs_d	<=>	ris <- v1 * v2
tmp1_d (5 : 16): [ 0.722967272120837 0.1573448914973642 0.06448398634709048 0.03424417098119949 0.02095967905350884 ]
val = 5


tmp2_d (5 : 16): [ 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 ]
------------------------------ Fine moltiplica_vs_d

84: somma_v_d	<=>	ris <- sum(v, na.rm=canc_NA)
tmp1_d (5 : 16): [ 0.722967272120837 0.1573448914973642 0.06448398634709048 0.03424417098119949 0.02095967905350884 ]
canc_NA = 0



ris: 1
------------------------------ Fine somma_v_d

84: dividi1_vs_d	<=>	v <- v / div
tmp2_d (5 : 16): [ 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 ]
div = 1.000


tmp2_d (5 : 16): [ 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 ]
------------------------------ Fine dividi1_vs_d

85: assegna1_v_segmv_d	<=>	v1[st:end] <- v2
STin (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
start = 2
end = 6
tmp2_d (5 : 16): [ 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 ]


STin (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
------------------------------ Fine assegna1_v_segmv_d

96: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 5
incr = 1


h (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine seq_i

110: somma_righe_i	<=>	ris <- apply(m, 1, sum)
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]


Sin (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine somma_righe_i

112: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]


Sout (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine somma_colonne_i


*** cluster_coeff ***
19: trasponi_i	<=>	ris <- t(m)
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]


tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine trasponi_i

20: somma1_m_i	<=>	m1 <- m1 + m2
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]


tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine somma1_m_i

22: which_m_indxne_i	<=>	ris <- which(m!=val)
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
val = 0


ind (0 : 25): [ ]
------------------------------ Fine which_m_indxne_i

24: assegna1_ms_indx_i	<=>	m[indx] = val
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
ind (0 : 25): [ ]
val = 1


tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine assegna1_ms_indx_i

26: assegna1_s_diag_i	<=>	diag_i(m) <- s
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
val = 0


tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine assegna1_s_diag_i

31: InitVett_d
ris (5 : 5): [ 1.000000017727894 2 3 4 5 ]
val = 0


ris (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

35: somma_riga_i	<=>	ris <- sum(m[riga, ])
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 1


ris: 0
------------------------------ Fine somma_riga_i

37: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
r = 1
val = 0


neighbours (0 : 25): [ ]
------------------------------ Fine which_m_rowindxne_i

35: somma_riga_i	<=>	ris <- sum(m[riga, ])
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 2


ris: 0
------------------------------ Fine somma_riga_i

37: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
r = 2
val = 0


neighbours (0 : 25): [ ]
------------------------------ Fine which_m_rowindxne_i

35: somma_riga_i	<=>	ris <- sum(m[riga, ])
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 3


ris: 0
------------------------------ Fine somma_riga_i

37: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
r = 3
val = 0


neighbours (0 : 25): [ ]
------------------------------ Fine which_m_rowindxne_i

35: somma_riga_i	<=>	ris <- sum(m[riga, ])
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 4


ris: 0
------------------------------ Fine somma_riga_i

37: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
r = 4
val = 0


neighbours (0 : 25): [ ]
------------------------------ Fine which_m_rowindxne_i

35: somma_riga_i	<=>	ris <- sum(m[riga, ])
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 5


ris: 0
------------------------------ Fine somma_riga_i

37: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
tmpm_i (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
r = 5
val = 0


neighbours (0 : 25): [ ]
------------------------------ Fine which_m_rowindxne_i

69: media_v_d	<=>	ris <- mean(v)
ris (5 : 5): [ 0 0 0 0 0 ]


media = 0.000
------------------------------ Fine media_v_d


Stringhe allocate: 5 (225 interne); stringhe deallocate: 0 (15 interne)


*** module1 ***
44: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 5
incr = 1


tmp1_i (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine seq_i


*** sampleB ***

***sample***
tmp1_i (5 : 5): [ 1 2 3 4 5 ]
k = 1, replace = 0


ris (1 : 1): [ 1 ]
*****************************************


Stringhe allocate: 5 (240 interne); stringhe deallocate: 0 (15 interne)


Stringhe allocate: 5 (240 interne); stringhe deallocate: 0 (15 interne)


*** mod1 ***
18: InitMatr_i
ris (1 x 1 : 1 x 1): [
	 79848936
 ]
val = 0


ris (1 x 1 : 1 x 1): [
	 0
 ]
------------------------------ Fine InitMatr_i


Stringhe allocate: 5 (245 interne); stringhe deallocate: 0 (15 interne)


*** probmod ***
46: InitMatr_i
checkOUT (1 x 5 : 1 x 5): [
	 79848936 2425208 0 0 0
 ]
val = 0


checkOUT (1 x 5 : 1 x 5): [
	 0 0 0 0 0
 ]
------------------------------ Fine InitMatr_i

48: InitMatr_i
checkIN (1 x 5 : 1 x 5): [
	 79848936 2425208 0 0 0
 ]
val = 0


checkIN (1 x 5 : 1 x 5): [
	 0 0 0 0 0
 ]
------------------------------ Fine InitMatr_i

50: InitMatr_d
ris (1 x 5 : 1 x 5): [
	 1 0.217637640824031 0.08919350686224783 0.04736614270344993 0.02899118654710781
 ]
val = 0


ris (1 x 5 : 1 x 5): [
	 0 0 0 0 0
 ]
------------------------------ Fine InitMatr_d

52: somma_righe_i	<=>	ris <- apply(m, 1, sum)
ris (1 x 1 : 1 x 1): [
	 1
 ]


M_in (1 : 1): [ 1 ]
------------------------------ Fine somma_righe_i

54: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
ris (1 x 1 : 1 x 1): [
	 1
 ]


M_out (1 : 1): [ 1 ]
------------------------------ Fine somma_colonne_i

57: InitMatr_i
memory (1 x 3 : 1 x 3): [
	 79848936 2425208 0
 ]
val = -2147483648


memory (1 x 3 : 1 x 3): [
	 -2147483648 -2147483648 -2147483648
 ]
------------------------------ Fine InitMatr_i

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (1 x 3 : 1 x 3): [
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 1


tmp_i1 (0 : 3): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (1 x 3 : 1 x 3): [
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 1


tmp_i2 (0 : 3): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 3): [ ]
tmp_i2 (0 : 3): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

92: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sout (5 : 5): [ 0 0 0 0 0 ]
h (5 : 5): [ 1 2 3 4 5 ]


tmp_i1 (5 : 11): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 11): [ 0 0 0 0 0 ]
s = 1


ind (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 11): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 11): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


old1 (5 : 5): [ 5 5 5 5 5 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


old2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (5 : 5): [ 5 5 5 5 5 ]
s = -1


new1 (5 : 5): [ 4 4 4 4 4 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (5 : 5): [ 0 0 0 0 0 ]
s = 1


new2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 11): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


toll1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


toll2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (5 : 5): [ 5 5 5 5 5 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (5 : 5): [ 4 4 4 4 4 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (5 : 5): [ 5.842414621812633e-308 0 0 0 0 ]
val = 0


S1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (5 : 5): [ 0 0 0 0 0 ]
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]


a (5 : 5): [ -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 ]


a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (5 : 5): [ 1 1 1 1 1 ]
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]


b (5 : 5): [ -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 ]


b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]


tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]


m (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
complemento = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxNA_d

115: assegna1_vs_indx_d	<=>	v[indx] <- val
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
ind (0 : 5): [ ]
val = 0


a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine assegna1_vs_indx_d

117: assegna1_vs_indx_d	<=>	v[indx] <- val
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
ind (0 : 5): [ ]
val = 0


b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
------------------------------ Fine assegna1_vs_indx_d

119: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]


tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]
------------------------------ Fine cbind2v_d

120: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]


m (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine max_righe_d

122: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
m (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine f_aux_d

124: diff_vv_d	<=>	ris <- v1 - v2
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
toll2 (5 : 5): [ 1 1 1 1 1 ]


tmp_d1 (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
------------------------------ Fine diff_vv_d

125: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
val = 0

ind1 (0 : 5): [ ]
------------------------------ Fine which_v_indxlt_d

127: diff_vv_d	<=>	ris <- v1 - v2
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
toll2 (5 : 5): [ 1 1 1 1 1 ]


tmp_d1 (5 : 5): [ 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 ]
------------------------------ Fine diff_vv_d

128: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (5 : 5): [ 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 ]
val = 0


ind2 (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxgt_d

130: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (0 : 5): [ ]
ind2 (5 : 5): [ 1 2 3 4 5 ]


tmp_i1 (0 : 5): [ ]
------------------------------ Fine interseca_i

132: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
tmp_i1 (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

134: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
ind (0 : 5): [ ]
val = 0


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
val = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
ind (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (5 : 5): [ 0 0 0 0 0 ]
S2 (5 : 5): [ 1 1 1 1 1 ]


ris (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
ris (5 : 5): [ 1 1 1 1 1 ]
div = 2.000


ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (405 interne); stringhe deallocate: 0 (115 interne)

95: which_v_indxne_d	<=>	ris <- which(v != val)
ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
val = -1.#INF


indok (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxne_d

97: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkOUT (1 x 5 : 1 x 5): [
	 0 0 0 0 0
 ]
riga = 1
indok (5 : 5): [ 1 2 3 4 5 ]
val = 1


checkOUT (1 x 5 : 1 x 5): [
	 1 1 1 1 1
 ]
------------------------------ Fine aggiungi_riga_indx_i

104: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 5
incr = 1


tmp_i1 (5 : 11): [ 1 2 3 4 5 ]
------------------------------ Fine seq_i

105: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (5 : 11): [ 1 2 3 4 5 ]
indok (5 : 5): [ 1 2 3 4 5 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (5 : 11): [ 1 2 3 4 5 ]
st = 1
end = 5


indInf (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (5 : 5): [ 1 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (5 : 5): [ 1 2 3 4 5 ]
indx = 1


indInf (4 : 5): [ 2 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (4 : 5): [ 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (4 : 5): [ 2 3 4 5 ]
indx = 1


indInf (3 : 5): [ 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (3 : 5): [ 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 5): [ 3 4 5 ]
indx = 1


indInf (2 : 5): [ 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 4
indInf (2 : 5): [ 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 5): [ 4 5 ]
indx = 1


indInf (1 : 5): [ 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 5
indInf (1 : 5): [ 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 5): [ 5 ]
indx = 1


indInf (0 : 5): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 5): [ ]
------------------------------ Fine setdiff_i

107: copia_v_indx_d	<=>	ris <- v[indx]
ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
indok (5 : 5): [ 1 2 3 4 5 ]


tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine copia_v_indx_d

111: min_v_d	<=>	ris <- min(v)
tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]


min = 0.5
------------------------------ Fine min_v_d

112: assegna1_vs_indx_d	<=>	v[indx] <- val
ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
indInf (0 : 5): [ ]
val = -1


ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine assegna1_vs_indx_d

128: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 0 0 0 0 ]
h (5 : 5): [ 1 2 3 4 5 ]


tmp_i1 (5 : 11): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 11): [ 0 0 0 0 0 ]
s = 1


ind (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 11): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 11): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


old1 (5 : 5): [ 5 5 5 5 5 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


old2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (5 : 5): [ 5 5 5 5 5 ]
s = -1


new1 (5 : 5): [ 4 4 4 4 4 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (5 : 5): [ 0 0 0 0 0 ]
s = 1


new2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 11): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


toll1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


toll2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (5 : 5): [ 5 5 5 5 5 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (5 : 5): [ 4 4 4 4 4 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (5 : 5): [ 3.614835774595548 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
val = 0


S1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (5 : 5): [ 0 0 0 0 0 ]
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]


a (5 : 5): [ -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 ]


a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (5 : 5): [ 1 1 1 1 1 ]
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]


b (5 : 5): [ -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 ]


b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]


tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]


m (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
complemento = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxNA_d

115: assegna1_vs_indx_d	<=>	v[indx] <- val
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
ind (0 : 5): [ ]
val = 0


a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine assegna1_vs_indx_d

117: assegna1_vs_indx_d	<=>	v[indx] <- val
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
ind (0 : 5): [ ]
val = 0


b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
------------------------------ Fine assegna1_vs_indx_d

119: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]


tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]
------------------------------ Fine cbind2v_d

120: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]


m (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine max_righe_d

122: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
m (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine f_aux_d

124: diff_vv_d	<=>	ris <- v1 - v2
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
toll2 (5 : 5): [ 1 1 1 1 1 ]


tmp_d1 (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
------------------------------ Fine diff_vv_d

125: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
val = 0

ind1 (0 : 5): [ ]
------------------------------ Fine which_v_indxlt_d

127: diff_vv_d	<=>	ris <- v1 - v2
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
toll2 (5 : 5): [ 1 1 1 1 1 ]


tmp_d1 (5 : 5): [ 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 ]
------------------------------ Fine diff_vv_d

128: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (5 : 5): [ 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 ]
val = 0


ind2 (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxgt_d

130: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (0 : 5): [ ]
ind2 (5 : 5): [ 1 2 3 4 5 ]


tmp_i1 (0 : 5): [ ]
------------------------------ Fine interseca_i

132: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
tmp_i1 (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

134: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
ind (0 : 5): [ ]
val = 0


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
val = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
ind (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (5 : 5): [ 0 0 0 0 0 ]
S2 (5 : 5): [ 1 1 1 1 1 ]


ris (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
ris (5 : 5): [ 1 1 1 1 1 ]
div = 2.000


ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (525 interne); stringhe deallocate: 0 (215 interne)

131: which_v_indxne_d	<=>	ris <- which(v != val)
ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
val = -1.#INF


indok (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxne_d

133: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkIN (1 x 5 : 1 x 5): [
	 0 0 0 0 0
 ]
riga = 1
indok (5 : 5): [ 1 2 3 4 5 ]
val = 1


checkIN (1 x 5 : 1 x 5): [
	 1 1 1 1 1
 ]
------------------------------ Fine aggiungi_riga_indx_i

141: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 5
incr = 1


tmp_i1 (5 : 11): [ 1 2 3 4 5 ]
------------------------------ Fine seq_i

142: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (5 : 11): [ 1 2 3 4 5 ]
indok (5 : 5): [ 1 2 3 4 5 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (5 : 11): [ 1 2 3 4 5 ]
st = 1
end = 5


indInf (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (5 : 5): [ 1 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (5 : 5): [ 1 2 3 4 5 ]
indx = 1


indInf (4 : 5): [ 2 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (4 : 5): [ 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (4 : 5): [ 2 3 4 5 ]
indx = 1


indInf (3 : 5): [ 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (3 : 5): [ 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 5): [ 3 4 5 ]
indx = 1


indInf (2 : 5): [ 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 4
indInf (2 : 5): [ 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 5): [ 4 5 ]
indx = 1


indInf (1 : 5): [ 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 5
indInf (1 : 5): [ 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 5): [ 5 ]
indx = 1


indInf (0 : 5): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 5): [ ]
------------------------------ Fine setdiff_i

144: copia_v_indx_d	<=>	ris <- v[indx]
ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
indok (5 : 5): [ 1 2 3 4 5 ]


tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine copia_v_indx_d

148: min_v_d	<=>	ris <- min(v)
tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]


min = 0.5
------------------------------ Fine min_v_d

149: assegna1_vs_indx_d	<=>	v[indx] <- val
ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
indInf (0 : 5): [ ]
val = -1


ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine assegna1_vs_indx_d

159: somma_vv_d	<=>	ris <- v1 + v2
ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]


tmp_d1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (1 x 5 : 1 x 5): [
	 0 0 0 0 0
 ]
riga = 1
tmp_d1 (5 : 5): [ 1 1 1 1 1 ]


ris (1 x 5 : 1 x 5): [
	 1 1 1 1 1
 ]
------------------------------ Fine aggiungi_mv_riga_d

168: somma_m_d	<=>	ris <- sum(m)
ris (1 x 5 : 1 x 5): [
	 1 1 1 1 1
 ]


ris: 5
------------------------------ Fine somma_m_d

173: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
checkIN (1 x 5 : 1 x 5): [
	 1 1 1 1 1
 ]


aus (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_colonne_i

175: which_v_indxne_i	<=>	ris <- which(v != val)
aus (5 : 5): [ 1 1 1 1 1 ]
val = 0


tmp_i1 (5 : 11): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxne_i

186: somma_righe_i	<=>	ris <- apply(m, 1, sum)
checkIN (1 x 5 : 1 x 5): [
	 1 1 1 1 1
 ]


rs (1 : 1): [ 5 ]
------------------------------ Fine somma_righe_i

188: ordine_i	<=>	ris <- order(v, decreasing=decr)
rs (1 : 1): [ 5 ]
decr = 0


ord_ind (1 : 1): [ 1 ]
------------------------------ Fine ordine_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (1 x 5 : 1 x 5): [
	 1 1 1 1 1
 ]
r = 1
val = 0


I_add (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
I (0 : 0): [ ]
I_add (5 : 5): [ 1 2 3 4 5 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (5 : 5): [ 1 2 3 4 5 ]


ris (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine unione1_i

216: assegna1_mindxlt_i	<=>	m1[which(m2<val1)] <- val2
checkOUT (1 x 5 : 1 x 5): [
	 1 1 1 1 1
 ]
checkOUT (1 x 5 : 1 x 5): [
	 1 1 1 1 1
 ]
val1 = 0
val2 = 0


checkOUT (1 x 5 : 1 x 5): [
	 1 1 1 1 1
 ]
------------------------------ Fine assegna1_mindxlt_i

218: assegna1_m_indxgt_i	<=>	m1[which(m2>val1)] <- val2
checkOUT (1 x 5 : 1 x 5): [
	 1 1 1 1 1
 ]
checkOUT (1 x 5 : 1 x 5): [
	 1 1 1 1 1
 ]
val1 = 0
val2 = 1


checkOUT (1 x 5 : 1 x 5): [
	 1 1 1 1 1
 ]
------------------------------ Fine assegna1_m_indxgt_i

220: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
checkOUT (1 x 5 : 1 x 5): [
	 1 1 1 1 1
 ]


aus (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_colonne_i

222: which_v_indxne_i	<=>	ris <- which(v != val)
aus (5 : 5): [ 1 1 1 1 1 ]
val = 0


tmp_i1 (5 : 11): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxne_i

232: somma_righe_i	<=>	ris <- apply(m, 1, sum)
checkOUT (1 x 5 : 1 x 5): [
	 1 1 1 1 1
 ]


rs (1 : 1): [ 5 ]
------------------------------ Fine somma_righe_i

234: ordine_i	<=>	ris <- order(v, decreasing=decr)
rs (1 : 1): [ 5 ]
decr = 0


ord_ind (1 : 1): [ 1 ]
------------------------------ Fine ordine_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (1 x 5 : 1 x 5): [
	 1 1 1 1 1
 ]
r = 1
val = 0


I_add (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (0 : 5): [ ]
I_add (5 : 5): [ 1 2 3 4 5 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (5 : 5): [ 1 2 3 4 5 ]


ris (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine unione1_i


Stringhe allocate: 5 (570 interne); stringhe deallocate: 0 (335 interne)


Stringhe allocate: 5 (575 interne); stringhe deallocate: 0 (350 interne)


*** module2 ***
44: seq_i	<=>	ris <- seq(da, a, incr)
da = 2
a = 5
incr = 1


tmp1_i (4 : 4): [ 2 3 4 5 ]
------------------------------ Fine seq_i


*** sampleB ***

***sample***
tmp1_i (4 : 4): [ 2 3 4 5 ]
k = 1, replace = 0


ris (1 : 1): [ 2 ]
*****************************************


Stringhe allocate: 5 (585 interne); stringhe deallocate: 0 (350 interne)


Stringhe allocate: 5 (585 interne); stringhe deallocate: 0 (350 interne)


*** mod2 ***
17: InitMatr_i
ris (2 x 2 : 2 x 2): [
	 79851712 1918959715
	 778334061 25390
 ]
val = 0


ris (2 x 2 : 2 x 2): [
	 0 0
	 0 0
 ]
------------------------------ Fine InitMatr_i


Stringhe allocate: 5 (590 interne); stringhe deallocate: 0 (350 interne)


*** probmod ***
46: InitMatr_i
checkOUT (2 x 5 : 2 x 5): [
	 79854104 0 0 0 0
	 1072693248 1072693248 1072693248 1072693248 1072693248
 ]
val = 0


checkOUT (2 x 5 : 2 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine InitMatr_i

48: InitMatr_i
checkIN (2 x 5 : 2 x 5): [
	 79852984 0 0 0 0
	 1071644672 1071644672 1071644672 1071644672 1071644672
 ]
val = 0


checkIN (2 x 5 : 2 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine InitMatr_i

50: InitMatr_d
ris (2 x 5 : 2 x 5): [
	 3.614835774563673 3.614836360604185 3.614836360604185 2.614836360604185 2.614836360604185
	 3.614836360604185 3.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185
 ]
val = 0


ris (2 x 5 : 2 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine InitMatr_d

52: somma_righe_i	<=>	ris <- apply(m, 1, sum)
ris (2 x 2 : 2 x 2): [
	 0 0
	 1 0
 ]


M_in (2 : 2): [ 0 1 ]
------------------------------ Fine somma_righe_i

54: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
ris (2 x 2 : 2 x 2): [
	 0 0
	 1 0
 ]


M_out (2 : 2): [ 1 0 ]
------------------------------ Fine somma_colonne_i

57: InitMatr_i
memory (2 x 3 : 2 x 3): [
	 79845144 3 5
	 2 4 0
 ]
val = -2147483648


memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
------------------------------ Fine InitMatr_i

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 0


tmp_i1 (0 : 6): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 1


tmp_i2 (0 : 6): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 6): [ ]
tmp_i2 (0 : 6): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

92: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sout (5 : 5): [ 0 0 0 0 0 ]
h (5 : 5): [ 1 2 3 4 5 ]


tmp_i1 (5 : 6): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 6): [ 0 0 0 0 0 ]
s = 1


ind (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 6): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 6): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


old1 (5 : 5): [ 5 5 5 5 5 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


old2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (5 : 5): [ 5 5 5 5 5 ]
s = -1


new1 (5 : 5): [ 4 4 4 4 4 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (5 : 5): [ 0 0 0 0 0 ]
s = 1


new2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 6): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


toll1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


toll2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (5 : 5): [ 5 5 5 5 5 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (5 : 5): [ 4 4 4 4 4 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (5 : 5): [ 3.945157659819188e-316 0 0 0 0 ]
val = 0


S1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (5 : 5): [ 0 0 0 0 0 ]
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]


a (5 : 5): [ -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 ]


a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (5 : 5): [ 1 1 1 1 1 ]
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]


b (5 : 5): [ -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 ]


b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]


tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]


m (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
complemento = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxNA_d

115: assegna1_vs_indx_d	<=>	v[indx] <- val
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
ind (0 : 5): [ ]
val = 0


a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine assegna1_vs_indx_d

117: assegna1_vs_indx_d	<=>	v[indx] <- val
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
ind (0 : 5): [ ]
val = 0


b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
------------------------------ Fine assegna1_vs_indx_d

119: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]


tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]
------------------------------ Fine cbind2v_d

120: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]


m (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine max_righe_d

122: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
m (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine f_aux_d

124: diff_vv_d	<=>	ris <- v1 - v2
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
toll2 (5 : 5): [ 1 1 1 1 1 ]


tmp_d1 (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
------------------------------ Fine diff_vv_d

125: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
val = 0

ind1 (0 : 5): [ ]
------------------------------ Fine which_v_indxlt_d

127: diff_vv_d	<=>	ris <- v1 - v2
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
toll2 (5 : 5): [ 1 1 1 1 1 ]


tmp_d1 (5 : 5): [ 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 ]
------------------------------ Fine diff_vv_d

128: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (5 : 5): [ 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 ]
val = 0


ind2 (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxgt_d

130: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (0 : 5): [ ]
ind2 (5 : 5): [ 1 2 3 4 5 ]


tmp_i1 (0 : 5): [ ]
------------------------------ Fine interseca_i

132: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
tmp_i1 (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

134: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
ind (0 : 5): [ ]
val = 0


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
val = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
ind (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (5 : 5): [ 0 0 0 0 0 ]
S2 (5 : 5): [ 1 1 1 1 1 ]


ris (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
ris (5 : 5): [ 1 1 1 1 1 ]
div = 2.000


ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (750 interne); stringhe deallocate: 0 (450 interne)

95: which_v_indxne_d	<=>	ris <- which(v != val)
ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
val = -1.#INF


indok (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxne_d

97: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkOUT (2 x 5 : 2 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 1
indok (5 : 5): [ 1 2 3 4 5 ]
val = 1


checkOUT (2 x 5 : 2 x 5): [
	 1 1 1 1 1
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_riga_indx_i

104: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 5
incr = 1


tmp_i1 (5 : 6): [ 1 2 3 4 5 ]
------------------------------ Fine seq_i

105: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (5 : 6): [ 1 2 3 4 5 ]
indok (5 : 5): [ 1 2 3 4 5 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (5 : 6): [ 1 2 3 4 5 ]
st = 1
end = 5


indInf (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (5 : 5): [ 1 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (5 : 5): [ 1 2 3 4 5 ]
indx = 1


indInf (4 : 5): [ 2 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (4 : 5): [ 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (4 : 5): [ 2 3 4 5 ]
indx = 1


indInf (3 : 5): [ 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (3 : 5): [ 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 5): [ 3 4 5 ]
indx = 1


indInf (2 : 5): [ 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 4
indInf (2 : 5): [ 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 5): [ 4 5 ]
indx = 1


indInf (1 : 5): [ 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 5
indInf (1 : 5): [ 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 5): [ 5 ]
indx = 1


indInf (0 : 5): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 5): [ ]
------------------------------ Fine setdiff_i

107: copia_v_indx_d	<=>	ris <- v[indx]
ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
indok (5 : 5): [ 1 2 3 4 5 ]


tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine copia_v_indx_d

111: min_v_d	<=>	ris <- min(v)
tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]


min = 0.5
------------------------------ Fine min_v_d

112: assegna1_vs_indx_d	<=>	v[indx] <- val
ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
indInf (0 : 5): [ ]
val = -1


ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine assegna1_vs_indx_d

155: InitVett_d
S_in (5 : 5): [ 3.945157659819188e-316 0 0 0 0 ]
val = 0


S_in (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

156: aggiungi_ms_riga_i	<=>	m[riga,] <- val # riga <= dim(m)[0] + 1
checkIN (2 x 5 : 2 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 1, val = 1


checkIN (2 x 5 : 2 x 5): [
	 1 1 1 1 1
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_ms_riga_i

159: somma_vv_d	<=>	ris <- v1 + v2
ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
S_in (5 : 5): [ 0 0 0 0 0 ]


tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (2 x 5 : 2 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 1
tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]


ris (2 x 5 : 2 x 5): [
	 0.5 0.5 0.5 0.5 0.5
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_d

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 1


tmp_i1 (0 : 6): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (2 x 3 : 2 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 0


tmp_i2 (0 : 6): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 6): [ ]
tmp_i2 (0 : 6): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

119: InitVett_d
ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
val = 0


ris (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

122: InitVett_i
tmp_i1 (5 : 6): [ 1 2 3 4 5 ]
val = 1


tmp_i1 (5 : 6): [ 1 1 1 1 1 ]
------------------------------ Fine InitVett_i

123: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
checkOUT (2 x 5 : 2 x 5): [
	 1 1 1 1 1
	 0 0 0 0 0
 ]
riga = 2
tmp_i1 (5 : 6): [ 1 1 1 1 1 ]


checkOUT (2 x 5 : 2 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
 ]
------------------------------ Fine aggiungi_mv_riga_i

128: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 0 0 0 0 ]
h (5 : 5): [ 1 2 3 4 5 ]


tmp_i1 (5 : 6): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 6): [ 0 0 0 0 0 ]
s = 1


ind (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 6): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 6): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


old1 (5 : 5): [ 5 5 5 5 5 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


old2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (5 : 5): [ 5 5 5 5 5 ]
s = -1


new1 (5 : 5): [ 4 4 4 4 4 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (5 : 5): [ 0 0 0 0 0 ]
s = 1


new2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 6): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


toll1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


toll2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (5 : 5): [ 5 5 5 5 5 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (5 : 5): [ 4 4 4 4 4 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
val = 0


S1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (5 : 5): [ 0 0 0 0 0 ]
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]


a (5 : 5): [ -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 ]


a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (5 : 5): [ 1 1 1 1 1 ]
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]


b (5 : 5): [ -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 ]


b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]


tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]


m (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
complemento = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxNA_d

115: assegna1_vs_indx_d	<=>	v[indx] <- val
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
ind (0 : 5): [ ]
val = 0


a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine assegna1_vs_indx_d

117: assegna1_vs_indx_d	<=>	v[indx] <- val
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
ind (0 : 5): [ ]
val = 0


b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
------------------------------ Fine assegna1_vs_indx_d

119: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]


tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]
------------------------------ Fine cbind2v_d

120: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]


m (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine max_righe_d

122: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
m (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine f_aux_d

124: diff_vv_d	<=>	ris <- v1 - v2
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
toll2 (5 : 5): [ 1 1 1 1 1 ]


tmp_d1 (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
------------------------------ Fine diff_vv_d

125: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
val = 0

ind1 (0 : 5): [ ]
------------------------------ Fine which_v_indxlt_d

127: diff_vv_d	<=>	ris <- v1 - v2
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
toll2 (5 : 5): [ 1 1 1 1 1 ]


tmp_d1 (5 : 5): [ 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 ]
------------------------------ Fine diff_vv_d

128: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (5 : 5): [ 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 ]
val = 0


ind2 (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxgt_d

130: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (0 : 5): [ ]
ind2 (5 : 5): [ 1 2 3 4 5 ]


tmp_i1 (0 : 5): [ ]
------------------------------ Fine interseca_i

132: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
tmp_i1 (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

134: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
ind (0 : 5): [ ]
val = 0


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
val = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
ind (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (5 : 5): [ 0 0 0 0 0 ]
S2 (5 : 5): [ 1 1 1 1 1 ]


S_in (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
S_in (5 : 5): [ 1 1 1 1 1 ]
div = 2.000


S_in (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (870 interne); stringhe deallocate: 0 (550 interne)

131: which_v_indxne_d	<=>	ris <- which(v != val)
S_in (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
val = -1.#INF


indok (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxne_d

133: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkIN (2 x 5 : 2 x 5): [
	 1 1 1 1 1
	 0 0 0 0 0
 ]
riga = 2
indok (5 : 5): [ 1 2 3 4 5 ]
val = 1


checkIN (2 x 5 : 2 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
 ]
------------------------------ Fine aggiungi_riga_indx_i

141: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 5
incr = 1


tmp_i1 (5 : 6): [ 1 2 3 4 5 ]
------------------------------ Fine seq_i

142: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (5 : 6): [ 1 2 3 4 5 ]
indok (5 : 5): [ 1 2 3 4 5 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (5 : 6): [ 1 2 3 4 5 ]
st = 1
end = 5


indInf (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (5 : 5): [ 1 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (5 : 5): [ 1 2 3 4 5 ]
indx = 1


indInf (4 : 5): [ 2 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (4 : 5): [ 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (4 : 5): [ 2 3 4 5 ]
indx = 1


indInf (3 : 5): [ 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (3 : 5): [ 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 5): [ 3 4 5 ]
indx = 1


indInf (2 : 5): [ 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 4
indInf (2 : 5): [ 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 5): [ 4 5 ]
indx = 1


indInf (1 : 5): [ 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 5
indInf (1 : 5): [ 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 5): [ 5 ]
indx = 1


indInf (0 : 5): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 5): [ ]
------------------------------ Fine setdiff_i

144: copia_v_indx_d	<=>	ris <- v[indx]
S_in (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
indok (5 : 5): [ 1 2 3 4 5 ]


tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine copia_v_indx_d

148: min_v_d	<=>	ris <- min(v)
tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]


min = 0.5
------------------------------ Fine min_v_d

149: assegna1_vs_indx_d	<=>	v[indx] <- val
S_in (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
indInf (0 : 5): [ ]
val = -1


S_in (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine assegna1_vs_indx_d

159: somma_vv_d	<=>	ris <- v1 + v2
ris (5 : 5): [ 0 0 0 0 0 ]
S_in (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]


tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (2 x 5 : 2 x 5): [
	 0.5 0.5 0.5 0.5 0.5
	 0 0 0 0 0
 ]
riga = 2
tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]


ris (2 x 5 : 2 x 5): [
	 0.5 0.5 0.5 0.5 0.5
	 0.5 0.5 0.5 0.5 0.5
 ]
------------------------------ Fine aggiungi_mv_riga_d

168: somma_m_d	<=>	ris <- sum(m)
ris (2 x 5 : 2 x 5): [
	 0.5 0.5 0.5 0.5 0.5
	 0.5 0.5 0.5 0.5 0.5
 ]


ris: 5
------------------------------ Fine somma_m_d

173: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
checkIN (2 x 5 : 2 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
 ]


aus (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_colonne_i

175: which_v_indxne_i	<=>	ris <- which(v != val)
aus (5 : 5): [ 2 2 2 2 2 ]
val = 0


tmp_i1 (5 : 6): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxne_i

186: somma_righe_i	<=>	ris <- apply(m, 1, sum)
checkIN (2 x 5 : 2 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
 ]


rs (2 : 2): [ 5 5 ]
------------------------------ Fine somma_righe_i

188: ordine_i	<=>	ris <- order(v, decreasing=decr)
rs (2 : 2): [ 5 5 ]
decr = 0


ord_ind (2 : 2): [ 1 2 ]
------------------------------ Fine ordine_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (2 x 5 : 2 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
 ]
r = 1
val = 0


I_add (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
I (0 : 0): [ ]
I_add (5 : 10): [ 1 2 3 4 5 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (5 : 5): [ 1 2 3 4 5 ]


ris (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine unione1_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (2 x 5 : 2 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
 ]
r = 2
val = 0


I_add (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
ris (5 : 5): [ 1 2 3 4 5 ]
I_add (5 : 10): [ 1 2 3 4 5 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (10 : 10): [ 1 2 3 4 5 1 2 3 4 5 ]


ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine unione1_i

216: assegna1_mindxlt_i	<=>	m1[which(m2<val1)] <- val2
checkOUT (2 x 5 : 2 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
 ]
checkOUT (2 x 5 : 2 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
 ]
val1 = 0
val2 = 0


checkOUT (2 x 5 : 2 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
 ]
------------------------------ Fine assegna1_mindxlt_i

218: assegna1_m_indxgt_i	<=>	m1[which(m2>val1)] <- val2
checkOUT (2 x 5 : 2 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
 ]
checkOUT (2 x 5 : 2 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
 ]
val1 = 0
val2 = 1


checkOUT (2 x 5 : 2 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
 ]
------------------------------ Fine assegna1_m_indxgt_i

220: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
checkOUT (2 x 5 : 2 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
 ]


aus (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_colonne_i

222: which_v_indxne_i	<=>	ris <- which(v != val)
aus (5 : 5): [ 2 2 2 2 2 ]
val = 0


tmp_i1 (5 : 6): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxne_i

232: somma_righe_i	<=>	ris <- apply(m, 1, sum)
checkOUT (2 x 5 : 2 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
 ]


rs (2 : 2): [ 5 5 ]
------------------------------ Fine somma_righe_i

234: ordine_i	<=>	ris <- order(v, decreasing=decr)
rs (2 : 2): [ 5 5 ]
decr = 0


ord_ind (2 : 2): [ 1 2 ]
------------------------------ Fine ordine_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (2 x 5 : 2 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
 ]
r = 1
val = 0


I_add (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (0 : 10): [ ]
I_add (5 : 10): [ 1 2 3 4 5 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (5 : 5): [ 1 2 3 4 5 ]


ris (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine unione1_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (2 x 5 : 2 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
 ]
r = 2
val = 0


I_add (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (5 : 5): [ 1 2 3 4 5 ]
I_add (5 : 10): [ 1 2 3 4 5 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (10 : 10): [ 1 2 3 4 5 1 2 3 4 5 ]


ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine unione1_i


Stringhe allocate: 5 (935 interne); stringhe deallocate: 0 (690 interne)


Stringhe allocate: 5 (940 interne); stringhe deallocate: 0 (700 interne)


*** module3 ***
51: seq_i	<=>	ris <- seq(da, a, incr)
da = 2
a = 5
incr = 1


tmp1_i (4 : 4): [ 2 3 4 5 ]
------------------------------ Fine seq_i


*** sampleB ***

***sample***
tmp1_i (4 : 4): [ 2 3 4 5 ]
k = 1, replace = 0


ris (1 : 1): [ 4 ]
*****************************************


Stringhe allocate: 5 (950 interne); stringhe deallocate: 0 (700 interne)


Stringhe allocate: 5 (950 interne); stringhe deallocate: 0 (700 interne)

54: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 3
incr = 1


tmp1_i (3 : 4): [ 1 2 3 ]
------------------------------ Fine seq_i


*** sampleB ***

***sample***
tmp1_i (3 : 4): [ 1 2 3 ]
k = 1, replace = 0


ris (1 : 1): [ 3 ]
*****************************************


Stringhe allocate: 5 (955 interne); stringhe deallocate: 0 (700 interne)


Stringhe allocate: 5 (955 interne); stringhe deallocate: 0 (700 interne)


*** mod3 ***
33: InitMatr_i
ris (4 x 4 : 4 x 4): [
	 79851520 0 0 0
	 79854808 281 0 173
	 0 22 0 1
	 173 5 222 0
 ]
val = 0


ris (4 x 4 : 4 x 4): [
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
 ]
------------------------------ Fine InitMatr_i

34: copia_v_d	<=>	ris[st:end] <- v[st:end]
STin (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
st = 1
end = 7


STin (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
------------------------------ Fine copia_v_d

35: copia_v_d	<=>	ris[st:end] <- v[st:end]
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
st = 1
end = 7


STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
------------------------------ Fine copia_v_d

39: segmento_v_d	<=>	ris <- v[st:end]
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
start = 2
end = 2


tmp1_d (1 : 1): [ 3.614836360604185 ]
------------------------------ Fine segmento_v_d

40: somma_v_d	<=>	ris <- sum(v, na.rm=canc_NA)
tmp1_d (1 : 1): [ 3.614836360604185 ]
canc_NA = 1



ris: 3.614836360604185
------------------------------ Fine somma_v_d

43: segmento_v_d	<=>	ris <- v[st:end]
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
start = 2
end = 2


p (1 : 1): [ 3.614836360604185 ]
------------------------------ Fine segmento_v_d

44: dividi1_vs_d	<=>	v <- v / div
p (1 : 1): [ 3.614836360604185 ]
div = 3.615


p (1 : 1): [ 1 ]
------------------------------ Fine dividi1_vs_d

61: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 1
incr = 1


tmp1_i (1 : 1): [ 1 ]
------------------------------ Fine seq_i


*** sampleB_p ***
25: rep_v_i	<=>	ris <- rep(v, rip)
tmp1_i (1 : 1): [ 1 ]
rip = 3


ris (3 : 3): [ 1 1 1 ]
------------------------------ Fine rep_v_i

64: somma_v_i	<=>	ris <- sum(v, na.rm=canc_NA)
ris (3 : 3): [ 1 1 1 ]
canc_NA = 0



ris: 3
------------------------------ Fine somma_v_i

131: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 1
incr = 1


tmp1_i (1 : 1): [ 1 ]
------------------------------ Fine seq_i

133: assegna1_m_vv_i	<=>	m[vr, vc] <- val
ris (4 x 4 : 4 x 4): [
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
 ]
tmp1_i (1 : 1): [ 1 ]
scalare_i (1 : 1): [ 2 ]
val = 1


ris (4 x 4 : 4 x 4): [
	 0 1 0 0
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
 ]
------------------------------ Fine assegna1_m_vv_i

135: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 1
incr = 1


indS (1 : 1): [ 1 ]
------------------------------ Fine seq_i

137: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 1
incr = 1


tmp2_i (1 : 1): [ 1 ]
------------------------------ Fine seq_i

138: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp2_i (1 : 1): [ 1 ]
indS (1 : 1): [ 1 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp2_i (1 : 1): [ 1 ]
st = 1
end = 1


indBS (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indBS (1 : 1): [ 1 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indBS (1 : 1): [ 1 ]
indx = 1


indBS (0 : 1): [ ]
------------------------------ Fine elimina1_indx_i



indBS (0 : 1): [ ]
------------------------------ Fine setdiff_i

150: segmento_v_d	<=>	ris <- v[st:end]
STin (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
start = 1
end = 4


tmp1_d (4 : 6): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 ]
------------------------------ Fine segmento_v_d

151: somma_v_d	<=>	ris <- sum(v, na.rm=canc_NA)
tmp1_d (4 : 6): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 ]
canc_NA = 1



ris: 4.723980749826459
------------------------------ Fine somma_v_d

153: somma_righe_i	<=>	ris <- apply(m, 1, sum)
ris (4 x 4 : 4 x 4): [
	 0 1 0 0
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
 ]


Sin (4 : 4): [ 1 0 0 0 ]
------------------------------ Fine somma_righe_i

157: segmento1_v_d	<=>	v <- v[st:end]
STin (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
start = 1
end = 4


STin (4 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 ]
------------------------------ Fine segmento1_v_d

167: dividi1_vs_d	<=>	v <- v / div
STin (4 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 ]
div = 1.575


STin (4 : 7): [ 1.#QNAN 2.295629397349035 0.499615366245336 0.204755236405629 ]
------------------------------ Fine dividi1_vs_d

169: max_v_i		<=>	ris <- max(v)
Sin (4 : 4): [ 1 0 0 0 ]


max = 1
------------------------------ Fine max_v_i

171: seq_i	<=>	ris <- seq(da, a, incr)
da = 0
a = 2
incr = 1


tmp2_i (3 : 5): [ 0 1 2 ]
------------------------------ Fine seq_i


*** hist1 ***
Sin (4 : 4): [ 1 0 0 0 ]
tmp2_i (3 : 5): [ 0 1 2 ]
right = 0
include_border = 1
naok = 0
29: InitVett_i
tmp1_i (2 : 4): [ 79854328 1071644672 ]
val = 0


tmp1_i (2 : 4): [ 0 0 ]
------------------------------ Fine InitVett_i



tmp1_i (2 : 4): [ 3 1 ]

Stringhe allocate: 5 (1020 interne); stringhe deallocate: 0 (700 interne)

173: dividi_vs_i	ris <- v / div
tmp1_i (2 : 4): [ 3 1 ]
div = 4.000


Freq_in (2 : 2): [ 0.75 0.25 ]
------------------------------ Fine dividi_vs_i

175: assegna_v_indx_i	<=>	ris <-v[indx] senza sforamento dei limiti
Sin (4 : 4): [ 1 0 0 0 ]
indS (1 : 1): [ 1 ]


tmp2_i (1 : 5): [ 1 ]
------------------------------ Fine assegna_v_indx_i

177: InitVett_d
tmp3_d (4 : 4): [ 1.0649426831861e-313 1.060997895581449e-313 0 3.904773919685674e-316 ]
val = 1.#INF


tmp3_d (4 : 4): [ 1.#INF 1.#INF 1.#INF 1.#INF ]
------------------------------ Fine InitVett_d


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp2_i (1 : 5): [ 1 ]
s = 1


ind (1 : 1): [ 2 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp2_i (1 : 5): [ 1 ]
s = 1


tmp_i1 (1 : 1): [ 2 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (4 : 7): [ 1.#QNAN 2.295629397349035 0.499615366245336 0.204755236405629 ]
tmp_i1 (1 : 1): [ 2 ]


T1 (1 : 1): [ 2.295629397349035 ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (1 : 1): [ 2 ]
s = 1


tmp_i1 (1 : 1): [ 3 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (4 : 7): [ 1.#QNAN 2.295629397349035 0.499615366245336 0.204755236405629 ]
tmp_i1 (1 : 1): [ 3 ]


T2 (1 : 1): [ 0.499615366245336 ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp2_i (1 : 5): [ 1 ]
s = 1


tmp_i1 (1 : 1): [ 2 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (2 : 2): [ 0.75 0.25 ]
tmp_i1 (1 : 1): [ 2 ]


old1 (1 : 1): [ 0.25 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (1 : 1): [ 2 ]
s = 1


tmp_i1 (1 : 1): [ 3 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (2 : 2): [ 0.75 0.25 ]
tmp_i1 (1 : 1): [ 3 ]
ATTENZIONE (assegna_vindxNA_d, linea scoremodular.c # 44): assegnato NA per via di un elemento specificato alla posizione 3 che e` al di fuori dei limiti dell'array (2)!


old2 (1 : 1): [ 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (1 : 1): [ 0.25 ]
s = -1


new1 (1 : 1): [ -0.75 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (1 : 1): [ 1.#QNAN ]
s = 1


new2 (1 : 1): [ 1.#QNAN ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp2_i (1 : 5): [ 1 ]
s = 1


tmp_i1 (1 : 1): [ 2 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
tmp3_d (4 : 4): [ 1.#INF 1.#INF 1.#INF 1.#INF ]
tmp_i1 (1 : 1): [ 2 ]


toll1 (1 : 1): [ 1.#INF ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (1 : 1): [ 2 ]
s = 1


tmp_i1 (1 : 1): [ 3 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
tmp3_d (4 : 4): [ 1.#INF 1.#INF 1.#INF 1.#INF ]
tmp_i1 (1 : 1): [ 3 ]


toll2 (1 : 1): [ 1.#INF ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (1 : 1): [ 0.25 ]
T1 (1 : 1): [ 2.295629397349035 ]


a (1 : 1): [ -2.045629397349035 ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (1 : 1): [ -2.045629397349035 ]


a (1 : 1): [ 2.045629397349035 ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (1 : 1): [ -0.75 ]
T1 (1 : 1): [ 2.295629397349035 ]


b (1 : 1): [ -3.045629397349035 ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (1 : 1): [ -3.045629397349035 ]


b (1 : 1): [ 3.045629397349035 ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (1 : 1): [ 2.295629397349035 ]
complemento = 0


ind (0 : 1): [ ]
------------------------------ Fine which_v_indxNA_d

68: assegna1_vs_indx_d	<=>	v[indx] <- val
a (1 : 1): [ 2.045629397349035 ]
ind (0 : 1): [ ]
val = 0


a (1 : 1): [ 2.045629397349035 ]
------------------------------ Fine assegna1_vs_indx_d

70: assegna1_vs_indx_d	<=>	v[indx] <- val
b (1 : 1): [ 3.045629397349035 ]
ind (0 : 1): [ ]
val = 0


b (1 : 1): [ 3.045629397349035 ]
------------------------------ Fine assegna1_vs_indx_d

78: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (1 : 1): [ 2.045629397349035 ]
b (1 : 1): [ 3.045629397349035 ]


tmpm_d (1 x 2 : 1 x 2): [
	 2.045629397349035 3.045629397349035
 ]
------------------------------ Fine cbind2v_d

79: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (1 x 2 : 1 x 2): [
	 2.045629397349035 3.045629397349035
 ]


m (1 : 1): [ 3.045629397349035 ]
------------------------------ Fine max_righe_d

81: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (1 : 1): [ 2.045629397349035 ]
b (1 : 1): [ 3.045629397349035 ]
m (1 : 1): [ 3.045629397349035 ]
T1 (1 : 1): [ 2.295629397349035 ]


S1 (1 : 1): [ -1.32670778692157 ]
------------------------------ Fine f_aux_d

83: diff_vv_d	<=>	ris <- v1 - v2
a (1 : 1): [ 2.045629397349035 ]
toll1 (1 : 1): [ 1.#INF ]


tmp_d1 (1 : 1): [ -1.#INF ]
------------------------------ Fine diff_vv_d

84: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (1 : 1): [ -1.#INF ]
val = 0

ind1 (1 : 1): [ 1 ]
------------------------------ Fine which_v_indxlt_d

86: diff_vv_d	<=>	ris <- v1 - v2
b (1 : 1): [ 3.045629397349035 ]
toll1 (1 : 1): [ 1.#INF ]


tmp_d1 (1 : 1): [ -1.#INF ]
------------------------------ Fine diff_vv_d

87: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (1 : 1): [ -1.#INF ]
val = 0


ind2 (0 : 1): [ ]
------------------------------ Fine which_v_indxgt_d

89: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (1 : 1): [ 1 ]
ind2 (0 : 1): [ ]
2459: esiste_v_i	<=>	elem %IN% v
elem = 1
ind2 (0 : 1): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 1
tmp_i1 (0 : 1): [ ]


indx = 0
------------------------------ Fine esiste_v_i



tmp_i1 (0 : 1): [ ]
------------------------------ Fine interseca_i

91: assegna1_vs_indx_d	<=>	v[indx] <- val
S1 (1 : 1): [ -1.32670778692157 ]
tmp_i1 (0 : 1): [ ]
val = -1.#INF


S1 (1 : 1): [ -1.32670778692157 ]
------------------------------ Fine assegna1_vs_indx_d

93: assegna1_vs_indx_d	<=>	v[indx] <- val
S1 (1 : 1): [ -1.32670778692157 ]
ind (0 : 1): [ ]
val = 0


S1 (1 : 1): [ -1.32670778692157 ]
------------------------------ Fine assegna1_vs_indx_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (1 : 1): [ 1.#QNAN ]
T2 (1 : 1): [ 0.499615366245336 ]


a (1 : 1): [ 1.#QNAN ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (1 : 1): [ 1.#QNAN ]


a (1 : 1): [ 1.#QNAN ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (1 : 1): [ 1.#QNAN ]
T2 (1 : 1): [ 0.499615366245336 ]


b (1 : 1): [ 1.#QNAN ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (1 : 1): [ 1.#QNAN ]


b (1 : 1): [ 1.#QNAN ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (1 : 1): [ 1.#QNAN ]
b (1 : 1): [ 1.#QNAN ]


tmpm_d (1 x 2 : 1 x 2): [
	 1.#QNAN 1.#QNAN
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (1 x 2 : 1 x 2): [
	 1.#QNAN 1.#QNAN
 ]


m (1 : 1): [ 1.#QNAN ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (1 : 1): [ 0.499615366245336 ]
complemento = 0


ind (0 : 1): [ ]
------------------------------ Fine which_v_indxNA_d

115: assegna1_vs_indx_d	<=>	v[indx] <- val
a (1 : 1): [ 1.#QNAN ]
ind (0 : 1): [ ]
val = 0


a (1 : 1): [ 1.#QNAN ]
------------------------------ Fine assegna1_vs_indx_d

117: assegna1_vs_indx_d	<=>	v[indx] <- val
b (1 : 1): [ 1.#QNAN ]
ind (0 : 1): [ ]
val = 0


b (1 : 1): [ 1.#QNAN ]
------------------------------ Fine assegna1_vs_indx_d

119: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (1 : 1): [ 1.#QNAN ]
b (1 : 1): [ 1.#QNAN ]


tmpm_d (1 x 2 : 1 x 2): [
	 1.#QNAN 1.#QNAN
 ]
------------------------------ Fine cbind2v_d

120: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (1 x 2 : 1 x 2): [
	 1.#QNAN 1.#QNAN
 ]


m (1 : 1): [ 1.#QNAN ]
------------------------------ Fine max_righe_d

122: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (1 : 1): [ 1.#QNAN ]
b (1 : 1): [ 1.#QNAN ]
m (1 : 1): [ 1.#QNAN ]
T2 (1 : 1): [ 0.499615366245336 ]


S2 (1 : 1): [ 1.#QNAN ]
------------------------------ Fine f_aux_d

124: diff_vv_d	<=>	ris <- v1 - v2
a (1 : 1): [ 1.#QNAN ]
toll2 (1 : 1): [ 1.#INF ]


tmp_d1 (1 : 1): [ 1.#QNAN ]
------------------------------ Fine diff_vv_d

125: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (1 : 1): [ 1.#QNAN ]
val = 0

ind1 (0 : 1): [ ]
------------------------------ Fine which_v_indxlt_d

127: diff_vv_d	<=>	ris <- v1 - v2
b (1 : 1): [ 1.#QNAN ]
toll2 (1 : 1): [ 1.#INF ]


tmp_d1 (1 : 1): [ 1.#QNAN ]
------------------------------ Fine diff_vv_d

128: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (1 : 1): [ 1.#QNAN ]
val = 0


ind2 (0 : 1): [ ]
------------------------------ Fine which_v_indxgt_d

130: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (0 : 1): [ ]
ind2 (0 : 1): [ ]


tmp_i1 (0 : 1): [ ]
------------------------------ Fine interseca_i

132: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (1 : 1): [ 1.#QNAN ]
tmp_i1 (0 : 1): [ ]
val = -1.#INF


S2 (1 : 1): [ 1.#QNAN ]
------------------------------ Fine assegna1_vs_indx_d

134: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (1 : 1): [ 1.#QNAN ]
ind (0 : 1): [ ]
val = 0


S2 (1 : 1): [ 1.#QNAN ]
------------------------------ Fine assegna1_vs_indx_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (1 : 1): [ 0.499615366245336 ]
val = 0


ind (0 : 1): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (1 : 1): [ 1.#QNAN ]
ind (0 : 1): [ ]
val = -1.#INF


S2 (1 : 1): [ 1.#QNAN ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (1 : 1): [ -1.32670778692157 ]
S2 (1 : 1): [ 1.#QNAN ]


ris (1 : 1): [ 1.#QNAN ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
ris (1 : 1): [ 1.#QNAN ]
div = 2.000


ris (1 : 1): [ 1.#QNAN ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (1136 interne); stringhe deallocate: 0 (801 interne)

180: which_v_indxne_d	<=>	ris <- which(v != val)
ris (1 : 1): [ 1.#QNAN ]
val = -1.#INF


indok (1 : 1): [ 1 ]
------------------------------ Fine which_v_indxne_d

182: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 1
incr = 1


tmp1_i (1 : 4): [ 1 ]
------------------------------ Fine seq_i

183: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp1_i (1 : 4): [ 1 ]
indok (1 : 1): [ 1 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp1_i (1 : 4): [ 1 ]
st = 1
end = 1


indInf (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (1 : 1): [ 1 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 1): [ 1 ]
indx = 1


indInf (0 : 1): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 1): [ ]
------------------------------ Fine setdiff_i

185: assegna_v_indx_d	<=>	ris <-v[indx] senza sforamento dei limiti
ris (1 : 1): [ 1.#QNAN ]
indok (1 : 1): [ 1 ]


tmp1_d (1 : 6): [ 1.#QNAN ]
------------------------------ Fine assegna_v_indx_d

186: min_v_d	<=>	ris <- min(v)
tmp1_d (1 : 6): [ 1.#QNAN ]


min = 1.#QNAN
------------------------------ Fine min_v_d

189: assegna1_v_indx_d	<=>	v[indx] <- val
ris (1 : 1): [ 1.#QNAN ]
indInf (0 : 1): [ ]
val = 1.#QNAN


ris (1 : 1): [ 1.#QNAN ]
------------------------------ Fine assegna1_v_indx_d

191: somma_v_d	<=>	ris <- sum(v, na.rm=canc_NA)
ris (1 : 1): [ 1.#QNAN ]
canc_NA = 0



ris: 1.#QNAN
------------------------------ Fine somma_v_d

191: dividi_vs_d	ris <- v / div
ris (1 : 1): [ 1.#QNAN ]
div = 1.#QO
ATTENZIONE (dividi_vs_d, linea mod3.c # 191): divisione per NA!

p_sc (1 : 1): [ 1.#QNAN ]
------------------------------ Fine dividi_vs_d

211: which_v_indxeq_i	<=>	ris <- which(v==val)
tmp1_i (1 : 4): [ 1 ]
val = 5


ind (0 : 1): [ ]
------------------------------ Fine which_v_indxeq_i

213: assegna1_vs_indx_d	<=>	v[indx] <- val
p_sc (1 : 1): [ 1.#QNAN ]
ind (0 : 1): [ ]
val = 0


p_sc (1 : 1): [ 1.#QNAN ]
------------------------------ Fine assegna1_vs_indx_d

215: somma_v_d	<=>	ris <- sum(v, na.rm=canc_NA)
p_sc (1 : 1): [ 1.#QNAN ]
canc_NA = 0



ris: 1.#QNAN
------------------------------ Fine somma_v_d

215: dividi1_vs_d	<=>	v <- v / div
p_sc (1 : 1): [ 1.#QNAN ]
div = 1.#QO
ATTENZIONE (dividi1_vs_d, linea mod3.c # 215): divisione per NA!

p_sc (1 : 1): [ 1.#QNAN ]
------------------------------ Fine dividi1_vs_d


*** sampleB_p ***
25: rep_v_i	<=>	ris <- rep(v, rip)
indS (1 : 1): [ 1 ]
rip = 1


ris (1 : 1): [ 1 ]
------------------------------ Fine rep_v_i

233: assegna1_m_vv_i	<=>	m[vr, vc] <- val
ris (4 x 4 : 4 x 4): [
	 0 1 0 0
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
 ]
ris (1 : 1): [ 1 ]
scalare_i (1 : 1): [ 3 ]
val = 1


ris (4 x 4 : 4 x 4): [
	 0 1 1 0
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
 ]
------------------------------ Fine assegna1_m_vv_i

150: segmento_v_d	<=>	ris <- v[st:end]
STin (4 : 7): [ 1.#QNAN 2.295629397349035 0.499615366245336 0.204755236405629 ]
start = 1
end = 4


tmp1_d (4 : 6): [ 1.#QNAN 2.295629397349035 0.499615366245336 0.204755236405629 ]
------------------------------ Fine segmento_v_d

151: somma_v_d	<=>	ris <- sum(v, na.rm=canc_NA)
tmp1_d (4 : 6): [ 1.#QNAN 2.295629397349035 0.499615366245336 0.204755236405629 ]
canc_NA = 1



ris: 3
------------------------------ Fine somma_v_d

153: somma_righe_i	<=>	ris <- apply(m, 1, sum)
ris (4 x 4 : 4 x 4): [
	 0 1 1 0
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
 ]


Sin (4 : 4): [ 2 0 0 0 ]
------------------------------ Fine somma_righe_i

157: segmento1_v_d	<=>	v <- v[st:end]
STin (4 : 7): [ 1.#QNAN 2.295629397349035 0.499615366245336 0.204755236405629 ]
start = 1
end = 4


STin (4 : 7): [ 1.#QNAN 2.295629397349035 0.499615366245336 0.204755236405629 ]
------------------------------ Fine segmento1_v_d

167: dividi1_vs_d	<=>	v <- v / div
STin (4 : 7): [ 1.#QNAN 2.295629397349035 0.499615366245336 0.204755236405629 ]
div = 1.000


STin (4 : 7): [ 1.#QNAN 2.295629397349035 0.499615366245336 0.204755236405629 ]
------------------------------ Fine dividi1_vs_d

169: max_v_i		<=>	ris <- max(v)
Sin (4 : 4): [ 2 0 0 0 ]


max = 2
------------------------------ Fine max_v_i

171: seq_i	<=>	ris <- seq(da, a, incr)
da = 0
a = 3
incr = 1


tmp2_i (4 : 5): [ 0 1 2 3 ]
------------------------------ Fine seq_i


*** hist1 ***
Sin (4 : 4): [ 2 0 0 0 ]
tmp2_i (4 : 5): [ 0 1 2 3 ]
right = 0
include_border = 1
naok = 0
29: InitVett_i
tmp1_i (3 : 4): [ 1 1 0 ]
val = 0


tmp1_i (3 : 4): [ 0 0 0 ]
------------------------------ Fine InitVett_i



tmp1_i (3 : 4): [ 3 0 1 ]

Stringhe allocate: 5 (1163 interne); stringhe deallocate: 0 (803 interne)

173: dividi_vs_i	ris <- v / div
tmp1_i (3 : 4): [ 3 0 1 ]
div = 4.000


Freq_in (3 : 7): [ 0.75 0 0.25 ]
------------------------------ Fine dividi_vs_i

175: assegna_v_indx_i	<=>	ris <-v[indx] senza sforamento dei limiti
Sin (4 : 4): [ 2 0 0 0 ]
indS (1 : 1): [ 1 ]


tmp2_i (1 : 5): [ 2 ]
------------------------------ Fine assegna_v_indx_i

177: InitVett_d
tmp3_d (4 : 4): [ 1.#INF 1.#INF 1.#INF 1.#INF ]
val = 1.#INF


tmp3_d (4 : 4): [ 1.#INF 1.#INF 1.#INF 1.#INF ]
------------------------------ Fine InitVett_d


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp2_i (1 : 5): [ 2 ]
s = 1


ind (1 : 1): [ 3 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp2_i (1 : 5): [ 2 ]
s = 1


tmp_i1 (1 : 1): [ 3 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (4 : 7): [ 1.#QNAN 2.295629397349035 0.499615366245336 0.204755236405629 ]
tmp_i1 (1 : 1): [ 3 ]


T1 (1 : 1): [ 0.499615366245336 ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (1 : 1): [ 3 ]
s = 1


tmp_i1 (1 : 1): [ 4 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (4 : 7): [ 1.#QNAN 2.295629397349035 0.499615366245336 0.204755236405629 ]
tmp_i1 (1 : 1): [ 4 ]


T2 (1 : 1): [ 0.204755236405629 ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp2_i (1 : 5): [ 2 ]
s = 1


tmp_i1 (1 : 1): [ 3 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (3 : 7): [ 0.75 0 0.25 ]
tmp_i1 (1 : 1): [ 3 ]


old1 (1 : 1): [ 0.25 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (1 : 1): [ 3 ]
s = 1


tmp_i1 (1 : 1): [ 4 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (3 : 7): [ 0.75 0 0.25 ]
tmp_i1 (1 : 1): [ 4 ]
ATTENZIONE (assegna_vindxNA_d, linea scoremodular.c # 44): assegnato NA per via di un elemento specificato alla posizione 4 che e` al di fuori dei limiti dell'array (3)!


old2 (1 : 1): [ 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (1 : 1): [ 0.25 ]
s = -1


new1 (1 : 1): [ -0.75 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (1 : 1): [ 1.#QNAN ]
s = 1


new2 (1 : 1): [ 1.#QNAN ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp2_i (1 : 5): [ 2 ]
s = 1


tmp_i1 (1 : 1): [ 3 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
tmp3_d (4 : 4): [ 1.#INF 1.#INF 1.#INF 1.#INF ]
tmp_i1 (1 : 1): [ 3 ]


toll1 (1 : 1): [ 1.#INF ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (1 : 1): [ 3 ]
s = 1


tmp_i1 (1 : 1): [ 4 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
tmp3_d (4 : 4): [ 1.#INF 1.#INF 1.#INF 1.#INF ]
tmp_i1 (1 : 1): [ 4 ]


toll2 (1 : 1): [ 1.#INF ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (1 : 1): [ 0.25 ]
T1 (1 : 1): [ 0.499615366245336 ]


a (1 : 1): [ -0.249615366245336 ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (1 : 1): [ -0.249615366245336 ]


a (1 : 1): [ 0.249615366245336 ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (1 : 1): [ -0.75 ]
T1 (1 : 1): [ 0.499615366245336 ]


b (1 : 1): [ -1.249615366245336 ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (1 : 1): [ -1.249615366245336 ]


b (1 : 1): [ 1.249615366245336 ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (1 : 1): [ 0.499615366245336 ]
complemento = 0


ind (0 : 1): [ ]
------------------------------ Fine which_v_indxNA_d

68: assegna1_vs_indx_d	<=>	v[indx] <- val
a (1 : 1): [ 0.249615366245336 ]
ind (0 : 1): [ ]
val = 0


a (1 : 1): [ 0.249615366245336 ]
------------------------------ Fine assegna1_vs_indx_d

70: assegna1_vs_indx_d	<=>	v[indx] <- val
b (1 : 1): [ 1.249615366245336 ]
ind (0 : 1): [ ]
val = 0


b (1 : 1): [ 1.249615366245336 ]
------------------------------ Fine assegna1_vs_indx_d

78: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (1 : 1): [ 0.249615366245336 ]
b (1 : 1): [ 1.249615366245336 ]


tmpm_d (1 x 2 : 1 x 2): [
	 0.249615366245336 1.249615366245336
 ]
------------------------------ Fine cbind2v_d

79: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (1 x 2 : 1 x 2): [
	 0.249615366245336 1.249615366245336
 ]


m (1 : 1): [ 1.249615366245336 ]
------------------------------ Fine max_righe_d

81: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (1 : 1): [ 0.249615366245336 ]
b (1 : 1): [ 1.249615366245336 ]
m (1 : 1): [ 1.249615366245336 ]
T1 (1 : 1): [ 0.499615366245336 ]


S1 (1 : 1): [ -2.501154789606116 ]
------------------------------ Fine f_aux_d

83: diff_vv_d	<=>	ris <- v1 - v2
a (1 : 1): [ 0.249615366245336 ]
toll1 (1 : 1): [ 1.#INF ]


tmp_d1 (1 : 1): [ -1.#INF ]
------------------------------ Fine diff_vv_d

84: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (1 : 1): [ -1.#INF ]
val = 0

ind1 (1 : 1): [ 1 ]
------------------------------ Fine which_v_indxlt_d

86: diff_vv_d	<=>	ris <- v1 - v2
b (1 : 1): [ 1.249615366245336 ]
toll1 (1 : 1): [ 1.#INF ]


tmp_d1 (1 : 1): [ -1.#INF ]
------------------------------ Fine diff_vv_d

87: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (1 : 1): [ -1.#INF ]
val = 0


ind2 (0 : 1): [ ]
------------------------------ Fine which_v_indxgt_d

89: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (1 : 1): [ 1 ]
ind2 (0 : 1): [ ]
2459: esiste_v_i	<=>	elem %IN% v
elem = 1
ind2 (0 : 1): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 1
tmp_i1 (0 : 1): [ ]


indx = 0
------------------------------ Fine esiste_v_i



tmp_i1 (0 : 1): [ ]
------------------------------ Fine interseca_i

91: assegna1_vs_indx_d	<=>	v[indx] <- val
S1 (1 : 1): [ -2.501154789606116 ]
tmp_i1 (0 : 1): [ ]
val = -1.#INF


S1 (1 : 1): [ -2.501154789606116 ]
------------------------------ Fine assegna1_vs_indx_d

93: assegna1_vs_indx_d	<=>	v[indx] <- val
S1 (1 : 1): [ -2.501154789606116 ]
ind (0 : 1): [ ]
val = 0


S1 (1 : 1): [ -2.501154789606116 ]
------------------------------ Fine assegna1_vs_indx_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (1 : 1): [ 1.#QNAN ]
T2 (1 : 1): [ 0.204755236405629 ]


a (1 : 1): [ 1.#QNAN ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (1 : 1): [ 1.#QNAN ]


a (1 : 1): [ 1.#QNAN ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (1 : 1): [ 1.#QNAN ]
T2 (1 : 1): [ 0.204755236405629 ]


b (1 : 1): [ 1.#QNAN ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (1 : 1): [ 1.#QNAN ]


b (1 : 1): [ 1.#QNAN ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (1 : 1): [ 1.#QNAN ]
b (1 : 1): [ 1.#QNAN ]


tmpm_d (1 x 2 : 1 x 2): [
	 1.#QNAN 1.#QNAN
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (1 x 2 : 1 x 2): [
	 1.#QNAN 1.#QNAN
 ]


m (1 : 1): [ 1.#QNAN ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (1 : 1): [ 0.204755236405629 ]
complemento = 0


ind (0 : 1): [ ]
------------------------------ Fine which_v_indxNA_d

115: assegna1_vs_indx_d	<=>	v[indx] <- val
a (1 : 1): [ 1.#QNAN ]
ind (0 : 1): [ ]
val = 0


a (1 : 1): [ 1.#QNAN ]
------------------------------ Fine assegna1_vs_indx_d

117: assegna1_vs_indx_d	<=>	v[indx] <- val
b (1 : 1): [ 1.#QNAN ]
ind (0 : 1): [ ]
val = 0


b (1 : 1): [ 1.#QNAN ]
------------------------------ Fine assegna1_vs_indx_d

119: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (1 : 1): [ 1.#QNAN ]
b (1 : 1): [ 1.#QNAN ]


tmpm_d (1 x 2 : 1 x 2): [
	 1.#QNAN 1.#QNAN
 ]
------------------------------ Fine cbind2v_d

120: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (1 x 2 : 1 x 2): [
	 1.#QNAN 1.#QNAN
 ]


m (1 : 1): [ 1.#QNAN ]
------------------------------ Fine max_righe_d

122: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (1 : 1): [ 1.#QNAN ]
b (1 : 1): [ 1.#QNAN ]
m (1 : 1): [ 1.#QNAN ]
T2 (1 : 1): [ 0.204755236405629 ]


S2 (1 : 1): [ 1.#QNAN ]
------------------------------ Fine f_aux_d

124: diff_vv_d	<=>	ris <- v1 - v2
a (1 : 1): [ 1.#QNAN ]
toll2 (1 : 1): [ 1.#INF ]


tmp_d1 (1 : 1): [ 1.#QNAN ]
------------------------------ Fine diff_vv_d

125: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (1 : 1): [ 1.#QNAN ]
val = 0

ind1 (0 : 1): [ ]
------------------------------ Fine which_v_indxlt_d

127: diff_vv_d	<=>	ris <- v1 - v2
b (1 : 1): [ 1.#QNAN ]
toll2 (1 : 1): [ 1.#INF ]


tmp_d1 (1 : 1): [ 1.#QNAN ]
------------------------------ Fine diff_vv_d

128: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (1 : 1): [ 1.#QNAN ]
val = 0


ind2 (0 : 1): [ ]
------------------------------ Fine which_v_indxgt_d

130: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (0 : 1): [ ]
ind2 (0 : 1): [ ]


tmp_i1 (0 : 1): [ ]
------------------------------ Fine interseca_i

132: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (1 : 1): [ 1.#QNAN ]
tmp_i1 (0 : 1): [ ]
val = -1.#INF


S2 (1 : 1): [ 1.#QNAN ]
------------------------------ Fine assegna1_vs_indx_d

134: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (1 : 1): [ 1.#QNAN ]
ind (0 : 1): [ ]
val = 0


S2 (1 : 1): [ 1.#QNAN ]
------------------------------ Fine assegna1_vs_indx_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (1 : 1): [ 0.204755236405629 ]
val = 0


ind (0 : 1): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (1 : 1): [ 1.#QNAN ]
ind (0 : 1): [ ]
val = -1.#INF


S2 (1 : 1): [ 1.#QNAN ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (1 : 1): [ -2.501154789606116 ]
S2 (1 : 1): [ 1.#QNAN ]


ris (1 : 1): [ 1.#QNAN ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
ris (1 : 1): [ 1.#QNAN ]
div = 2.000


ris (1 : 1): [ 1.#QNAN ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (1264 interne); stringhe deallocate: 0 (904 interne)

180: which_v_indxne_d	<=>	ris <- which(v != val)
ris (1 : 1): [ 1.#QNAN ]
val = -1.#INF


indok (1 : 1): [ 1 ]
------------------------------ Fine which_v_indxne_d

182: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 1
incr = 1


tmp1_i (1 : 4): [ 1 ]
------------------------------ Fine seq_i

183: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp1_i (1 : 4): [ 1 ]
indok (1 : 1): [ 1 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp1_i (1 : 4): [ 1 ]
st = 1
end = 1


indInf (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (1 : 1): [ 1 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 1): [ 1 ]
indx = 1


indInf (0 : 1): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 1): [ ]
------------------------------ Fine setdiff_i

185: assegna_v_indx_d	<=>	ris <-v[indx] senza sforamento dei limiti
ris (1 : 1): [ 1.#QNAN ]
indok (1 : 1): [ 1 ]


tmp1_d (1 : 6): [ 1.#QNAN ]
------------------------------ Fine assegna_v_indx_d

186: min_v_d	<=>	ris <- min(v)
tmp1_d (1 : 6): [ 1.#QNAN ]


min = 1.#QNAN
------------------------------ Fine min_v_d

189: assegna1_v_indx_d	<=>	v[indx] <- val
ris (1 : 1): [ 1.#QNAN ]
indInf (0 : 1): [ ]
val = 1.#QNAN


ris (1 : 1): [ 1.#QNAN ]
------------------------------ Fine assegna1_v_indx_d

191: somma_v_d	<=>	ris <- sum(v, na.rm=canc_NA)
ris (1 : 1): [ 1.#QNAN ]
canc_NA = 0



ris: 1.#QNAN
------------------------------ Fine somma_v_d

191: dividi_vs_d	ris <- v / div
ris (1 : 1): [ 1.#QNAN ]
div = 1.#QO
ATTENZIONE (dividi_vs_d, linea mod3.c # 191): divisione per NA!

p_sc (1 : 1): [ 1.#QNAN ]
------------------------------ Fine dividi_vs_d

211: which_v_indxeq_i	<=>	ris <- which(v==val)
tmp1_i (1 : 4): [ 1 ]
val = 5


ind (0 : 1): [ ]
------------------------------ Fine which_v_indxeq_i

213: assegna1_vs_indx_d	<=>	v[indx] <- val
p_sc (1 : 1): [ 1.#QNAN ]
ind (0 : 1): [ ]
val = 0


p_sc (1 : 1): [ 1.#QNAN ]
------------------------------ Fine assegna1_vs_indx_d

215: somma_v_d	<=>	ris <- sum(v, na.rm=canc_NA)
p_sc (1 : 1): [ 1.#QNAN ]
canc_NA = 0



ris: 1.#QNAN
------------------------------ Fine somma_v_d

215: dividi1_vs_d	<=>	v <- v / div
p_sc (1 : 1): [ 1.#QNAN ]
div = 1.#QO
ATTENZIONE (dividi1_vs_d, linea mod3.c # 215): divisione per NA!

p_sc (1 : 1): [ 1.#QNAN ]
------------------------------ Fine dividi1_vs_d


*** sampleB_p ***
25: rep_v_i	<=>	ris <- rep(v, rip)
indS (1 : 1): [ 1 ]
rip = 1


ris (1 : 1): [ 1 ]
------------------------------ Fine rep_v_i

233: assegna1_m_vv_i	<=>	m[vr, vc] <- val
ris (4 x 4 : 4 x 4): [
	 0 1 1 0
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
 ]
ris (1 : 1): [ 1 ]
scalare_i (1 : 1): [ 4 ]
val = 1


ris (4 x 4 : 4 x 4): [
	 0 1 1 1
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
 ]
------------------------------ Fine assegna1_m_vv_i


*** triangola ***
27: diag_i	<=>	ris <- diag(m)
ris (4 x 4 : 4 x 4): [
	 0 1 1 1
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
 ]


Dmem (4 : 4): [ 0 0 0 0 ]
------------------------------ Fine diag_i

29: assegna1_s_diag_i	<=>	diag_i(m) <- s
ris (4 x 4 : 4 x 4): [
	 0 1 1 1
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
 ]
val = 0


ris (4 x 4 : 4 x 4): [
	 0 1 1 1
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
 ]
------------------------------ Fine assegna1_s_diag_i

33: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
ris (4 x 4 : 4 x 4): [
	 0 1 1 1
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
 ]
r = 1
val = 0


tmp1_i (3 : 16): [ 2 3 4 ]
------------------------------ Fine which_m_rowindxne_i

34: which_m_colindxne_i	<=>	ris <- which(m[, c] != val)
ris (4 x 4 : 4 x 4): [
	 0 1 1 1
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
 ]
c = 1, val = 0


tmp2_i (0 : 16): [ ]
------------------------------ Fine which_m_colindxne_i

35: unione_i	<=>	ris <- union(v1, v2)
tmp1_i (3 : 16): [ 2 3 4 ]
tmp2_i (0 : 16): [ ]
4876: elimina_doppi_i	<=>	ris <- union(v, v)
ind (3 : 3): [ 2 3 4 ]


ris (3 : 3): [ 2 3 4 ]
------------------------------ Fine elimina_doppi_i



ris (3 : 3): [ 2 3 4 ]
------------------------------ Fine unione_i

55: InitMatr_i
coord (1 x 2 : 2 x 2): [
	 79851984 1819240302
 ]
val = 0


coord (1 x 2 : 2 x 2): [
	 0 0
 ]
------------------------------ Fine InitMatr_i

72: vettore2s_i		<=>	ris <- c(el1, el2)
el1 = 2, el2 = 3


tmp1_i (2 : 16): [ 2 3 ]
------------------------------ Fine vettore2s_i

73: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
coord (1 x 2 : 2 x 2): [
	 0 0
 ]
riga = 2
tmp1_i (2 : 16): [ 2 3 ]


coord (2 x 2 : 2 x 2): [
	 0 0
	 2 3
 ]
------------------------------ Fine aggiungi_mv_riga_i

74: vettore2s_i		<=>	ris <- c(el1, el2)
el1 = 3, el2 = 2


tmp1_i (2 : 16): [ 3 2 ]
------------------------------ Fine vettore2s_i

76: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
coord (2 x 2 : 2 x 2): [
	 0 0
	 2 3
 ]
riga = 3
tmp1_i (2 : 16): [ 3 2 ]


coord (3 x 2 : 3 x 2): [
	 0 0
	 2 3
	 3 2
 ]
------------------------------ Fine aggiungi_mv_riga_i

72: vettore2s_i		<=>	ris <- c(el1, el2)
el1 = 2, el2 = 4


tmp1_i (2 : 16): [ 2 4 ]
------------------------------ Fine vettore2s_i

73: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
coord (3 x 2 : 3 x 2): [
	 0 0
	 2 3
	 3 2
 ]
riga = 4
tmp1_i (2 : 16): [ 2 4 ]


coord (4 x 2 : 4 x 2): [
	 0 0
	 2 3
	 3 2
	 2 4
 ]
------------------------------ Fine aggiungi_mv_riga_i

74: vettore2s_i		<=>	ris <- c(el1, el2)
el1 = 4, el2 = 2


tmp1_i (2 : 16): [ 4 2 ]
------------------------------ Fine vettore2s_i

76: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
coord (4 x 2 : 4 x 2): [
	 0 0
	 2 3
	 3 2
	 2 4
 ]
riga = 5
tmp1_i (2 : 16): [ 4 2 ]


coord (5 x 2 : 5 x 2): [
	 0 0
	 2 3
	 3 2
	 2 4
	 4 2
 ]
------------------------------ Fine aggiungi_mv_riga_i

72: vettore2s_i		<=>	ris <- c(el1, el2)
el1 = 3, el2 = 4


tmp1_i (2 : 16): [ 3 4 ]
------------------------------ Fine vettore2s_i

73: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
coord (5 x 2 : 5 x 2): [
	 0 0
	 2 3
	 3 2
	 2 4
	 4 2
 ]
riga = 6
tmp1_i (2 : 16): [ 3 4 ]


coord (6 x 2 : 6 x 2): [
	 0 0
	 2 3
	 3 2
	 2 4
	 4 2
	 3 4
 ]
------------------------------ Fine aggiungi_mv_riga_i

74: vettore2s_i		<=>	ris <- c(el1, el2)
el1 = 4, el2 = 3


tmp1_i (2 : 16): [ 4 3 ]
------------------------------ Fine vettore2s_i

76: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
coord (6 x 2 : 6 x 2): [
	 0 0
	 2 3
	 3 2
	 2 4
	 4 2
	 3 4
 ]
riga = 7
tmp1_i (2 : 16): [ 4 3 ]


coord (7 x 2 : 7 x 2): [
	 0 0
	 2 3
	 3 2
	 2 4
	 4 2
	 3 4
	 4 3
 ]
------------------------------ Fine aggiungi_mv_riga_i

89: somma_righe_i	<=>	ris <- apply(m, 1, sum)
ris (4 x 4 : 4 x 4): [
	 0 1 1 1
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
 ]


M_in (4 : 4): [ 3 0 0 0 ]
------------------------------ Fine somma_righe_i

91: which_v_indxlt_i	<=>	ris <- which(v<val)
M_in (4 : 4): [ 3 0 0 0 ]
val = 5

ris (4 : 10): [ 1 2 3 4 ]
------------------------------ Fine which_v_indxlt_i

95: which_m_colindxin_i	<=>	ris <- which(m[, c] %IN% v)
coord (7 x 2 : 7 x 2): [
	 0 0
	 2 3
	 3 2
	 2 4
	 4 2
	 3 4
	 4 3
 ]
c = 1
ris (4 : 10): [ 1 2 3 4 ]
3754: esiste_v_i	<=>	elem %IN% v
elem = 0
ris (4 : 10): [ 1 2 3 4 ]


indx = 0
------------------------------ Fine esiste_v_i

3754: esiste_v_i	<=>	elem %IN% v
elem = 2
ris (4 : 10): [ 1 2 3 4 ]


indx = 2
------------------------------ Fine esiste_v_i

3754: esiste_v_i	<=>	elem %IN% v
elem = 3
ris (4 : 10): [ 1 2 3 4 ]


indx = 3
------------------------------ Fine esiste_v_i

3754: esiste_v_i	<=>	elem %IN% v
elem = 2
ris (4 : 10): [ 1 2 3 4 ]


indx = 2
------------------------------ Fine esiste_v_i

3754: esiste_v_i	<=>	elem %IN% v
elem = 4
ris (4 : 10): [ 1 2 3 4 ]


indx = 4
------------------------------ Fine esiste_v_i

3754: esiste_v_i	<=>	elem %IN% v
elem = 3
ris (4 : 10): [ 1 2 3 4 ]


indx = 3
------------------------------ Fine esiste_v_i

3754: esiste_v_i	<=>	elem %IN% v
elem = 4
ris (4 : 10): [ 1 2 3 4 ]


indx = 4
------------------------------ Fine esiste_v_i



ind_aus (6 : 7): [ 2 3 4 5 6 7 ]
------------------------------ Fine which_m_colindxin_i

101: righe_i	<=>	ris <- m[indx,]
coord (7 x 2 : 7 x 2): [
	 0 0
	 2 3
	 3 2
	 2 4
	 4 2
	 3 4
	 4 3
 ]
ind_aus (6 : 7): [ 2 3 4 5 6 7 ]



tmp_coord1 (6 x 2 : 6 x 2): [
	 2 3
	 3 2
	 2 4
	 4 2
	 3 4
	 4 3
 ]
------------------------------ Fine righe_i

102: copia_m_i	<=>	ris <- da
tmp_coord1 (6 x 2 : 6 x 2): [
	 2 3
	 3 2
	 2 4
	 4 2
	 3 4
	 4 3
 ]


coord (6 x 2 : 7 x 2): [
	 2 3
	 3 2
	 2 4
	 4 2
	 3 4
	 4 3
 ]
------------------------------ Fine copia_m_i

104: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 6
incr = 1


tmp1_i (6 : 16): [ 1 2 3 4 5 6 ]
------------------------------ Fine seq_i


*** sampleB ***

***sample***
tmp1_i (6 : 16): [ 1 2 3 4 5 6 ]
k = 1, replace = 0


ris (1 : 1): [ 6 ]
*****************************************


Stringhe allocate: 5 (1351 interne); stringhe deallocate: 0 (941 interne)


Stringhe allocate: 5 (1351 interne); stringhe deallocate: 0 (941 interne)

107: riga_i	<=>	ris <- m[r,]
coord (6 x 2 : 7 x 2): [
	 2 3
	 3 2
	 2 4
	 4 2
	 3 4
	 4 3
 ]
r = 6

coord_ind (2 : 2): [ 4 3 ]
------------------------------ Fine riga_i

111: which_m_colneand2_i	<=>	ris <- which((m[, c] != val1) & (m[, c] != val2))
coord (6 x 2 : 7 x 2): [
	 2 3
	 3 2
	 2 4
	 4 2
	 3 4
	 4 3
 ]
c = 1, val1 = 4, val2 = 3


ris (2 : 32): [ 1 3 ]
------------------------------ Fine which_m_colneand2_i

114: righe_i	<=>	ris <- m[indx,]
coord (6 x 2 : 7 x 2): [
	 2 3
	 3 2
	 2 4
	 4 2
	 3 4
	 4 3
 ]
ris (2 : 32): [ 1 3 ]



tmp_coord1 (2 x 2 : 6 x 2): [
	 2 3
	 2 4
 ]
------------------------------ Fine righe_i

115: copia_m_i	<=>	ris <- da
tmp_coord1 (2 x 2 : 6 x 2): [
	 2 3
	 2 4
 ]


coord (2 x 2 : 7 x 2): [
	 2 3
	 2 4
 ]
------------------------------ Fine copia_m_i

89: somma_righe_i	<=>	ris <- apply(m, 1, sum)
ris (4 x 4 : 4 x 4): [
	 0 1 1 1
	 0 0 0 0
	 0 0 0 0
	 0 0 1 0
 ]


M_in (4 : 4): [ 3 0 0 1 ]
------------------------------ Fine somma_righe_i

91: which_v_indxlt_i	<=>	ris <- which(v<val)
M_in (4 : 4): [ 3 0 0 1 ]
val = 5

ris (4 : 32): [ 1 2 3 4 ]
------------------------------ Fine which_v_indxlt_i

95: which_m_colindxin_i	<=>	ris <- which(m[, c] %IN% v)
coord (2 x 2 : 7 x 2): [
	 2 3
	 2 4
 ]
c = 1
ris (4 : 32): [ 1 2 3 4 ]
3754: esiste_v_i	<=>	elem %IN% v
elem = 2
ris (4 : 32): [ 1 2 3 4 ]


indx = 2
------------------------------ Fine esiste_v_i

3754: esiste_v_i	<=>	elem %IN% v
elem = 2
ris (4 : 32): [ 1 2 3 4 ]


indx = 2
------------------------------ Fine esiste_v_i



ind_aus (2 : 7): [ 1 2 ]
------------------------------ Fine which_m_colindxin_i

101: righe_i	<=>	ris <- m[indx,]
coord (2 x 2 : 7 x 2): [
	 2 3
	 2 4
 ]
ind_aus (2 : 7): [ 1 2 ]



tmp_coord1 (2 x 2 : 6 x 2): [
	 2 3
	 2 4
 ]
------------------------------ Fine righe_i

102: copia_m_i	<=>	ris <- da
tmp_coord1 (2 x 2 : 6 x 2): [
	 2 3
	 2 4
 ]


coord (2 x 2 : 7 x 2): [
	 2 3
	 2 4
 ]
------------------------------ Fine copia_m_i

104: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 2
incr = 1


tmp1_i (2 : 16): [ 1 2 ]
------------------------------ Fine seq_i


*** sampleB ***

***sample***
tmp1_i (2 : 16): [ 1 2 ]
k = 1, replace = 0


ris (1 : 1): [ 2 ]
*****************************************


Stringhe allocate: 5 (1356 interne); stringhe deallocate: 0 (941 interne)


Stringhe allocate: 5 (1356 interne); stringhe deallocate: 0 (941 interne)

107: riga_i	<=>	ris <- m[r,]
coord (2 x 2 : 7 x 2): [
	 2 3
	 2 4
 ]
r = 2

coord_ind (2 : 2): [ 2 4 ]
------------------------------ Fine riga_i

111: which_m_colneand2_i	<=>	ris <- which((m[, c] != val1) & (m[, c] != val2))
coord (2 x 2 : 7 x 2): [
	 2 3
	 2 4
 ]
c = 1, val1 = 2, val2 = 4


ris (0 : 32): [ ]
------------------------------ Fine which_m_colneand2_i

33: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
ris (4 x 4 : 4 x 4): [
	 0 1 1 1
	 0 0 0 1
	 0 0 0 0
	 0 0 1 0
 ]
r = 2
val = 0


tmp1_i (1 : 16): [ 4 ]
------------------------------ Fine which_m_rowindxne_i

34: which_m_colindxne_i	<=>	ris <- which(m[, c] != val)
ris (4 x 4 : 4 x 4): [
	 0 1 1 1
	 0 0 0 1
	 0 0 0 0
	 0 0 1 0
 ]
c = 2, val = 0


tmp2_i (1 : 16): [ 1 ]
------------------------------ Fine which_m_colindxne_i

35: unione_i	<=>	ris <- union(v1, v2)
tmp1_i (1 : 16): [ 4 ]
tmp2_i (1 : 16): [ 1 ]
4876: elimina_doppi_i	<=>	ris <- union(v, v)
ind (2 : 2): [ 4 1 ]


ris (2 : 32): [ 4 1 ]
------------------------------ Fine elimina_doppi_i



ris (2 : 32): [ 4 1 ]
------------------------------ Fine unione_i

33: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
ris (4 x 4 : 4 x 4): [
	 0 1 1 1
	 0 0 0 1
	 0 0 0 0
	 0 0 1 0
 ]
r = 3
val = 0


tmp1_i (0 : 16): [ ]
------------------------------ Fine which_m_rowindxne_i

34: which_m_colindxne_i	<=>	ris <- which(m[, c] != val)
ris (4 x 4 : 4 x 4): [
	 0 1 1 1
	 0 0 0 1
	 0 0 0 0
	 0 0 1 0
 ]
c = 3, val = 0


tmp2_i (2 : 16): [ 1 4 ]
------------------------------ Fine which_m_colindxne_i

35: unione_i	<=>	ris <- union(v1, v2)
tmp1_i (0 : 16): [ ]
tmp2_i (2 : 16): [ 1 4 ]
4876: elimina_doppi_i	<=>	ris <- union(v, v)
ind (2 : 2): [ 1 4 ]


ris (2 : 32): [ 1 4 ]
------------------------------ Fine elimina_doppi_i



ris (2 : 32): [ 1 4 ]
------------------------------ Fine unione_i

33: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
ris (4 x 4 : 4 x 4): [
	 0 1 1 1
	 0 0 0 1
	 0 0 0 0
	 0 0 1 0
 ]
r = 4
val = 0


tmp1_i (1 : 16): [ 3 ]
------------------------------ Fine which_m_rowindxne_i

34: which_m_colindxne_i	<=>	ris <- which(m[, c] != val)
ris (4 x 4 : 4 x 4): [
	 0 1 1 1
	 0 0 0 1
	 0 0 0 0
	 0 0 1 0
 ]
c = 4, val = 0


tmp2_i (2 : 16): [ 1 2 ]
------------------------------ Fine which_m_colindxne_i

35: unione_i	<=>	ris <- union(v1, v2)
tmp1_i (1 : 16): [ 3 ]
tmp2_i (2 : 16): [ 1 2 ]
4876: elimina_doppi_i	<=>	ris <- union(v, v)
ind (3 : 3): [ 3 1 2 ]


ris (3 : 32): [ 3 1 2 ]
------------------------------ Fine elimina_doppi_i



ris (3 : 32): [ 3 1 2 ]
------------------------------ Fine unione_i

55: InitMatr_i
coord (1 x 2 : 7 x 2): [
	 2 2
 ]
val = 0


coord (1 x 2 : 7 x 2): [
	 0 0
 ]
------------------------------ Fine InitMatr_i

72: vettore2s_i		<=>	ris <- c(el1, el2)
el1 = 3, el2 = 2


tmp1_i (2 : 16): [ 3 2 ]
------------------------------ Fine vettore2s_i

73: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
coord (1 x 2 : 7 x 2): [
	 0 0
 ]
riga = 2
tmp1_i (2 : 16): [ 3 2 ]


coord (2 x 2 : 2 x 2): [
	 0 0
	 3 2
 ]
------------------------------ Fine aggiungi_mv_riga_i

74: vettore2s_i		<=>	ris <- c(el1, el2)
el1 = 2, el2 = 3


tmp1_i (2 : 16): [ 2 3 ]
------------------------------ Fine vettore2s_i

76: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
coord (2 x 2 : 2 x 2): [
	 0 0
	 3 2
 ]
riga = 3
tmp1_i (2 : 16): [ 2 3 ]


coord (3 x 2 : 3 x 2): [
	 0 0
	 3 2
	 2 3
 ]
------------------------------ Fine aggiungi_mv_riga_i

152: assegna1_v_diag_i	<=>	diag(m) <- v
ris (4 x 4 : 4 x 4): [
	 0 1 1 1
	 0 0 0 1
	 0 0 0 0
	 0 0 1 0
 ]
Dmem (4 : 4): [ 0 0 0 0 ]


ris (4 x 4 : 4 x 4): [
	 0 1 1 1
	 0 0 0 1
	 0 0 0 0
	 0 0 1 0
 ]
------------------------------ Fine assegna1_v_diag_i


Stringhe allocate: 5 (1381 interne); stringhe deallocate: 0 (1021 interne)



*****************************************
*****************************************


Stringhe allocate: 5 (1381 interne); stringhe deallocate: 0 (1116 interne)


*** probmod ***
46: InitMatr_i
checkOUT (4 x 5 : 4 x 5): [
	 79776696 1600220775 1634037353 543370866 1399422524
	 1330207310 1684957558 1868788512 875831331 1074064175
	 673203534 1598115448 1869440370 1399422524 1399422524
	 1702064993 1814047844 1634497892 1074064175 1074064175
 ]
val = 0


checkOUT (4 x 5 : 4 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine InitMatr_i

48: InitMatr_i
checkIN (4 x 5 : 4 x 5): [
	 79776784 959524910 154745137 942943795 892877106
	 926102328 154220857 909585975 959461426 170997808
	 825506096 858926640 825505081 154677304 4390912
	 959514932 875835699 154677304 858795577 6029370
 ]
val = 0


checkIN (4 x 5 : 4 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine InitMatr_i

50: InitMatr_d
ris (4 x 5 : 4 x 5): [
	 6.365987372895817e-314 2.970794074051357e-314 1.060997895482636e-313 5.943748220914334e-298 6.870599297710891e-298
	 1.853255257146149e-316 2.758594615210408e-313 5.943649790767034e-298 7.74682409913448e-304 6.870774284745643e-298
	 0 2.470328229206233e-323 0 1.85065485068815e-284 -7.559493430819439e+303
	 1.851161999817849e-316 1.697596632772218e-313 5.943740929792313e-298 6.694738203493697e-298 2.124566037797817e+185
 ]
val = 0


ris (4 x 5 : 4 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine InitMatr_d

52: somma_righe_i	<=>	ris <- apply(m, 1, sum)
ris (4 x 4 : 4 x 4): [
	 0 1 1 1
	 0 0 0 1
	 0 0 0 0
	 0 0 1 0
 ]


M_in (4 : 4): [ 3 1 0 1 ]
------------------------------ Fine somma_righe_i

54: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
ris (4 x 4 : 4 x 4): [
	 0 1 1 1
	 0 0 0 1
	 0 0 0 0
	 0 0 1 0
 ]


M_out (4 : 4): [ 0 1 2 2 ]
------------------------------ Fine somma_colonne_i

57: InitMatr_i
memory (4 x 3 : 4 x 3): [
	 79859544 3 4
	 2 4 2
	 3 3 4
	 4 2 3
 ]
val = -2147483648


memory (4 x 3 : 4 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
------------------------------ Fine InitMatr_i

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (4 x 3 : 4 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 3


tmp_i1 (0 : 12): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (4 x 3 : 4 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 0


tmp_i2 (0 : 12): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 12): [ ]
tmp_i2 (0 : 12): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

119: InitVett_d
S_out (5 : 5): [ 3.945328013653874e-316 0.5000000000000001 0.5 0.5 0.5 ]
val = 0


S_out (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

122: InitVett_i
tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
val = 1


tmp_i1 (5 : 12): [ 1 1 1 1 1 ]
------------------------------ Fine InitVett_i

123: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
checkOUT (4 x 5 : 4 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 1
tmp_i1 (5 : 12): [ 1 1 1 1 1 ]


checkOUT (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_i

128: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 0 0 0 0 ]
h (5 : 5): [ 1 2 3 4 5 ]


tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
s = 3


ind (5 : 5): [ 3 3 3 3 3 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 3 3 3 3 3 ]
s = 1


tmp_i1 (5 : 5): [ 4 4 4 4 4 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (5 : 5): [ 4 4 4 4 4 ]


T2 (5 : 5): [ 0.3224199317354524 0.3224199317354524 0.3224199317354524 0.3224199317354524 0.3224199317354524 ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


old1 (5 : 5): [ 5 5 5 5 5 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 3 3 3 3 3 ]
s = 1


tmp_i1 (5 : 5): [ 4 4 4 4 4 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 4 4 4 4 4 ]


old2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (5 : 5): [ 5 5 5 5 5 ]
s = -1


new1 (5 : 5): [ 4 4 4 4 4 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (5 : 5): [ 0 0 0 0 0 ]
s = 1


new2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


toll1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 3 3 3 3 3 ]
s = 1


tmp_i1 (5 : 5): [ 4 4 4 4 4 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 4 4 4 4 4 ]


toll2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (5 : 5): [ 5 5 5 5 5 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (5 : 5): [ 4 4 4 4 4 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (5 : 5): [ 1.000000017730155 1 1 1 1 ]
val = 0


S1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (5 : 5): [ 0 0 0 0 0 ]
T2 (5 : 5): [ 0.3224199317354524 0.3224199317354524 0.3224199317354524 0.3224199317354524 0.3224199317354524 ]


a (5 : 5): [ -0.3224199317354524 -0.3224199317354524 -0.3224199317354524 -0.3224199317354524 -0.3224199317354524 ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ -0.3224199317354524 -0.3224199317354524 -0.3224199317354524 -0.3224199317354524 -0.3224199317354524 ]


a (5 : 5): [ 0.3224199317354524 0.3224199317354524 0.3224199317354524 0.3224199317354524 0.3224199317354524 ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (5 : 5): [ 1 1 1 1 1 ]
T2 (5 : 5): [ 0.3224199317354524 0.3224199317354524 0.3224199317354524 0.3224199317354524 0.3224199317354524 ]


b (5 : 5): [ 0.6775800682645476 0.6775800682645476 0.6775800682645476 0.6775800682645476 0.6775800682645476 ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 0.6775800682645476 0.6775800682645476 0.6775800682645476 0.6775800682645476 0.6775800682645476 ]


b (5 : 5): [ 0.6775800682645476 0.6775800682645476 0.6775800682645476 0.6775800682645476 0.6775800682645476 ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 0.3224199317354524 0.3224199317354524 0.3224199317354524 0.3224199317354524 0.3224199317354524 ]
b (5 : 5): [ 0.6775800682645476 0.6775800682645476 0.6775800682645476 0.6775800682645476 0.6775800682645476 ]


tmpm_d (5 x 2 : 5 x 2): [
	 0.3224199317354524 0.6775800682645476
	 0.3224199317354524 0.6775800682645476
	 0.3224199317354524 0.6775800682645476
	 0.3224199317354524 0.6775800682645476
	 0.3224199317354524 0.6775800682645476
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 0.3224199317354524 0.6775800682645476
	 0.3224199317354524 0.6775800682645476
	 0.3224199317354524 0.6775800682645476
	 0.3224199317354524 0.6775800682645476
	 0.3224199317354524 0.6775800682645476
 ]


m (5 : 5): [ 0.6775800682645476 0.6775800682645476 0.6775800682645476 0.6775800682645476 0.6775800682645476 ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (5 : 5): [ 0.3224199317354524 0.3224199317354524 0.3224199317354524 0.3224199317354524 0.3224199317354524 ]
complemento = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxNA_d

115: assegna1_vs_indx_d	<=>	v[indx] <- val
a (5 : 5): [ 0.3224199317354524 0.3224199317354524 0.3224199317354524 0.3224199317354524 0.3224199317354524 ]
ind (0 : 5): [ ]
val = 0


a (5 : 5): [ 0.3224199317354524 0.3224199317354524 0.3224199317354524 0.3224199317354524 0.3224199317354524 ]
------------------------------ Fine assegna1_vs_indx_d

117: assegna1_vs_indx_d	<=>	v[indx] <- val
b (5 : 5): [ 0.6775800682645476 0.6775800682645476 0.6775800682645476 0.6775800682645476 0.6775800682645476 ]
ind (0 : 5): [ ]
val = 0


b (5 : 5): [ 0.6775800682645476 0.6775800682645476 0.6775800682645476 0.6775800682645476 0.6775800682645476 ]
------------------------------ Fine assegna1_vs_indx_d

119: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 0.3224199317354524 0.3224199317354524 0.3224199317354524 0.3224199317354524 0.3224199317354524 ]
b (5 : 5): [ 0.6775800682645476 0.6775800682645476 0.6775800682645476 0.6775800682645476 0.6775800682645476 ]


tmpm_d (5 x 2 : 5 x 2): [
	 0.3224199317354524 0.6775800682645476
	 0.3224199317354524 0.6775800682645476
	 0.3224199317354524 0.6775800682645476
	 0.3224199317354524 0.6775800682645476
	 0.3224199317354524 0.6775800682645476
 ]
------------------------------ Fine cbind2v_d

120: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 0.3224199317354524 0.6775800682645476
	 0.3224199317354524 0.6775800682645476
	 0.3224199317354524 0.6775800682645476
	 0.3224199317354524 0.6775800682645476
	 0.3224199317354524 0.6775800682645476
 ]


m (5 : 5): [ 0.6775800682645476 0.6775800682645476 0.6775800682645476 0.6775800682645476 0.6775800682645476 ]
------------------------------ Fine max_righe_d

122: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (5 : 5): [ 0.3224199317354524 0.3224199317354524 0.3224199317354524 0.3224199317354524 0.3224199317354524 ]
b (5 : 5): [ 0.6775800682645476 0.6775800682645476 0.6775800682645476 0.6775800682645476 0.6775800682645476 ]
m (5 : 5): [ 0.6775800682645476 0.6775800682645476 0.6775800682645476 0.6775800682645476 0.6775800682645476 ]
T2 (5 : 5): [ 0.3224199317354524 0.3224199317354524 0.3224199317354524 0.3224199317354524 0.3224199317354524 ]


S2 (5 : 5): [ -2.101545225871788 -2.101545225871788 -2.101545225871788 -2.101545225871788 -2.101545225871788 ]
------------------------------ Fine f_aux_d

124: diff_vv_d	<=>	ris <- v1 - v2
a (5 : 5): [ 0.3224199317354524 0.3224199317354524 0.3224199317354524 0.3224199317354524 0.3224199317354524 ]
toll2 (5 : 5): [ 1 1 1 1 1 ]


tmp_d1 (5 : 5): [ -0.6775800682645476 -0.6775800682645476 -0.6775800682645476 -0.6775800682645476 -0.6775800682645476 ]
------------------------------ Fine diff_vv_d

125: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (5 : 5): [ -0.6775800682645476 -0.6775800682645476 -0.6775800682645476 -0.6775800682645476 -0.6775800682645476 ]
val = 0

ind1 (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxlt_d

127: diff_vv_d	<=>	ris <- v1 - v2
b (5 : 5): [ 0.6775800682645476 0.6775800682645476 0.6775800682645476 0.6775800682645476 0.6775800682645476 ]
toll2 (5 : 5): [ 1 1 1 1 1 ]


tmp_d1 (5 : 5): [ -0.3224199317354524 -0.3224199317354524 -0.3224199317354524 -0.3224199317354524 -0.3224199317354524 ]
------------------------------ Fine diff_vv_d

128: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (5 : 5): [ -0.3224199317354524 -0.3224199317354524 -0.3224199317354524 -0.3224199317354524 -0.3224199317354524 ]
val = 0


ind2 (0 : 5): [ ]
------------------------------ Fine which_v_indxgt_d

130: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (5 : 5): [ 1 2 3 4 5 ]
ind2 (0 : 5): [ ]
2459: esiste_v_i	<=>	elem %IN% v
elem = 1
ind2 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 1
tmp_i1 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 2
ind2 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 2
tmp_i1 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 3
ind2 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 3
tmp_i1 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 4
ind2 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 4
tmp_i1 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 5
ind2 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 5
tmp_i1 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i



tmp_i1 (0 : 5): [ ]
------------------------------ Fine interseca_i

132: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ -2.101545225871788 -2.101545225871788 -2.101545225871788 -2.101545225871788 -2.101545225871788 ]
tmp_i1 (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ -2.101545225871788 -2.101545225871788 -2.101545225871788 -2.101545225871788 -2.101545225871788 ]
------------------------------ Fine assegna1_vs_indx_d

134: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ -2.101545225871788 -2.101545225871788 -2.101545225871788 -2.101545225871788 -2.101545225871788 ]
ind (0 : 5): [ ]
val = 0


S2 (5 : 5): [ -2.101545225871788 -2.101545225871788 -2.101545225871788 -2.101545225871788 -2.101545225871788 ]
------------------------------ Fine assegna1_vs_indx_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (5 : 5): [ 0.3224199317354524 0.3224199317354524 0.3224199317354524 0.3224199317354524 0.3224199317354524 ]
val = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ -2.101545225871788 -2.101545225871788 -2.101545225871788 -2.101545225871788 -2.101545225871788 ]
ind (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ -2.101545225871788 -2.101545225871788 -2.101545225871788 -2.101545225871788 -2.101545225871788 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (5 : 5): [ 0 0 0 0 0 ]
S2 (5 : 5): [ -2.101545225871788 -2.101545225871788 -2.101545225871788 -2.101545225871788 -2.101545225871788 ]


ris (5 : 5): [ -2.101545225871788 -2.101545225871788 -2.101545225871788 -2.101545225871788 -2.101545225871788 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
ris (5 : 5): [ -2.101545225871788 -2.101545225871788 -2.101545225871788 -2.101545225871788 -2.101545225871788 ]
div = 2.000


ris (5 : 5): [ -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (1546 interne); stringhe deallocate: 0 (1216 interne)

131: which_v_indxne_d	<=>	ris <- which(v != val)
ris (5 : 5): [ -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 ]
val = -1.#INF


indok (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxne_d

133: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkIN (4 x 5 : 4 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 1
indok (5 : 5): [ 1 2 3 4 5 ]
val = 1


checkIN (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_riga_indx_i

141: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 5
incr = 1


tmp_i1 (5 : 12): [ 1 2 3 4 5 ]
------------------------------ Fine seq_i

142: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (5 : 12): [ 1 2 3 4 5 ]
indok (5 : 5): [ 1 2 3 4 5 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (5 : 12): [ 1 2 3 4 5 ]
st = 1
end = 5


indInf (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (5 : 5): [ 1 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (5 : 5): [ 1 2 3 4 5 ]
indx = 1


indInf (4 : 5): [ 2 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (4 : 5): [ 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (4 : 5): [ 2 3 4 5 ]
indx = 1


indInf (3 : 5): [ 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (3 : 5): [ 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 5): [ 3 4 5 ]
indx = 1


indInf (2 : 5): [ 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 4
indInf (2 : 5): [ 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 5): [ 4 5 ]
indx = 1


indInf (1 : 5): [ 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 5
indInf (1 : 5): [ 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 5): [ 5 ]
indx = 1


indInf (0 : 5): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 5): [ ]
------------------------------ Fine setdiff_i

144: copia_v_indx_d	<=>	ris <- v[indx]
ris (5 : 5): [ -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 ]
indok (5 : 5): [ 1 2 3 4 5 ]


tmp_d1 (5 : 5): [ -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 ]
------------------------------ Fine copia_v_indx_d

148: min_v_d	<=>	ris <- min(v)
tmp_d1 (5 : 5): [ -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 ]


min = -1.050772612935894
------------------------------ Fine min_v_d

149: assegna1_vs_indx_d	<=>	v[indx] <- val
ris (5 : 5): [ -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 ]
indInf (0 : 5): [ ]
val = -2.050772612935894


ris (5 : 5): [ -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 ]
------------------------------ Fine assegna1_vs_indx_d

159: somma_vv_d	<=>	ris <- v1 + v2
S_out (5 : 5): [ 0 0 0 0 0 ]
ris (5 : 5): [ -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 ]


tmp_d1 (5 : 5): [ -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (4 x 5 : 4 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 1
tmp_d1 (5 : 5): [ -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 ]


ris (4 x 5 : 4 x 5): [
	 -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_d

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (4 x 3 : 4 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 1


tmp_i1 (0 : 12): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (4 x 3 : 4 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 1


tmp_i2 (0 : 12): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 12): [ ]
tmp_i2 (0 : 12): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

92: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sout (5 : 5): [ 0 0 0 0 0 ]
h (5 : 5): [ 1 2 3 4 5 ]


tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
s = 1


ind (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


old1 (5 : 5): [ 5 5 5 5 5 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


old2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (5 : 5): [ 5 5 5 5 5 ]
s = -1


new1 (5 : 5): [ 4 4 4 4 4 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (5 : 5): [ 0 0 0 0 0 ]
s = 1


new2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


toll1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


toll2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (5 : 5): [ 5 5 5 5 5 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (5 : 5): [ 4 4 4 4 4 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (5 : 5): [ 5.000000070923015 5 5 5 5 ]
val = 0


S1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (5 : 5): [ 0 0 0 0 0 ]
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]


a (5 : 5): [ -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 ]


a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (5 : 5): [ 1 1 1 1 1 ]
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]


b (5 : 5): [ -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 ]


b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]


tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]


m (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
complemento = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxNA_d

115: assegna1_vs_indx_d	<=>	v[indx] <- val
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
ind (0 : 5): [ ]
val = 0


a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine assegna1_vs_indx_d

117: assegna1_vs_indx_d	<=>	v[indx] <- val
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
ind (0 : 5): [ ]
val = 0


b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
------------------------------ Fine assegna1_vs_indx_d

119: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]


tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]
------------------------------ Fine cbind2v_d

120: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]


m (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine max_righe_d

122: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
m (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine f_aux_d

124: diff_vv_d	<=>	ris <- v1 - v2
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
toll2 (5 : 5): [ 1 1 1 1 1 ]


tmp_d1 (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
------------------------------ Fine diff_vv_d

125: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
val = 0

ind1 (0 : 5): [ ]
------------------------------ Fine which_v_indxlt_d

127: diff_vv_d	<=>	ris <- v1 - v2
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
toll2 (5 : 5): [ 1 1 1 1 1 ]


tmp_d1 (5 : 5): [ 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 ]
------------------------------ Fine diff_vv_d

128: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (5 : 5): [ 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 ]
val = 0


ind2 (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxgt_d

130: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (0 : 5): [ ]
ind2 (5 : 5): [ 1 2 3 4 5 ]


tmp_i1 (0 : 5): [ ]
------------------------------ Fine interseca_i

132: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
tmp_i1 (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

134: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
ind (0 : 5): [ ]
val = 0


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
val = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
ind (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (5 : 5): [ 0 0 0 0 0 ]
S2 (5 : 5): [ 1 1 1 1 1 ]


S_out (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
S_out (5 : 5): [ 1 1 1 1 1 ]
div = 2.000


S_out (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (1661 interne); stringhe deallocate: 0 (1316 interne)

95: which_v_indxne_d	<=>	ris <- which(v != val)
S_out (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
val = -1.#INF


indok (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxne_d

97: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkOUT (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 2
indok (5 : 5): [ 1 2 3 4 5 ]
val = 1


checkOUT (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_riga_indx_i

104: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 5
incr = 1


tmp_i1 (5 : 12): [ 1 2 3 4 5 ]
------------------------------ Fine seq_i

105: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (5 : 12): [ 1 2 3 4 5 ]
indok (5 : 5): [ 1 2 3 4 5 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (5 : 12): [ 1 2 3 4 5 ]
st = 1
end = 5


indInf (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (5 : 5): [ 1 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (5 : 5): [ 1 2 3 4 5 ]
indx = 1


indInf (4 : 5): [ 2 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (4 : 5): [ 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (4 : 5): [ 2 3 4 5 ]
indx = 1


indInf (3 : 5): [ 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (3 : 5): [ 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 5): [ 3 4 5 ]
indx = 1


indInf (2 : 5): [ 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 4
indInf (2 : 5): [ 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 5): [ 4 5 ]
indx = 1


indInf (1 : 5): [ 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 5
indInf (1 : 5): [ 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 5): [ 5 ]
indx = 1


indInf (0 : 5): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 5): [ ]
------------------------------ Fine setdiff_i

107: copia_v_indx_d	<=>	ris <- v[indx]
S_out (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
indok (5 : 5): [ 1 2 3 4 5 ]


tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine copia_v_indx_d

111: min_v_d	<=>	ris <- min(v)
tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]


min = 0.5
------------------------------ Fine min_v_d

112: assegna1_vs_indx_d	<=>	v[indx] <- val
S_out (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
indInf (0 : 5): [ ]
val = -1


S_out (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine assegna1_vs_indx_d

128: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 0 0 0 0 ]
h (5 : 5): [ 1 2 3 4 5 ]


tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
s = 1


ind (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


old1 (5 : 5): [ 5 5 5 5 5 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


old2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (5 : 5): [ 5 5 5 5 5 ]
s = -1


new1 (5 : 5): [ 4 4 4 4 4 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (5 : 5): [ 0 0 0 0 0 ]
s = 1


new2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


toll1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


toll2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (5 : 5): [ 5 5 5 5 5 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (5 : 5): [ 4 4 4 4 4 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (5 : 5): [ 5.000000070920379 5 5 5 5 ]
val = 0


S1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (5 : 5): [ 0 0 0 0 0 ]
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]


a (5 : 5): [ -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 ]


a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (5 : 5): [ 1 1 1 1 1 ]
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]


b (5 : 5): [ -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 ]


b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]


tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]


m (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
complemento = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxNA_d

115: assegna1_vs_indx_d	<=>	v[indx] <- val
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
ind (0 : 5): [ ]
val = 0


a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine assegna1_vs_indx_d

117: assegna1_vs_indx_d	<=>	v[indx] <- val
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
ind (0 : 5): [ ]
val = 0


b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
------------------------------ Fine assegna1_vs_indx_d

119: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]


tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]
------------------------------ Fine cbind2v_d

120: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]


m (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine max_righe_d

122: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
m (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine f_aux_d

124: diff_vv_d	<=>	ris <- v1 - v2
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
toll2 (5 : 5): [ 1 1 1 1 1 ]


tmp_d1 (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
------------------------------ Fine diff_vv_d

125: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
val = 0

ind1 (0 : 5): [ ]
------------------------------ Fine which_v_indxlt_d

127: diff_vv_d	<=>	ris <- v1 - v2
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
toll2 (5 : 5): [ 1 1 1 1 1 ]


tmp_d1 (5 : 5): [ 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 ]
------------------------------ Fine diff_vv_d

128: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (5 : 5): [ 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 ]
val = 0


ind2 (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxgt_d

130: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (0 : 5): [ ]
ind2 (5 : 5): [ 1 2 3 4 5 ]


tmp_i1 (0 : 5): [ ]
------------------------------ Fine interseca_i

132: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
tmp_i1 (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

134: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
ind (0 : 5): [ ]
val = 0


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
val = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
ind (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (5 : 5): [ 0 0 0 0 0 ]
S2 (5 : 5): [ 1 1 1 1 1 ]


ris (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
ris (5 : 5): [ 1 1 1 1 1 ]
div = 2.000


ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (1761 interne); stringhe deallocate: 0 (1416 interne)

131: which_v_indxne_d	<=>	ris <- which(v != val)
ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
val = -1.#INF


indok (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxne_d

133: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkIN (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 2
indok (5 : 5): [ 1 2 3 4 5 ]
val = 1


checkIN (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_riga_indx_i

141: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 5
incr = 1


tmp_i1 (5 : 12): [ 1 2 3 4 5 ]
------------------------------ Fine seq_i

142: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (5 : 12): [ 1 2 3 4 5 ]
indok (5 : 5): [ 1 2 3 4 5 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (5 : 12): [ 1 2 3 4 5 ]
st = 1
end = 5


indInf (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (5 : 5): [ 1 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (5 : 5): [ 1 2 3 4 5 ]
indx = 1


indInf (4 : 5): [ 2 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (4 : 5): [ 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (4 : 5): [ 2 3 4 5 ]
indx = 1


indInf (3 : 5): [ 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (3 : 5): [ 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 5): [ 3 4 5 ]
indx = 1


indInf (2 : 5): [ 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 4
indInf (2 : 5): [ 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 5): [ 4 5 ]
indx = 1


indInf (1 : 5): [ 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 5
indInf (1 : 5): [ 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 5): [ 5 ]
indx = 1


indInf (0 : 5): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 5): [ ]
------------------------------ Fine setdiff_i

144: copia_v_indx_d	<=>	ris <- v[indx]
ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
indok (5 : 5): [ 1 2 3 4 5 ]


tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine copia_v_indx_d

148: min_v_d	<=>	ris <- min(v)
tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]


min = 0.5
------------------------------ Fine min_v_d

149: assegna1_vs_indx_d	<=>	v[indx] <- val
ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
indInf (0 : 5): [ ]
val = -1


ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine assegna1_vs_indx_d

159: somma_vv_d	<=>	ris <- v1 + v2
S_out (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]


tmp_d1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (4 x 5 : 4 x 5): [
	 -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 2
tmp_d1 (5 : 5): [ 1 1 1 1 1 ]


ris (4 x 5 : 4 x 5): [
	 -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894
	 1 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_d

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (4 x 3 : 4 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 0


tmp_i1 (0 : 12): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (4 x 3 : 4 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 2


tmp_i2 (0 : 12): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 12): [ ]
tmp_i2 (0 : 12): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

92: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sout (5 : 5): [ 0 0 0 0 0 ]
h (5 : 5): [ 1 2 3 4 5 ]


tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
s = 2


ind (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 2 2 2 2 2 ]
s = 1


tmp_i1 (5 : 5): [ 3 3 3 3 3 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (5 : 5): [ 3 3 3 3 3 ]


T2 (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


old1 (5 : 5): [ 5 5 5 5 5 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 2 2 2 2 2 ]
s = 1


tmp_i1 (5 : 5): [ 3 3 3 3 3 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 3 3 3 3 3 ]


old2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (5 : 5): [ 5 5 5 5 5 ]
s = -1


new1 (5 : 5): [ 4 4 4 4 4 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (5 : 5): [ 0 0 0 0 0 ]
s = 1


new2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


toll1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 2 2 2 2 2 ]
s = 1


tmp_i1 (5 : 5): [ 3 3 3 3 3 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 3 3 3 3 3 ]


toll2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (5 : 5): [ 5 5 5 5 5 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (5 : 5): [ 4 4 4 4 4 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (5 : 5): [ 5.000000070922766 5 5 5 5 ]
val = 0


S1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (5 : 5): [ 0 0 0 0 0 ]
T2 (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]


a (5 : 5): [ -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 ]


a (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (5 : 5): [ 1 1 1 1 1 ]
T2 (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]


b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]


b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]


tmpm_d (5 x 2 : 5 x 2): [
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
 ]


m (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
complemento = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxNA_d

115: assegna1_vs_indx_d	<=>	v[indx] <- val
a (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
ind (0 : 5): [ ]
val = 0


a (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
------------------------------ Fine assegna1_vs_indx_d

117: assegna1_vs_indx_d	<=>	v[indx] <- val
b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]
ind (0 : 5): [ ]
val = 0


b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine assegna1_vs_indx_d

119: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]


tmpm_d (5 x 2 : 5 x 2): [
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
 ]
------------------------------ Fine cbind2v_d

120: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
 ]


m (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
------------------------------ Fine max_righe_d

122: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]
m (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
T2 (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine f_aux_d

124: diff_vv_d	<=>	ris <- v1 - v2
a (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
toll2 (5 : 5): [ 1 1 1 1 1 ]


tmp_d1 (5 : 5): [ -0.2132755425131789 -0.2132755425131789 -0.2132755425131789 -0.2132755425131789 -0.2132755425131789 ]
------------------------------ Fine diff_vv_d

125: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (5 : 5): [ -0.2132755425131789 -0.2132755425131789 -0.2132755425131789 -0.2132755425131789 -0.2132755425131789 ]
val = 0

ind1 (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxlt_d

127: diff_vv_d	<=>	ris <- v1 - v2
b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]
toll2 (5 : 5): [ 1 1 1 1 1 ]


tmp_d1 (5 : 5): [ -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 ]
------------------------------ Fine diff_vv_d

128: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (5 : 5): [ -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 ]
val = 0


ind2 (0 : 5): [ ]
------------------------------ Fine which_v_indxgt_d

130: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (5 : 5): [ 1 2 3 4 5 ]
ind2 (0 : 5): [ ]
2459: esiste_v_i	<=>	elem %IN% v
elem = 1
ind2 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 1
tmp_i1 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 2
ind2 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 2
tmp_i1 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 3
ind2 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 3
tmp_i1 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 4
ind2 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 4
tmp_i1 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 5
ind2 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 5
tmp_i1 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i



tmp_i1 (0 : 5): [ ]
------------------------------ Fine interseca_i

132: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
tmp_i1 (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

134: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
ind (0 : 5): [ ]
val = 0


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
val = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
ind (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (5 : 5): [ 0 0 0 0 0 ]
S2 (5 : 5): [ 1 1 1 1 1 ]


S_out (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
S_out (5 : 5): [ 1 1 1 1 1 ]
div = 2.000


S_out (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (1861 interne); stringhe deallocate: 0 (1516 interne)

95: which_v_indxne_d	<=>	ris <- which(v != val)
S_out (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
val = -1.#INF


indok (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxne_d

97: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkOUT (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 3
indok (5 : 5): [ 1 2 3 4 5 ]
val = 1


checkOUT (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_riga_indx_i

104: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 5
incr = 1


tmp_i1 (5 : 12): [ 1 2 3 4 5 ]
------------------------------ Fine seq_i

105: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (5 : 12): [ 1 2 3 4 5 ]
indok (5 : 5): [ 1 2 3 4 5 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (5 : 12): [ 1 2 3 4 5 ]
st = 1
end = 5


indInf (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (5 : 5): [ 1 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (5 : 5): [ 1 2 3 4 5 ]
indx = 1


indInf (4 : 5): [ 2 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (4 : 5): [ 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (4 : 5): [ 2 3 4 5 ]
indx = 1


indInf (3 : 5): [ 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (3 : 5): [ 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 5): [ 3 4 5 ]
indx = 1


indInf (2 : 5): [ 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 4
indInf (2 : 5): [ 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 5): [ 4 5 ]
indx = 1


indInf (1 : 5): [ 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 5
indInf (1 : 5): [ 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 5): [ 5 ]
indx = 1


indInf (0 : 5): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 5): [ ]
------------------------------ Fine setdiff_i

107: copia_v_indx_d	<=>	ris <- v[indx]
S_out (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
indok (5 : 5): [ 1 2 3 4 5 ]


tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine copia_v_indx_d

111: min_v_d	<=>	ris <- min(v)
tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]


min = 0.5
------------------------------ Fine min_v_d

112: assegna1_vs_indx_d	<=>	v[indx] <- val
S_out (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
indInf (0 : 5): [ ]
val = -1


S_out (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine assegna1_vs_indx_d

155: InitVett_d
ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
val = 0


ris (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

156: aggiungi_ms_riga_i	<=>	m[riga,] <- val # riga <= dim(m)[0] + 1
checkIN (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 3, val = 1


checkIN (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_ms_riga_i

159: somma_vv_d	<=>	ris <- v1 + v2
S_out (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
ris (5 : 5): [ 0 0 0 0 0 ]


tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (4 x 5 : 4 x 5): [
	 -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894
	 1 1 1 1 1
	 0 0 0 0 0
	 0 0 0 0 0
 ]
riga = 3
tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]


ris (4 x 5 : 4 x 5): [
	 -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894
	 1 1 1 1 1
	 0.5 0.5 0.5 0.5 0.5
	 0 0 0 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_d

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (4 x 3 : 4 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 1


tmp_i1 (0 : 12): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (4 x 3 : 4 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 2


tmp_i2 (0 : 12): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 12): [ ]
tmp_i2 (0 : 12): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

92: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sout (5 : 5): [ 0 0 0 0 0 ]
h (5 : 5): [ 1 2 3 4 5 ]


tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
s = 2


ind (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 2 2 2 2 2 ]
s = 1


tmp_i1 (5 : 5): [ 3 3 3 3 3 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (5 : 5): [ 3 3 3 3 3 ]


T2 (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


old1 (5 : 5): [ 5 5 5 5 5 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 2 2 2 2 2 ]
s = 1


tmp_i1 (5 : 5): [ 3 3 3 3 3 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 3 3 3 3 3 ]


old2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (5 : 5): [ 5 5 5 5 5 ]
s = -1


new1 (5 : 5): [ 4 4 4 4 4 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (5 : 5): [ 0 0 0 0 0 ]
s = 1


new2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


toll1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 2 2 2 2 2 ]
s = 1


tmp_i1 (5 : 5): [ 3 3 3 3 3 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 3 3 3 3 3 ]


toll2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (5 : 5): [ 5 5 5 5 5 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (5 : 5): [ 4 4 4 4 4 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (5 : 5): [ 5.000000070920621 5 5 5 5 ]
val = 0


S1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (5 : 5): [ 0 0 0 0 0 ]
T2 (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]


a (5 : 5): [ -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 ]


a (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (5 : 5): [ 1 1 1 1 1 ]
T2 (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]


b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]


b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]


tmpm_d (5 x 2 : 5 x 2): [
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
 ]


m (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
complemento = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxNA_d

115: assegna1_vs_indx_d	<=>	v[indx] <- val
a (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
ind (0 : 5): [ ]
val = 0


a (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
------------------------------ Fine assegna1_vs_indx_d

117: assegna1_vs_indx_d	<=>	v[indx] <- val
b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]
ind (0 : 5): [ ]
val = 0


b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine assegna1_vs_indx_d

119: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]


tmpm_d (5 x 2 : 5 x 2): [
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
 ]
------------------------------ Fine cbind2v_d

120: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
	 0.7867244574868211 0.2132755425131789
 ]


m (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
------------------------------ Fine max_righe_d

122: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]
m (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
T2 (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine f_aux_d

124: diff_vv_d	<=>	ris <- v1 - v2
a (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
toll2 (5 : 5): [ 1 1 1 1 1 ]


tmp_d1 (5 : 5): [ -0.2132755425131789 -0.2132755425131789 -0.2132755425131789 -0.2132755425131789 -0.2132755425131789 ]
------------------------------ Fine diff_vv_d

125: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (5 : 5): [ -0.2132755425131789 -0.2132755425131789 -0.2132755425131789 -0.2132755425131789 -0.2132755425131789 ]
val = 0

ind1 (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxlt_d

127: diff_vv_d	<=>	ris <- v1 - v2
b (5 : 5): [ 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 0.2132755425131789 ]
toll2 (5 : 5): [ 1 1 1 1 1 ]


tmp_d1 (5 : 5): [ -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 ]
------------------------------ Fine diff_vv_d

128: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (5 : 5): [ -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 -0.7867244574868211 ]
val = 0


ind2 (0 : 5): [ ]
------------------------------ Fine which_v_indxgt_d

130: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (5 : 5): [ 1 2 3 4 5 ]
ind2 (0 : 5): [ ]
2459: esiste_v_i	<=>	elem %IN% v
elem = 1
ind2 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 1
tmp_i1 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 2
ind2 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 2
tmp_i1 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 3
ind2 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 3
tmp_i1 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 4
ind2 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 4
tmp_i1 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 5
ind2 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 5
tmp_i1 (0 : 5): [ ]


indx = 0
------------------------------ Fine esiste_v_i



tmp_i1 (0 : 5): [ ]
------------------------------ Fine interseca_i

132: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
tmp_i1 (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

134: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
ind (0 : 5): [ ]
val = 0


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (5 : 5): [ 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 0.7867244574868211 ]
val = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
ind (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (5 : 5): [ 0 0 0 0 0 ]
S2 (5 : 5): [ 1 1 1 1 1 ]


S_out (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
S_out (5 : 5): [ 1 1 1 1 1 ]
div = 2.000


S_out (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (1961 interne); stringhe deallocate: 0 (1616 interne)

95: which_v_indxne_d	<=>	ris <- which(v != val)
S_out (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
val = -1.#INF


indok (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxne_d

97: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkOUT (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 0 0 0 0 0
 ]
riga = 4
indok (5 : 5): [ 1 2 3 4 5 ]
val = 1


checkOUT (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
------------------------------ Fine aggiungi_riga_indx_i

104: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 5
incr = 1


tmp_i1 (5 : 12): [ 1 2 3 4 5 ]
------------------------------ Fine seq_i

105: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (5 : 12): [ 1 2 3 4 5 ]
indok (5 : 5): [ 1 2 3 4 5 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (5 : 12): [ 1 2 3 4 5 ]
st = 1
end = 5


indInf (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (5 : 5): [ 1 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (5 : 5): [ 1 2 3 4 5 ]
indx = 1


indInf (4 : 5): [ 2 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (4 : 5): [ 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (4 : 5): [ 2 3 4 5 ]
indx = 1


indInf (3 : 5): [ 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (3 : 5): [ 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 5): [ 3 4 5 ]
indx = 1


indInf (2 : 5): [ 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 4
indInf (2 : 5): [ 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 5): [ 4 5 ]
indx = 1


indInf (1 : 5): [ 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 5
indInf (1 : 5): [ 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 5): [ 5 ]
indx = 1


indInf (0 : 5): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 5): [ ]
------------------------------ Fine setdiff_i

107: copia_v_indx_d	<=>	ris <- v[indx]
S_out (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
indok (5 : 5): [ 1 2 3 4 5 ]


tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine copia_v_indx_d

111: min_v_d	<=>	ris <- min(v)
tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]


min = 0.5
------------------------------ Fine min_v_d

112: assegna1_vs_indx_d	<=>	v[indx] <- val
S_out (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
indInf (0 : 5): [ ]
val = -1


S_out (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine assegna1_vs_indx_d

128: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 0 0 0 0 ]
h (5 : 5): [ 1 2 3 4 5 ]


tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
s = 1


ind (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


old1 (5 : 5): [ 5 5 5 5 5 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 5 0 0 0 0 0 0 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


old2 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (5 : 5): [ 5 5 5 5 5 ]
s = -1


new1 (5 : 5): [ 4 4 4 4 4 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (5 : 5): [ 0 0 0 0 0 ]
s = 1


new2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (5 : 12): [ 0 0 0 0 0 ]
s = 1


tmp_i1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 1 1 1 1 1 ]


toll1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (5 : 5): [ 1 1 1 1 1 ]
s = 1


tmp_i1 (5 : 5): [ 2 2 2 2 2 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (5 : 5): [ 2 2 2 2 2 ]


toll2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (5 : 5): [ 5 5 5 5 5 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


a (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (5 : 5): [ 4 4 4 4 4 ]
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]


b (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (5 : 5): [ 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN 1.#QNAN ]
complemento = 0


ind (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxNA_d

99: InitVett_d
S1 (5 : 5): [ 5.000000070923015 5 5 5 5 ]
val = 0


S1 (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (5 : 5): [ 0 0 0 0 0 ]
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]


a (5 : 5): [ -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (5 : 5): [ -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 -3.614836360604185 ]


a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (5 : 5): [ 1 1 1 1 1 ]
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]


b (5 : 5): [ -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (5 : 5): [ -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 -2.614836360604185 ]


b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]


tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]


m (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
complemento = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxNA_d

115: assegna1_vs_indx_d	<=>	v[indx] <- val
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
ind (0 : 5): [ ]
val = 0


a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine assegna1_vs_indx_d

117: assegna1_vs_indx_d	<=>	v[indx] <- val
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
ind (0 : 5): [ ]
val = 0


b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
------------------------------ Fine assegna1_vs_indx_d

119: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]


tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]
------------------------------ Fine cbind2v_d

120: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (5 x 2 : 5 x 2): [
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
	 3.614836360604185 2.614836360604185
 ]


m (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
------------------------------ Fine max_righe_d

122: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
m (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine f_aux_d

124: diff_vv_d	<=>	ris <- v1 - v2
a (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
toll2 (5 : 5): [ 1 1 1 1 1 ]


tmp_d1 (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
------------------------------ Fine diff_vv_d

125: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
val = 0

ind1 (0 : 5): [ ]
------------------------------ Fine which_v_indxlt_d

127: diff_vv_d	<=>	ris <- v1 - v2
b (5 : 5): [ 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 2.614836360604185 ]
toll2 (5 : 5): [ 1 1 1 1 1 ]


tmp_d1 (5 : 5): [ 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 ]
------------------------------ Fine diff_vv_d

128: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (5 : 5): [ 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 1.614836360604185 ]
val = 0


ind2 (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxgt_d

130: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (0 : 5): [ ]
ind2 (5 : 5): [ 1 2 3 4 5 ]


tmp_i1 (0 : 5): [ ]
------------------------------ Fine interseca_i

132: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
tmp_i1 (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

134: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
ind (0 : 5): [ ]
val = 0


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (5 : 5): [ 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 3.614836360604185 ]
val = 0


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (5 : 5): [ 1 1 1 1 1 ]
ind (0 : 5): [ ]
val = -1.#INF


S2 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (5 : 5): [ 0 0 0 0 0 ]
S2 (5 : 5): [ 1 1 1 1 1 ]


ris (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
ris (5 : 5): [ 1 1 1 1 1 ]
div = 2.000


ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (2061 interne); stringhe deallocate: 0 (1716 interne)

131: which_v_indxne_d	<=>	ris <- which(v != val)
ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
val = -1.#INF


indok (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxne_d

133: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkIN (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 0 0 0 0 0
 ]
riga = 4
indok (5 : 5): [ 1 2 3 4 5 ]
val = 1


checkIN (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
------------------------------ Fine aggiungi_riga_indx_i

141: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 5
incr = 1


tmp_i1 (5 : 12): [ 1 2 3 4 5 ]
------------------------------ Fine seq_i

142: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (5 : 12): [ 1 2 3 4 5 ]
indok (5 : 5): [ 1 2 3 4 5 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (5 : 12): [ 1 2 3 4 5 ]
st = 1
end = 5


indInf (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (5 : 5): [ 1 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (5 : 5): [ 1 2 3 4 5 ]
indx = 1


indInf (4 : 5): [ 2 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (4 : 5): [ 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (4 : 5): [ 2 3 4 5 ]
indx = 1


indInf (3 : 5): [ 3 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (3 : 5): [ 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 5): [ 3 4 5 ]
indx = 1


indInf (2 : 5): [ 4 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 4
indInf (2 : 5): [ 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 5): [ 4 5 ]
indx = 1


indInf (1 : 5): [ 5 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 5
indInf (1 : 5): [ 5 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 5): [ 5 ]
indx = 1


indInf (0 : 5): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 5): [ ]
------------------------------ Fine setdiff_i

144: copia_v_indx_d	<=>	ris <- v[indx]
ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
indok (5 : 5): [ 1 2 3 4 5 ]


tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine copia_v_indx_d

148: min_v_d	<=>	ris <- min(v)
tmp_d1 (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]


min = 0.5
------------------------------ Fine min_v_d

149: assegna1_vs_indx_d	<=>	v[indx] <- val
ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
indInf (0 : 5): [ ]
val = -1


ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine assegna1_vs_indx_d

159: somma_vv_d	<=>	ris <- v1 + v2
S_out (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
ris (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]


tmp_d1 (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (4 x 5 : 4 x 5): [
	 -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894
	 1 1 1 1 1
	 0.5 0.5 0.5 0.5 0.5
	 0 0 0 0 0
 ]
riga = 4
tmp_d1 (5 : 5): [ 1 1 1 1 1 ]


ris (4 x 5 : 4 x 5): [
	 -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894
	 1 1 1 1 1
	 0.5 0.5 0.5 0.5 0.5
	 1 1 1 1 1
 ]
------------------------------ Fine aggiungi_mv_riga_d

168: somma_m_d	<=>	ris <- sum(m)
ris (4 x 5 : 4 x 5): [
	 -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894
	 1 1 1 1 1
	 0.5 0.5 0.5 0.5 0.5
	 1 1 1 1 1
 ]


ris: 7.24613693532053
------------------------------ Fine somma_m_d

173: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
checkIN (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]


aus (5 : 5): [ 4 4 4 4 4 ]
------------------------------ Fine somma_colonne_i

175: which_v_indxne_i	<=>	ris <- which(v != val)
aus (5 : 5): [ 4 4 4 4 4 ]
val = 0


tmp_i1 (5 : 12): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxne_i

186: somma_righe_i	<=>	ris <- apply(m, 1, sum)
checkIN (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]


rs (4 : 4): [ 5 5 5 5 ]
------------------------------ Fine somma_righe_i

188: ordine_i	<=>	ris <- order(v, decreasing=decr)
rs (4 : 4): [ 5 5 5 5 ]
decr = 0


ord_ind (4 : 4): [ 1 2 3 4 ]
------------------------------ Fine ordine_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
r = 1
val = 0


I_add (5 : 20): [ 1 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
I (0 : 0): [ ]
I_add (5 : 20): [ 1 2 3 4 5 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (5 : 5): [ 1 2 3 4 5 ]


ris (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine unione1_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
r = 2
val = 0


I_add (5 : 20): [ 1 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
ris (5 : 5): [ 1 2 3 4 5 ]
I_add (5 : 20): [ 1 2 3 4 5 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (10 : 10): [ 1 2 3 4 5 1 2 3 4 5 ]


ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine unione1_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
r = 3
val = 0


I_add (5 : 20): [ 1 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
ris (5 : 10): [ 1 2 3 4 5 ]
I_add (5 : 20): [ 1 2 3 4 5 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (10 : 10): [ 1 2 3 4 5 1 2 3 4 5 ]


ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine unione1_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
r = 4
val = 0


I_add (5 : 20): [ 1 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
ris (5 : 10): [ 1 2 3 4 5 ]
I_add (5 : 20): [ 1 2 3 4 5 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (10 : 10): [ 1 2 3 4 5 1 2 3 4 5 ]


ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine unione1_i

216: assegna1_mindxlt_i	<=>	m1[which(m2<val1)] <- val2
checkOUT (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
checkOUT (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
val1 = 0
val2 = 0


checkOUT (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
------------------------------ Fine assegna1_mindxlt_i

218: assegna1_m_indxgt_i	<=>	m1[which(m2>val1)] <- val2
checkOUT (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
checkOUT (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
val1 = 0
val2 = 1


checkOUT (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
------------------------------ Fine assegna1_m_indxgt_i

220: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
checkOUT (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]


aus (5 : 5): [ 4 4 4 4 4 ]
------------------------------ Fine somma_colonne_i

222: which_v_indxne_i	<=>	ris <- which(v != val)
aus (5 : 5): [ 4 4 4 4 4 ]
val = 0


tmp_i1 (5 : 12): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxne_i

232: somma_righe_i	<=>	ris <- apply(m, 1, sum)
checkOUT (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]


rs (4 : 4): [ 5 5 5 5 ]
------------------------------ Fine somma_righe_i

234: ordine_i	<=>	ris <- order(v, decreasing=decr)
rs (4 : 4): [ 5 5 5 5 ]
decr = 0


ord_ind (4 : 4): [ 1 2 3 4 ]
------------------------------ Fine ordine_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
r = 1
val = 0


I_add (5 : 20): [ 1 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (0 : 10): [ ]
I_add (5 : 20): [ 1 2 3 4 5 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (5 : 5): [ 1 2 3 4 5 ]


ris (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine unione1_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
r = 2
val = 0


I_add (5 : 20): [ 1 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (5 : 5): [ 1 2 3 4 5 ]
I_add (5 : 20): [ 1 2 3 4 5 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (10 : 10): [ 1 2 3 4 5 1 2 3 4 5 ]


ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine unione1_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
r = 3
val = 0


I_add (5 : 20): [ 1 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (5 : 10): [ 1 2 3 4 5 ]
I_add (5 : 20): [ 1 2 3 4 5 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (10 : 10): [ 1 2 3 4 5 1 2 3 4 5 ]


ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine unione1_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (4 x 5 : 4 x 5): [
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
	 1 1 1 1 1
 ]
r = 4
val = 0


I_add (5 : 20): [ 1 2 3 4 5 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (5 : 10): [ 1 2 3 4 5 ]
I_add (5 : 20): [ 1 2 3 4 5 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (10 : 10): [ 1 2 3 4 5 1 2 3 4 5 ]


ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine elimina_doppi_i



ris (5 : 10): [ 1 2 3 4 5 ]
------------------------------ Fine unione1_i


Stringhe allocate: 5 (2166 interne); stringhe deallocate: 0 (1896 interne)

90: seq_i	<=>	ris <- seq(da, a, incr)
da = 2
a = 4
incr = 1


ris->indices (3 : 3): [ 2 3 4 ]
------------------------------ Fine seq_i


Stringhe allocate: 5 (2171 interne); stringhe deallocate: 0 (1911 interne)

143: vettore3s_d		<=>	ris <- c(el1, el2, el3)
el1 = 5, el2 = 2.5, el3 = 1.811534233830133


prob_mod (3 : 3): [ 5 2.5 1.811534233830133 ]
------------------------------ Fine vettore3s_d

145: assegna1_v_indxeq_d	<=>	v[which(v==val1)] <- val2
prob_mod (3 : 3): [ 5 2.5 1.811534233830133 ]
prob_mod (3 : 3): [ 5 2.5 1.811534233830133 ]
val1 = 0
val2 = 1.#QNAN


prob_mod (3 : 3): [ 5 2.5 1.811534233830133 ]
------------------------------ Fine assegna1_v_indxeq_d

147: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
prob_mod (3 : 3): [ 5 2.5 1.811534233830133 ]
complemento = 1


ind (3 : 3): [ 1 2 3 ]
------------------------------ Fine which_v_indxNA_d

153: copia_v_indx_d	<=>	ris <- v[indx]
prob_mod (3 : 3): [ 5 2.5 1.811534233830133 ]
ind (3 : 3): [ 1 2 3 ]


tmp1_d (3 : 16): [ 5 2.5 1.811534233830133 ]
------------------------------ Fine copia_v_indx_d

154: min_v_d	<=>	ris <- min(v)
tmp1_d (3 : 16): [ 5 2.5 1.811534233830133 ]


min = 1.811534233830133
------------------------------ Fine min_v_d

160: assegna1_v_indxNA_d	<=>	v1[which(is.na(v2))] <- val oppure v1[which(!is.na(v2))] <- val
prob_mod (3 : 3): [ 5 2.5 1.811534233830133 ]
prob_mod (3 : 3): [ 5 2.5 1.811534233830133 ]
val = 0
complemento = 0


prob_mod (3 : 3): [ 5 2.5 1.811534233830133 ]
------------------------------ Fine assegna1_v_indxNA_d

162: somma_v_d	<=>	ris <- sum(v, na.rm=canc_NA)
prob_mod (3 : 3): [ 5 2.5 1.811534233830133 ]
canc_NA = 0



ris: 9.311534233830132
------------------------------ Fine somma_v_d

162: dividi1_vs_d	<=>	v <- v / div
prob_mod (3 : 3): [ 5 2.5 1.811534233830133 ]
div = 9.312


prob_mod (3 : 3): [ 0.5369684387599937 0.2684842193799968 0.1945473418600095 ]
------------------------------ Fine dividi1_vs_d

164: vettore3s_i		<=>	ris <- c(el1, el2, el3)
el1 = 1, el2 = 2, el3 = 3


tmp1_i (3 : 3): [ 1 2 3 ]
------------------------------ Fine vettore3s_i


*** sampleB_p ***

*** sample_p ***
tmp1_i (3 : 3): [ 1 2 3 ]
k = 1, replace = 0
prob_mod (3 : 3): [ 0.5369684387599937 0.2684842193799968 0.1945473418600095 ]


ris (1 : 1): [ 3 ]
*****************************************


Stringhe allocate: 5 (2191 interne); stringhe deallocate: 0 (1911 interne)


*** assign_nodes ***
35: copia_v_i	<=>	ris[st:end] <- v[st:end]
h (5 : 5): [ 1 2 3 4 5 ]
st = 1
end = 5


or_h (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine copia_v_i

37: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 5
incr = 1


aus_h (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine seq_i

43: InitVett_i
index (4 : 4): [ 79848912 771778911 1918959715 25390 ]
val = 0


index (4 : 4): [ 0 0 0 0 ]
------------------------------ Fine InitVett_i

45: somma_righe_i	<=>	ris <- apply(m, 1, sum)
ris (4 x 4 : 4 x 4): [
	 0 1 1 1
	 0 0 0 1
	 0 0 0 0
	 0 0 1 0
 ]


M_in (4 : 4): [ 3 1 0 1 ]
------------------------------ Fine somma_righe_i

47: ordine_i	<=>	ris <- order(v, decreasing=decr)
M_in (4 : 4): [ 3 1 0 1 ]
decr = 1


Ord (4 : 4): [ 1 2 4 3 ]
------------------------------ Fine ordine_i

52: riga_d	<=>	ris <- m[r,]
ris (4 x 5 : 4 x 5): [
	 -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894
	 1 1 1 1 1
	 0.5 0.5 0.5 0.5 0.5
	 1 1 1 1 1
 ]
r = 1

p (5 : 5): [ -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 ]
------------------------------ Fine riga_d

54: which_v_indxle_d	<=>	ris <- which(v<=val)
p (5 : 5): [ -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 ]
val = 0


tmp_i (5 : 5): [ 1 2 3 4 5 ]
------------------------------ Fine which_v_indxle_d

57: min_v_d	<=>	ris <- min(v)
p (5 : 5): [ -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 ]


min = -1.050772612935894
------------------------------ Fine min_v_d

58: somma1_vs_d	<=>	v <- v + s
p (5 : 5): [ -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 ]
s = 1.090772612935894


p (5 : 5): [ 0.04000000000000004 0.04000000000000004 0.04000000000000004 0.04000000000000004 0.04000000000000004 ]
------------------------------ Fine somma1_vs_d

61: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 0 0 0 0 ]
h (5 : 5): [ 1 2 3 4 5 ]


Sin_h (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_i

66: which_v_indxgt_i	<=>	ris <- which(v > val)
Sin_h (5 : 5): [ 0 0 0 0 0 ]
val = 2


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxgt_i

72: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
p (5 : 5): [ 0.04000000000000004 0.04000000000000004 0.04000000000000004 0.04000000000000004 0.04000000000000004 ]
aus_h (5 : 5): [ 1 2 3 4 5 ]


tmp_d (5 : 5): [ 0.04000000000000004 0.04000000000000004 0.04000000000000004 0.04000000000000004 0.04000000000000004 ]
------------------------------ Fine assegna_v_indxNA_d

73: somma_v_d	<=>	ris <- sum(v, na.rm=canc_NA)
tmp_d (5 : 5): [ 0.04000000000000004 0.04000000000000004 0.04000000000000004 0.04000000000000004 0.04000000000000004 ]
canc_NA = 0



ris: 0.2000000000000002
------------------------------ Fine somma_v_d

74: dividi_vs_d	ris <- v / div
tmp_d (5 : 5): [ 0.04000000000000004 0.04000000000000004 0.04000000000000004 0.04000000000000004 0.04000000000000004 ]
div = 0.200


p (5 : 5): [ 0.2 0.2 0.2 0.2 0.2 ]
------------------------------ Fine dividi_vs_d


*** sampleB_p ***

*** sample_p ***
h (5 : 5): [ 1 2 3 4 5 ]
k = 1, replace = 0
p (5 : 5): [ 0.2 0.2 0.2 0.2 0.2 ]


ris (1 : 1): [ 3 ]
*****************************************


Stringhe allocate: 5 (2251 interne); stringhe deallocate: 0 (1911 interne)

81: setdiff1_i	<=>	v1 <- setdiff(v1, v2)
h (5 : 5): [ 1 2 3 4 5 ]
ris (1 : 1): [ 3 ]
2048: esiste_v_i	<=>	elem %IN% v
elem = 3
h (5 : 5): [ 1 2 3 4 5 ]


indx = 3
------------------------------ Fine esiste_v_i

2050: elimina1_indx_i	<=>	v <- v[-indx]
h (5 : 5): [ 1 2 3 4 5 ]
indx = 3


h (4 : 5): [ 1 2 4 5 ]
------------------------------ Fine elimina1_indx_i



h (4 : 5): [ 1 2 4 5 ]
------------------------------ Fine setdiff1_i

83: which_vv_eq_i	<=>	ris <- which(v1 == v2)
or_h (5 : 5): [ 1 2 3 4 5 ]
ris (1 : 1): [ 3 ]
2017: esiste_v_i	<=>	elem %IN% v
elem = 3
or_h (5 : 5): [ 1 2 3 4 5 ]


indx = 3
------------------------------ Fine esiste_v_i



tmp_i (1 : 5): [ 3 ]
------------------------------ Fine which_vv_eq_i

84: setdiff1_i	<=>	v1 <- setdiff(v1, v2)
aus_h (5 : 5): [ 1 2 3 4 5 ]
tmp_i (1 : 5): [ 3 ]
2048: esiste_v_i	<=>	elem %IN% v
elem = 3
aus_h (5 : 5): [ 1 2 3 4 5 ]


indx = 3
------------------------------ Fine esiste_v_i

2050: elimina1_indx_i	<=>	v <- v[-indx]
aus_h (5 : 5): [ 1 2 3 4 5 ]
indx = 3


aus_h (4 : 5): [ 1 2 4 5 ]
------------------------------ Fine elimina1_indx_i



aus_h (4 : 5): [ 1 2 4 5 ]
------------------------------ Fine setdiff1_i

52: riga_d	<=>	ris <- m[r,]
ris (4 x 5 : 4 x 5): [
	 -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894
	 1 1 1 1 1
	 0.5 0.5 0.5 0.5 0.5
	 1 1 1 1 1
 ]
r = 2

p (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine riga_d

54: which_v_indxle_d	<=>	ris <- which(v<=val)
p (5 : 5): [ 1 1 1 1 1 ]
val = 0


tmp_i (0 : 5): [ ]
------------------------------ Fine which_v_indxle_d

61: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 0 0 0 0 ]
h (4 : 5): [ 1 2 4 5 ]


Sin_h (4 : 5): [ 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_i

66: which_v_indxgt_i	<=>	ris <- which(v > val)
Sin_h (4 : 5): [ 0 0 0 0 ]
val = 4


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxgt_i

72: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
p (5 : 5): [ 1 1 1 1 1 ]
aus_h (4 : 5): [ 1 2 4 5 ]


tmp_d (4 : 5): [ 1 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

73: somma_v_d	<=>	ris <- sum(v, na.rm=canc_NA)
tmp_d (4 : 5): [ 1 1 1 1 ]
canc_NA = 0



ris: 4
------------------------------ Fine somma_v_d

74: dividi_vs_d	ris <- v / div
tmp_d (4 : 5): [ 1 1 1 1 ]
div = 4.000


p (4 : 5): [ 0.25 0.25 0.25 0.25 ]
------------------------------ Fine dividi_vs_d


*** sampleB_p ***

*** sample_p ***
h (4 : 5): [ 1 2 4 5 ]
k = 1, replace = 0
p (4 : 5): [ 0.25 0.25 0.25 0.25 ]


ris (1 : 1): [ 4 ]
*****************************************


Stringhe allocate: 5 (2251 interne); stringhe deallocate: 0 (1911 interne)

81: setdiff1_i	<=>	v1 <- setdiff(v1, v2)
h (4 : 5): [ 1 2 4 5 ]
ris (1 : 1): [ 4 ]
2048: esiste_v_i	<=>	elem %IN% v
elem = 4
h (4 : 5): [ 1 2 4 5 ]


indx = 3
------------------------------ Fine esiste_v_i

2050: elimina1_indx_i	<=>	v <- v[-indx]
h (4 : 5): [ 1 2 4 5 ]
indx = 3


h (3 : 5): [ 1 2 5 ]
------------------------------ Fine elimina1_indx_i



h (3 : 5): [ 1 2 5 ]
------------------------------ Fine setdiff1_i

83: which_vv_eq_i	<=>	ris <- which(v1 == v2)
or_h (5 : 5): [ 1 2 3 4 5 ]
ris (1 : 1): [ 4 ]
2017: esiste_v_i	<=>	elem %IN% v
elem = 4
or_h (5 : 5): [ 1 2 3 4 5 ]


indx = 4
------------------------------ Fine esiste_v_i



tmp_i (1 : 5): [ 4 ]
------------------------------ Fine which_vv_eq_i

84: setdiff1_i	<=>	v1 <- setdiff(v1, v2)
aus_h (4 : 5): [ 1 2 4 5 ]
tmp_i (1 : 5): [ 4 ]
2048: esiste_v_i	<=>	elem %IN% v
elem = 4
aus_h (4 : 5): [ 1 2 4 5 ]


indx = 3
------------------------------ Fine esiste_v_i

2050: elimina1_indx_i	<=>	v <- v[-indx]
aus_h (4 : 5): [ 1 2 4 5 ]
indx = 3


aus_h (3 : 5): [ 1 2 5 ]
------------------------------ Fine elimina1_indx_i



aus_h (3 : 5): [ 1 2 5 ]
------------------------------ Fine setdiff1_i

52: riga_d	<=>	ris <- m[r,]
ris (4 x 5 : 4 x 5): [
	 -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894
	 1 1 1 1 1
	 0.5 0.5 0.5 0.5 0.5
	 1 1 1 1 1
 ]
r = 4

p (5 : 5): [ 1 1 1 1 1 ]
------------------------------ Fine riga_d

54: which_v_indxle_d	<=>	ris <- which(v<=val)
p (5 : 5): [ 1 1 1 1 1 ]
val = 0


tmp_i (0 : 5): [ ]
------------------------------ Fine which_v_indxle_d

61: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 0 0 0 0 ]
h (3 : 5): [ 1 2 5 ]


Sin_h (3 : 5): [ 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_i

66: which_v_indxgt_i	<=>	ris <- which(v > val)
Sin_h (3 : 5): [ 0 0 0 ]
val = 4


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxgt_i

72: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
p (5 : 5): [ 1 1 1 1 1 ]
aus_h (3 : 5): [ 1 2 5 ]


tmp_d (3 : 5): [ 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

73: somma_v_d	<=>	ris <- sum(v, na.rm=canc_NA)
tmp_d (3 : 5): [ 1 1 1 ]
canc_NA = 0



ris: 3
------------------------------ Fine somma_v_d

74: dividi_vs_d	ris <- v / div
tmp_d (3 : 5): [ 1 1 1 ]
div = 3.000


p (3 : 5): [ 0.3333333333333333 0.3333333333333333 0.3333333333333333 ]
------------------------------ Fine dividi_vs_d


*** sampleB_p ***

*** sample_p ***
h (3 : 5): [ 1 2 5 ]
k = 1, replace = 0
p (3 : 5): [ 0.3333333333333333 0.3333333333333333 0.3333333333333333 ]


ris (1 : 1): [ 2 ]
*****************************************


Stringhe allocate: 5 (2251 interne); stringhe deallocate: 0 (1911 interne)

81: setdiff1_i	<=>	v1 <- setdiff(v1, v2)
h (3 : 5): [ 1 2 5 ]
ris (1 : 1): [ 2 ]
2048: esiste_v_i	<=>	elem %IN% v
elem = 2
h (3 : 5): [ 1 2 5 ]


indx = 2
------------------------------ Fine esiste_v_i

2050: elimina1_indx_i	<=>	v <- v[-indx]
h (3 : 5): [ 1 2 5 ]
indx = 2


h (2 : 5): [ 1 5 ]
------------------------------ Fine elimina1_indx_i



h (2 : 5): [ 1 5 ]
------------------------------ Fine setdiff1_i

83: which_vv_eq_i	<=>	ris <- which(v1 == v2)
or_h (5 : 5): [ 1 2 3 4 5 ]
ris (1 : 1): [ 2 ]
2017: esiste_v_i	<=>	elem %IN% v
elem = 2
or_h (5 : 5): [ 1 2 3 4 5 ]


indx = 2
------------------------------ Fine esiste_v_i



tmp_i (1 : 5): [ 2 ]
------------------------------ Fine which_vv_eq_i

84: setdiff1_i	<=>	v1 <- setdiff(v1, v2)
aus_h (3 : 5): [ 1 2 5 ]
tmp_i (1 : 5): [ 2 ]
2048: esiste_v_i	<=>	elem %IN% v
elem = 2
aus_h (3 : 5): [ 1 2 5 ]


indx = 2
------------------------------ Fine esiste_v_i

2050: elimina1_indx_i	<=>	v <- v[-indx]
aus_h (3 : 5): [ 1 2 5 ]
indx = 2


aus_h (2 : 5): [ 1 5 ]
------------------------------ Fine elimina1_indx_i



aus_h (2 : 5): [ 1 5 ]
------------------------------ Fine setdiff1_i

52: riga_d	<=>	ris <- m[r,]
ris (4 x 5 : 4 x 5): [
	 -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894 -1.050772612935894
	 1 1 1 1 1
	 0.5 0.5 0.5 0.5 0.5
	 1 1 1 1 1
 ]
r = 3

p (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
------------------------------ Fine riga_d

54: which_v_indxle_d	<=>	ris <- which(v<=val)
p (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
val = 0


tmp_i (0 : 5): [ ]
------------------------------ Fine which_v_indxle_d

61: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 0 0 0 0 ]
h (2 : 5): [ 1 5 ]


Sin_h (2 : 5): [ 0 0 ]
------------------------------ Fine assegna_v_indxNA_i

66: which_v_indxgt_i	<=>	ris <- which(v > val)
Sin_h (2 : 5): [ 0 0 ]
val = 5


ind (0 : 5): [ ]
------------------------------ Fine which_v_indxgt_i

72: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
p (5 : 5): [ 0.5 0.5 0.5 0.5 0.5 ]
aus_h (2 : 5): [ 1 5 ]


tmp_d (2 : 5): [ 0.5 0.5 ]
------------------------------ Fine assegna_v_indxNA_d

73: somma_v_d	<=>	ris <- sum(v, na.rm=canc_NA)
tmp_d (2 : 5): [ 0.5 0.5 ]
canc_NA = 0



ris: 1
------------------------------ Fine somma_v_d

74: dividi_vs_d	ris <- v / div
tmp_d (2 : 5): [ 0.5 0.5 ]
div = 1.000


p (2 : 5): [ 0.5 0.5 ]
------------------------------ Fine dividi_vs_d


*** sampleB_p ***

*** sample_p ***
h (2 : 5): [ 1 5 ]
k = 1, replace = 0
p (2 : 5): [ 0.5 0.5 ]


ris (1 : 1): [ 1 ]
*****************************************


Stringhe allocate: 5 (2251 interne); stringhe deallocate: 0 (1911 interne)

81: setdiff1_i	<=>	v1 <- setdiff(v1, v2)
h (2 : 5): [ 1 5 ]
ris (1 : 1): [ 1 ]
2048: esiste_v_i	<=>	elem %IN% v
elem = 1
h (2 : 5): [ 1 5 ]


indx = 1
------------------------------ Fine esiste_v_i

2050: elimina1_indx_i	<=>	v <- v[-indx]
h (2 : 5): [ 1 5 ]
indx = 1


h (1 : 5): [ 5 ]
------------------------------ Fine elimina1_indx_i



h (1 : 5): [ 5 ]
------------------------------ Fine setdiff1_i

83: which_vv_eq_i	<=>	ris <- which(v1 == v2)
or_h (5 : 5): [ 1 2 3 4 5 ]
ris (1 : 1): [ 1 ]
2017: esiste_v_i	<=>	elem %IN% v
elem = 1
or_h (5 : 5): [ 1 2 3 4 5 ]


indx = 1
------------------------------ Fine esiste_v_i



tmp_i (1 : 5): [ 1 ]
------------------------------ Fine which_vv_eq_i

84: setdiff1_i	<=>	v1 <- setdiff(v1, v2)
aus_h (2 : 5): [ 1 5 ]
tmp_i (1 : 5): [ 1 ]
2048: esiste_v_i	<=>	elem %IN% v
elem = 1
aus_h (2 : 5): [ 1 5 ]


indx = 1
------------------------------ Fine esiste_v_i

2050: elimina1_indx_i	<=>	v <- v[-indx]
aus_h (2 : 5): [ 1 5 ]
indx = 1


aus_h (1 : 5): [ 5 ]
------------------------------ Fine elimina1_indx_i



aus_h (1 : 5): [ 5 ]
------------------------------ Fine setdiff1_i

101: which_m_rowindxeq_i	<=>	ris <- which(m[r,] == val)
ris (4 x 4 : 4 x 4): [
	 0 1 1 1
	 0 0 0 1
	 0 0 0 0
	 0 0 1 0
 ]
riga = 1
val = 1


ind (3 : 26): [ 2 3 4 ]
------------------------------ Fine which_m_rowindxeq_i

103: copia_v_indx_i	<=>	ris <- v[indx]
index (4 : 4): [ 3 4 1 2 ]
ind (3 : 26): [ 2 3 4 ]


co (3 : 3): [ 4 1 2 ]
------------------------------ Fine copia_v_indx_i

105: assegna1_m_vv_i	<=>	m[vr, vc] <- val
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
ri (1 : 1): [ 3 ]
co (3 : 3): [ 4 1 2 ]
val = 1


Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 1 1 0 1 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine assegna1_m_vv_i

107: esiste_v_i	<=>	elem %IN% v
elem = 1
ris->indices (3 : 3): [ 2 3 4 ]


indx = 0
------------------------------ Fine esiste_v_i

101: which_m_rowindxeq_i	<=>	ris <- which(m[r,] == val)
ris (4 x 4 : 4 x 4): [
	 0 1 1 1
	 0 0 0 1
	 0 0 0 0
	 0 0 1 0
 ]
riga = 2
val = 1


ind (1 : 26): [ 4 ]
------------------------------ Fine which_m_rowindxeq_i

103: copia_v_indx_i	<=>	ris <- v[indx]
index (4 : 4): [ 3 4 1 2 ]
ind (1 : 26): [ 4 ]


co (1 : 3): [ 2 ]
------------------------------ Fine copia_v_indx_i

105: assegna1_m_vv_i	<=>	m[vr, vc] <- val
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 1 1 0 1 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
ri (1 : 1): [ 4 ]
co (1 : 3): [ 2 ]
val = 1


Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 1 1 0 1 0
	 0 1 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine assegna1_m_vv_i

107: esiste_v_i	<=>	elem %IN% v
elem = 2
ris->indices (3 : 3): [ 2 3 4 ]


indx = 1
------------------------------ Fine esiste_v_i

109: accoda1_vv_i	<=>	v1 <- c(v1, v2)
ris (0 : 1): [ ]
ri (1 : 1): [ 4 ]


ris (1 : 1): [ 4 ]
------------------------------ Fine accoda_vv_i

101: which_m_rowindxeq_i	<=>	ris <- which(m[r,] == val)
ris (4 x 4 : 4 x 4): [
	 0 1 1 1
	 0 0 0 1
	 0 0 0 0
	 0 0 1 0
 ]
riga = 3
val = 1


ind (0 : 26): [ ]
------------------------------ Fine which_m_rowindxeq_i

103: copia_v_indx_i	<=>	ris <- v[indx]
index (4 : 4): [ 3 4 1 2 ]
ind (0 : 26): [ ]


co (0 : 3): [ ]
------------------------------ Fine copia_v_indx_i

105: assegna1_m_vv_i	<=>	m[vr, vc] <- val
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 1 1 0 1 0
	 0 1 0 0 0
	 0 0 0 0 0
 ]
ri (1 : 1): [ 1 ]
co (0 : 3): [ ]
val = 1


Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 1 1 0 1 0
	 0 1 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine assegna1_m_vv_i

107: esiste_v_i	<=>	elem %IN% v
elem = 3
ris->indices (3 : 3): [ 2 3 4 ]


indx = 2
------------------------------ Fine esiste_v_i

109: accoda1_vv_i	<=>	v1 <- c(v1, v2)
ris (1 : 1): [ 4 ]
ri (1 : 1): [ 1 ]
ATTENZIONE (accoda_vv_i, linea assign_nodes.c # 109): ingrandito il vettore da 1 a 2!


ris (2 : 4): [ 4 1 ]
------------------------------ Fine accoda_vv_i

101: which_m_rowindxeq_i	<=>	ris <- which(m[r,] == val)
ris (4 x 4 : 4 x 4): [
	 0 1 1 1
	 0 0 0 1
	 0 0 0 0
	 0 0 1 0
 ]
riga = 4
val = 1


ind (1 : 26): [ 3 ]
------------------------------ Fine which_m_rowindxeq_i

103: copia_v_indx_i	<=>	ris <- v[indx]
index (4 : 4): [ 3 4 1 2 ]
ind (1 : 26): [ 3 ]


co (1 : 3): [ 1 ]
------------------------------ Fine copia_v_indx_i

105: assegna1_m_vv_i	<=>	m[vr, vc] <- val
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 1 1 0 1 0
	 0 1 0 0 0
	 0 0 0 0 0
 ]
ri (1 : 1): [ 2 ]
co (1 : 3): [ 1 ]
val = 1


Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 1 0 0 0 0
	 1 1 0 1 0
	 0 1 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine assegna1_m_vv_i

107: esiste_v_i	<=>	elem %IN% v
elem = 4
ris->indices (3 : 3): [ 2 3 4 ]


indx = 3
------------------------------ Fine esiste_v_i

109: accoda1_vv_i	<=>	v1 <- c(v1, v2)
ris (2 : 4): [ 4 1 ]
ri (1 : 1): [ 2 ]


ris (3 : 4): [ 4 1 2 ]
------------------------------ Fine accoda_vv_i


Stringhe allocate: 5 (2267 interne); stringhe deallocate: 0 (1982 interne)

332: accoda1_vv_i	<=>	v1 <- c(v1, v2)
h_new (0 : 0): [ ]
ris (3 : 4): [ 4 1 2 ]
ATTENZIONE (accoda_vv_i, linea connectivity_modular.c # 332): ingrandito il vettore da 0 a 3!


h_new (3 : 6): [ 4 1 2 ]
------------------------------ Fine accoda_vv_i

334: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 1 0 0 0 0
	 1 1 0 1 0
	 0 1 0 0 0
	 0 0 0 0 0
 ]


Sout (5 : 5): [ 2 2 0 1 0 ]
------------------------------ Fine somma_colonne_i

336: max_v_i		<=>	ris <- max(v)
Sout (5 : 5): [ 2 2 0 1 0 ]


max = 2
------------------------------ Fine max_v_i

338: seq_i	<=>	ris <- seq(da, a, incr)
da = 0
a = 3
incr = 1


tmp2_i (4 : 4): [ 0 1 2 3 ]
------------------------------ Fine seq_i


*** hist1 ***
Sout (5 : 5): [ 2 2 0 1 0 ]
tmp2_i (4 : 4): [ 0 1 2 3 ]
right = 0
include_border = 1
naok = 0
29: InitVett_i
tmp1_i (3 : 3): [ 1 2 3 ]
val = 0


tmp1_i (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i



tmp1_i (3 : 3): [ 2 1 2 ]

Stringhe allocate: 5 (2278 interne); stringhe deallocate: 0 (1988 interne)

340: promuovi_i	(implicita)
tmp1_i (3 : 3): [ 2 1 2 ]
ATTENZIONE (promuovi_i, linea connectivity_modular.c # 340): il vettore e` stato promosso da intero a double: i calcoli saranno rallentati!

tmp1_d (3 : 16): [ 2 1 2 ]
------------------------------ Fine promuovi_i

341: assegna1_v_segmv_d	<=>	v1[st:end] <- v2
Freq_out (7 : 7): [ 5 0 0 0 0 0 0 ]
start = 1
end = 3
tmp1_d (3 : 16): [ 2 1 2 ]


Freq_out (7 : 7): [ 2 1 2 0 0 0 0 ]
------------------------------ Fine assegna1_v_segmv_d

343: somma_righe_i	<=>	ris <- apply(m, 1, sum)
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 1 0 0 0 0
	 1 1 0 1 0
	 0 1 0 0 0
	 0 0 0 0 0
 ]


Sin (5 : 5): [ 0 1 3 1 0 ]
------------------------------ Fine somma_righe_i

345: max_v_i		<=>	ris <- max(v)
Sin (5 : 5): [ 0 1 3 1 0 ]


max = 3
------------------------------ Fine max_v_i

347: seq_i	<=>	ris <- seq(da, a, incr)
da = 0
a = 4
incr = 1


tmp2_i (5 : 13): [ 0 1 2 3 4 ]
------------------------------ Fine seq_i


*** hist1 ***
Sin (5 : 5): [ 0 1 3 1 0 ]
tmp2_i (5 : 13): [ 0 1 2 3 4 ]
right = 0
include_border = 1
naok = 0
29: InitVett_i
tmp1_i (4 : 10): [ 79855216 1330207310 673203534 1868784481 ]
val = 0


tmp1_i (4 : 10): [ 0 0 0 0 ]
------------------------------ Fine InitVett_i



tmp1_i (4 : 10): [ 2 2 0 1 ]

Stringhe allocate: 5 (2279 interne); stringhe deallocate: 0 (1989 interne)

349: promuovi_i	(implicita)
tmp1_i (4 : 10): [ 2 2 0 1 ]
ATTENZIONE (promuovi_i, linea connectivity_modular.c # 349): il vettore e` stato promosso da intero a double: i calcoli saranno rallentati!

tmp1_d (4 : 16): [ 2 2 0 1 ]
------------------------------ Fine promuovi_i

350: assegna1_v_segmv_d	<=>	v1[st:end] <- v2
Freq_in (7 : 7): [ 5 0 0 0 0 0 0 ]
start = 1
end = 4
tmp1_d (4 : 16): [ 2 2 0 1 ]


Freq_in (7 : 7): [ 2 2 0 1 0 0 0 ]
------------------------------ Fine assegna1_v_segmv_d

359: accoda1_vv_i	<=>	v1 <- c(v1, v2)
h (1 : 5): [ 5 ]
h_new (3 : 6): [ 4 1 2 ]


h (4 : 5): [ 5 4 1 2 ]
------------------------------ Fine accoda_vv_i

368: copia_v_indx_i	<=>	ris <- v[indx]
Sin (5 : 5): [ 0 1 3 1 0 ]
h (4 : 5): [ 5 4 1 2 ]


tmp1_i (4 : 10): [ 0 1 0 1 ]
------------------------------ Fine copia_v_indx_i

369: which_v_indxne_i	<=>	ris <- which(v != val)
tmp1_i (4 : 10): [ 0 1 0 1 ]
val = 5


tmp2_i (4 : 13): [ 1 2 3 4 ]
------------------------------ Fine which_v_indxne_i

370: copia_v_indx_i	<=>	ris <- v[indx]
h (4 : 5): [ 5 4 1 2 ]
tmp2_i (4 : 13): [ 1 2 3 4 ]


h (4 : 5): [ 5 4 1 2 ]
------------------------------ Fine copia_v_indx_i

110: somma_righe_i	<=>	ris <- apply(m, 1, sum)
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 1 0 0 0 0
	 1 1 0 1 0
	 0 1 0 0 0
	 0 0 0 0 0
 ]


Sin (5 : 5): [ 0 1 3 1 0 ]
------------------------------ Fine somma_righe_i

112: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 1 0 0 0 0
	 1 1 0 1 0
	 0 1 0 0 0
	 0 0 0 0 0
 ]


Sout (5 : 5): [ 2 2 0 1 0 ]
------------------------------ Fine somma_colonne_i


*** cluster_coeff ***
19: trasponi_i	<=>	ris <- t(m)
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 1 0 0 0 0
	 1 1 0 1 0
	 0 1 0 0 0
	 0 0 0 0 0
 ]


tmpm_i (5 x 5 : 5 x 5): [
	 0 1 1 0 0
	 0 0 1 1 0
	 0 0 0 0 0
	 0 0 1 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine trasponi_i

20: somma1_m_i	<=>	m1 <- m1 + m2
tmpm_i (5 x 5 : 5 x 5): [
	 0 1 1 0 0
	 0 0 1 1 0
	 0 0 0 0 0
	 0 0 1 0 0
	 0 0 0 0 0
 ]
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 1 0 0 0 0
	 1 1 0 1 0
	 0 1 0 0 0
	 0 0 0 0 0
 ]


tmpm_i (5 x 5 : 5 x 5): [
	 0 1 1 0 0
	 1 0 1 1 0
	 1 1 0 1 0
	 0 1 1 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine somma1_m_i

22: which_m_indxne_i	<=>	ris <- which(m!=val)
tmpm_i (5 x 5 : 5 x 5): [
	 0 1 1 0 0
	 1 0 1 1 0
	 1 1 0 1 0
	 0 1 1 0 0
	 0 0 0 0 0
 ]
val = 0


ind (10 : 25): [ 2 3 6 8 9 11 12 14 17 18 ]
------------------------------ Fine which_m_indxne_i

24: assegna1_ms_indx_i	<=>	m[indx] = val
tmpm_i (5 x 5 : 5 x 5): [
	 0 1 1 0 0
	 1 0 1 1 0
	 1 1 0 1 0
	 0 1 1 0 0
	 0 0 0 0 0
 ]
ind (10 : 25): [ 2 3 6 8 9 11 12 14 17 18 ]
val = 1


tmpm_i (5 x 5 : 5 x 5): [
	 0 1 1 0 0
	 1 0 1 1 0
	 1 1 0 1 0
	 0 1 1 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine assegna1_ms_indx_i

26: assegna1_s_diag_i	<=>	diag_i(m) <- s
tmpm_i (5 x 5 : 5 x 5): [
	 0 1 1 0 0
	 1 0 1 1 0
	 1 1 0 1 0
	 0 1 1 0 0
	 0 0 0 0 0
 ]
val = 0


tmpm_i (5 x 5 : 5 x 5): [
	 0 1 1 0 0
	 1 0 1 1 0
	 1 1 0 1 0
	 0 1 1 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine assegna1_s_diag_i

31: InitVett_d
ris (5 : 5): [ 0 0 0 0 0 ]
val = 0


ris (5 : 5): [ 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

35: somma_riga_i	<=>	ris <- sum(m[riga, ])
tmpm_i (5 x 5 : 5 x 5): [
	 0 1 1 0 0
	 1 0 1 1 0
	 1 1 0 1 0
	 0 1 1 0 0
	 0 0 0 0 0
 ]
riga = 1


ris: 2
------------------------------ Fine somma_riga_i

37: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
tmpm_i (5 x 5 : 5 x 5): [
	 0 1 1 0 0
	 1 0 1 1 0
	 1 1 0 1 0
	 0 1 1 0 0
	 0 0 0 0 0
 ]
r = 1
val = 0


neighbours (2 : 25): [ 2 3 ]
------------------------------ Fine which_m_rowindxne_i

35: somma_riga_i	<=>	ris <- sum(m[riga, ])
tmpm_i (5 x 5 : 5 x 5): [
	 0 1 1 0 0
	 1 0 1 1 0
	 1 1 0 1 0
	 0 1 1 0 0
	 0 0 0 0 0
 ]
riga = 2


ris: 3
------------------------------ Fine somma_riga_i

37: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
tmpm_i (5 x 5 : 5 x 5): [
	 0 1 1 0 0
	 1 0 1 1 0
	 1 1 0 1 0
	 0 1 1 0 0
	 0 0 0 0 0
 ]
r = 2
val = 0


neighbours (3 : 25): [ 1 3 4 ]
------------------------------ Fine which_m_rowindxne_i

35: somma_riga_i	<=>	ris <- sum(m[riga, ])
tmpm_i (5 x 5 : 5 x 5): [
	 0 1 1 0 0
	 1 0 1 1 0
	 1 1 0 1 0
	 0 1 1 0 0
	 0 0 0 0 0
 ]
riga = 3


ris: 3
------------------------------ Fine somma_riga_i

37: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
tmpm_i (5 x 5 : 5 x 5): [
	 0 1 1 0 0
	 1 0 1 1 0
	 1 1 0 1 0
	 0 1 1 0 0
	 0 0 0 0 0
 ]
r = 3
val = 0


neighbours (3 : 25): [ 1 2 4 ]
------------------------------ Fine which_m_rowindxne_i

35: somma_riga_i	<=>	ris <- sum(m[riga, ])
tmpm_i (5 x 5 : 5 x 5): [
	 0 1 1 0 0
	 1 0 1 1 0
	 1 1 0 1 0
	 0 1 1 0 0
	 0 0 0 0 0
 ]
riga = 4


ris: 2
------------------------------ Fine somma_riga_i

37: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
tmpm_i (5 x 5 : 5 x 5): [
	 0 1 1 0 0
	 1 0 1 1 0
	 1 1 0 1 0
	 0 1 1 0 0
	 0 0 0 0 0
 ]
r = 4
val = 0


neighbours (2 : 25): [ 2 3 ]
------------------------------ Fine which_m_rowindxne_i

35: somma_riga_i	<=>	ris <- sum(m[riga, ])
tmpm_i (5 x 5 : 5 x 5): [
	 0 1 1 0 0
	 1 0 1 1 0
	 1 1 0 1 0
	 0 1 1 0 0
	 0 0 0 0 0
 ]
riga = 5


ris: 0
------------------------------ Fine somma_riga_i

37: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
tmpm_i (5 x 5 : 5 x 5): [
	 0 1 1 0 0
	 1 0 1 1 0
	 1 1 0 1 0
	 0 1 1 0 0
	 0 0 0 0 0
 ]
r = 5
val = 0


neighbours (0 : 25): [ ]
------------------------------ Fine which_m_rowindxne_i

69: media_v_d	<=>	ris <- mean(v)
ris (5 : 5): [ 1 0.6666666666666666 0.6666666666666666 1 0 ]


media = 0.667
------------------------------ Fine media_v_d


Stringhe allocate: 5 (2295 interne); stringhe deallocate: 0 (2005 interne)


*** module1 ***
44: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 4
incr = 1


tmp1_i (4 : 4): [ 1 2 3 4 ]
------------------------------ Fine seq_i


*** sampleB ***

***sample***
tmp1_i (4 : 4): [ 1 2 3 4 ]
k = 1, replace = 0


ris (1 : 1): [ 4 ]
*****************************************


Stringhe allocate: 5 (2310 interne); stringhe deallocate: 0 (2005 interne)


Stringhe allocate: 5 (2310 interne); stringhe deallocate: 0 (2005 interne)


*** mod1 ***
18: InitMatr_i
ris (4 x 4 : 4 x 4): [
	 79844320 0 0 0
	 79858688 91 0 45
	 0 21 0 1
	 45 4 64 0
 ]
val = 0


ris (4 x 4 : 4 x 4): [
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
 ]
------------------------------ Fine InitMatr_i

21: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 3
incr = 1


x (3 : 3): [ 1 2 3 ]
------------------------------ Fine seq_i

23: somma_vs_i	<=>	ris <- v + s
x (3 : 3): [ 1 2 3 ]
s = 1


tmp1_i (3 : 3): [ 2 3 4 ]
------------------------------ Fine somma_vs_i

24: cbind2v_i	<=>	ris <- cbind(v1, v2)
x (3 : 3): [ 1 2 3 ]
tmp1_i (3 : 3): [ 2 3 4 ]


ind (3 x 2 : 3 x 2): [
	 1 2
	 2 3
	 3 4
 ]
------------------------------ Fine cbind2v_i

26: assegna1_ms_indx2_i	<=>	m[indxm] <- val
ris (4 x 4 : 4 x 4): [
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
 ]
ind (3 x 2 : 3 x 2): [
	 1 2
	 2 3
	 3 4
 ]
val = 1


ris (4 x 4 : 4 x 4): [
	 0 1 0 0
	 0 0 1 0
	 0 0 0 1
	 0 0 0 0
 ]
------------------------------ Fine assegna1_ms_indx2_i

29: vettore2s_i		<=>	ris <- c(el1, el2)
el1 = 1, el2 = -1


tmp1_i (2 : 3): [ 1 -1 ]
------------------------------ Fine vettore2s_i


*** sampleB ***

***sample***
tmp1_i (2 : 3): [ 1 -1 ]
k = 1, replace = 0


ris (1 : 1): [ 1 ]
*****************************************


Stringhe allocate: 5 (2335 interne); stringhe deallocate: 0 (2005 interne)


Stringhe allocate: 5 (2335 interne); stringhe deallocate: 0 (2005 interne)


Stringhe allocate: 5 (2335 interne); stringhe deallocate: 0 (2025 interne)


*** probmod ***
46: InitMatr_i
checkOUT (4 x 4 : 4 x 4): [
	 79856672 0 2 0
	 79850264 44 0 24
	 0 6 0 1
	 24 3 26 0
 ]
val = 0


checkOUT (4 x 4 : 4 x 4): [
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
 ]
------------------------------ Fine InitMatr_i

48: InitMatr_i
checkIN (4 x 4 : 4 x 4): [
	 79851520 0 3 0
	 79850536 272 0 57
	 0 7 0 1
	 56 4 74 0
 ]
val = 0


checkIN (4 x 4 : 4 x 4): [
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
 ]
------------------------------ Fine InitMatr_i

50: InitMatr_d
ris (4 x 4 : 4 x 4): [
	 5.842414621812633e-308 0 0 0
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
 ]
val = 0


ris (4 x 4 : 4 x 4): [
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
 ]
------------------------------ Fine InitMatr_d

52: somma_righe_i	<=>	ris <- apply(m, 1, sum)
ris (4 x 4 : 4 x 4): [
	 0 1 0 1
	 0 0 1 0
	 0 0 0 1
	 0 0 0 0
 ]


M_in (4 : 4): [ 2 1 1 0 ]
------------------------------ Fine somma_righe_i

54: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
ris (4 x 4 : 4 x 4): [
	 0 1 0 1
	 0 0 1 0
	 0 0 0 1
	 0 0 0 0
 ]


M_out (4 : 4): [ 0 1 1 2 ]
------------------------------ Fine somma_colonne_i

57: InitMatr_i
memory (4 x 3 : 4 x 3): [
	 79853232 79035840 349
	 3 0 115
	 1653488298 5 0
	 0 0 0
 ]
val = -2147483648


memory (4 x 3 : 4 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
------------------------------ Fine InitMatr_i

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (4 x 3 : 4 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 2


tmp_i1 (0 : 12): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (4 x 3 : 4 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 0


tmp_i2 (0 : 12): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 12): [ ]
tmp_i2 (0 : 12): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

119: InitVett_d
S_out (4 : 4): [ 6.218345866828926e+175 5.387842123834802e-310 0 0 ]
val = 0


S_out (4 : 4): [ 0 0 0 0 ]
------------------------------ Fine InitVett_d

122: InitVett_i
tmp_i1 (4 : 12): [ 79859848 -2147483648 -2147483648 -2147483648 ]
val = 1


tmp_i1 (4 : 12): [ 1 1 1 1 ]
------------------------------ Fine InitVett_i

123: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
checkOUT (4 x 4 : 4 x 4): [
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
 ]
riga = 1
tmp_i1 (4 : 12): [ 1 1 1 1 ]


checkOUT (4 x 4 : 4 x 4): [
	 1 1 1 1
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_i

128: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 1 3 1 0 ]
h (4 : 5): [ 5 4 1 2 ]


tmp_i1 (4 : 12): [ 0 1 0 1 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (4 : 12): [ 0 1 0 1 ]
s = 2


ind (4 : 4): [ 2 3 2 3 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (4 : 12): [ 0 1 0 1 ]
s = 1


tmp_i1 (4 : 4): [ 1 2 1 2 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (4 : 4): [ 1 2 1 2 ]


T1 (4 : 4): [ 1.#QNAN 3.614836360604185 1.#QNAN 3.614836360604185 ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (4 : 4): [ 2 3 2 3 ]
s = 1


tmp_i1 (4 : 4): [ 3 4 3 4 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (4 : 4): [ 3 4 3 4 ]


T2 (4 : 4): [ 0.7867244574868211 0.3224199317354524 0.7867244574868211 0.3224199317354524 ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (4 : 12): [ 0 1 0 1 ]
s = 1


tmp_i1 (4 : 4): [ 1 2 1 2 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 2 2 0 1 0 0 0 ]
tmp_i1 (4 : 4): [ 1 2 1 2 ]


old1 (4 : 4): [ 2 2 2 2 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (4 : 4): [ 2 3 2 3 ]
s = 1


tmp_i1 (4 : 4): [ 3 4 3 4 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 2 2 0 1 0 0 0 ]
tmp_i1 (4 : 4): [ 3 4 3 4 ]


old2 (4 : 4): [ 0 1 0 1 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (4 : 4): [ 2 2 2 2 ]
s = -1


new1 (4 : 4): [ 1 1 1 1 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (4 : 4): [ 0 1 0 1 ]
s = 1


new2 (4 : 4): [ 1 2 1 2 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (4 : 12): [ 0 1 0 1 ]
s = 1


tmp_i1 (4 : 4): [ 1 2 1 2 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (4 : 4): [ 1 2 1 2 ]


toll1 (4 : 4): [ 1.#QNAN 1 1.#QNAN 1 ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (4 : 4): [ 2 3 2 3 ]
s = 1


tmp_i1 (4 : 4): [ 3 4 3 4 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (4 : 4): [ 3 4 3 4 ]


toll2 (4 : 4): [ 1 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (4 : 4): [ 2 2 2 2 ]
T1 (4 : 4): [ 1.#QNAN 3.614836360604185 1.#QNAN 3.614836360604185 ]


a (4 : 4): [ 1.#QNAN -1.614836360604185 1.#QNAN -1.614836360604185 ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (4 : 4): [ 1.#QNAN -1.614836360604185 1.#QNAN -1.614836360604185 ]


a (4 : 4): [ 1.#QNAN 1.614836360604185 1.#QNAN 1.614836360604185 ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (4 : 4): [ 1 1 1 1 ]
T1 (4 : 4): [ 1.#QNAN 3.614836360604185 1.#QNAN 3.614836360604185 ]


b (4 : 4): [ 1.#QNAN -2.614836360604185 1.#QNAN -2.614836360604185 ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (4 : 4): [ 1.#QNAN -2.614836360604185 1.#QNAN -2.614836360604185 ]


b (4 : 4): [ 1.#QNAN 2.614836360604185 1.#QNAN 2.614836360604185 ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (4 : 4): [ 1.#QNAN 3.614836360604185 1.#QNAN 3.614836360604185 ]
complemento = 0


ind (2 : 4): [ 1 3 ]
------------------------------ Fine which_v_indxNA_d

68: assegna1_vs_indx_d	<=>	v[indx] <- val
a (4 : 4): [ 1.#QNAN 1.614836360604185 1.#QNAN 1.614836360604185 ]
ind (2 : 4): [ 1 3 ]
val = 0


a (4 : 4): [ 0 1.614836360604185 0 1.614836360604185 ]
------------------------------ Fine assegna1_vs_indx_d

70: assegna1_vs_indx_d	<=>	v[indx] <- val
b (4 : 4): [ 1.#QNAN 2.614836360604185 1.#QNAN 2.614836360604185 ]
ind (2 : 4): [ 1 3 ]
val = 0


b (4 : 4): [ 0 2.614836360604185 0 2.614836360604185 ]
------------------------------ Fine assegna1_vs_indx_d

78: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (4 : 4): [ 0 1.614836360604185 0 1.614836360604185 ]
b (4 : 4): [ 0 2.614836360604185 0 2.614836360604185 ]


tmpm_d (4 x 2 : 4 x 2): [
	 0 0
	 1.614836360604185 2.614836360604185
	 0 0
	 1.614836360604185 2.614836360604185
 ]
------------------------------ Fine cbind2v_d

79: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (4 x 2 : 4 x 2): [
	 0 0
	 1.614836360604185 2.614836360604185
	 0 0
	 1.614836360604185 2.614836360604185
 ]


m (4 : 4): [ 0 2.614836360604185 0 2.614836360604185 ]
------------------------------ Fine max_righe_d

81: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (4 : 4): [ 0 1.614836360604185 0 1.614836360604185 ]
b (4 : 4): [ 0 2.614836360604185 0 2.614836360604185 ]
m (4 : 4): [ 0 2.614836360604185 0 2.614836360604185 ]
T1 (4 : 4): [ 1.#QNAN 3.614836360604185 1.#QNAN 3.614836360604185 ]


S1 (4 : 4): [ 1.#QNAN -0.7233623046126327 1.#QNAN -0.7233623046126327 ]
------------------------------ Fine f_aux_d

83: diff_vv_d	<=>	ris <- v1 - v2
a (4 : 4): [ 0 1.614836360604185 0 1.614836360604185 ]
toll1 (4 : 4): [ 1.#QNAN 1 1.#QNAN 1 ]


tmp_d1 (4 : 4): [ 1.#QNAN 0.6148363606041851 1.#QNAN 0.6148363606041851 ]
------------------------------ Fine diff_vv_d

84: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (4 : 4): [ 1.#QNAN 0.6148363606041851 1.#QNAN 0.6148363606041851 ]
val = 0

ind1 (0 : 4): [ ]
------------------------------ Fine which_v_indxlt_d

86: diff_vv_d	<=>	ris <- v1 - v2
b (4 : 4): [ 0 2.614836360604185 0 2.614836360604185 ]
toll1 (4 : 4): [ 1.#QNAN 1 1.#QNAN 1 ]


tmp_d1 (4 : 4): [ 1.#QNAN 1.614836360604185 1.#QNAN 1.614836360604185 ]
------------------------------ Fine diff_vv_d

87: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (4 : 4): [ 1.#QNAN 1.614836360604185 1.#QNAN 1.614836360604185 ]
val = 0


ind2 (2 : 4): [ 2 4 ]
------------------------------ Fine which_v_indxgt_d

89: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (0 : 4): [ ]
ind2 (2 : 4): [ 2 4 ]


tmp_i1 (0 : 4): [ ]
------------------------------ Fine interseca_i

91: assegna1_vs_indx_d	<=>	v[indx] <- val
S1 (4 : 4): [ 1.#QNAN -0.7233623046126327 1.#QNAN -0.7233623046126327 ]
tmp_i1 (0 : 4): [ ]
val = -1.#INF


S1 (4 : 4): [ 1.#QNAN -0.7233623046126327 1.#QNAN -0.7233623046126327 ]
------------------------------ Fine assegna1_vs_indx_d

93: assegna1_vs_indx_d	<=>	v[indx] <- val
S1 (4 : 4): [ 1.#QNAN -0.7233623046126327 1.#QNAN -0.7233623046126327 ]
ind (2 : 4): [ 1 3 ]
val = 0


S1 (4 : 4): [ 0 -0.7233623046126327 0 -0.7233623046126327 ]
------------------------------ Fine assegna1_vs_indx_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (4 : 4): [ 0 1 0 1 ]
T2 (4 : 4): [ 0.7867244574868211 0.3224199317354524 0.7867244574868211 0.3224199317354524 ]


a (4 : 4): [ -0.7867244574868211 0.6775800682645476 -0.7867244574868211 0.6775800682645476 ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (4 : 4): [ -0.7867244574868211 0.6775800682645476 -0.7867244574868211 0.6775800682645476 ]


a (4 : 4): [ 0.7867244574868211 0.6775800682645476 0.7867244574868211 0.6775800682645476 ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (4 : 4): [ 1 2 1 2 ]
T2 (4 : 4): [ 0.7867244574868211 0.3224199317354524 0.7867244574868211 0.3224199317354524 ]


b (4 : 4): [ 0.2132755425131789 1.677580068264548 0.2132755425131789 1.677580068264548 ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (4 : 4): [ 0.2132755425131789 1.677580068264548 0.2132755425131789 1.677580068264548 ]


b (4 : 4): [ 0.2132755425131789 1.677580068264548 0.2132755425131789 1.677580068264548 ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (4 : 4): [ 0.7867244574868211 0.6775800682645476 0.7867244574868211 0.6775800682645476 ]
b (4 : 4): [ 0.2132755425131789 1.677580068264548 0.2132755425131789 1.677580068264548 ]


tmpm_d (4 x 2 : 4 x 2): [
	 0.7867244574868211 0.2132755425131789
	 0.6775800682645476 1.677580068264548
	 0.7867244574868211 0.2132755425131789
	 0.6775800682645476 1.677580068264548
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (4 x 2 : 4 x 2): [
	 0.7867244574868211 0.2132755425131789
	 0.6775800682645476 1.677580068264548
	 0.7867244574868211 0.2132755425131789
	 0.6775800682645476 1.677580068264548
 ]


m (4 : 4): [ 0.7867244574868211 1.677580068264548 0.7867244574868211 1.677580068264548 ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (4 : 4): [ 0.7867244574868211 0.3224199317354524 0.7867244574868211 0.3224199317354524 ]
complemento = 0


ind (0 : 4): [ ]
------------------------------ Fine which_v_indxNA_d

115: assegna1_vs_indx_d	<=>	v[indx] <- val
a (4 : 4): [ 0.7867244574868211 0.6775800682645476 0.7867244574868211 0.6775800682645476 ]
ind (0 : 4): [ ]
val = 0


a (4 : 4): [ 0.7867244574868211 0.6775800682645476 0.7867244574868211 0.6775800682645476 ]
------------------------------ Fine assegna1_vs_indx_d

117: assegna1_vs_indx_d	<=>	v[indx] <- val
b (4 : 4): [ 0.2132755425131789 1.677580068264548 0.2132755425131789 1.677580068264548 ]
ind (0 : 4): [ ]
val = 0


b (4 : 4): [ 0.2132755425131789 1.677580068264548 0.2132755425131789 1.677580068264548 ]
------------------------------ Fine assegna1_vs_indx_d

119: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (4 : 4): [ 0.7867244574868211 0.6775800682645476 0.7867244574868211 0.6775800682645476 ]
b (4 : 4): [ 0.2132755425131789 1.677580068264548 0.2132755425131789 1.677580068264548 ]


tmpm_d (4 x 2 : 4 x 2): [
	 0.7867244574868211 0.2132755425131789
	 0.6775800682645476 1.677580068264548
	 0.7867244574868211 0.2132755425131789
	 0.6775800682645476 1.677580068264548
 ]
------------------------------ Fine cbind2v_d

120: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (4 x 2 : 4 x 2): [
	 0.7867244574868211 0.2132755425131789
	 0.6775800682645476 1.677580068264548
	 0.7867244574868211 0.2132755425131789
	 0.6775800682645476 1.677580068264548
 ]


m (4 : 4): [ 0.7867244574868211 1.677580068264548 0.7867244574868211 1.677580068264548 ]
------------------------------ Fine max_righe_d

122: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (4 : 4): [ 0.7867244574868211 0.6775800682645476 0.7867244574868211 0.6775800682645476 ]
b (4 : 4): [ 0.2132755425131789 1.677580068264548 0.2132755425131789 1.677580068264548 ]
m (4 : 4): [ 0.7867244574868211 1.677580068264548 0.7867244574868211 1.677580068264548 ]
T2 (4 : 4): [ 0.7867244574868211 0.3224199317354524 0.7867244574868211 0.3224199317354524 ]


S2 (4 : 4): [ 1 -5.203090451743575 1 -5.203090451743575 ]
------------------------------ Fine f_aux_d

124: diff_vv_d	<=>	ris <- v1 - v2
a (4 : 4): [ 0.7867244574868211 0.6775800682645476 0.7867244574868211 0.6775800682645476 ]
toll2 (4 : 4): [ 1 1 1 1 ]


tmp_d1 (4 : 4): [ -0.2132755425131789 -0.3224199317354524 -0.2132755425131789 -0.3224199317354524 ]
------------------------------ Fine diff_vv_d

125: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (4 : 4): [ -0.2132755425131789 -0.3224199317354524 -0.2132755425131789 -0.3224199317354524 ]
val = 0

ind1 (4 : 4): [ 1 2 3 4 ]
------------------------------ Fine which_v_indxlt_d

127: diff_vv_d	<=>	ris <- v1 - v2
b (4 : 4): [ 0.2132755425131789 1.677580068264548 0.2132755425131789 1.677580068264548 ]
toll2 (4 : 4): [ 1 1 1 1 ]


tmp_d1 (4 : 4): [ -0.7867244574868211 0.6775800682645476 -0.7867244574868211 0.6775800682645476 ]
------------------------------ Fine diff_vv_d

128: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (4 : 4): [ -0.7867244574868211 0.6775800682645476 -0.7867244574868211 0.6775800682645476 ]
val = 0


ind2 (2 : 4): [ 2 4 ]
------------------------------ Fine which_v_indxgt_d

130: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (4 : 4): [ 1 2 3 4 ]
ind2 (2 : 4): [ 2 4 ]
2459: esiste_v_i	<=>	elem %IN% v
elem = 1
ind2 (2 : 4): [ 2 4 ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 1
tmp_i1 (0 : 4): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 2
ind2 (2 : 4): [ 2 4 ]


indx = 1
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 2
tmp_i1 (0 : 4): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 3
ind2 (2 : 4): [ 2 4 ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 3
tmp_i1 (1 : 4): [ 2 ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 4
ind2 (2 : 4): [ 2 4 ]


indx = 2
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 4
tmp_i1 (1 : 4): [ 2 ]


indx = 0
------------------------------ Fine esiste_v_i



tmp_i1 (2 : 4): [ 2 4 ]
------------------------------ Fine interseca_i

132: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (4 : 4): [ 1 -5.203090451743575 1 -5.203090451743575 ]
tmp_i1 (2 : 4): [ 2 4 ]
val = -1.#INF


S2 (4 : 4): [ 1 -1.#INF 1 -1.#INF ]
------------------------------ Fine assegna1_vs_indx_d

134: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (4 : 4): [ 1 -1.#INF 1 -1.#INF ]
ind (0 : 4): [ ]
val = 0


S2 (4 : 4): [ 1 -1.#INF 1 -1.#INF ]
------------------------------ Fine assegna1_vs_indx_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (4 : 4): [ 0.7867244574868211 0.3224199317354524 0.7867244574868211 0.3224199317354524 ]
val = 0


ind (0 : 4): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (4 : 4): [ 1 -1.#INF 1 -1.#INF ]
ind (0 : 4): [ ]
val = -1.#INF


S2 (4 : 4): [ 1 -1.#INF 1 -1.#INF ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (4 : 4): [ 0 -0.7233623046126327 0 -0.7233623046126327 ]
S2 (4 : 4): [ 1 -1.#INF 1 -1.#INF ]


ris (4 : 4): [ 1 -1.#INF 1 -1.#INF ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
ris (4 : 4): [ 1 -1.#INF 1 -1.#INF ]
div = 2.000


ris (4 : 4): [ 0.5 -1.#INF 0.5 -1.#INF ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (2500 interne); stringhe deallocate: 0 (2125 interne)

131: which_v_indxne_d	<=>	ris <- which(v != val)
ris (4 : 4): [ 0.5 -1.#INF 0.5 -1.#INF ]
val = -1.#INF


indok (2 : 4): [ 1 3 ]
------------------------------ Fine which_v_indxne_d

133: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkIN (4 x 4 : 4 x 4): [
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
 ]
riga = 1
indok (2 : 4): [ 1 3 ]
val = 1


checkIN (4 x 4 : 4 x 4): [
	 1 0 1 0
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
 ]
------------------------------ Fine aggiungi_riga_indx_i

141: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 4
incr = 1


tmp_i1 (4 : 12): [ 1 2 3 4 ]
------------------------------ Fine seq_i

142: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (4 : 12): [ 1 2 3 4 ]
indok (2 : 4): [ 1 3 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (4 : 12): [ 1 2 3 4 ]
st = 1
end = 4


indInf (4 : 4): [ 1 2 3 4 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (4 : 4): [ 1 2 3 4 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (4 : 4): [ 1 2 3 4 ]
indx = 1


indInf (3 : 4): [ 2 3 4 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (3 : 4): [ 2 3 4 ]


indx = 2
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 4): [ 2 3 4 ]
indx = 2


indInf (2 : 4): [ 2 4 ]
------------------------------ Fine elimina1_indx_i



indInf (2 : 4): [ 2 4 ]
------------------------------ Fine setdiff_i

144: copia_v_indx_d	<=>	ris <- v[indx]
ris (4 : 4): [ 0.5 -1.#INF 0.5 -1.#INF ]
indok (2 : 4): [ 1 3 ]


tmp_d1 (2 : 2): [ 0.5 0.5 ]
------------------------------ Fine copia_v_indx_d

148: min_v_d	<=>	ris <- min(v)
tmp_d1 (2 : 2): [ 0.5 0.5 ]


min = 0.5
------------------------------ Fine min_v_d

149: assegna1_vs_indx_d	<=>	v[indx] <- val
ris (4 : 4): [ 0.5 -1.#INF 0.5 -1.#INF ]
indInf (2 : 4): [ 2 4 ]
val = -1


ris (4 : 4): [ 0.5 -1 0.5 -1 ]
------------------------------ Fine assegna1_vs_indx_d

159: somma_vv_d	<=>	ris <- v1 + v2
S_out (4 : 4): [ 0 0 0 0 ]
ris (4 : 4): [ 0.5 -1 0.5 -1 ]


tmp_d1 (4 : 8): [ 0.5 -1 0.5 -1 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (4 x 4 : 4 x 4): [
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
 ]
riga = 1
tmp_d1 (4 : 8): [ 0.5 -1 0.5 -1 ]


ris (4 x 4 : 4 x 4): [
	 0.5 -1 0.5 -1
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_d

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (4 x 3 : 4 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 1


tmp_i1 (0 : 12): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (4 x 3 : 4 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 1


tmp_i2 (0 : 12): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 12): [ ]
tmp_i2 (0 : 12): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

92: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sout (5 : 5): [ 2 2 0 1 0 ]
h (4 : 5): [ 5 4 1 2 ]


tmp_i1 (4 : 12): [ 0 1 2 2 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (4 : 12): [ 0 1 2 2 ]
s = 1


ind (4 : 4): [ 1 2 3 3 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (4 : 12): [ 0 1 2 2 ]
s = 1


tmp_i1 (4 : 4): [ 1 2 3 3 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (4 : 4): [ 1 2 3 3 ]


T1 (4 : 4): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.7867244574868211 ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (4 : 4): [ 1 2 3 3 ]
s = 1


tmp_i1 (4 : 4): [ 2 3 4 4 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (4 : 4): [ 2 3 4 4 ]


T2 (4 : 4): [ 3.614836360604185 0.7867244574868211 0.3224199317354524 0.3224199317354524 ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (4 : 12): [ 0 1 2 2 ]
s = 1


tmp_i1 (4 : 4): [ 1 2 3 3 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 2 1 2 0 0 0 0 ]
tmp_i1 (4 : 4): [ 1 2 3 3 ]


old1 (4 : 4): [ 2 1 2 2 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (4 : 4): [ 1 2 3 3 ]
s = 1


tmp_i1 (4 : 4): [ 2 3 4 4 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 2 1 2 0 0 0 0 ]
tmp_i1 (4 : 4): [ 2 3 4 4 ]


old2 (4 : 4): [ 1 2 0 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (4 : 4): [ 2 1 2 2 ]
s = -1


new1 (4 : 4): [ 1 0 1 1 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (4 : 4): [ 1 2 0 0 ]
s = 1


new2 (4 : 4): [ 2 3 1 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (4 : 12): [ 0 1 2 2 ]
s = 1


tmp_i1 (4 : 4): [ 1 2 3 3 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (4 : 4): [ 1 2 3 3 ]


toll1 (4 : 4): [ 1.#QNAN 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (4 : 4): [ 1 2 3 3 ]
s = 1


tmp_i1 (4 : 4): [ 2 3 4 4 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (4 : 4): [ 2 3 4 4 ]


toll2 (4 : 4): [ 1 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (4 : 4): [ 2 1 2 2 ]
T1 (4 : 4): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.7867244574868211 ]


a (4 : 4): [ 1.#QNAN -2.614836360604185 1.213275542513179 1.213275542513179 ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (4 : 4): [ 1.#QNAN -2.614836360604185 1.213275542513179 1.213275542513179 ]


a (4 : 4): [ 1.#QNAN 2.614836360604185 1.213275542513179 1.213275542513179 ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (4 : 4): [ 1 0 1 1 ]
T1 (4 : 4): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.7867244574868211 ]


b (4 : 4): [ 1.#QNAN -3.614836360604185 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (4 : 4): [ 1.#QNAN -3.614836360604185 0.2132755425131789 0.2132755425131789 ]


b (4 : 4): [ 1.#QNAN 3.614836360604185 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (4 : 4): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.7867244574868211 ]
complemento = 0


ind (1 : 4): [ 1 ]
------------------------------ Fine which_v_indxNA_d

68: assegna1_vs_indx_d	<=>	v[indx] <- val
a (4 : 4): [ 1.#QNAN 2.614836360604185 1.213275542513179 1.213275542513179 ]
ind (1 : 4): [ 1 ]
val = 0


a (4 : 4): [ 0 2.614836360604185 1.213275542513179 1.213275542513179 ]
------------------------------ Fine assegna1_vs_indx_d

70: assegna1_vs_indx_d	<=>	v[indx] <- val
b (4 : 4): [ 1.#QNAN 3.614836360604185 0.2132755425131789 0.2132755425131789 ]
ind (1 : 4): [ 1 ]
val = 0


b (4 : 4): [ 0 3.614836360604185 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine assegna1_vs_indx_d

78: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (4 : 4): [ 0 2.614836360604185 1.213275542513179 1.213275542513179 ]
b (4 : 4): [ 0 3.614836360604185 0.2132755425131789 0.2132755425131789 ]


tmpm_d (4 x 2 : 4 x 2): [
	 0 0
	 2.614836360604185 3.614836360604185
	 1.213275542513179 0.2132755425131789
	 1.213275542513179 0.2132755425131789
 ]
------------------------------ Fine cbind2v_d

79: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (4 x 2 : 4 x 2): [
	 0 0
	 2.614836360604185 3.614836360604185
	 1.213275542513179 0.2132755425131789
	 1.213275542513179 0.2132755425131789
 ]


m (4 : 4): [ 0 3.614836360604185 1.213275542513179 1.213275542513179 ]
------------------------------ Fine max_righe_d

81: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (4 : 4): [ 0 2.614836360604185 1.213275542513179 1.213275542513179 ]
b (4 : 4): [ 0 3.614836360604185 0.2132755425131789 0.2132755425131789 ]
m (4 : 4): [ 0 3.614836360604185 1.213275542513179 1.213275542513179 ]
T1 (4 : 4): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.7867244574868211 ]


S1 (4 : 4): [ 1.#QNAN -1 1.542186124973118 1.542186124973118 ]
------------------------------ Fine f_aux_d

83: diff_vv_d	<=>	ris <- v1 - v2
a (4 : 4): [ 0 2.614836360604185 1.213275542513179 1.213275542513179 ]
toll1 (4 : 4): [ 1.#QNAN 1 1 1 ]


tmp_d1 (4 : 4): [ 1.#QNAN 1.614836360604185 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine diff_vv_d

84: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (4 : 4): [ 1.#QNAN 1.614836360604185 0.2132755425131789 0.2132755425131789 ]
val = 0

ind1 (0 : 4): [ ]
------------------------------ Fine which_v_indxlt_d

86: diff_vv_d	<=>	ris <- v1 - v2
b (4 : 4): [ 0 3.614836360604185 0.2132755425131789 0.2132755425131789 ]
toll1 (4 : 4): [ 1.#QNAN 1 1 1 ]


tmp_d1 (4 : 4): [ 1.#QNAN 2.614836360604185 -0.7867244574868211 -0.7867244574868211 ]
------------------------------ Fine diff_vv_d

87: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (4 : 4): [ 1.#QNAN 2.614836360604185 -0.7867244574868211 -0.7867244574868211 ]
val = 0


ind2 (1 : 4): [ 2 ]
------------------------------ Fine which_v_indxgt_d

89: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (0 : 4): [ ]
ind2 (1 : 4): [ 2 ]


tmp_i1 (0 : 4): [ ]
------------------------------ Fine interseca_i

91: assegna1_vs_indx_d	<=>	v[indx] <- val
S1 (4 : 4): [ 1.#QNAN -1 1.542186124973118 1.542186124973118 ]
tmp_i1 (0 : 4): [ ]
val = -1.#INF


S1 (4 : 4): [ 1.#QNAN -1 1.542186124973118 1.542186124973118 ]
------------------------------ Fine assegna1_vs_indx_d

93: assegna1_vs_indx_d	<=>	v[indx] <- val
S1 (4 : 4): [ 1.#QNAN -1 1.542186124973118 1.542186124973118 ]
ind (1 : 4): [ 1 ]
val = 0


S1 (4 : 4): [ 0 -1 1.542186124973118 1.542186124973118 ]
------------------------------ Fine assegna1_vs_indx_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (4 : 4): [ 1 2 0 0 ]
T2 (4 : 4): [ 3.614836360604185 0.7867244574868211 0.3224199317354524 0.3224199317354524 ]


a (4 : 4): [ -2.614836360604185 1.213275542513179 -0.3224199317354524 -0.3224199317354524 ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (4 : 4): [ -2.614836360604185 1.213275542513179 -0.3224199317354524 -0.3224199317354524 ]


a (4 : 4): [ 2.614836360604185 1.213275542513179 0.3224199317354524 0.3224199317354524 ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (4 : 4): [ 2 3 1 1 ]
T2 (4 : 4): [ 3.614836360604185 0.7867244574868211 0.3224199317354524 0.3224199317354524 ]


b (4 : 4): [ -1.614836360604185 2.213275542513179 0.6775800682645476 0.6775800682645476 ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (4 : 4): [ -1.614836360604185 2.213275542513179 0.6775800682645476 0.6775800682645476 ]


b (4 : 4): [ 1.614836360604185 2.213275542513179 0.6775800682645476 0.6775800682645476 ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (4 : 4): [ 2.614836360604185 1.213275542513179 0.3224199317354524 0.3224199317354524 ]
b (4 : 4): [ 1.614836360604185 2.213275542513179 0.6775800682645476 0.6775800682645476 ]


tmpm_d (4 x 2 : 4 x 2): [
	 2.614836360604185 1.614836360604185
	 1.213275542513179 2.213275542513179
	 0.3224199317354524 0.6775800682645476
	 0.3224199317354524 0.6775800682645476
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (4 x 2 : 4 x 2): [
	 2.614836360604185 1.614836360604185
	 1.213275542513179 2.213275542513179
	 0.3224199317354524 0.6775800682645476
	 0.3224199317354524 0.6775800682645476
 ]


m (4 : 4): [ 2.614836360604185 2.213275542513179 0.6775800682645476 0.6775800682645476 ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (4 : 4): [ 3.614836360604185 0.7867244574868211 0.3224199317354524 0.3224199317354524 ]
complemento = 0


ind (0 : 4): [ ]
------------------------------ Fine which_v_indxNA_d

115: assegna1_vs_indx_d	<=>	v[indx] <- val
a (4 : 4): [ 2.614836360604185 1.213275542513179 0.3224199317354524 0.3224199317354524 ]
ind (0 : 4): [ ]
val = 0


a (4 : 4): [ 2.614836360604185 1.213275542513179 0.3224199317354524 0.3224199317354524 ]
------------------------------ Fine assegna1_vs_indx_d

117: assegna1_vs_indx_d	<=>	v[indx] <- val
b (4 : 4): [ 1.614836360604185 2.213275542513179 0.6775800682645476 0.6775800682645476 ]
ind (0 : 4): [ ]
val = 0


b (4 : 4): [ 1.614836360604185 2.213275542513179 0.6775800682645476 0.6775800682645476 ]
------------------------------ Fine assegna1_vs_indx_d

119: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (4 : 4): [ 2.614836360604185 1.213275542513179 0.3224199317354524 0.3224199317354524 ]
b (4 : 4): [ 1.614836360604185 2.213275542513179 0.6775800682645476 0.6775800682645476 ]


tmpm_d (4 x 2 : 4 x 2): [
	 2.614836360604185 1.614836360604185
	 1.213275542513179 2.213275542513179
	 0.3224199317354524 0.6775800682645476
	 0.3224199317354524 0.6775800682645476
 ]
------------------------------ Fine cbind2v_d

120: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (4 x 2 : 4 x 2): [
	 2.614836360604185 1.614836360604185
	 1.213275542513179 2.213275542513179
	 0.3224199317354524 0.6775800682645476
	 0.3224199317354524 0.6775800682645476
 ]


m (4 : 4): [ 2.614836360604185 2.213275542513179 0.6775800682645476 0.6775800682645476 ]
------------------------------ Fine max_righe_d

122: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (4 : 4): [ 2.614836360604185 1.213275542513179 0.3224199317354524 0.3224199317354524 ]
b (4 : 4): [ 1.614836360604185 2.213275542513179 0.6775800682645476 0.6775800682645476 ]
m (4 : 4): [ 2.614836360604185 2.213275542513179 0.6775800682645476 0.6775800682645476 ]
T2 (4 : 4): [ 3.614836360604185 0.7867244574868211 0.3224199317354524 0.3224199317354524 ]


S2 (4 : 4): [ 0.7233623046126327 -2.813279187459676 -2.101545225871788 -2.101545225871788 ]
------------------------------ Fine f_aux_d

124: diff_vv_d	<=>	ris <- v1 - v2
a (4 : 4): [ 2.614836360604185 1.213275542513179 0.3224199317354524 0.3224199317354524 ]
toll2 (4 : 4): [ 1 1 1 1 ]


tmp_d1 (4 : 4): [ 1.614836360604185 0.2132755425131789 -0.6775800682645476 -0.6775800682645476 ]
------------------------------ Fine diff_vv_d

125: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (4 : 4): [ 1.614836360604185 0.2132755425131789 -0.6775800682645476 -0.6775800682645476 ]
val = 0

ind1 (2 : 4): [ 3 4 ]
------------------------------ Fine which_v_indxlt_d

127: diff_vv_d	<=>	ris <- v1 - v2
b (4 : 4): [ 1.614836360604185 2.213275542513179 0.6775800682645476 0.6775800682645476 ]
toll2 (4 : 4): [ 1 1 1 1 ]


tmp_d1 (4 : 4): [ 0.6148363606041851 1.213275542513179 -0.3224199317354524 -0.3224199317354524 ]
------------------------------ Fine diff_vv_d

128: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (4 : 4): [ 0.6148363606041851 1.213275542513179 -0.3224199317354524 -0.3224199317354524 ]
val = 0


ind2 (2 : 4): [ 1 2 ]
------------------------------ Fine which_v_indxgt_d

130: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (2 : 4): [ 3 4 ]
ind2 (2 : 4): [ 1 2 ]
2459: esiste_v_i	<=>	elem %IN% v
elem = 3
ind2 (2 : 4): [ 1 2 ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 3
tmp_i1 (0 : 4): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 4
ind2 (2 : 4): [ 1 2 ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 4
tmp_i1 (0 : 4): [ ]


indx = 0
------------------------------ Fine esiste_v_i



tmp_i1 (0 : 4): [ ]
------------------------------ Fine interseca_i

132: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (4 : 4): [ 0.7233623046126327 -2.813279187459676 -2.101545225871788 -2.101545225871788 ]
tmp_i1 (0 : 4): [ ]
val = -1.#INF


S2 (4 : 4): [ 0.7233623046126327 -2.813279187459676 -2.101545225871788 -2.101545225871788 ]
------------------------------ Fine assegna1_vs_indx_d

134: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (4 : 4): [ 0.7233623046126327 -2.813279187459676 -2.101545225871788 -2.101545225871788 ]
ind (0 : 4): [ ]
val = 0


S2 (4 : 4): [ 0.7233623046126327 -2.813279187459676 -2.101545225871788 -2.101545225871788 ]
------------------------------ Fine assegna1_vs_indx_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (4 : 4): [ 3.614836360604185 0.7867244574868211 0.3224199317354524 0.3224199317354524 ]
val = 0


ind (0 : 4): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (4 : 4): [ 0.7233623046126327 -2.813279187459676 -2.101545225871788 -2.101545225871788 ]
ind (0 : 4): [ ]
val = -1.#INF


S2 (4 : 4): [ 0.7233623046126327 -2.813279187459676 -2.101545225871788 -2.101545225871788 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (4 : 4): [ 0 -1 1.542186124973118 1.542186124973118 ]
S2 (4 : 4): [ 0.7233623046126327 -2.813279187459676 -2.101545225871788 -2.101545225871788 ]


S_out (4 : 4): [ 0.7233623046126327 -3.813279187459676 -0.55935910089867 -0.55935910089867 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
S_out (4 : 4): [ 0.7233623046126327 -3.813279187459676 -0.55935910089867 -0.55935910089867 ]
div = 2.000


S_out (4 : 4): [ 0.3616811523063164 -1.906639593729838 -0.279679550449335 -0.279679550449335 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (2615 interne); stringhe deallocate: 0 (2225 interne)

95: which_v_indxne_d	<=>	ris <- which(v != val)
S_out (4 : 4): [ 0.3616811523063164 -1.906639593729838 -0.279679550449335 -0.279679550449335 ]
val = -1.#INF


indok (4 : 4): [ 1 2 3 4 ]
------------------------------ Fine which_v_indxne_d

97: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkOUT (4 x 4 : 4 x 4): [
	 1 1 1 1
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
 ]
riga = 2
indok (4 : 4): [ 1 2 3 4 ]
val = 1


checkOUT (4 x 4 : 4 x 4): [
	 1 1 1 1
	 1 1 1 1
	 0 0 0 0
	 0 0 0 0
 ]
------------------------------ Fine aggiungi_riga_indx_i

104: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 4
incr = 1


tmp_i1 (4 : 12): [ 1 2 3 4 ]
------------------------------ Fine seq_i

105: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (4 : 12): [ 1 2 3 4 ]
indok (4 : 4): [ 1 2 3 4 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (4 : 12): [ 1 2 3 4 ]
st = 1
end = 4


indInf (4 : 4): [ 1 2 3 4 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (4 : 4): [ 1 2 3 4 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (4 : 4): [ 1 2 3 4 ]
indx = 1


indInf (3 : 4): [ 2 3 4 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (3 : 4): [ 2 3 4 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 4): [ 2 3 4 ]
indx = 1


indInf (2 : 4): [ 3 4 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (2 : 4): [ 3 4 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 4): [ 3 4 ]
indx = 1


indInf (1 : 4): [ 4 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 4
indInf (1 : 4): [ 4 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 4): [ 4 ]
indx = 1


indInf (0 : 4): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 4): [ ]
------------------------------ Fine setdiff_i

107: copia_v_indx_d	<=>	ris <- v[indx]
S_out (4 : 4): [ 0.3616811523063164 -1.906639593729838 -0.279679550449335 -0.279679550449335 ]
indok (4 : 4): [ 1 2 3 4 ]


tmp_d1 (4 : 8): [ 0.3616811523063164 -1.906639593729838 -0.279679550449335 -0.279679550449335 ]
------------------------------ Fine copia_v_indx_d

111: min_v_d	<=>	ris <- min(v)
tmp_d1 (4 : 8): [ 0.3616811523063164 -1.906639593729838 -0.279679550449335 -0.279679550449335 ]


min = -1.906639593729838
------------------------------ Fine min_v_d

112: assegna1_vs_indx_d	<=>	v[indx] <- val
S_out (4 : 4): [ 0.3616811523063164 -1.906639593729838 -0.279679550449335 -0.279679550449335 ]
indInf (0 : 4): [ ]
val = -2.906639593729838


S_out (4 : 4): [ 0.3616811523063164 -1.906639593729838 -0.279679550449335 -0.279679550449335 ]
------------------------------ Fine assegna1_vs_indx_d

128: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 1 3 1 0 ]
h (4 : 5): [ 5 4 1 2 ]


tmp_i1 (4 : 12): [ 0 1 0 1 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (4 : 12): [ 0 1 0 1 ]
s = 1


ind (4 : 4): [ 1 2 1 2 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (4 : 12): [ 0 1 0 1 ]
s = 1


tmp_i1 (4 : 4): [ 1 2 1 2 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (4 : 4): [ 1 2 1 2 ]


T1 (4 : 4): [ 1.#QNAN 3.614836360604185 1.#QNAN 3.614836360604185 ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (4 : 4): [ 1 2 1 2 ]
s = 1


tmp_i1 (4 : 4): [ 2 3 2 3 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (4 : 4): [ 2 3 2 3 ]


T2 (4 : 4): [ 3.614836360604185 0.7867244574868211 3.614836360604185 0.7867244574868211 ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (4 : 12): [ 0 1 0 1 ]
s = 1


tmp_i1 (4 : 4): [ 1 2 1 2 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 2 2 0 1 0 0 0 ]
tmp_i1 (4 : 4): [ 1 2 1 2 ]


old1 (4 : 4): [ 2 2 2 2 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (4 : 4): [ 1 2 1 2 ]
s = 1


tmp_i1 (4 : 4): [ 2 3 2 3 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 2 2 0 1 0 0 0 ]
tmp_i1 (4 : 4): [ 2 3 2 3 ]


old2 (4 : 4): [ 2 0 2 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (4 : 4): [ 2 2 2 2 ]
s = -1


new1 (4 : 4): [ 1 1 1 1 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (4 : 4): [ 2 0 2 0 ]
s = 1


new2 (4 : 4): [ 3 1 3 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (4 : 12): [ 0 1 0 1 ]
s = 1


tmp_i1 (4 : 4): [ 1 2 1 2 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (4 : 4): [ 1 2 1 2 ]


toll1 (4 : 4): [ 1.#QNAN 1 1.#QNAN 1 ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (4 : 4): [ 1 2 1 2 ]
s = 1


tmp_i1 (4 : 4): [ 2 3 2 3 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (4 : 4): [ 2 3 2 3 ]


toll2 (4 : 4): [ 1 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (4 : 4): [ 2 2 2 2 ]
T1 (4 : 4): [ 1.#QNAN 3.614836360604185 1.#QNAN 3.614836360604185 ]


a (4 : 4): [ 1.#QNAN -1.614836360604185 1.#QNAN -1.614836360604185 ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (4 : 4): [ 1.#QNAN -1.614836360604185 1.#QNAN -1.614836360604185 ]


a (4 : 4): [ 1.#QNAN 1.614836360604185 1.#QNAN 1.614836360604185 ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (4 : 4): [ 1 1 1 1 ]
T1 (4 : 4): [ 1.#QNAN 3.614836360604185 1.#QNAN 3.614836360604185 ]


b (4 : 4): [ 1.#QNAN -2.614836360604185 1.#QNAN -2.614836360604185 ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (4 : 4): [ 1.#QNAN -2.614836360604185 1.#QNAN -2.614836360604185 ]


b (4 : 4): [ 1.#QNAN 2.614836360604185 1.#QNAN 2.614836360604185 ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (4 : 4): [ 1.#QNAN 3.614836360604185 1.#QNAN 3.614836360604185 ]
complemento = 0


ind (2 : 4): [ 1 3 ]
------------------------------ Fine which_v_indxNA_d

68: assegna1_vs_indx_d	<=>	v[indx] <- val
a (4 : 4): [ 1.#QNAN 1.614836360604185 1.#QNAN 1.614836360604185 ]
ind (2 : 4): [ 1 3 ]
val = 0


a (4 : 4): [ 0 1.614836360604185 0 1.614836360604185 ]
------------------------------ Fine assegna1_vs_indx_d

70: assegna1_vs_indx_d	<=>	v[indx] <- val
b (4 : 4): [ 1.#QNAN 2.614836360604185 1.#QNAN 2.614836360604185 ]
ind (2 : 4): [ 1 3 ]
val = 0


b (4 : 4): [ 0 2.614836360604185 0 2.614836360604185 ]
------------------------------ Fine assegna1_vs_indx_d

78: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (4 : 4): [ 0 1.614836360604185 0 1.614836360604185 ]
b (4 : 4): [ 0 2.614836360604185 0 2.614836360604185 ]


tmpm_d (4 x 2 : 4 x 2): [
	 0 0
	 1.614836360604185 2.614836360604185
	 0 0
	 1.614836360604185 2.614836360604185
 ]
------------------------------ Fine cbind2v_d

79: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (4 x 2 : 4 x 2): [
	 0 0
	 1.614836360604185 2.614836360604185
	 0 0
	 1.614836360604185 2.614836360604185
 ]


m (4 : 4): [ 0 2.614836360604185 0 2.614836360604185 ]
------------------------------ Fine max_righe_d

81: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (4 : 4): [ 0 1.614836360604185 0 1.614836360604185 ]
b (4 : 4): [ 0 2.614836360604185 0 2.614836360604185 ]
m (4 : 4): [ 0 2.614836360604185 0 2.614836360604185 ]
T1 (4 : 4): [ 1.#QNAN 3.614836360604185 1.#QNAN 3.614836360604185 ]


S1 (4 : 4): [ 1.#QNAN -0.7233623046126327 1.#QNAN -0.7233623046126327 ]
------------------------------ Fine f_aux_d

83: diff_vv_d	<=>	ris <- v1 - v2
a (4 : 4): [ 0 1.614836360604185 0 1.614836360604185 ]
toll1 (4 : 4): [ 1.#QNAN 1 1.#QNAN 1 ]


tmp_d1 (4 : 4): [ 1.#QNAN 0.6148363606041851 1.#QNAN 0.6148363606041851 ]
------------------------------ Fine diff_vv_d

84: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (4 : 4): [ 1.#QNAN 0.6148363606041851 1.#QNAN 0.6148363606041851 ]
val = 0

ind1 (0 : 4): [ ]
------------------------------ Fine which_v_indxlt_d

86: diff_vv_d	<=>	ris <- v1 - v2
b (4 : 4): [ 0 2.614836360604185 0 2.614836360604185 ]
toll1 (4 : 4): [ 1.#QNAN 1 1.#QNAN 1 ]


tmp_d1 (4 : 4): [ 1.#QNAN 1.614836360604185 1.#QNAN 1.614836360604185 ]
------------------------------ Fine diff_vv_d

87: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (4 : 4): [ 1.#QNAN 1.614836360604185 1.#QNAN 1.614836360604185 ]
val = 0


ind2 (2 : 4): [ 2 4 ]
------------------------------ Fine which_v_indxgt_d

89: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (0 : 4): [ ]
ind2 (2 : 4): [ 2 4 ]


tmp_i1 (0 : 4): [ ]
------------------------------ Fine interseca_i

91: assegna1_vs_indx_d	<=>	v[indx] <- val
S1 (4 : 4): [ 1.#QNAN -0.7233623046126327 1.#QNAN -0.7233623046126327 ]
tmp_i1 (0 : 4): [ ]
val = -1.#INF


S1 (4 : 4): [ 1.#QNAN -0.7233623046126327 1.#QNAN -0.7233623046126327 ]
------------------------------ Fine assegna1_vs_indx_d

93: assegna1_vs_indx_d	<=>	v[indx] <- val
S1 (4 : 4): [ 1.#QNAN -0.7233623046126327 1.#QNAN -0.7233623046126327 ]
ind (2 : 4): [ 1 3 ]
val = 0


S1 (4 : 4): [ 0 -0.7233623046126327 0 -0.7233623046126327 ]
------------------------------ Fine assegna1_vs_indx_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (4 : 4): [ 2 0 2 0 ]
T2 (4 : 4): [ 3.614836360604185 0.7867244574868211 3.614836360604185 0.7867244574868211 ]


a (4 : 4): [ -1.614836360604185 -0.7867244574868211 -1.614836360604185 -0.7867244574868211 ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (4 : 4): [ -1.614836360604185 -0.7867244574868211 -1.614836360604185 -0.7867244574868211 ]


a (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (4 : 4): [ 3 1 3 1 ]
T2 (4 : 4): [ 3.614836360604185 0.7867244574868211 3.614836360604185 0.7867244574868211 ]


b (4 : 4): [ -0.6148363606041851 0.2132755425131789 -0.6148363606041851 0.2132755425131789 ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (4 : 4): [ -0.6148363606041851 0.2132755425131789 -0.6148363606041851 0.2132755425131789 ]


b (4 : 4): [ 0.6148363606041851 0.2132755425131789 0.6148363606041851 0.2132755425131789 ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
b (4 : 4): [ 0.6148363606041851 0.2132755425131789 0.6148363606041851 0.2132755425131789 ]


tmpm_d (4 x 2 : 4 x 2): [
	 1.614836360604185 0.6148363606041851
	 0.7867244574868211 0.2132755425131789
	 1.614836360604185 0.6148363606041851
	 0.7867244574868211 0.2132755425131789
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (4 x 2 : 4 x 2): [
	 1.614836360604185 0.6148363606041851
	 0.7867244574868211 0.2132755425131789
	 1.614836360604185 0.6148363606041851
	 0.7867244574868211 0.2132755425131789
 ]


m (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (4 : 4): [ 3.614836360604185 0.7867244574868211 3.614836360604185 0.7867244574868211 ]
complemento = 0


ind (0 : 4): [ ]
------------------------------ Fine which_v_indxNA_d

115: assegna1_vs_indx_d	<=>	v[indx] <- val
a (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
ind (0 : 4): [ ]
val = 0


a (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
------------------------------ Fine assegna1_vs_indx_d

117: assegna1_vs_indx_d	<=>	v[indx] <- val
b (4 : 4): [ 0.6148363606041851 0.2132755425131789 0.6148363606041851 0.2132755425131789 ]
ind (0 : 4): [ ]
val = 0


b (4 : 4): [ 0.6148363606041851 0.2132755425131789 0.6148363606041851 0.2132755425131789 ]
------------------------------ Fine assegna1_vs_indx_d

119: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
b (4 : 4): [ 0.6148363606041851 0.2132755425131789 0.6148363606041851 0.2132755425131789 ]


tmpm_d (4 x 2 : 4 x 2): [
	 1.614836360604185 0.6148363606041851
	 0.7867244574868211 0.2132755425131789
	 1.614836360604185 0.6148363606041851
	 0.7867244574868211 0.2132755425131789
 ]
------------------------------ Fine cbind2v_d

120: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (4 x 2 : 4 x 2): [
	 1.614836360604185 0.6148363606041851
	 0.7867244574868211 0.2132755425131789
	 1.614836360604185 0.6148363606041851
	 0.7867244574868211 0.2132755425131789
 ]


m (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
------------------------------ Fine max_righe_d

122: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
b (4 : 4): [ 0.6148363606041851 0.2132755425131789 0.6148363606041851 0.2132755425131789 ]
m (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
T2 (4 : 4): [ 3.614836360604185 0.7867244574868211 3.614836360604185 0.7867244574868211 ]


S2 (4 : 4): [ 0.4467246092252654 1 0.4467246092252654 1 ]
------------------------------ Fine f_aux_d

124: diff_vv_d	<=>	ris <- v1 - v2
a (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
toll2 (4 : 4): [ 1 1 1 1 ]


tmp_d1 (4 : 4): [ 0.6148363606041851 -0.2132755425131789 0.6148363606041851 -0.2132755425131789 ]
------------------------------ Fine diff_vv_d

125: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (4 : 4): [ 0.6148363606041851 -0.2132755425131789 0.6148363606041851 -0.2132755425131789 ]
val = 0

ind1 (2 : 4): [ 2 4 ]
------------------------------ Fine which_v_indxlt_d

127: diff_vv_d	<=>	ris <- v1 - v2
b (4 : 4): [ 0.6148363606041851 0.2132755425131789 0.6148363606041851 0.2132755425131789 ]
toll2 (4 : 4): [ 1 1 1 1 ]


tmp_d1 (4 : 4): [ -0.3851636393958149 -0.7867244574868211 -0.3851636393958149 -0.7867244574868211 ]
------------------------------ Fine diff_vv_d

128: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (4 : 4): [ -0.3851636393958149 -0.7867244574868211 -0.3851636393958149 -0.7867244574868211 ]
val = 0


ind2 (0 : 4): [ ]
------------------------------ Fine which_v_indxgt_d

130: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (2 : 4): [ 2 4 ]
ind2 (0 : 4): [ ]
2459: esiste_v_i	<=>	elem %IN% v
elem = 2
ind2 (0 : 4): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 2
tmp_i1 (0 : 4): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 4
ind2 (0 : 4): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 4
tmp_i1 (0 : 4): [ ]


indx = 0
------------------------------ Fine esiste_v_i



tmp_i1 (0 : 4): [ ]
------------------------------ Fine interseca_i

132: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (4 : 4): [ 0.4467246092252654 1 0.4467246092252654 1 ]
tmp_i1 (0 : 4): [ ]
val = -1.#INF


S2 (4 : 4): [ 0.4467246092252654 1 0.4467246092252654 1 ]
------------------------------ Fine assegna1_vs_indx_d

134: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (4 : 4): [ 0.4467246092252654 1 0.4467246092252654 1 ]
ind (0 : 4): [ ]
val = 0


S2 (4 : 4): [ 0.4467246092252654 1 0.4467246092252654 1 ]
------------------------------ Fine assegna1_vs_indx_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (4 : 4): [ 3.614836360604185 0.7867244574868211 3.614836360604185 0.7867244574868211 ]
val = 0


ind (0 : 4): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (4 : 4): [ 0.4467246092252654 1 0.4467246092252654 1 ]
ind (0 : 4): [ ]
val = -1.#INF


S2 (4 : 4): [ 0.4467246092252654 1 0.4467246092252654 1 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (4 : 4): [ 0 -0.7233623046126327 0 -0.7233623046126327 ]
S2 (4 : 4): [ 0.4467246092252654 1 0.4467246092252654 1 ]


ris (4 : 4): [ 0.4467246092252654 0.2766376953873673 0.4467246092252654 0.2766376953873673 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
ris (4 : 4): [ 0.4467246092252654 0.2766376953873673 0.4467246092252654 0.2766376953873673 ]
div = 2.000


ris (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (2715 interne); stringhe deallocate: 0 (2325 interne)

131: which_v_indxne_d	<=>	ris <- which(v != val)
ris (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]
val = -1.#INF


indok (4 : 4): [ 1 2 3 4 ]
------------------------------ Fine which_v_indxne_d

133: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkIN (4 x 4 : 4 x 4): [
	 1 0 1 0
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
 ]
riga = 2
indok (4 : 4): [ 1 2 3 4 ]
val = 1


checkIN (4 x 4 : 4 x 4): [
	 1 0 1 0
	 1 1 1 1
	 0 0 0 0
	 0 0 0 0
 ]
------------------------------ Fine aggiungi_riga_indx_i

141: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 4
incr = 1


tmp_i1 (4 : 12): [ 1 2 3 4 ]
------------------------------ Fine seq_i

142: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (4 : 12): [ 1 2 3 4 ]
indok (4 : 4): [ 1 2 3 4 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (4 : 12): [ 1 2 3 4 ]
st = 1
end = 4


indInf (4 : 4): [ 1 2 3 4 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (4 : 4): [ 1 2 3 4 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (4 : 4): [ 1 2 3 4 ]
indx = 1


indInf (3 : 4): [ 2 3 4 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (3 : 4): [ 2 3 4 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 4): [ 2 3 4 ]
indx = 1


indInf (2 : 4): [ 3 4 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (2 : 4): [ 3 4 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 4): [ 3 4 ]
indx = 1


indInf (1 : 4): [ 4 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 4
indInf (1 : 4): [ 4 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 4): [ 4 ]
indx = 1


indInf (0 : 4): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 4): [ ]
------------------------------ Fine setdiff_i

144: copia_v_indx_d	<=>	ris <- v[indx]
ris (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]
indok (4 : 4): [ 1 2 3 4 ]


tmp_d1 (4 : 8): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]
------------------------------ Fine copia_v_indx_d

148: min_v_d	<=>	ris <- min(v)
tmp_d1 (4 : 8): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]


min = 0.1383188476936836
------------------------------ Fine min_v_d

149: assegna1_vs_indx_d	<=>	v[indx] <- val
ris (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]
indInf (0 : 4): [ ]
val = -1


ris (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]
------------------------------ Fine assegna1_vs_indx_d

159: somma_vv_d	<=>	ris <- v1 + v2
S_out (4 : 4): [ 0.3616811523063164 -1.906639593729838 -0.279679550449335 -0.279679550449335 ]
ris (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]


tmp_d1 (4 : 8): [ 0.5850434569189491 -1.768320746036155 -0.05631724583670231 -0.1413607027556514 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (4 x 4 : 4 x 4): [
	 0.5 -1 0.5 -1
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
 ]
riga = 2
tmp_d1 (4 : 8): [ 0.5850434569189491 -1.768320746036155 -0.05631724583670231 -0.1413607027556514 ]


ris (4 x 4 : 4 x 4): [
	 0.5 -1 0.5 -1
	 0.5850434569189491 -1.768320746036155 -0.05631724583670231 -0.1413607027556514
	 0 0 0 0
	 0 0 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_d

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (4 x 3 : 4 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 1


tmp_i1 (0 : 12): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (4 x 3 : 4 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 1


tmp_i2 (0 : 12): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 12): [ ]
tmp_i2 (0 : 12): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

92: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sout (5 : 5): [ 2 2 0 1 0 ]
h (4 : 5): [ 5 4 1 2 ]


tmp_i1 (4 : 12): [ 0 1 2 2 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (4 : 12): [ 0 1 2 2 ]
s = 1


ind (4 : 4): [ 1 2 3 3 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (4 : 12): [ 0 1 2 2 ]
s = 1


tmp_i1 (4 : 4): [ 1 2 3 3 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (4 : 4): [ 1 2 3 3 ]


T1 (4 : 4): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.7867244574868211 ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (4 : 4): [ 1 2 3 3 ]
s = 1


tmp_i1 (4 : 4): [ 2 3 4 4 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (4 : 4): [ 2 3 4 4 ]


T2 (4 : 4): [ 3.614836360604185 0.7867244574868211 0.3224199317354524 0.3224199317354524 ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (4 : 12): [ 0 1 2 2 ]
s = 1


tmp_i1 (4 : 4): [ 1 2 3 3 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 2 1 2 0 0 0 0 ]
tmp_i1 (4 : 4): [ 1 2 3 3 ]


old1 (4 : 4): [ 2 1 2 2 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (4 : 4): [ 1 2 3 3 ]
s = 1


tmp_i1 (4 : 4): [ 2 3 4 4 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 2 1 2 0 0 0 0 ]
tmp_i1 (4 : 4): [ 2 3 4 4 ]


old2 (4 : 4): [ 1 2 0 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (4 : 4): [ 2 1 2 2 ]
s = -1


new1 (4 : 4): [ 1 0 1 1 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (4 : 4): [ 1 2 0 0 ]
s = 1


new2 (4 : 4): [ 2 3 1 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (4 : 12): [ 0 1 2 2 ]
s = 1


tmp_i1 (4 : 4): [ 1 2 3 3 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (4 : 4): [ 1 2 3 3 ]


toll1 (4 : 4): [ 1.#QNAN 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (4 : 4): [ 1 2 3 3 ]
s = 1


tmp_i1 (4 : 4): [ 2 3 4 4 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (4 : 4): [ 2 3 4 4 ]


toll2 (4 : 4): [ 1 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (4 : 4): [ 2 1 2 2 ]
T1 (4 : 4): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.7867244574868211 ]


a (4 : 4): [ 1.#QNAN -2.614836360604185 1.213275542513179 1.213275542513179 ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (4 : 4): [ 1.#QNAN -2.614836360604185 1.213275542513179 1.213275542513179 ]


a (4 : 4): [ 1.#QNAN 2.614836360604185 1.213275542513179 1.213275542513179 ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (4 : 4): [ 1 0 1 1 ]
T1 (4 : 4): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.7867244574868211 ]


b (4 : 4): [ 1.#QNAN -3.614836360604185 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (4 : 4): [ 1.#QNAN -3.614836360604185 0.2132755425131789 0.2132755425131789 ]


b (4 : 4): [ 1.#QNAN 3.614836360604185 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (4 : 4): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.7867244574868211 ]
complemento = 0


ind (1 : 4): [ 1 ]
------------------------------ Fine which_v_indxNA_d

68: assegna1_vs_indx_d	<=>	v[indx] <- val
a (4 : 4): [ 1.#QNAN 2.614836360604185 1.213275542513179 1.213275542513179 ]
ind (1 : 4): [ 1 ]
val = 0


a (4 : 4): [ 0 2.614836360604185 1.213275542513179 1.213275542513179 ]
------------------------------ Fine assegna1_vs_indx_d

70: assegna1_vs_indx_d	<=>	v[indx] <- val
b (4 : 4): [ 1.#QNAN 3.614836360604185 0.2132755425131789 0.2132755425131789 ]
ind (1 : 4): [ 1 ]
val = 0


b (4 : 4): [ 0 3.614836360604185 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine assegna1_vs_indx_d

78: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (4 : 4): [ 0 2.614836360604185 1.213275542513179 1.213275542513179 ]
b (4 : 4): [ 0 3.614836360604185 0.2132755425131789 0.2132755425131789 ]


tmpm_d (4 x 2 : 4 x 2): [
	 0 0
	 2.614836360604185 3.614836360604185
	 1.213275542513179 0.2132755425131789
	 1.213275542513179 0.2132755425131789
 ]
------------------------------ Fine cbind2v_d

79: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (4 x 2 : 4 x 2): [
	 0 0
	 2.614836360604185 3.614836360604185
	 1.213275542513179 0.2132755425131789
	 1.213275542513179 0.2132755425131789
 ]


m (4 : 4): [ 0 3.614836360604185 1.213275542513179 1.213275542513179 ]
------------------------------ Fine max_righe_d

81: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (4 : 4): [ 0 2.614836360604185 1.213275542513179 1.213275542513179 ]
b (4 : 4): [ 0 3.614836360604185 0.2132755425131789 0.2132755425131789 ]
m (4 : 4): [ 0 3.614836360604185 1.213275542513179 1.213275542513179 ]
T1 (4 : 4): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.7867244574868211 ]


S1 (4 : 4): [ 1.#QNAN -1 1.542186124973118 1.542186124973118 ]
------------------------------ Fine f_aux_d

83: diff_vv_d	<=>	ris <- v1 - v2
a (4 : 4): [ 0 2.614836360604185 1.213275542513179 1.213275542513179 ]
toll1 (4 : 4): [ 1.#QNAN 1 1 1 ]


tmp_d1 (4 : 4): [ 1.#QNAN 1.614836360604185 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine diff_vv_d

84: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (4 : 4): [ 1.#QNAN 1.614836360604185 0.2132755425131789 0.2132755425131789 ]
val = 0

ind1 (0 : 4): [ ]
------------------------------ Fine which_v_indxlt_d

86: diff_vv_d	<=>	ris <- v1 - v2
b (4 : 4): [ 0 3.614836360604185 0.2132755425131789 0.2132755425131789 ]
toll1 (4 : 4): [ 1.#QNAN 1 1 1 ]


tmp_d1 (4 : 4): [ 1.#QNAN 2.614836360604185 -0.7867244574868211 -0.7867244574868211 ]
------------------------------ Fine diff_vv_d

87: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (4 : 4): [ 1.#QNAN 2.614836360604185 -0.7867244574868211 -0.7867244574868211 ]
val = 0


ind2 (1 : 4): [ 2 ]
------------------------------ Fine which_v_indxgt_d

89: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (0 : 4): [ ]
ind2 (1 : 4): [ 2 ]


tmp_i1 (0 : 4): [ ]
------------------------------ Fine interseca_i

91: assegna1_vs_indx_d	<=>	v[indx] <- val
S1 (4 : 4): [ 1.#QNAN -1 1.542186124973118 1.542186124973118 ]
tmp_i1 (0 : 4): [ ]
val = -1.#INF


S1 (4 : 4): [ 1.#QNAN -1 1.542186124973118 1.542186124973118 ]
------------------------------ Fine assegna1_vs_indx_d

93: assegna1_vs_indx_d	<=>	v[indx] <- val
S1 (4 : 4): [ 1.#QNAN -1 1.542186124973118 1.542186124973118 ]
ind (1 : 4): [ 1 ]
val = 0


S1 (4 : 4): [ 0 -1 1.542186124973118 1.542186124973118 ]
------------------------------ Fine assegna1_vs_indx_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (4 : 4): [ 1 2 0 0 ]
T2 (4 : 4): [ 3.614836360604185 0.7867244574868211 0.3224199317354524 0.3224199317354524 ]


a (4 : 4): [ -2.614836360604185 1.213275542513179 -0.3224199317354524 -0.3224199317354524 ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (4 : 4): [ -2.614836360604185 1.213275542513179 -0.3224199317354524 -0.3224199317354524 ]


a (4 : 4): [ 2.614836360604185 1.213275542513179 0.3224199317354524 0.3224199317354524 ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (4 : 4): [ 2 3 1 1 ]
T2 (4 : 4): [ 3.614836360604185 0.7867244574868211 0.3224199317354524 0.3224199317354524 ]


b (4 : 4): [ -1.614836360604185 2.213275542513179 0.6775800682645476 0.6775800682645476 ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (4 : 4): [ -1.614836360604185 2.213275542513179 0.6775800682645476 0.6775800682645476 ]


b (4 : 4): [ 1.614836360604185 2.213275542513179 0.6775800682645476 0.6775800682645476 ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (4 : 4): [ 2.614836360604185 1.213275542513179 0.3224199317354524 0.3224199317354524 ]
b (4 : 4): [ 1.614836360604185 2.213275542513179 0.6775800682645476 0.6775800682645476 ]


tmpm_d (4 x 2 : 4 x 2): [
	 2.614836360604185 1.614836360604185
	 1.213275542513179 2.213275542513179
	 0.3224199317354524 0.6775800682645476
	 0.3224199317354524 0.6775800682645476
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (4 x 2 : 4 x 2): [
	 2.614836360604185 1.614836360604185
	 1.213275542513179 2.213275542513179
	 0.3224199317354524 0.6775800682645476
	 0.3224199317354524 0.6775800682645476
 ]


m (4 : 4): [ 2.614836360604185 2.213275542513179 0.6775800682645476 0.6775800682645476 ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (4 : 4): [ 3.614836360604185 0.7867244574868211 0.3224199317354524 0.3224199317354524 ]
complemento = 0


ind (0 : 4): [ ]
------------------------------ Fine which_v_indxNA_d

115: assegna1_vs_indx_d	<=>	v[indx] <- val
a (4 : 4): [ 2.614836360604185 1.213275542513179 0.3224199317354524 0.3224199317354524 ]
ind (0 : 4): [ ]
val = 0


a (4 : 4): [ 2.614836360604185 1.213275542513179 0.3224199317354524 0.3224199317354524 ]
------------------------------ Fine assegna1_vs_indx_d

117: assegna1_vs_indx_d	<=>	v[indx] <- val
b (4 : 4): [ 1.614836360604185 2.213275542513179 0.6775800682645476 0.6775800682645476 ]
ind (0 : 4): [ ]
val = 0


b (4 : 4): [ 1.614836360604185 2.213275542513179 0.6775800682645476 0.6775800682645476 ]
------------------------------ Fine assegna1_vs_indx_d

119: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (4 : 4): [ 2.614836360604185 1.213275542513179 0.3224199317354524 0.3224199317354524 ]
b (4 : 4): [ 1.614836360604185 2.213275542513179 0.6775800682645476 0.6775800682645476 ]


tmpm_d (4 x 2 : 4 x 2): [
	 2.614836360604185 1.614836360604185
	 1.213275542513179 2.213275542513179
	 0.3224199317354524 0.6775800682645476
	 0.3224199317354524 0.6775800682645476
 ]
------------------------------ Fine cbind2v_d

120: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (4 x 2 : 4 x 2): [
	 2.614836360604185 1.614836360604185
	 1.213275542513179 2.213275542513179
	 0.3224199317354524 0.6775800682645476
	 0.3224199317354524 0.6775800682645476
 ]


m (4 : 4): [ 2.614836360604185 2.213275542513179 0.6775800682645476 0.6775800682645476 ]
------------------------------ Fine max_righe_d

122: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (4 : 4): [ 2.614836360604185 1.213275542513179 0.3224199317354524 0.3224199317354524 ]
b (4 : 4): [ 1.614836360604185 2.213275542513179 0.6775800682645476 0.6775800682645476 ]
m (4 : 4): [ 2.614836360604185 2.213275542513179 0.6775800682645476 0.6775800682645476 ]
T2 (4 : 4): [ 3.614836360604185 0.7867244574868211 0.3224199317354524 0.3224199317354524 ]


S2 (4 : 4): [ 0.7233623046126327 -2.813279187459676 -2.101545225871788 -2.101545225871788 ]
------------------------------ Fine f_aux_d

124: diff_vv_d	<=>	ris <- v1 - v2
a (4 : 4): [ 2.614836360604185 1.213275542513179 0.3224199317354524 0.3224199317354524 ]
toll2 (4 : 4): [ 1 1 1 1 ]


tmp_d1 (4 : 4): [ 1.614836360604185 0.2132755425131789 -0.6775800682645476 -0.6775800682645476 ]
------------------------------ Fine diff_vv_d

125: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (4 : 4): [ 1.614836360604185 0.2132755425131789 -0.6775800682645476 -0.6775800682645476 ]
val = 0

ind1 (2 : 4): [ 3 4 ]
------------------------------ Fine which_v_indxlt_d

127: diff_vv_d	<=>	ris <- v1 - v2
b (4 : 4): [ 1.614836360604185 2.213275542513179 0.6775800682645476 0.6775800682645476 ]
toll2 (4 : 4): [ 1 1 1 1 ]


tmp_d1 (4 : 4): [ 0.6148363606041851 1.213275542513179 -0.3224199317354524 -0.3224199317354524 ]
------------------------------ Fine diff_vv_d

128: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (4 : 4): [ 0.6148363606041851 1.213275542513179 -0.3224199317354524 -0.3224199317354524 ]
val = 0


ind2 (2 : 4): [ 1 2 ]
------------------------------ Fine which_v_indxgt_d

130: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (2 : 4): [ 3 4 ]
ind2 (2 : 4): [ 1 2 ]
2459: esiste_v_i	<=>	elem %IN% v
elem = 3
ind2 (2 : 4): [ 1 2 ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 3
tmp_i1 (0 : 4): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 4
ind2 (2 : 4): [ 1 2 ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 4
tmp_i1 (0 : 4): [ ]


indx = 0
------------------------------ Fine esiste_v_i



tmp_i1 (0 : 4): [ ]
------------------------------ Fine interseca_i

132: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (4 : 4): [ 0.7233623046126327 -2.813279187459676 -2.101545225871788 -2.101545225871788 ]
tmp_i1 (0 : 4): [ ]
val = -1.#INF


S2 (4 : 4): [ 0.7233623046126327 -2.813279187459676 -2.101545225871788 -2.101545225871788 ]
------------------------------ Fine assegna1_vs_indx_d

134: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (4 : 4): [ 0.7233623046126327 -2.813279187459676 -2.101545225871788 -2.101545225871788 ]
ind (0 : 4): [ ]
val = 0


S2 (4 : 4): [ 0.7233623046126327 -2.813279187459676 -2.101545225871788 -2.101545225871788 ]
------------------------------ Fine assegna1_vs_indx_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (4 : 4): [ 3.614836360604185 0.7867244574868211 0.3224199317354524 0.3224199317354524 ]
val = 0


ind (0 : 4): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (4 : 4): [ 0.7233623046126327 -2.813279187459676 -2.101545225871788 -2.101545225871788 ]
ind (0 : 4): [ ]
val = -1.#INF


S2 (4 : 4): [ 0.7233623046126327 -2.813279187459676 -2.101545225871788 -2.101545225871788 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (4 : 4): [ 0 -1 1.542186124973118 1.542186124973118 ]
S2 (4 : 4): [ 0.7233623046126327 -2.813279187459676 -2.101545225871788 -2.101545225871788 ]


S_out (4 : 4): [ 0.7233623046126327 -3.813279187459676 -0.55935910089867 -0.55935910089867 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
S_out (4 : 4): [ 0.7233623046126327 -3.813279187459676 -0.55935910089867 -0.55935910089867 ]
div = 2.000


S_out (4 : 4): [ 0.3616811523063164 -1.906639593729838 -0.279679550449335 -0.279679550449335 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (2815 interne); stringhe deallocate: 0 (2425 interne)

95: which_v_indxne_d	<=>	ris <- which(v != val)
S_out (4 : 4): [ 0.3616811523063164 -1.906639593729838 -0.279679550449335 -0.279679550449335 ]
val = -1.#INF


indok (4 : 4): [ 1 2 3 4 ]
------------------------------ Fine which_v_indxne_d

97: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkOUT (4 x 4 : 4 x 4): [
	 1 1 1 1
	 1 1 1 1
	 0 0 0 0
	 0 0 0 0
 ]
riga = 3
indok (4 : 4): [ 1 2 3 4 ]
val = 1


checkOUT (4 x 4 : 4 x 4): [
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
	 0 0 0 0
 ]
------------------------------ Fine aggiungi_riga_indx_i

104: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 4
incr = 1


tmp_i1 (4 : 12): [ 1 2 3 4 ]
------------------------------ Fine seq_i

105: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (4 : 12): [ 1 2 3 4 ]
indok (4 : 4): [ 1 2 3 4 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (4 : 12): [ 1 2 3 4 ]
st = 1
end = 4


indInf (4 : 4): [ 1 2 3 4 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (4 : 4): [ 1 2 3 4 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (4 : 4): [ 1 2 3 4 ]
indx = 1


indInf (3 : 4): [ 2 3 4 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (3 : 4): [ 2 3 4 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 4): [ 2 3 4 ]
indx = 1


indInf (2 : 4): [ 3 4 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (2 : 4): [ 3 4 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 4): [ 3 4 ]
indx = 1


indInf (1 : 4): [ 4 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 4
indInf (1 : 4): [ 4 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 4): [ 4 ]
indx = 1


indInf (0 : 4): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 4): [ ]
------------------------------ Fine setdiff_i

107: copia_v_indx_d	<=>	ris <- v[indx]
S_out (4 : 4): [ 0.3616811523063164 -1.906639593729838 -0.279679550449335 -0.279679550449335 ]
indok (4 : 4): [ 1 2 3 4 ]


tmp_d1 (4 : 8): [ 0.3616811523063164 -1.906639593729838 -0.279679550449335 -0.279679550449335 ]
------------------------------ Fine copia_v_indx_d

111: min_v_d	<=>	ris <- min(v)
tmp_d1 (4 : 8): [ 0.3616811523063164 -1.906639593729838 -0.279679550449335 -0.279679550449335 ]


min = -1.906639593729838
------------------------------ Fine min_v_d

112: assegna1_vs_indx_d	<=>	v[indx] <- val
S_out (4 : 4): [ 0.3616811523063164 -1.906639593729838 -0.279679550449335 -0.279679550449335 ]
indInf (0 : 4): [ ]
val = -2.906639593729838


S_out (4 : 4): [ 0.3616811523063164 -1.906639593729838 -0.279679550449335 -0.279679550449335 ]
------------------------------ Fine assegna1_vs_indx_d

128: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 1 3 1 0 ]
h (4 : 5): [ 5 4 1 2 ]


tmp_i1 (4 : 12): [ 0 1 0 1 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (4 : 12): [ 0 1 0 1 ]
s = 1


ind (4 : 4): [ 1 2 1 2 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (4 : 12): [ 0 1 0 1 ]
s = 1


tmp_i1 (4 : 4): [ 1 2 1 2 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (4 : 4): [ 1 2 1 2 ]


T1 (4 : 4): [ 1.#QNAN 3.614836360604185 1.#QNAN 3.614836360604185 ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (4 : 4): [ 1 2 1 2 ]
s = 1


tmp_i1 (4 : 4): [ 2 3 2 3 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (4 : 4): [ 2 3 2 3 ]


T2 (4 : 4): [ 3.614836360604185 0.7867244574868211 3.614836360604185 0.7867244574868211 ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (4 : 12): [ 0 1 0 1 ]
s = 1


tmp_i1 (4 : 4): [ 1 2 1 2 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 2 2 0 1 0 0 0 ]
tmp_i1 (4 : 4): [ 1 2 1 2 ]


old1 (4 : 4): [ 2 2 2 2 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (4 : 4): [ 1 2 1 2 ]
s = 1


tmp_i1 (4 : 4): [ 2 3 2 3 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 2 2 0 1 0 0 0 ]
tmp_i1 (4 : 4): [ 2 3 2 3 ]


old2 (4 : 4): [ 2 0 2 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (4 : 4): [ 2 2 2 2 ]
s = -1


new1 (4 : 4): [ 1 1 1 1 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (4 : 4): [ 2 0 2 0 ]
s = 1


new2 (4 : 4): [ 3 1 3 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (4 : 12): [ 0 1 0 1 ]
s = 1


tmp_i1 (4 : 4): [ 1 2 1 2 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (4 : 4): [ 1 2 1 2 ]


toll1 (4 : 4): [ 1.#QNAN 1 1.#QNAN 1 ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (4 : 4): [ 1 2 1 2 ]
s = 1


tmp_i1 (4 : 4): [ 2 3 2 3 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (4 : 4): [ 2 3 2 3 ]


toll2 (4 : 4): [ 1 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (4 : 4): [ 2 2 2 2 ]
T1 (4 : 4): [ 1.#QNAN 3.614836360604185 1.#QNAN 3.614836360604185 ]


a (4 : 4): [ 1.#QNAN -1.614836360604185 1.#QNAN -1.614836360604185 ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (4 : 4): [ 1.#QNAN -1.614836360604185 1.#QNAN -1.614836360604185 ]


a (4 : 4): [ 1.#QNAN 1.614836360604185 1.#QNAN 1.614836360604185 ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (4 : 4): [ 1 1 1 1 ]
T1 (4 : 4): [ 1.#QNAN 3.614836360604185 1.#QNAN 3.614836360604185 ]


b (4 : 4): [ 1.#QNAN -2.614836360604185 1.#QNAN -2.614836360604185 ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (4 : 4): [ 1.#QNAN -2.614836360604185 1.#QNAN -2.614836360604185 ]


b (4 : 4): [ 1.#QNAN 2.614836360604185 1.#QNAN 2.614836360604185 ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (4 : 4): [ 1.#QNAN 3.614836360604185 1.#QNAN 3.614836360604185 ]
complemento = 0


ind (2 : 4): [ 1 3 ]
------------------------------ Fine which_v_indxNA_d

68: assegna1_vs_indx_d	<=>	v[indx] <- val
a (4 : 4): [ 1.#QNAN 1.614836360604185 1.#QNAN 1.614836360604185 ]
ind (2 : 4): [ 1 3 ]
val = 0


a (4 : 4): [ 0 1.614836360604185 0 1.614836360604185 ]
------------------------------ Fine assegna1_vs_indx_d

70: assegna1_vs_indx_d	<=>	v[indx] <- val
b (4 : 4): [ 1.#QNAN 2.614836360604185 1.#QNAN 2.614836360604185 ]
ind (2 : 4): [ 1 3 ]
val = 0


b (4 : 4): [ 0 2.614836360604185 0 2.614836360604185 ]
------------------------------ Fine assegna1_vs_indx_d

78: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (4 : 4): [ 0 1.614836360604185 0 1.614836360604185 ]
b (4 : 4): [ 0 2.614836360604185 0 2.614836360604185 ]


tmpm_d (4 x 2 : 4 x 2): [
	 0 0
	 1.614836360604185 2.614836360604185
	 0 0
	 1.614836360604185 2.614836360604185
 ]
------------------------------ Fine cbind2v_d

79: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (4 x 2 : 4 x 2): [
	 0 0
	 1.614836360604185 2.614836360604185
	 0 0
	 1.614836360604185 2.614836360604185
 ]


m (4 : 4): [ 0 2.614836360604185 0 2.614836360604185 ]
------------------------------ Fine max_righe_d

81: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (4 : 4): [ 0 1.614836360604185 0 1.614836360604185 ]
b (4 : 4): [ 0 2.614836360604185 0 2.614836360604185 ]
m (4 : 4): [ 0 2.614836360604185 0 2.614836360604185 ]
T1 (4 : 4): [ 1.#QNAN 3.614836360604185 1.#QNAN 3.614836360604185 ]


S1 (4 : 4): [ 1.#QNAN -0.7233623046126327 1.#QNAN -0.7233623046126327 ]
------------------------------ Fine f_aux_d

83: diff_vv_d	<=>	ris <- v1 - v2
a (4 : 4): [ 0 1.614836360604185 0 1.614836360604185 ]
toll1 (4 : 4): [ 1.#QNAN 1 1.#QNAN 1 ]


tmp_d1 (4 : 4): [ 1.#QNAN 0.6148363606041851 1.#QNAN 0.6148363606041851 ]
------------------------------ Fine diff_vv_d

84: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (4 : 4): [ 1.#QNAN 0.6148363606041851 1.#QNAN 0.6148363606041851 ]
val = 0

ind1 (0 : 4): [ ]
------------------------------ Fine which_v_indxlt_d

86: diff_vv_d	<=>	ris <- v1 - v2
b (4 : 4): [ 0 2.614836360604185 0 2.614836360604185 ]
toll1 (4 : 4): [ 1.#QNAN 1 1.#QNAN 1 ]


tmp_d1 (4 : 4): [ 1.#QNAN 1.614836360604185 1.#QNAN 1.614836360604185 ]
------------------------------ Fine diff_vv_d

87: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (4 : 4): [ 1.#QNAN 1.614836360604185 1.#QNAN 1.614836360604185 ]
val = 0


ind2 (2 : 4): [ 2 4 ]
------------------------------ Fine which_v_indxgt_d

89: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (0 : 4): [ ]
ind2 (2 : 4): [ 2 4 ]


tmp_i1 (0 : 4): [ ]
------------------------------ Fine interseca_i

91: assegna1_vs_indx_d	<=>	v[indx] <- val
S1 (4 : 4): [ 1.#QNAN -0.7233623046126327 1.#QNAN -0.7233623046126327 ]
tmp_i1 (0 : 4): [ ]
val = -1.#INF


S1 (4 : 4): [ 1.#QNAN -0.7233623046126327 1.#QNAN -0.7233623046126327 ]
------------------------------ Fine assegna1_vs_indx_d

93: assegna1_vs_indx_d	<=>	v[indx] <- val
S1 (4 : 4): [ 1.#QNAN -0.7233623046126327 1.#QNAN -0.7233623046126327 ]
ind (2 : 4): [ 1 3 ]
val = 0


S1 (4 : 4): [ 0 -0.7233623046126327 0 -0.7233623046126327 ]
------------------------------ Fine assegna1_vs_indx_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (4 : 4): [ 2 0 2 0 ]
T2 (4 : 4): [ 3.614836360604185 0.7867244574868211 3.614836360604185 0.7867244574868211 ]


a (4 : 4): [ -1.614836360604185 -0.7867244574868211 -1.614836360604185 -0.7867244574868211 ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (4 : 4): [ -1.614836360604185 -0.7867244574868211 -1.614836360604185 -0.7867244574868211 ]


a (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (4 : 4): [ 3 1 3 1 ]
T2 (4 : 4): [ 3.614836360604185 0.7867244574868211 3.614836360604185 0.7867244574868211 ]


b (4 : 4): [ -0.6148363606041851 0.2132755425131789 -0.6148363606041851 0.2132755425131789 ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (4 : 4): [ -0.6148363606041851 0.2132755425131789 -0.6148363606041851 0.2132755425131789 ]


b (4 : 4): [ 0.6148363606041851 0.2132755425131789 0.6148363606041851 0.2132755425131789 ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
b (4 : 4): [ 0.6148363606041851 0.2132755425131789 0.6148363606041851 0.2132755425131789 ]


tmpm_d (4 x 2 : 4 x 2): [
	 1.614836360604185 0.6148363606041851
	 0.7867244574868211 0.2132755425131789
	 1.614836360604185 0.6148363606041851
	 0.7867244574868211 0.2132755425131789
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (4 x 2 : 4 x 2): [
	 1.614836360604185 0.6148363606041851
	 0.7867244574868211 0.2132755425131789
	 1.614836360604185 0.6148363606041851
	 0.7867244574868211 0.2132755425131789
 ]


m (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (4 : 4): [ 3.614836360604185 0.7867244574868211 3.614836360604185 0.7867244574868211 ]
complemento = 0


ind (0 : 4): [ ]
------------------------------ Fine which_v_indxNA_d

115: assegna1_vs_indx_d	<=>	v[indx] <- val
a (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
ind (0 : 4): [ ]
val = 0


a (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
------------------------------ Fine assegna1_vs_indx_d

117: assegna1_vs_indx_d	<=>	v[indx] <- val
b (4 : 4): [ 0.6148363606041851 0.2132755425131789 0.6148363606041851 0.2132755425131789 ]
ind (0 : 4): [ ]
val = 0


b (4 : 4): [ 0.6148363606041851 0.2132755425131789 0.6148363606041851 0.2132755425131789 ]
------------------------------ Fine assegna1_vs_indx_d

119: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
b (4 : 4): [ 0.6148363606041851 0.2132755425131789 0.6148363606041851 0.2132755425131789 ]


tmpm_d (4 x 2 : 4 x 2): [
	 1.614836360604185 0.6148363606041851
	 0.7867244574868211 0.2132755425131789
	 1.614836360604185 0.6148363606041851
	 0.7867244574868211 0.2132755425131789
 ]
------------------------------ Fine cbind2v_d

120: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (4 x 2 : 4 x 2): [
	 1.614836360604185 0.6148363606041851
	 0.7867244574868211 0.2132755425131789
	 1.614836360604185 0.6148363606041851
	 0.7867244574868211 0.2132755425131789
 ]


m (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
------------------------------ Fine max_righe_d

122: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
b (4 : 4): [ 0.6148363606041851 0.2132755425131789 0.6148363606041851 0.2132755425131789 ]
m (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
T2 (4 : 4): [ 3.614836360604185 0.7867244574868211 3.614836360604185 0.7867244574868211 ]


S2 (4 : 4): [ 0.4467246092252654 1 0.4467246092252654 1 ]
------------------------------ Fine f_aux_d

124: diff_vv_d	<=>	ris <- v1 - v2
a (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
toll2 (4 : 4): [ 1 1 1 1 ]


tmp_d1 (4 : 4): [ 0.6148363606041851 -0.2132755425131789 0.6148363606041851 -0.2132755425131789 ]
------------------------------ Fine diff_vv_d

125: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (4 : 4): [ 0.6148363606041851 -0.2132755425131789 0.6148363606041851 -0.2132755425131789 ]
val = 0

ind1 (2 : 4): [ 2 4 ]
------------------------------ Fine which_v_indxlt_d

127: diff_vv_d	<=>	ris <- v1 - v2
b (4 : 4): [ 0.6148363606041851 0.2132755425131789 0.6148363606041851 0.2132755425131789 ]
toll2 (4 : 4): [ 1 1 1 1 ]


tmp_d1 (4 : 4): [ -0.3851636393958149 -0.7867244574868211 -0.3851636393958149 -0.7867244574868211 ]
------------------------------ Fine diff_vv_d

128: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (4 : 4): [ -0.3851636393958149 -0.7867244574868211 -0.3851636393958149 -0.7867244574868211 ]
val = 0


ind2 (0 : 4): [ ]
------------------------------ Fine which_v_indxgt_d

130: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (2 : 4): [ 2 4 ]
ind2 (0 : 4): [ ]
2459: esiste_v_i	<=>	elem %IN% v
elem = 2
ind2 (0 : 4): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 2
tmp_i1 (0 : 4): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 4
ind2 (0 : 4): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 4
tmp_i1 (0 : 4): [ ]


indx = 0
------------------------------ Fine esiste_v_i



tmp_i1 (0 : 4): [ ]
------------------------------ Fine interseca_i

132: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (4 : 4): [ 0.4467246092252654 1 0.4467246092252654 1 ]
tmp_i1 (0 : 4): [ ]
val = -1.#INF


S2 (4 : 4): [ 0.4467246092252654 1 0.4467246092252654 1 ]
------------------------------ Fine assegna1_vs_indx_d

134: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (4 : 4): [ 0.4467246092252654 1 0.4467246092252654 1 ]
ind (0 : 4): [ ]
val = 0


S2 (4 : 4): [ 0.4467246092252654 1 0.4467246092252654 1 ]
------------------------------ Fine assegna1_vs_indx_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (4 : 4): [ 3.614836360604185 0.7867244574868211 3.614836360604185 0.7867244574868211 ]
val = 0


ind (0 : 4): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (4 : 4): [ 0.4467246092252654 1 0.4467246092252654 1 ]
ind (0 : 4): [ ]
val = -1.#INF


S2 (4 : 4): [ 0.4467246092252654 1 0.4467246092252654 1 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (4 : 4): [ 0 -0.7233623046126327 0 -0.7233623046126327 ]
S2 (4 : 4): [ 0.4467246092252654 1 0.4467246092252654 1 ]


ris (4 : 4): [ 0.4467246092252654 0.2766376953873673 0.4467246092252654 0.2766376953873673 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
ris (4 : 4): [ 0.4467246092252654 0.2766376953873673 0.4467246092252654 0.2766376953873673 ]
div = 2.000


ris (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (2915 interne); stringhe deallocate: 0 (2525 interne)

131: which_v_indxne_d	<=>	ris <- which(v != val)
ris (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]
val = -1.#INF


indok (4 : 4): [ 1 2 3 4 ]
------------------------------ Fine which_v_indxne_d

133: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkIN (4 x 4 : 4 x 4): [
	 1 0 1 0
	 1 1 1 1
	 0 0 0 0
	 0 0 0 0
 ]
riga = 3
indok (4 : 4): [ 1 2 3 4 ]
val = 1


checkIN (4 x 4 : 4 x 4): [
	 1 0 1 0
	 1 1 1 1
	 1 1 1 1
	 0 0 0 0
 ]
------------------------------ Fine aggiungi_riga_indx_i

141: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 4
incr = 1


tmp_i1 (4 : 12): [ 1 2 3 4 ]
------------------------------ Fine seq_i

142: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (4 : 12): [ 1 2 3 4 ]
indok (4 : 4): [ 1 2 3 4 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (4 : 12): [ 1 2 3 4 ]
st = 1
end = 4


indInf (4 : 4): [ 1 2 3 4 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (4 : 4): [ 1 2 3 4 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (4 : 4): [ 1 2 3 4 ]
indx = 1


indInf (3 : 4): [ 2 3 4 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (3 : 4): [ 2 3 4 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 4): [ 2 3 4 ]
indx = 1


indInf (2 : 4): [ 3 4 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (2 : 4): [ 3 4 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 4): [ 3 4 ]
indx = 1


indInf (1 : 4): [ 4 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 4
indInf (1 : 4): [ 4 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 4): [ 4 ]
indx = 1


indInf (0 : 4): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 4): [ ]
------------------------------ Fine setdiff_i

144: copia_v_indx_d	<=>	ris <- v[indx]
ris (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]
indok (4 : 4): [ 1 2 3 4 ]


tmp_d1 (4 : 8): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]
------------------------------ Fine copia_v_indx_d

148: min_v_d	<=>	ris <- min(v)
tmp_d1 (4 : 8): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]


min = 0.1383188476936836
------------------------------ Fine min_v_d

149: assegna1_vs_indx_d	<=>	v[indx] <- val
ris (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]
indInf (0 : 4): [ ]
val = -1


ris (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]
------------------------------ Fine assegna1_vs_indx_d

159: somma_vv_d	<=>	ris <- v1 + v2
S_out (4 : 4): [ 0.3616811523063164 -1.906639593729838 -0.279679550449335 -0.279679550449335 ]
ris (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]


tmp_d1 (4 : 8): [ 0.5850434569189491 -1.768320746036155 -0.05631724583670231 -0.1413607027556514 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (4 x 4 : 4 x 4): [
	 0.5 -1 0.5 -1
	 0.5850434569189491 -1.768320746036155 -0.05631724583670231 -0.1413607027556514
	 0 0 0 0
	 0 0 0 0
 ]
riga = 3
tmp_d1 (4 : 8): [ 0.5850434569189491 -1.768320746036155 -0.05631724583670231 -0.1413607027556514 ]


ris (4 x 4 : 4 x 4): [
	 0.5 -1 0.5 -1
	 0.5850434569189491 -1.768320746036155 -0.05631724583670231 -0.1413607027556514
	 0.5850434569189491 -1.768320746036155 -0.05631724583670231 -0.1413607027556514
	 0 0 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_d

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (4 x 3 : 4 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 0


tmp_i1 (0 : 12): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (4 x 3 : 4 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 2


tmp_i2 (0 : 12): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 12): [ ]
tmp_i2 (0 : 12): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

92: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sout (5 : 5): [ 2 2 0 1 0 ]
h (4 : 5): [ 5 4 1 2 ]


tmp_i1 (4 : 12): [ 0 1 2 2 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (4 : 12): [ 0 1 2 2 ]
s = 2


ind (4 : 4): [ 2 3 4 4 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (4 : 12): [ 0 1 2 2 ]
s = 1


tmp_i1 (4 : 4): [ 1 2 3 3 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (4 : 4): [ 1 2 3 3 ]


T1 (4 : 4): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.7867244574868211 ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (4 : 4): [ 2 3 4 4 ]
s = 1


tmp_i1 (4 : 4): [ 3 4 5 5 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (4 : 4): [ 3 4 5 5 ]


T2 (4 : 4): [ 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1712208549059974 ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (4 : 12): [ 0 1 2 2 ]
s = 1


tmp_i1 (4 : 4): [ 1 2 3 3 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 2 1 2 0 0 0 0 ]
tmp_i1 (4 : 4): [ 1 2 3 3 ]


old1 (4 : 4): [ 2 1 2 2 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (4 : 4): [ 2 3 4 4 ]
s = 1


tmp_i1 (4 : 4): [ 3 4 5 5 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 2 1 2 0 0 0 0 ]
tmp_i1 (4 : 4): [ 3 4 5 5 ]


old2 (4 : 4): [ 2 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (4 : 4): [ 2 1 2 2 ]
s = -1


new1 (4 : 4): [ 1 0 1 1 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (4 : 4): [ 2 0 0 0 ]
s = 1


new2 (4 : 4): [ 3 1 1 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (4 : 12): [ 0 1 2 2 ]
s = 1


tmp_i1 (4 : 4): [ 1 2 3 3 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (4 : 4): [ 1 2 3 3 ]


toll1 (4 : 4): [ 1.#QNAN 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (4 : 4): [ 2 3 4 4 ]
s = 1


tmp_i1 (4 : 4): [ 3 4 5 5 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (4 : 4): [ 3 4 5 5 ]


toll2 (4 : 4): [ 1 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (4 : 4): [ 2 1 2 2 ]
T1 (4 : 4): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.7867244574868211 ]


a (4 : 4): [ 1.#QNAN -2.614836360604185 1.213275542513179 1.213275542513179 ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (4 : 4): [ 1.#QNAN -2.614836360604185 1.213275542513179 1.213275542513179 ]


a (4 : 4): [ 1.#QNAN 2.614836360604185 1.213275542513179 1.213275542513179 ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (4 : 4): [ 1 0 1 1 ]
T1 (4 : 4): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.7867244574868211 ]


b (4 : 4): [ 1.#QNAN -3.614836360604185 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (4 : 4): [ 1.#QNAN -3.614836360604185 0.2132755425131789 0.2132755425131789 ]


b (4 : 4): [ 1.#QNAN 3.614836360604185 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (4 : 4): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.7867244574868211 ]
complemento = 0


ind (1 : 4): [ 1 ]
------------------------------ Fine which_v_indxNA_d

68: assegna1_vs_indx_d	<=>	v[indx] <- val
a (4 : 4): [ 1.#QNAN 2.614836360604185 1.213275542513179 1.213275542513179 ]
ind (1 : 4): [ 1 ]
val = 0


a (4 : 4): [ 0 2.614836360604185 1.213275542513179 1.213275542513179 ]
------------------------------ Fine assegna1_vs_indx_d

70: assegna1_vs_indx_d	<=>	v[indx] <- val
b (4 : 4): [ 1.#QNAN 3.614836360604185 0.2132755425131789 0.2132755425131789 ]
ind (1 : 4): [ 1 ]
val = 0


b (4 : 4): [ 0 3.614836360604185 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine assegna1_vs_indx_d

78: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (4 : 4): [ 0 2.614836360604185 1.213275542513179 1.213275542513179 ]
b (4 : 4): [ 0 3.614836360604185 0.2132755425131789 0.2132755425131789 ]


tmpm_d (4 x 2 : 4 x 2): [
	 0 0
	 2.614836360604185 3.614836360604185
	 1.213275542513179 0.2132755425131789
	 1.213275542513179 0.2132755425131789
 ]
------------------------------ Fine cbind2v_d

79: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (4 x 2 : 4 x 2): [
	 0 0
	 2.614836360604185 3.614836360604185
	 1.213275542513179 0.2132755425131789
	 1.213275542513179 0.2132755425131789
 ]


m (4 : 4): [ 0 3.614836360604185 1.213275542513179 1.213275542513179 ]
------------------------------ Fine max_righe_d

81: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (4 : 4): [ 0 2.614836360604185 1.213275542513179 1.213275542513179 ]
b (4 : 4): [ 0 3.614836360604185 0.2132755425131789 0.2132755425131789 ]
m (4 : 4): [ 0 3.614836360604185 1.213275542513179 1.213275542513179 ]
T1 (4 : 4): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.7867244574868211 ]


S1 (4 : 4): [ 1.#QNAN -1 1.542186124973118 1.542186124973118 ]
------------------------------ Fine f_aux_d

83: diff_vv_d	<=>	ris <- v1 - v2
a (4 : 4): [ 0 2.614836360604185 1.213275542513179 1.213275542513179 ]
toll1 (4 : 4): [ 1.#QNAN 1 1 1 ]


tmp_d1 (4 : 4): [ 1.#QNAN 1.614836360604185 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine diff_vv_d

84: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (4 : 4): [ 1.#QNAN 1.614836360604185 0.2132755425131789 0.2132755425131789 ]
val = 0

ind1 (0 : 4): [ ]
------------------------------ Fine which_v_indxlt_d

86: diff_vv_d	<=>	ris <- v1 - v2
b (4 : 4): [ 0 3.614836360604185 0.2132755425131789 0.2132755425131789 ]
toll1 (4 : 4): [ 1.#QNAN 1 1 1 ]


tmp_d1 (4 : 4): [ 1.#QNAN 2.614836360604185 -0.7867244574868211 -0.7867244574868211 ]
------------------------------ Fine diff_vv_d

87: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (4 : 4): [ 1.#QNAN 2.614836360604185 -0.7867244574868211 -0.7867244574868211 ]
val = 0


ind2 (1 : 4): [ 2 ]
------------------------------ Fine which_v_indxgt_d

89: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (0 : 4): [ ]
ind2 (1 : 4): [ 2 ]


tmp_i1 (0 : 4): [ ]
------------------------------ Fine interseca_i

91: assegna1_vs_indx_d	<=>	v[indx] <- val
S1 (4 : 4): [ 1.#QNAN -1 1.542186124973118 1.542186124973118 ]
tmp_i1 (0 : 4): [ ]
val = -1.#INF


S1 (4 : 4): [ 1.#QNAN -1 1.542186124973118 1.542186124973118 ]
------------------------------ Fine assegna1_vs_indx_d

93: assegna1_vs_indx_d	<=>	v[indx] <- val
S1 (4 : 4): [ 1.#QNAN -1 1.542186124973118 1.542186124973118 ]
ind (1 : 4): [ 1 ]
val = 0


S1 (4 : 4): [ 0 -1 1.542186124973118 1.542186124973118 ]
------------------------------ Fine assegna1_vs_indx_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (4 : 4): [ 2 0 0 0 ]
T2 (4 : 4): [ 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1712208549059974 ]


a (4 : 4): [ 1.213275542513179 -0.3224199317354524 -0.1712208549059974 -0.1712208549059974 ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (4 : 4): [ 1.213275542513179 -0.3224199317354524 -0.1712208549059974 -0.1712208549059974 ]


a (4 : 4): [ 1.213275542513179 0.3224199317354524 0.1712208549059974 0.1712208549059974 ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (4 : 4): [ 3 1 1 1 ]
T2 (4 : 4): [ 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1712208549059974 ]


b (4 : 4): [ 2.213275542513179 0.6775800682645476 0.8287791450940025 0.8287791450940025 ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (4 : 4): [ 2.213275542513179 0.6775800682645476 0.8287791450940025 0.8287791450940025 ]


b (4 : 4): [ 2.213275542513179 0.6775800682645476 0.8287791450940025 0.8287791450940025 ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (4 : 4): [ 1.213275542513179 0.3224199317354524 0.1712208549059974 0.1712208549059974 ]
b (4 : 4): [ 2.213275542513179 0.6775800682645476 0.8287791450940025 0.8287791450940025 ]


tmpm_d (4 x 2 : 4 x 2): [
	 1.213275542513179 2.213275542513179
	 0.3224199317354524 0.6775800682645476
	 0.1712208549059974 0.8287791450940025
	 0.1712208549059974 0.8287791450940025
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (4 x 2 : 4 x 2): [
	 1.213275542513179 2.213275542513179
	 0.3224199317354524 0.6775800682645476
	 0.1712208549059974 0.8287791450940025
	 0.1712208549059974 0.8287791450940025
 ]


m (4 : 4): [ 2.213275542513179 0.6775800682645476 0.8287791450940025 0.8287791450940025 ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (4 : 4): [ 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1712208549059974 ]
complemento = 0


ind (0 : 4): [ ]
------------------------------ Fine which_v_indxNA_d

115: assegna1_vs_indx_d	<=>	v[indx] <- val
a (4 : 4): [ 1.213275542513179 0.3224199317354524 0.1712208549059974 0.1712208549059974 ]
ind (0 : 4): [ ]
val = 0


a (4 : 4): [ 1.213275542513179 0.3224199317354524 0.1712208549059974 0.1712208549059974 ]
------------------------------ Fine assegna1_vs_indx_d

117: assegna1_vs_indx_d	<=>	v[indx] <- val
b (4 : 4): [ 2.213275542513179 0.6775800682645476 0.8287791450940025 0.8287791450940025 ]
ind (0 : 4): [ ]
val = 0


b (4 : 4): [ 2.213275542513179 0.6775800682645476 0.8287791450940025 0.8287791450940025 ]
------------------------------ Fine assegna1_vs_indx_d

119: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (4 : 4): [ 1.213275542513179 0.3224199317354524 0.1712208549059974 0.1712208549059974 ]
b (4 : 4): [ 2.213275542513179 0.6775800682645476 0.8287791450940025 0.8287791450940025 ]


tmpm_d (4 x 2 : 4 x 2): [
	 1.213275542513179 2.213275542513179
	 0.3224199317354524 0.6775800682645476
	 0.1712208549059974 0.8287791450940025
	 0.1712208549059974 0.8287791450940025
 ]
------------------------------ Fine cbind2v_d

120: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (4 x 2 : 4 x 2): [
	 1.213275542513179 2.213275542513179
	 0.3224199317354524 0.6775800682645476
	 0.1712208549059974 0.8287791450940025
	 0.1712208549059974 0.8287791450940025
 ]


m (4 : 4): [ 2.213275542513179 0.6775800682645476 0.8287791450940025 0.8287791450940025 ]
------------------------------ Fine max_righe_d

122: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (4 : 4): [ 1.213275542513179 0.3224199317354524 0.1712208549059974 0.1712208549059974 ]
b (4 : 4): [ 2.213275542513179 0.6775800682645476 0.8287791450940025 0.8287791450940025 ]
m (4 : 4): [ 2.213275542513179 0.6775800682645476 0.8287791450940025 0.8287791450940025 ]
T2 (4 : 4): [ 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1712208549059974 ]


S2 (4 : 4): [ -2.813279187459676 -2.101545225871788 -4.840410039705815 -4.840410039705815 ]
------------------------------ Fine f_aux_d

124: diff_vv_d	<=>	ris <- v1 - v2
a (4 : 4): [ 1.213275542513179 0.3224199317354524 0.1712208549059974 0.1712208549059974 ]
toll2 (4 : 4): [ 1 1 1 1 ]


tmp_d1 (4 : 4): [ 0.2132755425131789 -0.6775800682645476 -0.8287791450940025 -0.8287791450940025 ]
------------------------------ Fine diff_vv_d

125: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (4 : 4): [ 0.2132755425131789 -0.6775800682645476 -0.8287791450940025 -0.8287791450940025 ]
val = 0

ind1 (3 : 4): [ 2 3 4 ]
------------------------------ Fine which_v_indxlt_d

127: diff_vv_d	<=>	ris <- v1 - v2
b (4 : 4): [ 2.213275542513179 0.6775800682645476 0.8287791450940025 0.8287791450940025 ]
toll2 (4 : 4): [ 1 1 1 1 ]


tmp_d1 (4 : 4): [ 1.213275542513179 -0.3224199317354524 -0.1712208549059975 -0.1712208549059975 ]
------------------------------ Fine diff_vv_d

128: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (4 : 4): [ 1.213275542513179 -0.3224199317354524 -0.1712208549059975 -0.1712208549059975 ]
val = 0


ind2 (1 : 4): [ 1 ]
------------------------------ Fine which_v_indxgt_d

130: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (3 : 4): [ 2 3 4 ]
ind2 (1 : 4): [ 1 ]
2459: esiste_v_i	<=>	elem %IN% v
elem = 2
ind2 (1 : 4): [ 1 ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 2
tmp_i1 (0 : 4): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 3
ind2 (1 : 4): [ 1 ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 3
tmp_i1 (0 : 4): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 4
ind2 (1 : 4): [ 1 ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 4
tmp_i1 (0 : 4): [ ]


indx = 0
------------------------------ Fine esiste_v_i



tmp_i1 (0 : 4): [ ]
------------------------------ Fine interseca_i

132: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (4 : 4): [ -2.813279187459676 -2.101545225871788 -4.840410039705815 -4.840410039705815 ]
tmp_i1 (0 : 4): [ ]
val = -1.#INF


S2 (4 : 4): [ -2.813279187459676 -2.101545225871788 -4.840410039705815 -4.840410039705815 ]
------------------------------ Fine assegna1_vs_indx_d

134: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (4 : 4): [ -2.813279187459676 -2.101545225871788 -4.840410039705815 -4.840410039705815 ]
ind (0 : 4): [ ]
val = 0


S2 (4 : 4): [ -2.813279187459676 -2.101545225871788 -4.840410039705815 -4.840410039705815 ]
------------------------------ Fine assegna1_vs_indx_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (4 : 4): [ 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1712208549059974 ]
val = 0


ind (0 : 4): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (4 : 4): [ -2.813279187459676 -2.101545225871788 -4.840410039705815 -4.840410039705815 ]
ind (0 : 4): [ ]
val = -1.#INF


S2 (4 : 4): [ -2.813279187459676 -2.101545225871788 -4.840410039705815 -4.840410039705815 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (4 : 4): [ 0 -1 1.542186124973118 1.542186124973118 ]
S2 (4 : 4): [ -2.813279187459676 -2.101545225871788 -4.840410039705815 -4.840410039705815 ]


S_out (4 : 4): [ -2.813279187459676 -3.101545225871788 -3.298223914732697 -3.298223914732697 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
S_out (4 : 4): [ -2.813279187459676 -3.101545225871788 -3.298223914732697 -3.298223914732697 ]
div = 2.000


S_out (4 : 4): [ -1.406639593729838 -1.550772612935894 -1.649111957366349 -1.649111957366349 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (3015 interne); stringhe deallocate: 0 (2625 interne)

95: which_v_indxne_d	<=>	ris <- which(v != val)
S_out (4 : 4): [ -1.406639593729838 -1.550772612935894 -1.649111957366349 -1.649111957366349 ]
val = -1.#INF


indok (4 : 4): [ 1 2 3 4 ]
------------------------------ Fine which_v_indxne_d

97: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkOUT (4 x 4 : 4 x 4): [
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
	 0 0 0 0
 ]
riga = 4
indok (4 : 4): [ 1 2 3 4 ]
val = 1


checkOUT (4 x 4 : 4 x 4): [
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
 ]
------------------------------ Fine aggiungi_riga_indx_i

104: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 4
incr = 1


tmp_i1 (4 : 12): [ 1 2 3 4 ]
------------------------------ Fine seq_i

105: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (4 : 12): [ 1 2 3 4 ]
indok (4 : 4): [ 1 2 3 4 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (4 : 12): [ 1 2 3 4 ]
st = 1
end = 4


indInf (4 : 4): [ 1 2 3 4 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (4 : 4): [ 1 2 3 4 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (4 : 4): [ 1 2 3 4 ]
indx = 1


indInf (3 : 4): [ 2 3 4 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (3 : 4): [ 2 3 4 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 4): [ 2 3 4 ]
indx = 1


indInf (2 : 4): [ 3 4 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (2 : 4): [ 3 4 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 4): [ 3 4 ]
indx = 1


indInf (1 : 4): [ 4 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 4
indInf (1 : 4): [ 4 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 4): [ 4 ]
indx = 1


indInf (0 : 4): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 4): [ ]
------------------------------ Fine setdiff_i

107: copia_v_indx_d	<=>	ris <- v[indx]
S_out (4 : 4): [ -1.406639593729838 -1.550772612935894 -1.649111957366349 -1.649111957366349 ]
indok (4 : 4): [ 1 2 3 4 ]


tmp_d1 (4 : 8): [ -1.406639593729838 -1.550772612935894 -1.649111957366349 -1.649111957366349 ]
------------------------------ Fine copia_v_indx_d

111: min_v_d	<=>	ris <- min(v)
tmp_d1 (4 : 8): [ -1.406639593729838 -1.550772612935894 -1.649111957366349 -1.649111957366349 ]


min = -1.649111957366349
------------------------------ Fine min_v_d

112: assegna1_vs_indx_d	<=>	v[indx] <- val
S_out (4 : 4): [ -1.406639593729838 -1.550772612935894 -1.649111957366349 -1.649111957366349 ]
indInf (0 : 4): [ ]
val = -2.649111957366348


S_out (4 : 4): [ -1.406639593729838 -1.550772612935894 -1.649111957366349 -1.649111957366349 ]
------------------------------ Fine assegna1_vs_indx_d

155: InitVett_d
ris (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]
val = 0


ris (4 : 4): [ 0 0 0 0 ]
------------------------------ Fine InitVett_d

156: aggiungi_ms_riga_i	<=>	m[riga,] <- val # riga <= dim(m)[0] + 1
checkIN (4 x 4 : 4 x 4): [
	 1 0 1 0
	 1 1 1 1
	 1 1 1 1
	 0 0 0 0
 ]
riga = 4, val = 1


checkIN (4 x 4 : 4 x 4): [
	 1 0 1 0
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
 ]
------------------------------ Fine aggiungi_ms_riga_i

159: somma_vv_d	<=>	ris <- v1 + v2
S_out (4 : 4): [ -1.406639593729838 -1.550772612935894 -1.649111957366349 -1.649111957366349 ]
ris (4 : 4): [ 0 0 0 0 ]


tmp_d1 (4 : 8): [ -1.406639593729838 -1.550772612935894 -1.649111957366349 -1.649111957366349 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (4 x 4 : 4 x 4): [
	 0.5 -1 0.5 -1
	 0.5850434569189491 -1.768320746036155 -0.05631724583670231 -0.1413607027556514
	 0.5850434569189491 -1.768320746036155 -0.05631724583670231 -0.1413607027556514
	 0 0 0 0
 ]
riga = 4
tmp_d1 (4 : 8): [ -1.406639593729838 -1.550772612935894 -1.649111957366349 -1.649111957366349 ]


ris (4 x 4 : 4 x 4): [
	 0.5 -1 0.5 -1
	 0.5850434569189491 -1.768320746036155 -0.05631724583670231 -0.1413607027556514
	 0.5850434569189491 -1.768320746036155 -0.05631724583670231 -0.1413607027556514
	 -1.406639593729838 -1.550772612935894 -1.649111957366349 -1.649111957366349
 ]
------------------------------ Fine aggiungi_mv_riga_d

168: somma_m_d	<=>	ris <- sum(m)
ris (4 x 4 : 4 x 4): [
	 0.5 -1 0.5 -1
	 0.5850434569189491 -1.768320746036155 -0.05631724583670231 -0.1413607027556514
	 0.5850434569189491 -1.768320746036155 -0.05631724583670231 -0.1413607027556514
	 -1.406639593729838 -1.550772612935894 -1.649111957366349 -1.649111957366349
 ]


ris: -10.01754659681755
------------------------------ Fine somma_m_d

173: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
checkIN (4 x 4 : 4 x 4): [
	 1 0 1 0
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
 ]


aus (4 : 4): [ 4 3 4 3 ]
------------------------------ Fine somma_colonne_i

175: which_v_indxne_i	<=>	ris <- which(v != val)
aus (4 : 4): [ 4 3 4 3 ]
val = 0


tmp_i1 (4 : 12): [ 1 2 3 4 ]
------------------------------ Fine which_v_indxne_i

186: somma_righe_i	<=>	ris <- apply(m, 1, sum)
checkIN (4 x 4 : 4 x 4): [
	 1 0 1 0
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
 ]


rs (4 : 4): [ 2 4 4 4 ]
------------------------------ Fine somma_righe_i

188: ordine_i	<=>	ris <- order(v, decreasing=decr)
rs (4 : 4): [ 2 4 4 4 ]
decr = 0


ord_ind (4 : 4): [ 1 2 3 4 ]
------------------------------ Fine ordine_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (4 x 4 : 4 x 4): [
	 1 0 1 0
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
 ]
r = 1
val = 0


I_add (2 : 16): [ 1 3 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
I (0 : 0): [ ]
I_add (2 : 16): [ 1 3 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (2 : 2): [ 1 3 ]


ris (2 : 2): [ 1 3 ]
------------------------------ Fine elimina_doppi_i



ris (2 : 2): [ 1 3 ]
------------------------------ Fine unione1_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (4 x 4 : 4 x 4): [
	 1 0 1 0
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
 ]
r = 2
val = 0


I_add (4 : 16): [ 1 2 3 4 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
ris (2 : 2): [ 1 3 ]
I_add (4 : 16): [ 1 2 3 4 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (6 : 6): [ 1 3 1 2 3 4 ]


ris (4 : 6): [ 1 3 2 4 ]
------------------------------ Fine elimina_doppi_i



ris (4 : 6): [ 1 3 2 4 ]
------------------------------ Fine unione1_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (4 x 4 : 4 x 4): [
	 1 0 1 0
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
 ]
r = 3
val = 0


I_add (4 : 16): [ 1 2 3 4 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
ris (4 : 6): [ 1 3 2 4 ]
I_add (4 : 16): [ 1 2 3 4 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (8 : 8): [ 1 3 2 4 1 2 3 4 ]


ris (4 : 8): [ 1 3 2 4 ]
------------------------------ Fine elimina_doppi_i



ris (4 : 8): [ 1 3 2 4 ]
------------------------------ Fine unione1_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (4 x 4 : 4 x 4): [
	 1 0 1 0
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
 ]
r = 4
val = 0


I_add (4 : 16): [ 1 2 3 4 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
ris (4 : 8): [ 1 3 2 4 ]
I_add (4 : 16): [ 1 2 3 4 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (8 : 8): [ 1 3 2 4 1 2 3 4 ]


ris (4 : 8): [ 1 3 2 4 ]
------------------------------ Fine elimina_doppi_i



ris (4 : 8): [ 1 3 2 4 ]
------------------------------ Fine unione1_i

216: assegna1_mindxlt_i	<=>	m1[which(m2<val1)] <- val2
checkOUT (4 x 4 : 4 x 4): [
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
 ]
checkOUT (4 x 4 : 4 x 4): [
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
 ]
val1 = 0
val2 = 0


checkOUT (4 x 4 : 4 x 4): [
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
 ]
------------------------------ Fine assegna1_mindxlt_i

218: assegna1_m_indxgt_i	<=>	m1[which(m2>val1)] <- val2
checkOUT (4 x 4 : 4 x 4): [
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
 ]
checkOUT (4 x 4 : 4 x 4): [
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
 ]
val1 = 0
val2 = 1


checkOUT (4 x 4 : 4 x 4): [
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
 ]
------------------------------ Fine assegna1_m_indxgt_i

220: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
checkOUT (4 x 4 : 4 x 4): [
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
 ]


aus (4 : 4): [ 4 4 4 4 ]
------------------------------ Fine somma_colonne_i

222: which_v_indxne_i	<=>	ris <- which(v != val)
aus (4 : 4): [ 4 4 4 4 ]
val = 0


tmp_i1 (4 : 12): [ 1 2 3 4 ]
------------------------------ Fine which_v_indxne_i

232: somma_righe_i	<=>	ris <- apply(m, 1, sum)
checkOUT (4 x 4 : 4 x 4): [
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
 ]


rs (4 : 4): [ 4 4 4 4 ]
------------------------------ Fine somma_righe_i

234: ordine_i	<=>	ris <- order(v, decreasing=decr)
rs (4 : 4): [ 4 4 4 4 ]
decr = 0


ord_ind (4 : 4): [ 1 2 3 4 ]
------------------------------ Fine ordine_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (4 x 4 : 4 x 4): [
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
 ]
r = 1
val = 0


I_add (4 : 16): [ 1 2 3 4 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (0 : 8): [ ]
I_add (4 : 16): [ 1 2 3 4 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (4 : 4): [ 1 2 3 4 ]


ris (4 : 4): [ 1 2 3 4 ]
------------------------------ Fine elimina_doppi_i



ris (4 : 4): [ 1 2 3 4 ]
------------------------------ Fine unione1_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (4 x 4 : 4 x 4): [
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
 ]
r = 2
val = 0


I_add (4 : 16): [ 1 2 3 4 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (4 : 4): [ 1 2 3 4 ]
I_add (4 : 16): [ 1 2 3 4 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (8 : 8): [ 1 2 3 4 1 2 3 4 ]


ris (4 : 8): [ 1 2 3 4 ]
------------------------------ Fine elimina_doppi_i



ris (4 : 8): [ 1 2 3 4 ]
------------------------------ Fine unione1_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (4 x 4 : 4 x 4): [
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
 ]
r = 3
val = 0


I_add (4 : 16): [ 1 2 3 4 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (4 : 8): [ 1 2 3 4 ]
I_add (4 : 16): [ 1 2 3 4 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (8 : 8): [ 1 2 3 4 1 2 3 4 ]


ris (4 : 8): [ 1 2 3 4 ]
------------------------------ Fine elimina_doppi_i



ris (4 : 8): [ 1 2 3 4 ]
------------------------------ Fine unione1_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (4 x 4 : 4 x 4): [
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
 ]
r = 4
val = 0


I_add (4 : 16): [ 1 2 3 4 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (4 : 8): [ 1 2 3 4 ]
I_add (4 : 16): [ 1 2 3 4 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (8 : 8): [ 1 2 3 4 1 2 3 4 ]


ris (4 : 8): [ 1 2 3 4 ]
------------------------------ Fine elimina_doppi_i



ris (4 : 8): [ 1 2 3 4 ]
------------------------------ Fine unione1_i


Stringhe allocate: 5 (3120 interne); stringhe deallocate: 0 (2805 interne)


Stringhe allocate: 5 (3125 interne); stringhe deallocate: 0 (2820 interne)


*** module2 ***
44: seq_i	<=>	ris <- seq(da, a, incr)
da = 2
a = 4
incr = 1


tmp1_i (3 : 3): [ 2 3 4 ]
------------------------------ Fine seq_i


*** sampleB ***

***sample***
tmp1_i (3 : 3): [ 2 3 4 ]
k = 1, replace = 0


ris (1 : 1): [ 4 ]
*****************************************


Stringhe allocate: 5 (3135 interne); stringhe deallocate: 0 (2820 interne)


Stringhe allocate: 5 (3135 interne); stringhe deallocate: 0 (2820 interne)


*** mod2 ***
17: InitMatr_i
ris (4 x 4 : 4 x 4): [
	 79851008 0 0 0
	 79857168 285 0 201
	 0 34 0 1
	 201 16 248 0
 ]
val = 0


ris (4 x 4 : 4 x 4): [
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
 ]
------------------------------ Fine InitMatr_i


Stringhe allocate: 5 (3140 interne); stringhe deallocate: 0 (2820 interne)


*** probmod ***
46: InitMatr_i
checkOUT (4 x 4 : 4 x 4): [
	 79863112 0 2 0
	 79846248 282 0 186
	 0 31 0 1
	 186 4 3652 0
 ]
val = 0


checkOUT (4 x 4 : 4 x 4): [
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
 ]
------------------------------ Fine InitMatr_i

48: InitMatr_i
checkIN (4 x 4 : 4 x 4): [
	 79846928 0 1302722800 0
	 79863400 280 0 3663
	 0 32 0 1
	 188 4 244 1070288028
 ]
val = 0


checkIN (4 x 4 : 4 x 4): [
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
 ]
------------------------------ Fine InitMatr_i

50: InitMatr_d
ris (4 x 4 : 4 x 4): [
	 5.842414621812633e-308 0 0 0
	 0 0 0 0
	 0 3.143745558792677e-294 0 0
	 0 5.842414621812633e-308 0 0
 ]
val = 0


ris (4 x 4 : 4 x 4): [
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
 ]
------------------------------ Fine InitMatr_d

52: somma_righe_i	<=>	ris <- apply(m, 1, sum)
ris (4 x 4 : 4 x 4): [
	 0 0 0 0
	 1 0 0 0
	 1 0 0 0
	 1 0 0 0
 ]


M_in (4 : 4): [ 0 1 1 1 ]
------------------------------ Fine somma_righe_i

54: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
ris (4 x 4 : 4 x 4): [
	 0 0 0 0
	 1 0 0 0
	 1 0 0 0
	 1 0 0 0
 ]


M_out (4 : 4): [ 3 0 0 0 ]
------------------------------ Fine somma_colonne_i

57: InitMatr_i
memory (4 x 3 : 4 x 3): [
	 79859544 -2147483648 -2147483648
	 2 -2147483648 -2147483648
	 3 -2147483648 -2147483648
	 4 -2147483648 -2147483648
 ]
val = -2147483648


memory (4 x 3 : 4 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
------------------------------ Fine InitMatr_i

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (4 x 3 : 4 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 0


tmp_i1 (0 : 12): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (4 x 3 : 4 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 3


tmp_i2 (0 : 12): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 12): [ ]
tmp_i2 (0 : 12): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

92: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sout (5 : 5): [ 2 2 0 1 0 ]
h (4 : 5): [ 5 4 1 2 ]


tmp_i1 (4 : 12): [ 0 1 2 2 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (4 : 12): [ 0 1 2 2 ]
s = 3


ind (4 : 4): [ 3 4 5 5 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (4 : 12): [ 0 1 2 2 ]
s = 1


tmp_i1 (4 : 4): [ 1 2 3 3 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (4 : 4): [ 1 2 3 3 ]


T1 (4 : 4): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.7867244574868211 ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (4 : 4): [ 3 4 5 5 ]
s = 1


tmp_i1 (4 : 4): [ 4 5 6 6 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (4 : 4): [ 4 5 6 6 ]


T2 (4 : 4): [ 0.3224199317354524 0.1712208549059974 0.1047983952675442 0.1047983952675442 ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (4 : 12): [ 0 1 2 2 ]
s = 1


tmp_i1 (4 : 4): [ 1 2 3 3 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 2 1 2 0 0 0 0 ]
tmp_i1 (4 : 4): [ 1 2 3 3 ]


old1 (4 : 4): [ 2 1 2 2 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (4 : 4): [ 3 4 5 5 ]
s = 1


tmp_i1 (4 : 4): [ 4 5 6 6 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 2 1 2 0 0 0 0 ]
tmp_i1 (4 : 4): [ 4 5 6 6 ]


old2 (4 : 4): [ 0 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (4 : 4): [ 2 1 2 2 ]
s = -1


new1 (4 : 4): [ 1 0 1 1 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (4 : 4): [ 0 0 0 0 ]
s = 1


new2 (4 : 4): [ 1 1 1 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (4 : 12): [ 0 1 2 2 ]
s = 1


tmp_i1 (4 : 4): [ 1 2 3 3 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (4 : 4): [ 1 2 3 3 ]


toll1 (4 : 4): [ 1.#QNAN 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (4 : 4): [ 3 4 5 5 ]
s = 1


tmp_i1 (4 : 4): [ 4 5 6 6 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (4 : 4): [ 4 5 6 6 ]


toll2 (4 : 4): [ 1 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (4 : 4): [ 2 1 2 2 ]
T1 (4 : 4): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.7867244574868211 ]


a (4 : 4): [ 1.#QNAN -2.614836360604185 1.213275542513179 1.213275542513179 ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (4 : 4): [ 1.#QNAN -2.614836360604185 1.213275542513179 1.213275542513179 ]


a (4 : 4): [ 1.#QNAN 2.614836360604185 1.213275542513179 1.213275542513179 ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (4 : 4): [ 1 0 1 1 ]
T1 (4 : 4): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.7867244574868211 ]


b (4 : 4): [ 1.#QNAN -3.614836360604185 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (4 : 4): [ 1.#QNAN -3.614836360604185 0.2132755425131789 0.2132755425131789 ]


b (4 : 4): [ 1.#QNAN 3.614836360604185 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (4 : 4): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.7867244574868211 ]
complemento = 0


ind (1 : 4): [ 1 ]
------------------------------ Fine which_v_indxNA_d

68: assegna1_vs_indx_d	<=>	v[indx] <- val
a (4 : 4): [ 1.#QNAN 2.614836360604185 1.213275542513179 1.213275542513179 ]
ind (1 : 4): [ 1 ]
val = 0


a (4 : 4): [ 0 2.614836360604185 1.213275542513179 1.213275542513179 ]
------------------------------ Fine assegna1_vs_indx_d

70: assegna1_vs_indx_d	<=>	v[indx] <- val
b (4 : 4): [ 1.#QNAN 3.614836360604185 0.2132755425131789 0.2132755425131789 ]
ind (1 : 4): [ 1 ]
val = 0


b (4 : 4): [ 0 3.614836360604185 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine assegna1_vs_indx_d

78: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (4 : 4): [ 0 2.614836360604185 1.213275542513179 1.213275542513179 ]
b (4 : 4): [ 0 3.614836360604185 0.2132755425131789 0.2132755425131789 ]


tmpm_d (4 x 2 : 4 x 2): [
	 0 0
	 2.614836360604185 3.614836360604185
	 1.213275542513179 0.2132755425131789
	 1.213275542513179 0.2132755425131789
 ]
------------------------------ Fine cbind2v_d

79: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (4 x 2 : 4 x 2): [
	 0 0
	 2.614836360604185 3.614836360604185
	 1.213275542513179 0.2132755425131789
	 1.213275542513179 0.2132755425131789
 ]


m (4 : 4): [ 0 3.614836360604185 1.213275542513179 1.213275542513179 ]
------------------------------ Fine max_righe_d

81: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (4 : 4): [ 0 2.614836360604185 1.213275542513179 1.213275542513179 ]
b (4 : 4): [ 0 3.614836360604185 0.2132755425131789 0.2132755425131789 ]
m (4 : 4): [ 0 3.614836360604185 1.213275542513179 1.213275542513179 ]
T1 (4 : 4): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.7867244574868211 ]


S1 (4 : 4): [ 1.#QNAN -1 1.542186124973118 1.542186124973118 ]
------------------------------ Fine f_aux_d

83: diff_vv_d	<=>	ris <- v1 - v2
a (4 : 4): [ 0 2.614836360604185 1.213275542513179 1.213275542513179 ]
toll1 (4 : 4): [ 1.#QNAN 1 1 1 ]


tmp_d1 (4 : 4): [ 1.#QNAN 1.614836360604185 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine diff_vv_d

84: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (4 : 4): [ 1.#QNAN 1.614836360604185 0.2132755425131789 0.2132755425131789 ]
val = 0

ind1 (0 : 4): [ ]
------------------------------ Fine which_v_indxlt_d

86: diff_vv_d	<=>	ris <- v1 - v2
b (4 : 4): [ 0 3.614836360604185 0.2132755425131789 0.2132755425131789 ]
toll1 (4 : 4): [ 1.#QNAN 1 1 1 ]


tmp_d1 (4 : 4): [ 1.#QNAN 2.614836360604185 -0.7867244574868211 -0.7867244574868211 ]
------------------------------ Fine diff_vv_d

87: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (4 : 4): [ 1.#QNAN 2.614836360604185 -0.7867244574868211 -0.7867244574868211 ]
val = 0


ind2 (1 : 4): [ 2 ]
------------------------------ Fine which_v_indxgt_d

89: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (0 : 4): [ ]
ind2 (1 : 4): [ 2 ]


tmp_i1 (0 : 4): [ ]
------------------------------ Fine interseca_i

91: assegna1_vs_indx_d	<=>	v[indx] <- val
S1 (4 : 4): [ 1.#QNAN -1 1.542186124973118 1.542186124973118 ]
tmp_i1 (0 : 4): [ ]
val = -1.#INF


S1 (4 : 4): [ 1.#QNAN -1 1.542186124973118 1.542186124973118 ]
------------------------------ Fine assegna1_vs_indx_d

93: assegna1_vs_indx_d	<=>	v[indx] <- val
S1 (4 : 4): [ 1.#QNAN -1 1.542186124973118 1.542186124973118 ]
ind (1 : 4): [ 1 ]
val = 0


S1 (4 : 4): [ 0 -1 1.542186124973118 1.542186124973118 ]
------------------------------ Fine assegna1_vs_indx_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (4 : 4): [ 0 0 0 0 ]
T2 (4 : 4): [ 0.3224199317354524 0.1712208549059974 0.1047983952675442 0.1047983952675442 ]


a (4 : 4): [ -0.3224199317354524 -0.1712208549059974 -0.1047983952675442 -0.1047983952675442 ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (4 : 4): [ -0.3224199317354524 -0.1712208549059974 -0.1047983952675442 -0.1047983952675442 ]


a (4 : 4): [ 0.3224199317354524 0.1712208549059974 0.1047983952675442 0.1047983952675442 ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (4 : 4): [ 1 1 1 1 ]
T2 (4 : 4): [ 0.3224199317354524 0.1712208549059974 0.1047983952675442 0.1047983952675442 ]


b (4 : 4): [ 0.6775800682645476 0.8287791450940025 0.8952016047324558 0.8952016047324558 ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (4 : 4): [ 0.6775800682645476 0.8287791450940025 0.8952016047324558 0.8952016047324558 ]


b (4 : 4): [ 0.6775800682645476 0.8287791450940025 0.8952016047324558 0.8952016047324558 ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (4 : 4): [ 0.3224199317354524 0.1712208549059974 0.1047983952675442 0.1047983952675442 ]
b (4 : 4): [ 0.6775800682645476 0.8287791450940025 0.8952016047324558 0.8952016047324558 ]


tmpm_d (4 x 2 : 4 x 2): [
	 0.3224199317354524 0.6775800682645476
	 0.1712208549059974 0.8287791450940025
	 0.1047983952675442 0.8952016047324558
	 0.1047983952675442 0.8952016047324558
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (4 x 2 : 4 x 2): [
	 0.3224199317354524 0.6775800682645476
	 0.1712208549059974 0.8287791450940025
	 0.1047983952675442 0.8952016047324558
	 0.1047983952675442 0.8952016047324558
 ]


m (4 : 4): [ 0.6775800682645476 0.8287791450940025 0.8952016047324558 0.8952016047324558 ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (4 : 4): [ 0.3224199317354524 0.1712208549059974 0.1047983952675442 0.1047983952675442 ]
complemento = 0


ind (0 : 4): [ ]
------------------------------ Fine which_v_indxNA_d

115: assegna1_vs_indx_d	<=>	v[indx] <- val
a (4 : 4): [ 0.3224199317354524 0.1712208549059974 0.1047983952675442 0.1047983952675442 ]
ind (0 : 4): [ ]
val = 0


a (4 : 4): [ 0.3224199317354524 0.1712208549059974 0.1047983952675442 0.1047983952675442 ]
------------------------------ Fine assegna1_vs_indx_d

117: assegna1_vs_indx_d	<=>	v[indx] <- val
b (4 : 4): [ 0.6775800682645476 0.8287791450940025 0.8952016047324558 0.8952016047324558 ]
ind (0 : 4): [ ]
val = 0


b (4 : 4): [ 0.6775800682645476 0.8287791450940025 0.8952016047324558 0.8952016047324558 ]
------------------------------ Fine assegna1_vs_indx_d

119: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (4 : 4): [ 0.3224199317354524 0.1712208549059974 0.1047983952675442 0.1047983952675442 ]
b (4 : 4): [ 0.6775800682645476 0.8287791450940025 0.8952016047324558 0.8952016047324558 ]


tmpm_d (4 x 2 : 4 x 2): [
	 0.3224199317354524 0.6775800682645476
	 0.1712208549059974 0.8287791450940025
	 0.1047983952675442 0.8952016047324558
	 0.1047983952675442 0.8952016047324558
 ]
------------------------------ Fine cbind2v_d

120: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (4 x 2 : 4 x 2): [
	 0.3224199317354524 0.6775800682645476
	 0.1712208549059974 0.8287791450940025
	 0.1047983952675442 0.8952016047324558
	 0.1047983952675442 0.8952016047324558
 ]


m (4 : 4): [ 0.6775800682645476 0.8287791450940025 0.8952016047324558 0.8952016047324558 ]
------------------------------ Fine max_righe_d

122: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (4 : 4): [ 0.3224199317354524 0.1712208549059974 0.1047983952675442 0.1047983952675442 ]
b (4 : 4): [ 0.6775800682645476 0.8287791450940025 0.8952016047324558 0.8952016047324558 ]
m (4 : 4): [ 0.6775800682645476 0.8287791450940025 0.8952016047324558 0.8952016047324558 ]
T2 (4 : 4): [ 0.3224199317354524 0.1712208549059974 0.1047983952675442 0.1047983952675442 ]


S2 (4 : 4): [ -2.101545225871788 -4.840410039705815 -8.542130845105577 -8.542130845105577 ]
------------------------------ Fine f_aux_d

124: diff_vv_d	<=>	ris <- v1 - v2
a (4 : 4): [ 0.3224199317354524 0.1712208549059974 0.1047983952675442 0.1047983952675442 ]
toll2 (4 : 4): [ 1 1 1 1 ]


tmp_d1 (4 : 4): [ -0.6775800682645476 -0.8287791450940025 -0.8952016047324558 -0.8952016047324558 ]
------------------------------ Fine diff_vv_d

125: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (4 : 4): [ -0.6775800682645476 -0.8287791450940025 -0.8952016047324558 -0.8952016047324558 ]
val = 0

ind1 (4 : 4): [ 1 2 3 4 ]
------------------------------ Fine which_v_indxlt_d

127: diff_vv_d	<=>	ris <- v1 - v2
b (4 : 4): [ 0.6775800682645476 0.8287791450940025 0.8952016047324558 0.8952016047324558 ]
toll2 (4 : 4): [ 1 1 1 1 ]


tmp_d1 (4 : 4): [ -0.3224199317354524 -0.1712208549059975 -0.1047983952675442 -0.1047983952675442 ]
------------------------------ Fine diff_vv_d

128: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (4 : 4): [ -0.3224199317354524 -0.1712208549059975 -0.1047983952675442 -0.1047983952675442 ]
val = 0


ind2 (0 : 4): [ ]
------------------------------ Fine which_v_indxgt_d

130: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (4 : 4): [ 1 2 3 4 ]
ind2 (0 : 4): [ ]
2459: esiste_v_i	<=>	elem %IN% v
elem = 1
ind2 (0 : 4): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 1
tmp_i1 (0 : 4): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 2
ind2 (0 : 4): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 2
tmp_i1 (0 : 4): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 3
ind2 (0 : 4): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 3
tmp_i1 (0 : 4): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 4
ind2 (0 : 4): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 4
tmp_i1 (0 : 4): [ ]


indx = 0
------------------------------ Fine esiste_v_i



tmp_i1 (0 : 4): [ ]
------------------------------ Fine interseca_i

132: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (4 : 4): [ -2.101545225871788 -4.840410039705815 -8.542130845105577 -8.542130845105577 ]
tmp_i1 (0 : 4): [ ]
val = -1.#INF


S2 (4 : 4): [ -2.101545225871788 -4.840410039705815 -8.542130845105577 -8.542130845105577 ]
------------------------------ Fine assegna1_vs_indx_d

134: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (4 : 4): [ -2.101545225871788 -4.840410039705815 -8.542130845105577 -8.542130845105577 ]
ind (0 : 4): [ ]
val = 0


S2 (4 : 4): [ -2.101545225871788 -4.840410039705815 -8.542130845105577 -8.542130845105577 ]
------------------------------ Fine assegna1_vs_indx_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (4 : 4): [ 0.3224199317354524 0.1712208549059974 0.1047983952675442 0.1047983952675442 ]
val = 0


ind (0 : 4): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (4 : 4): [ -2.101545225871788 -4.840410039705815 -8.542130845105577 -8.542130845105577 ]
ind (0 : 4): [ ]
val = -1.#INF


S2 (4 : 4): [ -2.101545225871788 -4.840410039705815 -8.542130845105577 -8.542130845105577 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (4 : 4): [ 0 -1 1.542186124973118 1.542186124973118 ]
S2 (4 : 4): [ -2.101545225871788 -4.840410039705815 -8.542130845105577 -8.542130845105577 ]


ris (4 : 4): [ -2.101545225871788 -5.840410039705815 -6.99994472013246 -6.99994472013246 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
ris (4 : 4): [ -2.101545225871788 -5.840410039705815 -6.99994472013246 -6.99994472013246 ]
div = 2.000


ris (4 : 4): [ -1.050772612935894 -2.920205019852908 -3.49997236006623 -3.49997236006623 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (3300 interne); stringhe deallocate: 0 (2920 interne)

95: which_v_indxne_d	<=>	ris <- which(v != val)
ris (4 : 4): [ -1.050772612935894 -2.920205019852908 -3.49997236006623 -3.49997236006623 ]
val = -1.#INF


indok (4 : 4): [ 1 2 3 4 ]
------------------------------ Fine which_v_indxne_d

97: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkOUT (4 x 4 : 4 x 4): [
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
 ]
riga = 1
indok (4 : 4): [ 1 2 3 4 ]
val = 1


checkOUT (4 x 4 : 4 x 4): [
	 1 1 1 1
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
 ]
------------------------------ Fine aggiungi_riga_indx_i

104: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 4
incr = 1


tmp_i1 (4 : 12): [ 1 2 3 4 ]
------------------------------ Fine seq_i

105: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (4 : 12): [ 1 2 3 4 ]
indok (4 : 4): [ 1 2 3 4 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (4 : 12): [ 1 2 3 4 ]
st = 1
end = 4


indInf (4 : 4): [ 1 2 3 4 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (4 : 4): [ 1 2 3 4 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (4 : 4): [ 1 2 3 4 ]
indx = 1


indInf (3 : 4): [ 2 3 4 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (3 : 4): [ 2 3 4 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 4): [ 2 3 4 ]
indx = 1


indInf (2 : 4): [ 3 4 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (2 : 4): [ 3 4 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 4): [ 3 4 ]
indx = 1


indInf (1 : 4): [ 4 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 4
indInf (1 : 4): [ 4 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 4): [ 4 ]
indx = 1


indInf (0 : 4): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 4): [ ]
------------------------------ Fine setdiff_i

107: copia_v_indx_d	<=>	ris <- v[indx]
ris (4 : 4): [ -1.050772612935894 -2.920205019852908 -3.49997236006623 -3.49997236006623 ]
indok (4 : 4): [ 1 2 3 4 ]


tmp_d1 (4 : 4): [ -1.050772612935894 -2.920205019852908 -3.49997236006623 -3.49997236006623 ]
------------------------------ Fine copia_v_indx_d

111: min_v_d	<=>	ris <- min(v)
tmp_d1 (4 : 4): [ -1.050772612935894 -2.920205019852908 -3.49997236006623 -3.49997236006623 ]


min = -3.49997236006623
------------------------------ Fine min_v_d

112: assegna1_vs_indx_d	<=>	v[indx] <- val
ris (4 : 4): [ -1.050772612935894 -2.920205019852908 -3.49997236006623 -3.49997236006623 ]
indInf (0 : 4): [ ]
val = -4.49997236006623


ris (4 : 4): [ -1.050772612935894 -2.920205019852908 -3.49997236006623 -3.49997236006623 ]
------------------------------ Fine assegna1_vs_indx_d

155: InitVett_d
S_in (4 : 4): [ 6.218345866837344e+175 5.387842123834802e-310 0 0.6775798885352984 ]
val = 0


S_in (4 : 4): [ 0 0 0 0 ]
------------------------------ Fine InitVett_d

156: aggiungi_ms_riga_i	<=>	m[riga,] <- val # riga <= dim(m)[0] + 1
checkIN (4 x 4 : 4 x 4): [
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
 ]
riga = 1, val = 1


checkIN (4 x 4 : 4 x 4): [
	 1 1 1 1
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
 ]
------------------------------ Fine aggiungi_ms_riga_i

159: somma_vv_d	<=>	ris <- v1 + v2
ris (4 : 4): [ -1.050772612935894 -2.920205019852908 -3.49997236006623 -3.49997236006623 ]
S_in (4 : 4): [ 0 0 0 0 ]


tmp_d1 (4 : 4): [ -1.050772612935894 -2.920205019852908 -3.49997236006623 -3.49997236006623 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (4 x 4 : 4 x 4): [
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
 ]
riga = 1
tmp_d1 (4 : 4): [ -1.050772612935894 -2.920205019852908 -3.49997236006623 -3.49997236006623 ]


ris (4 x 4 : 4 x 4): [
	 -1.050772612935894 -2.920205019852908 -3.49997236006623 -3.49997236006623
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_d

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (4 x 3 : 4 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 1


tmp_i1 (0 : 12): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (4 x 3 : 4 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 0


tmp_i2 (0 : 12): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 12): [ ]
tmp_i2 (0 : 12): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

119: InitVett_d
ris (4 : 4): [ -1.050772612935894 -2.920205019852908 -3.49997236006623 -3.49997236006623 ]
val = 0


ris (4 : 4): [ 0 0 0 0 ]
------------------------------ Fine InitVett_d

122: InitVett_i
tmp_i1 (4 : 12): [ 1 2 3 4 ]
val = 1


tmp_i1 (4 : 12): [ 1 1 1 1 ]
------------------------------ Fine InitVett_i

123: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
checkOUT (4 x 4 : 4 x 4): [
	 1 1 1 1
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
 ]
riga = 2
tmp_i1 (4 : 12): [ 1 1 1 1 ]


checkOUT (4 x 4 : 4 x 4): [
	 1 1 1 1
	 1 1 1 1
	 0 0 0 0
	 0 0 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_i

128: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 1 3 1 0 ]
h (4 : 5): [ 5 4 1 2 ]


tmp_i1 (4 : 12): [ 0 1 0 1 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (4 : 12): [ 0 1 0 1 ]
s = 1


ind (4 : 4): [ 1 2 1 2 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (4 : 12): [ 0 1 0 1 ]
s = 1


tmp_i1 (4 : 4): [ 1 2 1 2 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (4 : 4): [ 1 2 1 2 ]


T1 (4 : 4): [ 1.#QNAN 3.614836360604185 1.#QNAN 3.614836360604185 ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (4 : 4): [ 1 2 1 2 ]
s = 1


tmp_i1 (4 : 4): [ 2 3 2 3 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (4 : 4): [ 2 3 2 3 ]


T2 (4 : 4): [ 3.614836360604185 0.7867244574868211 3.614836360604185 0.7867244574868211 ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (4 : 12): [ 0 1 0 1 ]
s = 1


tmp_i1 (4 : 4): [ 1 2 1 2 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 2 2 0 1 0 0 0 ]
tmp_i1 (4 : 4): [ 1 2 1 2 ]


old1 (4 : 4): [ 2 2 2 2 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (4 : 4): [ 1 2 1 2 ]
s = 1


tmp_i1 (4 : 4): [ 2 3 2 3 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 2 2 0 1 0 0 0 ]
tmp_i1 (4 : 4): [ 2 3 2 3 ]


old2 (4 : 4): [ 2 0 2 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (4 : 4): [ 2 2 2 2 ]
s = -1


new1 (4 : 4): [ 1 1 1 1 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (4 : 4): [ 2 0 2 0 ]
s = 1


new2 (4 : 4): [ 3 1 3 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (4 : 12): [ 0 1 0 1 ]
s = 1


tmp_i1 (4 : 4): [ 1 2 1 2 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (4 : 4): [ 1 2 1 2 ]


toll1 (4 : 4): [ 1.#QNAN 1 1.#QNAN 1 ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (4 : 4): [ 1 2 1 2 ]
s = 1


tmp_i1 (4 : 4): [ 2 3 2 3 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (4 : 4): [ 2 3 2 3 ]


toll2 (4 : 4): [ 1 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (4 : 4): [ 2 2 2 2 ]
T1 (4 : 4): [ 1.#QNAN 3.614836360604185 1.#QNAN 3.614836360604185 ]


a (4 : 4): [ 1.#QNAN -1.614836360604185 1.#QNAN -1.614836360604185 ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (4 : 4): [ 1.#QNAN -1.614836360604185 1.#QNAN -1.614836360604185 ]


a (4 : 4): [ 1.#QNAN 1.614836360604185 1.#QNAN 1.614836360604185 ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (4 : 4): [ 1 1 1 1 ]
T1 (4 : 4): [ 1.#QNAN 3.614836360604185 1.#QNAN 3.614836360604185 ]


b (4 : 4): [ 1.#QNAN -2.614836360604185 1.#QNAN -2.614836360604185 ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (4 : 4): [ 1.#QNAN -2.614836360604185 1.#QNAN -2.614836360604185 ]


b (4 : 4): [ 1.#QNAN 2.614836360604185 1.#QNAN 2.614836360604185 ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (4 : 4): [ 1.#QNAN 3.614836360604185 1.#QNAN 3.614836360604185 ]
complemento = 0


ind (2 : 4): [ 1 3 ]
------------------------------ Fine which_v_indxNA_d

68: assegna1_vs_indx_d	<=>	v[indx] <- val
a (4 : 4): [ 1.#QNAN 1.614836360604185 1.#QNAN 1.614836360604185 ]
ind (2 : 4): [ 1 3 ]
val = 0


a (4 : 4): [ 0 1.614836360604185 0 1.614836360604185 ]
------------------------------ Fine assegna1_vs_indx_d

70: assegna1_vs_indx_d	<=>	v[indx] <- val
b (4 : 4): [ 1.#QNAN 2.614836360604185 1.#QNAN 2.614836360604185 ]
ind (2 : 4): [ 1 3 ]
val = 0


b (4 : 4): [ 0 2.614836360604185 0 2.614836360604185 ]
------------------------------ Fine assegna1_vs_indx_d

78: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (4 : 4): [ 0 1.614836360604185 0 1.614836360604185 ]
b (4 : 4): [ 0 2.614836360604185 0 2.614836360604185 ]


tmpm_d (4 x 2 : 4 x 2): [
	 0 0
	 1.614836360604185 2.614836360604185
	 0 0
	 1.614836360604185 2.614836360604185
 ]
------------------------------ Fine cbind2v_d

79: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (4 x 2 : 4 x 2): [
	 0 0
	 1.614836360604185 2.614836360604185
	 0 0
	 1.614836360604185 2.614836360604185
 ]


m (4 : 4): [ 0 2.614836360604185 0 2.614836360604185 ]
------------------------------ Fine max_righe_d

81: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (4 : 4): [ 0 1.614836360604185 0 1.614836360604185 ]
b (4 : 4): [ 0 2.614836360604185 0 2.614836360604185 ]
m (4 : 4): [ 0 2.614836360604185 0 2.614836360604185 ]
T1 (4 : 4): [ 1.#QNAN 3.614836360604185 1.#QNAN 3.614836360604185 ]


S1 (4 : 4): [ 1.#QNAN -0.7233623046126327 1.#QNAN -0.7233623046126327 ]
------------------------------ Fine f_aux_d

83: diff_vv_d	<=>	ris <- v1 - v2
a (4 : 4): [ 0 1.614836360604185 0 1.614836360604185 ]
toll1 (4 : 4): [ 1.#QNAN 1 1.#QNAN 1 ]


tmp_d1 (4 : 4): [ 1.#QNAN 0.6148363606041851 1.#QNAN 0.6148363606041851 ]
------------------------------ Fine diff_vv_d

84: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (4 : 4): [ 1.#QNAN 0.6148363606041851 1.#QNAN 0.6148363606041851 ]
val = 0

ind1 (0 : 4): [ ]
------------------------------ Fine which_v_indxlt_d

86: diff_vv_d	<=>	ris <- v1 - v2
b (4 : 4): [ 0 2.614836360604185 0 2.614836360604185 ]
toll1 (4 : 4): [ 1.#QNAN 1 1.#QNAN 1 ]


tmp_d1 (4 : 4): [ 1.#QNAN 1.614836360604185 1.#QNAN 1.614836360604185 ]
------------------------------ Fine diff_vv_d

87: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (4 : 4): [ 1.#QNAN 1.614836360604185 1.#QNAN 1.614836360604185 ]
val = 0


ind2 (2 : 4): [ 2 4 ]
------------------------------ Fine which_v_indxgt_d

89: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (0 : 4): [ ]
ind2 (2 : 4): [ 2 4 ]


tmp_i1 (0 : 4): [ ]
------------------------------ Fine interseca_i

91: assegna1_vs_indx_d	<=>	v[indx] <- val
S1 (4 : 4): [ 1.#QNAN -0.7233623046126327 1.#QNAN -0.7233623046126327 ]
tmp_i1 (0 : 4): [ ]
val = -1.#INF


S1 (4 : 4): [ 1.#QNAN -0.7233623046126327 1.#QNAN -0.7233623046126327 ]
------------------------------ Fine assegna1_vs_indx_d

93: assegna1_vs_indx_d	<=>	v[indx] <- val
S1 (4 : 4): [ 1.#QNAN -0.7233623046126327 1.#QNAN -0.7233623046126327 ]
ind (2 : 4): [ 1 3 ]
val = 0


S1 (4 : 4): [ 0 -0.7233623046126327 0 -0.7233623046126327 ]
------------------------------ Fine assegna1_vs_indx_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (4 : 4): [ 2 0 2 0 ]
T2 (4 : 4): [ 3.614836360604185 0.7867244574868211 3.614836360604185 0.7867244574868211 ]


a (4 : 4): [ -1.614836360604185 -0.7867244574868211 -1.614836360604185 -0.7867244574868211 ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (4 : 4): [ -1.614836360604185 -0.7867244574868211 -1.614836360604185 -0.7867244574868211 ]


a (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (4 : 4): [ 3 1 3 1 ]
T2 (4 : 4): [ 3.614836360604185 0.7867244574868211 3.614836360604185 0.7867244574868211 ]


b (4 : 4): [ -0.6148363606041851 0.2132755425131789 -0.6148363606041851 0.2132755425131789 ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (4 : 4): [ -0.6148363606041851 0.2132755425131789 -0.6148363606041851 0.2132755425131789 ]


b (4 : 4): [ 0.6148363606041851 0.2132755425131789 0.6148363606041851 0.2132755425131789 ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
b (4 : 4): [ 0.6148363606041851 0.2132755425131789 0.6148363606041851 0.2132755425131789 ]


tmpm_d (4 x 2 : 4 x 2): [
	 1.614836360604185 0.6148363606041851
	 0.7867244574868211 0.2132755425131789
	 1.614836360604185 0.6148363606041851
	 0.7867244574868211 0.2132755425131789
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (4 x 2 : 4 x 2): [
	 1.614836360604185 0.6148363606041851
	 0.7867244574868211 0.2132755425131789
	 1.614836360604185 0.6148363606041851
	 0.7867244574868211 0.2132755425131789
 ]


m (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (4 : 4): [ 3.614836360604185 0.7867244574868211 3.614836360604185 0.7867244574868211 ]
complemento = 0


ind (0 : 4): [ ]
------------------------------ Fine which_v_indxNA_d

115: assegna1_vs_indx_d	<=>	v[indx] <- val
a (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
ind (0 : 4): [ ]
val = 0


a (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
------------------------------ Fine assegna1_vs_indx_d

117: assegna1_vs_indx_d	<=>	v[indx] <- val
b (4 : 4): [ 0.6148363606041851 0.2132755425131789 0.6148363606041851 0.2132755425131789 ]
ind (0 : 4): [ ]
val = 0


b (4 : 4): [ 0.6148363606041851 0.2132755425131789 0.6148363606041851 0.2132755425131789 ]
------------------------------ Fine assegna1_vs_indx_d

119: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
b (4 : 4): [ 0.6148363606041851 0.2132755425131789 0.6148363606041851 0.2132755425131789 ]


tmpm_d (4 x 2 : 4 x 2): [
	 1.614836360604185 0.6148363606041851
	 0.7867244574868211 0.2132755425131789
	 1.614836360604185 0.6148363606041851
	 0.7867244574868211 0.2132755425131789
 ]
------------------------------ Fine cbind2v_d

120: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (4 x 2 : 4 x 2): [
	 1.614836360604185 0.6148363606041851
	 0.7867244574868211 0.2132755425131789
	 1.614836360604185 0.6148363606041851
	 0.7867244574868211 0.2132755425131789
 ]


m (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
------------------------------ Fine max_righe_d

122: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
b (4 : 4): [ 0.6148363606041851 0.2132755425131789 0.6148363606041851 0.2132755425131789 ]
m (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
T2 (4 : 4): [ 3.614836360604185 0.7867244574868211 3.614836360604185 0.7867244574868211 ]


S2 (4 : 4): [ 0.4467246092252654 1 0.4467246092252654 1 ]
------------------------------ Fine f_aux_d

124: diff_vv_d	<=>	ris <- v1 - v2
a (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
toll2 (4 : 4): [ 1 1 1 1 ]


tmp_d1 (4 : 4): [ 0.6148363606041851 -0.2132755425131789 0.6148363606041851 -0.2132755425131789 ]
------------------------------ Fine diff_vv_d

125: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (4 : 4): [ 0.6148363606041851 -0.2132755425131789 0.6148363606041851 -0.2132755425131789 ]
val = 0

ind1 (2 : 4): [ 2 4 ]
------------------------------ Fine which_v_indxlt_d

127: diff_vv_d	<=>	ris <- v1 - v2
b (4 : 4): [ 0.6148363606041851 0.2132755425131789 0.6148363606041851 0.2132755425131789 ]
toll2 (4 : 4): [ 1 1 1 1 ]


tmp_d1 (4 : 4): [ -0.3851636393958149 -0.7867244574868211 -0.3851636393958149 -0.7867244574868211 ]
------------------------------ Fine diff_vv_d

128: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (4 : 4): [ -0.3851636393958149 -0.7867244574868211 -0.3851636393958149 -0.7867244574868211 ]
val = 0


ind2 (0 : 4): [ ]
------------------------------ Fine which_v_indxgt_d

130: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (2 : 4): [ 2 4 ]
ind2 (0 : 4): [ ]
2459: esiste_v_i	<=>	elem %IN% v
elem = 2
ind2 (0 : 4): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 2
tmp_i1 (0 : 4): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 4
ind2 (0 : 4): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 4
tmp_i1 (0 : 4): [ ]


indx = 0
------------------------------ Fine esiste_v_i



tmp_i1 (0 : 4): [ ]
------------------------------ Fine interseca_i

132: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (4 : 4): [ 0.4467246092252654 1 0.4467246092252654 1 ]
tmp_i1 (0 : 4): [ ]
val = -1.#INF


S2 (4 : 4): [ 0.4467246092252654 1 0.4467246092252654 1 ]
------------------------------ Fine assegna1_vs_indx_d

134: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (4 : 4): [ 0.4467246092252654 1 0.4467246092252654 1 ]
ind (0 : 4): [ ]
val = 0


S2 (4 : 4): [ 0.4467246092252654 1 0.4467246092252654 1 ]
------------------------------ Fine assegna1_vs_indx_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (4 : 4): [ 3.614836360604185 0.7867244574868211 3.614836360604185 0.7867244574868211 ]
val = 0


ind (0 : 4): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (4 : 4): [ 0.4467246092252654 1 0.4467246092252654 1 ]
ind (0 : 4): [ ]
val = -1.#INF


S2 (4 : 4): [ 0.4467246092252654 1 0.4467246092252654 1 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (4 : 4): [ 0 -0.7233623046126327 0 -0.7233623046126327 ]
S2 (4 : 4): [ 0.4467246092252654 1 0.4467246092252654 1 ]


S_in (4 : 4): [ 0.4467246092252654 0.2766376953873673 0.4467246092252654 0.2766376953873673 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
S_in (4 : 4): [ 0.4467246092252654 0.2766376953873673 0.4467246092252654 0.2766376953873673 ]
div = 2.000


S_in (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (3420 interne); stringhe deallocate: 0 (3020 interne)

131: which_v_indxne_d	<=>	ris <- which(v != val)
S_in (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]
val = -1.#INF


indok (4 : 4): [ 1 2 3 4 ]
------------------------------ Fine which_v_indxne_d

133: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkIN (4 x 4 : 4 x 4): [
	 1 1 1 1
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
 ]
riga = 2
indok (4 : 4): [ 1 2 3 4 ]
val = 1


checkIN (4 x 4 : 4 x 4): [
	 1 1 1 1
	 1 1 1 1
	 0 0 0 0
	 0 0 0 0
 ]
------------------------------ Fine aggiungi_riga_indx_i

141: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 4
incr = 1


tmp_i1 (4 : 12): [ 1 2 3 4 ]
------------------------------ Fine seq_i

142: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (4 : 12): [ 1 2 3 4 ]
indok (4 : 4): [ 1 2 3 4 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (4 : 12): [ 1 2 3 4 ]
st = 1
end = 4


indInf (4 : 4): [ 1 2 3 4 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (4 : 4): [ 1 2 3 4 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (4 : 4): [ 1 2 3 4 ]
indx = 1


indInf (3 : 4): [ 2 3 4 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (3 : 4): [ 2 3 4 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 4): [ 2 3 4 ]
indx = 1


indInf (2 : 4): [ 3 4 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (2 : 4): [ 3 4 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 4): [ 3 4 ]
indx = 1


indInf (1 : 4): [ 4 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 4
indInf (1 : 4): [ 4 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 4): [ 4 ]
indx = 1


indInf (0 : 4): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 4): [ ]
------------------------------ Fine setdiff_i

144: copia_v_indx_d	<=>	ris <- v[indx]
S_in (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]
indok (4 : 4): [ 1 2 3 4 ]


tmp_d1 (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]
------------------------------ Fine copia_v_indx_d

148: min_v_d	<=>	ris <- min(v)
tmp_d1 (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]


min = 0.1383188476936836
------------------------------ Fine min_v_d

149: assegna1_vs_indx_d	<=>	v[indx] <- val
S_in (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]
indInf (0 : 4): [ ]
val = -1


S_in (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]
------------------------------ Fine assegna1_vs_indx_d

159: somma_vv_d	<=>	ris <- v1 + v2
ris (4 : 4): [ 0 0 0 0 ]
S_in (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]


tmp_d1 (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (4 x 4 : 4 x 4): [
	 -1.050772612935894 -2.920205019852908 -3.49997236006623 -3.49997236006623
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
 ]
riga = 2
tmp_d1 (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]


ris (4 x 4 : 4 x 4): [
	 -1.050772612935894 -2.920205019852908 -3.49997236006623 -3.49997236006623
	 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836
	 0 0 0 0
	 0 0 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_d

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (4 x 3 : 4 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 1


tmp_i1 (0 : 12): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (4 x 3 : 4 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 0


tmp_i2 (0 : 12): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 12): [ ]
tmp_i2 (0 : 12): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

119: InitVett_d
ris (4 : 4): [ 0 0 0 0 ]
val = 0


ris (4 : 4): [ 0 0 0 0 ]
------------------------------ Fine InitVett_d

122: InitVett_i
tmp_i1 (4 : 12): [ 1 2 3 4 ]
val = 1


tmp_i1 (4 : 12): [ 1 1 1 1 ]
------------------------------ Fine InitVett_i

123: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
checkOUT (4 x 4 : 4 x 4): [
	 1 1 1 1
	 1 1 1 1
	 0 0 0 0
	 0 0 0 0
 ]
riga = 3
tmp_i1 (4 : 12): [ 1 1 1 1 ]


checkOUT (4 x 4 : 4 x 4): [
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
	 0 0 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_i

128: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 1 3 1 0 ]
h (4 : 5): [ 5 4 1 2 ]


tmp_i1 (4 : 12): [ 0 1 0 1 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (4 : 12): [ 0 1 0 1 ]
s = 1


ind (4 : 4): [ 1 2 1 2 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (4 : 12): [ 0 1 0 1 ]
s = 1


tmp_i1 (4 : 4): [ 1 2 1 2 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (4 : 4): [ 1 2 1 2 ]


T1 (4 : 4): [ 1.#QNAN 3.614836360604185 1.#QNAN 3.614836360604185 ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (4 : 4): [ 1 2 1 2 ]
s = 1


tmp_i1 (4 : 4): [ 2 3 2 3 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (4 : 4): [ 2 3 2 3 ]


T2 (4 : 4): [ 3.614836360604185 0.7867244574868211 3.614836360604185 0.7867244574868211 ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (4 : 12): [ 0 1 0 1 ]
s = 1


tmp_i1 (4 : 4): [ 1 2 1 2 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 2 2 0 1 0 0 0 ]
tmp_i1 (4 : 4): [ 1 2 1 2 ]


old1 (4 : 4): [ 2 2 2 2 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (4 : 4): [ 1 2 1 2 ]
s = 1


tmp_i1 (4 : 4): [ 2 3 2 3 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 2 2 0 1 0 0 0 ]
tmp_i1 (4 : 4): [ 2 3 2 3 ]


old2 (4 : 4): [ 2 0 2 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (4 : 4): [ 2 2 2 2 ]
s = -1


new1 (4 : 4): [ 1 1 1 1 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (4 : 4): [ 2 0 2 0 ]
s = 1


new2 (4 : 4): [ 3 1 3 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (4 : 12): [ 0 1 0 1 ]
s = 1


tmp_i1 (4 : 4): [ 1 2 1 2 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (4 : 4): [ 1 2 1 2 ]


toll1 (4 : 4): [ 1.#QNAN 1 1.#QNAN 1 ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (4 : 4): [ 1 2 1 2 ]
s = 1


tmp_i1 (4 : 4): [ 2 3 2 3 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (4 : 4): [ 2 3 2 3 ]


toll2 (4 : 4): [ 1 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (4 : 4): [ 2 2 2 2 ]
T1 (4 : 4): [ 1.#QNAN 3.614836360604185 1.#QNAN 3.614836360604185 ]


a (4 : 4): [ 1.#QNAN -1.614836360604185 1.#QNAN -1.614836360604185 ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (4 : 4): [ 1.#QNAN -1.614836360604185 1.#QNAN -1.614836360604185 ]


a (4 : 4): [ 1.#QNAN 1.614836360604185 1.#QNAN 1.614836360604185 ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (4 : 4): [ 1 1 1 1 ]
T1 (4 : 4): [ 1.#QNAN 3.614836360604185 1.#QNAN 3.614836360604185 ]


b (4 : 4): [ 1.#QNAN -2.614836360604185 1.#QNAN -2.614836360604185 ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (4 : 4): [ 1.#QNAN -2.614836360604185 1.#QNAN -2.614836360604185 ]


b (4 : 4): [ 1.#QNAN 2.614836360604185 1.#QNAN 2.614836360604185 ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (4 : 4): [ 1.#QNAN 3.614836360604185 1.#QNAN 3.614836360604185 ]
complemento = 0


ind (2 : 4): [ 1 3 ]
------------------------------ Fine which_v_indxNA_d

68: assegna1_vs_indx_d	<=>	v[indx] <- val
a (4 : 4): [ 1.#QNAN 1.614836360604185 1.#QNAN 1.614836360604185 ]
ind (2 : 4): [ 1 3 ]
val = 0


a (4 : 4): [ 0 1.614836360604185 0 1.614836360604185 ]
------------------------------ Fine assegna1_vs_indx_d

70: assegna1_vs_indx_d	<=>	v[indx] <- val
b (4 : 4): [ 1.#QNAN 2.614836360604185 1.#QNAN 2.614836360604185 ]
ind (2 : 4): [ 1 3 ]
val = 0


b (4 : 4): [ 0 2.614836360604185 0 2.614836360604185 ]
------------------------------ Fine assegna1_vs_indx_d

78: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (4 : 4): [ 0 1.614836360604185 0 1.614836360604185 ]
b (4 : 4): [ 0 2.614836360604185 0 2.614836360604185 ]


tmpm_d (4 x 2 : 4 x 2): [
	 0 0
	 1.614836360604185 2.614836360604185
	 0 0
	 1.614836360604185 2.614836360604185
 ]
------------------------------ Fine cbind2v_d

79: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (4 x 2 : 4 x 2): [
	 0 0
	 1.614836360604185 2.614836360604185
	 0 0
	 1.614836360604185 2.614836360604185
 ]


m (4 : 4): [ 0 2.614836360604185 0 2.614836360604185 ]
------------------------------ Fine max_righe_d

81: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (4 : 4): [ 0 1.614836360604185 0 1.614836360604185 ]
b (4 : 4): [ 0 2.614836360604185 0 2.614836360604185 ]
m (4 : 4): [ 0 2.614836360604185 0 2.614836360604185 ]
T1 (4 : 4): [ 1.#QNAN 3.614836360604185 1.#QNAN 3.614836360604185 ]


S1 (4 : 4): [ 1.#QNAN -0.7233623046126327 1.#QNAN -0.7233623046126327 ]
------------------------------ Fine f_aux_d

83: diff_vv_d	<=>	ris <- v1 - v2
a (4 : 4): [ 0 1.614836360604185 0 1.614836360604185 ]
toll1 (4 : 4): [ 1.#QNAN 1 1.#QNAN 1 ]


tmp_d1 (4 : 4): [ 1.#QNAN 0.6148363606041851 1.#QNAN 0.6148363606041851 ]
------------------------------ Fine diff_vv_d

84: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (4 : 4): [ 1.#QNAN 0.6148363606041851 1.#QNAN 0.6148363606041851 ]
val = 0

ind1 (0 : 4): [ ]
------------------------------ Fine which_v_indxlt_d

86: diff_vv_d	<=>	ris <- v1 - v2
b (4 : 4): [ 0 2.614836360604185 0 2.614836360604185 ]
toll1 (4 : 4): [ 1.#QNAN 1 1.#QNAN 1 ]


tmp_d1 (4 : 4): [ 1.#QNAN 1.614836360604185 1.#QNAN 1.614836360604185 ]
------------------------------ Fine diff_vv_d

87: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (4 : 4): [ 1.#QNAN 1.614836360604185 1.#QNAN 1.614836360604185 ]
val = 0


ind2 (2 : 4): [ 2 4 ]
------------------------------ Fine which_v_indxgt_d

89: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (0 : 4): [ ]
ind2 (2 : 4): [ 2 4 ]


tmp_i1 (0 : 4): [ ]
------------------------------ Fine interseca_i

91: assegna1_vs_indx_d	<=>	v[indx] <- val
S1 (4 : 4): [ 1.#QNAN -0.7233623046126327 1.#QNAN -0.7233623046126327 ]
tmp_i1 (0 : 4): [ ]
val = -1.#INF


S1 (4 : 4): [ 1.#QNAN -0.7233623046126327 1.#QNAN -0.7233623046126327 ]
------------------------------ Fine assegna1_vs_indx_d

93: assegna1_vs_indx_d	<=>	v[indx] <- val
S1 (4 : 4): [ 1.#QNAN -0.7233623046126327 1.#QNAN -0.7233623046126327 ]
ind (2 : 4): [ 1 3 ]
val = 0


S1 (4 : 4): [ 0 -0.7233623046126327 0 -0.7233623046126327 ]
------------------------------ Fine assegna1_vs_indx_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (4 : 4): [ 2 0 2 0 ]
T2 (4 : 4): [ 3.614836360604185 0.7867244574868211 3.614836360604185 0.7867244574868211 ]


a (4 : 4): [ -1.614836360604185 -0.7867244574868211 -1.614836360604185 -0.7867244574868211 ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (4 : 4): [ -1.614836360604185 -0.7867244574868211 -1.614836360604185 -0.7867244574868211 ]


a (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (4 : 4): [ 3 1 3 1 ]
T2 (4 : 4): [ 3.614836360604185 0.7867244574868211 3.614836360604185 0.7867244574868211 ]


b (4 : 4): [ -0.6148363606041851 0.2132755425131789 -0.6148363606041851 0.2132755425131789 ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (4 : 4): [ -0.6148363606041851 0.2132755425131789 -0.6148363606041851 0.2132755425131789 ]


b (4 : 4): [ 0.6148363606041851 0.2132755425131789 0.6148363606041851 0.2132755425131789 ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
b (4 : 4): [ 0.6148363606041851 0.2132755425131789 0.6148363606041851 0.2132755425131789 ]


tmpm_d (4 x 2 : 4 x 2): [
	 1.614836360604185 0.6148363606041851
	 0.7867244574868211 0.2132755425131789
	 1.614836360604185 0.6148363606041851
	 0.7867244574868211 0.2132755425131789
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (4 x 2 : 4 x 2): [
	 1.614836360604185 0.6148363606041851
	 0.7867244574868211 0.2132755425131789
	 1.614836360604185 0.6148363606041851
	 0.7867244574868211 0.2132755425131789
 ]


m (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (4 : 4): [ 3.614836360604185 0.7867244574868211 3.614836360604185 0.7867244574868211 ]
complemento = 0


ind (0 : 4): [ ]
------------------------------ Fine which_v_indxNA_d

115: assegna1_vs_indx_d	<=>	v[indx] <- val
a (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
ind (0 : 4): [ ]
val = 0


a (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
------------------------------ Fine assegna1_vs_indx_d

117: assegna1_vs_indx_d	<=>	v[indx] <- val
b (4 : 4): [ 0.6148363606041851 0.2132755425131789 0.6148363606041851 0.2132755425131789 ]
ind (0 : 4): [ ]
val = 0


b (4 : 4): [ 0.6148363606041851 0.2132755425131789 0.6148363606041851 0.2132755425131789 ]
------------------------------ Fine assegna1_vs_indx_d

119: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
b (4 : 4): [ 0.6148363606041851 0.2132755425131789 0.6148363606041851 0.2132755425131789 ]


tmpm_d (4 x 2 : 4 x 2): [
	 1.614836360604185 0.6148363606041851
	 0.7867244574868211 0.2132755425131789
	 1.614836360604185 0.6148363606041851
	 0.7867244574868211 0.2132755425131789
 ]
------------------------------ Fine cbind2v_d

120: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (4 x 2 : 4 x 2): [
	 1.614836360604185 0.6148363606041851
	 0.7867244574868211 0.2132755425131789
	 1.614836360604185 0.6148363606041851
	 0.7867244574868211 0.2132755425131789
 ]


m (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
------------------------------ Fine max_righe_d

122: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
b (4 : 4): [ 0.6148363606041851 0.2132755425131789 0.6148363606041851 0.2132755425131789 ]
m (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
T2 (4 : 4): [ 3.614836360604185 0.7867244574868211 3.614836360604185 0.7867244574868211 ]


S2 (4 : 4): [ 0.4467246092252654 1 0.4467246092252654 1 ]
------------------------------ Fine f_aux_d

124: diff_vv_d	<=>	ris <- v1 - v2
a (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
toll2 (4 : 4): [ 1 1 1 1 ]


tmp_d1 (4 : 4): [ 0.6148363606041851 -0.2132755425131789 0.6148363606041851 -0.2132755425131789 ]
------------------------------ Fine diff_vv_d

125: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (4 : 4): [ 0.6148363606041851 -0.2132755425131789 0.6148363606041851 -0.2132755425131789 ]
val = 0

ind1 (2 : 4): [ 2 4 ]
------------------------------ Fine which_v_indxlt_d

127: diff_vv_d	<=>	ris <- v1 - v2
b (4 : 4): [ 0.6148363606041851 0.2132755425131789 0.6148363606041851 0.2132755425131789 ]
toll2 (4 : 4): [ 1 1 1 1 ]


tmp_d1 (4 : 4): [ -0.3851636393958149 -0.7867244574868211 -0.3851636393958149 -0.7867244574868211 ]
------------------------------ Fine diff_vv_d

128: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (4 : 4): [ -0.3851636393958149 -0.7867244574868211 -0.3851636393958149 -0.7867244574868211 ]
val = 0


ind2 (0 : 4): [ ]
------------------------------ Fine which_v_indxgt_d

130: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (2 : 4): [ 2 4 ]
ind2 (0 : 4): [ ]
2459: esiste_v_i	<=>	elem %IN% v
elem = 2
ind2 (0 : 4): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 2
tmp_i1 (0 : 4): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 4
ind2 (0 : 4): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 4
tmp_i1 (0 : 4): [ ]


indx = 0
------------------------------ Fine esiste_v_i



tmp_i1 (0 : 4): [ ]
------------------------------ Fine interseca_i

132: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (4 : 4): [ 0.4467246092252654 1 0.4467246092252654 1 ]
tmp_i1 (0 : 4): [ ]
val = -1.#INF


S2 (4 : 4): [ 0.4467246092252654 1 0.4467246092252654 1 ]
------------------------------ Fine assegna1_vs_indx_d

134: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (4 : 4): [ 0.4467246092252654 1 0.4467246092252654 1 ]
ind (0 : 4): [ ]
val = 0


S2 (4 : 4): [ 0.4467246092252654 1 0.4467246092252654 1 ]
------------------------------ Fine assegna1_vs_indx_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (4 : 4): [ 3.614836360604185 0.7867244574868211 3.614836360604185 0.7867244574868211 ]
val = 0


ind (0 : 4): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (4 : 4): [ 0.4467246092252654 1 0.4467246092252654 1 ]
ind (0 : 4): [ ]
val = -1.#INF


S2 (4 : 4): [ 0.4467246092252654 1 0.4467246092252654 1 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (4 : 4): [ 0 -0.7233623046126327 0 -0.7233623046126327 ]
S2 (4 : 4): [ 0.4467246092252654 1 0.4467246092252654 1 ]


S_in (4 : 4): [ 0.4467246092252654 0.2766376953873673 0.4467246092252654 0.2766376953873673 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
S_in (4 : 4): [ 0.4467246092252654 0.2766376953873673 0.4467246092252654 0.2766376953873673 ]
div = 2.000


S_in (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (3520 interne); stringhe deallocate: 0 (3120 interne)

131: which_v_indxne_d	<=>	ris <- which(v != val)
S_in (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]
val = -1.#INF


indok (4 : 4): [ 1 2 3 4 ]
------------------------------ Fine which_v_indxne_d

133: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkIN (4 x 4 : 4 x 4): [
	 1 1 1 1
	 1 1 1 1
	 0 0 0 0
	 0 0 0 0
 ]
riga = 3
indok (4 : 4): [ 1 2 3 4 ]
val = 1


checkIN (4 x 4 : 4 x 4): [
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
	 0 0 0 0
 ]
------------------------------ Fine aggiungi_riga_indx_i

141: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 4
incr = 1


tmp_i1 (4 : 12): [ 1 2 3 4 ]
------------------------------ Fine seq_i

142: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (4 : 12): [ 1 2 3 4 ]
indok (4 : 4): [ 1 2 3 4 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (4 : 12): [ 1 2 3 4 ]
st = 1
end = 4


indInf (4 : 4): [ 1 2 3 4 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (4 : 4): [ 1 2 3 4 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (4 : 4): [ 1 2 3 4 ]
indx = 1


indInf (3 : 4): [ 2 3 4 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (3 : 4): [ 2 3 4 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 4): [ 2 3 4 ]
indx = 1


indInf (2 : 4): [ 3 4 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (2 : 4): [ 3 4 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 4): [ 3 4 ]
indx = 1


indInf (1 : 4): [ 4 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 4
indInf (1 : 4): [ 4 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 4): [ 4 ]
indx = 1


indInf (0 : 4): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 4): [ ]
------------------------------ Fine setdiff_i

144: copia_v_indx_d	<=>	ris <- v[indx]
S_in (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]
indok (4 : 4): [ 1 2 3 4 ]


tmp_d1 (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]
------------------------------ Fine copia_v_indx_d

148: min_v_d	<=>	ris <- min(v)
tmp_d1 (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]


min = 0.1383188476936836
------------------------------ Fine min_v_d

149: assegna1_vs_indx_d	<=>	v[indx] <- val
S_in (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]
indInf (0 : 4): [ ]
val = -1


S_in (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]
------------------------------ Fine assegna1_vs_indx_d

159: somma_vv_d	<=>	ris <- v1 + v2
ris (4 : 4): [ 0 0 0 0 ]
S_in (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]


tmp_d1 (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (4 x 4 : 4 x 4): [
	 -1.050772612935894 -2.920205019852908 -3.49997236006623 -3.49997236006623
	 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836
	 0 0 0 0
	 0 0 0 0
 ]
riga = 3
tmp_d1 (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]


ris (4 x 4 : 4 x 4): [
	 -1.050772612935894 -2.920205019852908 -3.49997236006623 -3.49997236006623
	 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836
	 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836
	 0 0 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_d

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (4 x 3 : 4 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 1


tmp_i1 (0 : 12): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (4 x 3 : 4 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 0


tmp_i2 (0 : 12): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 12): [ ]
tmp_i2 (0 : 12): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

119: InitVett_d
ris (4 : 4): [ 0 0 0 0 ]
val = 0


ris (4 : 4): [ 0 0 0 0 ]
------------------------------ Fine InitVett_d

122: InitVett_i
tmp_i1 (4 : 12): [ 1 2 3 4 ]
val = 1


tmp_i1 (4 : 12): [ 1 1 1 1 ]
------------------------------ Fine InitVett_i

123: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
checkOUT (4 x 4 : 4 x 4): [
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
	 0 0 0 0
 ]
riga = 4
tmp_i1 (4 : 12): [ 1 1 1 1 ]


checkOUT (4 x 4 : 4 x 4): [
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
 ]
------------------------------ Fine aggiungi_mv_riga_i

128: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 1 3 1 0 ]
h (4 : 5): [ 5 4 1 2 ]


tmp_i1 (4 : 12): [ 0 1 0 1 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (4 : 12): [ 0 1 0 1 ]
s = 1


ind (4 : 4): [ 1 2 1 2 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (4 : 12): [ 0 1 0 1 ]
s = 1


tmp_i1 (4 : 4): [ 1 2 1 2 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (4 : 4): [ 1 2 1 2 ]


T1 (4 : 4): [ 1.#QNAN 3.614836360604185 1.#QNAN 3.614836360604185 ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (4 : 4): [ 1 2 1 2 ]
s = 1


tmp_i1 (4 : 4): [ 2 3 2 3 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (4 : 4): [ 2 3 2 3 ]


T2 (4 : 4): [ 3.614836360604185 0.7867244574868211 3.614836360604185 0.7867244574868211 ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (4 : 12): [ 0 1 0 1 ]
s = 1


tmp_i1 (4 : 4): [ 1 2 1 2 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 2 2 0 1 0 0 0 ]
tmp_i1 (4 : 4): [ 1 2 1 2 ]


old1 (4 : 4): [ 2 2 2 2 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (4 : 4): [ 1 2 1 2 ]
s = 1


tmp_i1 (4 : 4): [ 2 3 2 3 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 2 2 0 1 0 0 0 ]
tmp_i1 (4 : 4): [ 2 3 2 3 ]


old2 (4 : 4): [ 2 0 2 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (4 : 4): [ 2 2 2 2 ]
s = -1


new1 (4 : 4): [ 1 1 1 1 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (4 : 4): [ 2 0 2 0 ]
s = 1


new2 (4 : 4): [ 3 1 3 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (4 : 12): [ 0 1 0 1 ]
s = 1


tmp_i1 (4 : 4): [ 1 2 1 2 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (4 : 4): [ 1 2 1 2 ]


toll1 (4 : 4): [ 1.#QNAN 1 1.#QNAN 1 ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (4 : 4): [ 1 2 1 2 ]
s = 1


tmp_i1 (4 : 4): [ 2 3 2 3 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (4 : 4): [ 2 3 2 3 ]


toll2 (4 : 4): [ 1 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (4 : 4): [ 2 2 2 2 ]
T1 (4 : 4): [ 1.#QNAN 3.614836360604185 1.#QNAN 3.614836360604185 ]


a (4 : 4): [ 1.#QNAN -1.614836360604185 1.#QNAN -1.614836360604185 ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (4 : 4): [ 1.#QNAN -1.614836360604185 1.#QNAN -1.614836360604185 ]


a (4 : 4): [ 1.#QNAN 1.614836360604185 1.#QNAN 1.614836360604185 ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (4 : 4): [ 1 1 1 1 ]
T1 (4 : 4): [ 1.#QNAN 3.614836360604185 1.#QNAN 3.614836360604185 ]


b (4 : 4): [ 1.#QNAN -2.614836360604185 1.#QNAN -2.614836360604185 ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (4 : 4): [ 1.#QNAN -2.614836360604185 1.#QNAN -2.614836360604185 ]


b (4 : 4): [ 1.#QNAN 2.614836360604185 1.#QNAN 2.614836360604185 ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (4 : 4): [ 1.#QNAN 3.614836360604185 1.#QNAN 3.614836360604185 ]
complemento = 0


ind (2 : 4): [ 1 3 ]
------------------------------ Fine which_v_indxNA_d

68: assegna1_vs_indx_d	<=>	v[indx] <- val
a (4 : 4): [ 1.#QNAN 1.614836360604185 1.#QNAN 1.614836360604185 ]
ind (2 : 4): [ 1 3 ]
val = 0


a (4 : 4): [ 0 1.614836360604185 0 1.614836360604185 ]
------------------------------ Fine assegna1_vs_indx_d

70: assegna1_vs_indx_d	<=>	v[indx] <- val
b (4 : 4): [ 1.#QNAN 2.614836360604185 1.#QNAN 2.614836360604185 ]
ind (2 : 4): [ 1 3 ]
val = 0


b (4 : 4): [ 0 2.614836360604185 0 2.614836360604185 ]
------------------------------ Fine assegna1_vs_indx_d

78: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (4 : 4): [ 0 1.614836360604185 0 1.614836360604185 ]
b (4 : 4): [ 0 2.614836360604185 0 2.614836360604185 ]


tmpm_d (4 x 2 : 4 x 2): [
	 0 0
	 1.614836360604185 2.614836360604185
	 0 0
	 1.614836360604185 2.614836360604185
 ]
------------------------------ Fine cbind2v_d

79: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (4 x 2 : 4 x 2): [
	 0 0
	 1.614836360604185 2.614836360604185
	 0 0
	 1.614836360604185 2.614836360604185
 ]


m (4 : 4): [ 0 2.614836360604185 0 2.614836360604185 ]
------------------------------ Fine max_righe_d

81: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (4 : 4): [ 0 1.614836360604185 0 1.614836360604185 ]
b (4 : 4): [ 0 2.614836360604185 0 2.614836360604185 ]
m (4 : 4): [ 0 2.614836360604185 0 2.614836360604185 ]
T1 (4 : 4): [ 1.#QNAN 3.614836360604185 1.#QNAN 3.614836360604185 ]


S1 (4 : 4): [ 1.#QNAN -0.7233623046126327 1.#QNAN -0.7233623046126327 ]
------------------------------ Fine f_aux_d

83: diff_vv_d	<=>	ris <- v1 - v2
a (4 : 4): [ 0 1.614836360604185 0 1.614836360604185 ]
toll1 (4 : 4): [ 1.#QNAN 1 1.#QNAN 1 ]


tmp_d1 (4 : 4): [ 1.#QNAN 0.6148363606041851 1.#QNAN 0.6148363606041851 ]
------------------------------ Fine diff_vv_d

84: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (4 : 4): [ 1.#QNAN 0.6148363606041851 1.#QNAN 0.6148363606041851 ]
val = 0

ind1 (0 : 4): [ ]
------------------------------ Fine which_v_indxlt_d

86: diff_vv_d	<=>	ris <- v1 - v2
b (4 : 4): [ 0 2.614836360604185 0 2.614836360604185 ]
toll1 (4 : 4): [ 1.#QNAN 1 1.#QNAN 1 ]


tmp_d1 (4 : 4): [ 1.#QNAN 1.614836360604185 1.#QNAN 1.614836360604185 ]
------------------------------ Fine diff_vv_d

87: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (4 : 4): [ 1.#QNAN 1.614836360604185 1.#QNAN 1.614836360604185 ]
val = 0


ind2 (2 : 4): [ 2 4 ]
------------------------------ Fine which_v_indxgt_d

89: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (0 : 4): [ ]
ind2 (2 : 4): [ 2 4 ]


tmp_i1 (0 : 4): [ ]
------------------------------ Fine interseca_i

91: assegna1_vs_indx_d	<=>	v[indx] <- val
S1 (4 : 4): [ 1.#QNAN -0.7233623046126327 1.#QNAN -0.7233623046126327 ]
tmp_i1 (0 : 4): [ ]
val = -1.#INF


S1 (4 : 4): [ 1.#QNAN -0.7233623046126327 1.#QNAN -0.7233623046126327 ]
------------------------------ Fine assegna1_vs_indx_d

93: assegna1_vs_indx_d	<=>	v[indx] <- val
S1 (4 : 4): [ 1.#QNAN -0.7233623046126327 1.#QNAN -0.7233623046126327 ]
ind (2 : 4): [ 1 3 ]
val = 0


S1 (4 : 4): [ 0 -0.7233623046126327 0 -0.7233623046126327 ]
------------------------------ Fine assegna1_vs_indx_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (4 : 4): [ 2 0 2 0 ]
T2 (4 : 4): [ 3.614836360604185 0.7867244574868211 3.614836360604185 0.7867244574868211 ]


a (4 : 4): [ -1.614836360604185 -0.7867244574868211 -1.614836360604185 -0.7867244574868211 ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (4 : 4): [ -1.614836360604185 -0.7867244574868211 -1.614836360604185 -0.7867244574868211 ]


a (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (4 : 4): [ 3 1 3 1 ]
T2 (4 : 4): [ 3.614836360604185 0.7867244574868211 3.614836360604185 0.7867244574868211 ]


b (4 : 4): [ -0.6148363606041851 0.2132755425131789 -0.6148363606041851 0.2132755425131789 ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (4 : 4): [ -0.6148363606041851 0.2132755425131789 -0.6148363606041851 0.2132755425131789 ]


b (4 : 4): [ 0.6148363606041851 0.2132755425131789 0.6148363606041851 0.2132755425131789 ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
b (4 : 4): [ 0.6148363606041851 0.2132755425131789 0.6148363606041851 0.2132755425131789 ]


tmpm_d (4 x 2 : 4 x 2): [
	 1.614836360604185 0.6148363606041851
	 0.7867244574868211 0.2132755425131789
	 1.614836360604185 0.6148363606041851
	 0.7867244574868211 0.2132755425131789
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (4 x 2 : 4 x 2): [
	 1.614836360604185 0.6148363606041851
	 0.7867244574868211 0.2132755425131789
	 1.614836360604185 0.6148363606041851
	 0.7867244574868211 0.2132755425131789
 ]


m (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (4 : 4): [ 3.614836360604185 0.7867244574868211 3.614836360604185 0.7867244574868211 ]
complemento = 0


ind (0 : 4): [ ]
------------------------------ Fine which_v_indxNA_d

115: assegna1_vs_indx_d	<=>	v[indx] <- val
a (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
ind (0 : 4): [ ]
val = 0


a (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
------------------------------ Fine assegna1_vs_indx_d

117: assegna1_vs_indx_d	<=>	v[indx] <- val
b (4 : 4): [ 0.6148363606041851 0.2132755425131789 0.6148363606041851 0.2132755425131789 ]
ind (0 : 4): [ ]
val = 0


b (4 : 4): [ 0.6148363606041851 0.2132755425131789 0.6148363606041851 0.2132755425131789 ]
------------------------------ Fine assegna1_vs_indx_d

119: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
b (4 : 4): [ 0.6148363606041851 0.2132755425131789 0.6148363606041851 0.2132755425131789 ]


tmpm_d (4 x 2 : 4 x 2): [
	 1.614836360604185 0.6148363606041851
	 0.7867244574868211 0.2132755425131789
	 1.614836360604185 0.6148363606041851
	 0.7867244574868211 0.2132755425131789
 ]
------------------------------ Fine cbind2v_d

120: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (4 x 2 : 4 x 2): [
	 1.614836360604185 0.6148363606041851
	 0.7867244574868211 0.2132755425131789
	 1.614836360604185 0.6148363606041851
	 0.7867244574868211 0.2132755425131789
 ]


m (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
------------------------------ Fine max_righe_d

122: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
b (4 : 4): [ 0.6148363606041851 0.2132755425131789 0.6148363606041851 0.2132755425131789 ]
m (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
T2 (4 : 4): [ 3.614836360604185 0.7867244574868211 3.614836360604185 0.7867244574868211 ]


S2 (4 : 4): [ 0.4467246092252654 1 0.4467246092252654 1 ]
------------------------------ Fine f_aux_d

124: diff_vv_d	<=>	ris <- v1 - v2
a (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
toll2 (4 : 4): [ 1 1 1 1 ]


tmp_d1 (4 : 4): [ 0.6148363606041851 -0.2132755425131789 0.6148363606041851 -0.2132755425131789 ]
------------------------------ Fine diff_vv_d

125: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (4 : 4): [ 0.6148363606041851 -0.2132755425131789 0.6148363606041851 -0.2132755425131789 ]
val = 0

ind1 (2 : 4): [ 2 4 ]
------------------------------ Fine which_v_indxlt_d

127: diff_vv_d	<=>	ris <- v1 - v2
b (4 : 4): [ 0.6148363606041851 0.2132755425131789 0.6148363606041851 0.2132755425131789 ]
toll2 (4 : 4): [ 1 1 1 1 ]


tmp_d1 (4 : 4): [ -0.3851636393958149 -0.7867244574868211 -0.3851636393958149 -0.7867244574868211 ]
------------------------------ Fine diff_vv_d

128: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (4 : 4): [ -0.3851636393958149 -0.7867244574868211 -0.3851636393958149 -0.7867244574868211 ]
val = 0


ind2 (0 : 4): [ ]
------------------------------ Fine which_v_indxgt_d

130: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (2 : 4): [ 2 4 ]
ind2 (0 : 4): [ ]
2459: esiste_v_i	<=>	elem %IN% v
elem = 2
ind2 (0 : 4): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 2
tmp_i1 (0 : 4): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 4
ind2 (0 : 4): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 4
tmp_i1 (0 : 4): [ ]


indx = 0
------------------------------ Fine esiste_v_i



tmp_i1 (0 : 4): [ ]
------------------------------ Fine interseca_i

132: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (4 : 4): [ 0.4467246092252654 1 0.4467246092252654 1 ]
tmp_i1 (0 : 4): [ ]
val = -1.#INF


S2 (4 : 4): [ 0.4467246092252654 1 0.4467246092252654 1 ]
------------------------------ Fine assegna1_vs_indx_d

134: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (4 : 4): [ 0.4467246092252654 1 0.4467246092252654 1 ]
ind (0 : 4): [ ]
val = 0


S2 (4 : 4): [ 0.4467246092252654 1 0.4467246092252654 1 ]
------------------------------ Fine assegna1_vs_indx_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (4 : 4): [ 3.614836360604185 0.7867244574868211 3.614836360604185 0.7867244574868211 ]
val = 0


ind (0 : 4): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (4 : 4): [ 0.4467246092252654 1 0.4467246092252654 1 ]
ind (0 : 4): [ ]
val = -1.#INF


S2 (4 : 4): [ 0.4467246092252654 1 0.4467246092252654 1 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (4 : 4): [ 0 -0.7233623046126327 0 -0.7233623046126327 ]
S2 (4 : 4): [ 0.4467246092252654 1 0.4467246092252654 1 ]


S_in (4 : 4): [ 0.4467246092252654 0.2766376953873673 0.4467246092252654 0.2766376953873673 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
S_in (4 : 4): [ 0.4467246092252654 0.2766376953873673 0.4467246092252654 0.2766376953873673 ]
div = 2.000


S_in (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (3620 interne); stringhe deallocate: 0 (3220 interne)

131: which_v_indxne_d	<=>	ris <- which(v != val)
S_in (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]
val = -1.#INF


indok (4 : 4): [ 1 2 3 4 ]
------------------------------ Fine which_v_indxne_d

133: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkIN (4 x 4 : 4 x 4): [
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
	 0 0 0 0
 ]
riga = 4
indok (4 : 4): [ 1 2 3 4 ]
val = 1


checkIN (4 x 4 : 4 x 4): [
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
 ]
------------------------------ Fine aggiungi_riga_indx_i

141: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 4
incr = 1


tmp_i1 (4 : 12): [ 1 2 3 4 ]
------------------------------ Fine seq_i

142: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (4 : 12): [ 1 2 3 4 ]
indok (4 : 4): [ 1 2 3 4 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (4 : 12): [ 1 2 3 4 ]
st = 1
end = 4


indInf (4 : 4): [ 1 2 3 4 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (4 : 4): [ 1 2 3 4 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (4 : 4): [ 1 2 3 4 ]
indx = 1


indInf (3 : 4): [ 2 3 4 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (3 : 4): [ 2 3 4 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 4): [ 2 3 4 ]
indx = 1


indInf (2 : 4): [ 3 4 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (2 : 4): [ 3 4 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 4): [ 3 4 ]
indx = 1


indInf (1 : 4): [ 4 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 4
indInf (1 : 4): [ 4 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 4): [ 4 ]
indx = 1


indInf (0 : 4): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 4): [ ]
------------------------------ Fine setdiff_i

144: copia_v_indx_d	<=>	ris <- v[indx]
S_in (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]
indok (4 : 4): [ 1 2 3 4 ]


tmp_d1 (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]
------------------------------ Fine copia_v_indx_d

148: min_v_d	<=>	ris <- min(v)
tmp_d1 (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]


min = 0.1383188476936836
------------------------------ Fine min_v_d

149: assegna1_vs_indx_d	<=>	v[indx] <- val
S_in (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]
indInf (0 : 4): [ ]
val = -1


S_in (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]
------------------------------ Fine assegna1_vs_indx_d

159: somma_vv_d	<=>	ris <- v1 + v2
ris (4 : 4): [ 0 0 0 0 ]
S_in (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]


tmp_d1 (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (4 x 4 : 4 x 4): [
	 -1.050772612935894 -2.920205019852908 -3.49997236006623 -3.49997236006623
	 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836
	 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836
	 0 0 0 0
 ]
riga = 4
tmp_d1 (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]


ris (4 x 4 : 4 x 4): [
	 -1.050772612935894 -2.920205019852908 -3.49997236006623 -3.49997236006623
	 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836
	 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836
	 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836
 ]
------------------------------ Fine aggiungi_mv_riga_d

168: somma_m_d	<=>	ris <- sum(m)
ris (4 x 4 : 4 x 4): [
	 -1.050772612935894 -2.920205019852908 -3.49997236006623 -3.49997236006623
	 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836
	 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836
	 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836
 ]


ris: -8.800835439083365
------------------------------ Fine somma_m_d

173: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
checkIN (4 x 4 : 4 x 4): [
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
 ]


aus (4 : 4): [ 4 4 4 4 ]
------------------------------ Fine somma_colonne_i

175: which_v_indxne_i	<=>	ris <- which(v != val)
aus (4 : 4): [ 4 4 4 4 ]
val = 0


tmp_i1 (4 : 12): [ 1 2 3 4 ]
------------------------------ Fine which_v_indxne_i

186: somma_righe_i	<=>	ris <- apply(m, 1, sum)
checkIN (4 x 4 : 4 x 4): [
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
 ]


rs (4 : 4): [ 4 4 4 4 ]
------------------------------ Fine somma_righe_i

188: ordine_i	<=>	ris <- order(v, decreasing=decr)
rs (4 : 4): [ 4 4 4 4 ]
decr = 0


ord_ind (4 : 4): [ 1 2 3 4 ]
------------------------------ Fine ordine_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (4 x 4 : 4 x 4): [
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
 ]
r = 1
val = 0


I_add (4 : 16): [ 1 2 3 4 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
I (0 : 0): [ ]
I_add (4 : 16): [ 1 2 3 4 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (4 : 4): [ 1 2 3 4 ]


ris (4 : 4): [ 1 2 3 4 ]
------------------------------ Fine elimina_doppi_i



ris (4 : 4): [ 1 2 3 4 ]
------------------------------ Fine unione1_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (4 x 4 : 4 x 4): [
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
 ]
r = 2
val = 0


I_add (4 : 16): [ 1 2 3 4 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
ris (4 : 4): [ 1 2 3 4 ]
I_add (4 : 16): [ 1 2 3 4 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (8 : 8): [ 1 2 3 4 1 2 3 4 ]


ris (4 : 8): [ 1 2 3 4 ]
------------------------------ Fine elimina_doppi_i



ris (4 : 8): [ 1 2 3 4 ]
------------------------------ Fine unione1_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (4 x 4 : 4 x 4): [
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
 ]
r = 3
val = 0


I_add (4 : 16): [ 1 2 3 4 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
ris (4 : 8): [ 1 2 3 4 ]
I_add (4 : 16): [ 1 2 3 4 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (8 : 8): [ 1 2 3 4 1 2 3 4 ]


ris (4 : 8): [ 1 2 3 4 ]
------------------------------ Fine elimina_doppi_i



ris (4 : 8): [ 1 2 3 4 ]
------------------------------ Fine unione1_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (4 x 4 : 4 x 4): [
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
 ]
r = 4
val = 0


I_add (4 : 16): [ 1 2 3 4 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
ris (4 : 8): [ 1 2 3 4 ]
I_add (4 : 16): [ 1 2 3 4 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (8 : 8): [ 1 2 3 4 1 2 3 4 ]


ris (4 : 8): [ 1 2 3 4 ]
------------------------------ Fine elimina_doppi_i



ris (4 : 8): [ 1 2 3 4 ]
------------------------------ Fine unione1_i

216: assegna1_mindxlt_i	<=>	m1[which(m2<val1)] <- val2
checkOUT (4 x 4 : 4 x 4): [
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
 ]
checkOUT (4 x 4 : 4 x 4): [
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
 ]
val1 = 0
val2 = 0


checkOUT (4 x 4 : 4 x 4): [
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
 ]
------------------------------ Fine assegna1_mindxlt_i

218: assegna1_m_indxgt_i	<=>	m1[which(m2>val1)] <- val2
checkOUT (4 x 4 : 4 x 4): [
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
 ]
checkOUT (4 x 4 : 4 x 4): [
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
 ]
val1 = 0
val2 = 1


checkOUT (4 x 4 : 4 x 4): [
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
 ]
------------------------------ Fine assegna1_m_indxgt_i

220: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
checkOUT (4 x 4 : 4 x 4): [
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
 ]


aus (4 : 4): [ 4 4 4 4 ]
------------------------------ Fine somma_colonne_i

222: which_v_indxne_i	<=>	ris <- which(v != val)
aus (4 : 4): [ 4 4 4 4 ]
val = 0


tmp_i1 (4 : 12): [ 1 2 3 4 ]
------------------------------ Fine which_v_indxne_i

232: somma_righe_i	<=>	ris <- apply(m, 1, sum)
checkOUT (4 x 4 : 4 x 4): [
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
 ]


rs (4 : 4): [ 4 4 4 4 ]
------------------------------ Fine somma_righe_i

234: ordine_i	<=>	ris <- order(v, decreasing=decr)
rs (4 : 4): [ 4 4 4 4 ]
decr = 0


ord_ind (4 : 4): [ 1 2 3 4 ]
------------------------------ Fine ordine_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (4 x 4 : 4 x 4): [
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
 ]
r = 1
val = 0


I_add (4 : 16): [ 1 2 3 4 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (0 : 8): [ ]
I_add (4 : 16): [ 1 2 3 4 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (4 : 4): [ 1 2 3 4 ]


ris (4 : 4): [ 1 2 3 4 ]
------------------------------ Fine elimina_doppi_i



ris (4 : 4): [ 1 2 3 4 ]
------------------------------ Fine unione1_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (4 x 4 : 4 x 4): [
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
 ]
r = 2
val = 0


I_add (4 : 16): [ 1 2 3 4 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (4 : 4): [ 1 2 3 4 ]
I_add (4 : 16): [ 1 2 3 4 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (8 : 8): [ 1 2 3 4 1 2 3 4 ]


ris (4 : 8): [ 1 2 3 4 ]
------------------------------ Fine elimina_doppi_i



ris (4 : 8): [ 1 2 3 4 ]
------------------------------ Fine unione1_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (4 x 4 : 4 x 4): [
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
 ]
r = 3
val = 0


I_add (4 : 16): [ 1 2 3 4 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (4 : 8): [ 1 2 3 4 ]
I_add (4 : 16): [ 1 2 3 4 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (8 : 8): [ 1 2 3 4 1 2 3 4 ]


ris (4 : 8): [ 1 2 3 4 ]
------------------------------ Fine elimina_doppi_i



ris (4 : 8): [ 1 2 3 4 ]
------------------------------ Fine unione1_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (4 x 4 : 4 x 4): [
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
 ]
r = 4
val = 0


I_add (4 : 16): [ 1 2 3 4 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (4 : 8): [ 1 2 3 4 ]
I_add (4 : 16): [ 1 2 3 4 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (8 : 8): [ 1 2 3 4 1 2 3 4 ]


ris (4 : 8): [ 1 2 3 4 ]
------------------------------ Fine elimina_doppi_i



ris (4 : 8): [ 1 2 3 4 ]
------------------------------ Fine unione1_i


Stringhe allocate: 5 (3725 interne); stringhe deallocate: 0 (3400 interne)


Stringhe allocate: 5 (3730 interne); stringhe deallocate: 0 (3410 interne)


*** module3 ***
51: seq_i	<=>	ris <- seq(da, a, incr)
da = 2
a = 4
incr = 1


tmp1_i (3 : 3): [ 2 3 4 ]
------------------------------ Fine seq_i


*** sampleB ***

***sample***
tmp1_i (3 : 3): [ 2 3 4 ]
k = 1, replace = 0


ris (1 : 1): [ 3 ]
*****************************************


Stringhe allocate: 5 (3740 interne); stringhe deallocate: 0 (3410 interne)


Stringhe allocate: 5 (3740 interne); stringhe deallocate: 0 (3410 interne)

54: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 2
incr = 1


tmp1_i (2 : 3): [ 1 2 ]
------------------------------ Fine seq_i


*** sampleB ***

***sample***
tmp1_i (2 : 3): [ 1 2 ]
k = 1, replace = 0


ris (1 : 1): [ 1 ]
*****************************************


Stringhe allocate: 5 (3745 interne); stringhe deallocate: 0 (3410 interne)


Stringhe allocate: 5 (3745 interne); stringhe deallocate: 0 (3410 interne)


*** mod3 ***
33: InitMatr_i
ris (3 x 3 : 3 x 3): [
	 79852216 1071644672 0
	 1071644672 0 1071644672
	 0 1071644672 0
 ]
val = 0


ris (3 x 3 : 3 x 3): [
	 0 0 0
	 0 0 0
	 0 0 0
 ]
------------------------------ Fine InitMatr_i

34: copia_v_d	<=>	ris[st:end] <- v[st:end]
STin (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
st = 1
end = 7


STin (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
------------------------------ Fine copia_v_d

35: copia_v_d	<=>	ris[st:end] <- v[st:end]
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
st = 1
end = 7


STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
------------------------------ Fine copia_v_d

39: segmento_v_d	<=>	ris <- v[st:end]
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
start = 2
end = 3


tmp1_d (2 : 2): [ 3.614836360604185 0.7867244574868211 ]
------------------------------ Fine segmento_v_d

40: somma_v_d	<=>	ris <- sum(v, na.rm=canc_NA)
tmp1_d (2 : 2): [ 3.614836360604185 0.7867244574868211 ]
canc_NA = 1



ris: 4.401560818091006
------------------------------ Fine somma_v_d

43: segmento_v_d	<=>	ris <- v[st:end]
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
start = 2
end = 3


p (2 : 2): [ 3.614836360604185 0.7867244574868211 ]
------------------------------ Fine segmento_v_d

44: dividi1_vs_d	<=>	v <- v / div
p (2 : 2): [ 3.614836360604185 0.7867244574868211 ]
div = 4.402


p (2 : 2): [ 0.8212623907743639 0.178737609225636 ]
------------------------------ Fine dividi1_vs_d

61: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 2
incr = 1


tmp1_i (2 : 2): [ 1 2 ]
------------------------------ Fine seq_i


*** sampleB_p ***

*** sample_p ***
tmp1_i (2 : 2): [ 1 2 ]
k = 1, replace = 1
p (2 : 2): [ 0.8212623907743639 0.178737609225636 ]


ris (1 : 1): [ 1 ]
*****************************************


Stringhe allocate: 5 (3790 interne); stringhe deallocate: 0 (3410 interne)

64: somma_v_i	<=>	ris <- sum(v, na.rm=canc_NA)
ris (1 : 1): [ 1 ]
canc_NA = 0



ris: 1
------------------------------ Fine somma_v_i

68: segmento1_v_d	<=>	v <- v[st:end]
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
start = 1
end = 3


STout (3 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 ]
------------------------------ Fine segmento1_v_d

78: dividi1_vs_d	<=>	v <- v / div
STout (3 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 ]
div = 2.201


STout (3 : 7): [ 1.#QNAN 1.642524781548728 0.357475218451272 ]
------------------------------ Fine dividi1_vs_d

80: max_v_i		<=>	ris <- max(v)
ris (1 : 1): [ 1 ]


max = 1
------------------------------ Fine max_v_i

82: seq_i	<=>	ris <- seq(da, a, incr)
da = 0
a = 3
incr = 1


tmp2_i (4 : 4): [ 0 1 2 3 ]
------------------------------ Fine seq_i


*** hist1 ***
ris (1 : 1): [ 1 ]
tmp2_i (4 : 4): [ 0 1 2 3 ]
right = 0
include_border = 1
naok = 0
29: InitVett_i
tmp1_i (3 : 7): [ 79857504 1330207310 673203534 ]
val = 0


tmp1_i (3 : 7): [ 0 0 0 ]
------------------------------ Fine InitVett_i



tmp1_i (3 : 7): [ 0 1 0 ]

Stringhe allocate: 5 (3795 interne); stringhe deallocate: 0 (3410 interne)

84: dividi_vs_i	ris <- v / div
tmp1_i (3 : 7): [ 0 1 0 ]
div = 3.000


Freq_out (3 : 3): [ 0 0.3333333333333333 0 ]
------------------------------ Fine dividi_vs_i

87: InitVett_d
tmp3_d (2 : 2): [ 3.287239484599216e-085 5.38784212246792e-310 ]
val = 1.#INF


tmp3_d (2 : 2): [ 1.#INF 1.#INF ]
------------------------------ Fine InitVett_d


***score***
31: somma_vs_i	<=>	ris <- v + s
ris (1 : 1): [ 1 ]
s = 1


ind (1 : 1): [ 2 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
ris (1 : 1): [ 1 ]
s = 1


tmp_i1 (1 : 1): [ 2 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (3 : 7): [ 1.#QNAN 1.642524781548728 0.357475218451272 ]
tmp_i1 (1 : 1): [ 2 ]


T1 (1 : 1): [ 1.642524781548728 ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (1 : 1): [ 2 ]
s = 1


tmp_i1 (1 : 1): [ 3 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (3 : 7): [ 1.#QNAN 1.642524781548728 0.357475218451272 ]
tmp_i1 (1 : 1): [ 3 ]


T2 (1 : 1): [ 0.357475218451272 ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
ris (1 : 1): [ 1 ]
s = 1


tmp_i1 (1 : 1): [ 2 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (3 : 3): [ 0 0.3333333333333333 0 ]
tmp_i1 (1 : 1): [ 2 ]


old1 (1 : 1): [ 0.3333333333333333 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (1 : 1): [ 2 ]
s = 1


tmp_i1 (1 : 1): [ 3 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (3 : 3): [ 0 0.3333333333333333 0 ]
tmp_i1 (1 : 1): [ 3 ]


old2 (1 : 1): [ 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (1 : 1): [ 0.3333333333333333 ]
s = -1


new1 (1 : 1): [ -0.6666666666666667 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (1 : 1): [ 0 ]
s = 1


new2 (1 : 1): [ 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
ris (1 : 1): [ 1 ]
s = 1


tmp_i1 (1 : 1): [ 2 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
tmp3_d (2 : 2): [ 1.#INF 1.#INF ]
tmp_i1 (1 : 1): [ 2 ]


toll1 (1 : 1): [ 1.#INF ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (1 : 1): [ 2 ]
s = 1


tmp_i1 (1 : 1): [ 3 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
tmp3_d (2 : 2): [ 1.#INF 1.#INF ]
tmp_i1 (1 : 1): [ 3 ]
ATTENZIONE (assegna_vindxNA_d, linea scoremodular.c # 56): assegnato NA per via di un elemento specificato alla posizione 3 che e` al di fuori dei limiti dell'array (2)!


toll2 (1 : 1): [ 1.#QNAN ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (1 : 1): [ 0.3333333333333333 ]
T1 (1 : 1): [ 1.642524781548728 ]


a (1 : 1): [ -1.309191448215395 ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (1 : 1): [ -1.309191448215395 ]


a (1 : 1): [ 1.309191448215395 ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (1 : 1): [ -0.6666666666666667 ]
T1 (1 : 1): [ 1.642524781548728 ]


b (1 : 1): [ -2.309191448215395 ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (1 : 1): [ -2.309191448215395 ]


b (1 : 1): [ 2.309191448215395 ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (1 : 1): [ 1.642524781548728 ]
complemento = 0


ind (0 : 1): [ ]
------------------------------ Fine which_v_indxNA_d

68: assegna1_vs_indx_d	<=>	v[indx] <- val
a (1 : 1): [ 1.309191448215395 ]
ind (0 : 1): [ ]
val = 0


a (1 : 1): [ 1.309191448215395 ]
------------------------------ Fine assegna1_vs_indx_d

70: assegna1_vs_indx_d	<=>	v[indx] <- val
b (1 : 1): [ 2.309191448215395 ]
ind (0 : 1): [ ]
val = 0


b (1 : 1): [ 2.309191448215395 ]
------------------------------ Fine assegna1_vs_indx_d

78: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (1 : 1): [ 1.309191448215395 ]
b (1 : 1): [ 2.309191448215395 ]


tmpm_d (1 x 2 : 1 x 2): [
	 1.309191448215395 2.309191448215395
 ]
------------------------------ Fine cbind2v_d

79: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (1 x 2 : 1 x 2): [
	 1.309191448215395 2.309191448215395
 ]


m (1 : 1): [ 2.309191448215395 ]
------------------------------ Fine max_righe_d

81: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (1 : 1): [ 1.309191448215395 ]
b (1 : 1): [ 2.309191448215395 ]
m (1 : 1): [ 2.309191448215395 ]
T1 (1 : 1): [ 1.642524781548728 ]


S1 (1 : 1): [ -1.405879213608011 ]
------------------------------ Fine f_aux_d

83: diff_vv_d	<=>	ris <- v1 - v2
a (1 : 1): [ 1.309191448215395 ]
toll1 (1 : 1): [ 1.#INF ]


tmp_d1 (1 : 1): [ -1.#INF ]
------------------------------ Fine diff_vv_d

84: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (1 : 1): [ -1.#INF ]
val = 0

ind1 (1 : 1): [ 1 ]
------------------------------ Fine which_v_indxlt_d

86: diff_vv_d	<=>	ris <- v1 - v2
b (1 : 1): [ 2.309191448215395 ]
toll1 (1 : 1): [ 1.#INF ]


tmp_d1 (1 : 1): [ -1.#INF ]
------------------------------ Fine diff_vv_d

87: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (1 : 1): [ -1.#INF ]
val = 0


ind2 (0 : 1): [ ]
------------------------------ Fine which_v_indxgt_d

89: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (1 : 1): [ 1 ]
ind2 (0 : 1): [ ]
2459: esiste_v_i	<=>	elem %IN% v
elem = 1
ind2 (0 : 1): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 1
tmp_i1 (0 : 1): [ ]


indx = 0
------------------------------ Fine esiste_v_i



tmp_i1 (0 : 1): [ ]
------------------------------ Fine interseca_i

91: assegna1_vs_indx_d	<=>	v[indx] <- val
S1 (1 : 1): [ -1.405879213608011 ]
tmp_i1 (0 : 1): [ ]
val = -1.#INF


S1 (1 : 1): [ -1.405879213608011 ]
------------------------------ Fine assegna1_vs_indx_d

93: assegna1_vs_indx_d	<=>	v[indx] <- val
S1 (1 : 1): [ -1.405879213608011 ]
ind (0 : 1): [ ]
val = 0


S1 (1 : 1): [ -1.405879213608011 ]
------------------------------ Fine assegna1_vs_indx_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (1 : 1): [ 0 ]
T2 (1 : 1): [ 0.357475218451272 ]


a (1 : 1): [ -0.357475218451272 ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (1 : 1): [ -0.357475218451272 ]


a (1 : 1): [ 0.357475218451272 ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (1 : 1): [ 1 ]
T2 (1 : 1): [ 0.357475218451272 ]


b (1 : 1): [ 0.6425247815487281 ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (1 : 1): [ 0.6425247815487281 ]


b (1 : 1): [ 0.6425247815487281 ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (1 : 1): [ 0.357475218451272 ]
b (1 : 1): [ 0.6425247815487281 ]


tmpm_d (1 x 2 : 1 x 2): [
	 0.357475218451272 0.6425247815487281
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (1 x 2 : 1 x 2): [
	 0.357475218451272 0.6425247815487281
 ]


m (1 : 1): [ 0.6425247815487281 ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (1 : 1): [ 0.357475218451272 ]
complemento = 0


ind (0 : 1): [ ]
------------------------------ Fine which_v_indxNA_d

115: assegna1_vs_indx_d	<=>	v[indx] <- val
a (1 : 1): [ 0.357475218451272 ]
ind (0 : 1): [ ]
val = 0


a (1 : 1): [ 0.357475218451272 ]
------------------------------ Fine assegna1_vs_indx_d

117: assegna1_vs_indx_d	<=>	v[indx] <- val
b (1 : 1): [ 0.6425247815487281 ]
ind (0 : 1): [ ]
val = 0


b (1 : 1): [ 0.6425247815487281 ]
------------------------------ Fine assegna1_vs_indx_d

119: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (1 : 1): [ 0.357475218451272 ]
b (1 : 1): [ 0.6425247815487281 ]


tmpm_d (1 x 2 : 1 x 2): [
	 0.357475218451272 0.6425247815487281
 ]
------------------------------ Fine cbind2v_d

120: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (1 x 2 : 1 x 2): [
	 0.357475218451272 0.6425247815487281
 ]


m (1 : 1): [ 0.6425247815487281 ]
------------------------------ Fine max_righe_d

122: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (1 : 1): [ 0.357475218451272 ]
b (1 : 1): [ 0.6425247815487281 ]
m (1 : 1): [ 0.6425247815487281 ]
T2 (1 : 1): [ 0.357475218451272 ]


S2 (1 : 1): [ -1.797396709994071 ]
------------------------------ Fine f_aux_d

124: diff_vv_d	<=>	ris <- v1 - v2
a (1 : 1): [ 0.357475218451272 ]
toll2 (1 : 1): [ 1.#QNAN ]


tmp_d1 (1 : 1): [ 1.#QNAN ]
------------------------------ Fine diff_vv_d

125: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (1 : 1): [ 1.#QNAN ]
val = 0

ind1 (0 : 1): [ ]
------------------------------ Fine which_v_indxlt_d

127: diff_vv_d	<=>	ris <- v1 - v2
b (1 : 1): [ 0.6425247815487281 ]
toll2 (1 : 1): [ 1.#QNAN ]


tmp_d1 (1 : 1): [ 1.#QNAN ]
------------------------------ Fine diff_vv_d

128: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (1 : 1): [ 1.#QNAN ]
val = 0


ind2 (0 : 1): [ ]
------------------------------ Fine which_v_indxgt_d

130: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (0 : 1): [ ]
ind2 (0 : 1): [ ]


tmp_i1 (0 : 1): [ ]
------------------------------ Fine interseca_i

132: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (1 : 1): [ -1.797396709994071 ]
tmp_i1 (0 : 1): [ ]
val = -1.#INF


S2 (1 : 1): [ -1.797396709994071 ]
------------------------------ Fine assegna1_vs_indx_d

134: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (1 : 1): [ -1.797396709994071 ]
ind (0 : 1): [ ]
val = 0


S2 (1 : 1): [ -1.797396709994071 ]
------------------------------ Fine assegna1_vs_indx_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (1 : 1): [ 0.357475218451272 ]
val = 0


ind (0 : 1): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (1 : 1): [ -1.797396709994071 ]
ind (0 : 1): [ ]
val = -1.#INF


S2 (1 : 1): [ -1.797396709994071 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (1 : 1): [ -1.405879213608011 ]
S2 (1 : 1): [ -1.797396709994071 ]


ris (1 : 1): [ -3.203275923602082 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
ris (1 : 1): [ -3.203275923602082 ]
div = 2.000


ris (1 : 1): [ -1.601637961801041 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (3911 interne); stringhe deallocate: 0 (3511 interne)

90: which_v_indxne_d	<=>	ris <- which(v != val)
ris (1 : 1): [ -1.601637961801041 ]
val = -1.#INF


indok (1 : 1): [ 1 ]
------------------------------ Fine which_v_indxne_d

92: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 1
incr = 1


tmp3_i (1 : 1): [ 1 ]
------------------------------ Fine seq_i

93: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp3_i (1 : 1): [ 1 ]
indok (1 : 1): [ 1 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp3_i (1 : 1): [ 1 ]
st = 1
end = 1


indInf (1 : 1): [ 1 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (1 : 1): [ 1 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 1): [ 1 ]
indx = 1


indInf (0 : 1): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 1): [ ]
------------------------------ Fine setdiff_i

95: assegna_v_indx_d	<=>	ris <-v[indx] senza sforamento dei limiti
ris (1 : 1): [ -1.601637961801041 ]
indok (1 : 1): [ 1 ]


tmp1_d (1 : 2): [ -1.601637961801041 ]
------------------------------ Fine assegna_v_indx_d

96: min_v_d	<=>	ris <- min(v)
tmp1_d (1 : 2): [ -1.601637961801041 ]


min = -1.601637961801041
------------------------------ Fine min_v_d

99: assegna1_v_indx_d	<=>	v[indx] <- val
ris (1 : 1): [ -1.601637961801041 ]
indInf (0 : 1): [ ]
val = -1


ris (1 : 1): [ -1.601637961801041 ]
------------------------------ Fine assegna1_v_indx_d

101: somma_v_d	<=>	ris <- sum(v, na.rm=canc_NA)
ris (1 : 1): [ -1.601637961801041 ]
canc_NA = 0



ris: -1.601637961801041
------------------------------ Fine somma_v_d

101: dividi_vs_d	ris <- v / div
ris (1 : 1): [ -1.601637961801041 ]
div = -1.602


p (1 : 2): [ 1 ]
------------------------------ Fine dividi_vs_d

119: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 1
incr = 1


tmp2_i (1 : 4): [ 1 ]
------------------------------ Fine seq_i


*** sampleB_p ***
25: rep_v_i	<=>	ris <- rep(v, rip)
tmp2_i (1 : 4): [ 1 ]
rip = 1


ris (1 : 1): [ 1 ]
------------------------------ Fine rep_v_i

64: somma_v_i	<=>	ris <- sum(v, na.rm=canc_NA)
ris (1 : 1): [ 2 ]
canc_NA = 0



ris: 2
------------------------------ Fine somma_v_i

131: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 2
incr = 1


tmp1_i (2 : 7): [ 1 2 ]
------------------------------ Fine seq_i

133: assegna1_m_vv_i	<=>	m[vr, vc] <- val
ris (3 x 3 : 3 x 3): [
	 0 0 0
	 0 0 0
	 0 0 0
 ]
tmp1_i (2 : 7): [ 1 2 ]
scalare_i (1 : 1): [ 3 ]
val = 1


ris (3 x 3 : 3 x 3): [
	 0 0 1
	 0 0 1
	 0 0 0
 ]
------------------------------ Fine assegna1_m_vv_i

135: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 2
incr = 1


indS (2 : 2): [ 1 2 ]
------------------------------ Fine seq_i

137: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 2
incr = 1


tmp2_i (2 : 4): [ 1 2 ]
------------------------------ Fine seq_i

138: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp2_i (2 : 4): [ 1 2 ]
indS (2 : 2): [ 1 2 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp2_i (2 : 4): [ 1 2 ]
st = 1
end = 2


indBS (2 : 2): [ 1 2 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indBS (2 : 2): [ 1 2 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indBS (2 : 2): [ 1 2 ]
indx = 1


indBS (1 : 2): [ 2 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indBS (1 : 2): [ 2 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indBS (1 : 2): [ 2 ]
indx = 1


indBS (0 : 2): [ ]
------------------------------ Fine elimina1_indx_i



indBS (0 : 2): [ ]
------------------------------ Fine setdiff_i



*****************************************
*****************************************


Stringhe allocate: 5 (3941 interne); stringhe deallocate: 0 (3601 interne)


*** probmod ***
46: InitMatr_i
checkOUT (3 x 4 : 3 x 4): [
	 79853232 0 5 -2147483533
	 4 79036688 0 0
	 0 79848856 -1 -2147483648
 ]
val = 0


checkOUT (3 x 4 : 3 x 4): [
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
 ]
------------------------------ Fine InitMatr_i

48: InitMatr_i
checkIN (3 x 4 : 3 x 4): [
	 79864968 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648 -2147483648
 ]
val = 0


checkIN (3 x 4 : 3 x 4): [
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
 ]
------------------------------ Fine InitMatr_i

50: InitMatr_d
ris (3 x 4 : 3 x 4): [
	 8.487983163861089e-314 2.470328229206233e-323 2.470328229206233e-323 2.470328229206233e-323
	 8.169334500883628e-315 -2.44029515988674e-312 1.48219693752374e-323 9.881312916824931e-324
	 9.665350580544043e-286 0 0 0
 ]
val = 0


ris (3 x 4 : 3 x 4): [
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
 ]
------------------------------ Fine InitMatr_d

52: somma_righe_i	<=>	ris <- apply(m, 1, sum)
ris (3 x 3 : 3 x 3): [
	 0 0 1
	 0 0 1
	 0 0 0
 ]


M_in (3 : 3): [ 1 1 0 ]
------------------------------ Fine somma_righe_i

54: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
ris (3 x 3 : 3 x 3): [
	 0 0 1
	 0 0 1
	 0 0 0
 ]


M_out (3 : 3): [ 0 0 2 ]
------------------------------ Fine somma_colonne_i

57: InitMatr_i
memory (3 x 3 : 3 x 3): [
	 79850336 1702064993 1598115448
	 1330207310 1600220775 1814047844
	 673203534 1684957558 1634037353
 ]
val = -2147483648


memory (3 x 3 : 3 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
------------------------------ Fine InitMatr_i

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (3 x 3 : 3 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 1


tmp_i1 (0 : 9): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (3 x 3 : 3 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 0


tmp_i2 (0 : 9): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 9): [ ]
tmp_i2 (0 : 9): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

119: InitVett_d
S_out (4 : 4): [ 6.2183458668374e+175 5.387842123834802e-310 0 0 ]
val = 0


S_out (4 : 4): [ 0 0 0 0 ]
------------------------------ Fine InitVett_d

122: InitVett_i
tmp_i1 (4 : 9): [ 79851664 1071644672 0 1071644672 ]
val = 1


tmp_i1 (4 : 9): [ 1 1 1 1 ]
------------------------------ Fine InitVett_i

123: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
checkOUT (3 x 4 : 3 x 4): [
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
 ]
riga = 1
tmp_i1 (4 : 9): [ 1 1 1 1 ]


checkOUT (3 x 4 : 3 x 4): [
	 1 1 1 1
	 0 0 0 0
	 0 0 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_i

128: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 1 3 1 0 ]
h (4 : 5): [ 5 4 1 2 ]


tmp_i1 (4 : 9): [ 0 1 0 1 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (4 : 9): [ 0 1 0 1 ]
s = 1


ind (4 : 4): [ 1 2 1 2 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (4 : 9): [ 0 1 0 1 ]
s = 1


tmp_i1 (4 : 4): [ 1 2 1 2 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (4 : 4): [ 1 2 1 2 ]


T1 (4 : 4): [ 1.#QNAN 3.614836360604185 1.#QNAN 3.614836360604185 ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (4 : 4): [ 1 2 1 2 ]
s = 1


tmp_i1 (4 : 4): [ 2 3 2 3 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (4 : 4): [ 2 3 2 3 ]


T2 (4 : 4): [ 3.614836360604185 0.7867244574868211 3.614836360604185 0.7867244574868211 ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (4 : 9): [ 0 1 0 1 ]
s = 1


tmp_i1 (4 : 4): [ 1 2 1 2 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 2 2 0 1 0 0 0 ]
tmp_i1 (4 : 4): [ 1 2 1 2 ]


old1 (4 : 4): [ 2 2 2 2 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (4 : 4): [ 1 2 1 2 ]
s = 1


tmp_i1 (4 : 4): [ 2 3 2 3 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 2 2 0 1 0 0 0 ]
tmp_i1 (4 : 4): [ 2 3 2 3 ]


old2 (4 : 4): [ 2 0 2 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (4 : 4): [ 2 2 2 2 ]
s = -1


new1 (4 : 4): [ 1 1 1 1 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (4 : 4): [ 2 0 2 0 ]
s = 1


new2 (4 : 4): [ 3 1 3 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (4 : 9): [ 0 1 0 1 ]
s = 1


tmp_i1 (4 : 4): [ 1 2 1 2 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (4 : 4): [ 1 2 1 2 ]


toll1 (4 : 4): [ 1.#QNAN 1 1.#QNAN 1 ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (4 : 4): [ 1 2 1 2 ]
s = 1


tmp_i1 (4 : 4): [ 2 3 2 3 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (4 : 4): [ 2 3 2 3 ]


toll2 (4 : 4): [ 1 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (4 : 4): [ 2 2 2 2 ]
T1 (4 : 4): [ 1.#QNAN 3.614836360604185 1.#QNAN 3.614836360604185 ]


a (4 : 4): [ 1.#QNAN -1.614836360604185 1.#QNAN -1.614836360604185 ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (4 : 4): [ 1.#QNAN -1.614836360604185 1.#QNAN -1.614836360604185 ]


a (4 : 4): [ 1.#QNAN 1.614836360604185 1.#QNAN 1.614836360604185 ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (4 : 4): [ 1 1 1 1 ]
T1 (4 : 4): [ 1.#QNAN 3.614836360604185 1.#QNAN 3.614836360604185 ]


b (4 : 4): [ 1.#QNAN -2.614836360604185 1.#QNAN -2.614836360604185 ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (4 : 4): [ 1.#QNAN -2.614836360604185 1.#QNAN -2.614836360604185 ]


b (4 : 4): [ 1.#QNAN 2.614836360604185 1.#QNAN 2.614836360604185 ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (4 : 4): [ 1.#QNAN 3.614836360604185 1.#QNAN 3.614836360604185 ]
complemento = 0


ind (2 : 4): [ 1 3 ]
------------------------------ Fine which_v_indxNA_d

68: assegna1_vs_indx_d	<=>	v[indx] <- val
a (4 : 4): [ 1.#QNAN 1.614836360604185 1.#QNAN 1.614836360604185 ]
ind (2 : 4): [ 1 3 ]
val = 0


a (4 : 4): [ 0 1.614836360604185 0 1.614836360604185 ]
------------------------------ Fine assegna1_vs_indx_d

70: assegna1_vs_indx_d	<=>	v[indx] <- val
b (4 : 4): [ 1.#QNAN 2.614836360604185 1.#QNAN 2.614836360604185 ]
ind (2 : 4): [ 1 3 ]
val = 0


b (4 : 4): [ 0 2.614836360604185 0 2.614836360604185 ]
------------------------------ Fine assegna1_vs_indx_d

78: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (4 : 4): [ 0 1.614836360604185 0 1.614836360604185 ]
b (4 : 4): [ 0 2.614836360604185 0 2.614836360604185 ]


tmpm_d (4 x 2 : 4 x 2): [
	 0 0
	 1.614836360604185 2.614836360604185
	 0 0
	 1.614836360604185 2.614836360604185
 ]
------------------------------ Fine cbind2v_d

79: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (4 x 2 : 4 x 2): [
	 0 0
	 1.614836360604185 2.614836360604185
	 0 0
	 1.614836360604185 2.614836360604185
 ]


m (4 : 4): [ 0 2.614836360604185 0 2.614836360604185 ]
------------------------------ Fine max_righe_d

81: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (4 : 4): [ 0 1.614836360604185 0 1.614836360604185 ]
b (4 : 4): [ 0 2.614836360604185 0 2.614836360604185 ]
m (4 : 4): [ 0 2.614836360604185 0 2.614836360604185 ]
T1 (4 : 4): [ 1.#QNAN 3.614836360604185 1.#QNAN 3.614836360604185 ]


S1 (4 : 4): [ 1.#QNAN -0.7233623046126327 1.#QNAN -0.7233623046126327 ]
------------------------------ Fine f_aux_d

83: diff_vv_d	<=>	ris <- v1 - v2
a (4 : 4): [ 0 1.614836360604185 0 1.614836360604185 ]
toll1 (4 : 4): [ 1.#QNAN 1 1.#QNAN 1 ]


tmp_d1 (4 : 4): [ 1.#QNAN 0.6148363606041851 1.#QNAN 0.6148363606041851 ]
------------------------------ Fine diff_vv_d

84: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (4 : 4): [ 1.#QNAN 0.6148363606041851 1.#QNAN 0.6148363606041851 ]
val = 0

ind1 (0 : 4): [ ]
------------------------------ Fine which_v_indxlt_d

86: diff_vv_d	<=>	ris <- v1 - v2
b (4 : 4): [ 0 2.614836360604185 0 2.614836360604185 ]
toll1 (4 : 4): [ 1.#QNAN 1 1.#QNAN 1 ]


tmp_d1 (4 : 4): [ 1.#QNAN 1.614836360604185 1.#QNAN 1.614836360604185 ]
------------------------------ Fine diff_vv_d

87: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (4 : 4): [ 1.#QNAN 1.614836360604185 1.#QNAN 1.614836360604185 ]
val = 0


ind2 (2 : 4): [ 2 4 ]
------------------------------ Fine which_v_indxgt_d

89: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (0 : 4): [ ]
ind2 (2 : 4): [ 2 4 ]


tmp_i1 (0 : 4): [ ]
------------------------------ Fine interseca_i

91: assegna1_vs_indx_d	<=>	v[indx] <- val
S1 (4 : 4): [ 1.#QNAN -0.7233623046126327 1.#QNAN -0.7233623046126327 ]
tmp_i1 (0 : 4): [ ]
val = -1.#INF


S1 (4 : 4): [ 1.#QNAN -0.7233623046126327 1.#QNAN -0.7233623046126327 ]
------------------------------ Fine assegna1_vs_indx_d

93: assegna1_vs_indx_d	<=>	v[indx] <- val
S1 (4 : 4): [ 1.#QNAN -0.7233623046126327 1.#QNAN -0.7233623046126327 ]
ind (2 : 4): [ 1 3 ]
val = 0


S1 (4 : 4): [ 0 -0.7233623046126327 0 -0.7233623046126327 ]
------------------------------ Fine assegna1_vs_indx_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (4 : 4): [ 2 0 2 0 ]
T2 (4 : 4): [ 3.614836360604185 0.7867244574868211 3.614836360604185 0.7867244574868211 ]


a (4 : 4): [ -1.614836360604185 -0.7867244574868211 -1.614836360604185 -0.7867244574868211 ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (4 : 4): [ -1.614836360604185 -0.7867244574868211 -1.614836360604185 -0.7867244574868211 ]


a (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (4 : 4): [ 3 1 3 1 ]
T2 (4 : 4): [ 3.614836360604185 0.7867244574868211 3.614836360604185 0.7867244574868211 ]


b (4 : 4): [ -0.6148363606041851 0.2132755425131789 -0.6148363606041851 0.2132755425131789 ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (4 : 4): [ -0.6148363606041851 0.2132755425131789 -0.6148363606041851 0.2132755425131789 ]


b (4 : 4): [ 0.6148363606041851 0.2132755425131789 0.6148363606041851 0.2132755425131789 ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
b (4 : 4): [ 0.6148363606041851 0.2132755425131789 0.6148363606041851 0.2132755425131789 ]


tmpm_d (4 x 2 : 4 x 2): [
	 1.614836360604185 0.6148363606041851
	 0.7867244574868211 0.2132755425131789
	 1.614836360604185 0.6148363606041851
	 0.7867244574868211 0.2132755425131789
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (4 x 2 : 4 x 2): [
	 1.614836360604185 0.6148363606041851
	 0.7867244574868211 0.2132755425131789
	 1.614836360604185 0.6148363606041851
	 0.7867244574868211 0.2132755425131789
 ]


m (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (4 : 4): [ 3.614836360604185 0.7867244574868211 3.614836360604185 0.7867244574868211 ]
complemento = 0


ind (0 : 4): [ ]
------------------------------ Fine which_v_indxNA_d

115: assegna1_vs_indx_d	<=>	v[indx] <- val
a (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
ind (0 : 4): [ ]
val = 0


a (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
------------------------------ Fine assegna1_vs_indx_d

117: assegna1_vs_indx_d	<=>	v[indx] <- val
b (4 : 4): [ 0.6148363606041851 0.2132755425131789 0.6148363606041851 0.2132755425131789 ]
ind (0 : 4): [ ]
val = 0


b (4 : 4): [ 0.6148363606041851 0.2132755425131789 0.6148363606041851 0.2132755425131789 ]
------------------------------ Fine assegna1_vs_indx_d

119: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
b (4 : 4): [ 0.6148363606041851 0.2132755425131789 0.6148363606041851 0.2132755425131789 ]


tmpm_d (4 x 2 : 4 x 2): [
	 1.614836360604185 0.6148363606041851
	 0.7867244574868211 0.2132755425131789
	 1.614836360604185 0.6148363606041851
	 0.7867244574868211 0.2132755425131789
 ]
------------------------------ Fine cbind2v_d

120: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (4 x 2 : 4 x 2): [
	 1.614836360604185 0.6148363606041851
	 0.7867244574868211 0.2132755425131789
	 1.614836360604185 0.6148363606041851
	 0.7867244574868211 0.2132755425131789
 ]


m (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
------------------------------ Fine max_righe_d

122: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
b (4 : 4): [ 0.6148363606041851 0.2132755425131789 0.6148363606041851 0.2132755425131789 ]
m (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
T2 (4 : 4): [ 3.614836360604185 0.7867244574868211 3.614836360604185 0.7867244574868211 ]


S2 (4 : 4): [ 0.4467246092252654 1 0.4467246092252654 1 ]
------------------------------ Fine f_aux_d

124: diff_vv_d	<=>	ris <- v1 - v2
a (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
toll2 (4 : 4): [ 1 1 1 1 ]


tmp_d1 (4 : 4): [ 0.6148363606041851 -0.2132755425131789 0.6148363606041851 -0.2132755425131789 ]
------------------------------ Fine diff_vv_d

125: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (4 : 4): [ 0.6148363606041851 -0.2132755425131789 0.6148363606041851 -0.2132755425131789 ]
val = 0

ind1 (2 : 4): [ 2 4 ]
------------------------------ Fine which_v_indxlt_d

127: diff_vv_d	<=>	ris <- v1 - v2
b (4 : 4): [ 0.6148363606041851 0.2132755425131789 0.6148363606041851 0.2132755425131789 ]
toll2 (4 : 4): [ 1 1 1 1 ]


tmp_d1 (4 : 4): [ -0.3851636393958149 -0.7867244574868211 -0.3851636393958149 -0.7867244574868211 ]
------------------------------ Fine diff_vv_d

128: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (4 : 4): [ -0.3851636393958149 -0.7867244574868211 -0.3851636393958149 -0.7867244574868211 ]
val = 0


ind2 (0 : 4): [ ]
------------------------------ Fine which_v_indxgt_d

130: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (2 : 4): [ 2 4 ]
ind2 (0 : 4): [ ]
2459: esiste_v_i	<=>	elem %IN% v
elem = 2
ind2 (0 : 4): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 2
tmp_i1 (0 : 4): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 4
ind2 (0 : 4): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 4
tmp_i1 (0 : 4): [ ]


indx = 0
------------------------------ Fine esiste_v_i



tmp_i1 (0 : 4): [ ]
------------------------------ Fine interseca_i

132: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (4 : 4): [ 0.4467246092252654 1 0.4467246092252654 1 ]
tmp_i1 (0 : 4): [ ]
val = -1.#INF


S2 (4 : 4): [ 0.4467246092252654 1 0.4467246092252654 1 ]
------------------------------ Fine assegna1_vs_indx_d

134: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (4 : 4): [ 0.4467246092252654 1 0.4467246092252654 1 ]
ind (0 : 4): [ ]
val = 0


S2 (4 : 4): [ 0.4467246092252654 1 0.4467246092252654 1 ]
------------------------------ Fine assegna1_vs_indx_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (4 : 4): [ 3.614836360604185 0.7867244574868211 3.614836360604185 0.7867244574868211 ]
val = 0


ind (0 : 4): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (4 : 4): [ 0.4467246092252654 1 0.4467246092252654 1 ]
ind (0 : 4): [ ]
val = -1.#INF


S2 (4 : 4): [ 0.4467246092252654 1 0.4467246092252654 1 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (4 : 4): [ 0 -0.7233623046126327 0 -0.7233623046126327 ]
S2 (4 : 4): [ 0.4467246092252654 1 0.4467246092252654 1 ]


ris (4 : 4): [ 0.4467246092252654 0.2766376953873673 0.4467246092252654 0.2766376953873673 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
ris (4 : 4): [ 0.4467246092252654 0.2766376953873673 0.4467246092252654 0.2766376953873673 ]
div = 2.000


ris (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (4106 interne); stringhe deallocate: 0 (3701 interne)

131: which_v_indxne_d	<=>	ris <- which(v != val)
ris (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]
val = -1.#INF


indok (4 : 4): [ 1 2 3 4 ]
------------------------------ Fine which_v_indxne_d

133: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkIN (3 x 4 : 3 x 4): [
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
 ]
riga = 1
indok (4 : 4): [ 1 2 3 4 ]
val = 1


checkIN (3 x 4 : 3 x 4): [
	 1 1 1 1
	 0 0 0 0
	 0 0 0 0
 ]
------------------------------ Fine aggiungi_riga_indx_i

141: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 4
incr = 1


tmp_i1 (4 : 9): [ 1 2 3 4 ]
------------------------------ Fine seq_i

142: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (4 : 9): [ 1 2 3 4 ]
indok (4 : 4): [ 1 2 3 4 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (4 : 9): [ 1 2 3 4 ]
st = 1
end = 4


indInf (4 : 4): [ 1 2 3 4 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (4 : 4): [ 1 2 3 4 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (4 : 4): [ 1 2 3 4 ]
indx = 1


indInf (3 : 4): [ 2 3 4 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (3 : 4): [ 2 3 4 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 4): [ 2 3 4 ]
indx = 1


indInf (2 : 4): [ 3 4 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (2 : 4): [ 3 4 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 4): [ 3 4 ]
indx = 1


indInf (1 : 4): [ 4 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 4
indInf (1 : 4): [ 4 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 4): [ 4 ]
indx = 1


indInf (0 : 4): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 4): [ ]
------------------------------ Fine setdiff_i

144: copia_v_indx_d	<=>	ris <- v[indx]
ris (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]
indok (4 : 4): [ 1 2 3 4 ]


tmp_d1 (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]
------------------------------ Fine copia_v_indx_d

148: min_v_d	<=>	ris <- min(v)
tmp_d1 (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]


min = 0.1383188476936836
------------------------------ Fine min_v_d

149: assegna1_vs_indx_d	<=>	v[indx] <- val
ris (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]
indInf (0 : 4): [ ]
val = -1


ris (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]
------------------------------ Fine assegna1_vs_indx_d

159: somma_vv_d	<=>	ris <- v1 + v2
S_out (4 : 4): [ 0 0 0 0 ]
ris (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]


tmp_d1 (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (3 x 4 : 3 x 4): [
	 0 0 0 0
	 0 0 0 0
	 0 0 0 0
 ]
riga = 1
tmp_d1 (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]


ris (3 x 4 : 3 x 4): [
	 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836
	 0 0 0 0
	 0 0 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_d

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (3 x 3 : 3 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 1


tmp_i1 (0 : 9): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (3 x 3 : 3 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 0


tmp_i2 (0 : 9): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 9): [ ]
tmp_i2 (0 : 9): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

119: InitVett_d
S_out (4 : 4): [ 0 0 0 0 ]
val = 0


S_out (4 : 4): [ 0 0 0 0 ]
------------------------------ Fine InitVett_d

122: InitVett_i
tmp_i1 (4 : 9): [ 1 2 3 4 ]
val = 1


tmp_i1 (4 : 9): [ 1 1 1 1 ]
------------------------------ Fine InitVett_i

123: aggiungi_mv_riga_i	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
checkOUT (3 x 4 : 3 x 4): [
	 1 1 1 1
	 0 0 0 0
	 0 0 0 0
 ]
riga = 2
tmp_i1 (4 : 9): [ 1 1 1 1 ]


checkOUT (3 x 4 : 3 x 4): [
	 1 1 1 1
	 1 1 1 1
	 0 0 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_i

128: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 1 3 1 0 ]
h (4 : 5): [ 5 4 1 2 ]


tmp_i1 (4 : 9): [ 0 1 0 1 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (4 : 9): [ 0 1 0 1 ]
s = 1


ind (4 : 4): [ 1 2 1 2 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (4 : 9): [ 0 1 0 1 ]
s = 1


tmp_i1 (4 : 4): [ 1 2 1 2 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (4 : 4): [ 1 2 1 2 ]


T1 (4 : 4): [ 1.#QNAN 3.614836360604185 1.#QNAN 3.614836360604185 ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (4 : 4): [ 1 2 1 2 ]
s = 1


tmp_i1 (4 : 4): [ 2 3 2 3 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STin (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (4 : 4): [ 2 3 2 3 ]


T2 (4 : 4): [ 3.614836360604185 0.7867244574868211 3.614836360604185 0.7867244574868211 ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (4 : 9): [ 0 1 0 1 ]
s = 1


tmp_i1 (4 : 4): [ 1 2 1 2 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 2 2 0 1 0 0 0 ]
tmp_i1 (4 : 4): [ 1 2 1 2 ]


old1 (4 : 4): [ 2 2 2 2 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (4 : 4): [ 1 2 1 2 ]
s = 1


tmp_i1 (4 : 4): [ 2 3 2 3 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_in (7 : 7): [ 2 2 0 1 0 0 0 ]
tmp_i1 (4 : 4): [ 2 3 2 3 ]


old2 (4 : 4): [ 2 0 2 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (4 : 4): [ 2 2 2 2 ]
s = -1


new1 (4 : 4): [ 1 1 1 1 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (4 : 4): [ 2 0 2 0 ]
s = 1


new2 (4 : 4): [ 3 1 3 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (4 : 9): [ 0 1 0 1 ]
s = 1


tmp_i1 (4 : 4): [ 1 2 1 2 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (4 : 4): [ 1 2 1 2 ]


toll1 (4 : 4): [ 1.#QNAN 1 1.#QNAN 1 ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (4 : 4): [ 1 2 1 2 ]
s = 1


tmp_i1 (4 : 4): [ 2 3 2 3 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (4 : 4): [ 2 3 2 3 ]


toll2 (4 : 4): [ 1 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (4 : 4): [ 2 2 2 2 ]
T1 (4 : 4): [ 1.#QNAN 3.614836360604185 1.#QNAN 3.614836360604185 ]


a (4 : 4): [ 1.#QNAN -1.614836360604185 1.#QNAN -1.614836360604185 ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (4 : 4): [ 1.#QNAN -1.614836360604185 1.#QNAN -1.614836360604185 ]


a (4 : 4): [ 1.#QNAN 1.614836360604185 1.#QNAN 1.614836360604185 ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (4 : 4): [ 1 1 1 1 ]
T1 (4 : 4): [ 1.#QNAN 3.614836360604185 1.#QNAN 3.614836360604185 ]


b (4 : 4): [ 1.#QNAN -2.614836360604185 1.#QNAN -2.614836360604185 ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (4 : 4): [ 1.#QNAN -2.614836360604185 1.#QNAN -2.614836360604185 ]


b (4 : 4): [ 1.#QNAN 2.614836360604185 1.#QNAN 2.614836360604185 ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (4 : 4): [ 1.#QNAN 3.614836360604185 1.#QNAN 3.614836360604185 ]
complemento = 0


ind (2 : 4): [ 1 3 ]
------------------------------ Fine which_v_indxNA_d

68: assegna1_vs_indx_d	<=>	v[indx] <- val
a (4 : 4): [ 1.#QNAN 1.614836360604185 1.#QNAN 1.614836360604185 ]
ind (2 : 4): [ 1 3 ]
val = 0


a (4 : 4): [ 0 1.614836360604185 0 1.614836360604185 ]
------------------------------ Fine assegna1_vs_indx_d

70: assegna1_vs_indx_d	<=>	v[indx] <- val
b (4 : 4): [ 1.#QNAN 2.614836360604185 1.#QNAN 2.614836360604185 ]
ind (2 : 4): [ 1 3 ]
val = 0


b (4 : 4): [ 0 2.614836360604185 0 2.614836360604185 ]
------------------------------ Fine assegna1_vs_indx_d

78: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (4 : 4): [ 0 1.614836360604185 0 1.614836360604185 ]
b (4 : 4): [ 0 2.614836360604185 0 2.614836360604185 ]


tmpm_d (4 x 2 : 4 x 2): [
	 0 0
	 1.614836360604185 2.614836360604185
	 0 0
	 1.614836360604185 2.614836360604185
 ]
------------------------------ Fine cbind2v_d

79: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (4 x 2 : 4 x 2): [
	 0 0
	 1.614836360604185 2.614836360604185
	 0 0
	 1.614836360604185 2.614836360604185
 ]


m (4 : 4): [ 0 2.614836360604185 0 2.614836360604185 ]
------------------------------ Fine max_righe_d

81: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (4 : 4): [ 0 1.614836360604185 0 1.614836360604185 ]
b (4 : 4): [ 0 2.614836360604185 0 2.614836360604185 ]
m (4 : 4): [ 0 2.614836360604185 0 2.614836360604185 ]
T1 (4 : 4): [ 1.#QNAN 3.614836360604185 1.#QNAN 3.614836360604185 ]


S1 (4 : 4): [ 1.#QNAN -0.7233623046126327 1.#QNAN -0.7233623046126327 ]
------------------------------ Fine f_aux_d

83: diff_vv_d	<=>	ris <- v1 - v2
a (4 : 4): [ 0 1.614836360604185 0 1.614836360604185 ]
toll1 (4 : 4): [ 1.#QNAN 1 1.#QNAN 1 ]


tmp_d1 (4 : 4): [ 1.#QNAN 0.6148363606041851 1.#QNAN 0.6148363606041851 ]
------------------------------ Fine diff_vv_d

84: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (4 : 4): [ 1.#QNAN 0.6148363606041851 1.#QNAN 0.6148363606041851 ]
val = 0

ind1 (0 : 4): [ ]
------------------------------ Fine which_v_indxlt_d

86: diff_vv_d	<=>	ris <- v1 - v2
b (4 : 4): [ 0 2.614836360604185 0 2.614836360604185 ]
toll1 (4 : 4): [ 1.#QNAN 1 1.#QNAN 1 ]


tmp_d1 (4 : 4): [ 1.#QNAN 1.614836360604185 1.#QNAN 1.614836360604185 ]
------------------------------ Fine diff_vv_d

87: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (4 : 4): [ 1.#QNAN 1.614836360604185 1.#QNAN 1.614836360604185 ]
val = 0


ind2 (2 : 4): [ 2 4 ]
------------------------------ Fine which_v_indxgt_d

89: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (0 : 4): [ ]
ind2 (2 : 4): [ 2 4 ]


tmp_i1 (0 : 4): [ ]
------------------------------ Fine interseca_i

91: assegna1_vs_indx_d	<=>	v[indx] <- val
S1 (4 : 4): [ 1.#QNAN -0.7233623046126327 1.#QNAN -0.7233623046126327 ]
tmp_i1 (0 : 4): [ ]
val = -1.#INF


S1 (4 : 4): [ 1.#QNAN -0.7233623046126327 1.#QNAN -0.7233623046126327 ]
------------------------------ Fine assegna1_vs_indx_d

93: assegna1_vs_indx_d	<=>	v[indx] <- val
S1 (4 : 4): [ 1.#QNAN -0.7233623046126327 1.#QNAN -0.7233623046126327 ]
ind (2 : 4): [ 1 3 ]
val = 0


S1 (4 : 4): [ 0 -0.7233623046126327 0 -0.7233623046126327 ]
------------------------------ Fine assegna1_vs_indx_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (4 : 4): [ 2 0 2 0 ]
T2 (4 : 4): [ 3.614836360604185 0.7867244574868211 3.614836360604185 0.7867244574868211 ]


a (4 : 4): [ -1.614836360604185 -0.7867244574868211 -1.614836360604185 -0.7867244574868211 ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (4 : 4): [ -1.614836360604185 -0.7867244574868211 -1.614836360604185 -0.7867244574868211 ]


a (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (4 : 4): [ 3 1 3 1 ]
T2 (4 : 4): [ 3.614836360604185 0.7867244574868211 3.614836360604185 0.7867244574868211 ]


b (4 : 4): [ -0.6148363606041851 0.2132755425131789 -0.6148363606041851 0.2132755425131789 ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (4 : 4): [ -0.6148363606041851 0.2132755425131789 -0.6148363606041851 0.2132755425131789 ]


b (4 : 4): [ 0.6148363606041851 0.2132755425131789 0.6148363606041851 0.2132755425131789 ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
b (4 : 4): [ 0.6148363606041851 0.2132755425131789 0.6148363606041851 0.2132755425131789 ]


tmpm_d (4 x 2 : 4 x 2): [
	 1.614836360604185 0.6148363606041851
	 0.7867244574868211 0.2132755425131789
	 1.614836360604185 0.6148363606041851
	 0.7867244574868211 0.2132755425131789
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (4 x 2 : 4 x 2): [
	 1.614836360604185 0.6148363606041851
	 0.7867244574868211 0.2132755425131789
	 1.614836360604185 0.6148363606041851
	 0.7867244574868211 0.2132755425131789
 ]


m (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (4 : 4): [ 3.614836360604185 0.7867244574868211 3.614836360604185 0.7867244574868211 ]
complemento = 0


ind (0 : 4): [ ]
------------------------------ Fine which_v_indxNA_d

115: assegna1_vs_indx_d	<=>	v[indx] <- val
a (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
ind (0 : 4): [ ]
val = 0


a (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
------------------------------ Fine assegna1_vs_indx_d

117: assegna1_vs_indx_d	<=>	v[indx] <- val
b (4 : 4): [ 0.6148363606041851 0.2132755425131789 0.6148363606041851 0.2132755425131789 ]
ind (0 : 4): [ ]
val = 0


b (4 : 4): [ 0.6148363606041851 0.2132755425131789 0.6148363606041851 0.2132755425131789 ]
------------------------------ Fine assegna1_vs_indx_d

119: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
b (4 : 4): [ 0.6148363606041851 0.2132755425131789 0.6148363606041851 0.2132755425131789 ]


tmpm_d (4 x 2 : 4 x 2): [
	 1.614836360604185 0.6148363606041851
	 0.7867244574868211 0.2132755425131789
	 1.614836360604185 0.6148363606041851
	 0.7867244574868211 0.2132755425131789
 ]
------------------------------ Fine cbind2v_d

120: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (4 x 2 : 4 x 2): [
	 1.614836360604185 0.6148363606041851
	 0.7867244574868211 0.2132755425131789
	 1.614836360604185 0.6148363606041851
	 0.7867244574868211 0.2132755425131789
 ]


m (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
------------------------------ Fine max_righe_d

122: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
b (4 : 4): [ 0.6148363606041851 0.2132755425131789 0.6148363606041851 0.2132755425131789 ]
m (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
T2 (4 : 4): [ 3.614836360604185 0.7867244574868211 3.614836360604185 0.7867244574868211 ]


S2 (4 : 4): [ 0.4467246092252654 1 0.4467246092252654 1 ]
------------------------------ Fine f_aux_d

124: diff_vv_d	<=>	ris <- v1 - v2
a (4 : 4): [ 1.614836360604185 0.7867244574868211 1.614836360604185 0.7867244574868211 ]
toll2 (4 : 4): [ 1 1 1 1 ]


tmp_d1 (4 : 4): [ 0.6148363606041851 -0.2132755425131789 0.6148363606041851 -0.2132755425131789 ]
------------------------------ Fine diff_vv_d

125: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (4 : 4): [ 0.6148363606041851 -0.2132755425131789 0.6148363606041851 -0.2132755425131789 ]
val = 0

ind1 (2 : 4): [ 2 4 ]
------------------------------ Fine which_v_indxlt_d

127: diff_vv_d	<=>	ris <- v1 - v2
b (4 : 4): [ 0.6148363606041851 0.2132755425131789 0.6148363606041851 0.2132755425131789 ]
toll2 (4 : 4): [ 1 1 1 1 ]


tmp_d1 (4 : 4): [ -0.3851636393958149 -0.7867244574868211 -0.3851636393958149 -0.7867244574868211 ]
------------------------------ Fine diff_vv_d

128: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (4 : 4): [ -0.3851636393958149 -0.7867244574868211 -0.3851636393958149 -0.7867244574868211 ]
val = 0


ind2 (0 : 4): [ ]
------------------------------ Fine which_v_indxgt_d

130: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (2 : 4): [ 2 4 ]
ind2 (0 : 4): [ ]
2459: esiste_v_i	<=>	elem %IN% v
elem = 2
ind2 (0 : 4): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 2
tmp_i1 (0 : 4): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 4
ind2 (0 : 4): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 4
tmp_i1 (0 : 4): [ ]


indx = 0
------------------------------ Fine esiste_v_i



tmp_i1 (0 : 4): [ ]
------------------------------ Fine interseca_i

132: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (4 : 4): [ 0.4467246092252654 1 0.4467246092252654 1 ]
tmp_i1 (0 : 4): [ ]
val = -1.#INF


S2 (4 : 4): [ 0.4467246092252654 1 0.4467246092252654 1 ]
------------------------------ Fine assegna1_vs_indx_d

134: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (4 : 4): [ 0.4467246092252654 1 0.4467246092252654 1 ]
ind (0 : 4): [ ]
val = 0


S2 (4 : 4): [ 0.4467246092252654 1 0.4467246092252654 1 ]
------------------------------ Fine assegna1_vs_indx_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (4 : 4): [ 3.614836360604185 0.7867244574868211 3.614836360604185 0.7867244574868211 ]
val = 0


ind (0 : 4): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (4 : 4): [ 0.4467246092252654 1 0.4467246092252654 1 ]
ind (0 : 4): [ ]
val = -1.#INF


S2 (4 : 4): [ 0.4467246092252654 1 0.4467246092252654 1 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (4 : 4): [ 0 -0.7233623046126327 0 -0.7233623046126327 ]
S2 (4 : 4): [ 0.4467246092252654 1 0.4467246092252654 1 ]


ris (4 : 4): [ 0.4467246092252654 0.2766376953873673 0.4467246092252654 0.2766376953873673 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
ris (4 : 4): [ 0.4467246092252654 0.2766376953873673 0.4467246092252654 0.2766376953873673 ]
div = 2.000


ris (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (4221 interne); stringhe deallocate: 0 (3801 interne)

131: which_v_indxne_d	<=>	ris <- which(v != val)
ris (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]
val = -1.#INF


indok (4 : 4): [ 1 2 3 4 ]
------------------------------ Fine which_v_indxne_d

133: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkIN (3 x 4 : 3 x 4): [
	 1 1 1 1
	 0 0 0 0
	 0 0 0 0
 ]
riga = 2
indok (4 : 4): [ 1 2 3 4 ]
val = 1


checkIN (3 x 4 : 3 x 4): [
	 1 1 1 1
	 1 1 1 1
	 0 0 0 0
 ]
------------------------------ Fine aggiungi_riga_indx_i

141: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 4
incr = 1


tmp_i1 (4 : 9): [ 1 2 3 4 ]
------------------------------ Fine seq_i

142: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (4 : 9): [ 1 2 3 4 ]
indok (4 : 4): [ 1 2 3 4 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (4 : 9): [ 1 2 3 4 ]
st = 1
end = 4


indInf (4 : 4): [ 1 2 3 4 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (4 : 4): [ 1 2 3 4 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (4 : 4): [ 1 2 3 4 ]
indx = 1


indInf (3 : 4): [ 2 3 4 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (3 : 4): [ 2 3 4 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 4): [ 2 3 4 ]
indx = 1


indInf (2 : 4): [ 3 4 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (2 : 4): [ 3 4 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 4): [ 3 4 ]
indx = 1


indInf (1 : 4): [ 4 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 4
indInf (1 : 4): [ 4 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 4): [ 4 ]
indx = 1


indInf (0 : 4): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 4): [ ]
------------------------------ Fine setdiff_i

144: copia_v_indx_d	<=>	ris <- v[indx]
ris (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]
indok (4 : 4): [ 1 2 3 4 ]


tmp_d1 (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]
------------------------------ Fine copia_v_indx_d

148: min_v_d	<=>	ris <- min(v)
tmp_d1 (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]


min = 0.1383188476936836
------------------------------ Fine min_v_d

149: assegna1_vs_indx_d	<=>	v[indx] <- val
ris (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]
indInf (0 : 4): [ ]
val = -1


ris (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]
------------------------------ Fine assegna1_vs_indx_d

159: somma_vv_d	<=>	ris <- v1 + v2
S_out (4 : 4): [ 0 0 0 0 ]
ris (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]


tmp_d1 (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (3 x 4 : 3 x 4): [
	 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836
	 0 0 0 0
	 0 0 0 0
 ]
riga = 2
tmp_d1 (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]


ris (3 x 4 : 3 x 4): [
	 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836
	 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836
	 0 0 0 0
 ]
------------------------------ Fine aggiungi_mv_riga_d

73: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (3 x 3 : 3 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 1, val = 0


tmp_i1 (0 : 9): [ ]
------------------------------ Fine which_m_colindxeq_i

74: which_m_colindxeq_i	<=>	ris <- which(m[, c] == val)
memory (3 x 3 : 3 x 3): [
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
	 -2147483648 -2147483648 -2147483648
 ]
colonna = 2, val = 2


tmp_i2 (0 : 9): [ ]
------------------------------ Fine which_m_colindxeq_i

75: interseca_i	<=>	ris <- intersect(v1, v2)
tmp_i1 (0 : 9): [ ]
tmp_i2 (0 : 9): [ ]


ind1 (0 : 0): [ ]
------------------------------ Fine interseca_i

92: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sout (5 : 5): [ 2 2 0 1 0 ]
h (4 : 5): [ 5 4 1 2 ]


tmp_i1 (4 : 9): [ 0 1 2 2 ]
------------------------------ Fine assegna_v_indxNA_i


***score***
31: somma_vs_i	<=>	ris <- v + s
tmp_i1 (4 : 9): [ 0 1 2 2 ]
s = 2


ind (4 : 4): [ 2 3 4 4 ]
------------------------------ Fine somma_vs_i

33: somma_vs_i	<=>	ris <- v + s
tmp_i1 (4 : 9): [ 0 1 2 2 ]
s = 1


tmp_i1 (4 : 4): [ 1 2 3 3 ]
------------------------------ Fine somma_vs_i

35: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (4 : 4): [ 1 2 3 3 ]


T1 (4 : 4): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.7867244574868211 ]
------------------------------ Fine assegna_v_indxNA_d

37: somma_vs_i	<=>	ris <- v + s
ind (4 : 4): [ 2 3 4 4 ]
s = 1


tmp_i1 (4 : 4): [ 3 4 5 5 ]
------------------------------ Fine somma_vs_i

38: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
STout (7 : 7): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1047983952675442 0 ]
tmp_i1 (4 : 4): [ 3 4 5 5 ]


T2 (4 : 4): [ 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1712208549059974 ]
------------------------------ Fine assegna_v_indxNA_d

40: somma_vs_i	<=>	ris <- v + s
tmp_i1 (4 : 9): [ 0 1 2 2 ]
s = 1


tmp_i1 (4 : 4): [ 1 2 3 3 ]
------------------------------ Fine somma_vs_i

41: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 2 1 2 0 0 0 0 ]
tmp_i1 (4 : 4): [ 1 2 3 3 ]


old1 (4 : 4): [ 2 1 2 2 ]
------------------------------ Fine assegna_v_indxNA_d

43: somma_vs_i	<=>	ris <- v + s
ind (4 : 4): [ 2 3 4 4 ]
s = 1


tmp_i1 (4 : 4): [ 3 4 5 5 ]
------------------------------ Fine somma_vs_i

44: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
Freq_out (7 : 7): [ 2 1 2 0 0 0 0 ]
tmp_i1 (4 : 4): [ 3 4 5 5 ]


old2 (4 : 4): [ 2 0 0 0 ]
------------------------------ Fine assegna_v_indxNA_d

46: somma_vs_d	<=>	ris <- v + s
old1 (4 : 4): [ 2 1 2 2 ]
s = -1


new1 (4 : 4): [ 1 0 1 1 ]
------------------------------ Fine somma_vs_d

48: somma_vs_d	<=>	ris <- v + s
old2 (4 : 4): [ 2 0 0 0 ]
s = 1


new2 (4 : 4): [ 3 1 1 1 ]
------------------------------ Fine somma_vs_d

50: somma_vs_i	<=>	ris <- v + s
tmp_i1 (4 : 9): [ 0 1 2 2 ]
s = 1


tmp_i1 (4 : 4): [ 1 2 3 3 ]
------------------------------ Fine somma_vs_i

52: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (4 : 4): [ 1 2 3 3 ]


toll1 (4 : 4): [ 1.#QNAN 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

54: somma_vs_i	<=>	ris <- v + s
ind (4 : 4): [ 2 3 4 4 ]
s = 1


tmp_i1 (4 : 4): [ 3 4 5 5 ]
------------------------------ Fine somma_vs_i

56: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
toll (7 : 7): [ 1.#QNAN 1 1 1 1 1 1 ]
tmp_i1 (4 : 4): [ 3 4 5 5 ]


toll2 (4 : 4): [ 1 1 1 1 ]
------------------------------ Fine assegna_v_indxNA_d

58: diff_vv_d	<=>	ris <- v1 - v2
old1 (4 : 4): [ 2 1 2 2 ]
T1 (4 : 4): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.7867244574868211 ]


a (4 : 4): [ 1.#QNAN -2.614836360604185 1.213275542513179 1.213275542513179 ]
------------------------------ Fine diff_vv_d

59: abs1_v_d	<=>	v <- abs(v)
a (4 : 4): [ 1.#QNAN -2.614836360604185 1.213275542513179 1.213275542513179 ]


a (4 : 4): [ 1.#QNAN 2.614836360604185 1.213275542513179 1.213275542513179 ]
------------------------------ Fine abs1_v_d

61: diff_vv_d	<=>	ris <- v1 - v2
new1 (4 : 4): [ 1 0 1 1 ]
T1 (4 : 4): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.7867244574868211 ]


b (4 : 4): [ 1.#QNAN -3.614836360604185 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine diff_vv_d

62: abs1_v_d	<=>	v <- abs(v)
b (4 : 4): [ 1.#QNAN -3.614836360604185 0.2132755425131789 0.2132755425131789 ]


b (4 : 4): [ 1.#QNAN 3.614836360604185 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine abs1_v_d

64: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T1 (4 : 4): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.7867244574868211 ]
complemento = 0


ind (1 : 4): [ 1 ]
------------------------------ Fine which_v_indxNA_d

68: assegna1_vs_indx_d	<=>	v[indx] <- val
a (4 : 4): [ 1.#QNAN 2.614836360604185 1.213275542513179 1.213275542513179 ]
ind (1 : 4): [ 1 ]
val = 0


a (4 : 4): [ 0 2.614836360604185 1.213275542513179 1.213275542513179 ]
------------------------------ Fine assegna1_vs_indx_d

70: assegna1_vs_indx_d	<=>	v[indx] <- val
b (4 : 4): [ 1.#QNAN 3.614836360604185 0.2132755425131789 0.2132755425131789 ]
ind (1 : 4): [ 1 ]
val = 0


b (4 : 4): [ 0 3.614836360604185 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine assegna1_vs_indx_d

78: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (4 : 4): [ 0 2.614836360604185 1.213275542513179 1.213275542513179 ]
b (4 : 4): [ 0 3.614836360604185 0.2132755425131789 0.2132755425131789 ]


tmpm_d (4 x 2 : 4 x 2): [
	 0 0
	 2.614836360604185 3.614836360604185
	 1.213275542513179 0.2132755425131789
	 1.213275542513179 0.2132755425131789
 ]
------------------------------ Fine cbind2v_d

79: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (4 x 2 : 4 x 2): [
	 0 0
	 2.614836360604185 3.614836360604185
	 1.213275542513179 0.2132755425131789
	 1.213275542513179 0.2132755425131789
 ]


m (4 : 4): [ 0 3.614836360604185 1.213275542513179 1.213275542513179 ]
------------------------------ Fine max_righe_d

81: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (4 : 4): [ 0 2.614836360604185 1.213275542513179 1.213275542513179 ]
b (4 : 4): [ 0 3.614836360604185 0.2132755425131789 0.2132755425131789 ]
m (4 : 4): [ 0 3.614836360604185 1.213275542513179 1.213275542513179 ]
T1 (4 : 4): [ 1.#QNAN 3.614836360604185 0.7867244574868211 0.7867244574868211 ]


S1 (4 : 4): [ 1.#QNAN -1 1.542186124973118 1.542186124973118 ]
------------------------------ Fine f_aux_d

83: diff_vv_d	<=>	ris <- v1 - v2
a (4 : 4): [ 0 2.614836360604185 1.213275542513179 1.213275542513179 ]
toll1 (4 : 4): [ 1.#QNAN 1 1 1 ]


tmp_d1 (4 : 4): [ 1.#QNAN 1.614836360604185 0.2132755425131789 0.2132755425131789 ]
------------------------------ Fine diff_vv_d

84: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (4 : 4): [ 1.#QNAN 1.614836360604185 0.2132755425131789 0.2132755425131789 ]
val = 0

ind1 (0 : 4): [ ]
------------------------------ Fine which_v_indxlt_d

86: diff_vv_d	<=>	ris <- v1 - v2
b (4 : 4): [ 0 3.614836360604185 0.2132755425131789 0.2132755425131789 ]
toll1 (4 : 4): [ 1.#QNAN 1 1 1 ]


tmp_d1 (4 : 4): [ 1.#QNAN 2.614836360604185 -0.7867244574868211 -0.7867244574868211 ]
------------------------------ Fine diff_vv_d

87: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (4 : 4): [ 1.#QNAN 2.614836360604185 -0.7867244574868211 -0.7867244574868211 ]
val = 0


ind2 (1 : 4): [ 2 ]
------------------------------ Fine which_v_indxgt_d

89: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (0 : 4): [ ]
ind2 (1 : 4): [ 2 ]


tmp_i1 (0 : 4): [ ]
------------------------------ Fine interseca_i

91: assegna1_vs_indx_d	<=>	v[indx] <- val
S1 (4 : 4): [ 1.#QNAN -1 1.542186124973118 1.542186124973118 ]
tmp_i1 (0 : 4): [ ]
val = -1.#INF


S1 (4 : 4): [ 1.#QNAN -1 1.542186124973118 1.542186124973118 ]
------------------------------ Fine assegna1_vs_indx_d

93: assegna1_vs_indx_d	<=>	v[indx] <- val
S1 (4 : 4): [ 1.#QNAN -1 1.542186124973118 1.542186124973118 ]
ind (1 : 4): [ 1 ]
val = 0


S1 (4 : 4): [ 0 -1 1.542186124973118 1.542186124973118 ]
------------------------------ Fine assegna1_vs_indx_d

102: diff_vv_d	<=>	ris <- v1 - v2
old2 (4 : 4): [ 2 0 0 0 ]
T2 (4 : 4): [ 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1712208549059974 ]


a (4 : 4): [ 1.213275542513179 -0.3224199317354524 -0.1712208549059974 -0.1712208549059974 ]
------------------------------ Fine diff_vv_d

103: abs1_v_d	<=>	v <- abs(v)
a (4 : 4): [ 1.213275542513179 -0.3224199317354524 -0.1712208549059974 -0.1712208549059974 ]


a (4 : 4): [ 1.213275542513179 0.3224199317354524 0.1712208549059974 0.1712208549059974 ]
------------------------------ Fine abs1_v_d

105: diff_vv_d	<=>	ris <- v1 - v2
new2 (4 : 4): [ 3 1 1 1 ]
T2 (4 : 4): [ 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1712208549059974 ]


b (4 : 4): [ 2.213275542513179 0.6775800682645476 0.8287791450940025 0.8287791450940025 ]
------------------------------ Fine diff_vv_d

106: abs1_v_d	<=>	v <- abs(v)
b (4 : 4): [ 2.213275542513179 0.6775800682645476 0.8287791450940025 0.8287791450940025 ]


b (4 : 4): [ 2.213275542513179 0.6775800682645476 0.8287791450940025 0.8287791450940025 ]
------------------------------ Fine abs1_v_d

108: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (4 : 4): [ 1.213275542513179 0.3224199317354524 0.1712208549059974 0.1712208549059974 ]
b (4 : 4): [ 2.213275542513179 0.6775800682645476 0.8287791450940025 0.8287791450940025 ]


tmpm_d (4 x 2 : 4 x 2): [
	 1.213275542513179 2.213275542513179
	 0.3224199317354524 0.6775800682645476
	 0.1712208549059974 0.8287791450940025
	 0.1712208549059974 0.8287791450940025
 ]
------------------------------ Fine cbind2v_d

109: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (4 x 2 : 4 x 2): [
	 1.213275542513179 2.213275542513179
	 0.3224199317354524 0.6775800682645476
	 0.1712208549059974 0.8287791450940025
	 0.1712208549059974 0.8287791450940025
 ]


m (4 : 4): [ 2.213275542513179 0.6775800682645476 0.8287791450940025 0.8287791450940025 ]
------------------------------ Fine max_righe_d

111: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
T2 (4 : 4): [ 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1712208549059974 ]
complemento = 0


ind (0 : 4): [ ]
------------------------------ Fine which_v_indxNA_d

115: assegna1_vs_indx_d	<=>	v[indx] <- val
a (4 : 4): [ 1.213275542513179 0.3224199317354524 0.1712208549059974 0.1712208549059974 ]
ind (0 : 4): [ ]
val = 0


a (4 : 4): [ 1.213275542513179 0.3224199317354524 0.1712208549059974 0.1712208549059974 ]
------------------------------ Fine assegna1_vs_indx_d

117: assegna1_vs_indx_d	<=>	v[indx] <- val
b (4 : 4): [ 2.213275542513179 0.6775800682645476 0.8287791450940025 0.8287791450940025 ]
ind (0 : 4): [ ]
val = 0


b (4 : 4): [ 2.213275542513179 0.6775800682645476 0.8287791450940025 0.8287791450940025 ]
------------------------------ Fine assegna1_vs_indx_d

119: cbind2v_d	<=>	ris <- cbind(v1, v2)
a (4 : 4): [ 1.213275542513179 0.3224199317354524 0.1712208549059974 0.1712208549059974 ]
b (4 : 4): [ 2.213275542513179 0.6775800682645476 0.8287791450940025 0.8287791450940025 ]


tmpm_d (4 x 2 : 4 x 2): [
	 1.213275542513179 2.213275542513179
	 0.3224199317354524 0.6775800682645476
	 0.1712208549059974 0.8287791450940025
	 0.1712208549059974 0.8287791450940025
 ]
------------------------------ Fine cbind2v_d

120: max_righe_d	<=>	ris <- apply(m, 1, max)
tmpm_d (4 x 2 : 4 x 2): [
	 1.213275542513179 2.213275542513179
	 0.3224199317354524 0.6775800682645476
	 0.1712208549059974 0.8287791450940025
	 0.1712208549059974 0.8287791450940025
 ]


m (4 : 4): [ 2.213275542513179 0.6775800682645476 0.8287791450940025 0.8287791450940025 ]
------------------------------ Fine max_righe_d

122: f_aux_d	<=>	ris <- (sign(a - b)) * m / t
a (4 : 4): [ 1.213275542513179 0.3224199317354524 0.1712208549059974 0.1712208549059974 ]
b (4 : 4): [ 2.213275542513179 0.6775800682645476 0.8287791450940025 0.8287791450940025 ]
m (4 : 4): [ 2.213275542513179 0.6775800682645476 0.8287791450940025 0.8287791450940025 ]
T2 (4 : 4): [ 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1712208549059974 ]


S2 (4 : 4): [ -2.813279187459676 -2.101545225871788 -4.840410039705815 -4.840410039705815 ]
------------------------------ Fine f_aux_d

124: diff_vv_d	<=>	ris <- v1 - v2
a (4 : 4): [ 1.213275542513179 0.3224199317354524 0.1712208549059974 0.1712208549059974 ]
toll2 (4 : 4): [ 1 1 1 1 ]


tmp_d1 (4 : 4): [ 0.2132755425131789 -0.6775800682645476 -0.8287791450940025 -0.8287791450940025 ]
------------------------------ Fine diff_vv_d

125: which_v_indxlt_d	<=>	ris <- which(v<val)
tmp_d1 (4 : 4): [ 0.2132755425131789 -0.6775800682645476 -0.8287791450940025 -0.8287791450940025 ]
val = 0

ind1 (3 : 4): [ 2 3 4 ]
------------------------------ Fine which_v_indxlt_d

127: diff_vv_d	<=>	ris <- v1 - v2
b (4 : 4): [ 2.213275542513179 0.6775800682645476 0.8287791450940025 0.8287791450940025 ]
toll2 (4 : 4): [ 1 1 1 1 ]


tmp_d1 (4 : 4): [ 1.213275542513179 -0.3224199317354524 -0.1712208549059975 -0.1712208549059975 ]
------------------------------ Fine diff_vv_d

128: which_v_indxgt_d	<=>	ris <- which(v > val)
tmp_d1 (4 : 4): [ 1.213275542513179 -0.3224199317354524 -0.1712208549059975 -0.1712208549059975 ]
val = 0


ind2 (1 : 4): [ 1 ]
------------------------------ Fine which_v_indxgt_d

130: interseca_i	<=>	ris <- intersect(v1, v2)
ind1 (3 : 4): [ 2 3 4 ]
ind2 (1 : 4): [ 1 ]
2459: esiste_v_i	<=>	elem %IN% v
elem = 2
ind2 (1 : 4): [ 1 ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 2
tmp_i1 (0 : 4): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 3
ind2 (1 : 4): [ 1 ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 3
tmp_i1 (0 : 4): [ ]


indx = 0
------------------------------ Fine esiste_v_i

2459: esiste_v_i	<=>	elem %IN% v
elem = 4
ind2 (1 : 4): [ 1 ]


indx = 0
------------------------------ Fine esiste_v_i

2460: esiste_v_i	<=>	elem %IN% v
elem = 4
tmp_i1 (0 : 4): [ ]


indx = 0
------------------------------ Fine esiste_v_i



tmp_i1 (0 : 4): [ ]
------------------------------ Fine interseca_i

132: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (4 : 4): [ -2.813279187459676 -2.101545225871788 -4.840410039705815 -4.840410039705815 ]
tmp_i1 (0 : 4): [ ]
val = -1.#INF


S2 (4 : 4): [ -2.813279187459676 -2.101545225871788 -4.840410039705815 -4.840410039705815 ]
------------------------------ Fine assegna1_vs_indx_d

134: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (4 : 4): [ -2.813279187459676 -2.101545225871788 -4.840410039705815 -4.840410039705815 ]
ind (0 : 4): [ ]
val = 0


S2 (4 : 4): [ -2.813279187459676 -2.101545225871788 -4.840410039705815 -4.840410039705815 ]
------------------------------ Fine assegna1_vs_indx_d

143: which_v_indxeq_d	<=>	ris <- which(v==val)
T2 (4 : 4): [ 0.7867244574868211 0.3224199317354524 0.1712208549059974 0.1712208549059974 ]
val = 0


ind (0 : 4): [ ]
------------------------------ Fine which_v_indxeq_d

145: assegna1_vs_indx_d	<=>	v[indx] <- val
S2 (4 : 4): [ -2.813279187459676 -2.101545225871788 -4.840410039705815 -4.840410039705815 ]
ind (0 : 4): [ ]
val = -1.#INF


S2 (4 : 4): [ -2.813279187459676 -2.101545225871788 -4.840410039705815 -4.840410039705815 ]
------------------------------ Fine assegna1_vs_indx_d

147: somma_vv_d	<=>	ris <- v1 + v2
S1 (4 : 4): [ 0 -1 1.542186124973118 1.542186124973118 ]
S2 (4 : 4): [ -2.813279187459676 -2.101545225871788 -4.840410039705815 -4.840410039705815 ]


S_out (4 : 4): [ -2.813279187459676 -3.101545225871788 -3.298223914732697 -3.298223914732697 ]
------------------------------ Fine somma_vv_d

148: dividi1_vs_d	<=>	v <- v / div
S_out (4 : 4): [ -2.813279187459676 -3.101545225871788 -3.298223914732697 -3.298223914732697 ]
div = 2.000


S_out (4 : 4): [ -1.406639593729838 -1.550772612935894 -1.649111957366349 -1.649111957366349 ]
------------------------------ Fine dividi1_vs_d


Stringhe allocate: 5 (4321 interne); stringhe deallocate: 0 (3901 interne)

95: which_v_indxne_d	<=>	ris <- which(v != val)
S_out (4 : 4): [ -1.406639593729838 -1.550772612935894 -1.649111957366349 -1.649111957366349 ]
val = -1.#INF


indok (4 : 4): [ 1 2 3 4 ]
------------------------------ Fine which_v_indxne_d

97: aggiungi_ms_rigaindx_i	<=>	m[riga, indx] <- val # con riga <= dim(m)[0] + 1
checkOUT (3 x 4 : 3 x 4): [
	 1 1 1 1
	 1 1 1 1
	 0 0 0 0
 ]
riga = 3
indok (4 : 4): [ 1 2 3 4 ]
val = 1


checkOUT (3 x 4 : 3 x 4): [
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
 ]
------------------------------ Fine aggiungi_riga_indx_i

104: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 4
incr = 1


tmp_i1 (4 : 9): [ 1 2 3 4 ]
------------------------------ Fine seq_i

105: setdiff_i	<=>	ris <- setdiff(v1, v2)
tmp_i1 (4 : 9): [ 1 2 3 4 ]
indok (4 : 4): [ 1 2 3 4 ]
3091: copia_v_i	<=>	ris[st:end] <- v[st:end]
tmp_i1 (4 : 9): [ 1 2 3 4 ]
st = 1
end = 4


indInf (4 : 4): [ 1 2 3 4 ]
------------------------------ Fine copia_v_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 1
indInf (4 : 4): [ 1 2 3 4 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (4 : 4): [ 1 2 3 4 ]
indx = 1


indInf (3 : 4): [ 2 3 4 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 2
indInf (3 : 4): [ 2 3 4 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (3 : 4): [ 2 3 4 ]
indx = 1


indInf (2 : 4): [ 3 4 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 3
indInf (2 : 4): [ 3 4 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (2 : 4): [ 3 4 ]
indx = 1


indInf (1 : 4): [ 4 ]
------------------------------ Fine elimina1_indx_i

3093: esiste_v_i	<=>	elem %IN% v
elem = 4
indInf (1 : 4): [ 4 ]


indx = 1
------------------------------ Fine esiste_v_i

3095: elimina1_indx_i	<=>	v <- v[-indx]
indInf (1 : 4): [ 4 ]
indx = 1


indInf (0 : 4): [ ]
------------------------------ Fine elimina1_indx_i



indInf (0 : 4): [ ]
------------------------------ Fine setdiff_i

107: copia_v_indx_d	<=>	ris <- v[indx]
S_out (4 : 4): [ -1.406639593729838 -1.550772612935894 -1.649111957366349 -1.649111957366349 ]
indok (4 : 4): [ 1 2 3 4 ]


tmp_d1 (4 : 4): [ -1.406639593729838 -1.550772612935894 -1.649111957366349 -1.649111957366349 ]
------------------------------ Fine copia_v_indx_d

111: min_v_d	<=>	ris <- min(v)
tmp_d1 (4 : 4): [ -1.406639593729838 -1.550772612935894 -1.649111957366349 -1.649111957366349 ]


min = -1.649111957366349
------------------------------ Fine min_v_d

112: assegna1_vs_indx_d	<=>	v[indx] <- val
S_out (4 : 4): [ -1.406639593729838 -1.550772612935894 -1.649111957366349 -1.649111957366349 ]
indInf (0 : 4): [ ]
val = -2.649111957366348


S_out (4 : 4): [ -1.406639593729838 -1.550772612935894 -1.649111957366349 -1.649111957366349 ]
------------------------------ Fine assegna1_vs_indx_d

155: InitVett_d
ris (4 : 4): [ 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836 ]
val = 0


ris (4 : 4): [ 0 0 0 0 ]
------------------------------ Fine InitVett_d

156: aggiungi_ms_riga_i	<=>	m[riga,] <- val # riga <= dim(m)[0] + 1
checkIN (3 x 4 : 3 x 4): [
	 1 1 1 1
	 1 1 1 1
	 0 0 0 0
 ]
riga = 3, val = 1


checkIN (3 x 4 : 3 x 4): [
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
 ]
------------------------------ Fine aggiungi_ms_riga_i

159: somma_vv_d	<=>	ris <- v1 + v2
S_out (4 : 4): [ -1.406639593729838 -1.550772612935894 -1.649111957366349 -1.649111957366349 ]
ris (4 : 4): [ 0 0 0 0 ]


tmp_d1 (4 : 4): [ -1.406639593729838 -1.550772612935894 -1.649111957366349 -1.649111957366349 ]
------------------------------ Fine somma_vv_d

160: aggiungi_mv_riga_d	<=>	m[riga,] <- v # riga <= dim(m)[0] + 1
ris (3 x 4 : 3 x 4): [
	 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836
	 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836
	 0 0 0 0
 ]
riga = 3
tmp_d1 (4 : 4): [ -1.406639593729838 -1.550772612935894 -1.649111957366349 -1.649111957366349 ]


ris (3 x 4 : 3 x 4): [
	 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836
	 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836
	 -1.406639593729838 -1.550772612935894 -1.649111957366349 -1.649111957366349
 ]
------------------------------ Fine aggiungi_mv_riga_d

168: somma_m_d	<=>	ris <- sum(m)
ris (3 x 4 : 3 x 4): [
	 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836
	 0.2233623046126327 0.1383188476936836 0.2233623046126327 0.1383188476936836
	 -1.406639593729838 -1.550772612935894 -1.649111957366349 -1.649111957366349
 ]


ris: -4.808911512173164
------------------------------ Fine somma_m_d

173: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
checkIN (3 x 4 : 3 x 4): [
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
 ]


aus (4 : 4): [ 3 3 3 3 ]
------------------------------ Fine somma_colonne_i

175: which_v_indxne_i	<=>	ris <- which(v != val)
aus (4 : 4): [ 3 3 3 3 ]
val = 0


tmp_i1 (4 : 9): [ 1 2 3 4 ]
------------------------------ Fine which_v_indxne_i

186: somma_righe_i	<=>	ris <- apply(m, 1, sum)
checkIN (3 x 4 : 3 x 4): [
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
 ]


rs (3 : 3): [ 4 4 4 ]
------------------------------ Fine somma_righe_i

188: ordine_i	<=>	ris <- order(v, decreasing=decr)
rs (3 : 3): [ 4 4 4 ]
decr = 0


ord_ind (3 : 3): [ 1 2 3 ]
------------------------------ Fine ordine_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (3 x 4 : 3 x 4): [
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
 ]
r = 1
val = 0


I_add (4 : 12): [ 1 2 3 4 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
I (0 : 0): [ ]
I_add (4 : 12): [ 1 2 3 4 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (4 : 4): [ 1 2 3 4 ]


ris (4 : 4): [ 1 2 3 4 ]
------------------------------ Fine elimina_doppi_i



ris (4 : 4): [ 1 2 3 4 ]
------------------------------ Fine unione1_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (3 x 4 : 3 x 4): [
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
 ]
r = 2
val = 0


I_add (4 : 12): [ 1 2 3 4 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
ris (4 : 4): [ 1 2 3 4 ]
I_add (4 : 12): [ 1 2 3 4 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (8 : 8): [ 1 2 3 4 1 2 3 4 ]


ris (4 : 8): [ 1 2 3 4 ]
------------------------------ Fine elimina_doppi_i



ris (4 : 8): [ 1 2 3 4 ]
------------------------------ Fine unione1_i

201: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkIN (3 x 4 : 3 x 4): [
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
 ]
r = 3
val = 0


I_add (4 : 12): [ 1 2 3 4 ]
------------------------------ Fine which_m_rowindxne_i

203: unione1_i	<=>	v1 <- union(v1, v2)
ris (4 : 8): [ 1 2 3 4 ]
I_add (4 : 12): [ 1 2 3 4 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (8 : 8): [ 1 2 3 4 1 2 3 4 ]


ris (4 : 8): [ 1 2 3 4 ]
------------------------------ Fine elimina_doppi_i



ris (4 : 8): [ 1 2 3 4 ]
------------------------------ Fine unione1_i

216: assegna1_mindxlt_i	<=>	m1[which(m2<val1)] <- val2
checkOUT (3 x 4 : 3 x 4): [
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
 ]
checkOUT (3 x 4 : 3 x 4): [
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
 ]
val1 = 0
val2 = 0


checkOUT (3 x 4 : 3 x 4): [
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
 ]
------------------------------ Fine assegna1_mindxlt_i

218: assegna1_m_indxgt_i	<=>	m1[which(m2>val1)] <- val2
checkOUT (3 x 4 : 3 x 4): [
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
 ]
checkOUT (3 x 4 : 3 x 4): [
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
 ]
val1 = 0
val2 = 1


checkOUT (3 x 4 : 3 x 4): [
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
 ]
------------------------------ Fine assegna1_m_indxgt_i

220: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
checkOUT (3 x 4 : 3 x 4): [
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
 ]


aus (4 : 4): [ 3 3 3 3 ]
------------------------------ Fine somma_colonne_i

222: which_v_indxne_i	<=>	ris <- which(v != val)
aus (4 : 4): [ 3 3 3 3 ]
val = 0


tmp_i1 (4 : 9): [ 1 2 3 4 ]
------------------------------ Fine which_v_indxne_i

232: somma_righe_i	<=>	ris <- apply(m, 1, sum)
checkOUT (3 x 4 : 3 x 4): [
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
 ]


rs (3 : 3): [ 4 4 4 ]
------------------------------ Fine somma_righe_i

234: ordine_i	<=>	ris <- order(v, decreasing=decr)
rs (3 : 3): [ 4 4 4 ]
decr = 0


ord_ind (3 : 3): [ 1 2 3 ]
------------------------------ Fine ordine_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (3 x 4 : 3 x 4): [
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
 ]
r = 1
val = 0


I_add (4 : 12): [ 1 2 3 4 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (0 : 8): [ ]
I_add (4 : 12): [ 1 2 3 4 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (4 : 4): [ 1 2 3 4 ]


ris (4 : 4): [ 1 2 3 4 ]
------------------------------ Fine elimina_doppi_i



ris (4 : 4): [ 1 2 3 4 ]
------------------------------ Fine unione1_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (3 x 4 : 3 x 4): [
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
 ]
r = 2
val = 0


I_add (4 : 12): [ 1 2 3 4 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (4 : 4): [ 1 2 3 4 ]
I_add (4 : 12): [ 1 2 3 4 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (8 : 8): [ 1 2 3 4 1 2 3 4 ]


ris (4 : 8): [ 1 2 3 4 ]
------------------------------ Fine elimina_doppi_i



ris (4 : 8): [ 1 2 3 4 ]
------------------------------ Fine unione1_i

246: which_m_rowindxne_i	<=>	ris <- which(m[r, ] != val)
checkOUT (3 x 4 : 3 x 4): [
	 1 1 1 1
	 1 1 1 1
	 1 1 1 1
 ]
r = 3
val = 0


I_add (4 : 12): [ 1 2 3 4 ]
------------------------------ Fine which_m_rowindxne_i

248: unione1_i	<=>	v1 <- union(v1, v2)
ris (4 : 8): [ 1 2 3 4 ]
I_add (4 : 12): [ 1 2 3 4 ]
3003: elimina_doppi_i	<=>	ris <- union(v, v)
I (8 : 8): [ 1 2 3 4 1 2 3 4 ]


ris (4 : 8): [ 1 2 3 4 ]
------------------------------ Fine elimina_doppi_i



ris (4 : 8): [ 1 2 3 4 ]
------------------------------ Fine unione1_i


Stringhe allocate: 5 (4406 interne); stringhe deallocate: 0 (4061 interne)

90: seq_i	<=>	ris <- seq(da, a, incr)
da = 3
a = 3
incr = 1


ris->indices (1 : 1): [ 3 ]
------------------------------ Fine seq_i


Stringhe allocate: 5 (4411 interne); stringhe deallocate: 0 (4076 interne)

143: vettore3s_d		<=>	ris <- c(el1, el2, el3)
el1 = -2.504386649204387, el2 = -2.200208859770841, el3 = -1.602970504057721


prob_mod (3 : 3): [ -2.504386649204387 -2.200208859770841 -1.602970504057721 ]
------------------------------ Fine vettore3s_d

145: assegna1_v_indxeq_d	<=>	v[which(v==val1)] <- val2
prob_mod (3 : 3): [ -2.504386649204387 -2.200208859770841 -1.602970504057721 ]
prob_mod (3 : 3): [ -2.504386649204387 -2.200208859770841 -1.602970504057721 ]
val1 = 0
val2 = 1.#QNAN


prob_mod (3 : 3): [ -2.504386649204387 -2.200208859770841 -1.602970504057721 ]
------------------------------ Fine assegna1_v_indxeq_d

147: which_v_indxNA_d	<=>	ris <- which(is_na(v)) oppure which(!is_na(v))
prob_mod (3 : 3): [ -2.504386649204387 -2.200208859770841 -1.602970504057721 ]
complemento = 1


ind (3 : 3): [ 1 2 3 ]
------------------------------ Fine which_v_indxNA_d

153: copia_v_indx_d	<=>	ris <- v[indx]
prob_mod (3 : 3): [ -2.504386649204387 -2.200208859770841 -1.602970504057721 ]
ind (3 : 3): [ 1 2 3 ]


tmp1_d (3 : 16): [ -2.504386649204387 -2.200208859770841 -1.602970504057721 ]
------------------------------ Fine copia_v_indx_d

154: min_v_d	<=>	ris <- min(v)
tmp1_d (3 : 16): [ -2.504386649204387 -2.200208859770841 -1.602970504057721 ]


min = -2.504386649204387
------------------------------ Fine min_v_d

157: somma1_vs_d	<=>	v <- v + s
prob_mod (3 : 3): [ -2.504386649204387 -2.200208859770841 -1.602970504057721 ]
s = 2.615497760315498


prob_mod (3 : 3): [ 0.1111111111111112 0.415288900544657 1.012527256257777 ]
------------------------------ Fine somma1_vs_d

160: assegna1_v_indxNA_d	<=>	v1[which(is.na(v2))] <- val oppure v1[which(!is.na(v2))] <- val
prob_mod (3 : 3): [ 0.1111111111111112 0.415288900544657 1.012527256257777 ]
prob_mod (3 : 3): [ 0.1111111111111112 0.415288900544657 1.012527256257777 ]
val = 0
complemento = 0


prob_mod (3 : 3): [ 0.1111111111111112 0.415288900544657 1.012527256257777 ]
------------------------------ Fine assegna1_v_indxNA_d

162: somma_v_d	<=>	ris <- sum(v, na.rm=canc_NA)
prob_mod (3 : 3): [ 0.1111111111111112 0.415288900544657 1.012527256257777 ]
canc_NA = 0



ris: 1.538927267913545
------------------------------ Fine somma_v_d

162: dividi1_vs_d	<=>	v <- v / div
prob_mod (3 : 3): [ 0.1111111111111112 0.415288900544657 1.012527256257777 ]
div = 1.539


prob_mod (3 : 3): [ 0.07220036542841558 0.2698560933992024 0.6579435411723821 ]
------------------------------ Fine dividi1_vs_d

164: vettore3s_i		<=>	ris <- c(el1, el2, el3)
el1 = 1, el2 = 2, el3 = 3


tmp1_i (3 : 10): [ 1 2 3 ]
------------------------------ Fine vettore3s_i


*** sampleB_p ***

*** sample_p ***
tmp1_i (3 : 10): [ 1 2 3 ]
k = 1, replace = 0
prob_mod (3 : 3): [ 0.07220036542841558 0.2698560933992024 0.6579435411723821 ]


ris (1 : 1): [ 1 ]
*****************************************


Stringhe allocate: 5 (4411 interne); stringhe deallocate: 0 (4076 interne)


*** assign_nodes ***
35: copia_v_i	<=>	ris[st:end] <- v[st:end]
h (4 : 5): [ 5 4 1 2 ]
st = 1
end = 4


or_h (4 : 4): [ 5 4 1 2 ]
------------------------------ Fine copia_v_i

37: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 4
incr = 1


aus_h (4 : 4): [ 1 2 3 4 ]
------------------------------ Fine seq_i

43: InitVett_i
index (4 : 4): [ 79850952 1663985004 1918959616 25390 ]
val = 0


index (4 : 4): [ 0 0 0 0 ]
------------------------------ Fine InitVett_i

45: somma_righe_i	<=>	ris <- apply(m, 1, sum)
ris (4 x 4 : 4 x 4): [
	 0 1 0 1
	 0 0 1 0
	 0 0 0 1
	 0 0 0 0
 ]


M_in (4 : 4): [ 2 1 1 0 ]
------------------------------ Fine somma_righe_i

47: ordine_i	<=>	ris <- order(v, decreasing=decr)
M_in (4 : 4): [ 2 1 1 0 ]
decr = 1


Ord (4 : 4): [ 1 2 3 4 ]
------------------------------ Fine ordine_i

52: riga_d	<=>	ris <- m[r,]
ris (4 x 4 : 4 x 4): [
	 0.5 -1 0.5 -1
	 0.5850434569189491 -1.768320746036155 -0.05631724583670231 -0.1413607027556514
	 0.5850434569189491 -1.768320746036155 -0.05631724583670231 -0.1413607027556514
	 -1.406639593729838 -1.550772612935894 -1.649111957366349 -1.649111957366349
 ]
r = 1

p (4 : 4): [ 0.5 -1 0.5 -1 ]
------------------------------ Fine riga_d

54: which_v_indxle_d	<=>	ris <- which(v<=val)
p (4 : 4): [ 0.5 -1 0.5 -1 ]
val = 0


tmp_i (2 : 4): [ 2 4 ]
------------------------------ Fine which_v_indxle_d

57: min_v_d	<=>	ris <- min(v)
p (4 : 4): [ 0.5 -1 0.5 -1 ]


min = -1
------------------------------ Fine min_v_d

58: somma1_vs_d	<=>	v <- v + s
p (4 : 4): [ 0.5 -1 0.5 -1 ]
s = 1.0625


p (4 : 4): [ 1.5625 0.0625 1.5625 0.0625 ]
------------------------------ Fine somma1_vs_d

61: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 1 3 1 0 ]
h (4 : 5): [ 5 4 1 2 ]


Sin_h (4 : 4): [ 0 1 0 1 ]
------------------------------ Fine assegna_v_indxNA_i

66: which_v_indxgt_i	<=>	ris <- which(v > val)
Sin_h (4 : 4): [ 0 1 0 1 ]
val = 3


ind (0 : 4): [ ]
------------------------------ Fine which_v_indxgt_i

72: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
p (4 : 4): [ 1.5625 0.0625 1.5625 0.0625 ]
aus_h (4 : 4): [ 1 2 3 4 ]


tmp_d (4 : 4): [ 1.5625 0.0625 1.5625 0.0625 ]
------------------------------ Fine assegna_v_indxNA_d

73: somma_v_d	<=>	ris <- sum(v, na.rm=canc_NA)
tmp_d (4 : 4): [ 1.5625 0.0625 1.5625 0.0625 ]
canc_NA = 0



ris: 3.25
------------------------------ Fine somma_v_d

74: dividi_vs_d	ris <- v / div
tmp_d (4 : 4): [ 1.5625 0.0625 1.5625 0.0625 ]
div = 3.250


p (4 : 4): [ 0.4807692307692308 0.01923076923076923 0.4807692307692308 0.01923076923076923 ]
------------------------------ Fine dividi_vs_d


*** sampleB_p ***

*** sample_p ***
h (4 : 5): [ 5 4 1 2 ]
k = 1, replace = 0
p (4 : 4): [ 0.4807692307692308 0.01923076923076923 0.4807692307692308 0.01923076923076923 ]


ris (1 : 1): [ 5 ]
*****************************************


Stringhe allocate: 5 (4466 interne); stringhe deallocate: 0 (4076 interne)

81: setdiff1_i	<=>	v1 <- setdiff(v1, v2)
h (4 : 5): [ 5 4 1 2 ]
ris (1 : 1): [ 5 ]
2048: esiste_v_i	<=>	elem %IN% v
elem = 5
h (4 : 5): [ 5 4 1 2 ]


indx = 1
------------------------------ Fine esiste_v_i

2050: elimina1_indx_i	<=>	v <- v[-indx]
h (4 : 5): [ 5 4 1 2 ]
indx = 1


h (3 : 5): [ 4 1 2 ]
------------------------------ Fine elimina1_indx_i



h (3 : 5): [ 4 1 2 ]
------------------------------ Fine setdiff1_i

83: which_vv_eq_i	<=>	ris <- which(v1 == v2)
or_h (4 : 4): [ 5 4 1 2 ]
ris (1 : 1): [ 5 ]
2017: esiste_v_i	<=>	elem %IN% v
elem = 5
or_h (4 : 4): [ 5 4 1 2 ]


indx = 1
------------------------------ Fine esiste_v_i



tmp_i (1 : 4): [ 5 ]
------------------------------ Fine which_vv_eq_i

84: setdiff1_i	<=>	v1 <- setdiff(v1, v2)
aus_h (4 : 4): [ 1 2 3 4 ]
tmp_i (1 : 4): [ 5 ]
2048: esiste_v_i	<=>	elem %IN% v
elem = 5
aus_h (4 : 4): [ 1 2 3 4 ]


indx = 0
------------------------------ Fine esiste_v_i



aus_h (4 : 4): [ 1 2 3 4 ]
------------------------------ Fine setdiff1_i

52: riga_d	<=>	ris <- m[r,]
ris (4 x 4 : 4 x 4): [
	 0.5 -1 0.5 -1
	 0.5850434569189491 -1.768320746036155 -0.05631724583670231 -0.1413607027556514
	 0.5850434569189491 -1.768320746036155 -0.05631724583670231 -0.1413607027556514
	 -1.406639593729838 -1.550772612935894 -1.649111957366349 -1.649111957366349
 ]
r = 2

p (4 : 4): [ 0.5850434569189491 -1.768320746036155 -0.05631724583670231 -0.1413607027556514 ]
------------------------------ Fine riga_d

54: which_v_indxle_d	<=>	ris <- which(v<=val)
p (4 : 4): [ 0.5850434569189491 -1.768320746036155 -0.05631724583670231 -0.1413607027556514 ]
val = 0


tmp_i (3 : 4): [ 2 3 4 ]
------------------------------ Fine which_v_indxle_d

57: min_v_d	<=>	ris <- min(v)
p (4 : 4): [ 0.5850434569189491 -1.768320746036155 -0.05631724583670231 -0.1413607027556514 ]


min = -1.768320746036155
------------------------------ Fine min_v_d

58: somma1_vs_d	<=>	v <- v + s
p (4 : 4): [ 0.5850434569189491 -1.768320746036155 -0.05631724583670231 -0.1413607027556514 ]
s = 1.830820746036155


p (4 : 4): [ 2.415864202955103 0.0625 1.774503500199452 1.689460043280503 ]
------------------------------ Fine somma1_vs_d

61: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 1 3 1 0 ]
h (3 : 5): [ 4 1 2 ]


Sin_h (3 : 4): [ 1 0 1 ]
------------------------------ Fine assegna_v_indxNA_i

66: which_v_indxgt_i	<=>	ris <- which(v > val)
Sin_h (3 : 4): [ 1 0 1 ]
val = 4


ind (0 : 4): [ ]
------------------------------ Fine which_v_indxgt_i

72: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
p (4 : 4): [ 2.415864202955103 0.0625 1.774503500199452 1.689460043280503 ]
aus_h (4 : 4): [ 1 2 3 4 ]


tmp_d (4 : 4): [ 2.415864202955103 0.0625 1.774503500199452 1.689460043280503 ]
------------------------------ Fine assegna_v_indxNA_d

73: somma_v_d	<=>	ris <- sum(v, na.rm=canc_NA)
tmp_d (4 : 4): [ 2.415864202955103 0.0625 1.774503500199452 1.689460043280503 ]
canc_NA = 0



ris: 5.942327746435058
------------------------------ Fine somma_v_d

74: dividi_vs_d	ris <- v / div
tmp_d (4 : 4): [ 2.415864202955103 0.0625 1.774503500199452 1.689460043280503 ]
div = 5.942


p (4 : 4): [ 0.406551827169822 0.01051776385735291 0.2986209404663044 0.2843094685065208 ]
------------------------------ Fine dividi_vs_d


*** sampleB_p ***

*** sample_p ***
h (3 : 5): [ 4 1 2 ]
k = 1, replace = 0
p (4 : 4): [ 0.406551827169822 0.01051776385735291 0.2986209404663044 0.2843094685065208 ]


ris (1 : 1): [ 1 ]
*****************************************


Stringhe allocate: 5 (4466 interne); stringhe deallocate: 0 (4076 interne)

81: setdiff1_i	<=>	v1 <- setdiff(v1, v2)
h (3 : 5): [ 4 1 2 ]
ris (1 : 1): [ 1 ]
2048: esiste_v_i	<=>	elem %IN% v
elem = 1
h (3 : 5): [ 4 1 2 ]


indx = 2
------------------------------ Fine esiste_v_i

2050: elimina1_indx_i	<=>	v <- v[-indx]
h (3 : 5): [ 4 1 2 ]
indx = 2


h (2 : 5): [ 4 2 ]
------------------------------ Fine elimina1_indx_i



h (2 : 5): [ 4 2 ]
------------------------------ Fine setdiff1_i

83: which_vv_eq_i	<=>	ris <- which(v1 == v2)
or_h (4 : 4): [ 5 4 1 2 ]
ris (1 : 1): [ 1 ]
2017: esiste_v_i	<=>	elem %IN% v
elem = 1
or_h (4 : 4): [ 5 4 1 2 ]


indx = 3
------------------------------ Fine esiste_v_i



tmp_i (1 : 4): [ 1 ]
------------------------------ Fine which_vv_eq_i

84: setdiff1_i	<=>	v1 <- setdiff(v1, v2)
aus_h (4 : 4): [ 1 2 3 4 ]
tmp_i (1 : 4): [ 1 ]
2048: esiste_v_i	<=>	elem %IN% v
elem = 1
aus_h (4 : 4): [ 1 2 3 4 ]


indx = 1
------------------------------ Fine esiste_v_i

2050: elimina1_indx_i	<=>	v <- v[-indx]
aus_h (4 : 4): [ 1 2 3 4 ]
indx = 1


aus_h (3 : 4): [ 2 3 4 ]
------------------------------ Fine elimina1_indx_i



aus_h (3 : 4): [ 2 3 4 ]
------------------------------ Fine setdiff1_i

52: riga_d	<=>	ris <- m[r,]
ris (4 x 4 : 4 x 4): [
	 0.5 -1 0.5 -1
	 0.5850434569189491 -1.768320746036155 -0.05631724583670231 -0.1413607027556514
	 0.5850434569189491 -1.768320746036155 -0.05631724583670231 -0.1413607027556514
	 -1.406639593729838 -1.550772612935894 -1.649111957366349 -1.649111957366349
 ]
r = 3

p (4 : 4): [ 0.5850434569189491 -1.768320746036155 -0.05631724583670231 -0.1413607027556514 ]
------------------------------ Fine riga_d

54: which_v_indxle_d	<=>	ris <- which(v<=val)
p (4 : 4): [ 0.5850434569189491 -1.768320746036155 -0.05631724583670231 -0.1413607027556514 ]
val = 0


tmp_i (3 : 4): [ 2 3 4 ]
------------------------------ Fine which_v_indxle_d

57: min_v_d	<=>	ris <- min(v)
p (4 : 4): [ 0.5850434569189491 -1.768320746036155 -0.05631724583670231 -0.1413607027556514 ]


min = -1.768320746036155
------------------------------ Fine min_v_d

58: somma1_vs_d	<=>	v <- v + s
p (4 : 4): [ 0.5850434569189491 -1.768320746036155 -0.05631724583670231 -0.1413607027556514 ]
s = 1.830820746036155


p (4 : 4): [ 2.415864202955103 0.0625 1.774503500199452 1.689460043280503 ]
------------------------------ Fine somma1_vs_d

61: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 1 3 1 0 ]
h (2 : 5): [ 4 2 ]


Sin_h (2 : 4): [ 1 1 ]
------------------------------ Fine assegna_v_indxNA_i

66: which_v_indxgt_i	<=>	ris <- which(v > val)
Sin_h (2 : 4): [ 1 1 ]
val = 4


ind (0 : 4): [ ]
------------------------------ Fine which_v_indxgt_i

72: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
p (4 : 4): [ 2.415864202955103 0.0625 1.774503500199452 1.689460043280503 ]
aus_h (3 : 4): [ 2 3 4 ]


tmp_d (3 : 4): [ 0.0625 1.774503500199452 1.689460043280503 ]
------------------------------ Fine assegna_v_indxNA_d

73: somma_v_d	<=>	ris <- sum(v, na.rm=canc_NA)
tmp_d (3 : 4): [ 0.0625 1.774503500199452 1.689460043280503 ]
canc_NA = 0



ris: 3.526463543479955
------------------------------ Fine somma_v_d

74: dividi_vs_d	ris <- v / div
tmp_d (3 : 4): [ 0.0625 1.774503500199452 1.689460043280503 ]
div = 3.526


p (3 : 4): [ 0.01772313799062397 0.5031963263820818 0.4790805356272943 ]
------------------------------ Fine dividi_vs_d


*** sampleB_p ***

*** sample_p ***
h (2 : 5): [ 4 2 ]
k = 1, replace = 0
p (3 : 4): [ 0.01772313799062397 0.5031963263820818 0.4790805356272943 ]


ris (1 : 1): [ 2 ]
*****************************************


Stringhe allocate: 5 (4466 interne); stringhe deallocate: 0 (4076 interne)

81: setdiff1_i	<=>	v1 <- setdiff(v1, v2)
h (2 : 5): [ 4 2 ]
ris (1 : 1): [ 2 ]
2048: esiste_v_i	<=>	elem %IN% v
elem = 2
h (2 : 5): [ 4 2 ]


indx = 2
------------------------------ Fine esiste_v_i

2050: elimina1_indx_i	<=>	v <- v[-indx]
h (2 : 5): [ 4 2 ]
indx = 2


h (1 : 5): [ 4 ]
------------------------------ Fine elimina1_indx_i



h (1 : 5): [ 4 ]
------------------------------ Fine setdiff1_i

83: which_vv_eq_i	<=>	ris <- which(v1 == v2)
or_h (4 : 4): [ 5 4 1 2 ]
ris (1 : 1): [ 2 ]
2017: esiste_v_i	<=>	elem %IN% v
elem = 2
or_h (4 : 4): [ 5 4 1 2 ]


indx = 4
------------------------------ Fine esiste_v_i



tmp_i (1 : 4): [ 2 ]
------------------------------ Fine which_vv_eq_i

84: setdiff1_i	<=>	v1 <- setdiff(v1, v2)
aus_h (3 : 4): [ 2 3 4 ]
tmp_i (1 : 4): [ 2 ]
2048: esiste_v_i	<=>	elem %IN% v
elem = 2
aus_h (3 : 4): [ 2 3 4 ]


indx = 1
------------------------------ Fine esiste_v_i

2050: elimina1_indx_i	<=>	v <- v[-indx]
aus_h (3 : 4): [ 2 3 4 ]
indx = 1


aus_h (2 : 4): [ 3 4 ]
------------------------------ Fine elimina1_indx_i



aus_h (2 : 4): [ 3 4 ]
------------------------------ Fine setdiff1_i

52: riga_d	<=>	ris <- m[r,]
ris (4 x 4 : 4 x 4): [
	 0.5 -1 0.5 -1
	 0.5850434569189491 -1.768320746036155 -0.05631724583670231 -0.1413607027556514
	 0.5850434569189491 -1.768320746036155 -0.05631724583670231 -0.1413607027556514
	 -1.406639593729838 -1.550772612935894 -1.649111957366349 -1.649111957366349
 ]
r = 4

p (4 : 4): [ -1.406639593729838 -1.550772612935894 -1.649111957366349 -1.649111957366349 ]
------------------------------ Fine riga_d

54: which_v_indxle_d	<=>	ris <- which(v<=val)
p (4 : 4): [ -1.406639593729838 -1.550772612935894 -1.649111957366349 -1.649111957366349 ]
val = 0


tmp_i (4 : 4): [ 1 2 3 4 ]
------------------------------ Fine which_v_indxle_d

57: min_v_d	<=>	ris <- min(v)
p (4 : 4): [ -1.406639593729838 -1.550772612935894 -1.649111957366349 -1.649111957366349 ]


min = -1.649111957366349
------------------------------ Fine min_v_d

58: somma1_vs_d	<=>	v <- v + s
p (4 : 4): [ -1.406639593729838 -1.550772612935894 -1.649111957366349 -1.649111957366349 ]
s = 1.711611957366349


p (4 : 4): [ 0.3049723636365105 0.1608393444304548 0.0625 0.0625 ]
------------------------------ Fine somma1_vs_d

61: assegna_v_indxNA_i	<=>	ris <-v[indx] # con sforamento dei limiti
Sin (5 : 5): [ 0 1 3 1 0 ]
h (1 : 5): [ 4 ]


Sin_h (1 : 4): [ 1 ]
------------------------------ Fine assegna_v_indxNA_i

66: which_v_indxgt_i	<=>	ris <- which(v > val)
Sin_h (1 : 4): [ 1 ]
val = 5


ind (0 : 4): [ ]
------------------------------ Fine which_v_indxgt_i

72: assegna_v_indxNA_d	<=>	ris <-v[indx] # con sforamento dei limiti
p (4 : 4): [ 0.3049723636365105 0.1608393444304548 0.0625 0.0625 ]
aus_h (2 : 4): [ 3 4 ]


tmp_d (2 : 4): [ 0.0625 0.0625 ]
------------------------------ Fine assegna_v_indxNA_d

73: somma_v_d	<=>	ris <- sum(v, na.rm=canc_NA)
tmp_d (2 : 4): [ 0.0625 0.0625 ]
canc_NA = 0



ris: 0.125
------------------------------ Fine somma_v_d

74: dividi_vs_d	ris <- v / div
tmp_d (2 : 4): [ 0.0625 0.0625 ]
div = 0.125


p (2 : 4): [ 0.5 0.5 ]
------------------------------ Fine dividi_vs_d


*** sampleB_p ***
25: rep_v_i	<=>	ris <- rep(v, rip)
h (1 : 5): [ 4 ]
rip = 1


ris (1 : 1): [ 4 ]
------------------------------ Fine rep_v_i

81: setdiff1_i	<=>	v1 <- setdiff(v1, v2)
h (1 : 5): [ 4 ]
ris (1 : 1): [ 4 ]
2048: esiste_v_i	<=>	elem %IN% v
elem = 4
h (1 : 5): [ 4 ]


indx = 1
------------------------------ Fine esiste_v_i

2050: elimina1_indx_i	<=>	v <- v[-indx]
h (1 : 5): [ 4 ]
indx = 1


h (0 : 5): [ ]
------------------------------ Fine elimina1_indx_i



h (0 : 5): [ ]
------------------------------ Fine setdiff1_i

83: which_vv_eq_i	<=>	ris <- which(v1 == v2)
or_h (4 : 4): [ 5 4 1 2 ]
ris (1 : 1): [ 4 ]
2017: esiste_v_i	<=>	elem %IN% v
elem = 4
or_h (4 : 4): [ 5 4 1 2 ]


indx = 2
------------------------------ Fine esiste_v_i



tmp_i (1 : 4): [ 4 ]
------------------------------ Fine which_vv_eq_i

84: setdiff1_i	<=>	v1 <- setdiff(v1, v2)
aus_h (2 : 4): [ 3 4 ]
tmp_i (1 : 4): [ 4 ]
2048: esiste_v_i	<=>	elem %IN% v
elem = 4
aus_h (2 : 4): [ 3 4 ]


indx = 2
------------------------------ Fine esiste_v_i

2050: elimina1_indx_i	<=>	v <- v[-indx]
aus_h (2 : 4): [ 3 4 ]
indx = 2


aus_h (1 : 4): [ 3 ]
------------------------------ Fine elimina1_indx_i



aus_h (1 : 4): [ 3 ]
------------------------------ Fine setdiff1_i

101: which_m_rowindxeq_i	<=>	ris <- which(m[r,] == val)
ris (4 x 4 : 4 x 4): [
	 0 1 0 1
	 0 0 1 0
	 0 0 0 1
	 0 0 0 0
 ]
riga = 1
val = 1


ind (2 : 24): [ 2 4 ]
------------------------------ Fine which_m_rowindxeq_i

103: copia_v_indx_i	<=>	ris <- v[indx]
index (4 : 4): [ 5 1 2 4 ]
ind (2 : 24): [ 2 4 ]


co (2 : 2): [ 1 4 ]
------------------------------ Fine copia_v_indx_i

105: assegna1_m_vv_i	<=>	m[vr, vc] <- val
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 1 0 0 0 0
	 1 1 0 1 0
	 0 1 0 0 0
	 0 0 0 0 0
 ]
ri (1 : 1): [ 5 ]
co (2 : 2): [ 1 4 ]
val = 1


Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 1 0 0 0 0
	 1 1 0 1 0
	 0 1 0 0 0
	 1 0 0 1 0
 ]
------------------------------ Fine assegna1_m_vv_i

107: esiste_v_i	<=>	elem %IN% v
elem = 1
ris->indices (1 : 1): [ 1 ]


indx = 1
------------------------------ Fine esiste_v_i

109: accoda1_vv_i	<=>	v1 <- c(v1, v2)
ris (0 : 4): [ ]
ri (1 : 1): [ 5 ]


ris (1 : 4): [ 5 ]
------------------------------ Fine accoda_vv_i

101: which_m_rowindxeq_i	<=>	ris <- which(m[r,] == val)
ris (4 x 4 : 4 x 4): [
	 0 1 0 1
	 0 0 1 0
	 0 0 0 1
	 0 0 0 0
 ]
riga = 2
val = 1


ind (1 : 24): [ 3 ]
------------------------------ Fine which_m_rowindxeq_i

103: copia_v_indx_i	<=>	ris <- v[indx]
index (4 : 4): [ 5 1 2 4 ]
ind (1 : 24): [ 3 ]


co (1 : 2): [ 2 ]
------------------------------ Fine copia_v_indx_i

105: assegna1_m_vv_i	<=>	m[vr, vc] <- val
Mdiscr (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 1 0 0 0 0
	 1 1 0 1 0
	 0 1 0 0 0
	 1 0 0 1 0
 ]
ri (1 : 1): [ 1 ]
co (1 : 2): [ 2 ]
val = 1


Mdiscr (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 1 0 0 0 0
	 1 1 0 1 0
	 0 1 0 0 0
	 1 0 0 1 0
 ]
------------------------------ Fine assegna1_m_vv_i

107: esiste_v_i	<=>	elem %IN% v
elem = 2
ris->indices (1 : 1): [ 1 ]


indx = 0
------------------------------ Fine esiste_v_i

101: which_m_rowindxeq_i	<=>	ris <- which(m[r,] == val)
ris (4 x 4 : 4 x 4): [
	 0 1 0 1
	 0 0 1 0
	 0 0 0 1
	 0 0 0 0
 ]
riga = 3
val = 1


ind (1 : 24): [ 4 ]
------------------------------ Fine which_m_rowindxeq_i

103: copia_v_indx_i	<=>	ris <- v[indx]
index (4 : 4): [ 5 1 2 4 ]
ind (1 : 24): [ 4 ]


co (1 : 2): [ 4 ]
------------------------------ Fine copia_v_indx_i

105: assegna1_m_vv_i	<=>	m[vr, vc] <- val
Mdiscr (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 1 0 0 0 0
	 1 1 0 1 0
	 0 1 0 0 0
	 1 0 0 1 0
 ]
ri (1 : 1): [ 2 ]
co (1 : 2): [ 4 ]
val = 1


Mdiscr (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 1 0 0 1 0
	 1 1 0 1 0
	 0 1 0 0 0
	 1 0 0 1 0
 ]
------------------------------ Fine assegna1_m_vv_i

107: esiste_v_i	<=>	elem %IN% v
elem = 3
ris->indices (1 : 1): [ 1 ]


indx = 0
------------------------------ Fine esiste_v_i

101: which_m_rowindxeq_i	<=>	ris <- which(m[r,] == val)
ris (4 x 4 : 4 x 4): [
	 0 1 0 1
	 0 0 1 0
	 0 0 0 1
	 0 0 0 0
 ]
riga = 4
val = 1


ind (0 : 24): [ ]
------------------------------ Fine which_m_rowindxeq_i

103: copia_v_indx_i	<=>	ris <- v[indx]
index (4 : 4): [ 5 1 2 4 ]
ind (0 : 24): [ ]


co (0 : 2): [ ]
------------------------------ Fine copia_v_indx_i

105: assegna1_m_vv_i	<=>	m[vr, vc] <- val
Mdiscr (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 1 0 0 1 0
	 1 1 0 1 0
	 0 1 0 0 0
	 1 0 0 1 0
 ]
ri (1 : 1): [ 4 ]
co (0 : 2): [ ]
val = 1


Mdiscr (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 1 0 0 1 0
	 1 1 0 1 0
	 0 1 0 0 0
	 1 0 0 1 0
 ]
------------------------------ Fine assegna1_m_vv_i

107: esiste_v_i	<=>	elem %IN% v
elem = 4
ris->indices (1 : 1): [ 1 ]


indx = 0
------------------------------ Fine esiste_v_i


Stringhe allocate: 5 (4476 interne); stringhe deallocate: 0 (4141 interne)

332: accoda1_vv_i	<=>	v1 <- c(v1, v2)
h_new (0 : 6): [ ]
ris (1 : 4): [ 5 ]


h_new (1 : 6): [ 5 ]
------------------------------ Fine accoda_vv_i

334: somma_colonne_i	<=>	ris <- apply(m, 2, sum)
Mdiscr (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 1 0 0 1 0
	 1 1 0 1 0
	 0 1 0 0 0
	 1 0 0 1 0
 ]


Sout (5 : 5): [ 3 3 0 3 0 ]
------------------------------ Fine somma_colonne_i

336: max_v_i		<=>	ris <- max(v)
Sout (5 : 5): [ 3 3 0 3 0 ]


max = 3
------------------------------ Fine max_v_i

338: seq_i	<=>	ris <- seq(da, a, incr)
da = 0
a = 4
incr = 1


tmp2_i (5 : 13): [ 0 1 2 3 4 ]
------------------------------ Fine seq_i


*** hist1 ***
Sout (5 : 5): [ 3 3 0 3 0 ]
tmp2_i (5 : 13): [ 0 1 2 3 4 ]
right = 0
include_border = 1
naok = 0
29: InitVett_i
tmp1_i (4 : 10): [ 1 2 3 1 ]
val = 0


tmp1_i (4 : 10): [ 0 0 0 0 ]
------------------------------ Fine InitVett_i



tmp1_i (4 : 10): [ 2 0 0 3 ]

Stringhe allocate: 5 (4476 interne); stringhe deallocate: 0 (4141 interne)

340: promuovi_i	(implicita)
tmp1_i (4 : 10): [ 2 0 0 3 ]
ATTENZIONE (promuovi_i, linea connectivity_modular.c # 340): il vettore e` stato promosso da intero a double: i calcoli saranno rallentati!

tmp1_d (4 : 16): [ 2 0 0 3 ]
------------------------------ Fine promuovi_i

341: assegna1_v_segmv_d	<=>	v1[st:end] <- v2
Freq_out (7 : 7): [ 2 1 2 0 0 0 0 ]
start = 1
end = 4
tmp1_d (4 : 16): [ 2 0 0 3 ]


Freq_out (7 : 7): [ 2 0 0 3 0 0 0 ]
------------------------------ Fine assegna1_v_segmv_d

343: somma_righe_i	<=>	ris <- apply(m, 1, sum)
Mdiscr (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 1 0 0 1 0
	 1 1 0 1 0
	 0 1 0 0 0
	 1 0 0 1 0
 ]


Sin (5 : 5): [ 1 2 3 1 2 ]
------------------------------ Fine somma_righe_i

345: max_v_i		<=>	ris <- max(v)
Sin (5 : 5): [ 1 2 3 1 2 ]


max = 3
------------------------------ Fine max_v_i

347: seq_i	<=>	ris <- seq(da, a, incr)
da = 0
a = 4
incr = 1


tmp2_i (5 : 13): [ 0 1 2 3 4 ]
------------------------------ Fine seq_i


*** hist1 ***
Sin (5 : 5): [ 1 2 3 1 2 ]
tmp2_i (5 : 13): [ 0 1 2 3 4 ]
right = 0
include_border = 1
naok = 0
29: InitVett_i
tmp1_i (4 : 10): [ 2 0 0 3 ]
val = 0


tmp1_i (4 : 10): [ 0 0 0 0 ]
------------------------------ Fine InitVett_i



tmp1_i (4 : 10): [ 0 2 2 1 ]

Stringhe allocate: 5 (4477 interne); stringhe deallocate: 0 (4142 interne)

349: promuovi_i	(implicita)
tmp1_i (4 : 10): [ 0 2 2 1 ]
ATTENZIONE (promuovi_i, linea connectivity_modular.c # 349): il vettore e` stato promosso da intero a double: i calcoli saranno rallentati!

tmp1_d (4 : 16): [ 0 2 2 1 ]
------------------------------ Fine promuovi_i

350: assegna1_v_segmv_d	<=>	v1[st:end] <- v2
Freq_in (7 : 7): [ 2 2 0 1 0 0 0 ]
start = 1
end = 4
tmp1_d (4 : 16): [ 0 2 2 1 ]


Freq_in (7 : 7): [ 0 2 2 1 0 0 0 ]
------------------------------ Fine assegna1_v_segmv_d

362: copia_v_i	<=>	ris[st:end] <- v[st:end]
h_new (1 : 6): [ 5 ]
st = 1
end = 1


h (1 : 5): [ 5 ]
------------------------------ Fine copia_v_i

368: copia_v_indx_i	<=>	ris <- v[indx]
Sin (5 : 5): [ 1 2 3 1 2 ]
h (1 : 5): [ 5 ]


tmp1_i (1 : 10): [ 2 ]
------------------------------ Fine copia_v_indx_i

369: which_v_indxne_i	<=>	ris <- which(v != val)
tmp1_i (1 : 10): [ 2 ]
val = 5


tmp2_i (1 : 13): [ 1 ]
------------------------------ Fine which_v_indxne_i

370: copia_v_indx_i	<=>	ris <- v[indx]
h (1 : 5): [ 5 ]
tmp2_i (1 : 13): [ 1 ]


h (1 : 5): [ 5 ]
------------------------------ Fine copia_v_indx_i

381: somma_righe_i	<=>	ris <- apply(m, 1, sum)
Mdiscr (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 1 0 0 1 0
	 1 1 0 1 0
	 0 1 0 0 0
	 1 0 0 1 0
 ]


Sr (5 : 5): [ 1 2 3 1 2 ]
------------------------------ Fine somma_righe_i

383: which_v_indxeq_i	<=>	ris <- which(v==val)
Sr (5 : 5): [ 1 2 3 1 2 ]
val = 0


ind (0 : 11): [ ]
------------------------------ Fine which_v_indxeq_i

453: which_m_indxeq_i	<=>	ris <- which(m == val)
Mdiscr (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 1 0 0 1 0
	 1 1 0 1 0
	 0 1 0 0 0
	 1 0 0 1 0
 ]
val = 1


ind (9 : 47): [ 2 3 5 6 8 9 17 18 20 ]
------------------------------ Fine which_m_indxeq_i

459: abs_v_d	<=>	ris <- abs(v)
tmp1_d (9 : 16): [ 1 1 1 1 1 1 1 1 1 ]


tmp2_d (9 : 16): [ 1 1 1 1 1 1 1 1 1 ]
------------------------------ Fine abs_v_d

463: InitMatr_d
M (5 x 5 : 5 x 5): [
	 5.842414621812633e-308 0 0 0 0
	 1.277296757899186e-153 0 0 0 0
	 3.250798789285192e-318 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
val = 0


M (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine InitMatr_d

465: assegna1_mv_indx_d	<=>	m[indx] <- v
M (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
ind (9 : 47): [ 2 3 5 6 8 9 17 18 20 ]
tmp2_d (9 : 16): [ 1 1 1 1 1 1 1 1 1 ]


M (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 1 0 0 1 0
	 1 1 0 1 0
	 0 1 0 0 0
	 1 0 0 1 0
 ]
------------------------------ Fine assegna1_mv_indx_d


Stringhe allocate: 5 (4493 interne); stringhe deallocate: 0 (4303 interne)


*** createRules ***
50: which_m_rowindxne_d	<=>	ris <- which(m[r, ] != val)
M (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 1 0 0 1 0
	 1 1 0 1 0
	 0 1 0 0 0
	 1 0 0 1 0
 ]
r = 1
val = 0


op (1 : 25): [ 2 ]
------------------------------ Fine which_m_rowindxne_d

62: copia_v_i	<=>	ris[st:end] <- v[st:end]
op (1 : 25): [ 2 ]
st = 1
end = 1


ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

50: which_m_rowindxne_d	<=>	ris <- which(m[r, ] != val)
M (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 1 0 0 1 0
	 1 1 0 1 0
	 0 1 0 0 0
	 1 0 0 1 0
 ]
r = 2
val = 0


op (2 : 25): [ 1 4 ]
------------------------------ Fine which_m_rowindxne_d


*** create_logicRule ***
50: op_ss_seqdiv_d	<=>	ris <- (da:a) / div
da = 1
a = 2
div = 2.000


x (2 : 2): [ 0.5 1 ]
------------------------------ Fine op_ss_seqdiv_d

54: InitVett_d
pr_and (2 : 2): [ 4.283444798826681e-314 8.487983165343286e-314 ]
val = 0.5


pr_and (2 : 2): [ 0.5 0.5 ]
------------------------------ Fine InitVett_d

77: complementa_d	<=>	ris <- 1 - v
pr_and (2 : 2): [ 0.5 0.5 ]


pr_or (2 : 2): [ 0.5 0.5 ]
------------------------------ Fine complementa_d

80: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 0.5, el2 = 0.5


prob (2 : 2): [ 0.5 0.5 ]
------------------------------ Fine vettore2s_d

81: vettore2s_i		<=>	ris <- c(el1, el2)
el1 = -2, el2 = -3


tmp_i (2 : 2): [ -2 -3 ]
------------------------------ Fine vettore2s_i


*** sample_p ***
tmp_i (2 : 2): [ -2 -3 ]
k = 1, replace = 0
prob (2 : 2): [ 0.5 0.5 ]


ris (1 : 1): [ -3 ]
*****************************************


Stringhe allocate: 0 (60 interne); stringhe deallocate: 0 (10 interne)

84: vettore3v_i		<=>	ris <- c(v1, v2, v3)
ris (1 : 1): [ -3 ]
scalare_i (1 : 1): [ 0 ]
scalare_i (1 : 1): [ 0 ]


ris (3 : 3): [ -3 0 0 ]
------------------------------ Fine vettore3v_i

87: vettore2s_i		<=>	ris <- c(el1, el2)
el1 = 2, el2 = 3


o (2 : 2): [ 2 3 ]
------------------------------ Fine vettore2s_i


Stringhe allocate: 0 (80 interne); stringhe deallocate: 0 (60 interne)

56: copia_v_i	<=>	ris[st:end] <- v[st:end]
ris (3 : 3): [ -3 1 4 ]
st = 1
end = 3


ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

50: which_m_rowindxne_d	<=>	ris <- which(m[r, ] != val)
M (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 1 0 0 1 0
	 1 1 0 1 0
	 0 1 0 0 0
	 1 0 0 1 0
 ]
r = 3
val = 0


op (3 : 25): [ 1 2 4 ]
------------------------------ Fine which_m_rowindxne_d


*** create_logicRule ***
50: op_ss_seqdiv_d	<=>	ris <- (da:a) / div
da = 1
a = 3
div = 3.000


x (3 : 3): [ 0.3333333333333333 0.6666666666666666 1 ]
------------------------------ Fine op_ss_seqdiv_d

54: InitVett_d
pr_and (3 : 3): [ 4.283438945136909e-314 0 3.904874313824909e-316 ]
val = 0.5


pr_and (3 : 3): [ 0.5 0.5 0.5 ]
------------------------------ Fine InitVett_d

77: complementa_d	<=>	ris <- 1 - v
pr_and (3 : 3): [ 0.5 0.5 0.5 ]


pr_or (3 : 3): [ 0.5 0.5 0.5 ]
------------------------------ Fine complementa_d

80: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 0.5, el2 = 0.5


prob (2 : 2): [ 0.5 0.5 ]
------------------------------ Fine vettore2s_d

81: vettore2s_i		<=>	ris <- c(el1, el2)
el1 = -2, el2 = -3


tmp_i (2 : 2): [ -2 -3 ]
------------------------------ Fine vettore2s_i


*** sample_p ***
tmp_i (2 : 2): [ -2 -3 ]
k = 1, replace = 0
prob (2 : 2): [ 0.5 0.5 ]


ris (1 : 1): [ -3 ]
*****************************************


Stringhe allocate: 0 (130 interne); stringhe deallocate: 0 (75 interne)

84: vettore3v_i		<=>	ris <- c(v1, v2, v3)
ris (1 : 1): [ -3 ]
scalare_i (1 : 1): [ 0 ]
scalare_i (1 : 1): [ 0 ]


ris (3 : 3): [ -3 0 0 ]
------------------------------ Fine vettore3v_i

87: vettore2s_i		<=>	ris <- c(el1, el2)
el1 = 2, el2 = 3


o (2 : 2): [ 2 3 ]
------------------------------ Fine vettore2s_i

110: seq_i	<=>	ris <- seq(da, a, incr)
da = 1
a = 2
incr = 1


tmp_i (2 : 2): [ 1 2 ]
------------------------------ Fine seq_i


***sample***
tmp_i (2 : 2): [ 1 2 ]
k = 1, replace = 0


ris (1 : 1): [ 2 ]
*****************************************


Stringhe allocate: 0 (155 interne); stringhe deallocate: 0 (85 interne)

118: InitVett_i
nvect (3 : 3): [ 79864192 778201458 1935999075 ]
val = -1


nvect (3 : 3): [ -1 -1 -1 ]
------------------------------ Fine InitVett_i

120: accoda1_vv_i	<=>	v1 <- c(v1, v2)
ris (3 : 3): [ -3 0 0 ]
nvect (3 : 3): [ -1 -1 -1 ]
ATTENZIONE (accoda_vv_i, linea create_logicRule.c # 120): ingrandito il vettore da 3 a 6!


ris (6 : 12): [ -3 0 0 -1 -1 -1 ]
------------------------------ Fine accoda_vv_i

126: accoda1_vs_i	<=>	v <- c(v, s)
o (2 : 2): [ 2 6 ]
s: 7
ATTENZIONE (accoda1_vs_i, linea create_logicRule.c # 126): ingrandito il vettore da 2 a 3


o (3 : 6): [ 2 6 7 ]
------------------------------ Fine accoda1_vs_i

158: esiste_v_i	<=>	elem %IN% v
elem = 3
blacklist (0 : 0): [ ]


indx = 0
------------------------------ Fine esiste_v_i

164: vettore2s_i		<=>	ris <- c(el1, el2)
el1 = -2, el2 = -3


tmp_i (2 : 2): [ -2 -3 ]
------------------------------ Fine vettore2s_i

165: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 0.5, el2 = 0.5


prob (2 : 2): [ 0.5 0.5 ]
------------------------------ Fine vettore2s_d


*** sample_p ***
tmp_i (2 : 2): [ -2 -3 ]
k = 1, replace = 0
prob (2 : 2): [ 0.5 0.5 ]


ris (1 : 1): [ -3 ]
*****************************************


Stringhe allocate: 0 (177 interne); stringhe deallocate: 0 (97 interne)

178: assegna_v_i	<=>	v[indx] <- val # con sforamento dei limiti
ris (6 : 12): [ -3 0 -3 -1 -1 -1 ]
indx = 6
val = 0


ris (6 : 12): [ -3 0 -3 -1 -1 0 ]
------------------------------ Fine assegna_v_i

181: assegna_v_i	<=>	v[indx] <- val # con sforamento dei limiti
ris (6 : 12): [ -3 0 -3 -1 -1 0 ]
indx = 7
val = 0
ATTENZIONE (assegnav_i, linea create_logicRule.c # 181): e` stato assegnato un elemento al di fuori dei limiti dell'array; ingrandito il vettore da 6 a 7!


ris (7 : 7): [ -3 0 -3 -1 -1 0 0 ]
------------------------------ Fine assegna_v_i


Stringhe allocate: 0 (183 interne); stringhe deallocate: 0 (158 interne)

56: copia_v_i	<=>	ris[st:end] <- v[st:end]
ris (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

50: which_m_rowindxne_d	<=>	ris <- which(m[r, ] != val)
M (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 1 0 0 1 0
	 1 1 0 1 0
	 0 1 0 0 0
	 1 0 0 1 0
 ]
r = 4
val = 0


op (1 : 25): [ 2 ]
------------------------------ Fine which_m_rowindxne_d

62: copia_v_i	<=>	ris[st:end] <- v[st:end]
op (1 : 25): [ 2 ]
st = 1
end = 1


ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

50: which_m_rowindxne_d	<=>	ris <- which(m[r, ] != val)
M (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 1 0 0 1 0
	 1 1 0 1 0
	 0 1 0 0 0
	 1 0 0 1 0
 ]
r = 5
val = 0


op (2 : 25): [ 1 4 ]
------------------------------ Fine which_m_rowindxne_d


*** create_logicRule ***
50: op_ss_seqdiv_d	<=>	ris <- (da:a) / div
da = 1
a = 2
div = 2.000


x (2 : 2): [ 0.5 1 ]
------------------------------ Fine op_ss_seqdiv_d

54: InitVett_d
pr_and (2 : 2): [ 2.961759224211347e-085 5.38784296432416e-310 ]
val = 0.5


pr_and (2 : 2): [ 0.5 0.5 ]
------------------------------ Fine InitVett_d

77: complementa_d	<=>	ris <- 1 - v
pr_and (2 : 2): [ 0.5 0.5 ]


pr_or (2 : 2): [ 0.5 0.5 ]
------------------------------ Fine complementa_d

80: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 0.5, el2 = 0.5


prob (2 : 2): [ 0.5 0.5 ]
------------------------------ Fine vettore2s_d

81: vettore2s_i		<=>	ris <- c(el1, el2)
el1 = -2, el2 = -3


tmp_i (2 : 2): [ -2 -3 ]
------------------------------ Fine vettore2s_i


*** sample_p ***
tmp_i (2 : 2): [ -2 -3 ]
k = 1, replace = 0
prob (2 : 2): [ 0.5 0.5 ]


ris (1 : 1): [ -3 ]
*****************************************


Stringhe allocate: 0 (243 interne); stringhe deallocate: 0 (178 interne)

84: vettore3v_i		<=>	ris <- c(v1, v2, v3)
ris (1 : 1): [ -3 ]
scalare_i (1 : 1): [ 0 ]
scalare_i (1 : 1): [ 0 ]


ris (3 : 3): [ -3 0 0 ]
------------------------------ Fine vettore3v_i

87: vettore2s_i		<=>	ris <- c(el1, el2)
el1 = 2, el2 = 3


o (2 : 2): [ 2 3 ]
------------------------------ Fine vettore2s_i


Stringhe allocate: 0 (263 interne); stringhe deallocate: 0 (228 interne)

56: copia_v_i	<=>	ris[st:end] <- v[st:end]
ris (3 : 3): [ -3 1 4 ]
st = 1
end = 3


ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i


Stringhe allocate: 0 (268 interne); stringhe deallocate: 0 (238 interne)

55: InitMatr_i
reg (5 x 7 : 5 x 7): [
	 79866744 539781471 1834973556 543975712 1869770784 1868832865 1634886003
	 1330207310 1701734764 1819632751 1953785206 1936945005 1701601909 544173678
	 673203534 1868767329 1663988321 543519343 1633951855 543760442 1819042162
	 1836020336 1667591790 857744160 1931501669 1953392928 1668047203 1635020389
	 1769369461 1769367924 975780148 1869898100 544174693 543779951 2189684
 ]
val = 0


reg (5 x 7 : 5 x 7): [
	 0 0 0 0 0 0 0
	 0 0 0 0 0 0 0
	 0 0 0 0 0 0 0
	 0 0 0 0 0 0 0
	 0 0 0 0 0 0 0
 ]
------------------------------ Fine InitMatr_i

59: assegna1_mv_riga_i	<=>	m[riga,] <- v
reg (5 x 7 : 5 x 7): [
	 0 0 0 0 0 0 0
	 0 0 0 0 0 0 0
	 0 0 0 0 0 0 0
	 0 0 0 0 0 0 0
	 0 0 0 0 0 0 0
 ]
riga = 1
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]


reg (5 x 7 : 5 x 7): [
	 2 0 0 0 0 0 0
	 0 0 0 0 0 0 0
	 0 0 0 0 0 0 0
	 0 0 0 0 0 0 0
	 0 0 0 0 0 0 0
 ]
------------------------------ Fine assegna1_mv_riga_i

59: assegna1_mv_riga_i	<=>	m[riga,] <- v
reg (5 x 7 : 5 x 7): [
	 2 0 0 0 0 0 0
	 0 0 0 0 0 0 0
	 0 0 0 0 0 0 0
	 0 0 0 0 0 0 0
	 0 0 0 0 0 0 0
 ]
riga = 2
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]


reg (5 x 7 : 5 x 7): [
	 2 0 0 0 0 0 0
	 -3 1 4 0 0 0 0
	 0 0 0 0 0 0 0
	 0 0 0 0 0 0 0
	 0 0 0 0 0 0 0
 ]
------------------------------ Fine assegna1_mv_riga_i

59: assegna1_mv_riga_i	<=>	m[riga,] <- v
reg (5 x 7 : 5 x 7): [
	 2 0 0 0 0 0 0
	 -3 1 4 0 0 0 0
	 0 0 0 0 0 0 0
	 0 0 0 0 0 0 0
	 0 0 0 0 0 0 0
 ]
riga = 3
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]


reg (5 x 7 : 5 x 7): [
	 2 0 0 0 0 0 0
	 -3 1 4 0 0 0 0
	 -3 1 -3 -1 -1 2 4
	 0 0 0 0 0 0 0
	 0 0 0 0 0 0 0
 ]
------------------------------ Fine assegna1_mv_riga_i

59: assegna1_mv_riga_i	<=>	m[riga,] <- v
reg (5 x 7 : 5 x 7): [
	 2 0 0 0 0 0 0
	 -3 1 4 0 0 0 0
	 -3 1 -3 -1 -1 2 4
	 0 0 0 0 0 0 0
	 0 0 0 0 0 0 0
 ]
riga = 4
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]


reg (5 x 7 : 5 x 7): [
	 2 0 0 0 0 0 0
	 -3 1 4 0 0 0 0
	 -3 1 -3 -1 -1 2 4
	 2 0 0 0 0 0 0
	 0 0 0 0 0 0 0
 ]
------------------------------ Fine assegna1_mv_riga_i

59: assegna1_mv_riga_i	<=>	m[riga,] <- v
reg (5 x 7 : 5 x 7): [
	 2 0 0 0 0 0 0
	 -3 1 4 0 0 0 0
	 -3 1 -3 -1 -1 2 4
	 2 0 0 0 0 0 0
	 0 0 0 0 0 0 0
 ]
riga = 5
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]


reg (5 x 7 : 5 x 7): [
	 2 0 0 0 0 0 0
	 -3 1 4 0 0 0 0
	 -3 1 -3 -1 -1 2 4
	 2 0 0 0 0 0 0
	 -3 1 4 0 0 0 0
 ]
------------------------------ Fine assegna1_mv_riga_i


*** write_m_i ***
reg (5 x 7 : 5 x 7): [
	 2 0 0 0 0 0 0
	 -3 1 4 0 0 0 0
	 -3 1 -3 -1 -1 2 4
	 2 0 0 0 0 0 0
	 -3 1 4 0 0 0 0
 ]

Stringhe allocate: 0 (273 interne); stringhe deallocate: 0 (238 interne)


*** createNEG1 ***
17: InitMatr_i
ris (5 x 5 : 5 x 5): [
	 79843584 11 0 0 0
	 4 12 0 0 0
	 4 14 0 0 0
	 8 17 0 0 0
	 9 18 0 0 0
 ]
val = 0


ris (5 x 5 : 5 x 5): [
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
	 0 0 0 0 0
 ]
------------------------------ Fine InitMatr_i

19: which_m_indxeq_i	<=>	ris <- which(m == val)
Mdiscr (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 1 0 0 1 0
	 1 1 0 1 0
	 0 1 0 0 0
	 1 0 0 1 0
 ]
val = 1


ind (9 : 25): [ 2 3 5 6 8 9 17 18 20 ]
------------------------------ Fine which_m_indxeq_i

22: vettore2s_i		<=>	ris <- c(el1, el2)
el1 = -1, el2 = 1


tmp_i (2 : 2): [ -1 1 ]
------------------------------ Fine vettore2s_i


***sample***
tmp_i (2 : 2): [ -1 1 ]
k = 9, replace = 1


ris (9 : 9): [ 1 1 -1 1 1 1 1 -1 1 ]
*****************************************


Stringhe allocate: 0 (293 interne); stringhe deallocate: 0 (238 interne)


Stringhe allocate: 0 (293 interne); stringhe deallocate: 0 (253 interne)

74: moltiplica_mm_di	<=>	ris <- m1 * m2
M (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 1 0 0 1 0
	 1 1 0 1 0
	 0 1 0 0 0
	 1 0 0 1 0
 ]
ris (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 1 0 0 1 0
	 1 1 0 -1 0
	 0 1 0 0 0
	 -1 0 0 1 0
 ]


tmpm1_d (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 1 0 0 1 0
	 1 1 0 -1 0
	 0 1 0 0 0
	 -1 0 0 1 0
 ]
------------------------------ Fine moltiplica_mm_di


*** write_m_d ***
tmpm1_d (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 1 0 0 1 0
	 1 1 0 -1 0
	 0 1 0 0 0
	 -1 0 0 1 0
 ]

Stringhe allocate: 0 (298 interne); stringhe deallocate: 0 (253 interne)


*** lsoda ***
116: copia_v_d	<=>	ris[st:end] <- v[st:end]
parm1[j][i] (5 : 5): [ 0.8988629876690203 0.86013003877782 0.7529666664997292 0.6820456255132146 0.8224436778595854 ]
st = 1
end = 5


y (5 : 5): [ 0.8988629876690203 0.86013003877782 0.7529666664997292 0.6820456255132146 0.8224436778595854 ]
------------------------------ Fine copia_v_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 5.841260332610872e-308 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865520 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.86013003877782


ris (2 : 2): [ 1 0.86013003877782 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (348 interne); stringhe deallocate: 0 (268 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.5000000087743093 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853304 1072693248 1851487313 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (368 interne); stringhe deallocate: 0 (288 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 3.944633159729563e-316 2 2 1 0 0 0 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1818191220 1667852143 1701606738 1593860910 1767863158 1768693804 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (388 interne); stringhe deallocate: 0 (308 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836424e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79857936 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.86013003877782


ris (2 : 2): [ 1 0.86013003877782 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (408 interne); stringhe deallocate: 0 (328 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 3.90490514352121e-316 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863064 1072693248 1851487313 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7831826378441943


ris (2 : 2): [ 1 0.7831826378441943 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (428 interne); stringhe deallocate: 0 (348 interne)


Stringhe allocate: 1 (428 interne); stringhe deallocate: 0 (353 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.86013003877782 1 1 0.86013003877782 0.7831826378441943 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999987837759676 0.9999997155317746 0.9999999580606205 0.999999435337142 0.9999970509413164 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 9.668236584515338e-286 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601300679304866


ris (2 : 2): [ 1 0.8601300679304866 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (463 interne); stringhe deallocate: 0 (383 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 9.632321885970229e-286 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858512 1072693248 2114071190 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (483 interne); stringhe deallocate: 0 (403 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.8988629876690203 1 0 0 0.86013003877782 0.6820456255132146 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (503 interne); stringhe deallocate: 0 (423 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836399e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838480 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601300679304866


ris (2 : 2): [ 1 0.8601300679304866 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (523 interne); stringhe deallocate: 0 (443 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 3.904867989784642e-316 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79851712 1072693248 2114071190 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7831826902129366


ris (2 : 2): [ 1 0.7831826902129366 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (543 interne); stringhe deallocate: 0 (463 interne)


Stringhe allocate: 1 (543 interne); stringhe deallocate: 0 (468 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8601300679304866 1 1 0.8601300679304866 0.7831826902129366 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999987837766708 0.9999997155317746 0.9999999580606205 0.9999994353374669 0.9999970509442685 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 5.842414698322264e-308 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.860130082506813


ris (2 : 2): [ 1 0.860130082506813 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (578 interne); stringhe deallocate: 0 (498 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.6820454685216237 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864800 1072693248 -2049604230 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (598 interne); stringhe deallocate: 0 (518 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.8988630139852929 1 0 0 0.8601300679304866 0.6820457041982295 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (618 interne); stringhe deallocate: 0 (538 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.5359030478589e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838464 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.860130082506813


ris (2 : 2): [ 1 0.860130082506813 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (638 interne); stringhe deallocate: 0 (558 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 3.904710679283007e-316 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79845320 1072693248 -2049604230 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7831827163972935


ris (2 : 2): [ 1 0.7831827163972935 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (658 interne); stringhe deallocate: 0 (578 interne)


Stringhe allocate: 1 (658 interne); stringhe deallocate: 0 (583 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.860130082506813 1 1 0.860130082506813 0.7831827163972935 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999987837770225 0.9999997155317746 0.9999999580606205 0.9999994353376294 0.9999970509457445 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 0.6250000088638794 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601301464183936


ris (2 : 2): [ 1 0.8601301464183936 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (693 interne); stringhe deallocate: 0 (613 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.682045468522098 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864848 1072693248 -1473939889 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (713 interne); stringhe deallocate: 0 (633 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.8988630271434215 1 0 0 0.860130082506813 0.682045743540715 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (733 interne); stringhe deallocate: 0 (653 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047867184e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79852696 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601301464183936


ris (2 : 2): [ 1 0.8601301464183936 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (753 interne); stringhe deallocate: 0 (673 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 3.904818978472575e-316 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853528 1072693248 -1473939889 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7831828312056183


ris (2 : 2): [ 1 0.7831828312056183 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (773 interne); stringhe deallocate: 0 (693 interne)


Stringhe allocate: 1 (773 interne); stringhe deallocate: 0 (698 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8601301464183936 1 1 0.8601301464183936 0.7831828312056183 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.999998783778564 0.9999997155317746 0.9999999580606205 0.9999994353383415 0.9999970509522165 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 5.377990077193491e-310 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601301553884376


ris (2 : 2): [ 1 0.8601301553884376 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (808 interne); stringhe deallocate: 0 (728 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.6820454685216237 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864168 1072693248 -1393144915 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (828 interne); stringhe deallocate: 0 (748 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.8988630848367494 1 0 0 0.8601301464183936 0.6820459160423676 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (848 interne); stringhe deallocate: 0 (768 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.53590304786067e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79857936 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601301553884376


ris (2 : 2): [ 1 0.8601301553884376 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (868 interne); stringhe deallocate: 0 (788 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 3.90490514352121e-316 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863704 1072693248 -1393144915 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7831828473190625


ris (2 : 2): [ 1 0.7831828473190625 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (888 interne); stringhe deallocate: 0 (808 interne)


Stringhe allocate: 1 (888 interne); stringhe deallocate: 0 (813 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8601301553884376 1 1 0.8601301553884376 0.7831828473190625 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999987837787805 0.9999997155317746 0.9999999580606205 0.9999994353384414 0.9999970509531249 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 5.840818957490486e-308 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.860130097083141


ris (2 : 2): [ 1 0.860130097083141 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (923 interne); stringhe deallocate: 0 (843 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.682045468522098 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858872 1072693248 -1918312339 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (943 interne); stringhe deallocate: 0 (863 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.8988630929340559 1 0 0 0.8601301553884376 0.6820459402531184 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (963 interne); stringhe deallocate: 0 (883 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836816e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79853816 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.860130097083141


ris (2 : 2): [ 1 0.860130097083141 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (983 interne); stringhe deallocate: 0 (903 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 9.685937397935666e-286 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863776 1072693248 -1918312339 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7831827425816537


ris (2 : 2): [ 1 0.7831827425816537 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1003 interne); stringhe deallocate: 0 (923 interne)


Stringhe allocate: 1 (1003 interne); stringhe deallocate: 0 (928 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.860130097083141 1 1 0.860130097083141 0.7831827425816537 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999987837773741 0.9999997155317746 0.9999999580606205 0.9999994353377917 0.9999970509472206 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 5.840818957482557e-308 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601301553884376


ris (2 : 2): [ 1 0.8601301553884376 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1038 interne); stringhe deallocate: 0 (958 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.6820459453587819 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79862448 1072693248 -1393144915 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1058 interne); stringhe deallocate: 0 (978 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.8988630403015517 1 0 0 0.860130097083141 0.6820457828832054 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1078 interne); stringhe deallocate: 0 (998 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047837259e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838728 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601301553884376


ris (2 : 2): [ 1 0.8601301553884376 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1098 interne); stringhe deallocate: 0 (1018 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.6820454685216539 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863328 1072693248 -1393144915 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7831828473190625


ris (2 : 2): [ 1 0.7831828473190625 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1118 interne); stringhe deallocate: 0 (1038 interne)


Stringhe allocate: 1 (1118 interne); stringhe deallocate: 0 (1043 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8601301553884376 1 1 0.8601301553884376 0.7831828473190625 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999987837787805 0.9999997155317746 0.9999999580606205 0.9999994353384414 0.9999970509531249 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 3.944529603570194e-316 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601301553884376


ris (2 : 2): [ 1 0.8601301553884376 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1153 interne); stringhe deallocate: 0 (1073 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.682045468522098 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864496 1072693248 -1393144915 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1173 interne); stringhe deallocate: 0 (1093 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.8988630929340559 1 0 0 0.8601301553884376 0.6820459402531184 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1193 interne); stringhe deallocate: 0 (1113 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047865515e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79839008 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601301553884376


ris (2 : 2): [ 1 0.8601301553884376 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1213 interne); stringhe deallocate: 0 (1133 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.6820454685218973 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853304 1072693248 -1393144915 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7831828473190625


ris (2 : 2): [ 1 0.7831828473190625 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1233 interne); stringhe deallocate: 0 (1153 interne)


Stringhe allocate: 1 (1233 interne); stringhe deallocate: 0 (1158 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8601301553884376 1 1 0.8601301553884376 0.7831828473190625 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999987837787805 0.9999997155317746 0.9999999580606205 0.9999994353384414 0.9999970509531249 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 5.840818957499023e-308 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601303011516489


ris (2 : 2): [ 1 0.8601303011516489 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1268 interne); stringhe deallocate: 0 (1188 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.6820459453587819 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79846680 1072693248 -80226627 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1288 interne); stringhe deallocate: 0 (1208 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.8988630929340559 1 0 0 0.8601301553884376 0.6820459402531184 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1308 interne); stringhe deallocate: 0 (1228 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047852829e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79856880 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601303011516489


ris (2 : 2): [ 1 0.8601303011516489 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1328 interne); stringhe deallocate: 0 (1248 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.6820454685220909 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858512 1072693248 -80226627 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7831831091625215


ris (2 : 2): [ 1 0.7831831091625215 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1348 interne); stringhe deallocate: 0 (1268 interne)


Stringhe allocate: 1 (1348 interne); stringhe deallocate: 0 (1273 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8601303011516489 1 1 0.8601303011516489 0.7831831091625215 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999987837822962 0.9999997155317746 0.9999999580606205 0.9999994353400656 0.9999970509678854 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 5.840818957478857e-308 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601303740330837


ris (2 : 2): [ 1 0.8601303740330837 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1383 interne); stringhe deallocate: 0 (1303 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.6820459453592562 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863064 1072693248 576230978 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1403 interne); stringhe deallocate: 0 (1323 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.8988632245152819 1 0 0 0.8601303011516489 0.6820463336778034 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1423 interne); stringhe deallocate: 0 (1343 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047835931e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79848856 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601303740330837


ris (2 : 2): [ 1 0.8601303740330837 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1443 interne); stringhe deallocate: 0 (1363 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.6820459453591656 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864800 1072693248 576230978 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7831832400838961


ris (2 : 2): [ 1 0.7831832400838961 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1463 interne); stringhe deallocate: 0 (1383 interne)


Stringhe allocate: 1 (1463 interne); stringhe deallocate: 0 (1388 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8601303740330837 1 1 0.8601303740330837 0.7831832400838961 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999987837840543 0.9999997155317746 0.9999999580606205 0.9999994353408777 0.9999970509752656 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552806e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601306935900284


ris (2 : 2): [ 1 0.8601306935900284 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1498 interne); stringhe deallocate: 0 (1418 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.6820459453587819 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79851712 1072693248 -840423244 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1518 interne); stringhe deallocate: 0 (1438 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.8988632903057022 1 0 0 0.8601303740330837 0.6820465303895983 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1538 interne); stringhe deallocate: 0 (1458 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047879175e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838168 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601306935900284


ris (2 : 2): [ 1 0.8601306935900284 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1558 interne); stringhe deallocate: 0 (1478 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.6820454685216539 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864848 1072693248 -840423244 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.783183814123529


ris (2 : 2): [ 1 0.783183814123529 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1578 interne); stringhe deallocate: 0 (1498 interne)


Stringhe allocate: 1 (1578 interne); stringhe deallocate: 0 (1503 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8601306935900284 1 1 0.8601306935900284 0.783183814123529 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.999998783791762 0.9999997155317746 0.9999999580606205 0.9999994353444384 0.9999970510076248 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552781e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601307384400675


ris (2 : 2): [ 1 0.8601307384400675 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1613 interne); stringhe deallocate: 0 (1533 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.6820464221964144 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79845320 1072693248 -436450005 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1633 interne); stringhe deallocate: 0 (1553 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.8988635787712619 1 0 0 0.8601306935900284 0.6820473928947909 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1653 interne); stringhe deallocate: 0 (1573 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047846909e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865520 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601307384400675


ris (2 : 2): [ 1 0.8601307384400675 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1673 interne); stringhe deallocate: 0 (1593 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.6820459453590555 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864168 1072693248 -436450005 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7831838946903736


ris (2 : 2): [ 1 0.7831838946903736 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1693 interne); stringhe deallocate: 0 (1613 interne)


Stringhe allocate: 1 (1693 interne); stringhe deallocate: 0 (1618 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8601307384400675 1 1 0.8601307384400675 0.7831838946903736 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999987837928439 0.9999997155317746 0.9999999580606205 0.9999994353449382 0.9999970510121665 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788575282e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601304469145564


ris (2 : 2): [ 1 0.8601304469145564 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1728 interne); stringhe deallocate: 0 (1648 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.6820473758702565 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853528 1072693248 1232688925 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1748 interne); stringhe deallocate: 0 (1668 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.8988636192575904 1 0 0 0.8601307384400675 0.682047513947964 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1768 interne); stringhe deallocate: 0 (1688 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836424e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79845112 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601304469145564


ris (2 : 2): [ 1 0.8601304469145564 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1788 interne); stringhe deallocate: 0 (1708 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.6820459453592491 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858872 1072693248 1232688925 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7831833710053493


ris (2 : 2): [ 1 0.7831833710053493 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1808 interne); stringhe deallocate: 0 (1728 interne)


Stringhe allocate: 1 (1808 interne); stringhe deallocate: 0 (1733 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8601304469145564 1 1 0.8601304469145564 0.7831833710053493 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999987837858122 0.9999997155317746 0.9999999580606205 0.9999994353416897 0.9999970509826458 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788583566e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601307384400675


ris (2 : 2): [ 1 0.8601307384400675 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1843 interne); stringhe deallocate: 0 (1763 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.6820473758707308 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863704 1072693248 -436450005 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1863 interne); stringhe deallocate: 0 (1783 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.8988633560961655 1 0 0 0.8601304469145564 0.6820467271015148 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1883 interne); stringhe deallocate: 0 (1803 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836399e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838480 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601307384400675


ris (2 : 2): [ 1 0.8601307384400675 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1903 interne); stringhe deallocate: 0 (1823 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.6820459453591656 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79862448 1072693248 -436450005 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7831838946903736


ris (2 : 2): [ 1 0.7831838946903736 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1923 interne); stringhe deallocate: 0 (1843 interne)


Stringhe allocate: 1 (1923 interne); stringhe deallocate: 0 (1848 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8601307384400675 1 1 0.8601307384400675 0.7831838946903736 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999987837928439 0.9999997155317746 0.9999999580606205 0.9999994353449382 0.9999970510121665 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788577052e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601307384400675


ris (2 : 2): [ 1 0.8601307384400675 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1958 interne); stringhe deallocate: 0 (1878 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.6820464221959401 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863776 1072693248 -436450005 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1978 interne); stringhe deallocate: 0 (1898 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.8988636192575904 1 0 0 0.8601307384400675 0.682047513947964 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (1998 interne); stringhe deallocate: 0 (1918 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.5359030478589e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838464 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601307384400675


ris (2 : 2): [ 1 0.8601307384400675 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2018 interne); stringhe deallocate: 0 (1938 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.6820464221959703 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864496 1072693248 -436450005 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7831838946903736


ris (2 : 2): [ 1 0.7831838946903736 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2038 interne); stringhe deallocate: 0 (1958 interne)


Stringhe allocate: 1 (2038 interne); stringhe deallocate: 0 (1963 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8601307384400675 1 1 0.8601307384400675 0.7831838946903736 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999987837928439 0.9999997155317746 0.9999999580606205 0.9999994353449382 0.9999970510121665 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553198e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601314672530858


ris (2 : 2): [ 1 0.8601314672530858 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2073 interne); stringhe deallocate: 0 (1993 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.6820473758707308 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863328 1072693248 1833146774 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2093 interne); stringhe deallocate: 0 (2013 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.8988636192575904 1 0 0 0.8601307384400675 0.682047513947964 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2113 interne); stringhe deallocate: 0 (2033 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047867184e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79852696 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601314672530858


ris (2 : 2): [ 1 0.8601314672530858 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2133 interne); stringhe deallocate: 0 (2053 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.6820473758705301 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79846680 1072693248 1833146774 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7831852039013563


ris (2 : 2): [ 1 0.7831852039013563 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2153 interne); stringhe deallocate: 0 (2073 interne)


Stringhe allocate: 1 (2153 interne); stringhe deallocate: 0 (2078 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8601314672530858 1 1 0.8601314672530858 0.7831852039013563 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.999998783810423 0.9999997155317746 0.9999999580606205 0.9999994353530588 0.9999970510859666 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553641e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601318316553226


ris (2 : 2): [ 1 0.8601318316553226 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2188 interne); stringhe deallocate: 0 (2108 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.6820473758702565 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853304 1072693248 820423034 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2208 interne); stringhe deallocate: 0 (2128 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.8988642771602967 1 0 0 0.8601314672530858 0.682049481061653 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2228 interne); stringhe deallocate: 0 (2148 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.53590304786067e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79857936 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601318316553226


ris (2 : 2): [ 1 0.8601318316553226 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2248 interne); stringhe deallocate: 0 (2168 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.6820473758707237 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863064 1072693248 820423034 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.783185858497971


ris (2 : 2): [ 1 0.783185858497971 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2268 interne); stringhe deallocate: 0 (2188 interne)


Stringhe allocate: 1 (2268 interne); stringhe deallocate: 0 (2193 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8601318316553226 1 1 0.8601318316553226 0.783185858497971 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999987838192121 0.9999997155317746 0.9999999580606205 0.9999994353571191 0.9999970511228655 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788581896e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601334294160948


ris (2 : 2): [ 1 0.8601334294160948 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2303 interne); stringhe deallocate: 0 (2223 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.6820492832193636 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858512 1072693248 -1968096513 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2323 interne); stringhe deallocate: 0 (2243 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.8988646061068352 1 0 0 0.8601318316553226 0.6820504646048061 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2343 interne); stringhe deallocate: 0 (2263 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836816e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79853816 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601334294160948


ris (2 : 2): [ 1 0.8601334294160948 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2363 interne); stringhe deallocate: 0 (2283 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.6820464221963238 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79851712 1072693248 -1968096513 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7831887286463708


ris (2 : 2): [ 1 0.7831887286463708 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2383 interne); stringhe deallocate: 0 (2303 interne)


Stringhe allocate: 1 (2383 interne); stringhe deallocate: 0 (2308 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8601334294160948 1 1 0.8601334294160948 0.7831887286463708 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999987838577492 0.9999997155317746 0.9999999580606205 0.9999994353749213 0.9999970512846472 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.45528078856921e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601336536617603


ris (2 : 2): [ 1 0.8601336536617603 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2418 interne); stringhe deallocate: 0 (2338 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.6820502368932058 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864800 1072693248 51728878 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2438 interne); stringhe deallocate: 0 (2358 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.8988660484076413 1 0 0 0.8601334294160948 0.6820547770540121 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2458 interne); stringhe deallocate: 0 (2378 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047837259e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838728 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601336536617603


ris (2 : 2): [ 1 0.8601336536617603 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2478 interne); stringhe deallocate: 0 (2398 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.6820473758702867 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79845320 1072693248 51728878 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.783189131471182


ris (2 : 2): [ 1 0.783189131471182 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2498 interne); stringhe deallocate: 0 (2418 interne)


Stringhe allocate: 1 (2498 interne); stringhe deallocate: 0 (2423 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8601336536617603 1 1 0.8601336536617603 0.783189131471182 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999987838631578 0.9999997155317746 0.9999999580606205 0.9999994353774199 0.9999970513073525 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552313e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601321960585088


ris (2 : 2): [ 1 0.8601321960585088 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2533 interne); stringhe deallocate: 0 (2453 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.6820545284281039 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864848 1072693248 -192292155 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2553 interne); stringhe deallocate: 0 (2473 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.8988662508341789 1 0 0 0.8601336536617603 0.6820553823053609 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2573 interne); stringhe deallocate: 0 (2493 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047865515e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79839008 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601321960585088


ris (2 : 2): [ 1 0.8601321960585088 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2593 interne); stringhe deallocate: 0 (2513 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.6820473758705301 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853528 1072693248 -192292155 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.783186513096558


ris (2 : 2): [ 1 0.783186513096558 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2613 interne); stringhe deallocate: 0 (2533 interne)


Stringhe allocate: 1 (2613 interne); stringhe deallocate: 0 (2538 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8601321960585088 1 1 0.8601321960585088 0.783186513096558 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999987838280016 0.9999997155317746 0.9999999580606205 0.9999994353611793 0.9999970511597641 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788595556e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.86013365366176


ris (2 : 2): [ 1 0.86013365366176 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2648 interne); stringhe deallocate: 0 (2568 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.6820550052647878 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864168 1072693248 51728875 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2668 interne); stringhe deallocate: 0 (2588 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.8988649350544435 1 0 0 0.8601321960585088 0.6820514481510015 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2688 interne); stringhe deallocate: 0 (2608 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047852829e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79856880 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.86013365366176


ris (2 : 2): [ 1 0.86013365366176 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2708 interne); stringhe deallocate: 0 (2628 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.6820492832193565 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863704 1072693248 51728875 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7831891314711812


ris (2 : 2): [ 1 0.7831891314711812 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2728 interne); stringhe deallocate: 0 (2648 interne)


Stringhe allocate: 1 (2728 interne); stringhe deallocate: 0 (2653 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.86013365366176 1 1 0.86013365366176 0.7831891314711812 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999987838631578 0.9999997155317746 0.9999999580606205 0.9999994353774199 0.9999970513073525 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788563291e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.86013365366176


ris (2 : 2): [ 1 0.86013365366176 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2763 interne); stringhe deallocate: 0 (2683 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.6820511905679965 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858872 1072693248 51728875 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2783 interne); stringhe deallocate: 0 (2703 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.8988662508341785 1 0 0 0.86013365366176 0.6820553823053597 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2803 interne); stringhe deallocate: 0 (2723 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047835931e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79848856 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.86013365366176


ris (2 : 2): [ 1 0.86013365366176 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2823 interne); stringhe deallocate: 0 (2743 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.6820502368935895 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863776 1072693248 51728875 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7831891314711812


ris (2 : 2): [ 1 0.7831891314711812 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2843 interne); stringhe deallocate: 0 (2763 interne)


Stringhe allocate: 1 (2843 interne); stringhe deallocate: 0 (2768 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.86013365366176 1 1 0.86013365366176 0.7831891314711812 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999987838631578 0.9999997155317746 0.9999999580606205 0.9999994353774199 0.9999970513073525 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552806e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601372976509


ris (2 : 2): [ 1 0.8601372976509 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2878 interne); stringhe deallocate: 0 (2798 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.6820550052647878 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79862448 1072693248 -1485873227 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2898 interne); stringhe deallocate: 0 (2818 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.8988662508341785 1 0 0 0.86013365366176 0.6820553823053597 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2918 interne); stringhe deallocate: 0 (2838 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047879175e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838168 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601372976509


ris (2 : 2): [ 1 0.8601372976509 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2938 interne); stringhe deallocate: 0 (2858 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.6820545284276598 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863328 1072693248 -1485873227 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7831956773682871


ris (2 : 2): [ 1 0.7831956773682871 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2958 interne); stringhe deallocate: 0 (2878 interne)


Stringhe allocate: 1 (2958 interne); stringhe deallocate: 0 (2883 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8601372976509 1 1 0.8601372976509 0.7831956773682871 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999987839510437 0.9999997155317746 0.9999999580606205 0.9999994354180191 0.9999970516762892 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552781e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601391195386643


ris (2 : 2): [ 1 0.8601391195386643 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (2993 interne); stringhe deallocate: 0 (2913 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.6820550052652621 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864496 1072693248 2039330998 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3013 interne); stringhe deallocate: 0 (2933 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.8988695402621176 1 0 0 0.8601372976509 0.6820652176304047 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3033 interne); stringhe deallocate: 0 (2953 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047846909e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865520 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601391195386643


ris (2 : 2): [ 1 0.8601391195386643 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3053 interne); stringhe deallocate: 0 (2973 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.6820550052650614 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853304 1072693248 2039330998 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7831989500949257


ris (2 : 2): [ 1 0.7831989500949257 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3073 interne); stringhe deallocate: 0 (2993 interne)


Stringhe allocate: 1 (3073 interne); stringhe deallocate: 0 (2998 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8601391195386643 1 1 0.8601391195386643 0.7831989500949257 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999987839949817 0.9999997155317746 0.9999999580606205 0.9999994354383163 0.9999970518607276 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788575282e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601471077437753


ris (2 : 2): [ 1 0.8601471077437753 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3108 interne); stringhe deallocate: 0 (3028 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.6820650188451101 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79846680 1072693248 976242089 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3128 interne); stringhe deallocate: 0 (3048 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.8988711848557248 1 0 0 0.8601391195386643 0.6820701349506505 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3148 interne); stringhe deallocate: 0 (3068 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836424e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79845112 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601471077437753


ris (2 : 2): [ 1 0.8601471077437753 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3168 interne); stringhe deallocate: 0 (3088 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.6820511905679894 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858512 1072693248 976242089 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7832132995928895


ris (2 : 2): [ 1 0.7832132995928895 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3188 interne); stringhe deallocate: 0 (3108 interne)


Stringhe allocate: 1 (3188 interne); stringhe deallocate: 0 (3113 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8601471077437753 1 1 0.8601471077437753 0.7832132995928895 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999987841876121 0.9999997155317746 0.9999999580606205 0.9999994355273025 0.9999970526692749 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788583566e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.860148228858879


ris (2 : 2): [ 1 0.860148228858879 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3223 interne); stringhe deallocate: 0 (3143 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.6820697872171664 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863064 1072693248 -1810552673 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3243 interne); stringhe deallocate: 0 (3163 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.8988783956850173 1 0 0 0.8601471077437753 0.6820916952779068 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3263 interne); stringhe deallocate: 0 (3183 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836399e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838480 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.860148228858879


ris (2 : 2): [ 1 0.860148228858879 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3283 interne); stringhe deallocate: 0 (3203 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.6820550052651715 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864800 1072693248 -1810552673 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.783215313481705


ris (2 : 2): [ 1 0.783215313481705 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3303 interne); stringhe deallocate: 0 (3223 interne)


Stringhe allocate: 1 (3303 interne); stringhe deallocate: 0 (3228 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.860148228858879 1 1 0.860148228858879 0.783215313481705 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999987842146447 0.9999997155317746 0.9999999580606205 0.9999994355397903 0.9999970527827331 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788577052e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601409414501566


ris (2 : 2): [ 1 0.8601409414501566 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3338 interne); stringhe deallocate: 0 (3258 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.6820912448888112 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79851712 1072693248 1269781650 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3358 interne); stringhe deallocate: 0 (3278 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.8988794076901177 1 0 0 0.860148228858879 0.6820947211718227 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3378 interne); stringhe deallocate: 0 (3298 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.5359030478589e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838464 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601409414501566


ris (2 : 2): [ 1 0.8601409414501566 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3398 interne); stringhe deallocate: 0 (3318 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.682055005264818 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864848 1072693248 1269781650 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7832022228708627


ris (2 : 2): [ 1 0.7832022228708627 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3418 interne); stringhe deallocate: 0 (3338 interne)


Stringhe allocate: 1 (3418 interne); stringhe deallocate: 0 (3343 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8601409414501566 1 1 0.8601409414501566 0.7832022228708627 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999987840389185 0.9999997155317746 0.9999999580606205 0.999999435458613 0.9999970520451573 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553198e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601482288588394


ris (2 : 2): [ 1 0.8601482288588394 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3453 interne); stringhe deallocate: 0 (3373 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.6820945827493929 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79845320 1072693248 -1810553030 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3473 interne); stringhe deallocate: 0 (3393 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.89887282947607 1 0 0 0.8601409414501566 0.6820750523469327 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3493 interne); stringhe deallocate: 0 (3413 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047867184e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79852696 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601482288588394


ris (2 : 2): [ 1 0.8601482288588394 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3513 interne); stringhe deallocate: 0 (3433 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.6820650188453836 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864168 1072693248 -1810553030 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7832153134816102


ris (2 : 2): [ 1 0.7832153134816102 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3533 interne); stringhe deallocate: 0 (3453 interne)


Stringhe allocate: 1 (3533 interne); stringhe deallocate: 0 (3458 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8601482288588394 1 1 0.8601482288588394 0.7832153134816102 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999987842146447 0.9999997155317746 0.9999999580606205 0.9999994355397903 0.9999970527827331 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553641e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601482288588394


ris (2 : 2): [ 1 0.8601482288588394 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3568 interne); stringhe deallocate: 0 (3488 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.6820750324254323 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853528 1072693248 -1810553030 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3588 interne); stringhe deallocate: 0 (3508 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.8988794076900619 1 0 0 0.8601482288588394 0.6820947211716721 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3608 interne); stringhe deallocate: 0 (3528 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.53590304786067e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79857936 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601482288588394


ris (2 : 2): [ 1 0.8601482288588394 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3628 interne); stringhe deallocate: 0 (3548 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.6820697872171593 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858872 1072693248 -1810553030 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7832153134816102


ris (2 : 2): [ 1 0.7832153134816102 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3648 interne); stringhe deallocate: 0 (3568 interne)


Stringhe allocate: 1 (3648 interne); stringhe deallocate: 0 (3573 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8601482288588394 1 1 0.8601482288588394 0.7832153134816102 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999987842146447 0.9999997155317746 0.9999999580606205 0.9999994355397903 0.9999970527827331 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788581896e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601664469058707


ris (2 : 2): [ 1 0.8601664469058707 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3683 interne); stringhe deallocate: 0 (3603 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.6820945827493929 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863704 1072693248 -925730634 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3703 interne); stringhe deallocate: 0 (3623 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.8988794076900619 1 0 0 0.8601482288588394 0.6820947211716721 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3723 interne); stringhe deallocate: 0 (3643 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836816e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79853816 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601664469058707


ris (2 : 2): [ 1 0.8601664469058707 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3743 interne); stringhe deallocate: 0 (3663 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.6820912448891949 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79862448 1072693248 -925730634 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7832480390222321


ris (2 : 2): [ 1 0.7832480390222321 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3763 interne); stringhe deallocate: 0 (3683 interne)


Stringhe allocate: 1 (3763 interne); stringhe deallocate: 0 (3688 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8601664469058707 1 1 0.8601664469058707 0.7832480390222321 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999987846538376 0.9999997155317746 0.9999999580606205 0.9999994357426774 0.9999970546258098 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.45528078856921e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601755532595229


ris (2 : 2): [ 1 0.8601755532595229 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3798 interne); stringhe deallocate: 0 (3718 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.6820945827489187 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863776 1072693248 -507367429 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3818 interne); stringhe deallocate: 0 (3738 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.8988958526901212 1 0 0 0.8601664469058707 0.6821438917123532 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3838 interne); stringhe deallocate: 0 (3758 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047837259e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838728 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601755532595229


ris (2 : 2): [ 1 0.8601755532595229 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3858 interne); stringhe deallocate: 0 (3778 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.6820945827489489 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864496 1072693248 -507367429 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7832643962453501


ris (2 : 2): [ 1 0.7832643962453501 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3878 interne); stringhe deallocate: 0 (3798 interne)


Stringhe allocate: 1 (3878 interne); stringhe deallocate: 0 (3803 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8601755532595229 1 1 0.8601755532595229 0.7832643962453501 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999987848733103 0.9999997155317746 0.9999999580606205 0.9999994358440637 0.9999970555466036 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552313e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8602154793214907


ris (2 : 2): [ 1 0.8602154793214907 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3913 interne); stringhe deallocate: 0 (3833 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.6821436969766879 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863328 1072693248 -1662624692 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3933 interne); stringhe deallocate: 0 (3853 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.8989040721814826 1 0 0 0.8601755532595229 0.6821684684268327 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3953 interne); stringhe deallocate: 0 (3873 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047865515e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79839008 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8602154793214907


ris (2 : 2): [ 1 0.8602154793214907 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3973 interne); stringhe deallocate: 0 (3893 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.6820750324257059 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79846680 1072693248 -1662624692 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7833361126466685


ris (2 : 2): [ 1 0.7833361126466685 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (3993 interne); stringhe deallocate: 0 (3913 interne)


Stringhe allocate: 1 (3993 interne); stringhe deallocate: 0 (3918 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8602154793214907 1 1 0.8602154793214907 0.7833361126466685 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999987858351024 0.9999997155317746 0.9999999580606205 0.9999994362883691 0.9999970595803238 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788595556e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.860221082069513


ris (2 : 2): [ 1 0.860221082069513 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4028 interne); stringhe deallocate: 0 (3948 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.6821680156712819 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853304 1072693248 1557802863 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4048 interne); stringhe deallocate: 0 (3968 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.8989401094667431 1 0 0 0.8602154793214907 0.6822762221134116 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4068 interne); stringhe deallocate: 0 (3988 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047852829e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79856880 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.860221082069513


ris (2 : 2): [ 1 0.860221082069513 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4088 interne); stringhe deallocate: 0 (4008 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.6820945827493858 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863064 1072693248 1557802863 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7833461762171637


ris (2 : 2): [ 1 0.7833461762171637 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4108 interne); stringhe deallocate: 0 (4028 interne)


Stringhe allocate: 1 (4108 interne); stringhe deallocate: 0 (4033 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.860221082069513 1 1 0.860221082069513 0.7833461762171637 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999987859700079 0.9999997155317746 0.9999999580606205 0.9999994363506897 0.9999970601459114 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788563291e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601846602056538


ris (2 : 2): [ 1 0.8601846602056538 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4143 interne); stringhe deallocate: 0 (4063 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.6822757808695101 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858512 1072693248 -83667650 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4163 interne); stringhe deallocate: 0 (4083 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.8989451663069236 1 0 0 0.860221082069513 0.6822913425240873 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4183 interne); stringhe deallocate: 0 (4103 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047835931e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79848856 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8601846602056538


ris (2 : 2): [ 1 0.8601846602056538 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4203 interne); stringhe deallocate: 0 (4123 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.6820945827493024 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79851712 1072693248 -83667650 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7832807546992009


ris (2 : 2): [ 1 0.7832807546992009 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4223 interne); stringhe deallocate: 0 (4143 interne)


Stringhe allocate: 1 (4223 interne); stringhe deallocate: 0 (4148 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8601846602056538 1 1 0.8601846602056538 0.7832807546992009 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999987850927576 0.9999997155317746 0.9999999580606205 0.9999994359454385 0.9999970564671787 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552806e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8602210820645656


ris (2 : 2): [ 1 0.8602210820645656 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4258 interne); stringhe deallocate: 0 (4178 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.6822910396580983 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864800 1072693248 1557758301 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4278 interne); stringhe deallocate: 0 (4198 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.8989122923402773 1 0 0 0.8601846602056538 0.6821930470394781 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4298 interne); stringhe deallocate: 0 (4218 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047879175e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838168 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8602210820645656


ris (2 : 2): [ 1 0.8602210820645656 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4318 interne); stringhe deallocate: 0 (4238 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.6821436969762438 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79845320 1072693248 1557758301 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7833461762052991


ris (2 : 2): [ 1 0.7833461762052991 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4338 interne); stringhe deallocate: 0 (4258 interne)


Stringhe allocate: 1 (4338 interne); stringhe deallocate: 0 (4263 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8602210820645656 1 1 0.8602210820645656 0.7833461762052991 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999987859700077 0.9999997155317746 0.9999999580606205 0.9999994363506897 0.9999970601459107 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552781e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8602210820645656


ris (2 : 2): [ 1 0.8602210820645656 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4373 interne); stringhe deallocate: 0 (4293 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.6821928112039828 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864848 1072693248 1557758301 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4393 interne); stringhe deallocate: 0 (4313 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.8989451662999632 1 0 0 0.8602210820645656 0.6822913425052624 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4413 interne); stringhe deallocate: 0 (4333 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047846909e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865520 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8602210820645656


ris (2 : 2): [ 1 0.8602210820645656 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4433 interne); stringhe deallocate: 0 (4353 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.6821680156715555 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853528 1072693248 1557758301 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7833461762052991


ris (2 : 2): [ 1 0.7833461762052991 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4453 interne); stringhe deallocate: 0 (4373 interne)


Stringhe allocate: 1 (4453 interne); stringhe deallocate: 0 (4378 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8602210820645656 1 1 0.8602210820645656 0.7833461762052991 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999987859700077 0.9999997155317746 0.9999999580606205 0.9999994363506897 0.9999970601459107 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788575282e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.860312124847845


ris (2 : 2): [ 1 0.860312124847845 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4488 interne); stringhe deallocate: 0 (4408 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.6822910396580983 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864168 1072693248 1259494469 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4508 interne); stringhe deallocate: 0 (4428 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.8989451662999632 1 0 0 0.8602210820645656 0.6822913425052624 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4528 interne); stringhe deallocate: 0 (4448 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836424e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79845112 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.860312124847845


ris (2 : 2): [ 1 0.860312124847845 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4548 interne); stringhe deallocate: 0 (4468 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.682275780869503 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863704 1072693248 1259494469 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7835097053212943


ris (2 : 2): [ 1 0.7835097053212943 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4568 interne); stringhe deallocate: 0 (4488 interne)


Stringhe allocate: 1 (4568 interne); stringhe deallocate: 0 (4493 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.860312124847845 1 1 0.860312124847845 0.7835097053212943 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999987881600778 0.9999997155317746 0.9999999580606205 0.9999994373624123 0.9999970693212582 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788583566e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8603575795276655


ris (2 : 2): [ 1 0.8603575795276655 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4603 interne); stringhe deallocate: 0 (4523 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.6822910396585726 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858872 1072693248 -1638007744 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4623 interne); stringhe deallocate: 0 (4543 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.8990273378302168 1 0 0 0.860312124847845 0.6825370431515111 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4643 interne); stringhe deallocate: 0 (4563 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836399e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838480 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8603575795276655


ris (2 : 2): [ 1 0.8603575795276655 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4663 interne); stringhe deallocate: 0 (4583 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.682291039658482 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863776 1072693248 -1638007744 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.78359133128285


ris (2 : 2): [ 1 0.78359133128285 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4683 interne); stringhe deallocate: 0 (4603 interne)


Stringhe allocate: 1 (4683 interne); stringhe deallocate: 0 (4608 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8603575795276655 1 1 0.8603575795276655 0.78359133128285 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.999998789252029 0.9999997155317746 0.9999999580606205 0.9999994378668524 0.9999970738904357 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788577052e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8605568363924313


ris (2 : 2): [ 1 0.8605568363924313 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4718 interne); stringhe deallocate: 0 (4638 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.682536610794573 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79862448 1072693248 2106913645 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4738 interne); stringhe deallocate: 0 (4658 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.8990683484275466 1 0 0 0.8603575795276655 0.6826596797103965 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4758 interne); stringhe deallocate: 0 (4678 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.5359030478589e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838464 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8605568363924313


ris (2 : 2): [ 1 0.8605568363924313 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4778 interne); stringhe deallocate: 0 (4698 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.6821928112035387 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863328 1072693248 2106913645 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7839491376226512


ris (2 : 2): [ 1 0.7839491376226512 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4798 interne); stringhe deallocate: 0 (4718 interne)


Stringhe allocate: 1 (4798 interne); stringhe deallocate: 0 (4723 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8605568363924313 1 1 0.8605568363924313 0.7839491376226512 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999987940271491 0.9999997155317746 0.9999999580606205 0.9999994400728041 0.9999970938354598 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553198e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8605847798328016


ris (2 : 2): [ 1 0.8605847798328016 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4833 interne); stringhe deallocate: 0 (4753 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.6826596347818636 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864496 1072693248 395978459 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4853 interne); stringhe deallocate: 0 (4773 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.8992481142305183 1 0 0 0.8605568363924313 0.6831972518531695 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4873 interne); stringhe deallocate: 0 (4793 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047867184e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79852696 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8605847798328016


ris (2 : 2): [ 1 0.8605847798328016 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4893 interne); stringhe deallocate: 0 (4813 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.6822910396583719 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853304 1072693248 395978459 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7839993095652216


ris (2 : 2): [ 1 0.7839993095652216 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4913 interne); stringhe deallocate: 0 (4833 interne)


Stringhe allocate: 1 (4913 interne); stringhe deallocate: 0 (4838 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8605847798328016 1 1 0.8605847798328016 0.7839993095652216 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999987946952964 0.9999997155317746 0.9999999580606205 0.99999944038147 0.9999970966212807 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553641e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8604030489293948


ris (2 : 2): [ 1 0.8604030489293948 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4948 interne); stringhe deallocate: 0 (4868 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.6831970302586843 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79846680 1072693248 -107939494 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4968 interne); stringhe deallocate: 0 (4888 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.8992733193437424 1 0 0 0.8605847798328016 0.683272628908964 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (4988 interne); stringhe deallocate: 0 (4908 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.53590304786067e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79857936 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8604030489293948


ris (2 : 2): [ 1 0.8604030489293948 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5008 interne); stringhe deallocate: 0 (4928 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.6822910396585655 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858512 1072693248 -107939494 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.783672987796796


ris (2 : 2): [ 1 0.783672987796796 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5028 interne); stringhe deallocate: 0 (4948 interne)


Stringhe allocate: 1 (5028 interne); stringhe deallocate: 0 (4953 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8604030489293948 1 1 0.8604030489293948 0.783672987796796 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999987903433494 0.9999997155317746 0.9999999580606205 0.9999994383710035 0.9999970784541957 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788581896e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8605847792142429


ris (2 : 2): [ 1 0.8605847792142429 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5063 interne); stringhe deallocate: 0 (4983 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.6832723705301547 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863064 1072693248 390406978 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5083 interne); stringhe deallocate: 0 (5003 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.8991093755840504 1 0 0 0.8604030489293948 0.6827823633808463 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5103 interne); stringhe deallocate: 0 (5023 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836816e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79853816 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8605847792142429


ris (2 : 2): [ 1 0.8605847792142429 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5123 interne); stringhe deallocate: 0 (5043 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.6825366107949566 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864800 1072693248 390406978 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7839993080817628


ris (2 : 2): [ 1 0.7839993080817628 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5143 interne); stringhe deallocate: 0 (5063 interne)


Stringhe allocate: 1 (5143 interne); stringhe deallocate: 0 (5068 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8605847792142429 1 1 0.8605847792142429 0.7839993080817628 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999987946952815 0.9999997155317746 0.9999999580606205 0.9999994403814632 0.9999970966211983 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.45528078856921e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8605847792142429


ris (2 : 2): [ 1 0.8605847792142429 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5178 interne); stringhe deallocate: 0 (5098 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.6827821819310476 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79851712 1072693248 390406978 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5198 interne); stringhe deallocate: 0 (5118 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.8992733184734483 1 0 0 0.8605847792142429 0.683272626555211 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5218 interne); stringhe deallocate: 0 (5138 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047837259e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838728 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8605847792142429


ris (2 : 2): [ 1 0.8605847792142429 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5238 interne); stringhe deallocate: 0 (5158 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.6826596347814196 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864848 1072693248 390406978 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7839993080817628


ris (2 : 2): [ 1 0.7839993080817628 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5258 interne); stringhe deallocate: 0 (5178 interne)


Stringhe allocate: 1 (5258 interne); stringhe deallocate: 0 (5183 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8605847792142429 1 1 0.8605847792142429 0.7839993080817628 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999987946952815 0.9999997155317746 0.9999999580606205 0.9999994403814632 0.9999970966211983 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552313e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8610388086863529


ris (2 : 2): [ 1 0.8610388086863529 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5293 interne); stringhe deallocate: 0 (5213 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.6832723705301547 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79845320 1072693248 1115464005 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5313 interne); stringhe deallocate: 0 (5233 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.8992733184734483 1 0 0 0.8605847792142429 0.683272626555211 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5333 interne); stringhe deallocate: 0 (5253 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047865515e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79839008 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8610388086863529


ris (2 : 2): [ 1 0.8610388086863529 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5353 interne); stringhe deallocate: 0 (5273 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.6831970302589578 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864168 1072693248 1115464005 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7848144934260056


ris (2 : 2): [ 1 0.7848144934260056 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5373 interne); stringhe deallocate: 0 (5293 interne)


Stringhe allocate: 1 (5373 interne); stringhe deallocate: 0 (5298 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8610388086863529 1 1 0.8610388086863529 0.7848144934260056 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999988054997193 0.9999997155317746 0.9999999580606205 0.9999994453729406 0.9999971415123893 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788595556e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8612641599664478


ris (2 : 2): [ 1 0.8612641599664478 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5408 interne); stringhe deallocate: 0 (5328 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.6832723705296804 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853528 1072693248 -620184877 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5428 interne); stringhe deallocate: 0 (5348 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.899682841979073 1 0 0 0.8610388086863529 0.6844973354050786 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5448 interne); stringhe deallocate: 0 (5368 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047852829e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79856880 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8612641599664478


ris (2 : 2): [ 1 0.8612641599664478 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5468 interne); stringhe deallocate: 0 (5388 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.6832723705301476 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858872 1072693248 -620184877 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7852186315911214


ris (2 : 2): [ 1 0.7852186315911214 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5488 interne); stringhe deallocate: 0 (5408 interne)


Stringhe allocate: 1 (5488 interne); stringhe deallocate: 0 (5413 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8612641599664478 1 1 0.8612641599664478 0.7852186315911214 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999988108263339 0.9999997155317746 0.9999999580606205 0.9999994478338343 0.9999971635097297 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788563291e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8622511885231411


ris (2 : 2): [ 1 0.8622511885231411 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5523 interne); stringhe deallocate: 0 (5443 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.6844968883524203 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863704 1072693248 -839607341 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5543 interne); stringhe deallocate: 0 (5463 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.8998857306386157 1 0 0 0.8612641599664478 0.685104362229737 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5563 interne); stringhe deallocate: 0 (5483 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047835931e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79848856 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8622511885231411


ris (2 : 2): [ 1 0.8622511885231411 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5583 interne); stringhe deallocate: 0 (5503 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.6827821819314313 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79862448 1072693248 -839607341 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7869884642387465


ris (2 : 2): [ 1 0.7869884642387465 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5603 interne); stringhe deallocate: 0 (5523 interne)


Stringhe allocate: 1 (5603 interne); stringhe deallocate: 0 (5528 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8622511885231411 1 1 0.8622511885231411 0.7869884642387465 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999988338782155 0.9999997155317746 0.9999999580606205 0.9999994584844325 0.9999972578655019 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552806e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8623891966865431


ris (2 : 2): [ 1 0.8623891966865431 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5638 interne); stringhe deallocate: 0 (5558 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.6851039020543386 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863776 1072693248 981870658 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5658 interne); stringhe deallocate: 0 (5578 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9007741570269531 1 0 0 0.8622511885231411 0.6877626212656995 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5678 interne); stringhe deallocate: 0 (5598 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047879175e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838168 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8623891966865431


ris (2 : 2): [ 1 0.8623891966865431 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5698 interne); stringhe deallocate: 0 (5618 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.6832723705297106 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864496 1072693248 981870658 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7872357924064619


ris (2 : 2): [ 1 0.7872357924064619 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5718 interne); stringhe deallocate: 0 (5638 interne)


Stringhe allocate: 1 (5718 interne); stringhe deallocate: 0 (5643 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8623891966865431 1 1 0.8623891966865431 0.7872357924064619 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999988370655646 0.9999997155317746 0.9999999580606205 0.9999994599571572 0.9999972707990223 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552781e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8614898680983988


ris (2 : 2): [ 1 0.8614898680983988 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5753 interne); stringhe deallocate: 0 (5673 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.6877622692117953 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863328 1072693248 858402013 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5773 interne); stringhe deallocate: 0 (5693 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9008982735696234 1 0 0 0.8623891966865431 0.6881340659760853 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5793 interne); stringhe deallocate: 0 (5713 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047846909e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865520 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8614898680983988


ris (2 : 2): [ 1 0.8614898680983988 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5813 interne); stringhe deallocate: 0 (5733 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.6832723705299539 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79846680 1072693248 858402013 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7856235067447238


ris (2 : 2): [ 1 0.7856235067447238 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5833 interne); stringhe deallocate: 0 (5753 interne)


Stringhe allocate: 1 (5833 interne); stringhe deallocate: 0 (5758 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8614898680983988 1 1 0.8614898680983988 0.7856235067447238 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999988161375742 0.9999997155317746 0.9999999580606205 0.99999945028768 0.9999971853774448 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788575282e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8623891192800839


ris (2 : 2): [ 1 0.8623891192800839 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5868 interne); stringhe deallocate: 0 (5788 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.6881337253575612 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853304 1072693248 284655256 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5888 interne); stringhe deallocate: 0 (5808 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9000890175534051 1 0 0 0.8614898680983988 0.6857125242981289 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5908 interne); stringhe deallocate: 0 (5828 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836424e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79845112 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8623891192800839


ris (2 : 2): [ 1 0.8623891192800839 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5928 interne); stringhe deallocate: 0 (5848 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.6844968883524132 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863064 1072693248 284655256 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7872356067353687


ris (2 : 2): [ 1 0.7872356067353687 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5948 interne); stringhe deallocate: 0 (5868 interne)


Stringhe allocate: 1 (5948 interne); stringhe deallocate: 0 (5873 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8623891192800839 1 1 0.8623891192800839 0.7872356067353687 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999988370637792 0.9999997155317746 0.9999999580606205 0.9999994599563324 0.9999972707893361 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788583566e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8623891192800839


ris (2 : 2): [ 1 0.8623891192800839 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (5983 interne); stringhe deallocate: 0 (5903 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.6857123462686801 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858512 1072693248 284655256 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6003 interne); stringhe deallocate: 0 (5923 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9008981646311807 1 0 0 0.8623891192800839 0.6881337713665494 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6023 interne); stringhe deallocate: 0 (5943 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836399e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838480 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8623891192800839


ris (2 : 2): [ 1 0.8623891192800839 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6043 interne); stringhe deallocate: 0 (5963 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.6851039020547223 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79851712 1072693248 284655256 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7872356067353687


ris (2 : 2): [ 1 0.7872356067353687 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6063 interne); stringhe deallocate: 0 (5983 interne)


Stringhe allocate: 1 (6063 interne); stringhe deallocate: 0 (5988 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8623891192800839 1 1 0.8623891192800839 0.7872356067353687 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999988370637792 0.9999997155317746 0.9999999580606205 0.9999994599563324 0.9999972707893361 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788577052e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8646298858730759


ris (2 : 2): [ 1 0.8646298858730759 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6098 interne); stringhe deallocate: 0 (6018 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.6881337253575612 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864800 1072693248 1264517798 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6118 interne); stringhe deallocate: 0 (6038 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9008981646311807 1 0 0 0.8623891192800839 0.6881337713665494 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6138 interne); stringhe deallocate: 0 (6058 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.5359030478589e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838464 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8646298858730759


ris (2 : 2): [ 1 0.8646298858730759 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6158 interne); stringhe deallocate: 0 (6078 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.6877622692113512 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79845320 1072693248 1264517798 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7912505794002485


ris (2 : 2): [ 1 0.7912505794002485 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6178 interne); stringhe deallocate: 0 (6098 interne)


Stringhe allocate: 1 (6178 interne); stringhe deallocate: 0 (6103 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8646298858730759 1 1 0.8646298858730759 0.7912505794002485 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999988876128836 0.9999997155317746 0.9999999580606205 0.9999994833154403 0.9999974724130436 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553198e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8657092209912799


ris (2 : 2): [ 1 0.8657092209912799 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6213 interne); stringhe deallocate: 0 (6133 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.6881337253580355 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864848 1072693248 -754968043 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6233 interne); stringhe deallocate: 0 (6153 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9029127520179402 1 0 0 0.8646298858730759 0.6941633314181886 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6253 interne); stringhe deallocate: 0 (6173 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047867184e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79852696 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8657092209912799


ris (2 : 2): [ 1 0.8657092209912799 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6273 interne); stringhe deallocate: 0 (6193 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.6881337253578348 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853528 1072693248 -754968043 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7931729919195093


ris (2 : 2): [ 1 0.7931729919195093 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6293 interne); stringhe deallocate: 0 (6213 interne)


Stringhe allocate: 1 (6293 interne); stringhe deallocate: 0 (6218 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8657092209912799 1 1 0.8657092209912799 0.7931729919195093 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999989111713801 0.9999997155317746 0.9999999580606205 0.9999994942037918 0.999997563609639 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553641e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8704228798339982


ris (2 : 2): [ 1 0.8704228798339982 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6328 interne); stringhe deallocate: 0 (6248 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.6941633312230398 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864168 1072693248 357726233 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6348 interne); stringhe deallocate: 0 (6268 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9038739736922898 1 0 0 0.8657092209912799 0.6970469656117991 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6368 interne); stringhe deallocate: 0 (6288 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.53590304786067e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79857936 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8704228798339982


ris (2 : 2): [ 1 0.8704228798339982 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6388 interne); stringhe deallocate: 0 (6308 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.685712346268673 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863704 1072693248 357726233 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8015658846184047


ris (2 : 2): [ 1 0.8015658846184047 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6408 interne); stringhe deallocate: 0 (6328 interne)


Stringhe allocate: 1 (6408 interne); stringhe deallocate: 0 (6333 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8704228798339982 1 1 0.8704228798339982 0.8015658846184047 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999990083456976 0.9999997155317746 0.9999999580606205 0.9999995391289208 0.9999979247434958 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788581896e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8710762502022108


ris (2 : 2): [ 1 0.8710762502022108 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6443 interne); stringhe deallocate: 0 (6363 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.6970467655191683 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858872 1072693248 1289624347 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6463 interne); stringhe deallocate: 0 (6383 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9080699235818757 1 0 0 0.8704228798339982 0.7096358082002804 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6483 interne); stringhe deallocate: 0 (6403 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836816e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79853816 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8710762502022108


ris (2 : 2): [ 1 0.8710762502022108 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6503 interne); stringhe deallocate: 0 (6423 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.6881337253579449 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863776 1072693248 1289624347 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8027287579542731


ris (2 : 2): [ 1 0.8027287579542731 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6523 interne); stringhe deallocate: 0 (6443 interne)


Stringhe allocate: 1 (6523 interne); stringhe deallocate: 0 (6448 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8710762502022108 1 1 0.8710762502022108 0.8027287579542731 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999990211125658 0.9999997155317746 0.9999999580606205 0.9999995450328257 0.9999979703648485 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.45528078856921e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8667961175258648


ris (2 : 2): [ 1 0.8667961175258648 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6558 interne); stringhe deallocate: 0 (6478 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.7096357433324148 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79862448 1072693248 908220667 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6578 interne); stringhe deallocate: 0 (6498 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9086512989865831 1 0 0 0.8710762502022108 0.7113800569408563 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6598 interne); stringhe deallocate: 0 (6518 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047837259e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838728 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8667961175258648


ris (2 : 2): [ 1 0.8667961175258648 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6618 interne); stringhe deallocate: 0 (6538 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.6881337253575914 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863328 1072693248 908220667 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.7951105864494319


ris (2 : 2): [ 1 0.7951105864494319 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6638 interne); stringhe deallocate: 0 (6558 interne)


Stringhe allocate: 1 (6638 interne); stringhe deallocate: 0 (6563 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8667961175258648 1 1 0.8667961175258648 0.7951105864494319 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999989343907605 0.9999997155317746 0.9999999580606205 0.9999995049365624 0.9999976521973014 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552313e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8710665230935304


ris (2 : 2): [ 1 0.8710665230935304 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6673 interne); stringhe deallocate: 0 (6593 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.7113800136575961 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864496 1072693248 -425035790 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6693 interne); stringhe deallocate: 0 (6613 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9048432564204727 1 0 0 0.8667961175258648 0.6999538428699046 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6713 interne); stringhe deallocate: 0 (6633 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047865515e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79839008 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8710665230935304


ris (2 : 2): [ 1 0.8710665230935304 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6733 interne); stringhe deallocate: 0 (6653 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.6941633312233133 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853304 1072693248 -425035790 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8027054088473125


ris (2 : 2): [ 1 0.8027054088473125 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6753 interne); stringhe deallocate: 0 (6673 interne)


Stringhe allocate: 1 (6753 interne); stringhe deallocate: 0 (6678 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8710665230935304 1 1 0.8710665230935304 0.8027054088473125 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999990209237085 0.9999997155317746 0.9999999580606205 0.9999995449454878 0.9999979694587673 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788595556e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8710665230935304


ris (2 : 2): [ 1 0.8710665230935304 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6788 interne); stringhe deallocate: 0 (6708 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.6999535648351003 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79846680 1072693248 -425035790 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6808 interne); stringhe deallocate: 0 (6728 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9086375930929648 1 0 0 0.8710665230935304 0.7113430019402772 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6828 interne); stringhe deallocate: 0 (6748 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047852829e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79856880 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8710665230935304


ris (2 : 2): [ 1 0.8710665230935304 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6848 interne); stringhe deallocate: 0 (6768 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.6970467655191612 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858512 1072693248 -425035790 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8027054088473125


ris (2 : 2): [ 1 0.8027054088473125 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6868 interne); stringhe deallocate: 0 (6788 interne)


Stringhe allocate: 1 (6868 interne); stringhe deallocate: 0 (6793 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8710665230935304 1 1 0.8710665230935304 0.8027054088473125 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999990209237085 0.9999997155317746 0.9999999580606205 0.9999995449454878 0.9999979694587673 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788563291e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8711295138838897


ris (2 : 2): [ 1 0.8711295138838897 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6903 interne); stringhe deallocate: 0 (6823 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.7113428203592562 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863064 1072693248 9881118 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6923 interne); stringhe deallocate: 0 (6843 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9086375930929648 1 0 0 0.8710665230935304 0.7113430019402772 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6943 interne); stringhe deallocate: 0 (6863 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047835931e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79848856 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8711295138838897


ris (2 : 2): [ 1 0.8711295138838897 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6963 interne); stringhe deallocate: 0 (6883 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.7096357433327984 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864800 1072693248 9881118 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8028171281507287


ris (2 : 2): [ 1 0.8028171281507287 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (6983 interne); stringhe deallocate: 0 (6903 interne)


Stringhe allocate: 1 (6983 interne); stringhe deallocate: 0 (6908 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8711295138838897 1 1 0.8711295138838897 0.8028171281507287 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999990221460646 0.9999997155317746 0.9999999580606205 0.9999995455107732 0.9999979737904671 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552806e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8711609746578866


ris (2 : 2): [ 1 0.8711609746578866 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7018 interne); stringhe deallocate: 0 (6938 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.7113428203587819 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79851712 1072693248 -84500320 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7038 interne); stringhe deallocate: 0 (6958 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9086933167954042 1 0 0 0.8711295138838897 0.7115104449461329 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7058 interne); stringhe deallocate: 0 (6978 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047879175e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838168 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8711609746578866


ris (2 : 2): [ 1 0.8711609746578866 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7078 interne); stringhe deallocate: 0 (6998 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.711380013657152 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864848 1072693248 -84500320 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8028729167666576


ris (2 : 2): [ 1 0.8028729167666576 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7098 interne); stringhe deallocate: 0 (7018 interne)


Stringhe allocate: 1 (7098 interne); stringhe deallocate: 0 (7023 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8711609746578866 1 1 0.8711609746578866 0.8028729167666576 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999990227559992 0.9999997155317746 0.9999999580606205 0.9999995457928421 0.9999979759501021 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552781e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8712988949223133


ris (2 : 2): [ 1 0.8712988949223133 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7133 interne); stringhe deallocate: 0 (7053 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.7115101902017855 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79845320 1072693248 945254094 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7153 interne); stringhe deallocate: 0 (7073 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9087211404117161 1 0 0 0.8711609746578866 0.7115940571783738 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7173 interne); stringhe deallocate: 0 (7093 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047846909e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865520 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8712988949223133


ris (2 : 2): [ 1 0.8712988949223133 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7193 interne); stringhe deallocate: 0 (7113 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.6999535648353739 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864168 1072693248 945254094 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8031174810049306


ris (2 : 2): [ 1 0.8031174810049306 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7213 interne); stringhe deallocate: 0 (7133 interne)


Stringhe allocate: 1 (7213 interne); stringhe deallocate: 0 (7138 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8712988949223133 1 1 0.8712988949223133 0.8031174810049306 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999990254253932 0.9999997155317746 0.9999999580606205 0.9999995470273344 0.9999979853903066 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788575282e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8713182404609119


ris (2 : 2): [ 1 0.8713182404609119 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7248 interne); stringhe deallocate: 0 (7168 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.7115936367039968 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853528 1072693248 -899284194 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7268 interne); stringhe deallocate: 0 (7188 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9088431107860278 1 0 0 0.8712988949223133 0.7119605917909584 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7288 interne); stringhe deallocate: 0 (7208 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836424e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79845112 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8713182404609119


ris (2 : 2): [ 1 0.8713182404609119 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7308 interne); stringhe deallocate: 0 (7228 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.7113428203592491 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858872 1072693248 -899284194 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8031517818676016


ris (2 : 2): [ 1 0.8031517818676016 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7328 interne); stringhe deallocate: 0 (7248 interne)


Stringhe allocate: 1 (7328 interne); stringhe deallocate: 0 (7253 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8713182404609119 1 1 0.8713182404609119 0.8031517818676016 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999990257992351 0.9999997155317746 0.9999999580606205 0.9999995472002232 0.999997986710798 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788583566e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.871192443085403


ris (2 : 2): [ 1 0.871192443085403 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7363 interne); stringhe deallocate: 0 (7283 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.7119603244791293 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863704 1072693248 -109944982 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7383 interne); stringhe deallocate: 0 (7303 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9088602165629663 1 0 0 0.8713182404609119 0.712011998430568 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7403 interne); stringhe deallocate: 0 (7323 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836399e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838480 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.871192443085403


ris (2 : 2): [ 1 0.871192443085403 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7423 interne); stringhe deallocate: 0 (7343 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.7113428203591656 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79862448 1072693248 -109944982 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8029287210733914


ris (2 : 2): [ 1 0.8029287210733914 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7443 interne); stringhe deallocate: 0 (7363 interne)


Stringhe allocate: 1 (7443 interne); stringhe deallocate: 0 (7368 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.871192443085403 1 1 0.871192443085403 0.8029287210733914 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999990233657017 0.9999997155317746 0.9999999580606205 0.9999995460748047 0.9999979781080418 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788577052e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8713182402201841


ris (2 : 2): [ 1 0.8713182402201841 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7478 interne); stringhe deallocate: 0 (7398 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.7120118228917409 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863776 1072693248 -901452477 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7498 interne); stringhe deallocate: 0 (7418 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9087489724694255 1 0 0 0.871192443085403 0.711677693542817 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7518 interne); stringhe deallocate: 0 (7438 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.5359030478589e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838464 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8713182402201841


ris (2 : 2): [ 1 0.8713182402201841 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7538 interne); stringhe deallocate: 0 (7458 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.7115101902013414 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864496 1072693248 -901452477 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8031517812973253


ris (2 : 2): [ 1 0.8031517812973253 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7558 interne); stringhe deallocate: 0 (7478 interne)


Stringhe allocate: 1 (7558 interne); stringhe deallocate: 0 (7483 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8713182402201841 1 1 0.8713182402201841 0.8031517812973253 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999990257992304 0.9999997155317746 0.9999999580606205 0.9999995472002211 0.9999979867107761 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553198e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8713182402201841


ris (2 : 2): [ 1 0.8713182402201841 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7593 interne); stringhe deallocate: 0 (7513 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.7116775600443148 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863328 1072693248 -901452477 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7613 interne); stringhe deallocate: 0 (7533 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9088602162310131 1 0 0 0.8713182402201841 0.7120119975283384 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7633 interne); stringhe deallocate: 0 (7553 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047867184e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79852696 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8713182402201841


ris (2 : 2): [ 1 0.8713182402201841 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7653 interne); stringhe deallocate: 0 (7573 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.7115936367042703 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79846680 1072693248 -901452477 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8031517812973253


ris (2 : 2): [ 1 0.8031517812973253 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7673 interne); stringhe deallocate: 0 (7593 interne)


Stringhe allocate: 1 (7673 interne); stringhe deallocate: 0 (7598 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8713182402201841 1 1 0.8713182402201841 0.8031517812973253 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999990257992304 0.9999997155317746 0.9999999580606205 0.9999995472002211 0.9999979867107761 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553641e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8716325792852919


ris (2 : 2): [ 1 0.8716325792852919 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7708 interne); stringhe deallocate: 0 (7628 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.7120118228917409 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853304 1072693248 29692434 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7728 interne); stringhe deallocate: 0 (7648 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9088602162310131 1 0 0 0.8713182402201841 0.7120119975283384 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7748 interne); stringhe deallocate: 0 (7668 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.53590304786067e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79857936 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8716325792852919


ris (2 : 2): [ 1 0.8716325792852919 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7768 interne); stringhe deallocate: 0 (7688 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.7119603244791222 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863064 1072693248 29692434 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8037091163795957


ris (2 : 2): [ 1 0.8037091163795957 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7788 interne); stringhe deallocate: 0 (7708 interne)


Stringhe allocate: 1 (7788 interne); stringhe deallocate: 0 (7713 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8716325792852919 1 1 0.8716325792852919 0.8037091163795957 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999990318536038 0.9999997155317746 0.9999999580606205 0.9999995500002046 0.9999980080458037 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788581896e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8717888849780541


ris (2 : 2): [ 1 0.8717888849780541 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7823 interne); stringhe deallocate: 0 (7743 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.7120118228922152 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858512 1072693248 -843061295 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7843 interne); stringhe deallocate: 0 (7763 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9091381558399733 1 0 0 0.8716325792852919 0.712847272219569 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7863 interne); stringhe deallocate: 0 (7783 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836816e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79853816 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8717888849780541


ris (2 : 2): [ 1 0.8717888849780541 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7883 interne); stringhe deallocate: 0 (7803 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.7120118228921246 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79851712 1072693248 -843061295 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8039860120283493


ris (2 : 2): [ 1 0.8039860120283493 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7903 interne); stringhe deallocate: 0 (7823 interne)


Stringhe allocate: 1 (7903 interne); stringhe deallocate: 0 (7828 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8717888849780541 1 1 0.8717888849780541 0.8039860120283493 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999990348501314 0.9999997155317746 0.9999999580606205 0.9999995513860496 0.9999980185612737 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.45528078856921e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8724736706452078


ris (2 : 2): [ 1 0.8724736706452078 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7938 interne); stringhe deallocate: 0 (7858 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.7128472415929128 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864800 1072693248 -415147507 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7958 interne); stringhe deallocate: 0 (7878 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9092761721007673 1 0 0 0.8717888849780541 0.7132621841291166 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7978 interne); stringhe deallocate: 0 (7898 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047837259e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838728 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8724736706452078


ris (2 : 2): [ 1 0.8724736706452078 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (7998 interne); stringhe deallocate: 0 (7918 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.7116775600438707 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79845320 1072693248 -415147507 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8051989640855963


ris (2 : 2): [ 1 0.8051989640855963 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8018 interne); stringhe deallocate: 0 (7938 interne)


Stringhe allocate: 1 (8018 interne); stringhe deallocate: 0 (7943 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8724736706452078 1 1 0.8724736706452078 0.8051989640855963 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999990478691757 0.9999997155317746 0.9999999580606205 0.9999995574073958 0.9999980639743933 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552313e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8725695036948907


ris (2 : 2): [ 1 0.8725695036948907 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8053 interne); stringhe deallocate: 0 (7973 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.7132620899210238 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864848 1072693248 -516200319 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8073 interne); stringhe deallocate: 0 (7993 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.909880715729132 1 0 0 0.8724736706452078 0.7150796798147283 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8093 interne); stringhe deallocate: 0 (8013 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047865515e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79839008 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8725695036948907


ris (2 : 2): [ 1 0.8725695036948907 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8113 interne); stringhe deallocate: 0 (8033 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.7120118228920145 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853528 1072693248 -516200319 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.80536864010176


ris (2 : 2): [ 1 0.80536864010176 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8133 interne); stringhe deallocate: 0 (8053 interne)


Stringhe allocate: 1 (8133 interne); stringhe deallocate: 0 (8058 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8725695036948907 1 1 0.8725695036948907 0.80536864010176 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.999999049677077 0.9999997155317746 0.9999999580606205 0.9999995582435879 0.9999980702435568 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788595556e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8719453776438422


ris (2 : 2): [ 1 0.8719453776438422 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8168 interne); stringhe deallocate: 0 (8088 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.7150793163304616 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864168 1072693248 -31711724 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8188 interne); stringhe deallocate: 0 (8108 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9099652629361058 1 0 0 0.8725695036948907 0.7153339030378658 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8208 interne); stringhe deallocate: 0 (8128 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047852829e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79856880 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8719453776438422


ris (2 : 2): [ 1 0.8719453776438422 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8228 interne); stringhe deallocate: 0 (8148 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.7120118228922081 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863704 1072693248 -31711724 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8042632896151868


ris (2 : 2): [ 1 0.8042632896151868 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8248 interne); stringhe deallocate: 0 (8168 interne)


Stringhe allocate: 1 (8248 interne); stringhe deallocate: 0 (8173 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8719453776438422 1 1 0.8719453776438422 0.8042632896151868 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999990378409522 0.9999997155317746 0.9999999580606205 0.9999995527692769 0.9999980290356231 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788563291e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8725694735785456


ris (2 : 2): [ 1 0.8725694735785456 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8283 interne); stringhe deallocate: 0 (8203 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.7153334705362582 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858872 1072693248 -787464240 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8303 interne); stringhe deallocate: 0 (8223 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9094143933854236 1 0 0 0.8719453776438422 0.7136776830006104 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8323 interne); stringhe deallocate: 0 (8243 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047835931e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79848856 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8725694735785456


ris (2 : 2): [ 1 0.8725694735785456 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8343 interne); stringhe deallocate: 0 (8263 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.7128472415932965 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863776 1072693248 -787464240 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8053685687481141


ris (2 : 2): [ 1 0.8053685687481141 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8363 interne); stringhe deallocate: 0 (8283 interne)


Stringhe allocate: 1 (8363 interne); stringhe deallocate: 0 (8288 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8725694735785456 1 1 0.8725694735785456 0.8053685687481141 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999990496765094 0.9999997155317746 0.9999999580606205 0.9999995582433253 0.9999980702409248 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552806e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8725694735785456


ris (2 : 2): [ 1 0.8725694735785456 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8398 interne); stringhe deallocate: 0 (8318 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.7136774150853444 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79862448 1072693248 -787464240 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8418 interne); stringhe deallocate: 0 (8338 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.909965221398364 1 0 0 0.8725694735785456 0.7153337901464781 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8438 interne); stringhe deallocate: 0 (8358 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047879175e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838168 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8725694735785456


ris (2 : 2): [ 1 0.8725694735785456 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8458 interne); stringhe deallocate: 0 (8378 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.7132620899205797 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863328 1072693248 -787464240 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8053685687481141


ris (2 : 2): [ 1 0.8053685687481141 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8478 interne); stringhe deallocate: 0 (8398 interne)


Stringhe allocate: 1 (8478 interne); stringhe deallocate: 0 (8403 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8725694735785456 1 1 0.8725694735785456 0.8053685687481141 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999990496765094 0.9999997155317746 0.9999999580606205 0.9999995582433253 0.9999980702409248 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552781e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8741258865363956


ris (2 : 2): [ 1 0.8741258865363956 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8513 interne); stringhe deallocate: 0 (8433 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.7153334705362582 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864496 1072693248 -639084369 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8533 interne); stringhe deallocate: 0 (8453 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.909965221398364 1 0 0 0.8725694735785456 0.7153337901464781 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8553 interne); stringhe deallocate: 0 (8473 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047846909e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865520 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8741258865363956


ris (2 : 2): [ 1 0.8741258865363956 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8573 interne); stringhe deallocate: 0 (8493 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.7150793163307352 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853304 1072693248 -639084369 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8081239208548012


ris (2 : 2): [ 1 0.8081239208548012 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8593 interne); stringhe deallocate: 0 (8513 interne)


Stringhe allocate: 1 (8593 interne); stringhe deallocate: 0 (8518 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8741258865363956 1 1 0.8741258865363956 0.8081239208548012 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.99999907856243 0.9999997155317746 0.9999999580606205 0.9999995716047561 0.9999981692501367 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788575282e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.87488270700902


ris (2 : 2): [ 1 0.87488270700902 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8628 interne); stringhe deallocate: 0 (8548 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.7153334705357839 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79846680 1072693248 80613875 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8648 interne); stringhe deallocate: 0 (8568 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9113380705250623 1 0 0 0.8741258865363956 0.7194619913798636 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8668 interne); stringhe deallocate: 0 (8588 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836424e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79845112 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.87488270700902


ris (2 : 2): [ 1 0.87488270700902 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8688 interne); stringhe deallocate: 0 (8608 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.7153334705362511 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858512 1072693248 80613875 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8094577964964488


ris (2 : 2): [ 1 0.8094577964964488 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8708 interne); stringhe deallocate: 0 (8628 interne)


Stringhe allocate: 1 (8708 interne); stringhe deallocate: 0 (8633 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.87488270700902 1 1 0.87488270700902 0.8094577964964488 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.999999092289538 0.9999997155317746 0.9999999580606205 0.9999995779550781 0.9999982153396146 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788583566e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8781901173720415


ris (2 : 2): [ 1 0.8781901173720415 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8743 interne); stringhe deallocate: 0 (8663 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.7194619266519808 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863064 1072693248 691605748 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8763 interne); stringhe deallocate: 0 (8683 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9120009455016306 1 0 0 0.87488270700902 0.7214587419980794 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8783 interne); stringhe deallocate: 0 (8703 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836399e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838480 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8781901173720415


ris (2 : 2): [ 1 0.8781901173720415 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8803 interne); stringhe deallocate: 0 (8723 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.7136774150857281 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864800 1072693248 691605748 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8152849865546041


ris (2 : 2): [ 1 0.8152849865546041 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8823 interne); stringhe deallocate: 0 (8743 interne)


Stringhe allocate: 1 (8823 interne); stringhe deallocate: 0 (8748 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8781901173720415 1 1 0.8781901173720415 0.8152849865546041 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999991499190919 0.9999997155317746 0.9999999580606205 0.999999604620519 0.9999984034592329 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788577052e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8786492735791218


ris (2 : 2): [ 1 0.8786492735791218 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8858 interne); stringhe deallocate: 0 (8778 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.721458443832903 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79851712 1072693248 349545924 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8878 interne); stringhe deallocate: 0 (8798 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9148962816213825 1 0 0 0.8781901173720415 0.7301812681759866 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8898 interne); stringhe deallocate: 0 (8818 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.5359030478589e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838464 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8786492735791218


ris (2 : 2): [ 1 0.8786492735791218 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8918 interne); stringhe deallocate: 0 (8838 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.7153334705358141 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864848 1072693248 349545924 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8160932425770074


ris (2 : 2): [ 1 0.8160932425770074 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8938 interne); stringhe deallocate: 0 (8858 interne)


Stringhe allocate: 1 (8938 interne); stringhe deallocate: 0 (8863 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8786492735791218 1 1 0.8786492735791218 0.8160932425770074 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999991576249392 0.9999997155317746 0.9999999580606205 0.9999996081867199 0.9999984279363992 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553198e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8756436676418794


ris (2 : 2): [ 1 0.8756436676418794 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8973 interne); stringhe deallocate: 0 (8893 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.7301812259683871 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79845320 1072693248 -563145363 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (8993 interne); stringhe deallocate: 0 (8913 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9152977255501187 1 0 0 0.8786492735791218 0.7313909681271261 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9013 interne); stringhe deallocate: 0 (8933 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047867184e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79852696 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8756436676418794


ris (2 : 2): [ 1 0.8756436676418794 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9033 interne); stringhe deallocate: 0 (8953 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.7153334705360575 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864168 1072693248 -563145363 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8107999604700751


ris (2 : 2): [ 1 0.8107999604700751 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9053 interne); stringhe deallocate: 0 (8973 interne)


Stringhe allocate: 1 (9053 interne); stringhe deallocate: 0 (8978 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8756436676418794 1 1 0.8756436676418794 0.8107999604700751 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999991058855652 0.9999997155317746 0.9999999580606205 0.9999995842452343 0.9999982605444016 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553641e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8786454938021033


ris (2 : 2): [ 1 0.8786454938021033 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9088 interne); stringhe deallocate: 0 (9008 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.7313909618382741 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853528 1072693248 664079548 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9108 interne); stringhe deallocate: 0 (9028 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9126682145465294 1 0 0 0.8756436676418794 0.7234681750166044 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9128 interne); stringhe deallocate: 0 (9048 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.53590304786067e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79857936 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8786454938021033


ris (2 : 2): [ 1 0.8786454938021033 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9148 interne); stringhe deallocate: 0 (9068 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.7194619266519737 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858872 1072693248 664079548 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8160842821224612


ris (2 : 2): [ 1 0.8160842821224612 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9168 interne); stringhe deallocate: 0 (9088 interne)


Stringhe allocate: 1 (9168 interne); stringhe deallocate: 0 (9093 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8786454938021033 1 1 0.8786454938021033 0.8160842821224612 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999991575617906 0.9999997155317746 0.9999999580606205 0.9999996081574947 0.9999984276671092 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788581896e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8786454938021033


ris (2 : 2): [ 1 0.8786454938021033 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9203 interne); stringhe deallocate: 0 (9123 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.7234678356180453 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863704 1072693248 664079548 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9223 interne); stringhe deallocate: 0 (9143 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9152925074363151 1 0 0 0.8786454938021033 0.7313767895587763 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9243 interne); stringhe deallocate: 0 (9163 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836816e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79853816 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8786454938021033


ris (2 : 2): [ 1 0.8786454938021033 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9263 interne); stringhe deallocate: 0 (9183 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.7214584438332867 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79862448 1072693248 664079548 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8160842821224612


ris (2 : 2): [ 1 0.8160842821224612 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9283 interne); stringhe deallocate: 0 (9203 interne)


Stringhe allocate: 1 (9283 interne); stringhe deallocate: 0 (9208 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8786454938021033 1 1 0.8786454938021033 0.8160842821224612 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999991575617906 0.9999997155317746 0.9999999580606205 0.9999996081574947 0.9999984276671092 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.45528078856921e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8793962060476716


ris (2 : 2): [ 1 0.8793962060476716 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9318 interne); stringhe deallocate: 0 (9238 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.731376656723528 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863776 1072693248 -2094632845 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9338 interne); stringhe deallocate: 0 (9258 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9152925074363151 1 0 0 0.8786454938021033 0.7313767895587763 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9358 interne); stringhe deallocate: 0 (9278 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047837259e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838728 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8793962060476716


ris (2 : 2): [ 1 0.8793962060476716 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9378 interne); stringhe deallocate: 0 (9298 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.730181225967943 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864496 1072693248 -2094632845 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8174031317020049


ris (2 : 2): [ 1 0.8174031317020049 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9398 interne); stringhe deallocate: 0 (9318 interne)


Stringhe allocate: 1 (9398 interne); stringhe deallocate: 0 (9323 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8793962060476716 1 1 0.8793962060476716 0.8174031317020049 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999991700114698 0.9999997155317746 0.9999999580606205 0.9999996139194439 0.9999984668106208 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552313e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8797663376716615


ris (2 : 2): [ 1 0.8797663376716615 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9433 interne); stringhe deallocate: 0 (9353 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.7313766567240023 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863328 1072693248 -1139966783 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9453 interne); stringhe deallocate: 0 (9373 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9159466928893313 1 0 0 0.8793962060476716 0.7333498245913361 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9473 interne); stringhe deallocate: 0 (9393 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047865515e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79839008 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8797663376716615


ris (2 : 2): [ 1 0.8797663376716615 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9493 interne); stringhe deallocate: 0 (9413 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.7313909618385477 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79846680 1072693248 -1139966783 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8180519367662962


ris (2 : 2): [ 1 0.8180519367662962 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9513 interne); stringhe deallocate: 0 (9433 interne)


Stringhe allocate: 1 (9513 interne); stringhe deallocate: 0 (9438 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8797663376716615 1 1 0.8797663376716615 0.8180519367662962 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999991760817795 0.9999997155317746 0.9999999580606205 0.9999996167290556 0.9999984857080464 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788595556e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8813861275833375


ris (2 : 2): [ 1 0.8813861275833375 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9548 interne); stringhe deallocate: 0 (9468 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.7333498088841726 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853304 1072693248 -1373386010 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9568 interne); stringhe deallocate: 0 (9488 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9162681019502754 1 0 0 0.8797663376716615 0.7343200387165716 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9588 interne); stringhe deallocate: 0 (9508 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047852829e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79856880 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8813861275833375


ris (2 : 2): [ 1 0.8813861275833375 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9608 interne); stringhe deallocate: 0 (9528 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.7234678356180382 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863064 1072693248 -1373386010 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8208905414484148


ris (2 : 2): [ 1 0.8208905414484148 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9628 interne); stringhe deallocate: 0 (9548 interne)


Stringhe allocate: 1 (9628 interne); stringhe deallocate: 0 (9553 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8813861275833375 1 1 0.8813861275833375 0.8208905414484148 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999992021289986 0.9999997155317746 0.9999999580606205 0.9999996287860624 0.999998565685614 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788563291e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8816119590696396


ris (2 : 2): [ 1 0.8816119590696396 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9663 interne); stringhe deallocate: 0 (9583 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.734319695664432 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858512 1072693248 1216278100 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9683 interne); stringhe deallocate: 0 (9603 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9176741061738675 1 0 0 0.8813861275833375 0.7385646476222822 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9703 interne); stringhe deallocate: 0 (9623 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047835931e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79848856 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8816119590696396


ris (2 : 2): [ 1 0.8816119590696396 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9723 interne); stringhe deallocate: 0 (9643 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.7313766567239117 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79851712 1072693248 1216278100 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8212859663356957


ris (2 : 2): [ 1 0.8212859663356957 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9743 interne); stringhe deallocate: 0 (9663 interne)


Stringhe allocate: 1 (9743 interne); stringhe deallocate: 0 (9668 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8816119590696396 1 1 0.8816119590696396 0.8212859663356957 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999992056945 0.9999997155317746 0.9999999580606205 0.9999996304366503 0.9999985764862949 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552806e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.88013755410233


ris (2 : 2): [ 1 0.88013755410233 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9778 interne); stringhe deallocate: 0 (9698 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.7385645000462819 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864800 1072693248 995834594 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9798 interne); stringhe deallocate: 0 (9718 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9178698762207788 1 0 0 0.8816119590696396 0.7391558425564745 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9818 interne); stringhe deallocate: 0 (9738 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047879175e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838168 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.88013755410233


ris (2 : 2): [ 1 0.88013755410233 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9838 interne); stringhe deallocate: 0 (9758 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.7313766567235582 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79845320 1072693248 995834594 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8187029230978807


ris (2 : 2): [ 1 0.8187029230978807 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9858 interne); stringhe deallocate: 0 (9778 interne)


Stringhe allocate: 1 (9858 interne); stringhe deallocate: 0 (9783 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.88013755410233 1 1 0.88013755410233 0.8187029230978807 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999991821252889 0.9999997155317746 0.9999999580606205 0.9999996195263659 0.999998504434912 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552781e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8816114953424294


ris (2 : 2): [ 1 0.8816114953424294 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9893 interne); stringhe deallocate: 0 (9813 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.7391557781229281 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864848 1072693248 1334362014 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9913 interne); stringhe deallocate: 0 (9833 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9165906707139451 1 0 0 0.88013755410233 0.7352935938118258 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9933 interne); stringhe deallocate: 0 (9853 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047846909e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865520 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8816114953424294


ris (2 : 2): [ 1 0.8816114953424294 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9953 interne); stringhe deallocate: 0 (9873 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.7333498088844461 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853528 1072693248 1334362014 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.821284876511187


ris (2 : 2): [ 1 0.821284876511187 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (9973 interne); stringhe deallocate: 0 (9893 interne)


Stringhe allocate: 1 (9973 interne); stringhe deallocate: 0 (9898 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8816114953424294 1 1 0.8816114953424294 0.821284876511187 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999992056871949 0.9999997155317746 0.9999999580606205 0.9999996304332685 0.9999985764566394 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788575282e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8816114953424294


ris (2 : 2): [ 1 0.8816114953424294 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10008 interne); stringhe deallocate: 0 (9928 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.7352933971410085 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864168 1072693248 1334362014 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10028 interne); stringhe deallocate: 0 (9948 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9178692450478804 1 0 0 0.8816114953424294 0.7391541215590674 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10048 interne); stringhe deallocate: 0 (9968 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836424e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79845112 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8816114953424294


ris (2 : 2): [ 1 0.8816114953424294 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10068 interne); stringhe deallocate: 0 (9988 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.7343196956644249 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863704 1072693248 1334362014 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.821284876511187


ris (2 : 2): [ 1 0.821284876511187 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10088 interne); stringhe deallocate: 0 (10008 interne)


Stringhe allocate: 1 (10088 interne); stringhe deallocate: 0 (10013 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8816114953424294 1 1 0.8816114953424294 0.821284876511187 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999992056871949 0.9999997155317746 0.9999999580606205 0.9999996304332685 0.9999985764566394 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788583566e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8840790296843935


ris (2 : 2): [ 1 0.8840790296843935 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10123 interne); stringhe deallocate: 0 (10043 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.7391538707742953 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858872 1072693248 452091200 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10143 interne); stringhe deallocate: 0 (10063 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9178692450478804 1 0 0 0.8816114953424294 0.7391541215590674 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10163 interne); stringhe deallocate: 0 (10083 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836399e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838480 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8840790296843935


ris (2 : 2): [ 1 0.8840790296843935 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10183 interne); stringhe deallocate: 0 (10103 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.7385645000466656 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863776 1072693248 452091200 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8256030196318578


ris (2 : 2): [ 1 0.8256030196318578 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10203 interne); stringhe deallocate: 0 (10123 interne)


Stringhe allocate: 1 (10203 interne); stringhe deallocate: 0 (10128 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8840790296843935 1 1 0.8840790296843935 0.8256030196318578 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999992436228148 0.9999997155317746 0.9999999580606205 0.9999996479972444 0.9999986892413555 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788577052e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8852549379194619


ris (2 : 2): [ 1 0.8852549379194619 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10238 interne); stringhe deallocate: 0 (10158 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.739153870773821 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79862448 1072693248 702517816 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10258 interne); stringhe deallocate: 0 (10178 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9200063265909061 1 0 0 0.8840790296843935 0.7456093462227639 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10278 interne); stringhe deallocate: 0 (10198 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.5359030478589e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838464 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8852549379194619


ris (2 : 2): [ 1 0.8852549379194619 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10298 interne); stringhe deallocate: 0 (10218 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.739155778122484 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863328 1072693248 702517816 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8276449319191678


ris (2 : 2): [ 1 0.8276449319191678 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10318 interne); stringhe deallocate: 0 (10238 interne)


Stringhe allocate: 1 (10318 interne); stringhe deallocate: 0 (10243 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8852549379194619 1 1 0.8852549379194619 0.8276449319191678 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999992610582691 0.9999997155317746 0.9999999580606205 0.9999996560712255 0.9999987394172435 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553198e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8903878333196662


ris (2 : 2): [ 1 0.8903878333196662 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10353 interne); stringhe deallocate: 0 (10273 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.7456092922220492 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864496 1072693248 -1608800240 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10373 interne); stringhe deallocate: 0 (10293 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9210123089980135 1 0 0 0.8852549379194619 0.7486572409171812 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10393 interne); stringhe deallocate: 0 (10313 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047867184e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79852696 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8903878333196662


ris (2 : 2): [ 1 0.8903878333196662 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10413 interne); stringhe deallocate: 0 (10333 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.7352933971412821 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853304 1072693248 -1608800240 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8365563575904454


ris (2 : 2): [ 1 0.8365563575904454 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10433 interne); stringhe deallocate: 0 (10353 interne)


Stringhe allocate: 1 (10433 interne); stringhe deallocate: 0 (10358 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8903878333196662 1 1 0.8903878333196662 0.8365563575904454 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999993325788048 0.9999997155317746 0.9999999580606205 0.999999689201067 0.9999989368581144 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553641e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8910990515786759


ris (2 : 2): [ 1 0.8910990515786759 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10468 interne); stringhe deallocate: 0 (10388 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.7486572353368093 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79846680 1072693248 679533934 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10488 interne); stringhe deallocate: 0 (10408 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9254025784568405 1 0 0 0.8903878333196662 0.7619589360472859 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10508 interne); stringhe deallocate: 0 (10428 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.53590304786067e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79857936 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8910990515786759


ris (2 : 2): [ 1 0.8910990515786759 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10528 interne); stringhe deallocate: 0 (10448 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.7391538707742882 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858512 1072693248 679533934 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8377918952657527


ris (2 : 2): [ 1 0.8377918952657527 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10548 interne); stringhe deallocate: 0 (10468 interne)


Stringhe allocate: 1 (10548 interne); stringhe deallocate: 0 (10473 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8910990515786759 1 1 0.8910990515786759 0.8377918952657527 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999993419268196 0.9999997155317746 0.9999999580606205 0.999999693532541 0.9999989616730174 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788581896e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8864409018928257


ris (2 : 2): [ 1 0.8864409018928257 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10583 interne); stringhe deallocate: 0 (10503 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.7619586078653597 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863064 1072693248 1332669696 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10603 interne); stringhe deallocate: 0 (10523 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9260117594869299 1 0 0 0.8910990515786759 0.7638036547526826 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10623 interne); stringhe deallocate: 0 (10543 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836816e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79853816 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8864409018928257


ris (2 : 2): [ 1 0.8864409018928257 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10643 interne); stringhe deallocate: 0 (10563 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.7391538707742047 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864800 1072693248 1332669696 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8297063511263975


ris (2 : 2): [ 1 0.8297063511263975 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10663 interne); stringhe deallocate: 0 (10583 interne)


Stringhe allocate: 1 (10663 interne); stringhe deallocate: 0 (10588 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8864409018928257 1 1 0.8864409018928257 0.8297063511263975 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999992782357705 0.9999997155317746 0.9999999580606205 0.9999996640266863 0.9999987881243786 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.45528078856921e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8910813911087466


ris (2 : 2): [ 1 0.8910813911087466 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10698 interne); stringhe deallocate: 0 (10618 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.7638034908299733 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79851712 1072693248 521952301 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10718 interne); stringhe deallocate: 0 (10638 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9220284330025745 1 0 0 0.8864409018928257 0.751734784128972 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10738 interne); stringhe deallocate: 0 (10658 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047837259e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838728 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8910813911087466


ris (2 : 2): [ 1 0.8910813911087466 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10758 interne); stringhe deallocate: 0 (10678 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.7456092922216051 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864848 1072693248 521952301 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8377504219886512


ris (2 : 2): [ 1 0.8377504219886512 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10778 interne); stringhe deallocate: 0 (10698 interne)


Stringhe allocate: 1 (10778 interne); stringhe deallocate: 0 (10703 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8910813911087466 1 1 0.8910813911087466 0.8377504219886512 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999993416962891 0.9999997155317746 0.9999999580606205 0.9999996934257193 0.9999989608495272 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552313e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8910813911087466


ris (2 : 2): [ 1 0.8910813911087466 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10813 interne); stringhe deallocate: 0 (10733 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.7517347423563265 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79845320 1072693248 521952301 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10833 interne); stringhe deallocate: 0 (10753 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9259877520468786 1 0 0 0.8910813911087466 0.7637381740355298 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10853 interne); stringhe deallocate: 0 (10773 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047865515e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79839008 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8910813911087466


ris (2 : 2): [ 1 0.8910813911087466 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10873 interne); stringhe deallocate: 0 (10793 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.7486572353370828 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864168 1072693248 521952301 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8377504219886512


ris (2 : 2): [ 1 0.8377504219886512 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10893 interne); stringhe deallocate: 0 (10813 interne)


Stringhe allocate: 1 (10893 interne); stringhe deallocate: 0 (10818 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8910813911087466 1 1 0.8910813911087466 0.8377504219886512 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999993416962891 0.9999997155317746 0.9999999580606205 0.9999996934257193 0.9999989608495272 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788595556e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8933515469194613


ris (2 : 2): [ 1 0.8933515469194613 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10928 interne); stringhe deallocate: 0 (10848 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.7637381641392995 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853528 1072693248 -71617540 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10948 interne); stringhe deallocate: 0 (10868 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9259877520468786 1 0 0 0.8910813911087466 0.7637381740355298 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10968 interne); stringhe deallocate: 0 (10888 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047852829e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79856880 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8933515469194613


ris (2 : 2): [ 1 0.8933515469194613 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (10988 interne); stringhe deallocate: 0 (10908 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.7619586078653526 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858872 1072693248 -71617540 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8416714234419249


ris (2 : 2): [ 1 0.8416714234419249 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11008 interne); stringhe deallocate: 0 (10928 interne)


Stringhe allocate: 1 (11008 interne); stringhe deallocate: 0 (10933 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8933515469194613 1 1 0.8933515469194613 0.8416714234419249 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999993706775927 0.9999997155317746 0.9999999580606205 0.9999997068563802 0.999999035888256 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788563291e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8944333940359568


ris (2 : 2): [ 1 0.8944333940359568 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11043 interne); stringhe deallocate: 0 (10963 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.7637381641397738 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863704 1072693248 -939870722 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11063 interne); stringhe deallocate: 0 (10983 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9279135876491184 1 0 0 0.8933515469194613 0.7695850110910433 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11083 interne); stringhe deallocate: 0 (11003 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047835931e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79848856 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8944333940359568


ris (2 : 2): [ 1 0.8944333940359568 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11103 interne); stringhe deallocate: 0 (11023 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.763803490830357 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79862448 1072693248 -939870722 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8435255191235767


ris (2 : 2): [ 1 0.8435255191235767 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11123 interne); stringhe deallocate: 0 (11043 interne)


Stringhe allocate: 1 (11123 interne); stringhe deallocate: 0 (11048 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8944333940359568 1 1 0.8944333940359568 0.8435255191235767 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999993840362937 0.9999997155317746 0.9999999580606205 0.9999997130481699 0.9999990694597105 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552806e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8991557081778095


ris (2 : 2): [ 1 0.8991557081778095 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11158 interne); stringhe deallocate: 0 (11078 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.769584664536028 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863776 1072693248 823416139 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11178 interne); stringhe deallocate: 0 (11098 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9288201306940334 1 0 0 0.8944333940359568 0.77234564981761 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11198 interne); stringhe deallocate: 0 (11118 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047879175e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838168 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8991557081778095


ris (2 : 2): [ 1 0.8991557081778095 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11218 interne); stringhe deallocate: 0 (11138 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.7517347423558825 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864496 1072693248 823416139 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8516172648037934


ris (2 : 2): [ 1 0.8516172648037934 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11238 interne); stringhe deallocate: 0 (11158 interne)


Stringhe allocate: 1 (11238 interne); stringhe deallocate: 0 (11163 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8991557081778095 1 1 0.8991557081778095 0.8516172648037934 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999994391053566 0.9999997155317746 0.9999999580606205 0.9999997385800734 0.9999992028139088 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552781e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8998100359559155


ris (2 : 2): [ 1 0.8998100359559155 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11273 interne); stringhe deallocate: 0 (11193 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.7723455516824984 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863328 1072693248 1788961339 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11293 interne); stringhe deallocate: 0 (11213 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9327764307725408 1 0 0 0.8991557081778095 0.7843936955763342 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11313 interne); stringhe deallocate: 0 (11233 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047846909e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865520 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8998100359559155


ris (2 : 2): [ 1 0.8998100359559155 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11333 interne); stringhe deallocate: 0 (11253 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.7637381641395731 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79846680 1072693248 1788961339 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8527391589662737


ris (2 : 2): [ 1 0.8527391589662737 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11353 interne); stringhe deallocate: 0 (11273 interne)


Stringhe allocate: 1 (11353 interne); stringhe deallocate: 0 (11278 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8998100359559155 1 1 0.8998100359559155 0.8527391589662737 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999994463370121 0.9999997155317746 0.9999999580606205 0.999999741933823 0.9999992197279506 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788575282e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.89552449253037


ris (2 : 2): [ 1 0.89552449253037 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11388 interne); stringhe deallocate: 0 (11308 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.7843933193211843 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853304 1072693248 -83498242 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11408 interne); stringhe deallocate: 0 (11328 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9333253954954653 1 0 0 0.8998100359559155 0.7860645544617391 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11428 interne); stringhe deallocate: 0 (11348 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836424e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79845112 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.89552449253037


ris (2 : 2): [ 1 0.89552449253037 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11448 interne); stringhe deallocate: 0 (11368 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.7637381641397667 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863064 1072693248 -83498242 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8453973298967771


ris (2 : 2): [ 1 0.8453973298967771 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11468 interne); stringhe deallocate: 0 (11388 interne)


Stringhe allocate: 1 (11468 interne); stringhe deallocate: 0 (11393 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.89552449253037 1 1 0.89552449253037 0.8453973298967771 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999993972220349 0.9999997155317746 0.9999999580606205 0.9999997191604511 0.9999991021662602 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788583566e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8997937881502626


ris (2 : 2): [ 1 0.8997937881502626 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11503 interne); stringhe deallocate: 0 (11423 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.7860641567240023 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858512 1072693248 1470626435 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11523 interne); stringhe deallocate: 0 (11443 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9297358128804671 1 0 0 0.89552449253037 0.7751331427772442 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11543 interne); stringhe deallocate: 0 (11463 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836399e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838480 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8997937881502626


ris (2 : 2): [ 1 0.8997937881502626 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11563 interne); stringhe deallocate: 0 (11483 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.7695846645364117 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79851712 1072693248 1470626435 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8527014840509123


ris (2 : 2): [ 1 0.8527014840509123 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11583 interne); stringhe deallocate: 0 (11503 interne)


Stringhe allocate: 1 (11583 interne); stringhe deallocate: 0 (11508 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8997937881502626 1 1 0.8997937881502626 0.8527014840509123 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999994461585746 0.9999997155317746 0.9999999580606205 0.9999997418510684 0.9999992191658176 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788577052e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8997937881502626


ris (2 : 2): [ 1 0.8997937881502626 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11618 interne); stringhe deallocate: 0 (11538 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.7751331417088796 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864800 1072693248 1470626435 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11638 interne); stringhe deallocate: 0 (11558 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9333037610254185 1 0 0 0.8997937881502626 0.7860052450763307 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11658 interne); stringhe deallocate: 0 (11578 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.5359030478589e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838464 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8997937881502626


ris (2 : 2): [ 1 0.8997937881502626 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11678 interne); stringhe deallocate: 0 (11598 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.7723455516820543 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79845320 1072693248 1470626435 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8527014840509123


ris (2 : 2): [ 1 0.8527014840509123 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11698 interne); stringhe deallocate: 0 (11618 interne)


Stringhe allocate: 1 (11698 interne); stringhe deallocate: 0 (11623 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.8997937881502626 1 1 0.8997937881502626 0.8527014840509123 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999994461585746 0.9999997155317746 0.9999999580606205 0.9999997418510684 0.9999992191658176 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553198e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9018823537751768


ris (2 : 2): [ 1 0.9018823537751768 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11733 interne); stringhe deallocate: 0 (11653 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.7860050289163851 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864848 1072693248 1640610160 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11753 interne); stringhe deallocate: 0 (11673 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9333037610254185 1 0 0 0.8997937881502626 0.7860052450763307 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11773 interne); stringhe deallocate: 0 (11693 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047867184e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79852696 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9018823537751768


ris (2 : 2): [ 1 0.9018823537751768 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11793 interne); stringhe deallocate: 0 (11713 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.7843933193214578 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853528 1072693248 1640610160 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8562618017705217


ris (2 : 2): [ 1 0.8562618017705217 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11813 interne); stringhe deallocate: 0 (11733 interne)


Stringhe allocate: 1 (11813 interne); stringhe deallocate: 0 (11738 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9018823537751768 1 1 0.9018823537751768 0.8562618017705217 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999994686307976 0.9999997155317746 0.9999999580606205 0.9999997522741717 0.9999992705391047 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553641e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.90287766373948


ris (2 : 2): [ 1 0.90287766373948 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11848 interne); stringhe deallocate: 0 (11768 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.7860050289159108 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864168 1072693248 -1295935180 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11868 interne); stringhe deallocate: 0 (11788 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9350392314504377 1 0 0 0.9018823537751768 0.7913010332209594 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11888 interne); stringhe deallocate: 0 (11808 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.53590304786067e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79857936 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.90287766373948


ris (2 : 2): [ 1 0.90287766373948 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11908 interne); stringhe deallocate: 0 (11828 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.7860641567239952 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863704 1072693248 -1295935180 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8579453246716167


ris (2 : 2): [ 1 0.8579453246716167 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11928 interne); stringhe deallocate: 0 (11848 interne)


Stringhe allocate: 1 (11928 interne); stringhe deallocate: 0 (11853 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.90287766373948 1 1 0.90287766373948 0.8579453246716167 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999994790168711 0.9999997155317746 0.9999999580606205 0.9999997570921972 0.9999992936403901 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788581896e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9072222390942505


ris (2 : 2): [ 1 0.9072222390942505 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11963 interne); stringhe deallocate: 0 (11883 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.791300782395389 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858872 1072693248 -287071381 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (11983 interne); stringhe deallocate: 0 (11903 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9358561643372195 1 0 0 0.90287766373948 0.7938014890088362 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12003 interne); stringhe deallocate: 0 (11923 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836816e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79853816 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9072222390942505


ris (2 : 2): [ 1 0.9072222390942505 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12023 interne); stringhe deallocate: 0 (11943 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.7751331417092633 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863776 1072693248 -287071381 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8652926469009452


ris (2 : 2): [ 1 0.8652926469009452 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12043 interne); stringhe deallocate: 0 (11963 interne)


Stringhe allocate: 1 (12043 interne); stringhe deallocate: 0 (11968 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9072222390942505 1 1 0.9072222390942505 0.8652926469009452 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999995220270425 0.9999997155317746 0.9999999580606205 0.999999777049537 0.9999993861951209 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.45528078856921e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9078242270716079


ris (2 : 2): [ 1 0.9078242270716079 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12078 interne); stringhe deallocate: 0 (11998 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.7938013164525319 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79862448 1072693248 1689862084 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12098 interne); stringhe deallocate: 0 (12018 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9394213912525086 1 0 0 0.9072222390942505 0.8047140381534538 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12118 interne); stringhe deallocate: 0 (12038 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047837259e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838728 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9078242270716079


ris (2 : 2): [ 1 0.9078242270716079 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12138 interne); stringhe deallocate: 0 (12058 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.786005028915941 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863328 1072693248 1689862084 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8663113311781941


ris (2 : 2): [ 1 0.8663113311781941 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12158 interne); stringhe deallocate: 0 (12078 interne)


Stringhe allocate: 1 (12158 interne); stringhe deallocate: 0 (12083 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9078242270716079 1 1 0.9078242270716079 0.8663113311781941 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999995276995786 0.9999997155317746 0.9999999580606205 0.9999997796823295 0.9999993980318859 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552313e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9038814850622595


ris (2 : 2): [ 1 0.9038814850622595 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12193 interne); stringhe deallocate: 0 (12113 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.8047137348184847 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864496 1072693248 -583422827 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12213 interne); stringhe deallocate: 0 (12133 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9399160918131418 1 0 0 0.9078242270716079 0.806227422991336 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12233 interne); stringhe deallocate: 0 (12153 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047865515e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79839008 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9038814850622595


ris (2 : 2): [ 1 0.9038814850622595 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12253 interne); stringhe deallocate: 0 (12173 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.7860050289161844 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853304 1072693248 -583422827 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8596449351033989


ris (2 : 2): [ 1 0.8596449351033989 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12273 interne); stringhe deallocate: 0 (12193 interne)


Stringhe allocate: 1 (12273 interne); stringhe deallocate: 0 (12198 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9038814850622595 1 1 0.9038814850622595 0.8596449351033989 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999994892861565 0.9999997155317746 0.9999999580606205 0.999999761856518 0.999999316220392 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788595556e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9078092789309532


ris (2 : 2): [ 1 0.9078092789309532 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12308 interne); stringhe deallocate: 0 (12228 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.8062272159581472 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79846680 1072693248 192966895 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12328 interne); stringhe deallocate: 0 (12248 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9366813329922757 1 0 0 0.9038814850622595 0.7963262680956746 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12348 interne); stringhe deallocate: 0 (12268 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047852829e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79856880 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9078092789309532


ris (2 : 2): [ 1 0.9078092789309532 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12368 interne); stringhe deallocate: 0 (12288 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.7913007823953819 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858512 1072693248 192966895 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8662771075336593


ris (2 : 2): [ 1 0.8662771075336593 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12388 interne); stringhe deallocate: 0 (12308 interne)


Stringhe allocate: 1 (12388 interne); stringhe deallocate: 0 (12313 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9078092789309532 1 1 0.9078092789309532 0.8662771075336593 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999995275595406 0.9999997155317746 0.9999999580606205 0.9999997796173317 0.9999993976379491 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788563291e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9078092789309532


ris (2 : 2): [ 1 0.9078092789309532 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12423 interne); stringhe deallocate: 0 (12343 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.7963261692056918 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863064 1072693248 192966895 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12443 interne); stringhe deallocate: 0 (12363 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9398965957896969 1 0 0 0.9078092789309532 0.8061737033233561 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12463 interne); stringhe deallocate: 0 (12383 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047835931e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79848856 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9078092789309532


ris (2 : 2): [ 1 0.9078092789309532 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12483 interne); stringhe deallocate: 0 (12403 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.7938013164529156 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864800 1072693248 192966895 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8662771075336593


ris (2 : 2): [ 1 0.8662771075336593 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12503 interne); stringhe deallocate: 0 (12423 interne)


Stringhe allocate: 1 (12503 interne); stringhe deallocate: 0 (12428 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9078092789309532 1 1 0.9078092789309532 0.8662771075336593 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999995275595406 0.9999997155317746 0.9999999580606205 0.9999997796173317 0.9999993976379491 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552806e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9097307798028251


ris (2 : 2): [ 1 0.9097307798028251 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12538 interne); stringhe deallocate: 0 (12458 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.8061733333592702 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79851712 1072693248 -1184014876 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12558 interne); stringhe deallocate: 0 (12478 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9398965957896969 1 0 0 0.9078092789309532 0.8061737033233561 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12578 interne); stringhe deallocate: 0 (12498 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047879175e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838168 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9097307798028251


ris (2 : 2): [ 1 0.9097307798028251 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12598 interne); stringhe deallocate: 0 (12518 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.8047137348180407 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864848 1072693248 -1184014876 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8695098593561373


ris (2 : 2): [ 1 0.8695098593561373 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12618 interne); stringhe deallocate: 0 (12538 interne)


Stringhe allocate: 1 (12618 interne); stringhe deallocate: 0 (12543 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9097307798028251 1 1 0.9097307798028251 0.8695098593561373 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999995452245937 0.9999997155317746 0.9999999580606205 0.9999997878172175 0.999999433734444 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552781e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9106464747378454


ris (2 : 2): [ 1 0.9106464747378454 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12653 interne); stringhe deallocate: 0 (12573 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.8061733333597445 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79845320 1072693248 325513089 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12673 interne); stringhe deallocate: 0 (12593 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9414605179585038 1 0 0 0.9097307798028251 0.8109703773146412 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12693 interne); stringhe deallocate: 0 (12613 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047846909e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865520 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9106464747378454


ris (2 : 2): [ 1 0.9106464747378454 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12713 interne); stringhe deallocate: 0 (12633 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.8062272159584207 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864168 1072693248 325513089 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8710384732994985


ris (2 : 2): [ 1 0.8710384732994985 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12733 interne); stringhe deallocate: 0 (12653 interne)


Stringhe allocate: 1 (12733 interne); stringhe deallocate: 0 (12658 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9106464747378454 1 1 0.9106464747378454 0.8710384732994985 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999995534089838 0.9999997155317746 0.9999999580606205 0.9999997916168407 0.9999994500414068 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788575282e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9146435267014138


ris (2 : 2): [ 1 0.9146435267014138 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12768 interne); stringhe deallocate: 0 (12688 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.8109703151707937 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853528 1072693248 -2141861865 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12788 interne); stringhe deallocate: 0 (12708 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9421966983637007 1 0 0 0.9106464747378454 0.8132351716631991 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12808 interne); stringhe deallocate: 0 (12728 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836424e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79845112 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9146435267014138


ris (2 : 2): [ 1 0.9146435267014138 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12828 interne); stringhe deallocate: 0 (12748 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.7963261692056847 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858872 1072693248 -2141861865 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8777097330700534


ris (2 : 2): [ 1 0.8777097330700534 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12848 interne); stringhe deallocate: 0 (12768 interne)


Stringhe allocate: 1 (12848 interne); stringhe deallocate: 0 (12773 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9146435267014138 1 1 0.9146435267014138 0.8777097330700534 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999995874440062 0.9999997155317746 0.9999999580606205 0.9999998074214954 0.9999995158867964 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788583566e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9151973615484257


ris (2 : 2): [ 1 0.9151973615484257 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12883 interne); stringhe deallocate: 0 (12803 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.8132348148355746 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863704 1072693248 -98071266 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12903 interne); stringhe deallocate: 0 (12823 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9454095084356963 1 0 0 0.9146435267014138 0.8231192415057497 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12923 interne); stringhe deallocate: 0 (12843 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836399e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838480 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9151973615484257


ris (2 : 2): [ 1 0.9151973615484257 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12943 interne); stringhe deallocate: 0 (12863 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.8061733333596539 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79862448 1072693248 -98071266 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8786346851067104


ris (2 : 2): [ 1 0.8786346851067104 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12963 interne); stringhe deallocate: 0 (12883 interne)


Stringhe allocate: 1 (12963 interne); stringhe deallocate: 0 (12888 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9151973615484257 1 1 0.9151973615484257 0.8786346851067104 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999995919506826 0.9999997155317746 0.9999999580606205 0.9999998095147136 0.9999995243711221 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788577052e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9115700002061934


ris (2 : 2): [ 1 0.9115700002061934 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (12998 interne); stringhe deallocate: 0 (12918 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.8231191722874929 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863776 1072693248 -648229025 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13018 interne); stringhe deallocate: 0 (12938 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.945855308666544 1 0 0 0.9151973615484257 0.8244899937732544 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13038 interne); stringhe deallocate: 0 (12958 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.5359030478589e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838464 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9115700002061934


ris (2 : 2): [ 1 0.9115700002061934 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13058 interne); stringhe deallocate: 0 (12978 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.8061733333593004 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864496 1072693248 -648229025 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8725816964527585


ris (2 : 2): [ 1 0.8725816964527585 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13078 interne); stringhe deallocate: 0 (12998 interne)


Stringhe allocate: 1 (13078 interne); stringhe deallocate: 0 (13003 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9115700002061934 1 1 0.9115700002061934 0.8725816964527585 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.999999561514185 0.9999997155317746 0.9999999580606205 0.9999997953800435 0.9999994660279117 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553198e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9151836091123239


ris (2 : 2): [ 1 0.9151836091123239 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13113 interne); stringhe deallocate: 0 (13033 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.8244896022806429 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863328 1072693248 585048111 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13133 interne); stringhe deallocate: 0 (13053 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9429403004552238 1 0 0 0.9115700002061934 0.8155219969079823 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13153 interne); stringhe deallocate: 0 (13073 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047867184e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79852696 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9151836091123239


ris (2 : 2): [ 1 0.9151836091123239 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13173 interne); stringhe deallocate: 0 (13093 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.8109703151710672 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79846680 1072693248 585048111 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8786035972830988


ris (2 : 2): [ 1 0.8786035972830988 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13193 interne); stringhe deallocate: 0 (13113 interne)


Stringhe allocate: 1 (13193 interne); stringhe deallocate: 0 (13118 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9151836091123239 1 1 0.9151836091123239 0.8786035972830988 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999995918393743 0.9999997155317746 0.9999999580606205 0.9999998094630128 0.9999995240883917 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553641e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9151836091123239


ris (2 : 2): [ 1 0.9151836091123239 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13228 interne); stringhe deallocate: 0 (13148 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.8155217258458425 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853304 1072693248 585048111 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13248 interne); stringhe deallocate: 0 (13168 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9458377397351971 1 0 0 0.9151836091123239 0.8244413370182959 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13268 interne); stringhe deallocate: 0 (13188 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.53590304786067e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79857936 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9151836091123239


ris (2 : 2): [ 1 0.9151836091123239 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13288 interne); stringhe deallocate: 0 (13208 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.8132348148355675 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863064 1072693248 585048111 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8786035972830988


ris (2 : 2): [ 1 0.8786035972830988 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13308 interne); stringhe deallocate: 0 (13228 interne)


Stringhe allocate: 1 (13308 interne); stringhe deallocate: 0 (13233 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9151836091123239 1 1 0.9151836091123239 0.8786035972830988 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999995918393743 0.9999997155317746 0.9999999580606205 0.9999998094630128 0.9999995240883917 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788581896e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9169514087718419


ris (2 : 2): [ 1 0.9169514087718419 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13343 interne); stringhe deallocate: 0 (13263 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.8244409648905062 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858512 1072693248 2065057581 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13363 interne); stringhe deallocate: 0 (13283 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9458377397351971 1 0 0 0.9151836091123239 0.8244413370182959 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13383 interne); stringhe deallocate: 0 (13303 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836816e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79853816 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9169514087718419


ris (2 : 2): [ 1 0.9169514087718419 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13403 interne); stringhe deallocate: 0 (13323 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.8231191722878766 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79851712 1072693248 2065057581 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8815388662813987


ris (2 : 2): [ 1 0.8815388662813987 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13423 interne); stringhe deallocate: 0 (13343 interne)


Stringhe allocate: 1 (13423 interne); stringhe deallocate: 0 (13348 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9169514087718419 1 1 0.9169514087718419 0.8815388662813987 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999996059014489 0.9999997155317746 0.9999999580606205 0.9999998159951722 0.9999995500560132 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.45528078856921e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9177938570985889


ris (2 : 2): [ 1 0.9177938570985889 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13458 interne); stringhe deallocate: 0 (13378 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.8244409648900319 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864800 1072693248 957786382 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13478 interne); stringhe deallocate: 0 (13398 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9472470706732241 1 0 0 0.9169514087718419 0.8287859369546228 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13498 interne); stringhe deallocate: 0 (13418 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047837259e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838728 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9177938570985889


ris (2 : 2): [ 1 0.9177938570985889 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13518 interne); stringhe deallocate: 0 (13438 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.8244896022801989 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79845320 1072693248 957786382 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.88292679954179


ris (2 : 2): [ 1 0.88292679954179 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13538 interne); stringhe deallocate: 0 (13458 interne)


Stringhe allocate: 1 (13538 interne); stringhe deallocate: 0 (13463 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9177938570985889 1 1 0.9177938570985889 0.88292679954179 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999996124312696 0.9999997155317746 0.9999999580606205 0.9999998190288193 0.9999995618365097 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552313e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9214711841316954


ris (2 : 2): [ 1 0.9214711841316954 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13573 interne); stringhe deallocate: 0 (13493 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.8287859050760531 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864848 1072693248 587311666 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13593 interne); stringhe deallocate: 0 (13513 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.947910480756347 1 0 0 0.9177938570985889 0.830837280298137 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13613 interne); stringhe deallocate: 0 (13533 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047865515e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79839008 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9214711841316954


ris (2 : 2): [ 1 0.9214711841316954 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13633 interne); stringhe deallocate: 0 (13553 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.815521725846116 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853528 1072693248 587311666 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8889840927354704


ris (2 : 2): [ 1 0.8889840927354704 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13653 interne); stringhe deallocate: 0 (13573 interne)


Stringhe allocate: 1 (13653 interne); stringhe deallocate: 0 (13578 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9214711841316954 1 1 0.9214711841316954 0.8889840927354704 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999996396906996 0.9999997155317746 0.9999999580606205 0.9999998316959144 0.9999996097435486 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788595556e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9219807176262199


ris (2 : 2): [ 1 0.9219807176262199 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13688 interne); stringhe deallocate: 0 (13608 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.8308372585301687 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864168 1072693248 -1263015611 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13708 interne); stringhe deallocate: 0 (13628 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9508057094108687 1 0 0 0.9214711841316954 0.8397898021463391 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13728 interne); stringhe deallocate: 0 (13648 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047852829e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79856880 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9219807176262199


ris (2 : 2): [ 1 0.9219807176262199 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13748 interne); stringhe deallocate: 0 (13668 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.8244409648904991 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863704 1072693248 -1263015611 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8898239215939071


ris (2 : 2): [ 1 0.8898239215939071 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13768 interne); stringhe deallocate: 0 (13688 interne)


Stringhe allocate: 1 (13768 interne); stringhe deallocate: 0 (13693 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9219807176262199 1 1 0.9219807176262199 0.8898239215939071 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999996433133958 0.9999997155317746 0.9999999580606205 0.9999998333796867 0.9999996159585981 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788563291e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9186435095928454


ris (2 : 2): [ 1 0.9186435095928454 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13803 interne); stringhe deallocate: 0 (13723 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.8397893993387484 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858872 1072693248 315377966 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13823 interne); stringhe deallocate: 0 (13743 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9512074429704671 1 0 0 0.9219807176262199 0.8410313645643742 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13843 interne); stringhe deallocate: 0 (13763 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047835931e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79848856 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9186435095928454


ris (2 : 2): [ 1 0.9186435095928454 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13863 interne); stringhe deallocate: 0 (13783 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.8244409648904156 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863776 1072693248 315377966 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8843279992756933


ris (2 : 2): [ 1 0.8843279992756933 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13883 interne); stringhe deallocate: 0 (13803 interne)


Stringhe allocate: 1 (13883 interne); stringhe deallocate: 0 (13808 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9186435095928454 1 1 0.9186435095928454 0.8843279992756933 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999996189073508 0.9999997155317746 0.9999999580606205 0.9999998220377522 0.9999995734167614 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552806e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9219680652500415


ris (2 : 2): [ 1 0.9219680652500415 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13918 interne); stringhe deallocate: 0 (13838 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.8410310832982351 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79862448 1072693248 738628096 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13938 interne); stringhe deallocate: 0 (13858 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9485805789106786 1 0 0 0.9186435095928454 0.8329085781863719 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13958 interne); stringhe deallocate: 0 (13878 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047879175e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838168 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9219680652500415


ris (2 : 2): [ 1 0.9219680652500415 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13978 interne); stringhe deallocate: 0 (13898 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.828785905075609 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863328 1072693248 738628096 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8897956829042114


ris (2 : 2): [ 1 0.8897956829042114 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (13998 interne); stringhe deallocate: 0 (13918 interne)


Stringhe allocate: 1 (13998 interne); stringhe deallocate: 0 (13923 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9219680652500415 1 1 0.9219680652500415 0.8897956829042114 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.999999643223882 0.9999997155317746 0.9999999580606205 0.9999998333380811 0.9999996157512381 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552781e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9219680652500415


ris (2 : 2): [ 1 0.9219680652500415 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14033 interne); stringhe deallocate: 0 (13953 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.8329081623087191 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864496 1072693248 738628096 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14053 interne); stringhe deallocate: 0 (13973 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9511916106599948 1 0 0 0.9219680652500415 0.8409872935642062 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14073 interne); stringhe deallocate: 0 (13993 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047846909e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865520 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9219680652500415


ris (2 : 2): [ 1 0.9219680652500415 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14093 interne); stringhe deallocate: 0 (14013 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.8308372585304422 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853304 1072693248 738628096 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8897956829042114


ris (2 : 2): [ 1 0.8897956829042114 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14113 interne); stringhe deallocate: 0 (14033 interne)


Stringhe allocate: 1 (14113 interne); stringhe deallocate: 0 (14038 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9219680652500415 1 1 0.9219680652500415 0.8897956829042114 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.999999643223882 0.9999997155317746 0.9999999580606205 0.9999998333380811 0.9999996157512381 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788575282e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9235944582857875


ris (2 : 2): [ 1 0.9235944582857875 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14148 interne); stringhe deallocate: 0 (14068 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.8409872142796804 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79846680 1072693248 -148679073 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14168 interne); stringhe deallocate: 0 (14088 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9511916106599948 1 0 0 0.9219680652500415 0.8409872935642062 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14188 interne); stringhe deallocate: 0 (14108 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836424e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79845112 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9235944582857875


ris (2 : 2): [ 1 0.9235944582857875 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14208 interne); stringhe deallocate: 0 (14128 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.8397893993387413 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858512 1072693248 -148679073 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8924607948714102


ris (2 : 2): [ 1 0.8924607948714102 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14228 interne); stringhe deallocate: 0 (14148 interne)


Stringhe allocate: 1 (14228 interne); stringhe deallocate: 0 (14153 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9235944582857875 1 1 0.9235944582857875 0.8924607948714102 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999996545482024 0.9999997155317746 0.9999999580606205 0.9999998386019964 0.9999996348364704 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788583566e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9243695190140888


ris (2 : 2): [ 1 0.9243695190140888 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14263 interne); stringhe deallocate: 0 (14183 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.8409872142801547 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863064 1072693248 1655879262 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14283 interne); stringhe deallocate: 0 (14203 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9524616313044921 1 0 0 0.9235944582857875 0.8449224261759023 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14303 interne); stringhe deallocate: 0 (14223 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836399e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838480 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9243695190140888


ris (2 : 2): [ 1 0.9243695190140888 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14323 interne); stringhe deallocate: 0 (14243 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.8410310832986188 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864800 1072693248 1655879262 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.893720971452744


ris (2 : 2): [ 1 0.893720971452744 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14343 interne); stringhe deallocate: 0 (14263 interne)


Stringhe allocate: 1 (14343 interne); stringhe deallocate: 0 (14268 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9243695190140888 1 1 0.9243695190140888 0.893720971452744 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.999999659817659 0.9999997155317746 0.9999999580606205 0.999999841051705 0.9999996435277472 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788577052e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9277526959734255


ris (2 : 2): [ 1 0.9277526959734255 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14378 interne); stringhe deallocate: 0 (14298 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.8449220745091726 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79851712 1072693248 1811900936 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14398 interne); stringhe deallocate: 0 (14318 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9530594642357064 1 0 0 0.9243695190140888 0.8467804356884504 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14418 interne); stringhe deallocate: 0 (14338 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.5359030478589e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838464 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9277526959734255


ris (2 : 2): [ 1 0.9277526959734255 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14438 interne); stringhe deallocate: 0 (14358 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.832908162308275 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864848 1072693248 1811900936 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8992207017705576


ris (2 : 2): [ 1 0.8992207017705576 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14458 interne); stringhe deallocate: 0 (14378 interne)


Stringhe allocate: 1 (14458 interne); stringhe deallocate: 0 (14383 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9277526959734255 1 1 0.9277526959734255 0.8992207017705576 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999996818938588 0.9999997155317746 0.9999999580606205 0.9999998513167718 0.999999679101 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553198e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9282214717888931


ris (2 : 2): [ 1 0.9282214717888931 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14493 interne); stringhe deallocate: 0 (14413 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.8467803089151644 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79845320 1072693248 -2078742607 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14513 interne); stringhe deallocate: 0 (14433 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9556685036239813 1 0 0 0.9277526959734255 0.8548892053945388 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14533 interne); stringhe deallocate: 0 (14453 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047867184e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79852696 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9282214717888931


ris (2 : 2): [ 1 0.9282214717888931 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14553 interne); stringhe deallocate: 0 (14473 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.8409872142799539 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864168 1072693248 -2078742607 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8999832273588994


ris (2 : 2): [ 1 0.8999832273588994 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14573 interne); stringhe deallocate: 0 (14493 interne)


Stringhe allocate: 1 (14573 interne); stringhe deallocate: 0 (14498 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9282214717888931 1 1 0.9282214717888931 0.8999832273588994 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999996848375772 0.9999997155317746 0.9999999580606205 0.999999852685816 0.999999683744513 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553641e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9251512076471998


ris (2 : 2): [ 1 0.9251512076471998 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14608 interne); stringhe deallocate: 0 (14528 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.8548889247899343 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853528 1072693248 -1265212581 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14628 interne); stringhe deallocate: 0 (14548 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9560305263935054 1 0 0 0.9282214717888931 0.8560137537524047 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14648 interne); stringhe deallocate: 0 (14568 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.53590304786067e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79857936 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9251512076471998


ris (2 : 2): [ 1 0.9251512076471998 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14668 interne); stringhe deallocate: 0 (14588 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.8409872142801476 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858872 1072693248 -1265212581 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.8949931949466782


ris (2 : 2): [ 1 0.8949931949466782 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14688 interne); stringhe deallocate: 0 (14608 interne)


Stringhe allocate: 1 (14688 interne); stringhe deallocate: 0 (14613 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9251512076471998 1 1 0.9251512076471998 0.8949931949466782 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999996650507675 0.9999997155317746 0.9999999580606205 0.9999998434847039 0.999999652092289 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788581896e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9282098314786399


ris (2 : 2): [ 1 0.9282098314786399 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14723 interne); stringhe deallocate: 0 (14643 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.8560133068094515 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863704 1072693248 448845955 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14743 interne); stringhe deallocate: 0 (14663 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9536633241370567 1 0 0 0.9251512076471998 0.8486565190837349 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14763 interne); stringhe deallocate: 0 (14683 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836816e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79853816 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9282098314786399


ris (2 : 2): [ 1 0.9282098314786399 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14783 interne); stringhe deallocate: 0 (14703 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.8449220745095563 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79862448 1072693248 448845955 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.89995757726259


ris (2 : 2): [ 1 0.89995757726259 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14803 interne); stringhe deallocate: 0 (14723 interne)


Stringhe allocate: 1 (14803 interne); stringhe deallocate: 0 (14728 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9282098314786399 1 1 0.9282098314786399 0.89995757726259 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999996847648116 0.9999997155317746 0.9999999580606205 0.9999998526519741 0.9999996835894106 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.45528078856921e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9282098314786399


ris (2 : 2): [ 1 0.9282098314786399 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14838 interne); stringhe deallocate: 0 (14758 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.8486561862950612 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863776 1072693248 448845955 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14858 interne); stringhe deallocate: 0 (14778 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9560162590546102 1 0 0 0.9282098314786399 0.8559738363172001 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14878 interne); stringhe deallocate: 0 (14798 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047837259e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838728 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9282098314786399


ris (2 : 2): [ 1 0.9282098314786399 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14898 interne); stringhe deallocate: 0 (14818 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.8467803089147203 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864496 1072693248 448845955 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.89995757726259


ris (2 : 2): [ 1 0.89995757726259 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14918 interne); stringhe deallocate: 0 (14838 interne)


Stringhe allocate: 1 (14918 interne); stringhe deallocate: 0 (14843 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9282098314786399 1 1 0.9282098314786399 0.89995757726259 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999996847648116 0.9999997155317746 0.9999999580606205 0.9999998526519741 0.9999996835894106 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552313e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9297061290327666


ris (2 : 2): [ 1 0.9297061290327666 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14953 interne); stringhe deallocate: 0 (14873 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.8559737293253207 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863328 1072693248 291685508 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14973 interne); stringhe deallocate: 0 (14893 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9560162590546102 1 0 0 0.9282098314786399 0.8559738363172001 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (14993 interne); stringhe deallocate: 0 (14913 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047865515e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79839008 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9297061290327666


ris (2 : 2): [ 1 0.9297061290327666 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15013 interne); stringhe deallocate: 0 (14933 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.8548889247902078 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79846680 1072693248 291685508 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9023773528818133


ris (2 : 2): [ 1 0.9023773528818133 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15033 interne); stringhe deallocate: 0 (14953 interne)


Stringhe allocate: 1 (15033 interne); stringhe deallocate: 0 (14958 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9297061290327666 1 1 0.9297061290327666 0.9023773528818133 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999996939820528 0.9999997155317746 0.9999999580606205 0.9999998569390769 0.9999996978917095 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788595556e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9304191925091637


ris (2 : 2): [ 1 0.9304191925091637 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15068 interne); stringhe deallocate: 0 (14988 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.8559737293248464 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853304 1072693248 2020391175 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15088 interne); stringhe deallocate: 0 (15008 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9571607399060879 1 0 0 0.9297061290327666 0.8595380927879012 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15108 interne); stringhe deallocate: 0 (15028 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047852829e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79856880 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9304191925091637


ris (2 : 2): [ 1 0.9304191925091637 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15128 interne); stringhe deallocate: 0 (15048 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.8560133068094444 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863064 1072693248 2020391175 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9035215118171101


ris (2 : 2): [ 1 0.9035215118171101 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15148 interne); stringhe deallocate: 0 (15068 interne)


Stringhe allocate: 1 (15148 interne); stringhe deallocate: 0 (15073 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9304191925091637 1 1 0.9304191925091637 0.9035215118171101 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999996982792385 0.9999997155317746 0.9999999580606205 0.9999998589379943 0.9999997044274324 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788563291e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9335317485138759


ris (2 : 2): [ 1 0.9335317485138759 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15183 interne); stringhe deallocate: 0 (15103 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.859538087082889 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858512 1072693248 -113991130 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15203 interne); stringhe deallocate: 0 (15123 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9576994778458231 1 0 0 0.9304191925091637 0.8612209896629332 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15223 interne); stringhe deallocate: 0 (15143 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047835931e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79848856 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9335317485138759


ris (2 : 2): [ 1 0.9335317485138759 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15243 interne); stringhe deallocate: 0 (15163 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.8486561862954449 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79851712 1072693248 -113991130 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9085149114362778


ris (2 : 2): [ 1 0.9085149114362778 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15263 interne); stringhe deallocate: 0 (15183 interne)


Stringhe allocate: 1 (15263 interne); stringhe deallocate: 0 (15188 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9335317485138759 1 1 0.9335317485138759 0.9085149114362778 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999997163411282 0.9999997155317746 0.9999999580606205 0.9999998673414063 0.9999997313355671 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552806e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.93396302686462


ris (2 : 2): [ 1 0.93396302686462 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15298 interne); stringhe deallocate: 0 (15218 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.8612208454137136 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864800 1072693248 1845612694 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15318 interne); stringhe deallocate: 0 (15238 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9600506171592855 1 0 0 0.9335317485138759 0.8685655285955634 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15338 interne); stringhe deallocate: 0 (15258 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047879175e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838168 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.93396302686462


ris (2 : 2): [ 1 0.93396302686462 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15358 interne); stringhe deallocate: 0 (15278 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.8559737293248766 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79845320 1072693248 1845612694 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9092072366897526


ris (2 : 2): [ 1 0.9092072366897526 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15378 interne); stringhe deallocate: 0 (15298 interne)


Stringhe allocate: 1 (15378 interne); stringhe deallocate: 0 (15303 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.93396302686462 1 1 0.93396302686462 0.9092072366897526 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999997187570023 0.9999997155317746 0.9999999580606205 0.9999998684656071 0.9999997348676838 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552781e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9311383537230312


ris (2 : 2): [ 1 0.9311383537230312 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15413 interne); stringhe deallocate: 0 (15333 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.8685650913248324 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864848 1072693248 -1456908903 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15433 interne); stringhe deallocate: 0 (15353 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9603768544631508 1 0 0 0.93396302686462 0.8695840911529034 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15453 interne); stringhe deallocate: 0 (15373 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047846909e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865520 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9311383537230312


ris (2 : 2): [ 1 0.9311383537230312 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15473 interne); stringhe deallocate: 0 (15393 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.85597372932512 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853528 1072693248 -1456908903 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9046766100037803


ris (2 : 2): [ 1 0.9046766100037803 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15493 interne); stringhe deallocate: 0 (15413 interne)


Stringhe allocate: 1 (15493 interne); stringhe deallocate: 0 (15418 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9311383537230312 1 1 0.9311383537230312 0.9046766100037803 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999997025520554 0.9999997155317746 0.9999999580606205 0.9999998609257172 0.9999997108822269 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788575282e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9339523176649502


ris (2 : 2): [ 1 0.9339523176649502 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15528 interne); stringhe deallocate: 0 (15448 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.8695840923314382 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864168 1072693248 -125002078 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15548 interne); stringhe deallocate: 0 (15468 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9582436470016063 1 0 0 0.9311383537230312 0.8629202570053866 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15568 interne); stringhe deallocate: 0 (15488 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836424e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79845112 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9339523176649502


ris (2 : 2): [ 1 0.9339523176649502 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15588 interne); stringhe deallocate: 0 (15508 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.8595380870828819 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863704 1072693248 -125002078 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9091839384140558


ris (2 : 2): [ 1 0.9091839384140558 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15608 interne); stringhe deallocate: 0 (15528 interne)


Stringhe allocate: 1 (15608 interne); stringhe deallocate: 0 (15533 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9339523176649502 1 1 0.9339523176649502 0.9091839384140558 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999997186972629 0.9999997155317746 0.9999999580606205 0.9999998684378073 0.9999997347495788 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788583566e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9339523176649502


ris (2 : 2): [ 1 0.9339523176649502 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15643 interne); stringhe deallocate: 0 (15563 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.8629198162088656 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858872 1072693248 -125002078 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15663 interne); stringhe deallocate: 0 (15583 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9603639974098385 1 0 0 0.9339523176649502 0.8695479358238942 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15683 interne); stringhe deallocate: 0 (15603 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836399e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838480 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9339523176649502


ris (2 : 2): [ 1 0.9339523176649502 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15703 interne); stringhe deallocate: 0 (15623 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.8612208454140973 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863776 1072693248 -125002078 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9091839384140558


ris (2 : 2): [ 1 0.9091839384140558 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15723 interne); stringhe deallocate: 0 (15643 interne)


Stringhe allocate: 1 (15723 interne); stringhe deallocate: 0 (15648 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9339523176649502 1 1 0.9339523176649502 0.9091839384140558 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999997186972629 0.9999997155317746 0.9999999580606205 0.9999998684378073 0.9999997347495788 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788577052e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9353289260992446


ris (2 : 2): [ 1 0.9353289260992446 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15758 interne); stringhe deallocate: 0 (15678 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.8695478527074148 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79862448 1072693248 -309122184 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15778 interne); stringhe deallocate: 0 (15698 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9603639974098385 1 0 0 0.9339523176649502 0.8695479358238942 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15798 interne); stringhe deallocate: 0 (15718 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.5359030478589e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838464 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9353289260992446


ris (2 : 2): [ 1 0.9353289260992446 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15818 interne); stringhe deallocate: 0 (15738 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.8685650913243883 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863328 1072693248 -309122184 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9113809224193694


ris (2 : 2): [ 1 0.9113809224193694 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15838 interne); stringhe deallocate: 0 (15758 interne)


Stringhe allocate: 1 (15838 interne); stringhe deallocate: 0 (15763 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9353289260992446 1 1 0.9353289260992446 0.9113809224193694 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999997262733633 0.9999997155317746 0.9999999580606205 0.9999998719635743 0.9999997456584745 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553198e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9359849514954557


ris (2 : 2): [ 1 0.9359849514954557 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15873 interne); stringhe deallocate: 0 (15793 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.869547852707889 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864496 1072693248 -1232661636 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15893 interne); stringhe deallocate: 0 (15813 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9613953478177592 1 0 0 0.9353289260992446 0.8727762702371286 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15913 interne); stringhe deallocate: 0 (15833 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047867184e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79852696 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9359849514954557


ris (2 : 2): [ 1 0.9359849514954557 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15933 interne); stringhe deallocate: 0 (15853 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.8695840923317117 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853304 1072693248 -1232661636 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9124197261839143


ris (2 : 2): [ 1 0.9124197261839143 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15953 interne); stringhe deallocate: 0 (15873 interne)


Stringhe allocate: 1 (15953 interne); stringhe deallocate: 0 (15878 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9359849514954557 1 1 0.9359849514954557 0.9124197261839143 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999997298116405 0.9999997155317746 0.9999999580606205 0.999999873610385 0.9999997506591802 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553641e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9388485335660695


ris (2 : 2): [ 1 0.9388485335660695 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (15988 interne); stringhe deallocate: 0 (15908 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.8727760402684499 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79846680 1072693248 343018206 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16008 interne); stringhe deallocate: 0 (15928 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9618808321915107 1 0 0 0.9359849514954557 0.874300558375425 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16028 interne); stringhe deallocate: 0 (15948 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.53590304786067e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79857936 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9388485335660695


ris (2 : 2): [ 1 0.9388485335660695 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16048 interne); stringhe deallocate: 0 (15968 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.8629198162088585 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858512 1072693248 343018206 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9169533289018699


ris (2 : 2): [ 1 0.9169533289018699 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16068 interne); stringhe deallocate: 0 (15988 interne)


Stringhe allocate: 1 (16068 interne); stringhe deallocate: 0 (15993 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9388485335660695 1 1 0.9388485335660695 0.9169533289018699 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999997447285467 0.9999997155317746 0.9999999580606205 0.9999998805543231 0.9999997713577179 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788581896e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9392453138812716


ris (2 : 2): [ 1 0.9392453138812716 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16103 interne); stringhe deallocate: 0 (16023 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.8743004886636996 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863064 1072693248 809587319 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16123 interne); stringhe deallocate: 0 (16043 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9639995643518768 1 0 0 0.9388485335660695 0.8809528932537467 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16143 interne); stringhe deallocate: 0 (16063 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836816e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79853816 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9392453138812716


ris (2 : 2): [ 1 0.9392453138812716 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16163 interne); stringhe deallocate: 0 (16083 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.8695478527077984 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864800 1072693248 809587319 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9175819053772845


ris (2 : 2): [ 1 0.9175819053772845 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16183 interne); stringhe deallocate: 0 (16103 interne)


Stringhe allocate: 1 (16183 interne); stringhe deallocate: 0 (16108 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9392453138812716 1 1 0.9392453138812716 0.9175819053772845 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999997467294267 0.9999997155317746 0.9999999580606205 0.9999998814859006 0.9999997740885407 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.45528078856921e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9366465868699819


ris (2 : 2): [ 1 0.9366465868699819 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16218 interne); stringhe deallocate: 0 (16138 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.8809528438573171 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79851712 1072693248 1129351155 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16238 interne); stringhe deallocate: 0 (16158 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9642935535128469 1 0 0 0.9392453138812716 0.8818754588901313 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16258 interne); stringhe deallocate: 0 (16178 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047837259e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838728 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9366465868699819


ris (2 : 2): [ 1 0.9366465868699819 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16278 interne); stringhe deallocate: 0 (16198 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.869547852707445 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864848 1072693248 1129351155 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9134684631923845


ris (2 : 2): [ 1 0.9134684631923845 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16298 interne); stringhe deallocate: 0 (16218 interne)


Stringhe allocate: 1 (16298 interne); stringhe deallocate: 0 (16223 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9366465868699819 1 1 0.9366465868699819 0.9134684631923845 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999997333338518 0.9999997155317746 0.9999999580606205 0.9999998752498251 0.9999997556079745 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552313e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9392354613124767


ris (2 : 2): [ 1 0.9392354613124767 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16333 interne); stringhe deallocate: 0 (16253 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.8818750469217562 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79845320 1072693248 -2035117068 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16353 interne); stringhe deallocate: 0 (16273 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.962371210915336 1 0 0 0.9366465868699819 0.8758396741077205 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16373 interne); stringhe deallocate: 0 (16293 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047865515e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79839008 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9392354613124767


ris (2 : 2): [ 1 0.9392354613124767 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16393 interne); stringhe deallocate: 0 (16313 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.8727760402687235 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864168 1072693248 -2035117068 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9175607437544698


ris (2 : 2): [ 1 0.9175607437544698 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16413 interne); stringhe deallocate: 0 (16333 interne)


Stringhe allocate: 1 (16413 interne); stringhe deallocate: 0 (16338 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9392354613124767 1 1 0.9392354613124767 0.9175607437544698 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999997466799326 0.9999997155317746 0.9999999580606205 0.9999998814628566 0.9999997739971377 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788595556e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9392354613124767


ris (2 : 2): [ 1 0.9392354613124767 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16448 interne); stringhe deallocate: 0 (16368 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.8758392421727468 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853528 1072693248 -2035117068 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16468 interne); stringhe deallocate: 0 (16388 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9642819673468792 1 0 0 0.9392354613124767 0.881842711101349 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16488 interne); stringhe deallocate: 0 (16408 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047852829e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79856880 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9392354613124767


ris (2 : 2): [ 1 0.9392354613124767 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16508 interne); stringhe deallocate: 0 (16428 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.8743004886636925 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858872 1072693248 -2035117068 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9175607437544698


ris (2 : 2): [ 1 0.9175607437544698 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16528 interne); stringhe deallocate: 0 (16448 interne)


Stringhe allocate: 1 (16528 interne); stringhe deallocate: 0 (16453 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9392354613124767 1 1 0.9392354613124767 0.9175607437544698 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999997466799326 0.9999997155317746 0.9999999580606205 0.9999998814628566 0.9999997739971377 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788563291e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9405019545819097


ris (2 : 2): [ 1 0.9405019545819097 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16563 interne); stringhe deallocate: 0 (16483 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.8818426219949984 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863704 1072693248 -1911022673 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16583 interne); stringhe deallocate: 0 (16503 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9642819673468792 1 0 0 0.9392354613124767 0.881842711101349 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16603 interne); stringhe deallocate: 0 (16523 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047835931e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79848856 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9405019545819097


ris (2 : 2): [ 1 0.9405019545819097 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16623 interne); stringhe deallocate: 0 (16543 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.8809528438577008 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79862448 1072693248 -1911022673 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9195554131775923


ris (2 : 2): [ 1 0.9195554131775923 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16643 interne); stringhe deallocate: 0 (16563 interne)


Stringhe allocate: 1 (16643 interne); stringhe deallocate: 0 (16568 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9405019545819097 1 1 0.9405019545819097 0.9195554131775923 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999997529634961 0.9999997155317746 0.9999999580606205 0.9999998843886202 0.9999997824522022 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552806e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9411055043845841


ris (2 : 2): [ 1 0.9411055043845841 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16678 interne); stringhe deallocate: 0 (16598 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.8818426219945241 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863776 1072693248 1248680735 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16698 interne); stringhe deallocate: 0 (16618 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9652113700444619 1 0 0 0.9405019545819097 0.8847667832220542 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16718 interne); stringhe deallocate: 0 (16638 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047879175e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838168 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9411055043845841


ris (2 : 2): [ 1 0.9411055043845841 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16738 interne); stringhe deallocate: 0 (16658 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.8818750469213121 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864496 1072693248 1248680735 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9204985462065065


ris (2 : 2): [ 1 0.9204985462065065 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16758 interne); stringhe deallocate: 0 (16678 interne)


Stringhe allocate: 1 (16758 interne); stringhe deallocate: 0 (16683 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9411055043845841 1 1 0.9411055043845841 0.9204985462065065 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999997559028639 0.9999997155317746 0.9999999580606205 0.999999885757381 0.9999997863391087 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552781e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9437400279924249


ris (2 : 2): [ 1 0.9437400279924249 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16793 interne); stringhe deallocate: 0 (16713 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.8847665874491 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863328 1072693248 1233447476 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16813 interne); stringhe deallocate: 0 (16733 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9656488648733002 1 0 0 0.9411055043845841 0.8861474110798067 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16833 interne); stringhe deallocate: 0 (16753 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047846909e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865520 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9437400279924249


ris (2 : 2): [ 1 0.9437400279924249 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16853 interne); stringhe deallocate: 0 (16773 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.8758392421730203 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79846680 1072693248 1233447476 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9246146173978005


ris (2 : 2): [ 1 0.9246146173978005 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16873 interne); stringhe deallocate: 0 (16793 interne)


Stringhe allocate: 1 (16873 interne); stringhe deallocate: 0 (16798 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9437400279924249 1 1 0.9437400279924249 0.9246146173978005 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999997683292484 0.9999997155317746 0.9999999580606205 0.9999998915448373 0.9999998025057588 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788575282e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9441050697763689


ris (2 : 2): [ 1 0.9441050697763689 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16908 interne); stringhe deallocate: 0 (16828 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.8861470310216237 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853304 1072693248 -707416970 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16928 interne); stringhe deallocate: 0 (16848 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9675581629168101 1 0 0 0.9437400279924249 0.8921727803146106 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16948 interne); stringhe deallocate: 0 (16868 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836424e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79845112 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9441050697763689


ris (2 : 2): [ 1 0.9441050697763689 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16968 interne); stringhe deallocate: 0 (16888 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.8818426219949913 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863064 1072693248 -707416970 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9251853048808846


ris (2 : 2): [ 1 0.9251853048808846 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (16988 interne); stringhe deallocate: 0 (16908 interne)


Stringhe allocate: 1 (16988 interne); stringhe deallocate: 0 (16913 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9441050697763689 1 1 0.9441050697763689 0.9251853048808846 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999997700004122 0.9999997155317746 0.9999999580606205 0.9999998923232808 0.9999998046485088 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788583566e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9417142154223643


ris (2 : 2): [ 1 0.9417142154223643 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17023 interne); stringhe deallocate: 0 (16943 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.8921723453531527 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858512 1072693248 -642950410 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17043 interne); stringhe deallocate: 0 (16963 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9678230916060644 1 0 0 0.9441050697763689 0.893008396486949 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17063 interne); stringhe deallocate: 0 (16983 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836399e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838480 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9417142154223643


ris (2 : 2): [ 1 0.9417142154223643 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17083 interne); stringhe deallocate: 0 (17003 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.8818426219949078 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79851712 1072693248 -642950410 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9214506988158001


ris (2 : 2): [ 1 0.9214506988158001 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17103 interne); stringhe deallocate: 0 (17023 interne)


Stringhe allocate: 1 (17103 interne); stringhe deallocate: 0 (17028 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9417142154223643 1 1 0.9417142154223643 0.9214506988158001 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999997588319449 0.9999997155317746 0.9999999580606205 0.9999998871214337 0.999999790192745 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788577052e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9440960053163855


ris (2 : 2): [ 1 0.9440960053163855 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17138 interne); stringhe deallocate: 0 (17058 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.8930082408910085 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864800 1072693248 -748435553 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17158 interne); stringhe deallocate: 0 (17078 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9660907702537532 1 0 0 0.9417142154223643 0.8875414690695533 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17178 interne); stringhe deallocate: 0 (17098 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.5359030478589e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838464 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9440960053163855


ris (2 : 2): [ 1 0.9440960053163855 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17198 interne); stringhe deallocate: 0 (17118 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.8847665874486559 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79845320 1072693248 -748435553 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9251660843819084


ris (2 : 2): [ 1 0.9251660843819084 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17218 interne); stringhe deallocate: 0 (17138 interne)


Stringhe allocate: 1 (17218 interne); stringhe deallocate: 0 (17143 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9440960053163855 1 1 0.9440960053163855 0.9251660843819084 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999997699590613 0.9999997155317746 0.9999999580606205 0.9999998923040188 0.9999998045767217 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553198e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9440960053163855


ris (2 : 2): [ 1 0.9440960053163855 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17253 interne); stringhe deallocate: 0 (17173 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.887541302872684 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864848 1072693248 -748435553 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17273 interne); stringhe deallocate: 0 (17193 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9678126507066227 1 0 0 0.9440960053163855 0.8929787350885311 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17293 interne); stringhe deallocate: 0 (17213 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047867184e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79852696 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9440960053163855


ris (2 : 2): [ 1 0.9440960053163855 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17313 interne); stringhe deallocate: 0 (17233 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.8861470310218973 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853528 1072693248 -748435553 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9251660843819084


ris (2 : 2): [ 1 0.9251660843819084 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17333 interne); stringhe deallocate: 0 (17253 interne)


Stringhe allocate: 1 (17333 interne); stringhe deallocate: 0 (17258 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9440960053163855 1 1 0.9440960053163855 0.9251660843819084 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999997699590613 0.9999997155317746 0.9999999580606205 0.9999998923040188 0.9999998045767217 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553641e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.945261191553488


ris (2 : 2): [ 1 0.945261191553488 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17368 interne); stringhe deallocate: 0 (17288 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.8929786769871999 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864168 1072693248 1711066783 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17388 interne); stringhe deallocate: 0 (17308 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9678126507066227 1 0 0 0.9440960053163855 0.8929787350885311 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17408 interne); stringhe deallocate: 0 (17328 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.53590304786067e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79857936 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.945261191553488


ris (2 : 2): [ 1 0.945261191553488 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17428 interne); stringhe deallocate: 0 (17348 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.8921723453531456 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863704 1072693248 1711066783 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9269770377890297


ris (2 : 2): [ 1 0.9269770377890297 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17448 interne); stringhe deallocate: 0 (17368 interne)


Stringhe allocate: 1 (17448 interne); stringhe deallocate: 0 (17373 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.945261191553488 1 1 0.945261191553488 0.9269770377890297 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.999999775214011 0.9999997155317746 0.9999999580606205 0.9999998947520059 0.9999998112259868 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788581896e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9458164632951192


ris (2 : 2): [ 1 0.9458164632951192 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17483 interne); stringhe deallocate: 0 (17403 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.8929786769876742 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858872 1072693248 -482615658 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17503 interne); stringhe deallocate: 0 (17423 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9686501830509963 1 0 0 0.945261191553488 0.895627220840026 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17523 interne); stringhe deallocate: 0 (17443 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836816e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79853816 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9458164632951192


ris (2 : 2): [ 1 0.9458164632951192 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17543 interne); stringhe deallocate: 0 (17463 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.8930082408913922 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863776 1072693248 -482615658 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.927833296000341


ris (2 : 2): [ 1 0.927833296000341 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17563 interne); stringhe deallocate: 0 (17483 interne)


Stringhe allocate: 1 (17563 interne); stringhe deallocate: 0 (17488 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9458164632951192 1 1 0.9458164632951192 0.927833296000341 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999997776758636 0.9999997155317746 0.9999999580606205 0.9999998958989433 0.9999998142906519 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.45528078856921e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9482402508692543


ris (2 : 2): [ 1 0.9482402508692543 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17598 interne); stringhe deallocate: 0 (17518 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.8956270305638601 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79862448 1072693248 -263749825 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17618 interne); stringhe deallocate: 0 (17538 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9690444320234974 1 0 0 0.9458164632951192 0.8968777280238385 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17638 interne); stringhe deallocate: 0 (17558 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047837259e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838728 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9482402508692543


ris (2 : 2): [ 1 0.9482402508692543 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17658 interne); stringhe deallocate: 0 (17578 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.8875413028722399 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863328 1072693248 -263749825 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9315702233190707


ris (2 : 2): [ 1 0.9315702233190707 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17678 interne); stringhe deallocate: 0 (17598 interne)


Stringhe allocate: 1 (17678 interne); stringhe deallocate: 0 (17603 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9482402508692543 1 1 0.9482402508692543 0.9315702233190707 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999997881101118 0.9999997155317746 0.9999999580606205 0.9999999007608059 0.9999998270937385 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552313e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9485760928929623


ris (2 : 2): [ 1 0.9485760928929623 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17713 interne); stringhe deallocate: 0 (17633 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.8968772975931429 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864496 1072693248 1075299444 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17733 interne); stringhe deallocate: 0 (17653 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9707649981718238 1 0 0 0.9482402508692543 0.9023352214908945 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17753 interne); stringhe deallocate: 0 (17673 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047865515e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79839008 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9485760928929623


ris (2 : 2): [ 1 0.9485760928929623 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17773 interne); stringhe deallocate: 0 (17693 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.8929786769874735 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853304 1072693248 1075299444 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9320883439898734


ris (2 : 2): [ 1 0.9320883439898734 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17793 interne); stringhe deallocate: 0 (17713 interne)


Stringhe allocate: 1 (17793 interne); stringhe deallocate: 0 (17718 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9485760928929623 1 1 0.9485760928929623 0.9320883439898734 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999997895167297 0.9999997155317746 0.9999999580606205 0.9999999014163132 0.9999998287977724 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788595556e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9463764834236993


ris (2 : 2): [ 1 0.9463764834236993 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17828 interne); stringhe deallocate: 0 (17748 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9023351757054616 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79846680 1072693248 1438663625 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17848 interne); stringhe deallocate: 0 (17768 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9710037389691788 1 0 0 0.9485760928929623 0.9030920829590522 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17868 interne); stringhe deallocate: 0 (17788 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047852829e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79856880 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9463764834236993


ris (2 : 2): [ 1 0.9463764834236993 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17888 interne); stringhe deallocate: 0 (17808 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.8929786769876671 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858512 1072693248 1438663625 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9286977440132287


ris (2 : 2): [ 1 0.9286977440132287 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17908 interne); stringhe deallocate: 0 (17828 interne)


Stringhe allocate: 1 (17908 interne); stringhe deallocate: 0 (17833 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9463764834236993 1 1 0.9463764834236993 0.9286977440132287 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999997801314606 0.9999997155317746 0.9999999580606205 0.9999998970430297 0.9999998173341624 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788563291e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.94856775350082


ris (2 : 2): [ 1 0.94856775350082 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17943 interne); stringhe deallocate: 0 (17863 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9030919162760043 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863064 1072693248 -1024823213 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17963 interne); stringhe deallocate: 0 (17883 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9694426555713075 1 0 0 0.9463764834236993 0.8981403995845362 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (17983 interne); stringhe deallocate: 0 (17903 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047835931e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79848856 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.94856775350082


ris (2 : 2): [ 1 0.94856775350082 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18003 interne); stringhe deallocate: 0 (17923 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.8956270305642438 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864800 1072693248 -1024823213 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9320708869365524


ris (2 : 2): [ 1 0.9320708869365524 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18023 interne); stringhe deallocate: 0 (17943 interne)


Stringhe allocate: 1 (18023 interne); stringhe deallocate: 0 (17948 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.94856775350082 1 1 0.94856775350082 0.9320708869365524 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999997894819148 0.9999997155317746 0.9999999580606205 0.9999999014000887 0.9999998287406327 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552806e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.94856775350082


ris (2 : 2): [ 1 0.94856775350082 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18058 interne); stringhe deallocate: 0 (17978 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.8981399623875905 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79851712 1072693248 -1024823213 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18078 interne); stringhe deallocate: 0 (17998 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9709943301315523 1 0 0 0.94856775350082 0.9030652170681047 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18098 interne); stringhe deallocate: 0 (18018 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047879175e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838168 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.94856775350082


ris (2 : 2): [ 1 0.94856775350082 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18118 interne); stringhe deallocate: 0 (18038 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.8968772975926989 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864848 1072693248 -1024823213 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9320708869365524


ris (2 : 2): [ 1 0.9320708869365524 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18138 interne); stringhe deallocate: 0 (18058 interne)


Stringhe allocate: 1 (18138 interne); stringhe deallocate: 0 (18063 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.94856775350082 1 1 0.94856775350082 0.9320708869365524 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999997894819148 0.9999997155317746 0.9999999580606205 0.9999999014000887 0.9999998287406327 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552781e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9496397362739625


ris (2 : 2): [ 1 0.9496397362739625 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18173 interne); stringhe deallocate: 0 (18093 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9030652133951449 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79845320 1072693248 -548869277 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18193 interne); stringhe deallocate: 0 (18113 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9709943301315523 1 0 0 0.94856775350082 0.9030652170681047 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18213 interne); stringhe deallocate: 0 (18133 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047846909e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865520 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9496397362739625


ris (2 : 2): [ 1 0.9496397362739625 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18233 interne); stringhe deallocate: 0 (18153 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9023351757057352 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864168 1072693248 -548869277 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9337150163864121


ris (2 : 2): [ 1 0.9337150163864121 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18253 interne); stringhe deallocate: 0 (18173 interne)


Stringhe allocate: 1 (18253 interne); stringhe deallocate: 0 (18178 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9496397362739625 1 1 0.9496397362739625 0.9337150163864121 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999997939102984 0.9999997155317746 0.9999999580606205 0.999999903463931 0.99999983403933 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788575282e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9501505917256382


ris (2 : 2): [ 1 0.9501505917256382 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18288 interne); stringhe deallocate: 0 (18208 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9030652133946706 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853528 1072693248 918000321 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18308 interne); stringhe deallocate: 0 (18228 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.971749073362185 1 0 0 0.9496397362739625 0.9054640897485971 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18328 interne); stringhe deallocate: 0 (18248 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836424e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79845112 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9501505917256382


ris (2 : 2): [ 1 0.9501505917256382 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18348 interne); stringhe deallocate: 0 (18268 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9030919162759972 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858872 1072693248 918000321 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9344923885288049


ris (2 : 2): [ 1 0.9344923885288049 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18368 interne); stringhe deallocate: 0 (18288 interne)


Stringhe allocate: 1 (18368 interne); stringhe deallocate: 0 (18293 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9501505917256382 1 1 0.9501505917256382 0.9344923885288049 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999997959877578 0.9999997155317746 0.9999999580606205 0.9999999044322043 0.999999836487248 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788583566e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9523805000806245


ris (2 : 2): [ 1 0.9523805000806245 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18403 interne); stringhe deallocate: 0 (18323 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9054637043009066 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863704 1072693248 -1415169898 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18423 interne); stringhe deallocate: 0 (18343 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9721043512659557 1 0 0 0.9501505917256382 0.9065967397947606 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18443 interne); stringhe deallocate: 0 (18363 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836399e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838480 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9523805000806245


ris (2 : 2): [ 1 0.9523805000806245 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18463 interne); stringhe deallocate: 0 (18383 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.8981399623879742 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79862448 1072693248 -1415169898 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9378850369317193


ris (2 : 2): [ 1 0.9378850369317193 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18483 interne); stringhe deallocate: 0 (18403 interne)


Stringhe allocate: 1 (18483 interne); stringhe deallocate: 0 (18408 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9523805000806245 1 1 0.9523805000806245 0.9378850369317193 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998048135113 0.9999997155317746 0.9999999580606205 0.9999999085463153 0.999999846754864 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788577052e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9526894780383521


ris (2 : 2): [ 1 0.9526894780383521 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18518 interne); stringhe deallocate: 0 (18438 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.906596669388323 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863776 1072693248 -1527947130 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18538 interne); stringhe deallocate: 0 (18458 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9736548413815445 1 0 0 0.9523805000806245 0.9115398783132638 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18558 interne); stringhe deallocate: 0 (18478 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.5359030478589e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838464 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9526894780383521


ris (2 : 2): [ 1 0.9526894780383521 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18578 interne); stringhe deallocate: 0 (18498 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9030652133947008 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864496 1072693248 -1527947130 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9383554245836902


ris (2 : 2): [ 1 0.9383554245836902 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18598 interne); stringhe deallocate: 0 (18518 interne)


Stringhe allocate: 1 (18598 interne); stringhe deallocate: 0 (18523 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9526894780383521 1 1 0.9526894780383521 0.9383554245836902 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.999999806005916 0.9999997155317746 0.9999999580606205 0.9999999091022234 0.9999998481266206 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553198e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9506658157399073


ris (2 : 2): [ 1 0.9506658157399073 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18633 interne); stringhe deallocate: 0 (18553 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9115395633707308 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863328 1072693248 -1216289306 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18653 interne); stringhe deallocate: 0 (18573 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9738699829201329 1 0 0 0.9526894780383521 0.9122254075038231 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18673 interne); stringhe deallocate: 0 (18593 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047867184e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79852696 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9506658157399073


ris (2 : 2): [ 1 0.9506658157399073 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18693 interne); stringhe deallocate: 0 (18613 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9030652133949442 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79846680 1072693248 -1216289306 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9352771968927207


ris (2 : 2): [ 1 0.9352771968927207 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18713 interne); stringhe deallocate: 0 (18633 interne)


Stringhe allocate: 1 (18713 interne); stringhe deallocate: 0 (18638 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9506658157399073 1 1 0.9506658157399073 0.9352771968927207 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999997980617721 0.9999997155317746 0.9999999580606205 0.9999999053989214 0.9999998389219577 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553641e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9526818057157392


ris (2 : 2): [ 1 0.9526818057157392 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18748 interne); stringhe deallocate: 0 (18668 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9122252552037526 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853304 1072693248 -1914608915 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18768 interne); stringhe deallocate: 0 (18688 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9724632108639326 1 0 0 0.9506658157399073 0.9077404077566533 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18788 interne); stringhe deallocate: 0 (18708 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.53590304786067e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79857936 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9526818057157392


ris (2 : 2): [ 1 0.9526818057157392 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18808 interne); stringhe deallocate: 0 (18728 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9054637043008995 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863064 1072693248 -1914608915 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9383395695232109


ris (2 : 2): [ 1 0.9383395695232109 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18828 interne); stringhe deallocate: 0 (18748 interne)


Stringhe allocate: 1 (18828 interne); stringhe deallocate: 0 (18753 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9526818057157392 1 1 0.9526818057157392 0.9383395695232109 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998059763954 0.9999997155317746 0.9999999580606205 0.9999999090884604 0.9999998480805843 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788581896e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9526818057157392


ris (2 : 2): [ 1 0.9526818057157392 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18863 interne); stringhe deallocate: 0 (18783 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9077401248941683 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858512 1072693248 -1914608915 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18883 interne); stringhe deallocate: 0 (18803 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9738615041287936 1 0 0 0.9526818057157392 0.9122010736520044 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18903 interne); stringhe deallocate: 0 (18823 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836816e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79853816 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9526818057157392


ris (2 : 2): [ 1 0.9526818057157392 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18923 interne); stringhe deallocate: 0 (18843 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9065966693887066 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79851712 1072693248 -1914608915 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9383395695232109


ris (2 : 2): [ 1 0.9383395695232109 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18943 interne); stringhe deallocate: 0 (18863 interne)


Stringhe allocate: 1 (18943 interne); stringhe deallocate: 0 (18868 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9526818057157392 1 1 0.9526818057157392 0.9383395695232109 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998059763954 0.9999997155317746 0.9999999580606205 0.9999999090884604 0.9999998480805843 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.45528078856921e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.95366804038735


ris (2 : 2): [ 1 0.95366804038735 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18978 interne); stringhe deallocate: 0 (18898 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9122009365086843 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864800 1072693248 -694777911 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (18998 interne); stringhe deallocate: 0 (18918 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9738615041287936 1 0 0 0.9526818057157392 0.9122010736520044 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19018 interne); stringhe deallocate: 0 (18938 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047837259e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838728 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.95366804038735


ris (2 : 2): [ 1 0.95366804038735 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19038 interne); stringhe deallocate: 0 (18958 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9115395633702867 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79845320 1072693248 -694777911 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9398322168202451


ris (2 : 2): [ 1 0.9398322168202451 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19058 interne); stringhe deallocate: 0 (18978 interne)


Stringhe allocate: 1 (19058 interne); stringhe deallocate: 0 (18983 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.95366804038735 1 1 0.95366804038735 0.9398322168202451 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998097345175 0.9999997155317746 0.9999999580606205 0.9999999108406361 0.9999998523539979 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552313e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9541380324163704


ris (2 : 2): [ 1 0.9541380324163704 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19093 interne); stringhe deallocate: 0 (19013 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9122009365091586 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864848 1072693248 2074289056 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19113 interne); stringhe deallocate: 0 (19033 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9745416418277493 1 0 0 0.95366804038735 0.9143738586479944 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19133 interne); stringhe deallocate: 0 (19053 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047865515e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79839008 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9541380324163704


ris (2 : 2): [ 1 0.9541380324163704 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19153 interne); stringhe deallocate: 0 (19073 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9122252552040262 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853528 1072693248 2074289056 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9405379583902216


ris (2 : 2): [ 1 0.9405379583902216 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19173 interne); stringhe deallocate: 0 (19093 interne)


Stringhe allocate: 1 (19173 interne); stringhe deallocate: 0 (19098 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9541380324163704 1 1 0.9541380324163704 0.9405379583902216 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998114997601 0.9999997155317746 0.9999999580606205 0.9999999116637173 0.9999998543324555 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788595556e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9561895699870304


ris (2 : 2): [ 1 0.9561895699870304 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19208 interne); stringhe deallocate: 0 (19128 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9143734066014577 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864168 1072693248 -562308110 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19228 interne); stringhe deallocate: 0 (19148 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9748618008977693 1 0 0 0.9541380324163704 0.9153997592879909 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19248 interne); stringhe deallocate: 0 (19168 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047852829e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79856880 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9561895699870304


ris (2 : 2): [ 1 0.9561895699870304 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19268 interne); stringhe deallocate: 0 (19188 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9077401248941612 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863704 1072693248 -562308110 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9436179927307279


ris (2 : 2): [ 1 0.9436179927307279 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19288 interne); stringhe deallocate: 0 (19208 interne)


Stringhe allocate: 1 (19288 interne); stringhe deallocate: 0 (19213 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9561895699870304 1 1 0.9561895699870304 0.9436179927307279 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998190153433 0.9999997155317746 0.9999999580606205 0.9999999151684502 0.9999998626612427 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788563291e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9564738327404151


ris (2 : 2): [ 1 0.9564738327404151 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19323 interne); stringhe deallocate: 0 (19243 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9153995601663851 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858872 1072693248 48443911 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19343 interne); stringhe deallocate: 0 (19263 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.976259026755394 1 0 0 0.9561895699870304 0.9198770194861219 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19363 interne); stringhe deallocate: 0 (19283 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047835931e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79848856 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9564738327404151


ris (2 : 2): [ 1 0.9564738327404151 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19383 interne); stringhe deallocate: 0 (19303 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.912200936509068 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863776 1072693248 48443911 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9440450374940591


ris (2 : 2): [ 1 0.9440450374940591 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19403 interne); stringhe deallocate: 0 (19323 interne)


Stringhe allocate: 1 (19403 interne); stringhe deallocate: 0 (19328 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9564738327404151 1 1 0.9564738327404151 0.9440450374940591 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998200327966 0.9999997155317746 0.9999999580606205 0.9999999156429735 0.999999863777799 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552806e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9546120435658492


ris (2 : 2): [ 1 0.9546120435658492 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19438 interne); stringhe deallocate: 0 (19358 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.91987658424428 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79862448 1072693248 -1905298140 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19458 interne); stringhe deallocate: 0 (19378 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9764529017882179 1 0 0 0.9564738327404151 0.920497939282277 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19478 interne); stringhe deallocate: 0 (19398 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047879175e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838168 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9546120435658492


ris (2 : 2): [ 1 0.9546120435658492 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19498 interne); stringhe deallocate: 0 (19418 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9122009365087145 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863328 1072693248 -1905298140 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9412504518170922


ris (2 : 2): [ 1 0.9412504518170922 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19518 interne); stringhe deallocate: 0 (19438 interne)


Stringhe allocate: 1 (19518 interne); stringhe deallocate: 0 (19443 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9546120435658492 1 1 0.9546120435658492 0.9412504518170922 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998132635106 0.9999997155317746 0.9999999580606205 0.9999999124861411 0.9999998563029493 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552781e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9564667741283159


ris (2 : 2): [ 1 0.9564667741283159 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19553 interne); stringhe deallocate: 0 (19473 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9204979030618929 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864496 1072693248 894627712 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19573 interne); stringhe deallocate: 0 (19493 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9751851876163391 1 0 0 0.9546120435658492 0.9164356394334313 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19593 interne); stringhe deallocate: 0 (19513 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047846909e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865520 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9564667741283159


ris (2 : 2): [ 1 0.9564667741283159 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19613 interne); stringhe deallocate: 0 (19533 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9143734066017313 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853304 1072693248 894627712 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9440306377211073


ris (2 : 2): [ 1 0.9440306377211073 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19633 interne); stringhe deallocate: 0 (19553 interne)


Stringhe allocate: 1 (19633 interne); stringhe deallocate: 0 (19558 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9564667741283159 1 1 0.9564667741283159 0.9440306377211073 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998200076014 0.9999997155317746 0.9999999580606205 0.9999999156312227 0.9999998637402976 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788575282e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9564667741283159


ris (2 : 2): [ 1 0.9564667741283159 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19668 interne); stringhe deallocate: 0 (19588 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.916435250473528 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79846680 1072693248 894627712 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19688 interne); stringhe deallocate: 0 (19608 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.976445261111056 1 0 0 0.9564667741283159 0.9204758988321633 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19708 interne); stringhe deallocate: 0 (19628 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836424e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79845112 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9564667741283159


ris (2 : 2): [ 1 0.9564667741283159 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19728 interne); stringhe deallocate: 0 (19648 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.915399560166378 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858512 1072693248 894627712 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9440306377211073


ris (2 : 2): [ 1 0.9440306377211073 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19748 interne); stringhe deallocate: 0 (19668 interne)


Stringhe allocate: 1 (19748 interne); stringhe deallocate: 0 (19673 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9564667741283159 1 1 0.9564667741283159 0.9440306377211073 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998200076014 0.9999997155317746 0.9999999580606205 0.9999999156312227 0.9999998637402976 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788583566e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9573741197049953


ris (2 : 2): [ 1 0.9573741197049953 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19783 interne); stringhe deallocate: 0 (19703 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9204754917154574 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863064 1072693248 214265483 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19803 interne); stringhe deallocate: 0 (19723 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.976445261111056 1 0 0 0.9564667741283159 0.9204758988321633 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19823 interne); stringhe deallocate: 0 (19743 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836399e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838480 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9573741197049953


ris (2 : 2): [ 1 0.9573741197049953 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19843 interne); stringhe deallocate: 0 (19763 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9198765842446637 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864800 1072693248 214265483 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9453857363944415


ris (2 : 2): [ 1 0.9453857363944415 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19863 interne); stringhe deallocate: 0 (19783 interne)


Stringhe allocate: 1 (19863 interne); stringhe deallocate: 0 (19788 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9573741197049953 1 1 0.9573741197049953 0.9453857363944415 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998232175762 0.9999997155317746 0.9999999580606205 0.9999999171283883 0.9999998672245627 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788577052e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9578065169841435


ris (2 : 2): [ 1 0.9578065169841435 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19898 interne); stringhe deallocate: 0 (19818 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9204754917149831 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79851712 1072693248 -632621493 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19918 interne); stringhe deallocate: 0 (19838 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9770581679319053 1 0 0 0.9573741197049953 0.9224439043263467 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19938 interne); stringhe deallocate: 0 (19858 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.5359030478589e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838464 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9578065169841435


ris (2 : 2): [ 1 0.9578065169841435 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19958 interne); stringhe deallocate: 0 (19878 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9204979030614489 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864848 1072693248 -632621493 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9460264367999438


ris (2 : 2): [ 1 0.9460264367999438 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (19978 interne); stringhe deallocate: 0 (19898 interne)


Stringhe allocate: 1 (19978 interne); stringhe deallocate: 0 (19903 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9578065169841435 1 1 0.9578065169841435 0.9460264367999438 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.999999824727092 0.9999997155317746 0.9999999580606205 0.9999999178324891 0.9999998688407866 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553198e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9596939516827123


ris (2 : 2): [ 1 0.9596939516827123 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20013 interne); stringhe deallocate: 0 (19933 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9224438755045199 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79845320 1072693248 387231260 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20033 interne); stringhe deallocate: 0 (19953 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9773466796179301 1 0 0 0.9578065169841435 0.9233731164178739 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20053 interne); stringhe deallocate: 0 (19973 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047867184e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79852696 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9596939516827123


ris (2 : 2): [ 1 0.9596939516827123 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20073 interne); stringhe deallocate: 0 (19993 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9164352504738016 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864168 1072693248 387231260 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9488226149478473


ris (2 : 2): [ 1 0.9488226149478473 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20093 interne); stringhe deallocate: 0 (20013 interne)


Stringhe allocate: 1 (20093 interne); stringhe deallocate: 0 (20018 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9596939516827123 1 1 0.9596939516827123 0.9488226149478473 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998311667108 0.9999997155317746 0.9999999580606205 0.9999999208365384 0.9999998756672269 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553641e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9599554762055493


ris (2 : 2): [ 1 0.9599554762055493 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20128 interne); stringhe deallocate: 0 (20048 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9233727542882253 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853528 1072693248 -1946327050 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20148 interne); stringhe deallocate: 0 (20068 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9786057911843223 1 0 0 0.9596939516827123 0.9274284061321696 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20168 interne); stringhe deallocate: 0 (20088 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.53590304786067e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79857936 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9599554762055493


ris (2 : 2): [ 1 0.9599554762055493 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20188 interne); stringhe deallocate: 0 (20108 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9204754917154503 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858872 1072693248 -1946327050 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.949210303926707


ris (2 : 2): [ 1 0.949210303926707 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20208 interne); stringhe deallocate: 0 (20128 interne)


Stringhe allocate: 1 (20208 interne); stringhe deallocate: 0 (20133 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9599554762055493 1 1 0.9599554762055493 0.949210303926707 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998320401268 0.9999997155317746 0.9999999580606205 0.9999999212440263 0.9999998765852347 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788581896e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9582426118935566


ris (2 : 2): [ 1 0.9582426118935566 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20243 interne); stringhe deallocate: 0 (20163 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9274282543192172 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863704 1072693248 1761013025 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20263 interne); stringhe deallocate: 0 (20183 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9787805018768032 1 0 0 0.9599554762055493 0.9279908058035102 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20283 interne); stringhe deallocate: 0 (20203 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836816e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79853816 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9582426118935566


ris (2 : 2): [ 1 0.9582426118935566 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20303 interne); stringhe deallocate: 0 (20223 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9204754917153668 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79862448 1072693248 1761013025 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9466732675683934


ris (2 : 2): [ 1 0.9466732675683934 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20323 interne); stringhe deallocate: 0 (20243 interne)


Stringhe allocate: 1 (20323 interne); stringhe deallocate: 0 (20248 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9582426118935566 1 1 0.9582426118935566 0.9466732675683934 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998262364613 0.9999997155317746 0.9999999580606205 0.9999999185365518 0.9999998704525188 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.45528078856921e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9599489822131457


ris (2 : 2): [ 1 0.9599489822131457 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20358 interne); stringhe deallocate: 0 (20278 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9279904453282644 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863776 1072693248 -309468444 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20378 interne); stringhe deallocate: 0 (20298 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9776380999035683 1 0 0 0.9582426118935566 0.9243113674719617 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20398 interne); stringhe deallocate: 0 (20318 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047837259e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838728 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9599489822131457


ris (2 : 2): [ 1 0.9599489822131457 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20418 interne); stringhe deallocate: 0 (20338 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9224438755040758 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864496 1072693248 -309468444 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9491972261398436


ris (2 : 2): [ 1 0.9491972261398436 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20438 interne); stringhe deallocate: 0 (20358 interne)


Stringhe allocate: 1 (20438 interne); stringhe deallocate: 0 (20363 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9599489822131457 1 1 0.9599489822131457 0.9491972261398436 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998320184935 0.9999997155317746 0.9999999580606205 0.9999999212339332 0.9999998765543786 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552313e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9599489822131457


ris (2 : 2): [ 1 0.9599489822131457 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20473 interne); stringhe deallocate: 0 (20393 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9243111698160433 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863328 1072693248 -309468444 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20493 interne); stringhe deallocate: 0 (20413 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.978773616468585 1 0 0 0.9599489822131457 0.9279708426084286 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20513 interne); stringhe deallocate: 0 (20433 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047865515e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79839008 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9599489822131457


ris (2 : 2): [ 1 0.9599489822131457 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20533 interne); stringhe deallocate: 0 (20453 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9233727542884989 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79846680 1072693248 -309468444 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9491972261398436


ris (2 : 2): [ 1 0.9491972261398436 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20553 interne); stringhe deallocate: 0 (20473 interne)


Stringhe allocate: 1 (20553 interne); stringhe deallocate: 0 (20478 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9599489822131457 1 1 0.9599489822131457 0.9491972261398436 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998320184935 0.9999997155317746 0.9999999580606205 0.9999999212339332 0.9999998765543786 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788595556e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9607837490482794


ris (2 : 2): [ 1 0.9607837490482794 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20588 interne); stringhe deallocate: 0 (20508 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9279704181676198 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853304 1072693248 -1885988442 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20608 interne); stringhe deallocate: 0 (20528 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.978773616468585 1 0 0 0.9599489822131457 0.9279708426084286 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20628 interne); stringhe deallocate: 0 (20548 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047852829e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79856880 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9607837490482794


ris (2 : 2): [ 1 0.9607837490482794 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20648 interne); stringhe deallocate: 0 (20568 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9274282543192101 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863064 1072693248 -1885988442 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9504274304488728


ris (2 : 2): [ 1 0.9504274304488728 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20668 interne); stringhe deallocate: 0 (20588 interne)


Stringhe allocate: 1 (20668 interne); stringhe deallocate: 0 (20593 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9607837490482794 1 1 0.9607837490482794 0.9504274304488728 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.999999834776613 0.9999997155317746 0.9999999580606205 0.9999999225207887 0.9999998794234548 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788563291e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9611815587885946


ris (2 : 2): [ 1 0.9611815587885946 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20703 interne); stringhe deallocate: 0 (20623 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9279704181680941 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858512 1072693248 -737116810 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20723 interne); stringhe deallocate: 0 (20643 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9793259380955148 1 0 0 0.9607837490482794 0.9297533685443876 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20743 interne); stringhe deallocate: 0 (20663 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047835931e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79848856 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9611815587885946


ris (2 : 2): [ 1 0.9611815587885946 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20763 interne); stringhe deallocate: 0 (20683 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9279904453286481 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79851712 1072693248 -737116810 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9510090740348764


ris (2 : 2): [ 1 0.9510090740348764 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20783 interne); stringhe deallocate: 0 (20703 interne)


Stringhe allocate: 1 (20783 interne); stringhe deallocate: 0 (20708 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9611815587885946 1 1 0.9611815587885946 0.9510090740348764 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998360750215 0.9999997155317746 0.9999999580606205 0.9999999231266242 0.9999998807566486 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552806e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9629180172343521


ris (2 : 2): [ 1 0.9629180172343521 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20818 interne); stringhe deallocate: 0 (20738 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9297533123021413 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864800 1072693248 1914176970 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20838 interne); stringhe deallocate: 0 (20758 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9795859307012075 1 0 0 0.9611815587885946 0.9305950047360839 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20858 interne); stringhe deallocate: 0 (20778 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047879175e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838168 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9629180172343521


ris (2 : 2): [ 1 0.9629180172343521 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20878 interne); stringhe deallocate: 0 (20798 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9243111698155992 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79845320 1072693248 1914176970 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9535475132081217


ris (2 : 2): [ 1 0.9535475132081217 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20898 interne); stringhe deallocate: 0 (20818 interne)


Stringhe allocate: 1 (20898 interne); stringhe deallocate: 0 (20823 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9629180172343521 1 1 0.9629180172343521 0.9535475132081217 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998416242073 0.9999997155317746 0.9999999580606205 0.9999999257161392 0.9999998864046183 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552781e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9631586223619347


ris (2 : 2): [ 1 0.9631586223619347 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20933 interne); stringhe deallocate: 0 (20853 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9305949298868441 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864848 1072693248 134018339 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20953 interne); stringhe deallocate: 0 (20873 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9807205803982589 1 0 0 0.9629180172343521 0.9342680936063806 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20973 interne); stringhe deallocate: 0 (20893 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047846909e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865520 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9631586223619347


ris (2 : 2): [ 1 0.9631586223619347 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (20993 interne); stringhe deallocate: 0 (20913 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9279704181678934 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853528 1072693248 134018339 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.953899467404176


ris (2 : 2): [ 1 0.953899467404176 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21013 interne); stringhe deallocate: 0 (20933 interne)


Stringhe allocate: 1 (21013 interne); stringhe deallocate: 0 (20938 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9631586223619347 1 1 0.9631586223619347 0.953899467404176 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998423781431 0.9999997155317746 0.9999999580606205 0.9999999260679963 0.999999887166298 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788575282e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9615827703850416


ris (2 : 2): [ 1 0.9615827703850416 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21048 interne); stringhe deallocate: 0 (20968 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9342680065160085 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864168 1072693248 988179765 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21068 interne); stringhe deallocate: 0 (20988 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9808780211208947 1 0 0 0.9631586223619347 0.9347774885250707 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21088 interne); stringhe deallocate: 0 (21008 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836424e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79845112 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9615827703850416


ris (2 : 2): [ 1 0.9615827703850416 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21108 interne); stringhe deallocate: 0 (21028 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.927970418168087 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863704 1072693248 988179765 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9515962835961493


ris (2 : 2): [ 1 0.9515962835961493 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21128 interne); stringhe deallocate: 0 (21048 interne)


Stringhe allocate: 1 (21128 interne); stringhe deallocate: 0 (21053 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9615827703850416 1 1 0.9615827703850416 0.9515962835961493 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998373741985 0.9999997155317746 0.9999999580606205 0.9999999237328424 0.9999998820876475 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788583566e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9631526478251922


ris (2 : 2): [ 1 0.9631526478251922 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21163 interne); stringhe deallocate: 0 (21083 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9347772686014437 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858872 1072693248 -2140217004 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21183 interne); stringhe deallocate: 0 (21103 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9798485443949931 1 0 0 0.9615827703850416 0.9314448279911425 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21203 interne); stringhe deallocate: 0 (21123 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836399e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838480 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9631526478251922


ris (2 : 2): [ 1 0.9631526478251922 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21223 interne); stringhe deallocate: 0 (21143 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.929753312302525 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863776 1072693248 -2140217004 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9538875904842883


ris (2 : 2): [ 1 0.9538875904842883 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21243 interne); stringhe deallocate: 0 (21163 interne)


Stringhe allocate: 1 (21243 interne); stringhe deallocate: 0 (21168 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9631526478251922 1 1 0.9631526478251922 0.9538875904842883 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998423594654 0.9999997155317746 0.9999999580606205 0.9999999260592795 0.999999887140678 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788577052e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9631526478251922


ris (2 : 2): [ 1 0.9631526478251922 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21278 interne); stringhe deallocate: 0 (21198 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9314446537022878 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79862448 1072693248 -2140217004 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21298 interne); stringhe deallocate: 0 (21218 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9808718163251727 1 0 0 0.9631526478251922 0.934759406809461 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21318 interne); stringhe deallocate: 0 (21238 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.5359030478589e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838464 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9631526478251922


ris (2 : 2): [ 1 0.9631526478251922 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21338 interne); stringhe deallocate: 0 (21258 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9305949298864 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863328 1072693248 -2140217004 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9538875904842883


ris (2 : 2): [ 1 0.9538875904842883 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21358 interne); stringhe deallocate: 0 (21278 interne)


Stringhe allocate: 1 (21358 interne); stringhe deallocate: 0 (21283 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9631526478251922 1 1 0.9631526478251922 0.9538875904842883 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998423594654 0.9999997155317746 0.9999999580606205 0.9999999260592795 0.999999887140678 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553198e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.963920641505824


ris (2 : 2): [ 1 0.963920641505824 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21393 interne); stringhe deallocate: 0 (21313 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.934759148789432 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864496 1072693248 434544269 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21413 interne); stringhe deallocate: 0 (21333 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9808718163251727 1 0 0 0.9631526478251922 0.934759406809461 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21433 interne); stringhe deallocate: 0 (21353 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047867184e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79852696 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.963920641505824


ris (2 : 2): [ 1 0.963920641505824 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21453 interne); stringhe deallocate: 0 (21373 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9342680065162821 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853304 1072693248 434544269 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.955004392633353


ris (2 : 2): [ 1 0.955004392633353 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21473 interne); stringhe deallocate: 0 (21393 interne)


Stringhe allocate: 1 (21473 interne); stringhe deallocate: 0 (21398 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.963920641505824 1 1 0.963920641505824 0.955004392633353 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998447423268 0.9999997155317746 0.9999999580606205 0.9999999271714009 0.9999998895244889 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553641e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9642866303709745


ris (2 : 2): [ 1 0.9642866303709745 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21508 interne); stringhe deallocate: 0 (21428 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9347591487889577 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79846680 1072693248 -1565705632 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21528 interne); stringhe deallocate: 0 (21448 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9813695415289132 1 0 0 0.963920641505824 0.9363739341622662 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21548 interne); stringhe deallocate: 0 (21468 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.53590304786067e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79857936 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9642866303709745


ris (2 : 2): [ 1 0.9642866303709745 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21568 interne); stringhe deallocate: 0 (21488 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9347772686014366 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858512 1072693248 -1565705632 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9555324141289898


ris (2 : 2): [ 1 0.9555324141289898 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21588 interne); stringhe deallocate: 0 (21508 interne)


Stringhe allocate: 1 (21588 interne); stringhe deallocate: 0 (21513 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9642866303709745 1 1 0.9642866303709745 0.9555324141289898 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.999999845865178 0.9999997155317746 0.9999999580606205 0.9999999276954839 0.9999998906339531 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788581896e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9658841891824817


ris (2 : 2): [ 1 0.9658841891824817 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21623 interne); stringhe deallocate: 0 (21543 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9363737194071078 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863064 1072693248 -175610820 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21643 interne); stringhe deallocate: 0 (21563 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9816038341306704 1 0 0 0.9642866303709745 0.9371362482596602 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21663 interne); stringhe deallocate: 0 (21583 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836816e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79853816 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9658841891824817


ris (2 : 2): [ 1 0.9658841891824817 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21683 interne); stringhe deallocate: 0 (21603 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9314446537026715 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864800 1072693248 -175610820 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9578368328794663


ris (2 : 2): [ 1 0.9578368328794663 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21703 interne); stringhe deallocate: 0 (21623 interne)


Stringhe allocate: 1 (21703 interne); stringhe deallocate: 0 (21628 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9658841891824817 1 1 0.9658841891824817 0.9578368328794663 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998506721574 0.9999997155317746 0.9999999580606205 0.9999999299393259 0.9999998953469729 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.45528078856921e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9661055482611297


ris (2 : 2): [ 1 0.9661055482611297 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21738 interne); stringhe deallocate: 0 (21658 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9371361820226003 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79851712 1072693248 784892065 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21758 interne); stringhe deallocate: 0 (21678 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9826263248626378 1 0 0 0.9658841891824817 0.9404631577421041 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21778 interne); stringhe deallocate: 0 (21698 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047837259e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838728 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9661055482611297


ris (2 : 2): [ 1 0.9661055482611297 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21798 interne); stringhe deallocate: 0 (21718 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9347591487889879 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864848 1072693248 784892065 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.958156340740231


ris (2 : 2): [ 1 0.958156340740231 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21818 interne); stringhe deallocate: 0 (21738 interne)


Stringhe allocate: 1 (21818 interne); stringhe deallocate: 0 (21743 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9661055482611297 1 1 0.9661055482611297 0.958156340740231 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998513262838 0.9999997155317746 0.9999999580606205 0.9999999302446921 0.9999998959841987 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552313e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9646557489771519


ris (2 : 2): [ 1 0.9646557489771519 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21853 interne); stringhe deallocate: 0 (21773 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9404630748758578 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79845320 1072693248 -1145558264 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21873 interne); stringhe deallocate: 0 (21793 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9827682027308086 1 0 0 0.9661055482611297 0.9409245434710396 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21893 interne); stringhe deallocate: 0 (21813 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047865515e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79839008 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9646557489771519


ris (2 : 2): [ 1 0.9646557489771519 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21913 interne); stringhe deallocate: 0 (21833 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9347591487892313 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864168 1072693248 -1145558264 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.956065489081449


ris (2 : 2): [ 1 0.956065489081449 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21933 interne); stringhe deallocate: 0 (21853 interne)


Stringhe allocate: 1 (21933 interne); stringhe deallocate: 0 (21858 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9646557489771519 1 1 0.9646557489771519 0.956065489081449 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998469894063 0.9999997155317746 0.9999999580606205 0.9999999282202288 0.9999998917427335 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788595556e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.966100051628693


ris (2 : 2): [ 1 0.966100051628693 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21968 interne); stringhe deallocate: 0 (21888 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9409241764073659 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853528 1072693248 -1479731267 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (21988 interne); stringhe deallocate: 0 (21908 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9818404887290391 1 0 0 0.9646557489771519 0.937905977810488 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22008 interne); stringhe deallocate: 0 (21928 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047852829e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79856880 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.966100051628693


ris (2 : 2): [ 1 0.966100051628693 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22028 interne); stringhe deallocate: 0 (21948 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9363737194071007 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858872 1072693248 -1479731267 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9581455546400048


ris (2 : 2): [ 1 0.9581455546400048 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22048 interne); stringhe deallocate: 0 (21968 interne)


Stringhe allocate: 1 (22048 interne); stringhe deallocate: 0 (21973 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.966100051628693 1 1 0.966100051628693 0.9581455546400048 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998513100756 0.9999997155317746 0.9999999580606205 0.9999999302371256 0.9999998959627503 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788563291e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.966100051628693


ris (2 : 2): [ 1 0.966100051628693 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22083 interne); stringhe deallocate: 0 (22003 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9379057971964144 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863704 1072693248 -1479731267 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22103 interne); stringhe deallocate: 0 (22023 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9827626112705674 1 0 0 0.966100051628693 0.9409081659105723 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22123 interne); stringhe deallocate: 0 (22043 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047835931e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79848856 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.966100051628693


ris (2 : 2): [ 1 0.966100051628693 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22143 interne); stringhe deallocate: 0 (22063 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.937136182022984 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79862448 1072693248 -1479731267 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9581455546400048


ris (2 : 2): [ 1 0.9581455546400048 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22163 interne); stringhe deallocate: 0 (22083 interne)


Stringhe allocate: 1 (22163 interne); stringhe deallocate: 0 (22088 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.966100051628693 1 1 0.966100051628693 0.9581455546400048 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998513100756 0.9999997155317746 0.9999999580606205 0.9999999302371256 0.9999998959627503 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552806e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9668066133518788


ris (2 : 2): [ 1 0.9668066133518788 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22198 interne); stringhe deallocate: 0 (22118 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.940907963943987 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863776 1072693248 1815929865 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22218 interne); stringhe deallocate: 0 (22138 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9827626112705674 1 0 0 0.966100051628693 0.9409081659105723 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22238 interne); stringhe deallocate: 0 (22158 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047879175e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838168 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9668066133518788


ris (2 : 2): [ 1 0.9668066133518788 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22258 interne); stringhe deallocate: 0 (22178 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9404630748754137 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864496 1072693248 1815929865 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9591593912771649


ris (2 : 2): [ 1 0.9591593912771649 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22278 interne); stringhe deallocate: 0 (22198 interne)


Stringhe allocate: 1 (22278 interne); stringhe deallocate: 0 (22203 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9668066133518788 1 1 0.9668066133518788 0.9591593912771649 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998533791152 0.9999997155317746 0.9999999580606205 0.9999999312030607 0.9999998979595797 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552781e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9671433266995914


ris (2 : 2): [ 1 0.9671433266995914 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22313 interne); stringhe deallocate: 0 (22233 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9409079639444613 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863328 1072693248 -1881733829 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22333 interne); stringhe deallocate: 0 (22253 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9832111368421662 1 0 0 0.9668066133518788 0.9423705281193311 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22353 interne); stringhe deallocate: 0 (22273 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047846909e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865520 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9671433266995914


ris (2 : 2): [ 1 0.9671433266995914 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22373 interne); stringhe deallocate: 0 (22293 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9409241764076395 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79846680 1072693248 -1881733829 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9596387261730561


ris (2 : 2): [ 1 0.9596387261730561 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22393 interne); stringhe deallocate: 0 (22313 interne)


Stringhe allocate: 1 (22393 interne); stringhe deallocate: 0 (22318 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9671433266995914 1 1 0.9671433266995914 0.9596387261730561 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.999999854354966 0.9999997155317746 0.9999999580606205 0.9999999316586621 0.9999998988902775 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788575282e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9686130964844425


ris (2 : 2): [ 1 0.9686130964844425 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22428 interne); stringhe deallocate: 0 (22348 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.942370423508196 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853304 1072693248 -461629349 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22448 interne); stringhe deallocate: 0 (22368 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9834222698553113 1 0 0 0.9671433266995914 0.9430609960283675 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22468 interne); stringhe deallocate: 0 (22388 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836424e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79845112 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9686130964844425


ris (2 : 2): [ 1 0.9686130964844425 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22488 interne); stringhe deallocate: 0 (22408 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9379057971964073 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863064 1072693248 -461629349 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9617306642464917


ris (2 : 2): [ 1 0.9617306642464917 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22508 interne); stringhe deallocate: 0 (22428 interne)


Stringhe allocate: 1 (22508 interne); stringhe deallocate: 0 (22433 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9686130964844425 1 1 0.9686130964844425 0.9617306642464917 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998585391154 0.9999997155317746 0.9999999580606205 0.9999999336123159 0.9999999028537232 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788583566e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.968816749009192


ris (2 : 2): [ 1 0.968816749009192 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22543 interne); stringhe deallocate: 0 (22463 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9430608837137484 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858512 1072693248 -73795591 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22563 interne); stringhe deallocate: 0 (22483 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9843436884045961 1 0 0 0.9686130964844425 0.9460743526510878 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22583 interne); stringhe deallocate: 0 (22503 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836399e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838480 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.968816749009192


ris (2 : 2): [ 1 0.968816749009192 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22603 interne); stringhe deallocate: 0 (22523 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9409079639443707 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79851712 1072693248 -73795591 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9620207121462788


ris (2 : 2): [ 1 0.9620207121462788 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22623 interne); stringhe deallocate: 0 (22543 interne)


Stringhe allocate: 1 (22623 interne); stringhe deallocate: 0 (22548 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.968816749009192 1 1 0.968816749009192 0.9620207121462788 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998591093136 0.9999997155317746 0.9999999580606205 0.9999999338785739 0.9999999033908515 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788577052e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9674829194397635


ris (2 : 2): [ 1 0.9674829194397635 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22658 interne); stringhe deallocate: 0 (22578 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9460740177159597 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864800 1072693248 -1118972387 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22678 interne); stringhe deallocate: 0 (22598 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9844715417881618 1 0 0 0.968816749009192 0.9464922539344406 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22698 interne); stringhe deallocate: 0 (22618 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.5359030478589e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838464 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9674829194397635


ris (2 : 2): [ 1 0.9674829194397635 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22718 interne); stringhe deallocate: 0 (22638 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9409079639440172 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79845320 1072693248 -1118972387 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9601226491187592


ris (2 : 2): [ 1 0.9601226491187592 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22738 interne); stringhe deallocate: 0 (22658 interne)


Stringhe allocate: 1 (22738 interne); stringhe deallocate: 0 (22663 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9674829194397635 1 1 0.9674829194397635 0.9601226491187592 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998553325833 0.9999997155317746 0.9999999580606205 0.9999999321151036 0.9999998998212731 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553198e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9688116920534069


ris (2 : 2): [ 1 0.9688116920534069 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22773 interne); stringhe deallocate: 0 (22693 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9464922039041781 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864848 1072693248 1621836286 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22793 interne); stringhe deallocate: 0 (22713 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9836355313843805 1 0 0 0.9674829194397635 0.9437581805031398 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22813 interne); stringhe deallocate: 0 (22733 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047867184e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79852696 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9688116920534069


ris (2 : 2): [ 1 0.9688116920534069 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22833 interne); stringhe deallocate: 0 (22753 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9423704235084696 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853528 1072693248 1621836286 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9620109168806247


ris (2 : 2): [ 1 0.9620109168806247 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22853 interne); stringhe deallocate: 0 (22773 interne)


Stringhe allocate: 1 (22853 interne); stringhe deallocate: 0 (22778 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9688116920534069 1 1 0.9688116920534069 0.9620109168806247 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998590951827 0.9999997155317746 0.9999999580606205 0.9999999338719752 0.9999999033727607 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553641e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9688116920534069


ris (2 : 2): [ 1 0.9688116920534069 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22888 interne); stringhe deallocate: 0 (22808 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9437580196385671 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864168 1072693248 1621836286 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22908 interne); stringhe deallocate: 0 (22828 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9844665030364407 1 0 0 0.9688116920534069 0.9464774199170654 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22928 interne); stringhe deallocate: 0 (22848 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.53590304786067e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79857936 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9688116920534069


ris (2 : 2): [ 1 0.9688116920534069 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22948 interne); stringhe deallocate: 0 (22868 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9430608837137413 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863704 1072693248 1621836286 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9620109168806247


ris (2 : 2): [ 1 0.9620109168806247 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (22968 interne); stringhe deallocate: 0 (22888 interne)


Stringhe allocate: 1 (22968 interne); stringhe deallocate: 0 (22893 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9688116920534069 1 1 0.9688116920534069 0.9620109168806247 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998590951827 0.9999997155317746 0.9999999580606205 0.9999999338719752 0.9999999033727607 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788581896e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9694617357728561


ris (2 : 2): [ 1 0.9694617357728561 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23003 interne); stringhe deallocate: 0 (22923 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9464774219522738 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858872 1072693248 -1640250086 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23023 interne); stringhe deallocate: 0 (22943 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9844665030364407 1 0 0 0.9688116920534069 0.9464774199170654 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23043 interne); stringhe deallocate: 0 (22963 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836816e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79853816 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9694617357728561


ris (2 : 2): [ 1 0.9694617357728561 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23063 interne); stringhe deallocate: 0 (22983 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9460740177163434 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863776 1072693248 -1640250086 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9629312658577798


ris (2 : 2): [ 1 0.9629312658577798 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23083 interne); stringhe deallocate: 0 (23003 interne)


Stringhe allocate: 1 (23083 interne); stringhe deallocate: 0 (23008 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9694617357728561 1 1 0.9694617357728561 0.9629312658577798 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998609000631 0.9999997155317746 0.9999999580606205 0.9999999347148115 0.9999999050578505 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.45528078856921e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.969771515357219


ris (2 : 2): [ 1 0.969771515357219 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23118 interne); stringhe deallocate: 0 (23038 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9464774219517995 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79862448 1072693248 1172416217 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23138 interne); stringhe deallocate: 0 (23058 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.984870692302769 1 0 0 0.9694617357728561 0.9478019581605488 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23158 interne); stringhe deallocate: 0 (23078 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047837259e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838728 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.969771515357219


ris (2 : 2): [ 1 0.969771515357219 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23178 interne); stringhe deallocate: 0 (23098 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.946492203903734 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863328 1072693248 1172416217 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.963366396175999


ris (2 : 2): [ 1 0.963366396175999 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23198 interne); stringhe deallocate: 0 (23118 interne)


Stringhe allocate: 1 (23198 interne); stringhe deallocate: 0 (23123 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.969771515357219 1 1 0.969771515357219 0.963366396175999 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998617520303 0.9999997155317746 0.9999999580606205 0.9999999351126789 0.9999999058442788 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552313e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9711237179834393


ris (2 : 2): [ 1 0.9711237179834393 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23233 interne); stringhe deallocate: 0 (23153 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9478015987406039 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864496 1072693248 203651912 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23253 interne); stringhe deallocate: 0 (23173 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9850609550264609 1 0 0 0.969771515357219 0.9484273512024598 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23273 interne); stringhe deallocate: 0 (23193 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047865515e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79839008 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9711237179834393


ris (2 : 2): [ 1 0.9711237179834393 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23293 interne); stringhe deallocate: 0 (23213 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9437580196388407 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853304 1072693248 203651912 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9652654142640598


ris (2 : 2): [ 1 0.9652654142640598 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23313 interne); stringhe deallocate: 0 (23233 interne)


Stringhe allocate: 1 (23313 interne); stringhe deallocate: 0 (23238 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9711237179834393 1 1 0.9711237179834393 0.9652654142640598 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998654102238 0.9999997155317746 0.9999999580606205 0.9999999368211903 0.9999999092009027 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788595556e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9713110803048322


ris (2 : 2): [ 1 0.9713110803048322 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23348 interne); stringhe deallocate: 0 (23268 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9484272090916921 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79846680 1072693248 -108733800 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23368 interne); stringhe deallocate: 0 (23288 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9858912922640234 1 0 0 0.9711237179834393 0.9511567065280832 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23388 interne); stringhe deallocate: 0 (23308 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047852829e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79856880 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9713110803048322


ris (2 : 2): [ 1 0.9713110803048322 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23408 interne); stringhe deallocate: 0 (23328 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9464774219522667 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858512 1072693248 -108733800 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9655287141972897


ris (2 : 2): [ 1 0.9655287141972897 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23428 interne); stringhe deallocate: 0 (23348 interne)


Stringhe allocate: 1 (23428 interne); stringhe deallocate: 0 (23353 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9713110803048322 1 1 0.9713110803048322 0.9655287141972897 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998659094118 0.9999997155317746 0.9999999580606205 0.9999999370543474 0.9999999096567563 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788563291e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9700839440109027


ris (2 : 2): [ 1 0.9700839440109027 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23463 interne); stringhe deallocate: 0 (23383 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9511566249857211 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863064 1072693248 2075973957 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23483 interne); stringhe deallocate: 0 (23403 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9860065074673629 1 0 0 0.9713110803048322 0.9515352216646525 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23503 interne); stringhe deallocate: 0 (23423 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047835931e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79848856 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9700839440109027


ris (2 : 2): [ 1 0.9700839440109027 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23523 interne); stringhe deallocate: 0 (23443 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9464774219521832 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864800 1072693248 2075973957 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9638056919261498


ris (2 : 2): [ 1 0.9638056919261498 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23543 interne); stringhe deallocate: 0 (23463 interne)


Stringhe allocate: 1 (23543 interne); stringhe deallocate: 0 (23468 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9700839440109027 1 1 0.9700839440109027 0.9638056919261498 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998626059976 0.9999997155317746 0.9999999580606205 0.9999999355114928 0.9999999066316275 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552806e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9713064278558814


ris (2 : 2): [ 1 0.9713064278558814 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23578 interne); stringhe deallocate: 0 (23498 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9515347568517019 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79851712 1072693248 935404438 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23598 interne); stringhe deallocate: 0 (23518 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9852531358646185 1 0 0 0.9700839440109027 0.9490588277907683 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23618 interne); stringhe deallocate: 0 (23538 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047879175e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838168 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9713064278558814


ris (2 : 2): [ 1 0.9713064278558814 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23638 interne); stringhe deallocate: 0 (23558 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9478015987401598 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864848 1072693248 935404438 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9655198189255733


ris (2 : 2): [ 1 0.9655198189255733 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23658 interne); stringhe deallocate: 0 (23578 interne)


Stringhe allocate: 1 (23658 interne); stringhe deallocate: 0 (23583 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9713064278558814 1 1 0.9713064278558814 0.9655198189255733 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998658970388 0.9999997155317746 0.9999999580606205 0.9999999370485683 0.9999999096413933 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552781e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9713064278558814


ris (2 : 2): [ 1 0.9713064278558814 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23693 interne); stringhe deallocate: 0 (23613 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9490585414896273 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79845320 1072693248 935404438 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23713 interne); stringhe deallocate: 0 (23633 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.986001966789958 1 0 0 0.9713064278558814 0.9515217857155313 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23733 interne); stringhe deallocate: 0 (23653 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047846909e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865520 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9713064278558814


ris (2 : 2): [ 1 0.9713064278558814 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23753 interne); stringhe deallocate: 0 (23673 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9484272090919657 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864168 1072693248 935404438 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9655198189255733


ris (2 : 2): [ 1 0.9655198189255733 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23773 interne); stringhe deallocate: 0 (23693 interne)


Stringhe allocate: 1 (23773 interne); stringhe deallocate: 0 (23698 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9713064278558814 1 1 0.9713064278558814 0.9655198189255733 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998658970388 0.9999997155317746 0.9999999580606205 0.9999999370485683 0.9999999096413933 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788575282e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9719044744572315


ris (2 : 2): [ 1 0.9719044744572315 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23808 interne); stringhe deallocate: 0 (23728 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9515214054112722 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853528 1072693248 1771317235 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23828 interne); stringhe deallocate: 0 (23748 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.986001966789958 1 0 0 0.9713064278558814 0.9515217857155313 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23848 interne); stringhe deallocate: 0 (23768 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836424e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79845112 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9719044744572315


ris (2 : 2): [ 1 0.9719044744572315 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23868 interne); stringhe deallocate: 0 (23788 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.951156624985714 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858872 1072693248 1771317235 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9663552872082947


ris (2 : 2): [ 1 0.9663552872082947 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23888 interne); stringhe deallocate: 0 (23808 interne)


Stringhe allocate: 1 (23888 interne); stringhe deallocate: 0 (23813 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9719044744572315 1 1 0.9719044744572315 0.9663552872082947 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998674782028 0.9999997155317746 0.9999999580606205 0.9999999377871153 0.9999999110729937 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788583566e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9721894747149877


ris (2 : 2): [ 1 0.9721894747149877 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23923 interne); stringhe deallocate: 0 (23843 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9515214054117465 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863704 1072693248 434983490 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23943 interne); stringhe deallocate: 0 (23863 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9863662023452903 1 0 0 0.9719044744572315 0.9527214895535849 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23963 interne); stringhe deallocate: 0 (23883 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836399e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838480 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9721894747149877


ris (2 : 2): [ 1 0.9721894747149877 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (23983 interne); stringhe deallocate: 0 (23903 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9515347568520856 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79862448 1072693248 434983490 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9667502830853111


ris (2 : 2): [ 1 0.9667502830853111 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24003 interne); stringhe deallocate: 0 (23923 interne)


Stringhe allocate: 1 (24003 interne); stringhe deallocate: 0 (23928 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9721894747149877 1 1 0.9721894747149877 0.9667502830853111 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998682251368 0.9999997155317746 0.9999999580606205 0.9999999381360164 0.9999999117419124 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788577052e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9734335144014766


ris (2 : 2): [ 1 0.9734335144014766 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24038 interne); stringhe deallocate: 0 (23958 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9527211277013112 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863776 1072693248 178645237 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24058 interne); stringhe deallocate: 0 (23978 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.986537657784759 1 0 0 0.9721894747149877 0.9532879408700701 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24078 interne); stringhe deallocate: 0 (23998 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.5359030478589e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838464 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9734335144014766


ris (2 : 2): [ 1 0.9734335144014766 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24098 interne); stringhe deallocate: 0 (24018 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9490585414891832 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864496 1072693248 178645237 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9684741443044436


ris (2 : 2): [ 1 0.9684741443044436 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24118 interne); stringhe deallocate: 0 (24038 interne)


Stringhe allocate: 1 (24118 interne); stringhe deallocate: 0 (24043 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9734335144014766 1 1 0.9734335144014766 0.9684741443044436 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998714365543 0.9999997155317746 0.9999999580606205 0.9999999396362189 0.9999999146028379 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553198e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.973605889575911


ris (2 : 2): [ 1 0.973605889575911 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24153 interne); stringhe deallocate: 0 (24073 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9532876102457308 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863328 1072693248 -1981973214 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24173 interne); stringhe deallocate: 0 (24093 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.987285916998354 1 0 0 0.9734335144014766 0.9557600613027976 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24193 interne); stringhe deallocate: 0 (24113 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047867184e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79852696 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.973605889575911


ris (2 : 2): [ 1 0.973605889575911 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24213 interne); stringhe deallocate: 0 (24133 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9515214054115457 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79846680 1072693248 -1981973214 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9687131590456457


ris (2 : 2): [ 1 0.9687131590456457 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24233 interne); stringhe deallocate: 0 (24153 interne)


Stringhe allocate: 1 (24233 interne); stringhe deallocate: 0 (24158 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.973605889575911 1 1 0.973605889575911 0.9687131590456457 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998718753139 0.9999997155317746 0.9999999580606205 0.9999999398411985 0.9999999149921178 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553641e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9724769121425168


ris (2 : 2): [ 1 0.9724769121425168 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24268 interne); stringhe deallocate: 0 (24188 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9557600109105398 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853304 1072693248 -424112974 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24288 interne); stringhe deallocate: 0 (24208 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.98738974329167 1 0 0 0.973605889575911 0.9561029023373157 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24308 interne); stringhe deallocate: 0 (24228 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.53590304786067e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79857936 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9724769121425168


ris (2 : 2): [ 1 0.9724769121425168 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24328 interne); stringhe deallocate: 0 (24248 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9515214054117394 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863064 1072693248 -424112974 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9671490606389269


ris (2 : 2): [ 1 0.9671490606389269 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24348 interne); stringhe deallocate: 0 (24268 interne)


Stringhe allocate: 1 (24348 interne); stringhe deallocate: 0 (24273 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9724769121425168 1 1 0.9724769121425168 0.9671490606389269 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998689741942 0.9999997155317746 0.9999999580606205 0.9999999384859195 0.9999999124121313 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788581896e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9736016092772177


ris (2 : 2): [ 1 0.9736016092772177 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24383 interne); stringhe deallocate: 0 (24303 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9561028568277621 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858512 1072693248 -1880770750 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24403 interne); stringhe deallocate: 0 (24323 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9867108417351325 1 0 0 0.9724769121425168 0.9538599023740594 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24423 interne); stringhe deallocate: 0 (24343 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836816e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79853816 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9736016092772177


ris (2 : 2): [ 1 0.9736016092772177 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24443 interne); stringhe deallocate: 0 (24363 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9527211277016949 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79851712 1072693248 -1880770750 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9687050812374006


ris (2 : 2): [ 1 0.9687050812374006 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24463 interne); stringhe deallocate: 0 (24383 interne)


Stringhe allocate: 1 (24463 interne); stringhe deallocate: 0 (24388 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9736016092772177 1 1 0.9736016092772177 0.9687050812374006 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.999999871864437 0.9999997155317746 0.9999999580606205 0.999999939836117 0.9999999149789907 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.45528078856921e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9736016092772177


ris (2 : 2): [ 1 0.9736016092772177 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24498 interne); stringhe deallocate: 0 (24418 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9538598148351003 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864800 1072693248 -1880770750 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24518 interne); stringhe deallocate: 0 (24438 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.987385651454795 1 0 0 0.9736016092772177 0.9560907326921956 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24538 interne); stringhe deallocate: 0 (24458 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047837259e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838728 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9736016092772177


ris (2 : 2): [ 1 0.9736016092772177 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24558 interne); stringhe deallocate: 0 (24478 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9532876102452867 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79845320 1072693248 -1880770750 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9687050812374006


ris (2 : 2): [ 1 0.9687050812374006 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24578 interne); stringhe deallocate: 0 (24498 interne)


Stringhe allocate: 1 (24578 interne); stringhe deallocate: 0 (24503 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9736016092772177 1 1 0.9736016092772177 0.9687050812374006 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.999999871864437 0.9999997155317746 0.9999999580606205 0.999999939836117 0.9999999149789907 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552313e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9741518180196226


ris (2 : 2): [ 1 0.9741518180196226 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24613 interne); stringhe deallocate: 0 (24533 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9560904590616488 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864848 1072693248 1861711503 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24633 interne); stringhe deallocate: 0 (24553 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.987385651454795 1 0 0 0.9736016092772177 0.9560907326921956 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24653 interne); stringhe deallocate: 0 (24573 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047865515e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79839008 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9741518180196226


ris (2 : 2): [ 1 0.9741518180196226 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24673 interne); stringhe deallocate: 0 (24593 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9557600109108133 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853528 1072693248 1861711503 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9694634847720158


ris (2 : 2): [ 1 0.9694634847720158 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24693 interne); stringhe deallocate: 0 (24613 interne)


Stringhe allocate: 1 (24693 interne); stringhe deallocate: 0 (24618 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9741518180196226 1 1 0.9741518180196226 0.9694634847720158 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998732550501 0.9999997155317746 0.9999999580606205 0.9999999404858058 0.999999916202671 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788595556e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9744140210537192


ris (2 : 2): [ 1 0.9744140210537192 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24728 interne); stringhe deallocate: 0 (24648 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9560904590611745 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864168 1072693248 1344672009 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24748 interne); stringhe deallocate: 0 (24668 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9877138826801268 1 0 0 0.9741518180196226 0.9571773674521427 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24768 interne); stringhe deallocate: 0 (24688 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047852829e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79856880 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9744140210537192


ris (2 : 2): [ 1 0.9744140210537192 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24788 interne); stringhe deallocate: 0 (24708 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.956102856827755 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863704 1072693248 1344672009 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9698220422367239


ris (2 : 2): [ 1 0.9698220422367239 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24808 interne); stringhe deallocate: 0 (24728 interne)


Stringhe allocate: 1 (24808 interne); stringhe deallocate: 0 (24733 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9744140210537192 1 1 0.9744140210537192 0.9698220422367239 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998739124296 0.9999997155317746 0.9999999580606205 0.9999999407929433 0.9999999167750545 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788563291e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9755585497741562


ris (2 : 2): [ 1 0.9755585497741562 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24843 interne); stringhe deallocate: 0 (24763 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9571771709451937 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858872 1072693248 -1873567937 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24863 interne); stringhe deallocate: 0 (24783 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9878683899153419 1 0 0 0.9744140210537192 0.9576904321520657 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24883 interne); stringhe deallocate: 0 (24803 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047835931e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79848856 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9755585497741562


ris (2 : 2): [ 1 0.9755585497741562 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24903 interne); stringhe deallocate: 0 (24823 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.953859814835484 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863776 1072693248 -1873567937 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9713868770013401


ris (2 : 2): [ 1 0.9713868770013401 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24923 interne); stringhe deallocate: 0 (24843 interne)


Stringhe allocate: 1 (24923 interne); stringhe deallocate: 0 (24848 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9755585497741562 1 1 0.9755585497741562 0.9713868770013401 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.99999987674223 0.9999997155317746 0.9999999580606205 0.99999994211516 0.999999919227664 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552806e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9757171366263066


ris (2 : 2): [ 1 0.9757171366263066 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24958 interne); stringhe deallocate: 0 (24878 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.957690247726946 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79862448 1072693248 620666291 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24978 interne); stringhe deallocate: 0 (24898 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9885426844299882 1 0 0 0.9755585497741562 0.9599295614313282 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (24998 interne); stringhe deallocate: 0 (24918 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047879175e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838168 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9757171366263066


ris (2 : 2): [ 1 0.9757171366263066 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25018 interne); stringhe deallocate: 0 (24938 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9560904590612047 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863328 1072693248 620666291 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9716038429630243


ris (2 : 2): [ 1 0.9716038429630243 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25038 interne); stringhe deallocate: 0 (24958 interne)


Stringhe allocate: 1 (25038 interne); stringhe deallocate: 0 (24963 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9757171366263066 1 1 0.9757171366263066 0.9716038429630243 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998771292873 0.9999997155317746 0.9999999580606205 0.9999999422960233 0.9999999195619664 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552781e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.974678466307925


ris (2 : 2): [ 1 0.974678466307925 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25073 interne); stringhe deallocate: 0 (24993 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9599294750223422 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864496 1072693248 -451080669 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25093 interne); stringhe deallocate: 0 (25013 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9886362475948368 1 0 0 0.9757171366263066 0.9602400905578611 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25113 interne); stringhe deallocate: 0 (25033 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047846909e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865520 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.974678466307925


ris (2 : 2): [ 1 0.974678466307925 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25133 interne); stringhe deallocate: 0 (25053 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9560904590614481 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853304 1072693248 -451080669 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9701840329182399


ris (2 : 2): [ 1 0.9701840329182399 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25153 interne); stringhe deallocate: 0 (25073 interne)


Stringhe allocate: 1 (25153 interne); stringhe deallocate: 0 (25078 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.974678466307925 1 1 0.974678466307925 0.9701840329182399 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998745719773 0.9999997155317746 0.9999999580606205 0.9999999411011018 0.9999999173489527 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788575282e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9757131987095025


ris (2 : 2): [ 1 0.9757131987095025 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25188 interne); stringhe deallocate: 0 (25108 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9602398960118581 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79846680 1072693248 -489196644 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25208 interne); stringhe deallocate: 0 (25128 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9880244547999673 1 0 0 0.974678466307925 0.9582084877182071 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25228 interne); stringhe deallocate: 0 (25148 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836424e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79845112 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9757131987095025


ris (2 : 2): [ 1 0.9757131987095025 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25248 interne); stringhe deallocate: 0 (25168 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9571771709451866 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858512 1072693248 -489196644 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9715965076395726


ris (2 : 2): [ 1 0.9715965076395726 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25268 interne); stringhe deallocate: 0 (25188 interne)


Stringhe allocate: 1 (25268 interne); stringhe deallocate: 0 (25193 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9757131987095025 1 1 0.9757131987095025 0.9715965076395726 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998771196909 0.9999997155317746 0.9999999580606205 0.9999999422915391 0.9999999195506868 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788583566e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9757131987095025


ris (2 : 2): [ 1 0.9757131987095025 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25303 interne); stringhe deallocate: 0 (25223 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9582080928812289 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863064 1072693248 -489196644 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25323 interne); stringhe deallocate: 0 (25243 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.988632560231326 1 0 0 0.9757131987095025 0.9602290678708986 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25343 interne); stringhe deallocate: 0 (25263 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836399e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838480 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9757131987095025


ris (2 : 2): [ 1 0.9757131987095025 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25363 interne); stringhe deallocate: 0 (25283 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9576902477273297 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864800 1072693248 -489196644 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9715965076395726


ris (2 : 2): [ 1 0.9715965076395726 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25383 interne); stringhe deallocate: 0 (25303 interne)


Stringhe allocate: 1 (25383 interne); stringhe deallocate: 0 (25308 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9757131987095025 1 1 0.9757131987095025 0.9715965076395726 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998771196909 0.9999997155317746 0.9999999580606205 0.9999999422915391 0.9999999195506868 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788577052e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9762193961522024


ris (2 : 2): [ 1 0.9762193961522024 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25418 interne); stringhe deallocate: 0 (25338 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9602289287572194 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79851712 1072693248 1971730939 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25438 interne); stringhe deallocate: 0 (25358 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.988632560231326 1 0 0 0.9757131987095025 0.9602290678708986 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25458 interne); stringhe deallocate: 0 (25378 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.5359030478589e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838464 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9762193961522024


ris (2 : 2): [ 1 0.9762193961522024 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25478 interne); stringhe deallocate: 0 (25398 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9599294750218981 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864848 1072693248 1971730939 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9722849439115553


ris (2 : 2): [ 1 0.9722849439115553 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25498 interne); stringhe deallocate: 0 (25418 interne)


Stringhe allocate: 1 (25498 interne); stringhe deallocate: 0 (25423 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9762193961522024 1 1 0.9762193961522024 0.9722849439115553 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998783471318 0.9999997155317746 0.9999999580606205 0.9999999428651134 0.9999999206024482 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553198e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9764606255168027


ris (2 : 2): [ 1 0.9764606255168027 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25533 interne); stringhe deallocate: 0 (25453 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9602289287576937 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79845320 1072693248 1519232212 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25553 interne); stringhe deallocate: 0 (25473 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9889283461166076 1 0 0 0.9762193961522024 0.9612132900281629 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25573 interne); stringhe deallocate: 0 (25493 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047867184e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79852696 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9764606255168027


ris (2 : 2): [ 1 0.9764606255168027 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25593 interne); stringhe deallocate: 0 (25513 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9602398960121317 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864168 1072693248 1519232212 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9726104192057138


ris (2 : 2): [ 1 0.9726104192057138 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25613 interne); stringhe deallocate: 0 (25533 interne)


Stringhe allocate: 1 (25613 interne); stringhe deallocate: 0 (25538 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9764606255168027 1 1 0.9764606255168027 0.9726104192057138 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998789277499 0.9999997155317746 0.9999999580606205 0.9999999431364424 0.9999999210948963 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553641e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9775136031718823


ris (2 : 2): [ 1 0.9775136031718823 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25648 interne); stringhe deallocate: 0 (25568 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9612131206517507 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853528 1072693248 -1683974560 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25668 interne); stringhe deallocate: 0 (25588 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9890675804598887 1 0 0 0.9764606255168027 0.9616779996656025 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25688 interne); stringhe deallocate: 0 (25608 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.53590304786067e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79857936 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9775136031718823


ris (2 : 2): [ 1 0.9775136031718823 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25708 interne); stringhe deallocate: 0 (25628 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9582080928812218 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858872 1072693248 -1683974560 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9740308750115417


ris (2 : 2): [ 1 0.9740308750115417 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25728 interne); stringhe deallocate: 0 (25648 interne)


Stringhe allocate: 1 (25728 interne); stringhe deallocate: 0 (25653 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9775136031718823 1 1 0.9775136031718823 0.9740308750115417 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998814299005 0.9999997155317746 0.9999999580606205 0.9999999443057979 0.999999923208559 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788581896e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9776595046322145


ris (2 : 2): [ 1 0.9776595046322145 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25763 interne); stringhe deallocate: 0 (25683 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9616775600443148 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863704 1072693248 -1780442366 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25783 interne); stringhe deallocate: 0 (25703 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9896752216089328 1 0 0 0.9775136031718823 0.9637060966204746 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25803 interne); stringhe deallocate: 0 (25723 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836816e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79853816 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9776595046322145


ris (2 : 2): [ 1 0.9776595046322145 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25823 interne); stringhe deallocate: 0 (25743 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9602289287576031 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79862448 1072693248 -1780442366 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9742278230100815


ris (2 : 2): [ 1 0.9742278230100815 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25843 interne); stringhe deallocate: 0 (25763 interne)


Stringhe allocate: 1 (25843 interne); stringhe deallocate: 0 (25768 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9776595046322145 1 1 0.9776595046322145 0.9742278230100815 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998817724971 0.9999997155317746 0.9999999580606205 0.9999999444659165 0.9999999234971168 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.45528078856921e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9767039177459083


ris (2 : 2): [ 1 0.9767039177459083 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25878 interne); stringhe deallocate: 0 (25798 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9637060253148366 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863776 1072693248 -1827471360 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25898 interne); stringhe deallocate: 0 (25818 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9897595361448296 1 0 0 0.9776595046322145 0.9639873591549111 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25918 interne); stringhe deallocate: 0 (25838 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047837259e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838728 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9767039177459083


ris (2 : 2): [ 1 0.9767039177459083 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25938 interne); stringhe deallocate: 0 (25858 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9602289287572496 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864496 1072693248 -1827471360 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9729390113121477


ris (2 : 2): [ 1 0.9729390113121477 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25958 interne); stringhe deallocate: 0 (25878 interne)


Stringhe allocate: 1 (25958 interne); stringhe deallocate: 0 (25883 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9767039177459083 1 1 0.9767039177459083 0.9729390113121477 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998795105263 0.9999997155317746 0.9999999580606205 0.9999999434087862 0.999999921588962 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552313e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9776558817101083


ris (2 : 2): [ 1 0.9776558817101083 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (25993 interne); stringhe deallocate: 0 (25913 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9639873592386508 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863328 1072693248 -53085293 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26013 interne); stringhe deallocate: 0 (25933 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9892082184805328 1 0 0 0.9767039177459083 0.9621472297926804 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26033 interne); stringhe deallocate: 0 (25953 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047865515e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79839008 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9776558817101083


ris (2 : 2): [ 1 0.9776558817101083 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26053 interne); stringhe deallocate: 0 (25973 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9612131206520242 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79846680 1072693248 -53085293 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9742211620551788


ris (2 : 2): [ 1 0.9742211620551788 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26073 interne); stringhe deallocate: 0 (25993 interne)


Stringhe allocate: 1 (26073 interne); stringhe deallocate: 0 (25998 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9776558817101083 1 1 0.9776558817101083 0.9742211620551788 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.999999881764002 0.9999997155317746 0.9999999580606205 0.9999999444619462 0.9999999234873753 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788595556e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9776558817101083


ris (2 : 2): [ 1 0.9776558817101083 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26108 interne); stringhe deallocate: 0 (26028 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9621467678075124 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853304 1072693248 -53085293 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26128 interne); stringhe deallocate: 0 (26048 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9897562132730993 1 0 0 0.9776558817101083 0.9639773753282781 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26148 interne); stringhe deallocate: 0 (26068 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047852829e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79856880 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9776558817101083


ris (2 : 2): [ 1 0.9776558817101083 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26168 interne); stringhe deallocate: 0 (26088 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9616775600443077 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863064 1072693248 -53085293 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9742211620551788


ris (2 : 2): [ 1 0.9742211620551788 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26188 interne); stringhe deallocate: 0 (26108 interne)


Stringhe allocate: 1 (26188 interne); stringhe deallocate: 0 (26113 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9776558817101083 1 1 0.9776558817101083 0.9742211620551788 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.999999881764002 0.9999997155317746 0.9999999580606205 0.9999999444619462 0.9999999234873753 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788563291e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9781215883251577


ris (2 : 2): [ 1 0.9781215883251577 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26223 interne); stringhe deallocate: 0 (26143 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9639773456583285 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858512 1072693248 -1523857484 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26243 interne); stringhe deallocate: 0 (26163 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9897562132730993 1 0 0 0.9776558817101083 0.9639773753282781 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26263 interne); stringhe deallocate: 0 (26183 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047835931e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79848856 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9781215883251577


ris (2 : 2): [ 1 0.9781215883251577 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26283 interne); stringhe deallocate: 0 (26203 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9637060253152203 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79851712 1072693248 -1523857484 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9748460760060778


ris (2 : 2): [ 1 0.9748460760060778 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26303 interne); stringhe deallocate: 0 (26223 interne)


Stringhe allocate: 1 (26303 interne); stringhe deallocate: 0 (26228 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9781215883251577 1 1 0.9781215883251577 0.9748460760060778 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998828510146 0.9999997155317746 0.9999999580606205 0.9999999449699963 0.9999999243959227 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552806e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9783435217079881


ris (2 : 2): [ 1 0.9783435217079881 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26338 interne); stringhe deallocate: 0 (26258 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9639773456578542 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864800 1072693248 314550308 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26358 interne); stringhe deallocate: 0 (26278 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9900227610066471 1 0 0 0.9781215883251577 0.9648688370127249 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26378 interne); stringhe deallocate: 0 (26298 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047879175e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838168 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9783435217079881


ris (2 : 2): [ 1 0.9783435217079881 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26398 interne); stringhe deallocate: 0 (26318 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9639873592382067 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79845320 1072693248 314550308 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9751415167628634


ris (2 : 2): [ 1 0.9751415167628634 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26418 interne); stringhe deallocate: 0 (26338 interne)


Stringhe allocate: 1 (26418 interne); stringhe deallocate: 0 (26343 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9783435217079881 1 1 0.9783435217079881 0.9751415167628634 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998833655108 0.9999997155317746 0.9999999580606205 0.9999999452104709 0.9999999248216932 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552781e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.979312271484467


ris (2 : 2): [ 1 0.979312271484467 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26453 interne); stringhe deallocate: 0 (26373 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9648685543070101 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864848 1072693248 -1336730433 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26473 interne); stringhe deallocate: 0 (26393 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9901482321677639 1 0 0 0.9783435217079881 0.9652897489306274 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26493 interne); stringhe deallocate: 0 (26413 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047846909e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865520 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.979312271484467


ris (2 : 2): [ 1 0.979312271484467 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26513 interne); stringhe deallocate: 0 (26433 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.962146767807786 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853528 1072693248 -1336730433 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9764308942582793


ris (2 : 2): [ 1 0.9764308942582793 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26533 interne); stringhe deallocate: 0 (26453 interne)


Stringhe allocate: 1 (26533 interne); stringhe deallocate: 0 (26458 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.979312271484467 1 1 0.979312271484467 0.9764308942582793 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998855849837 0.9999997155317746 0.9999999580606205 0.9999999462479092 0.9999999266519718 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788575282e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9794465022598333


ris (2 : 2): [ 1 0.9794465022598333 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26568 interne); stringhe deallocate: 0 (26488 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9652896015172292 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864168 1072693248 820799234 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26588 interne); stringhe deallocate: 0 (26508 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9906958085683021 1 0 0 0.979312271484467 0.9671267028265814 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26608 interne); stringhe deallocate: 0 (26528 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836424e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79845112 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9794465022598333


ris (2 : 2): [ 1 0.9794465022598333 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26628 interne); stringhe deallocate: 0 (26548 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9639773456583214 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863704 1072693248 820799234 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9766096683788145


ris (2 : 2): [ 1 0.9766096683788145 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26648 interne); stringhe deallocate: 0 (26568 interne)


Stringhe allocate: 1 (26648 interne); stringhe deallocate: 0 (26573 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9794465022598333 1 1 0.9794465022598333 0.9766096683788145 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998858891657 0.9999997155317746 0.9999999580606205 0.9999999463900995 0.9999999269022004 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788583566e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9785673529464082


ris (2 : 2): [ 1 0.9785673529464082 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26683 interne); stringhe deallocate: 0 (26603 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9671263782511019 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858872 1072693248 2067452369 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26703 interne); stringhe deallocate: 0 (26623 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9907717886927481 1 0 0 0.9794465022598333 0.9673814570715625 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26723 interne); stringhe deallocate: 0 (26643 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836399e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838480 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9785673529464082


ris (2 : 2): [ 1 0.9785673529464082 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26743 interne); stringhe deallocate: 0 (26663 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9639773456582379 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863776 1072693248 2067452369 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9754397870392344


ris (2 : 2): [ 1 0.9754397870392344 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26763 interne); stringhe deallocate: 0 (26683 interne)


Stringhe allocate: 1 (26763 interne); stringhe deallocate: 0 (26688 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9785673529464082 1 1 0.9785673529464082 0.9754397870392344 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998838821183 0.9999997155317746 0.9999999580606205 0.9999999454519375 0.9999999252491091 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788577052e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9794431691359407


ris (2 : 2): [ 1 0.9794431691359407 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26798 interne); stringhe deallocate: 0 (26718 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9673810092931081 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79862448 1072693248 863459264 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26818 interne); stringhe deallocate: 0 (26738 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.99027496825415 1 0 0 0.9785673529464082 0.9657147552933844 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26838 interne); stringhe deallocate: 0 (26758 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.5359030478589e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838464 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9794431691359407


ris (2 : 2): [ 1 0.9794431691359407 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26858 interne); stringhe deallocate: 0 (26778 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.964868554306566 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863328 1072693248 863459264 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9766036199120536


ris (2 : 2): [ 1 0.9766036199120536 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26878 interne); stringhe deallocate: 0 (26798 interne)


Stringhe allocate: 1 (26878 interne); stringhe deallocate: 0 (26803 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9794431691359407 1 1 0.9794431691359407 0.9766036199120536 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998858816224 0.9999997155317746 0.9999999580606205 0.9999999463865732 0.9999999268937484 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553198e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9794431691359407


ris (2 : 2): [ 1 0.9794431691359407 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26913 interne); stringhe deallocate: 0 (26833 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9657144634256625 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864496 1072693248 863459264 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26933 interne); stringhe deallocate: 0 (26853 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9907687942833026 1 0 0 0.9794431691359407 0.9673724141953561 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26953 interne); stringhe deallocate: 0 (26873 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047867184e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79852696 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9794431691359407


ris (2 : 2): [ 1 0.9794431691359407 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26973 interne); stringhe deallocate: 0 (26893 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9652896015175028 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853304 1072693248 863459264 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9766036199120536


ris (2 : 2): [ 1 0.9766036199120536 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (26993 interne); stringhe deallocate: 0 (26913 interne)


Stringhe allocate: 1 (26993 interne); stringhe deallocate: 0 (26918 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9794431691359407 1 1 0.9794431691359407 0.9766036199120536 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998858816224 0.9999997155317746 0.9999999580606205 0.9999999463865732 0.9999999268937484 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553641e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.979871623792179


ris (2 : 2): [ 1 0.979871623792179 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27028 interne); stringhe deallocate: 0 (26948 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9673719493871023 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79846680 1072693248 -1135679480 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27048 interne); stringhe deallocate: 0 (26968 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9907687942833026 1 0 0 0.9794431691359407 0.9673724141953561 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27068 interne); stringhe deallocate: 0 (26988 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.53590304786067e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79857936 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.979871623792179


ris (2 : 2): [ 1 0.979871623792179 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27088 interne); stringhe deallocate: 0 (27008 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9671263782510948 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858512 1072693248 -1135679480 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9771708638214391


ris (2 : 2): [ 1 0.9771708638214391 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27108 interne); stringhe deallocate: 0 (27028 interne)


Stringhe allocate: 1 (27108 interne); stringhe deallocate: 0 (27033 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.979871623792179 1 1 0.979871623792179 0.9771708638214391 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998868472131 0.9999997155317746 0.9999999580606205 0.9999999468379524 0.9999999276821683 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788581896e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9800758046824125


ris (2 : 2): [ 1 0.9800758046824125 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27143 interne); stringhe deallocate: 0 (27063 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9673719493875765 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863064 1072693248 -283719824 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27163 interne); stringhe deallocate: 0 (27083 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9910089940267723 1 0 0 0.979871623792179 0.9681798578482115 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27183 interne); stringhe deallocate: 0 (27103 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836816e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79853816 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9800758046824125


ris (2 : 2): [ 1 0.9800758046824125 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27203 interne); stringhe deallocate: 0 (27123 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9673810092934918 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864800 1072693248 -283719824 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9774390373890677


ris (2 : 2): [ 1 0.9774390373890677 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27223 interne); stringhe deallocate: 0 (27143 interne)


Stringhe allocate: 1 (27223 interne); stringhe deallocate: 0 (27148 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9800758046824125 1 1 0.9800758046824125 0.9774390373890677 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998873044884 0.9999997155317746 0.9999999580606205 0.9999999470517189 0.9999999280519406 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.45528078856921e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9809670639839757


ris (2 : 2): [ 1 0.9809670639839757 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27258 interne); stringhe deallocate: 0 (27178 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9681797115330983 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79851712 1072693248 172520773 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27278 interne); stringhe deallocate: 0 (27198 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.991122062482478 1 0 0 0.9800758046824125 0.9685610998715457 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27298 interne); stringhe deallocate: 0 (27218 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047837259e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838728 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9809670639839757


ris (2 : 2): [ 1 0.9809670639839757 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27318 interne); stringhe deallocate: 0 (27238 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9657144634252184 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864848 1072693248 172520773 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9786094139867461


ris (2 : 2): [ 1 0.9786094139867461 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27338 interne); stringhe deallocate: 0 (27258 interne)


Stringhe allocate: 1 (27338 interne); stringhe deallocate: 0 (27263 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9809670639839757 1 1 0.9809670639839757 0.9786094139867461 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.999999889278977 0.9999997155317746 0.9999999580606205 0.9999999479748005 0.9999999296437143 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552313e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9810905576146386


ris (2 : 2): [ 1 0.9810905576146386 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27373 interne); stringhe deallocate: 0 (27293 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9685607044229769 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79845320 1072693248 107729181 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27393 interne); stringhe deallocate: 0 (27313 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9916155114746424 1 0 0 0.9809670639839757 0.9702249254613885 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27413 interne); stringhe deallocate: 0 (27333 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047865515e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79839008 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9810905576146386


ris (2 : 2): [ 1 0.9810905576146386 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27433 interne); stringhe deallocate: 0 (27353 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9673719493873758 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864168 1072693248 107729181 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9787716887207203


ris (2 : 2): [ 1 0.9787716887207203 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27453 interne); stringhe deallocate: 0 (27373 interne)


Stringhe allocate: 1 (27453 interne); stringhe deallocate: 0 (27378 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9810905576146386 1 1 0.9810905576146386 0.9787716887207203 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.999999889549821 0.9999997155317746 0.9999999580606205 0.9999999481014277 0.9999999298616188 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788595556e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9802817316184139


ris (2 : 2): [ 1 0.9802817316184139 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27488 interne); stringhe deallocate: 0 (27408 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9702248661046315 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853528 1072693248 -884647213 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27508 interne); stringhe deallocate: 0 (27428 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.991683981035831 1 0 0 0.9810905576146386 0.9704556697565513 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27528 interne); stringhe deallocate: 0 (27448 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047852829e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79856880 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9802817316184139


ris (2 : 2): [ 1 0.9802817316184139 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27548 interne); stringhe deallocate: 0 (27468 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9673719493875694 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858872 1072693248 -884647213 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9777097796217457


ris (2 : 2): [ 1 0.9777097796217457 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27568 interne); stringhe deallocate: 0 (27488 interne)


Stringhe allocate: 1 (27568 interne); stringhe deallocate: 0 (27493 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9802817316184139 1 1 0.9802817316184139 0.9777097796217457 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998877638026 0.9999997155317746 0.9999999580606205 0.9999999472664429 0.9999999284233367 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788563291e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9810874911079466


ris (2 : 2): [ 1 0.9810874911079466 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27603 interne); stringhe deallocate: 0 (27523 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9704556552896761 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863704 1072693248 -1743103834 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27623 interne); stringhe deallocate: 0 (27543 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9912362708268446 1 0 0 0.9802817316184139 0.9689460504485903 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27643 interne); stringhe deallocate: 0 (27563 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047835931e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79848856 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9810874911079466


ris (2 : 2): [ 1 0.9810874911079466 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27663 interne); stringhe deallocate: 0 (27583 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.968179711533482 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79862448 1072693248 -1743103834 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9787661965279981


ris (2 : 2): [ 1 0.9787661965279981 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27683 interne); stringhe deallocate: 0 (27603 interne)


Stringhe allocate: 1 (27683 interne); stringhe deallocate: 0 (27608 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9810874911079466 1 1 0.9810874911079466 0.9787661965279981 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998895431037 0.9999997155317746 0.9999999580606205 0.9999999480982871 0.9999999298542549 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552806e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9810874911079466


ris (2 : 2): [ 1 0.9810874911079466 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27718 interne); stringhe deallocate: 0 (27638 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9689459888463308 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863776 1072693248 -1743103834 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27738 interne); stringhe deallocate: 0 (27658 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9916812826206146 1 0 0 0.9810874911079466 0.9704474791486127 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27758 interne); stringhe deallocate: 0 (27678 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047879175e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838168 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9810874911079466


ris (2 : 2): [ 1 0.9810874911079466 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27778 interne); stringhe deallocate: 0 (27698 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9685607044225328 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864496 1072693248 -1743103834 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9787661965279981


ris (2 : 2): [ 1 0.9787661965279981 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27798 interne); stringhe deallocate: 0 (27718 interne)


Stringhe allocate: 1 (27798 interne); stringhe deallocate: 0 (27723 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9810874911079466 1 1 0.9810874911079466 0.9787661965279981 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998895431037 0.9999997155317746 0.9999999580606205 0.9999999480982871 0.9999999298542549 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552781e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9814816735964922


ris (2 : 2): [ 1 0.9814816735964922 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27833 interne); stringhe deallocate: 0 (27753 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9704470722208285 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863328 1072693248 1094126730 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27853 interne); stringhe deallocate: 0 (27773 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9916812826206146 1 0 0 0.9810874911079466 0.9704474791486127 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27873 interne); stringhe deallocate: 0 (27793 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047846909e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865520 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9814816735964922


ris (2 : 2): [ 1 0.9814816735964922 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27893 interne); stringhe deallocate: 0 (27813 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9702248661049051 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79846680 1072693248 1094126730 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9792810844116683


ris (2 : 2): [ 1 0.9792810844116683 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27913 interne); stringhe deallocate: 0 (27833 interne)


Stringhe allocate: 1 (27913 interne); stringhe deallocate: 0 (27838 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9814816735964922 1 1 0.9814816735964922 0.9792810844116683 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998904032458 0.9999997155317746 0.9999999580606205 0.9999999485004376 0.9999999305412666 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788575282e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9816695220193157


ris (2 : 2): [ 1 0.9816695220193157 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27948 interne); stringhe deallocate: 0 (27868 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9704470722203542 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853304 1072693248 865186166 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27968 interne); stringhe deallocate: 0 (27888 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9918977388465686 1 0 0 0.9814816735964922 0.9711788232582369 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (27988 interne); stringhe deallocate: 0 (27908 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836424e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79845112 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9816695220193157


ris (2 : 2): [ 1 0.9816695220193157 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28008 interne); stringhe deallocate: 0 (27928 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.970455655289669 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863064 1072693248 865186166 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.979524503582894


ris (2 : 2): [ 1 0.979524503582894 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28028 interne); stringhe deallocate: 0 (27948 interne)


Stringhe allocate: 1 (28028 interne); stringhe deallocate: 0 (27953 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9816695220193157 1 1 0.9816695220193157 0.979524503582894 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998908107883 0.9999997155317746 0.9999999580606205 0.9999999486909854 0.9999999308637129 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788583566e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9824894893234735


ris (2 : 2): [ 1 0.9824894893234735 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28063 interne); stringhe deallocate: 0 (27983 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9711785404215121 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858512 1072693248 -869672032 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28083 interne); stringhe deallocate: 0 (28003 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9919996305920494 1 0 0 0.9816695220193157 0.9715241341749434 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28103 interne); stringhe deallocate: 0 (28023 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836399e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838480 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9824894893234735


ris (2 : 2): [ 1 0.9824894893234735 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28123 interne); stringhe deallocate: 0 (28043 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9689459888467145 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79851712 1072693248 -869672032 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9805868457500346


ris (2 : 2): [ 1 0.9805868457500346 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28143 interne); stringhe deallocate: 0 (28063 interne)


Stringhe allocate: 1 (28143 interne); stringhe deallocate: 0 (28068 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9824894893234735 1 1 0.9824894893234735 0.9805868457500346 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998925720599 0.9999997155317746 0.9999999580606205 0.9999999495145145 0.9999999322535181 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788577052e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9826031046756361


ris (2 : 2): [ 1 0.9826031046756361 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28178 interne); stringhe deallocate: 0 (28098 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9715237705235769 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864800 1072693248 284226846 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28198 interne); stringhe deallocate: 0 (28118 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9924443026167121 1 0 0 0.9824894893234735 0.9730311483667468 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28218 interne); stringhe deallocate: 0 (28138 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.5359030478589e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838464 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9826031046756361


ris (2 : 2): [ 1 0.9826031046756361 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28238 interne); stringhe deallocate: 0 (28158 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9704470722203844 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79845320 1072693248 284226846 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9807341415631674


ris (2 : 2): [ 1 0.9807341415631674 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28258 interne); stringhe deallocate: 0 (28178 interne)


Stringhe allocate: 1 (28258 interne); stringhe deallocate: 0 (28183 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9826031046756361 1 1 0.9826031046756361 0.9807341415631674 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998928138518 0.9999997155317746 0.9999999580606205 0.999999949627576 0.999999932443999 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553198e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9818589768213809


ris (2 : 2): [ 1 0.9818589768213809 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28293 interne); stringhe deallocate: 0 (28213 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9730310527811312 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864848 1072693248 -2074645673 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28313 interne); stringhe deallocate: 0 (28233 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9925060040263919 1 0 0 0.9826031046756361 0.9732401455895593 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28333 interne); stringhe deallocate: 0 (28253 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047867184e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79852696 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9818589768213809


ris (2 : 2): [ 1 0.9818589768213809 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28353 interne); stringhe deallocate: 0 (28273 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9704470722206278 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853528 1072693248 -2074645673 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9797702545741671


ris (2 : 2): [ 1 0.9797702545741671 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28373 interne); stringhe deallocate: 0 (28293 interne)


Stringhe allocate: 1 (28373 interne); stringhe deallocate: 0 (28298 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9818589768213809 1 1 0.9818589768213809 0.9797702545741671 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998912202812 0.9999997155317746 0.9999999580606205 0.9999999488824485 0.9999999311877295 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553641e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.982600283459385


ris (2 : 2): [ 1 0.982600283459385 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28408 interne); stringhe deallocate: 0 (28328 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9732399074559499 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864168 1072693248 642773708 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28428 interne); stringhe deallocate: 0 (28348 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9921025495493124 1 0 0 0.9818589768213809 0.9718728041234795 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28448 interne); stringhe deallocate: 0 (28368 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.53590304786067e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79857936 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.982600283459385


ris (2 : 2): [ 1 0.982600283459385 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28468 interne); stringhe deallocate: 0 (28388 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.971178540421505 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863704 1072693248 642773708 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9807291545790329


ris (2 : 2): [ 1 0.9807291545790329 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28488 interne); stringhe deallocate: 0 (28408 interne)


Stringhe allocate: 1 (28488 interne); stringhe deallocate: 0 (28413 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.982600283459385 1 1 0.982600283459385 0.9807291545790329 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998928078544 0.9999997155317746 0.9999999580606205 0.9999999496247716 0.9999999324375587 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788581896e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.982600283459385


ris (2 : 2): [ 1 0.982600283459385 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28523 interne); stringhe deallocate: 0 (28443 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9718723384866976 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858872 1072693248 642773708 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28543 interne); stringhe deallocate: 0 (28463 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.992503572346754 1 0 0 0.982600283459385 0.9732327269257869 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28563 interne); stringhe deallocate: 0 (28483 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836816e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79853816 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.982600283459385


ris (2 : 2): [ 1 0.982600283459385 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28583 interne); stringhe deallocate: 0 (28503 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9715237705239606 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863776 1072693248 642773708 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9807291545790329


ris (2 : 2): [ 1 0.9807291545790329 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28603 interne); stringhe deallocate: 0 (28523 interne)


Stringhe allocate: 1 (28603 interne); stringhe deallocate: 0 (28528 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.982600283459385 1 1 0.982600283459385 0.9807291545790329 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998928078544 0.9999997155317746 0.9999999580606205 0.9999999496247716 0.9999999324375587 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.45528078856921e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9829629352173102


ris (2 : 2): [ 1 0.9829629352173102 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28638 interne); stringhe deallocate: 0 (28558 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9732322780614187 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79862448 1072693248 -1350694834 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28658 interne); stringhe deallocate: 0 (28578 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.992503572346754 1 0 0 0.982600283459385 0.9732327269257869 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28678 interne); stringhe deallocate: 0 (28598 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047837259e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838728 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9829629352173102


ris (2 : 2): [ 1 0.9829629352173102 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28698 interne); stringhe deallocate: 0 (28618 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9730310527806871 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863328 1072693248 -1350694834 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9811965116044983


ris (2 : 2): [ 1 0.9811965116044983 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28718 interne); stringhe deallocate: 0 (28638 interne)


Stringhe allocate: 1 (28718 interne); stringhe deallocate: 0 (28643 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9829629352173102 1 1 0.9829629352173102 0.9811965116044983 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998935760439 0.9999997155317746 0.9999999580606205 0.999999949983984 0.9999999330384575 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552313e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9831357576098312


ris (2 : 2): [ 1 0.9831357576098312 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28753 interne); stringhe deallocate: 0 (28673 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9732322780618929 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864496 1072693248 516869132 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28773 interne); stringhe deallocate: 0 (28693 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9926986320785902 1 0 0 0.9829629352173102 0.9738951436830885 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28793 interne); stringhe deallocate: 0 (28713 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047865515e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79839008 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9831357576098312


ris (2 : 2): [ 1 0.9831357576098312 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28813 interne); stringhe deallocate: 0 (28733 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9732399074562235 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853304 1072693248 516869132 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9814174579890415


ris (2 : 2): [ 1 0.9814174579890415 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28833 interne); stringhe deallocate: 0 (28753 interne)


Stringhe allocate: 1 (28833 interne); stringhe deallocate: 0 (28758 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9831357576098312 1 1 0.9831357576098312 0.9814174579890415 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998939401869 0.9999997155317746 0.9999999580606205 0.9999999501542651 0.9999999333206732 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788595556e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9838901355767243


ris (2 : 2): [ 1 0.9838901355767243 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28868 interne); stringhe deallocate: 0 (28788 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.973895081711321 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79846680 1072693248 711268053 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28888 interne); stringhe deallocate: 0 (28808 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9927904519207699 1 0 0 0.9831357576098312 0.9742079099098113 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28908 interne); stringhe deallocate: 0 (28828 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047852829e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79856880 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9838901355767243


ris (2 : 2): [ 1 0.9838901355767243 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28928 interne); stringhe deallocate: 0 (28848 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9718723384866905 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858512 1072693248 711268053 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9823817232507088


ris (2 : 2): [ 1 0.9823817232507088 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28948 interne); stringhe deallocate: 0 (28868 interne)


Stringhe allocate: 1 (28948 interne); stringhe deallocate: 0 (28873 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9838901355767243 1 1 0.9838901355767243 0.9823817232507088 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998955151546 0.9999997155317746 0.9999999580606205 0.9999999508907878 0.999999934538476 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788563291e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9839946628157225


ris (2 : 2): [ 1 0.9839946628157225 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (28983 interne); stringhe deallocate: 0 (28903 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9742078868875765 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863064 1072693248 1611099433 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29003 interne); stringhe deallocate: 0 (28923 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9931911685336681 1 0 0 0.9838901355767243 0.9755728917843769 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29023 interne); stringhe deallocate: 0 (28943 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047835931e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79848856 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9839946628157225


ris (2 : 2): [ 1 0.9839946628157225 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29043 interne); stringhe deallocate: 0 (28963 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9732322780618024 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864800 1072693248 1611099433 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9825154207248226


ris (2 : 2): [ 1 0.9825154207248226 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29063 interne); stringhe deallocate: 0 (28983 interne)


Stringhe allocate: 1 (29063 interne); stringhe deallocate: 0 (28988 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9839946628157225 1 1 0.9839946628157225 0.9825154207248226 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998957315306 0.9999997155317746 0.9999999580606205 0.9999999509919788 0.9999999347055621 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552806e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9833100578870196


ris (2 : 2): [ 1 0.9833100578870196 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29098 interne); stringhe deallocate: 0 (29018 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9755725948338796 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79851712 1072693248 -1483834411 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29118 interne); stringhe deallocate: 0 (29038 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9932467708170143 1 0 0 0.9839946628157225 0.9757621915418369 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29138 interne); stringhe deallocate: 0 (29058 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047879175e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838168 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9833100578870196


ris (2 : 2): [ 1 0.9833100578870196 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29158 interne); stringhe deallocate: 0 (29078 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9732322780614489 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864848 1072693248 -1483834411 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9816405211521959


ris (2 : 2): [ 1 0.9816405211521959 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29178 interne); stringhe deallocate: 0 (29098 interne)


Stringhe allocate: 1 (29178 interne); stringhe deallocate: 0 (29103 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9833100578870196 1 1 0.9833100578870196 0.9816405211521959 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998943061819 0.9999997155317746 0.9999999580606205 0.9999999503254151 0.9999999336043861 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552781e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9839920672690843


ris (2 : 2): [ 1 0.9839920672690843 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29213 interne); stringhe deallocate: 0 (29133 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9757618991861605 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79845320 1072693248 -292669832 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29233 interne); stringhe deallocate: 0 (29153 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9928831974358409 1 0 0 0.9833100578870196 0.9745237185880368 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29253 interne); stringhe deallocate: 0 (29173 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047846909e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865520 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9839920672690843


ris (2 : 2): [ 1 0.9839920672690843 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29273 interne); stringhe deallocate: 0 (29193 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9738950817115946 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864168 1072693248 -292669832 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9825108925619933


ris (2 : 2): [ 1 0.9825108925619933 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29293 interne); stringhe deallocate: 0 (29213 interne)


Stringhe allocate: 1 (29293 interne); stringhe deallocate: 0 (29218 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9839920672690843 1 1 0.9839920672690843 0.9825108925619933 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998957261631 0.9999997155317746 0.9999999580606205 0.9999999509894686 0.99999993469991 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788575282e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9839920672690843


ris (2 : 2): [ 1 0.9839920672690843 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29328 interne); stringhe deallocate: 0 (29248 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9745235530858327 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853528 1072693248 -292669832 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29348 interne); stringhe deallocate: 0 (29268 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9932445795064697 1 0 0 0.9839920672690843 0.975755472068463 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29368 interne); stringhe deallocate: 0 (29288 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836424e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79845112 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9839920672690843


ris (2 : 2): [ 1 0.9839920672690843 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29388 interne); stringhe deallocate: 0 (29308 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9742078868875694 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858872 1072693248 -292669832 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9825108925619933


ris (2 : 2): [ 1 0.9825108925619933 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29408 interne); stringhe deallocate: 0 (29328 interne)


Stringhe allocate: 1 (29408 interne); stringhe deallocate: 0 (29333 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9839920672690843 1 1 0.9839920672690843 0.9825108925619933 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998957261631 0.9999997155317746 0.9999999580606205 0.9999999509894686 0.99999993469991 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788583566e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9843257104453994


ris (2 : 2): [ 1 0.9843257104453994 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29443 interne); stringhe deallocate: 0 (29363 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9757552234659457 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863704 1072693248 -1579207977 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29463 interne); stringhe deallocate: 0 (29383 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9932445795064697 1 0 0 0.9839920672690843 0.975755472068463 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29483 interne); stringhe deallocate: 0 (29403 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836399e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838480 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9843257104453994


ris (2 : 2): [ 1 0.9843257104453994 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29503 interne); stringhe deallocate: 0 (29423 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9755725948342633 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79862448 1072693248 -1579207977 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9829350999366032


ris (2 : 2): [ 1 0.9829350999366032 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29523 interne); stringhe deallocate: 0 (29443 interne)


Stringhe allocate: 1 (29523 interne); stringhe deallocate: 0 (29448 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9843257104453994 1 1 0.9843257104453994 0.9829350999366032 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998964138617 0.9999997155317746 0.9999999580606205 0.9999999513110867 0.9999999352272833 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788577052e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9844847087425785


ris (2 : 2): [ 1 0.9844847087425785 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29558 interne); stringhe deallocate: 0 (29478 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9757552234654714 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863776 1072693248 326026312 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29578 interne); stringhe deallocate: 0 (29498 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9934203577669003 1 0 0 0.9843257104453994 0.9763554577035035 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29598 interne); stringhe deallocate: 0 (29518 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.5359030478589e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838464 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9844847087425785


ris (2 : 2): [ 1 0.9844847087425785 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29618 interne); stringhe deallocate: 0 (29538 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9757618991857164 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864496 1072693248 326026312 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9831356451919449


ris (2 : 2): [ 1 0.9831356451919449 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29638 interne); stringhe deallocate: 0 (29558 interne)


Stringhe allocate: 1 (29638 interne); stringhe deallocate: 0 (29563 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9844847087425785 1 1 0.9844847087425785 0.9831356451919449 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998967399881 0.9999997155317746 0.9999999580606205 0.9999999514636109 0.9999999354751156 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553198e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9851787438755018


ris (2 : 2): [ 1 0.9851787438755018 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29673 interne); stringhe deallocate: 0 (29593 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9763550846109652 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863328 1072693248 -1833624634 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29693 interne); stringhe deallocate: 0 (29613 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9935031013037308 1 0 0 0.9844847087425785 0.9766387464956756 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29713 interne); stringhe deallocate: 0 (29633 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047867184e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79852696 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9851787438755018


ris (2 : 2): [ 1 0.9851787438755018 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29733 interne); stringhe deallocate: 0 (29653 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9745235530861063 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79846680 1072693248 -1833624634 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9840108747877655


ris (2 : 2): [ 1 0.9840108747877655 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29753 interne); stringhe deallocate: 0 (29673 interne)


Stringhe allocate: 1 (29753 interne); stringhe deallocate: 0 (29678 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9851787438755018 1 1 0.9851787438755018 0.9840108747877655 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998981515654 0.9999997155317746 0.9999999580606205 0.9999999521238117 0.9999999365456657 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553641e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9852749099611986


ris (2 : 2): [ 1 0.9852749099611986 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29788 interne); stringhe deallocate: 0 (29708 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9766383258824636 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853304 1072693248 1065044290 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29808 interne); stringhe deallocate: 0 (29728 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9938642074550235 1 0 0 0.9851787438755018 0.977875082242789 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29828 interne); stringhe deallocate: 0 (29748 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.53590304786067e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79857936 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9852749099611986


ris (2 : 2): [ 1 0.9852749099611986 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29848 interne); stringhe deallocate: 0 (29768 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9757552234659386 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863064 1072693248 1065044290 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9841322274668178


ris (2 : 2): [ 1 0.9841322274668178 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29868 interne); stringhe deallocate: 0 (29788 interne)


Stringhe allocate: 1 (29868 interne); stringhe deallocate: 0 (29793 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9852749099611986 1 1 0.9852749099611986 0.9841322274668178 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998983456266 0.9999997155317746 0.9999999580606205 0.9999999522145784 0.9999999366926912 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788581896e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9846450667081554


ris (2 : 2): [ 1 0.9846450667081554 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29903 interne); stringhe deallocate: 0 (29823 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9778747646341586 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858512 1072693248 1593162892 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29923 interne); stringhe deallocate: 0 (29843 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9939143135047974 1 0 0 0.9852749099611986 0.9780465409716153 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29943 interne); stringhe deallocate: 0 (29863 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836816e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79853816 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9846450667081554


ris (2 : 2): [ 1 0.9846450667081554 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29963 interne); stringhe deallocate: 0 (29883 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9757552234658551 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79851712 1072693248 1593162892 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9833381119843467


ris (2 : 2): [ 1 0.9833381119843467 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (29983 interne); stringhe deallocate: 0 (29903 interne)


Stringhe allocate: 1 (29983 interne); stringhe deallocate: 0 (29908 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9846450667081554 1 1 0.9846450667081554 0.9833381119843467 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998970678635 0.9999997155317746 0.9999999580606205 0.9999999516169555 0.9999999357243606 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.45528078856921e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9852725220328192


ris (2 : 2): [ 1 0.9852725220328192 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30018 interne); stringhe deallocate: 0 (29938 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9780464260106374 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864800 1072693248 1031334051 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30038 interne); stringhe deallocate: 0 (29958 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9935866790115741 1 0 0 0.9846450667081554 0.9769247909959208 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30058 interne); stringhe deallocate: 0 (29978 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047837259e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838728 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9852725220328192


ris (2 : 2): [ 1 0.9852725220328192 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30078 interne); stringhe deallocate: 0 (29998 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9763550846105211 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79845320 1072693248 1031334051 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9841281159885797


ris (2 : 2): [ 1 0.9841281159885797 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30098 interne); stringhe deallocate: 0 (30018 interne)


Stringhe allocate: 1 (30098 interne); stringhe deallocate: 0 (30023 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9852725220328192 1 1 0.9852725220328192 0.9841281159885797 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998983408123 0.9999997155317746 0.9999999580606205 0.9999999522123266 0.9999999366877155 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552313e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9852725220328192


ris (2 : 2): [ 1 0.9852725220328192 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30133 interne); stringhe deallocate: 0 (30053 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9769244281778597 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864848 1072693248 1031334051 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30153 interne); stringhe deallocate: 0 (30073 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9939123388031442 1 0 0 0.9852725220328192 0.978040454791724 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30173 interne); stringhe deallocate: 0 (30093 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047865515e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79839008 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9852725220328192


ris (2 : 2): [ 1 0.9852725220328192 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30193 interne); stringhe deallocate: 0 (30113 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9766383258827371 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853528 1072693248 1031334051 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9841281159885797


ris (2 : 2): [ 1 0.9841281159885797 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30213 interne); stringhe deallocate: 0 (30133 interne)


Stringhe allocate: 1 (30213 interne); stringhe deallocate: 0 (30138 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9852725220328192 1 1 0.9852725220328192 0.9841281159885797 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998983408123 0.9999997155317746 0.9999999580606205 0.9999999522123266 0.9999999366877155 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788595556e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9855794770293662


ris (2 : 2): [ 1 0.9855794770293662 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30248 interne); stringhe deallocate: 0 (30168 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9780402271275808 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864168 1072693248 -122788436 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30268 interne); stringhe deallocate: 0 (30188 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9939123388031442 1 0 0 0.9852725220328192 0.978040454791724 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30288 interne); stringhe deallocate: 0 (30208 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047852829e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79856880 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9855794770293662


ris (2 : 2): [ 1 0.9855794770293662 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30308 interne); stringhe deallocate: 0 (30228 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9778747646341515 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863704 1072693248 -122788436 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9845131517341409


ris (2 : 2): [ 1 0.9845131517341409 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30328 interne); stringhe deallocate: 0 (30248 interne)


Stringhe allocate: 1 (30328 interne); stringhe deallocate: 0 (30253 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9855794770293662 1 1 0.9855794770293662 0.9845131517341409 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998989578003 0.9999997155317746 0.9999999580606205 0.9999999525009116 0.9999999371519928 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788563291e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9857257570231627


ris (2 : 2): [ 1 0.9857257570231627 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30363 interne); stringhe deallocate: 0 (30283 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9780402271280551 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858872 1072693248 -1104697201 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30383 interne); stringhe deallocate: 0 (30303 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9940707415471459 1 0 0 0.9855794770293662 0.9785838932812868 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30403 interne); stringhe deallocate: 0 (30323 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047835931e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79848856 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9857257570231627


ris (2 : 2): [ 1 0.9857257570231627 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30423 interne); stringhe deallocate: 0 (30343 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9780464260110211 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863776 1072693248 -1104697201 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9846951768504857


ris (2 : 2): [ 1 0.9846951768504857 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30443 interne); stringhe deallocate: 0 (30363 interne)


Stringhe allocate: 1 (30443 interne); stringhe deallocate: 0 (30368 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9857257570231627 1 1 0.9857257570231627 0.9846951768504857 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998992505081 0.9999997155317746 0.9999999580606205 0.9999999526378234 0.9999999373702926 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552806e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9863642761566356


ris (2 : 2): [ 1 0.9863642761566356 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30478 interne); stringhe deallocate: 0 (30398 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9785838214879323 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79862448 1072693248 -796843390 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30498 interne); stringhe deallocate: 0 (30418 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9941453059627693 1 0 0 0.9857257570231627 0.978840482813255 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30518 interne); stringhe deallocate: 0 (30438 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047879175e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838168 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9863642761566356


ris (2 : 2): [ 1 0.9863642761566356 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30538 interne); stringhe deallocate: 0 (30458 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9769244281774157 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863328 1072693248 -796843390 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9854895798992199


ris (2 : 2): [ 1 0.9854895798992199 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30558 interne); stringhe deallocate: 0 (30478 interne)


Stringhe allocate: 1 (30558 interne); stringhe deallocate: 0 (30483 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9863642761566356 1 1 0.9863642761566356 0.9854895798992199 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999005182954 0.9999997155317746 0.9999999580606205 0.9999999532308442 0.9999999383141657 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552781e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9864527498992399


ris (2 : 2): [ 1 0.9864527498992399 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30593 interne); stringhe deallocate: 0 (30513 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9788403598795199 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864496 1072693248 1534835300 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30613 interne); stringhe deallocate: 0 (30533 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9944707171088661 1 0 0 0.9863642761566356 0.9799602970080861 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30633 interne); stringhe deallocate: 0 (30553 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047846909e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865520 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9864527498992399


ris (2 : 2): [ 1 0.9864527498992399 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30653 interne); stringhe deallocate: 0 (30573 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9780402271278543 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853304 1072693248 1534835300 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9855997259580049


ris (2 : 2): [ 1 0.9855997259580049 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30673 interne); stringhe deallocate: 0 (30593 interne)


Stringhe allocate: 1 (30673 interne); stringhe deallocate: 0 (30598 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9864527498992399 1 1 0.9864527498992399 0.9855997259580049 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999006926981 0.9999997155317746 0.9999999580606205 0.9999999533124259 0.9999999384439084 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788575282e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9858732879252286


ris (2 : 2): [ 1 0.9858732879252286 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30708 interne); stringhe deallocate: 0 (30628 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9799599735265065 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79846680 1072693248 590639474 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30728 interne); stringhe deallocate: 0 (30648 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9945158702225164 1 0 0 0.9864527498992399 0.9801155961805214 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30748 interne); stringhe deallocate: 0 (30668 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836424e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79845112 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9858732879252286


ris (2 : 2): [ 1 0.9858732879252286 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30768 interne); stringhe deallocate: 0 (30688 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.978040227128048 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858512 1072693248 590639474 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9848789462423192


ris (2 : 2): [ 1 0.9848789462423192 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30788 interne); stringhe deallocate: 0 (30708 interne)


Stringhe allocate: 1 (30788 interne); stringhe deallocate: 0 (30713 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9858732879252286 1 1 0.9858732879252286 0.9848789462423192 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999998995448602 0.9999997155317746 0.9999999580606205 0.9999999527755064 0.9999999375899149 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788583566e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.986450552981696


ris (2 : 2): [ 1 0.986450552981696 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30823 interne); stringhe deallocate: 0 (30743 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9801154224405551 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863064 1072693248 -1073369580 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30843 interne); stringhe deallocate: 0 (30763 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9942206220923934 1 0 0 0.9858732879252286 0.9790995683347126 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30863 interne); stringhe deallocate: 0 (30783 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836399e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838480 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.986450552981696


ris (2 : 2): [ 1 0.986450552981696 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30883 interne); stringhe deallocate: 0 (30803 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.978583821488316 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864800 1072693248 -1073369580 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9855959928895974


ris (2 : 2): [ 1 0.9855959928895974 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30903 interne); stringhe deallocate: 0 (30823 interne)


Stringhe allocate: 1 (30903 interne); stringhe deallocate: 0 (30828 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.986450552981696 1 1 0.986450552981696 0.9855959928895974 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999006883711 0.9999997155317746 0.9999999580606205 0.9999999533104019 0.9999999384395157 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788577052e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.986450552981696


ris (2 : 2): [ 1 0.986450552981696 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30938 interne); stringhe deallocate: 0 (30858 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9790992824559499 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79851712 1072693248 -1073369580 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30958 interne); stringhe deallocate: 0 (30878 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9945140907182117 1 0 0 0.986450552981696 0.9801100836078092 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30978 interne); stringhe deallocate: 0 (30898 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.5359030478589e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838464 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.986450552981696


ris (2 : 2): [ 1 0.986450552981696 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (30998 interne); stringhe deallocate: 0 (30918 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9788403598790758 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864848 1072693248 -1073369580 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9855959928895974


ris (2 : 2): [ 1 0.9855959928895974 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31018 interne); stringhe deallocate: 0 (30938 interne)


Stringhe allocate: 1 (31018 interne); stringhe deallocate: 0 (30943 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.986450552981696 1 1 0.986450552981696 0.9855959928895974 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999006883711 0.9999997155317746 0.9999999580606205 0.9999999533104019 0.9999999384395157 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553198e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9867329545909415


ris (2 : 2): [ 1 0.9867329545909415 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31053 interne); stringhe deallocate: 0 (30973 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9801097003946566 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79845320 1072693248 -46444479 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31073 interne); stringhe deallocate: 0 (30993 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9945140907182117 1 0 0 0.986450552981696 0.9801100836078092 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31093 interne); stringhe deallocate: 0 (31013 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047867184e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79852696 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9867329545909415


ris (2 : 2): [ 1 0.9867329545909415 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31113 interne); stringhe deallocate: 0 (31033 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9799599735267801 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864168 1072693248 -46444479 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9859454688796021


ris (2 : 2): [ 1 0.9859454688796021 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31133 interne); stringhe deallocate: 0 (31053 interne)


Stringhe allocate: 1 (31133 interne); stringhe deallocate: 0 (31058 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9867329545909415 1 1 0.9867329545909415 0.9859454688796021 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999012430327 0.9999997155317746 0.9999999580606205 0.9999999535698647 0.9999999388493943 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553641e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9868675336208098


ris (2 : 2): [ 1 0.9868675336208098 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31168 interne); stringhe deallocate: 0 (31088 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9801097003941823 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853528 1072693248 952915583 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31188 interne); stringhe deallocate: 0 (31108 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9946568354990995 1 0 0 0.9867329545909415 0.9806023043787016 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31208 interne); stringhe deallocate: 0 (31128 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.53590304786067e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79857936 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9868675336208098


ris (2 : 2): [ 1 0.9868675336208098 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31228 interne); stringhe deallocate: 0 (31148 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.980115422440548 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858872 1072693248 952915583 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9861106816969506


ris (2 : 2): [ 1 0.9861106816969506 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31248 interne); stringhe deallocate: 0 (31168 interne)


Stringhe allocate: 1 (31248 interne); stringhe deallocate: 0 (31173 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9868675336208098 1 1 0.9868675336208098 0.9861106816969506 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999015062669 0.9999997155317746 0.9999999580606205 0.9999999536930047 0.999999939042211 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788581896e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9874549774899607


ris (2 : 2): [ 1 0.9874549774899607 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31283 interne); stringhe deallocate: 0 (31203 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9806022731790804 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863704 1072693248 777187329 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31303 interne); stringhe deallocate: 0 (31223 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9947240292919283 1 0 0 0.9868675336208098 0.9808347109888789 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31323 interne); stringhe deallocate: 0 (31243 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836816e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79853816 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9874549774899607


ris (2 : 2): [ 1 0.9874549774899607 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31343 interne); stringhe deallocate: 0 (31263 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9790992824563336 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79862448 1072693248 777187329 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9868317116455297


ris (2 : 2): [ 1 0.9868317116455297 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31363 interne); stringhe deallocate: 0 (31283 interne)


Stringhe allocate: 1 (31363 interne); stringhe deallocate: 0 (31288 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9874549774899607 1 1 0.9874549774899607 0.9868317116455297 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999026471051 0.9999997155317746 0.9999999580606205 0.9999999542267029 0.9999999398766195 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.45528078856921e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9875363742014282


ris (2 : 2): [ 1 0.9875363742014282 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31398 interne); stringhe deallocate: 0 (31318 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9808344928746511 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863776 1072693248 -505821419 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31418 interne); stringhe deallocate: 0 (31338 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9950172738504023 1 0 0 0.9874549774899607 0.981848985495932 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31438 interne); stringhe deallocate: 0 (31358 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047837259e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838728 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9875363742014282


ris (2 : 2): [ 1 0.9875363742014282 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31458 interne); stringhe deallocate: 0 (31378 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9801097003942125 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864496 1072693248 -505821419 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9869316844887117


ris (2 : 2): [ 1 0.9869316844887117 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31478 interne); stringhe deallocate: 0 (31398 interne)


Stringhe allocate: 1 (31478 interne); stringhe deallocate: 0 (31403 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9875363742014282 1 1 0.9875363742014282 0.9869316844887117 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.999999902804135 0.9999997155317746 0.9999999580606205 0.9999999543001656 0.9999999399914074 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552313e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9870032634985624


ris (2 : 2): [ 1 0.9870032634985624 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31513 interne); stringhe deallocate: 0 (31433 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9818487255106234 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863328 1072693248 -566710038 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31533 interne); stringhe deallocate: 0 (31453 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9950579636209849 1 0 0 0.9875363742014282 0.9819896481096966 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31553 interne); stringhe deallocate: 0 (31473 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047865515e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79839008 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9870032634985624


ris (2 : 2): [ 1 0.9870032634985624 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31573 interne); stringhe deallocate: 0 (31493 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9801097003944559 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79846680 1072693248 -566710038 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.986277477855247


ris (2 : 2): [ 1 0.986277477855247 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31593 interne); stringhe deallocate: 0 (31513 interne)


Stringhe allocate: 1 (31593 interne); stringhe deallocate: 0 (31518 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9870032634985624 1 1 0.9870032634985624 0.986277477855247 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999017710415 0.9999997155317746 0.9999999580606205 0.9999999538168667 0.9999999392362587 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788595556e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9875343530157275


ris (2 : 2): [ 1 0.9875343530157275 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31628 interne); stringhe deallocate: 0 (31548 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.981989392471819 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853304 1072693248 -1531174572 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31648 interne); stringhe deallocate: 0 (31568 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.994791900492538 1 0 0 0.9870032634985624 0.981069378347785 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31668 interne); stringhe deallocate: 0 (31588 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047852829e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79856880 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9875343530157275


ris (2 : 2): [ 1 0.9875343530157275 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31688 interne); stringhe deallocate: 0 (31608 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9806022731790733 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863064 1072693248 -1531174572 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9869282950641535


ris (2 : 2): [ 1 0.9869282950641535 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31708 interne); stringhe deallocate: 0 (31628 interne)


Stringhe allocate: 1 (31708 interne); stringhe deallocate: 0 (31633 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9875343530157275 1 1 0.9875343530157275 0.9869282950641535 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999028002388 0.9999997155317746 0.9999999580606205 0.999999954298343 0.9999999399875192 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788563291e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9875343530157275


ris (2 : 2): [ 1 0.9875343530157275 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31743 interne); stringhe deallocate: 0 (31663 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9810690967569613 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858512 1072693248 -1531174572 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31763 interne); stringhe deallocate: 0 (31683 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9950563600189855 1 0 0 0.9875343530157275 0.9819846550831389 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31783 interne); stringhe deallocate: 0 (31703 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047835931e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79848856 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9875343530157275


ris (2 : 2): [ 1 0.9875343530157275 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31803 interne); stringhe deallocate: 0 (31723 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9808344928750348 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79851712 1072693248 -1531174572 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9869282950641535


ris (2 : 2): [ 1 0.9869282950641535 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31823 interne); stringhe deallocate: 0 (31743 interne)


Stringhe allocate: 1 (31823 interne); stringhe deallocate: 0 (31748 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9875343530157275 1 1 0.9875343530157275 0.9869282950641535 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999028002388 0.9999997155317746 0.9999999580606205 0.999999954298343 0.9999999399875192 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552806e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9877941652676913


ris (2 : 2): [ 1 0.9877941652676913 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31858 interne); stringhe deallocate: 0 (31778 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.981984624100237 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864800 1072693248 -2107628631 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31878 interne); stringhe deallocate: 0 (31798 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9950563600189855 1 0 0 0.9875343530157275 0.9819846550831389 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31898 interne); stringhe deallocate: 0 (31818 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047879175e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838168 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9877941652676913


ris (2 : 2): [ 1 0.9877941652676913 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31918 interne); stringhe deallocate: 0 (31838 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9818487255101793 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79845320 1072693248 -2107628631 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9872454906654286


ris (2 : 2): [ 1 0.9872454906654286 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31938 interne); stringhe deallocate: 0 (31858 interne)


Stringhe allocate: 1 (31938 interne); stringhe deallocate: 0 (31863 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9877941652676913 1 1 0.9877941652676913 0.9872454906654286 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999032997933 0.9999997155317746 0.9999999580606205 0.9999999545320526 0.9999999403502952 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552781e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9879179792959137


ris (2 : 2): [ 1 0.9879179792959137 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31973 interne); stringhe deallocate: 0 (31893 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9819846241007113 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864848 1072693248 713464437 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (31993 interne); stringhe deallocate: 0 (31913 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9951849946116814 1 0 0 0.9877941652676913 0.98243048527711 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32013 interne); stringhe deallocate: 0 (31933 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047846909e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865520 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9879179792959137


ris (2 : 2): [ 1 0.9879179792959137 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32033 interne); stringhe deallocate: 0 (31953 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9819893924720926 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853528 1072693248 713464437 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9873954417844694


ris (2 : 2): [ 1 0.9873954417844694 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32053 interne); stringhe deallocate: 0 (31973 interne)


Stringhe allocate: 1 (32053 interne); stringhe deallocate: 0 (31978 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9879179792959137 1 1 0.9879179792959137 0.9873954417844694 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999035369529 0.9999997155317746 0.9999999580606205 0.9999999546430064 0.9999999405210297 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788575282e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9884584334206413


ris (2 : 2): [ 1 0.9884584334206413 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32088 interne); stringhe deallocate: 0 (32008 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9824304668431569 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864168 1072693248 -1801459759 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32108 interne); stringhe deallocate: 0 (32028 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9952455463608755 1 0 0 0.9879179792959137 0.9826409881453448 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32128 interne); stringhe deallocate: 0 (32048 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836424e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79845112 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9884584334206413


ris (2 : 2): [ 1 0.9884584334206413 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32148 interne); stringhe deallocate: 0 (32068 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9810690967569542 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863704 1072693248 -1801459759 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9880498658472433


ris (2 : 2): [ 1 0.9880498658472433 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32168 interne); stringhe deallocate: 0 (32088 interne)


Stringhe allocate: 1 (32168 interne); stringhe deallocate: 0 (32093 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9884584334206413 1 1 0.9884584334206413 0.9880498658472433 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999045653738 0.9999997155317746 0.9999999580606205 0.9999999551241634 0.9999999412604559 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788583566e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9885333191940098


ris (2 : 2): [ 1 0.9885333191940098 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32203 interne); stringhe deallocate: 0 (32123 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9826407520303988 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858872 1072693248 -1600243156 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32223 interne); stringhe deallocate: 0 (32143 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9955098039687806 1 0 0 0.9884584334206413 0.9835596698160239 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32243 interne); stringhe deallocate: 0 (32163 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836399e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838480 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9885333191940098


ris (2 : 2): [ 1 0.9885333191940098 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32263 interne); stringhe deallocate: 0 (32183 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9819846241006207 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863776 1072693248 -1600243156 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9881406037365618


ris (2 : 2): [ 1 0.9881406037365618 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32283 interne); stringhe deallocate: 0 (32203 interne)


Stringhe allocate: 1 (32283 interne); stringhe deallocate: 0 (32208 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9885333191940098 1 1 0.9885333191940098 0.9881406037365618 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999047070053 0.9999997155317746 0.9999999580606205 0.9999999551904292 0.9999999413622512 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788577052e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.988042852115484


ris (2 : 2): [ 1 0.988042852115484 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32318 interne); stringhe deallocate: 0 (32238 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9835596172337819 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79862448 1072693248 186400256 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32338 interne); stringhe deallocate: 0 (32258 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9955464715935729 1 0 0 0.9885333191940098 0.9836870753301347 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32358 interne); stringhe deallocate: 0 (32278 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.5359030478589e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838464 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.988042852115484


ris (2 : 2): [ 1 0.988042852115484 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32378 interne); stringhe deallocate: 0 (32298 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9819846241002672 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863328 1072693248 186400256 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9875468301356721


ris (2 : 2): [ 1 0.9875468301356721 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32398 interne); stringhe deallocate: 0 (32318 interne)


Stringhe allocate: 1 (32398 interne); stringhe deallocate: 0 (32323 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.988042852115484 1 1 0.988042852115484 0.9875468301356721 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999037755515 0.9999997155317746 0.9999999580606205 0.9999999547546348 0.999999940692905 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553198e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9885314596833295


ris (2 : 2): [ 1 0.9885314596833295 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32433 interne); stringhe deallocate: 0 (32353 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9836869327554965 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864496 1072693248 -1169357186 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32453 interne); stringhe deallocate: 0 (32373 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9953067085567265 1 0 0 0.988042852115484 0.9828535386923987 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32473 interne); stringhe deallocate: 0 (32393 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047867184e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79852696 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9885314596833295


ris (2 : 2): [ 1 0.9885314596833295 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32493 interne); stringhe deallocate: 0 (32413 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9824304668434305 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853304 1072693248 -1169357186 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9881375263776959


ris (2 : 2): [ 1 0.9881375263776959 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32513 interne); stringhe deallocate: 0 (32433 interne)


Stringhe allocate: 1 (32513 interne); stringhe deallocate: 0 (32438 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9885314596833295 1 1 0.9885314596833295 0.9881375263776959 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999047034909 0.9999997155317746 0.9999999580606205 0.9999999551887848 0.9999999413588018 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553641e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9885314596833295


ris (2 : 2): [ 1 0.9885314596833295 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32548 interne); stringhe deallocate: 0 (32468 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9828534214024831 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79846680 1072693248 -1169357186 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32568 interne); stringhe deallocate: 0 (32488 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9955450265061239 1 0 0 0.9885314596833295 0.9836825528838198 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32588 interne); stringhe deallocate: 0 (32508 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.53590304786067e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79857936 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9885314596833295


ris (2 : 2): [ 1 0.9885314596833295 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32608 interne); stringhe deallocate: 0 (32528 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9826407520303917 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858512 1072693248 -1169357186 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9881375263776959


ris (2 : 2): [ 1 0.9881375263776959 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32628 interne); stringhe deallocate: 0 (32548 interne)


Stringhe allocate: 1 (32628 interne); stringhe deallocate: 0 (32553 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9885314596833295 1 1 0.9885314596833295 0.9881375263776959 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999047034909 0.9999997155317746 0.9999999580606205 0.9999999551887848 0.9999999413588018 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788581896e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9887704895049047


ris (2 : 2): [ 1 0.9887704895049047 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32663 interne); stringhe deallocate: 0 (32583 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9836821643839144 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863064 1072693248 41258271 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32683 interne); stringhe deallocate: 0 (32603 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9955450265061239 1 0 0 0.9885314596833295 0.9836825528838198 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32703 interne); stringhe deallocate: 0 (32623 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836816e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79853816 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9887704895049047


ris (2 : 2): [ 1 0.9887704895049047 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32723 interne); stringhe deallocate: 0 (32643 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9835596172341656 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864800 1072693248 41258271 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9884254190070989


ris (2 : 2): [ 1 0.9884254190070989 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32743 interne); stringhe deallocate: 0 (32663 interne)


Stringhe allocate: 1 (32743 interne); stringhe deallocate: 0 (32668 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9887704895049047 1 1 0.9887704895049047 0.9884254190070989 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999051541795 0.9999997155317746 0.9999999580606205 0.9999999553996539 0.9999999416806303 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.45528078856921e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9888843996259664


ris (2 : 2): [ 1 0.9888843996259664 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32778 interne); stringhe deallocate: 0 (32698 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9836821643834401 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79851712 1072693248 -444767938 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32798 interne); stringhe deallocate: 0 (32718 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9956609456895487 1 0 0 0.9887704895049047 0.9840863646966476 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32818 interne); stringhe deallocate: 0 (32738 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047837259e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838728 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9888843996259664


ris (2 : 2): [ 1 0.9888843996259664 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32838 interne); stringhe deallocate: 0 (32758 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9836869327550524 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864848 1072693248 -444767938 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9885615162408764


ris (2 : 2): [ 1 0.9885615162408764 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32858 interne); stringhe deallocate: 0 (32778 interne)


Stringhe allocate: 1 (32858 interne); stringhe deallocate: 0 (32783 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9888843996259664 1 1 0.9888843996259664 0.9885615162408764 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999053682056 0.9999997155317746 0.9999999580606205 0.9999999554997945 0.9999999418321549 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552313e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9893816227246726


ris (2 : 2): [ 1 0.9893816227246726 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32893 interne); stringhe deallocate: 0 (32813 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9840860454569125 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79845320 1072693248 -1508133560 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32913 interne); stringhe deallocate: 0 (32833 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9957155119549392 1 0 0 0.9888843996259664 0.9842770281958156 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32933 interne); stringhe deallocate: 0 (32853 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047865515e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79839008 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9893816227246726


ris (2 : 2): [ 1 0.9893816227246726 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32953 interne); stringhe deallocate: 0 (32873 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9828534214027567 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864168 1072693248 -1508133560 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9891554784704199


ris (2 : 2): [ 1 0.9891554784704199 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (32973 interne); stringhe deallocate: 0 (32893 interne)


Stringhe allocate: 1 (32973 interne); stringhe deallocate: 0 (32898 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9893816227246726 1 1 0.9893816227246726 0.9891554784704199 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999062967984 0.9999997155317746 0.9999999580606205 0.9999999559342867 0.9999999424888509 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788595556e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9894505183710922


ris (2 : 2): [ 1 0.9894505183710922 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33008 interne); stringhe deallocate: 0 (32928 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9842767803197194 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853528 1072693248 573390902 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33028 interne); stringhe deallocate: 0 (32948 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9959536479453568 1 0 0 0.9893816227246726 0.9851091264157766 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33048 interne); stringhe deallocate: 0 (32968 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047852829e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79856880 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9894505183710922


ris (2 : 2): [ 1 0.9894505183710922 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33068 interne); stringhe deallocate: 0 (32988 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9836821643839073 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858872 1072693248 573390902 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9892378332689823


ris (2 : 2): [ 1 0.9892378332689823 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33088 interne); stringhe deallocate: 0 (33008 interne)


Stringhe allocate: 1 (33088 interne); stringhe deallocate: 0 (33013 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9894505183710922 1 1 0.9894505183710922 0.9892378332689823 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999064247442 0.9999997155317746 0.9999999580606205 0.9999999559941546 0.9999999425793168 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788563291e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9889992838454591


ris (2 : 2): [ 1 0.9889992838454591 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33123 interne); stringhe deallocate: 0 (33043 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9851088611612582 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863704 1072693248 -746830078 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33143 interne); stringhe deallocate: 0 (33063 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9959866910097233 1 0 0 0.9894505183710922 0.9852245242787056 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33163 interne); stringhe deallocate: 0 (33083 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047835931e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79848856 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9889992838454591


ris (2 : 2): [ 1 0.9889992838454591 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33183 interne); stringhe deallocate: 0 (33103 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9836821643838238 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79862448 1072693248 -746830078 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9886989180602919


ris (2 : 2): [ 1 0.9886989180602919 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33203 interne); stringhe deallocate: 0 (33123 interne)


Stringhe allocate: 1 (33203 interne); stringhe deallocate: 0 (33128 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9889992838454591 1 1 0.9889992838454591 0.9886989180602919 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999055835727 0.9999997155317746 0.9999999580606205 0.9999999556005635 0.9999999419847325 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552806e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9894488076030172


ris (2 : 2): [ 1 0.9894488076030172 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33238 interne); stringhe deallocate: 0 (33158 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.985224255753069 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863776 1072693248 -1950936140 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33258 interne); stringhe deallocate: 0 (33178 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9957706283249046 1 0 0 0.9889992838454591 0.9844695463851965 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33278 interne); stringhe deallocate: 0 (33198 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047879175e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838168 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9894488076030172


ris (2 : 2): [ 1 0.9894488076030172 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33298 interne); stringhe deallocate: 0 (33218 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9840860454564684 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864496 1072693248 -1950936140 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9892350392938064


ris (2 : 2): [ 1 0.9892350392938064 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33318 interne); stringhe deallocate: 0 (33238 interne)


Stringhe allocate: 1 (33318 interne); stringhe deallocate: 0 (33243 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9894488076030172 1 1 0.9894488076030172 0.9892350392938064 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999064215693 0.9999997155317746 0.9999999580606205 0.9999999559926691 0.99999994257625 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552781e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9894488076030172


ris (2 : 2): [ 1 0.9894488076030172 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33353 interne); stringhe deallocate: 0 (33273 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9844694225321078 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863328 1072693248 -1950936140 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33373 interne); stringhe deallocate: 0 (33293 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9959853887678262 1 0 0 0.9894488076030172 0.9852204280616326 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33393 interne); stringhe deallocate: 0 (33313 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047846909e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865520 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9894488076030172


ris (2 : 2): [ 1 0.9894488076030172 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33413 interne); stringhe deallocate: 0 (33333 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.984276780319993 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79846680 1072693248 -1950936140 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9892350392938064


ris (2 : 2): [ 1 0.9892350392938064 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33433 interne); stringhe deallocate: 0 (33353 interne)


Stringhe allocate: 1 (33433 interne); stringhe deallocate: 0 (33358 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9894488076030172 1 1 0.9894488076030172 0.9892350392938064 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999064215693 0.9999997155317746 0.9999999580606205 0.9999999559926691 0.99999994257625 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788575282e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9896687173846785


ris (2 : 2): [ 1 0.9896687173846785 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33468 interne); stringhe deallocate: 0 (33388 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9852199642186452 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853304 1072693248 -1159638106 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33488 interne); stringhe deallocate: 0 (33408 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9959853887678262 1 0 0 0.9894488076030172 0.9852204280616326 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33508 interne); stringhe deallocate: 0 (33428 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836424e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79845112 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9896687173846785


ris (2 : 2): [ 1 0.9896687173846785 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33528 interne); stringhe deallocate: 0 (33448 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9851088611612511 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863064 1072693248 -1159638106 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9894963321722494


ris (2 : 2): [ 1 0.9894963321722494 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33548 interne); stringhe deallocate: 0 (33468 interne)


Stringhe allocate: 1 (33548 interne); stringhe deallocate: 0 (33473 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9896687173846785 1 1 0.9896687173846785 0.9894963321722494 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.999999906828809 0.9999997155317746 0.9999999580606205 0.9999999561832262 0.9999999428623518 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788583566e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9897735158139567


ris (2 : 2): [ 1 0.9897735158139567 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33583 interne); stringhe deallocate: 0 (33503 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9852199642191195 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858512 1072693248 -2112109134 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33603 interne); stringhe deallocate: 0 (33523 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9960898494483766 1 0 0 0.9896687173846785 0.9855861816206261 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33623 interne); stringhe deallocate: 0 (33543 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836399e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838480 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9897735158139567


ris (2 : 2): [ 1 0.9897735158139567 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33643 interne); stringhe deallocate: 0 (33563 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9852242557534527 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79851712 1072693248 -2112109134 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9896198536721461


ris (2 : 2): [ 1 0.9896198536721461 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33663 interne); stringhe deallocate: 0 (33583 interne)


Stringhe allocate: 1 (33663 interne); stringhe deallocate: 0 (33588 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9897735158139567 1 1 0.9897735158139567 0.9896198536721461 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999070222558 0.9999997155317746 0.9999999580606205 0.9999999562737461 0.9999999429971047 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788577052e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9902309659444585


ris (2 : 2): [ 1 0.9902309659444585 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33698 interne); stringhe deallocate: 0 (33618 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9855861751561452 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864800 1072693248 -641271461 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33718 interne); stringhe deallocate: 0 (33638 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9961390218894958 1 0 0 0.9897735158139567 0.9857588755616419 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33738 interne); stringhe deallocate: 0 (33658 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.5359030478589e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838464 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9902309659444585


ris (2 : 2): [ 1 0.9902309659444585 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33758 interne); stringhe deallocate: 0 (33678 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9844694225316637 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79845320 1072693248 -641271461 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9901589322444362


ris (2 : 2): [ 1 0.9901589322444362 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33778 interne); stringhe deallocate: 0 (33698 interne)


Stringhe allocate: 1 (33778 interne); stringhe deallocate: 0 (33703 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9902309659444585 1 1 0.9902309659444585 0.9901589322444362 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999078619686 0.9999997155317746 0.9999999580606205 0.9999999566666848 0.9999999435814895 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553198e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9902943506152987


ris (2 : 2): [ 1 0.9902943506152987 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33813 interne); stringhe deallocate: 0 (33733 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.985758790207889 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864848 1072693248 -953561875 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33833 interne); stringhe deallocate: 0 (33753 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9963536183601255 1 0 0 0.9902309659444585 0.9865125506045617 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33853 interne); stringhe deallocate: 0 (33773 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047867184e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79852696 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9902943506152987


ris (2 : 2): [ 1 0.9902943506152987 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33873 interne); stringhe deallocate: 0 (33793 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9852199642189188 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853528 1072693248 -953561875 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9902336773588937


ris (2 : 2): [ 1 0.9902336773588937 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33893 interne); stringhe deallocate: 0 (33813 interne)


Stringhe allocate: 1 (33893 interne); stringhe deallocate: 0 (33818 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9902943506152987 1 1 0.9902943506152987 0.9902336773588937 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999079777202 0.9999997155317746 0.9999999580606205 0.9999999567208515 0.9999999436620422 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553641e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9898792104233508


ris (2 : 2): [ 1 0.9898792104233508 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33928 interne); stringhe deallocate: 0 (33848 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9865121929173757 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864168 1072693248 712525415 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33948 interne); stringhe deallocate: 0 (33868 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9963833951485056 1 0 0 0.9902943506152987 0.9866170725073993 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33968 interne); stringhe deallocate: 0 (33888 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.53590304786067e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79857936 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9898792104233508


ris (2 : 2): [ 1 0.9898792104233508 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (33988 interne); stringhe deallocate: 0 (33908 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9852199642191124 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863704 1072693248 712525415 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9897445593350923


ris (2 : 2): [ 1 0.9897445593350923 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34008 interne); stringhe deallocate: 0 (33928 interne)


Stringhe allocate: 1 (34008 interne); stringhe deallocate: 0 (33933 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9898792104233508 1 1 0.9898792104233508 0.9897445593350923 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999072169502 0.9999997155317746 0.9999999580606205 0.9999999563648505 0.999999943132827 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788581896e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9902927766918804


ris (2 : 2): [ 1 0.9902927766918804 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34043 interne); stringhe deallocate: 0 (33963 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9866166202554965 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858872 1072693248 2049665469 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34063 interne); stringhe deallocate: 0 (33983 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9961886900578642 1 0 0 0.9898792104233508 0.9859332493929565 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34083 interne); stringhe deallocate: 0 (34003 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836816e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79853816 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9902927766918804


ris (2 : 2): [ 1 0.9902927766918804 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34103 interne); stringhe deallocate: 0 (34023 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9855861751565289 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863776 1072693248 2049665469 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9902311407165129


ris (2 : 2): [ 1 0.9902311407165129 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34123 interne); stringhe deallocate: 0 (34043 interne)


Stringhe allocate: 1 (34123 interne); stringhe deallocate: 0 (34048 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9902927766918804 1 1 0.9902927766918804 0.9902311407165129 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999079748476 0.9999997155317746 0.9999999580606205 0.9999999567195073 0.9999999436593103 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.45528078856921e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9902927766918804


ris (2 : 2): [ 1 0.9902927766918804 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34158 interne); stringhe deallocate: 0 (34078 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9859328357701589 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79862448 1072693248 2049665469 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34178 interne); stringhe deallocate: 0 (34098 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.996382221632023 1 0 0 0.9902927766918804 0.9866133623485358 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34198 interne); stringhe deallocate: 0 (34118 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047837259e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838728 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9902927766918804


ris (2 : 2): [ 1 0.9902927766918804 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34218 interne); stringhe deallocate: 0 (34138 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.985758790207445 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863328 1072693248 2049665469 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9902311407165129


ris (2 : 2): [ 1 0.9902311407165129 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34238 interne); stringhe deallocate: 0 (34158 interne)


Stringhe allocate: 1 (34238 interne); stringhe deallocate: 0 (34163 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9902927766918804 1 1 0.9902927766918804 0.9902311407165129 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999079748476 0.9999997155317746 0.9999999580606205 0.9999999567195073 0.9999999436593103 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552313e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9904950958491789


ris (2 : 2): [ 1 0.9904950958491789 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34273 interne); stringhe deallocate: 0 (34193 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.986613282395389 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864496 1072693248 -982472492 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34293 interne); stringhe deallocate: 0 (34213 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.996382221632023 1 0 0 0.9902927766918804 0.9866133623485358 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34313 interne); stringhe deallocate: 0 (34233 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047865515e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79839008 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9904950958491789


ris (2 : 2): [ 1 0.9904950958491789 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34333 interne); stringhe deallocate: 0 (34253 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9865121929176492 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853304 1072693248 -982472492 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9904682880768269


ris (2 : 2): [ 1 0.9904682880768269 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34353 interne); stringhe deallocate: 0 (34273 interne)


Stringhe allocate: 1 (34353 interne); stringhe deallocate: 0 (34278 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9904950958491789 1 1 0.9904950958491789 0.9904682880768269 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999083433575 0.9999997155317746 0.9999999580606205 0.9999999568919561 0.9999999439141354 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788595556e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9905915114325949


ris (2 : 2): [ 1 0.9905915114325949 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34388 interne); stringhe deallocate: 0 (34308 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9866132823949148 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79846680 1072693248 -131495194 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34408 interne); stringhe deallocate: 0 (34328 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.996476356472117 1 0 0 0.9904950958491789 0.9869446445489438 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34428 interne); stringhe deallocate: 0 (34348 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047852829e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79856880 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9905915114325949


ris (2 : 2): [ 1 0.9905915114325949 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34448 interne); stringhe deallocate: 0 (34368 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9866166202554894 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858512 1072693248 -131495194 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9905803942542127


ris (2 : 2): [ 1 0.9905803942542127 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34468 interne); stringhe deallocate: 0 (34388 interne)


Stringhe allocate: 1 (34468 interne); stringhe deallocate: 0 (34393 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9905915114325949 1 1 0.9905915114325949 0.9905803942542127 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.999999908518452 0.9999997155317746 0.9999999580606205 0.9999999569738951 0.9999999440341968 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788563291e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9910123700420214


ris (2 : 2): [ 1 0.9910123700420214 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34503 interne); stringhe deallocate: 0 (34423 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.986944207383182 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863064 1072693248 -1830264385 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34523 interne); stringhe deallocate: 0 (34443 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9965206682635207 1 0 0 0.9905915114325949 0.9871010625177334 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34543 interne); stringhe deallocate: 0 (34463 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047835931e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79848856 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9910123700420214


ris (2 : 2): [ 1 0.9910123700420214 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34563 interne); stringhe deallocate: 0 (34483 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9859328357705426 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864800 1072693248 -1830264385 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.991069653497776


ris (2 : 2): [ 1 0.991069653497776 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34583 interne); stringhe deallocate: 0 (34503 interne)


Stringhe allocate: 1 (34583 interne); stringhe deallocate: 0 (34508 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9910123700420214 1 1 0.9910123700420214 0.991069653497776 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999092788396 0.9999997155317746 0.9999999580606205 0.9999999573297423 0.9999999445551733 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552806e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9910706845612445


ris (2 : 2): [ 1 0.9910706845612445 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34618 interne); stringhe deallocate: 0 (34538 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9871006099705983 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79851712 1072693248 -565780410 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34638 interne); stringhe deallocate: 0 (34558 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9967140520741875 1 0 0 0.9910123700420214 0.9877837055719635 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34658 interne); stringhe deallocate: 0 (34578 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047879175e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838168 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9910706845612445


ris (2 : 2): [ 1 0.9910706845612445 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34678 interne); stringhe deallocate: 0 (34598 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.986613282394945 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864848 1072693248 -565780410 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9911374910918051


ris (2 : 2): [ 1 0.9911374910918051 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34698 interne); stringhe deallocate: 0 (34618 interne)


Stringhe allocate: 1 (34698 interne); stringhe deallocate: 0 (34623 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9910706845612445 1 1 0.9910706845612445 0.9911374910918051 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999093836999 0.9999997155317746 0.9999999580606205 0.9999999573788162 0.9999999446270249 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552781e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9906887515105127


ris (2 : 2): [ 1 0.9906887515105127 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34733 interne); stringhe deallocate: 0 (34653 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9877834407816195 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79845320 1072693248 -444066226 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34753 interne); stringhe deallocate: 0 (34673 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.996740885454949 1 0 0 0.9910706845612445 0.987878376546754 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34773 interne); stringhe deallocate: 0 (34693 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047846909e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865520 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9906887515105127


ris (2 : 2): [ 1 0.9906887515105127 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34793 interne); stringhe deallocate: 0 (34713 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9866132823951883 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864168 1072693248 -444066226 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9906935752713667


ris (2 : 2): [ 1 0.9906935752713667 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34813 interne); stringhe deallocate: 0 (34733 interne)


Stringhe allocate: 1 (34813 interne); stringhe deallocate: 0 (34738 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9906887515105127 1 1 0.9906887515105127 0.9906935752713667 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999086947051 0.9999997155317746 0.9999999580606205 0.9999999570563769 0.9999999441551486 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788575282e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9910692365362535


ris (2 : 2): [ 1 0.9910692365362535 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34848 interne); stringhe deallocate: 0 (34768 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9878783313756276 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853528 1072693248 -723528142 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34868 interne); stringhe deallocate: 0 (34788 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9965654267799948 1 0 0 0.9906887515105127 0.9872590020513615 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34888 interne); stringhe deallocate: 0 (34808 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836424e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79845112 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9910692365362535


ris (2 : 2): [ 1 0.9910692365362535 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34908 interne); stringhe deallocate: 0 (34828 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9869442073831749 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858872 1072693248 -723528142 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9911351881215833


ris (2 : 2): [ 1 0.9911351881215833 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34928 interne); stringhe deallocate: 0 (34848 interne)


Stringhe allocate: 1 (34928 interne); stringhe deallocate: 0 (34853 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9910692365362535 1 1 0.9910692365362535 0.9911351881215833 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999093810976 0.9999997155317746 0.9999999580606205 0.9999999573775982 0.9999999446245871 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788583566e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9910692365362535


ris (2 : 2): [ 1 0.9910692365362535 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34963 interne); stringhe deallocate: 0 (34883 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9872589199075961 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863704 1072693248 -723528142 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (34983 interne); stringhe deallocate: 0 (34903 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9967398279395014 1 0 0 0.9910692365362535 0.9878750160610847 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35003 interne); stringhe deallocate: 0 (34923 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836399e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838480 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9910692365362535


ris (2 : 2): [ 1 0.9910692365362535 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35023 interne); stringhe deallocate: 0 (34943 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.987100609970982 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79862448 1072693248 -723528142 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9911351881215833


ris (2 : 2): [ 1 0.9911351881215833 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35043 interne); stringhe deallocate: 0 (34963 interne)


Stringhe allocate: 1 (35043 interne); stringhe deallocate: 0 (34968 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9910692365362535 1 1 0.9910692365362535 0.9911351881215833 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999093810976 0.9999997155317746 0.9999999580606205 0.9999999573775982 0.9999999446245871 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788577052e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9912553721465058


ris (2 : 2): [ 1 0.9912553721465058 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35078 interne); stringhe deallocate: 0 (34998 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9878749935155202 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863776 1072693248 799756364 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35098 interne); stringhe deallocate: 0 (35018 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9967398279395014 1 0 0 0.9910692365362535 0.9878750160610847 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35118 interne); stringhe deallocate: 0 (35038 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.5359030478589e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838464 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9912553721465058


ris (2 : 2): [ 1 0.9912553721465058 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35138 interne); stringhe deallocate: 0 (35058 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9877834407811754 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864496 1072693248 799756364 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9913504181033129


ris (2 : 2): [ 1 0.9913504181033129 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35158 interne); stringhe deallocate: 0 (35078 interne)


Stringhe allocate: 1 (35158 interne); stringhe deallocate: 0 (35083 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9912553721465058 1 1 0.9912553721465058 0.9913504181033129 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.999999909715003 0.9999997155317746 0.9999999580606205 0.9999999575338654 0.9999999448519463 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553198e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9913440754294604


ris (2 : 2): [ 1 0.9913440754294604 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35193 interne); stringhe deallocate: 0 (35113 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9878749935159945 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863328 1072693248 903983429 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35213 interne); stringhe deallocate: 0 (35133 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9968246576389602 1 0 0 0.9912553721465058 0.9881750757422732 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35233 interne); stringhe deallocate: 0 (35153 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047867184e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79852696 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9913440754294604


ris (2 : 2): [ 1 0.9913440754294604 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35253 interne); stringhe deallocate: 0 (35173 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9878783313759012 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79846680 1072693248 903983429 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9914521624571279


ris (2 : 2): [ 1 0.9914521624571279 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35273 interne); stringhe deallocate: 0 (35193 interne)


Stringhe allocate: 1 (35273 interne); stringhe deallocate: 0 (35198 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9913440754294604 1 1 0.9913440754294604 0.9914521624571279 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.999999909873693 0.9999997155317746 0.9999999580606205 0.9999999576081331 0.9999999449590992 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553641e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9917312694803923


ris (2 : 2): [ 1 0.9917312694803923 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35308 interne); stringhe deallocate: 0 (35228 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.98817492408803 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853304 1072693248 924506071 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35328 interne); stringhe deallocate: 0 (35248 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9968645892514061 1 0 0 0.9913440754294604 0.988316751708534 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35348 interne); stringhe deallocate: 0 (35268 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.53590304786067e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79857936 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9917312694803923


ris (2 : 2): [ 1 0.9917312694803923 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35368 interne); stringhe deallocate: 0 (35288 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.987258919907589 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863064 1072693248 924506071 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9918962001073985


ris (2 : 2): [ 1 0.9918962001073985 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35388 interne); stringhe deallocate: 0 (35308 interne)


Stringhe allocate: 1 (35388 interne); stringhe deallocate: 0 (35313 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9917312694803923 1 1 0.9917312694803923 0.9918962001073985 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999105631234 0.9999997155317746 0.9999999580606205 0.9999999579307973 0.9999999454243093 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788581896e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9917849194103697


ris (2 : 2): [ 1 0.9917849194103697 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35423 interne); stringhe deallocate: 0 (35343 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9883165447244906 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858512 1072693248 -1171189067 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35443 interne); stringhe deallocate: 0 (35363 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9970388572540511 1 0 0 0.9917312694803923 0.9889350573614496 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35463 interne); stringhe deallocate: 0 (35383 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836816e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79853816 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9917849194103697


ris (2 : 2): [ 1 0.9917849194103697 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35483 interne); stringhe deallocate: 0 (35403 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9878749935159039 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79851712 1072693248 -1171189067 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9919577676532059


ris (2 : 2): [ 1 0.9919577676532059 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35503 interne); stringhe deallocate: 0 (35423 interne)


Stringhe allocate: 1 (35503 interne); stringhe deallocate: 0 (35428 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9917849194103697 1 1 0.9917849194103697 0.9919577676532059 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999106582345 0.9999997155317746 0.9999999580606205 0.9999999579753117 0.9999999454885014 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.45528078856921e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.991433537255448


ris (2 : 2): [ 1 0.991433537255448 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35538 interne); stringhe deallocate: 0 (35458 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9889350025182058 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864800 1072693248 -749375855 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35558 interne); stringhe deallocate: 0 (35478 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9970630381803305 1 0 0 0.9917849194103697 0.9890208058335364 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35578 interne); stringhe deallocate: 0 (35498 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047837259e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838728 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.991433537255448


ris (2 : 2): [ 1 0.991433537255448 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35598 interne); stringhe deallocate: 0 (35518 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9878749935155504 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79845320 1072693248 -749375855 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9915548824053884


ris (2 : 2): [ 1 0.9915548824053884 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35618 interne); stringhe deallocate: 0 (35538 interne)


Stringhe allocate: 1 (35618 interne); stringhe deallocate: 0 (35543 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.991433537255448 1 1 0.991433537255448 0.9915548824053884 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999100334578 0.9999997155317746 0.9999999580606205 0.9999999576829043 0.9999999450670682 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552313e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9917835872131672


ris (2 : 2): [ 1 0.9917835872131672 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35653 interne); stringhe deallocate: 0 (35573 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9890203563699984 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864848 1072693248 -285652829 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35673 interne); stringhe deallocate: 0 (35593 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9969049234305627 1 0 0 0.991433537255448 0.9884598058359511 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35693 interne); stringhe deallocate: 0 (35613 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047865515e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79839008 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9917835872131672


ris (2 : 2): [ 1 0.9917835872131672 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35713 interne); stringhe deallocate: 0 (35633 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9881749240883035 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853528 1072693248 -285652829 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9919556768659125


ris (2 : 2): [ 1 0.9919556768659125 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35733 interne); stringhe deallocate: 0 (35653 interne)


Stringhe allocate: 1 (35733 interne); stringhe deallocate: 0 (35658 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9917835872131672 1 1 0.9917835872131672 0.9919556768659125 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999106558739 0.9999997155317746 0.9999999580606205 0.9999999579742069 0.9999999454863227 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788595556e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9917835872131672


ris (2 : 2): [ 1 0.9917835872131672 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35768 interne); stringhe deallocate: 0 (35688 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9884595958714773 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864168 1072693248 -285652829 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35788 interne); stringhe deallocate: 0 (35708 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9970620851993289 1 0 0 0.9917835872131672 0.9890177620652414 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35808 interne); stringhe deallocate: 0 (35728 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047852829e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79856880 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9917835872131672


ris (2 : 2): [ 1 0.9917835872131672 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35828 interne); stringhe deallocate: 0 (35748 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9883165447244835 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863704 1072693248 -285652829 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9919556768659125


ris (2 : 2): [ 1 0.9919556768659125 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35848 interne); stringhe deallocate: 0 (35768 interne)


Stringhe allocate: 1 (35848 interne); stringhe deallocate: 0 (35773 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9917835872131672 1 1 0.9917835872131672 0.9919556768659125 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999106558739 0.9999997155317746 0.9999999580606205 0.9999999579742069 0.9999999454863227 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788563291e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9919548338013136


ris (2 : 2): [ 1 0.9919548338013136 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35883 interne); stringhe deallocate: 0 (35803 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9890174953470492 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858872 1072693248 273229036 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35903 interne); stringhe deallocate: 0 (35823 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9970620851993289 1 0 0 0.9917835872131672 0.9890177620652414 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35923 interne); stringhe deallocate: 0 (35843 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047835931e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79848856 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9919548338013136


ris (2 : 2): [ 1 0.9919548338013136 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35943 interne); stringhe deallocate: 0 (35863 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9889350025185895 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863776 1072693248 273229036 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9921510123088453


ris (2 : 2): [ 1 0.9921510123088453 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35963 interne); stringhe deallocate: 0 (35883 interne)


Stringhe allocate: 1 (35963 interne); stringhe deallocate: 0 (35888 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9919548338013136 1 1 0.9919548338013136 0.9921510123088453 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999109587936 0.9999997155317746 0.9999999580606205 0.9999999581159826 0.9999999456894937 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552806e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9920364416921559


ris (2 : 2): [ 1 0.9920364416921559 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (35998 interne); stringhe deallocate: 0 (35918 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9890174953465749 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79862448 1072693248 892354996 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36018 interne); stringhe deallocate: 0 (35938 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9971385295627615 1 0 0 0.9919548338013136 0.9892895418716068 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36038 interne); stringhe deallocate: 0 (35958 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047879175e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838168 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9920364416921559


ris (2 : 2): [ 1 0.9920364416921559 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36058 interne); stringhe deallocate: 0 (35978 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9890203563695543 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863328 1072693248 892354996 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9922433512593105


ris (2 : 2): [ 1 0.9922433512593105 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36078 interne); stringhe deallocate: 0 (35998 interne)


Stringhe allocate: 1 (36078 interne); stringhe deallocate: 0 (36003 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9920364416921559 1 1 0.9920364416921559 0.9922433512593105 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999111027889 0.9999997155317746 0.9999999580606205 0.9999999581833778 0.9999999457852729 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552781e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9923926640188926


ris (2 : 2): [ 1 0.9923926640188926 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36113 interne); stringhe deallocate: 0 (36033 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.989289292527225 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864496 1072693248 1117260789 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36133 interne); stringhe deallocate: 0 (36053 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9971745139729238 1 0 0 0.9920364416921559 0.9894178652322343 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36153 interne); stringhe deallocate: 0 (36073 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047846909e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865520 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9923926640188926


ris (2 : 2): [ 1 0.9923926640188926 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36173 interne); stringhe deallocate: 0 (36093 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9884595958717508 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853304 1072693248 1117260789 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9926463413754755


ris (2 : 2): [ 1 0.9926463413754755 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36193 interne); stringhe deallocate: 0 (36113 interne)


Stringhe allocate: 1 (36193 interne); stringhe deallocate: 0 (36118 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9923926640188926 1 1 0.9923926640188926 0.9926463413754755 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999117286134 0.9999997155317746 0.9999999580606205 0.9999999584762932 0.9999999462013038 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788575282e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9924420224809863


ris (2 : 2): [ 1 0.9924420224809863 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36228 interne); stringhe deallocate: 0 (36148 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9894175617223073 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79846680 1072693248 -977835009 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36248 interne); stringhe deallocate: 0 (36168 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9973315557476437 1 0 0 0.9923926640188926 0.9899778971231191 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36268 interne); stringhe deallocate: 0 (36188 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836424e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79845112 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9924420224809863


ris (2 : 2): [ 1 0.9924420224809863 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36288 interne); stringhe deallocate: 0 (36208 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9890174953470421 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858512 1072693248 -977835009 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9927022176039488


ris (2 : 2): [ 1 0.9927022176039488 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36308 interne); stringhe deallocate: 0 (36228 interne)


Stringhe allocate: 1 (36308 interne); stringhe deallocate: 0 (36233 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9924420224809863 1 1 0.9924420224809863 0.9927022176039488 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999118149798 0.9999997155317746 0.9999999580606205 0.9999999585167176 0.9999999462587357 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788583566e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9921187474500329


ris (2 : 2): [ 1 0.9921187474500329 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36343 interne); stringhe deallocate: 0 (36263 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9899778453836703 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863064 1072693248 -792626201 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36363 interne); stringhe deallocate: 0 (36283 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9973533464121338 1 0 0 0.9924420224809863 0.9900555640160826 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36383 interne); stringhe deallocate: 0 (36303 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836399e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838480 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9921187474500329


ris (2 : 2): [ 1 0.9921187474500329 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36403 interne); stringhe deallocate: 0 (36323 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9890174953469586 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864800 1072693248 -792626201 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9923365757093242


ris (2 : 2): [ 1 0.9923365757093242 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36423 interne); stringhe deallocate: 0 (36343 interne)


Stringhe allocate: 1 (36423 interne); stringhe deallocate: 0 (36348 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9921187474500329 1 1 0.9921187474500329 0.9923365757093242 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999112477795 0.9999997155317746 0.9999999580606205 0.9999999582512394 0.9999999458817992 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788577052e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9924407968464859


ris (2 : 2): [ 1 0.9924407968464859 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36458 interne); stringhe deallocate: 0 (36378 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9900555698399831 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79851712 1072693248 867532720 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36478 interne); stringhe deallocate: 0 (36398 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9972108611564499 1 0 0 0.9921187474500329 0.9895474368657741 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36498 interne); stringhe deallocate: 0 (36418 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.5359030478589e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838464 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9924407968464859


ris (2 : 2): [ 1 0.9924407968464859 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36518 interne); stringhe deallocate: 0 (36438 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9892892925267809 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864848 1072693248 867532720 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9927003194828956


ris (2 : 2): [ 1 0.9927003194828956 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36538 interne); stringhe deallocate: 0 (36458 interne)


Stringhe allocate: 1 (36538 interne); stringhe deallocate: 0 (36463 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9924407968464859 1 1 0.9924407968464859 0.9927003194828956 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999118128363 0.9999997155317746 0.9999999580606205 0.9999999585157142 0.9999999462567857 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553198e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9924407968464859


ris (2 : 2): [ 1 0.9924407968464859 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36573 interne); stringhe deallocate: 0 (36493 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9895472614298129 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79845320 1072693248 867532720 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36593 interne); stringhe deallocate: 0 (36513 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9973524876324486 1 0 0 0.9924407968464859 0.9900528071153442 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36613 interne); stringhe deallocate: 0 (36533 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047867184e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79852696 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9924407968464859


ris (2 : 2): [ 1 0.9924407968464859 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36633 interne); stringhe deallocate: 0 (36553 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9894175617225809 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864168 1072693248 867532720 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9927003194828956


ris (2 : 2): [ 1 0.9927003194828956 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36653 interne); stringhe deallocate: 0 (36573 interne)


Stringhe allocate: 1 (36653 interne); stringhe deallocate: 0 (36578 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9924407968464859 1 1 0.9924407968464859 0.9927003194828956 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999118128363 0.9999997155317746 0.9999999580606205 0.9999999585157142 0.9999999462567857 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553641e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9925983453881755


ris (2 : 2): [ 1 0.9925983453881755 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36688 interne); stringhe deallocate: 0 (36608 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9900527088170339 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853528 1072693248 -1695534964 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36708 interne); stringhe deallocate: 0 (36628 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9973524876324486 1 0 0 0.9924407968464859 0.9900528071153442 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36728 interne); stringhe deallocate: 0 (36648 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.53590304786067e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79857936 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9925983453881755


ris (2 : 2): [ 1 0.9925983453881755 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36748 interne); stringhe deallocate: 0 (36668 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9899778453836632 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858872 1072693248 -1695534964 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9928775968117783


ris (2 : 2): [ 1 0.9928775968117783 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36768 interne); stringhe deallocate: 0 (36688 interne)


Stringhe allocate: 1 (36768 interne); stringhe deallocate: 0 (36693 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9925983453881755 1 1 0.9925983453881755 0.9928775968117783 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999120879537 0.9999997155317746 0.9999999580606205 0.9999999586444861 0.9999999464385995 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788581896e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9926734254486412


ris (2 : 2): [ 1 0.9926734254486412 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36803 interne); stringhe deallocate: 0 (36723 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9900527088175082 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863704 1072693248 255664237 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36823 interne); stringhe deallocate: 0 (36743 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.997421375542639 1 0 0 0.9925983453881755 0.9902989723544173 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36843 interne); stringhe deallocate: 0 (36763 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836816e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79853816 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9926734254486412


ris (2 : 2): [ 1 0.9926734254486412 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36863 interne); stringhe deallocate: 0 (36783 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9900555698403668 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79862448 1072693248 255664237 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9929613986312772


ris (2 : 2): [ 1 0.9929613986312772 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36883 interne); stringhe deallocate: 0 (36803 interne)


Stringhe allocate: 1 (36883 interne); stringhe deallocate: 0 (36808 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9926734254486412 1 1 0.9926734254486412 0.9929613986312772 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999122187593 0.9999997155317746 0.9999999580606205 0.9999999587057118 0.9999999465243316 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.45528078856921e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9930011534851654


ris (2 : 2): [ 1 0.9930011534851654 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36918 interne); stringhe deallocate: 0 (36838 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9902987567906667 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863776 1072693248 1524858223 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36938 interne); stringhe deallocate: 0 (36858 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9974538029278509 1 0 0 0.9926734254486412 0.9904152015591281 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36958 interne); stringhe deallocate: 0 (36878 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047837259e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838728 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9930011534851654


ris (2 : 2): [ 1 0.9930011534851654 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36978 interne); stringhe deallocate: 0 (36898 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9895472614293688 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864496 1072693248 1524858223 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9933271305729333


ris (2 : 2): [ 1 0.9933271305729333 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (36998 interne); stringhe deallocate: 0 (36918 interne)


Stringhe allocate: 1 (36998 interne); stringhe deallocate: 0 (36923 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9930011534851654 1 1 0.9930011534851654 0.9933271305729333 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999127874566 0.9999997155317746 0.9999999580606205 0.9999999589719054 0.9999999468968841 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552313e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.99304656375469


ris (2 : 2): [ 1 0.99304656375469 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37033 interne); stringhe deallocate: 0 (36953 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9904151050577426 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863328 1072693248 -1772656373 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37053 interne); stringhe deallocate: 0 (36973 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9975953212715086 1 0 0 0.9930011534851654 0.9909224518444419 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37073 interne); stringhe deallocate: 0 (36993 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047865515e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79839008 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.99304656375469


ris (2 : 2): [ 1 0.99304656375469 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37093 interne); stringhe deallocate: 0 (37013 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9900527088173075 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79846680 1072693248 -1772656373 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9933778408775216


ris (2 : 2): [ 1 0.9933778408775216 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37113 interne); stringhe deallocate: 0 (37033 interne)


Stringhe allocate: 1 (37113 interne); stringhe deallocate: 0 (37038 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.99304656375469 1 1 0.99304656375469 0.9933778408775216 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999128659647 0.9999997155317746 0.9999999580606205 0.9999999590086539 0.9999999469483348 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788595556e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9927491475536278


ris (2 : 2): [ 1 0.9927491475536278 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37148 interne); stringhe deallocate: 0 (37068 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9909224597935964 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853304 1072693248 -600048225 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37168 interne); stringhe deallocate: 0 (37088 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9976149579493987 1 0 0 0.99304656375469 0.9909927988269203 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37188 interne); stringhe deallocate: 0 (37108 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047852829e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79856880 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9927491475536278


ris (2 : 2): [ 1 0.9927491475536278 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37208 interne); stringhe deallocate: 0 (37128 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9900527088175011 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863064 1072693248 -600048225 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.993046004163534


ris (2 : 2): [ 1 0.993046004163534 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37228 interne); stringhe deallocate: 0 (37148 interne)


Stringhe allocate: 1 (37228 interne); stringhe deallocate: 0 (37153 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9927491475536278 1 1 0.9927491475536278 0.993046004163534 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999123504864 0.9999997155317746 0.9999999580606205 0.9999999587673693 0.9999999466107467 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788563291e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9930454361589214


ris (2 : 2): [ 1 0.9930454361589214 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37263 interne); stringhe deallocate: 0 (37183 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9909925548563265 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858512 1072693248 955765748 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37283 interne); stringhe deallocate: 0 (37203 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9974865572266148 1 0 0 0.9927491475536278 0.9905325613901488 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37303 interne); stringhe deallocate: 0 (37223 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047835931e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79848856 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9930454361589214


ris (2 : 2): [ 1 0.9930454361589214 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37323 interne); stringhe deallocate: 0 (37243 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9902987567910504 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79851712 1072693248 955765748 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.993376117697872


ris (2 : 2): [ 1 0.993376117697872 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37343 interne); stringhe deallocate: 0 (37263 interne)


Stringhe allocate: 1 (37343 interne); stringhe deallocate: 0 (37268 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9930454361589214 1 1 0.9930454361589214 0.993376117697872 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.999999912864016 0.9999997155317746 0.9999999580606205 0.9999999590077418 0.9999999469465873 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552806e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9930454361589214


ris (2 : 2): [ 1 0.9930454361589214 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37378 interne); stringhe deallocate: 0 (37298 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9905324069981862 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864800 1072693248 955765748 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37398 interne); stringhe deallocate: 0 (37318 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9976141840593186 1 0 0 0.9930454361589214 0.9909903017571906 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37418 interne); stringhe deallocate: 0 (37338 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047879175e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838168 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9930454361589214


ris (2 : 2): [ 1 0.9930454361589214 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37438 interne); stringhe deallocate: 0 (37358 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9904151050572985 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79845320 1072693248 955765748 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.993376117697872


ris (2 : 2): [ 1 0.993376117697872 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37458 interne); stringhe deallocate: 0 (37378 interne)


Stringhe allocate: 1 (37458 interne); stringhe deallocate: 0 (37383 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9930454361589214 1 1 0.9930454361589214 0.993376117697872 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.999999912864016 0.9999997155317746 0.9999999580606205 0.9999999590077418 0.9999999469465873 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552781e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9931903823634397


ris (2 : 2): [ 1 0.9931903823634397 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37493 interne); stringhe deallocate: 0 (37413 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9909901706705355 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864848 1072693248 845053079 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37513 interne); stringhe deallocate: 0 (37433 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9976141840593186 1 0 0 0.9930454361589214 0.9909903017571906 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37533 interne); stringhe deallocate: 0 (37453 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047846909e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865520 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9931903823634397


ris (2 : 2): [ 1 0.9931903823634397 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37553 interne); stringhe deallocate: 0 (37473 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.99092245979387 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853528 1072693248 845053079 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9935370040731818


ris (2 : 2): [ 1 0.9935370040731818 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37573 interne); stringhe deallocate: 0 (37493 interne)


Stringhe allocate: 1 (37573 interne); stringhe deallocate: 0 (37498 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9931903823634397 1 1 0.9931903823634397 0.9935370040731818 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999131141409 0.9999997155317746 0.9999999580606205 0.9999999591248224 0.9999999471094985 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788575282e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9932594567558956


ris (2 : 2): [ 1 0.9932594567558956 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37608 interne); stringhe deallocate: 0 (37528 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9909901706700612 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864168 1072693248 241611409 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37628 interne); stringhe deallocate: 0 (37548 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9976762624647567 1 0 0 0.9931903823634397 0.9912132665379385 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37648 interne); stringhe deallocate: 0 (37568 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836424e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79845112 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9932594567558956


ris (2 : 2): [ 1 0.9932594567558956 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37668 interne); stringhe deallocate: 0 (37588 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9909925548563194 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863704 1072693248 241611409 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9936130569970294


ris (2 : 2): [ 1 0.9936130569970294 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37688 interne); stringhe deallocate: 0 (37608 interne)


Stringhe allocate: 1 (37688 interne); stringhe deallocate: 0 (37613 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9932594567558956 1 1 0.9932594567558956 0.9936130569970294 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999132330857 0.9999997155317746 0.9999999580606205 0.9999999591804998 0.9999999471863342 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788583566e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9935609697657842


ris (2 : 2): [ 1 0.9935609697657842 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37723 interne); stringhe deallocate: 0 (37643 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9912128536234164 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858872 1072693248 1610038301 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37743 interne); stringhe deallocate: 0 (37663 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9977054844336821 1 0 0 0.9932594567558956 0.9913185414307115 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37763 interne); stringhe deallocate: 0 (37683 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836399e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838480 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9935609697657842


ris (2 : 2): [ 1 0.9935609697657842 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37783 interne); stringhe deallocate: 0 (37703 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9905324069985699 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863776 1072693248 1610038301 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9939449708216672


ris (2 : 2): [ 1 0.9939449708216672 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37803 interne); stringhe deallocate: 0 (37723 interne)


Stringhe allocate: 1 (37803 interne); stringhe deallocate: 0 (37728 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9935609697657842 1 1 0.9935609697657842 0.9939449708216672 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999137503814 0.9999997155317746 0.9999999580606205 0.9999999594226472 0.9999999475203603 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788577052e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9936027476593983


ris (2 : 2): [ 1 0.9936027476593983 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37838 interne); stringhe deallocate: 0 (37758 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.991318234634905 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79862448 1072693248 -45271522 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37858 interne); stringhe deallocate: 0 (37778 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9978330138232426 1 0 0 0.9935609697657842 0.9917779846449099 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37878 interne); stringhe deallocate: 0 (37798 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.5359030478589e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838464 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9936027476593983


ris (2 : 2): [ 1 0.9936027476593983 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37898 interne); stringhe deallocate: 0 (37818 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9909901706700914 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863328 1072693248 -45271522 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.99399099216604


ris (2 : 2): [ 1 0.99399099216604 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37918 interne); stringhe deallocate: 0 (37838 interne)


Stringhe allocate: 1 (37918 interne); stringhe deallocate: 0 (37843 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9936027476593983 1 1 0.9936027476593983 0.99399099216604 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999138218148 0.9999997155317746 0.9999999580606205 0.999999959456086 0.9999999475665075 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553198e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9933291218356114


ris (2 : 2): [ 1 0.9933291218356114 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37953 interne); stringhe deallocate: 0 (37873 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9917779056558871 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864496 1072693248 663640291 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37973 interne); stringhe deallocate: 0 (37893 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9978507094341379 1 0 0 0.9936027476593983 0.9918417016001779 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (37993 interne); stringhe deallocate: 0 (37913 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047867184e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79852696 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9933291218356114


ris (2 : 2): [ 1 0.9933291218356114 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38013 interne); stringhe deallocate: 0 (37933 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9909901706703348 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853304 1072693248 663640291 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9936898393900331


ris (2 : 2): [ 1 0.9936898393900331 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38033 interne); stringhe deallocate: 0 (37953 interne)


Stringhe allocate: 1 (38033 interne); stringhe deallocate: 0 (37958 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9933291218356114 1 1 0.9933291218356114 0.9936898393900331 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999133528827 0.9999997155317746 0.9999999580606205 0.9999999592365765 0.9999999472637937 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553641e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.993601710260225


ris (2 : 2): [ 1 0.993601710260225 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38068 interne); stringhe deallocate: 0 (37988 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9918413249974538 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79846680 1072693248 -799397990 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38088 interne); stringhe deallocate: 0 (38008 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9977350010010572 1 0 0 0.9933291218356114 0.9914248403910903 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38108 interne); stringhe deallocate: 0 (38028 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.53590304786067e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79857936 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.993601710260225


ris (2 : 2): [ 1 0.993601710260225 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38128 interne); stringhe deallocate: 0 (38048 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9912128536234093 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858512 1072693248 -799397990 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9939894278306307


ris (2 : 2): [ 1 0.9939894278306307 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38148 interne); stringhe deallocate: 0 (38068 interne)


Stringhe allocate: 1 (38148 interne); stringhe deallocate: 0 (38073 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.993601710260225 1 1 0.993601710260225 0.9939894278306307 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999138200417 0.9999997155317746 0.9999999580606205 0.9999999594552559 0.9999999475649395 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788581896e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.993601710260225


ris (2 : 2): [ 1 0.993601710260225 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38183 interne); stringhe deallocate: 0 (38103 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9914245693216586 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863064 1072693248 -799397990 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38203 interne); stringhe deallocate: 0 (38123 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9978500120424044 1 0 0 0.993601710260225 0.9918394398730351 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38223 interne); stringhe deallocate: 0 (38143 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836816e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79853816 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.993601710260225


ris (2 : 2): [ 1 0.993601710260225 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38243 interne); stringhe deallocate: 0 (38163 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9913182346352887 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864800 1072693248 -799397990 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9939894278306307


ris (2 : 2): [ 1 0.9939894278306307 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38263 interne); stringhe deallocate: 0 (38183 interne)


Stringhe allocate: 1 (38263 interne); stringhe deallocate: 0 (38188 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.993601710260225 1 1 0.993601710260225 0.9939894278306307 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999138200417 0.9999997155317746 0.9999999580606205 0.9999999594552559 0.9999999475649395 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.45528078856921e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9937350621908678


ris (2 : 2): [ 1 0.9937350621908678 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38298 interne); stringhe deallocate: 0 (38218 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.991839417648821 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79851712 1072693248 2032136730 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38318 interne); stringhe deallocate: 0 (38238 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9978500120424044 1 0 0 0.993601710260225 0.9918394398730351 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38338 interne); stringhe deallocate: 0 (38258 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047837259e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838728 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9937350621908678


ris (2 : 2): [ 1 0.9937350621908678 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38358 interne); stringhe deallocate: 0 (38278 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.991777905655443 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864848 1072693248 2032136730 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9941354367242841


ris (2 : 2): [ 1 0.9941354367242841 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38378 interne); stringhe deallocate: 0 (38298 interne)


Stringhe allocate: 1 (38378 interne); stringhe deallocate: 0 (38303 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9937350621908678 1 1 0.9937350621908678 0.9941354367242841 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999140476603 0.9999997155317746 0.9999999580606205 0.9999999595618075 0.9999999477110835 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552313e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9937986113098156


ris (2 : 2): [ 1 0.9937986113098156 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38413 interne); stringhe deallocate: 0 (38333 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9918394176492953 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79845320 1072693248 -1093904108 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38433 interne); stringhe deallocate: 0 (38353 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9979059540564094 1 0 0 0.9937350621908678 0.9920413907806934 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38453 interne); stringhe deallocate: 0 (38373 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047865515e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79839008 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9937986113098156


ris (2 : 2): [ 1 0.9937986113098156 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38473 interne); stringhe deallocate: 0 (38393 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9918413249977274 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864168 1072693248 -1093904108 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9942044563165453


ris (2 : 2): [ 1 0.9942044563165453 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38493 interne); stringhe deallocate: 0 (38413 interne)


Stringhe allocate: 1 (38493 interne); stringhe deallocate: 0 (38418 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9937986113098156 1 1 0.9937986113098156 0.9942044563165453 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999141559208 0.9999997155317746 0.9999999580606205 0.9999999596124864 0.999999947780025 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788595556e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9940760062379284


ris (2 : 2): [ 1 0.9940760062379284 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38528 interne); stringhe deallocate: 0 (38448 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9920411197667409 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853528 1072693248 2081486682 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38548 interne); stringhe deallocate: 0 (38468 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9979322874615182 1 0 0 0.9937986113098156 0.9921367437780635 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38568 interne); stringhe deallocate: 0 (38488 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047852829e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79856880 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9940760062379284


ris (2 : 2): [ 1 0.9940760062379284 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38588 interne); stringhe deallocate: 0 (38508 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9914245693216515 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858872 1072693248 2081486682 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9945056749258648


ris (2 : 2): [ 1 0.9945056749258648 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38608 interne); stringhe deallocate: 0 (38528 interne)


Stringhe allocate: 1 (38608 interne); stringhe deallocate: 0 (38533 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9940760062379284 1 1 0.9940760062379284 0.9945056749258648 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999146268888 0.9999997155317746 0.9999999580606205 0.9999999598329592 0.9999999480798408 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788563291e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9941144423100569


ris (2 : 2): [ 1 0.9941144423100569 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38643 interne); stringhe deallocate: 0 (38563 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9921364871988558 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863704 1072693248 390495937 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38663 interne); stringhe deallocate: 0 (38583 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9980472106923052 1 0 0 0.9940760062379284 0.99255288561817 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38683 interne); stringhe deallocate: 0 (38603 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047835931e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79848856 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9941144423100569


ris (2 : 2): [ 1 0.9941144423100569 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38703 interne); stringhe deallocate: 0 (38623 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9918394176492047 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79862448 1072693248 390495937 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9945474403008259


ris (2 : 2): [ 1 0.9945474403008259 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38723 interne); stringhe deallocate: 0 (38643 interne)


Stringhe allocate: 1 (38723 interne); stringhe deallocate: 0 (38648 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9941144423100569 1 1 0.9941144423100569 0.9945474403008259 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999146919424 0.9999997155317746 0.9999999580606205 0.9999999598634131 0.9999999481212755 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552806e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9938627038668395


ris (2 : 2): [ 1 0.9938627038668395 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38758 interne); stringhe deallocate: 0 (38678 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9925527660374929 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863776 1072693248 674910088 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38778 interne); stringhe deallocate: 0 (38698 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9980631571089034 1 0 0 0.9941144423100569 0.9926105974097292 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38798 interne); stringhe deallocate: 0 (38718 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047879175e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838168 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9938627038668395


ris (2 : 2): [ 1 0.9938627038668395 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38818 interne); stringhe deallocate: 0 (38738 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9918394176488512 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864496 1072693248 674910088 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9942741379829342


ris (2 : 2): [ 1 0.9942741379829342 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38838 interne); stringhe deallocate: 0 (38758 interne)


Stringhe allocate: 1 (38838 interne); stringhe deallocate: 0 (38763 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9938627038668395 1 1 0.9938627038668395 0.9942741379829342 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.999999914264969 0.9999997155317746 0.9999999580606205 0.9999999596635343 0.9999999478495357 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552781e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9941134878926367


ris (2 : 2): [ 1 0.9941134878926367 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38873 interne); stringhe deallocate: 0 (38793 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9926104633341097 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863328 1072693248 383802653 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38893 interne); stringhe deallocate: 0 (38813 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9979588863442923 1 0 0 0.9938627038668395 0.9922330243272265 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38913 interne); stringhe deallocate: 0 (38833 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047846909e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865520 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9941134878926367


ris (2 : 2): [ 1 0.9941134878926367 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38933 interne); stringhe deallocate: 0 (38853 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9920411197670145 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79846680 1072693248 383802653 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9945460201909984


ris (2 : 2): [ 1 0.9945460201909984 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38953 interne); stringhe deallocate: 0 (38873 interne)


Stringhe allocate: 1 (38953 interne); stringhe deallocate: 0 (38878 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9941134878926367 1 1 0.9941134878926367 0.9945460201909984 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999146903276 0.9999997155317746 0.9999999580606205 0.9999999598626572 0.9999999481198671 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788575282e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9941134878926367


ris (2 : 2): [ 1 0.9941134878926367 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (38988 interne); stringhe deallocate: 0 (38908 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9922328083043386 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853304 1072693248 383802653 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39008 interne); stringhe deallocate: 0 (38928 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9980625286537255 1 0 0 0.9941134878926367 0.9926085488447238 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39028 interne); stringhe deallocate: 0 (38948 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836424e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79845112 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9941134878926367


ris (2 : 2): [ 1 0.9941134878926367 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39048 interne); stringhe deallocate: 0 (38968 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9921364871988487 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863064 1072693248 383802653 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9945460201909984


ris (2 : 2): [ 1 0.9945460201909984 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39068 interne); stringhe deallocate: 0 (38988 interne)


Stringhe allocate: 1 (39068 interne); stringhe deallocate: 0 (38993 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9941134878926367 1 1 0.9941134878926367 0.9945460201909984 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999146903276 0.9999997155317746 0.9999999580606205 0.9999999598626572 0.9999999481198671 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788583566e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9942361729775291


ris (2 : 2): [ 1 0.9942361729775291 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39103 interne); stringhe deallocate: 0 (39023 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9926085559854769 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858512 1072693248 1626212792 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39123 interne); stringhe deallocate: 0 (39043 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9980625286537255 1 0 0 0.9941134878926367 0.9926085488447238 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39143 interne); stringhe deallocate: 0 (39063 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836399e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838480 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9942361729775291


ris (2 : 2): [ 1 0.9942361729775291 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39163 interne); stringhe deallocate: 0 (39083 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9925527660378766 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79851712 1072693248 1626212792 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9946785255313569


ris (2 : 2): [ 1 0.9946785255313569 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39183 interne); stringhe deallocate: 0 (39103 interne)


Stringhe allocate: 1 (39183 interne); stringhe deallocate: 0 (39108 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9942361729775291 1 1 0.9942361729775291 0.9946785255313569 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999148976463 0.9999997155317746 0.9999999580606205 0.9999999599597109 0.9999999482511084 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788577052e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.994294638790625


ris (2 : 2): [ 1 0.994294638790625 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39218 interne); stringhe deallocate: 0 (39138 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9926085559850026 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864800 1072693248 -41536471 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39238 interne); stringhe deallocate: 0 (39158 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9981129408529803 1 0 0 0.9942361729775291 0.9927914663843372 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39258 interne); stringhe deallocate: 0 (39178 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.5359030478589e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838464 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.994294638790625


ris (2 : 2): [ 1 0.994294638790625 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39278 interne); stringhe deallocate: 0 (39198 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9926104633336657 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79845320 1072693248 -41536471 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9947411613739974


ris (2 : 2): [ 1 0.9947411613739974 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39298 interne); stringhe deallocate: 0 (39218 interne)


Stringhe allocate: 1 (39298 interne); stringhe deallocate: 0 (39223 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.994294638790625 1 1 0.994294638790625 0.9947411613739974 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.999999914996267 0.9999997155317746 0.9999999580606205 0.9999999600058795 0.9999999483130311 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553198e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9945498448468118


ris (2 : 2): [ 1 0.9945498448468118 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39333 interne); stringhe deallocate: 0 (39253 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9927911846170687 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864848 1072693248 842759260 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39353 interne); stringhe deallocate: 0 (39273 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9981366712261643 1 0 0 0.994294638790625 0.9928778326001617 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39373 interne); stringhe deallocate: 0 (39293 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047867184e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79852696 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9945498448468118


ris (2 : 2): [ 1 0.9945498448468118 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39393 interne); stringhe deallocate: 0 (39313 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9922328083046121 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853528 1072693248 842759260 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9950145197070749


ris (2 : 2): [ 1 0.9950145197070749 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39413 interne); stringhe deallocate: 0 (39333 interne)


Stringhe allocate: 1 (39413 interne); stringhe deallocate: 0 (39338 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9945498448468118 1 1 0.9945498448468118 0.9950145197070749 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999154254149 0.9999997155317746 0.9999999580606205 0.9999999602067848 0.9999999485824108 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553641e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9945852064103773


ris (2 : 2): [ 1 0.9945852064103773 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39448 interne); stringhe deallocate: 0 (39368 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9928774921422292 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864168 1072693248 1523828350 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39468 interne); stringhe deallocate: 0 (39388 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9982402344054445 1 0 0 0.9945498448468118 0.9932547541125194 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39488 interne); stringhe deallocate: 0 (39408 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.53590304786067e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79857936 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9945852064103773


ris (2 : 2): [ 1 0.9945852064103773 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39508 interne); stringhe deallocate: 0 (39428 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9926085559854698 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863704 1072693248 1523828350 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9950524221780468


ris (2 : 2): [ 1 0.9950524221780468 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39528 interne); stringhe deallocate: 0 (39448 interne)


Stringhe allocate: 1 (39528 interne); stringhe deallocate: 0 (39453 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9945852064103773 1 1 0.9945852064103773 0.9950524221780468 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999154847068 0.9999997155317746 0.9999999580606205 0.9999999602345429 0.9999999486196507 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788581896e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9943536045720842


ris (2 : 2): [ 1 0.9943536045720842 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39563 interne); stringhe deallocate: 0 (39483 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9932546703348422 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858872 1072693248 -1500938360 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39583 interne); stringhe deallocate: 0 (39503 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9982546045340018 1 0 0 0.9945852064103773 0.9933070267120486 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39603 interne); stringhe deallocate: 0 (39523 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836816e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79853816 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9943536045720842


ris (2 : 2): [ 1 0.9943536045720842 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39623 interne); stringhe deallocate: 0 (39543 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9926085559853863 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863776 1072693248 -1500938360 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9948043981135479


ris (2 : 2): [ 1 0.9948043981135479 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39643 interne); stringhe deallocate: 0 (39563 interne)


Stringhe allocate: 1 (39643 interne); stringhe deallocate: 0 (39568 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9943536045720842 1 1 0.9943536045720842 0.9948043981135479 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999150956154 0.9999997155317746 0.9999999580606205 0.999999960052389 0.9999999483754727 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.45528078856921e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9945843283369841


ris (2 : 2): [ 1 0.9945843283369841 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39678 interne); stringhe deallocate: 0 (39598 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.993306645584612 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79862448 1072693248 -2090186367 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39698 interne); stringhe deallocate: 0 (39618 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9981606408347925 1 0 0 0.9943536045720842 0.9929650389483404 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39718 interne); stringhe deallocate: 0 (39638 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047837259e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838728 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9945843283369841


ris (2 : 2): [ 1 0.9945843283369841 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39738 interne); stringhe deallocate: 0 (39658 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9927911846166246 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863328 1072693248 -2090186367 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9950511330181185


ris (2 : 2): [ 1 0.9950511330181185 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39758 interne); stringhe deallocate: 0 (39678 interne)


Stringhe allocate: 1 (39758 interne); stringhe deallocate: 0 (39683 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9945843283369841 1 1 0.9945843283369841 0.9950511330181185 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.999999915483235 0.9999997155317746 0.9999999580606205 0.9999999602338539 0.9999999486183845 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552313e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9945843283369841


ris (2 : 2): [ 1 0.9945843283369841 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39793 interne); stringhe deallocate: 0 (39713 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9929647533426547 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864496 1072693248 -2090186367 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39813 interne); stringhe deallocate: 0 (39733 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9982540382010638 1 0 0 0.9945843283369841 0.9933051712191824 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39833 interne); stringhe deallocate: 0 (39753 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047865515e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79839008 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9945843283369841


ris (2 : 2): [ 1 0.9945843283369841 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39853 interne); stringhe deallocate: 0 (39773 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9928774921425028 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853304 1072693248 -2090186367 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9950511330181185


ris (2 : 2): [ 1 0.9950511330181185 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39873 interne); stringhe deallocate: 0 (39793 interne)


Stringhe allocate: 1 (39873 interne); stringhe deallocate: 0 (39798 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9945843283369841 1 1 0.9945843283369841 0.9950511330181185 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.999999915483235 0.9999997155317746 0.9999999580606205 0.9999999602338539 0.9999999486183845 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788595556e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9946971998191029


ris (2 : 2): [ 1 0.9946971998191029 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39908 interne); stringhe deallocate: 0 (39828 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9933047382359792 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79846680 1072693248 953461399 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39928 interne); stringhe deallocate: 0 (39848 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9982540382010638 1 0 0 0.9945843283369841 0.9933051712191824 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39948 interne); stringhe deallocate: 0 (39868 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047852829e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79856880 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9946971998191029


ris (2 : 2): [ 1 0.9946971998191029 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39968 interne); stringhe deallocate: 0 (39888 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9932546703348351 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858512 1072693248 953461399 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9951713820354474


ris (2 : 2): [ 1 0.9951713820354474 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (39988 interne); stringhe deallocate: 0 (39908 interne)


Stringhe allocate: 1 (39988 interne); stringhe deallocate: 0 (39913 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9946971998191029 1 1 0.9946971998191029 0.9951713820354474 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999156722157 0.9999997155317746 0.9999999580606205 0.9999999603223269 0.9999999487363556 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788563291e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9947509889409281


ris (2 : 2): [ 1 0.9947509889409281 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40023 interne); stringhe deallocate: 0 (39943 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9933047382364535 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863064 1072693248 111494968 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40043 interne); stringhe deallocate: 0 (39963 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9982994672026982 1 0 0 0.9946971998191029 0.9934708492381457 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40063 interne); stringhe deallocate: 0 (39983 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047835931e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79848856 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9947509889409281


ris (2 : 2): [ 1 0.9947509889409281 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40083 interne); stringhe deallocate: 0 (40003 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9933066455849957 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864800 1072693248 111494968 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9952282238028568


ris (2 : 2): [ 1 0.9952282238028568 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40103 interne); stringhe deallocate: 0 (40023 interne)


Stringhe allocate: 1 (40103 interne); stringhe deallocate: 0 (40028 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9947509889409281 1 1 0.9947509889409281 0.9952282238028568 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999157621262 0.9999997155317746 0.9999999580606205 0.9999999603644196 0.9999999487920264 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552806e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9949857810171837


ris (2 : 2): [ 1 0.9949857810171837 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40138 interne); stringhe deallocate: 0 (40058 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9934706775670339 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79851712 1072693248 1806599605 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40158 interne); stringhe deallocate: 0 (40078 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9983208518512809 1 0 0 0.9947509889409281 0.9935490756541378 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40178 interne); stringhe deallocate: 0 (40098 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047879175e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838168 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9949857810171837


ris (2 : 2): [ 1 0.9949857810171837 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40198 interne); stringhe deallocate: 0 (40118 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9929647533422106 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864848 1072693248 1806599605 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.995476295346923


ris (2 : 2): [ 1 0.995476295346923 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40218 interne); stringhe deallocate: 0 (40138 interne)


Stringhe allocate: 1 (40218 interne); stringhe deallocate: 0 (40143 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9949857810171837 1 1 0.9949857810171837 0.995476295346923 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999161534683 0.9999997155317746 0.9999999580606205 0.9999999605476346 0.9999999490342804 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552781e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9950183140026986


ris (2 : 2): [ 1 0.9950183140026986 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40253 interne); stringhe deallocate: 0 (40173 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9935488788614535 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79845320 1072693248 -1515060935 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40273 interne); stringhe deallocate: 0 (40193 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9984141779097476 1 0 0 0.9949857810171837 0.9938904732566706 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40293 interne); stringhe deallocate: 0 (40213 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047846909e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865520 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9950183140026986


ris (2 : 2): [ 1 0.9950183140026986 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40313 interne); stringhe deallocate: 0 (40233 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9933047382362528 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864168 1072693248 -1515060935 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.995510691729538


ris (2 : 2): [ 1 0.995510691729538 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40333 interne); stringhe deallocate: 0 (40253 interne)


Stringhe allocate: 1 (40333 interne); stringhe deallocate: 0 (40258 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9950183140026986 1 1 0.9950183140026986 0.995510691729538 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999162075495 0.9999997155317746 0.9999999580606205 0.9999999605729542 0.9999999490677796 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788575282e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9948052380385543


ris (2 : 2): [ 1 0.9948052380385543 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40368 interne); stringhe deallocate: 0 (40288 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9938902942662526 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853528 1072693248 -882345067 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40388 interne); stringhe deallocate: 0 (40308 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9984271275648943 1 0 0 0.9950183140026986 0.9939378192944323 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40408 interne); stringhe deallocate: 0 (40328 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836424e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79845112 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9948052380385543


ris (2 : 2): [ 1 0.9948052380385543 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40428 interne); stringhe deallocate: 0 (40348 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9933047382364464 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858872 1072693248 -882345067 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9952856109350029


ris (2 : 2): [ 1 0.9952856109350029 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40448 interne); stringhe deallocate: 0 (40368 interne)


Stringhe allocate: 1 (40448 interne); stringhe deallocate: 0 (40373 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9948052380385543 1 1 0.9948052380385543 0.9952856109350029 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999158527084 0.9999997155317746 0.9999999580606205 0.9999999604068273 0.9999999488481699 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788583566e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9950175061665595


ris (2 : 2): [ 1 0.9950175061665595 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40483 interne); stringhe deallocate: 0 (40403 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.993937501145389 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863704 1072693248 -201467413 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40503 interne); stringhe deallocate: 0 (40423 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.998342452087106 1 0 0 0.9948052380385543 0.9936280630221089 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40523 interne); stringhe deallocate: 0 (40443 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836399e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838480 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9950175061665595


ris (2 : 2): [ 1 0.9950175061665595 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40543 interne); stringhe deallocate: 0 (40463 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9934706775674176 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79862448 1072693248 -201467413 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9955095214636704


ris (2 : 2): [ 1 0.9955095214636704 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40563 interne); stringhe deallocate: 0 (40483 interne)


Stringhe allocate: 1 (40563 interne); stringhe deallocate: 0 (40488 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9950175061665595 1 1 0.9950175061665595 0.9955095214636704 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.999999916206207 0.9999997155317746 0.9999999580606205 0.9999999605723255 0.9999999490666401 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788577052e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9950175061665595


ris (2 : 2): [ 1 0.9950175061665595 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40598 interne); stringhe deallocate: 0 (40518 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9936280338292409 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863776 1072693248 -201467413 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40618 interne); stringhe deallocate: 0 (40538 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9984266172134684 1 0 0 0.9950175061665595 0.9939361386771388 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40638 interne); stringhe deallocate: 0 (40558 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.5359030478589e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838464 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9950175061665595


ris (2 : 2): [ 1 0.9950175061665595 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40658 interne); stringhe deallocate: 0 (40578 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9935488788610094 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864496 1072693248 -201467413 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9955095214636704


ris (2 : 2): [ 1 0.9955095214636704 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40678 interne); stringhe deallocate: 0 (40598 interne)


Stringhe allocate: 1 (40678 interne); stringhe deallocate: 0 (40603 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9950175061665595 1 1 0.9950175061665595 0.9955095214636704 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.999999916206207 0.9999997155317746 0.9999999580606205 0.9999999605723255 0.9999999490666401 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553198e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9951213490378169


ris (2 : 2): [ 1 0.9951213490378169 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40713 interne); stringhe deallocate: 0 (40633 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9939360706339144 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863328 1072693248 -1170905341 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40733 interne); stringhe deallocate: 0 (40653 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9984266172134684 1 0 0 0.9950175061665595 0.9939361386771388 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40753 interne); stringhe deallocate: 0 (40673 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047867184e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79852696 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9951213490378169


ris (2 : 2): [ 1 0.9951213490378169 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40773 interne); stringhe deallocate: 0 (40693 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9938902942665262 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79846680 1072693248 -1170905341 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9956186463552085


ris (2 : 2): [ 1 0.9956186463552085 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40793 interne); stringhe deallocate: 0 (40713 interne)


Stringhe allocate: 1 (40793 interne); stringhe deallocate: 0 (40718 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9951213490378169 1 1 0.9951213490378169 0.9956186463552085 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999163785993 0.9999997155317746 0.9999999580606205 0.9999999606530361 0.9999999491727752 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553641e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9951708355577766


ris (2 : 2): [ 1 0.9951708355577766 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40828 interne); stringhe deallocate: 0 (40748 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9939360706334401 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853304 1072693248 -2112558424 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40848 interne); stringhe deallocate: 0 (40768 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9984675556020037 1 0 0 0.9951213490378169 0.9940862019572122 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40868 interne); stringhe deallocate: 0 (40788 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.53590304786067e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79857936 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9951708355577766


ris (2 : 2): [ 1 0.9951708355577766 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40888 interne); stringhe deallocate: 0 (40808 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9939375011453819 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863064 1072693248 -2112558424 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9956702293304627


ris (2 : 2): [ 1 0.9956702293304627 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40908 interne); stringhe deallocate: 0 (40828 interne)


Stringhe allocate: 1 (40908 interne); stringhe deallocate: 0 (40833 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9951708355577766 1 1 0.9951708355577766 0.9956702293304627 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999164606284 0.9999997155317746 0.9999999580606205 0.9999999606914408 0.999999949222868 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788581896e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9953868465721552


ris (2 : 2): [ 1 0.9953868465721552 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40943 interne); stringhe deallocate: 0 (40863 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9940857975015902 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858512 1072693248 -2078495786 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40963 interne); stringhe deallocate: 0 (40883 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9984868263987119 1 0 0 0.9951708355577766 0.9941570557291746 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (40983 interne); stringhe deallocate: 0 (40903 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836816e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79853816 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9953868465721552


ris (2 : 2): [ 1 0.9953868465721552 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41003 interne); stringhe deallocate: 0 (40923 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9936280338296246 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79851712 1072693248 -2078495786 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9958953501952789


ris (2 : 2): [ 1 0.9958953501952789 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41023 interne); stringhe deallocate: 0 (40943 interne)


Stringhe allocate: 1 (41023 interne); stringhe deallocate: 0 (40948 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9953868465721552 1 1 0.9953868465721552 0.9958953501952789 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.999999916817748 0.9999997155317746 0.9999999580606205 0.9999999608586404 0.9999999494409075 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.45528078856921e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9954167772381038


ris (2 : 2): [ 1 0.9954167772381038 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41058 interne); stringhe deallocate: 0 (40978 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9941568462376882 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864800 1072693248 1225003889 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41078 interne); stringhe deallocate: 0 (40998 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9985709272663738 1 0 0 0.9953868465721552 0.9944662774616526 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41098 interne); stringhe deallocate: 0 (41018 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047837259e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838728 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9954167772381038


ris (2 : 2): [ 1 0.9954167772381038 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41118 interne); stringhe deallocate: 0 (41038 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9939360706334703 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79845320 1072693248 1225003889 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9959265643931836


ris (2 : 2): [ 1 0.9959265643931836 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41138 interne); stringhe deallocate: 0 (41058 interne)


Stringhe allocate: 1 (41138 interne); stringhe deallocate: 0 (41063 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9954167772381038 1 1 0.9954167772381038 0.9959265643931836 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999168671102 0.9999997155317746 0.9999999580606205 0.9999999608817516 0.9999999494710659 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552313e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9952207452599873


ris (2 : 2): [ 1 0.9952207452599873 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41173 interne); stringhe deallocate: 0 (41093 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9944658367166781 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864848 1072693248 757475348 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41193 interne); stringhe deallocate: 0 (41113 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9985825968606041 1 0 0 0.9954167772381038 0.9945091612537877 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41213 interne); stringhe deallocate: 0 (41133 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047865515e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79839008 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9952207452599873


ris (2 : 2): [ 1 0.9952207452599873 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41233 interne); stringhe deallocate: 0 (41153 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9939360706337137 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853528 1072693248 757475348 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9957223072632294


ris (2 : 2): [ 1 0.9957223072632294 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41253 interne); stringhe deallocate: 0 (41173 interne)


Stringhe allocate: 1 (41253 interne); stringhe deallocate: 0 (41178 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9952207452599873 1 1 0.9952207452599873 0.9957223072632294 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999165432774 0.9999997155317746 0.9999999580606205 0.9999999607301359 0.9999999492733911 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788595556e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9954160340209279


ris (2 : 2): [ 1 0.9954160340209279 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41288 interne); stringhe deallocate: 0 (41208 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9945087520604421 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864168 1072693248 -1174334008 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41308 interne); stringhe deallocate: 0 (41228 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9985062914720642 1 0 0 0.9952207452599873 0.9942285987352936 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41328 interne); stringhe deallocate: 0 (41248 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047852829e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79856880 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9954160340209279


ris (2 : 2): [ 1 0.9954160340209279 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41348 interne); stringhe deallocate: 0 (41268 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9940857975015831 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863704 1072693248 -1174334008 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9959255020735129


ris (2 : 2): [ 1 0.9959255020735129 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41368 interne); stringhe deallocate: 0 (41288 interne)


Stringhe allocate: 1 (41368 interne); stringhe deallocate: 0 (41293 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9954160340209279 1 1 0.9954160340209279 0.9959255020735129 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999168658849 0.9999997155317746 0.9999999580606205 0.9999999608811779 0.9999999494700398 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788563291e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9954160340209279


ris (2 : 2): [ 1 0.9954160340209279 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41403 interne); stringhe deallocate: 0 (41323 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9942283718118929 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858872 1072693248 -1174334008 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41423 interne); stringhe deallocate: 0 (41343 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9985821369569683 1 0 0 0.9954160340209279 0.9945076390304812 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41443 interne); stringhe deallocate: 0 (41363 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047835931e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79848856 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9954160340209279


ris (2 : 2): [ 1 0.9954160340209279 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41463 interne); stringhe deallocate: 0 (41383 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9941568462380719 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863776 1072693248 -1174334008 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9959255020735129


ris (2 : 2): [ 1 0.9959255020735129 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41483 interne); stringhe deallocate: 0 (41403 interne)


Stringhe allocate: 1 (41483 interne); stringhe deallocate: 0 (41408 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9954160340209279 1 1 0.9954160340209279 0.9959255020735129 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999168658849 0.9999997155317746 0.9999999580606205 0.9999999608811779 0.9999999494700398 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552806e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9955115704815872


ris (2 : 2): [ 1 0.9955115704815872 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41518 interne); stringhe deallocate: 0 (41438 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9945073215489675 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79862448 1072693248 348144043 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41538 interne); stringhe deallocate: 0 (41458 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9985821369569683 1 0 0 0.9954160340209279 0.9945076390304812 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41558 interne); stringhe deallocate: 0 (41478 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047879175e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838168 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9955115704815872


ris (2 : 2): [ 1 0.9955115704815872 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41578 interne); stringhe deallocate: 0 (41498 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.994465836716234 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863328 1072693248 348144043 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9960245305964126


ris (2 : 2): [ 1 0.9960245305964126 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41598 interne); stringhe deallocate: 0 (41518 interne)


Stringhe allocate: 1 (41598 interne); stringhe deallocate: 0 (41523 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9955115704815872 1 1 0.9955115704815872 0.9960245305964126 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999170232519 0.9999997155317746 0.9999999580606205 0.9999999609548569 0.9999999495656016 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552781e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9955570985656053


ris (2 : 2): [ 1 0.9955570985656053 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41633 interne); stringhe deallocate: 0 (41553 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9945073215494418 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864496 1072693248 -1888191936 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41653 interne); stringhe deallocate: 0 (41573 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9986190286253903 1 0 0 0.9955115704815872 0.9946435592218029 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41673 interne); stringhe deallocate: 0 (41593 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047846909e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865520 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9955570985656053


ris (2 : 2): [ 1 0.9955570985656053 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41693 interne); stringhe deallocate: 0 (41613 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9945087520607157 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853304 1072693248 -1888191936 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9960713406804795


ris (2 : 2): [ 1 0.9960713406804795 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41713 interne); stringhe deallocate: 0 (41633 interne)


Stringhe allocate: 1 (41713 interne); stringhe deallocate: 0 (41638 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9955570985656053 1 1 0.9955570985656053 0.9960713406804795 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999170981405 0.9999997155317746 0.9999999580606205 0.9999999609899197 0.9999999496107099 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788575282e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9957558308187416


ris (2 : 2): [ 1 0.9957558308187416 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41748 interne); stringhe deallocate: 0 (41668 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9946432201390554 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79846680 1072693248 1426415271 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41768 interne); stringhe deallocate: 0 (41688 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9986363945225406 1 0 0 0.9955570985656053 0.9947077352030201 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41788 interne); stringhe deallocate: 0 (41708 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836424e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79845112 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9957558308187416


ris (2 : 2): [ 1 0.9957558308187416 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41808 interne); stringhe deallocate: 0 (41728 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9942283718118858 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858512 1072693248 1426415271 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.996275631459791


ris (2 : 2): [ 1 0.996275631459791 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41828 interne); stringhe deallocate: 0 (41748 interne)


Stringhe allocate: 1 (41828 interne); stringhe deallocate: 0 (41753 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9957558308187416 1 1 0.9957558308187416 0.996275631459791 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999174242426 0.9999997155317746 0.9999999580606205 0.9999999611426031 0.9999999498071025 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788583566e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9957833673251507


ris (2 : 2): [ 1 0.9957833673251507 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41863 interne); stringhe deallocate: 0 (41783 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9947075931558871 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863064 1072693248 345112109 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41883 interne); stringhe deallocate: 0 (41803 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9987121821010363 1 0 0 0.9957558308187416 0.9949878135608273 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41903 interne); stringhe deallocate: 0 (41823 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836399e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838480 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9957833673251507


ris (2 : 2): [ 1 0.9957833673251507 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41923 interne); stringhe deallocate: 0 (41843 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9945073215493512 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864800 1072693248 345112109 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.996303957495644


ris (2 : 2): [ 1 0.996303957495644 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41943 interne); stringhe deallocate: 0 (41863 interne)


Stringhe allocate: 1 (41943 interne); stringhe deallocate: 0 (41868 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9957833673251507 1 1 0.9957833673251507 0.996303957495644 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999174693264 0.9999997155317746 0.9999999580606205 0.9999999611637118 0.9999999498342729 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788577052e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9956030159814474


ris (2 : 2): [ 1 0.9956030159814474 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41978 interne); stringhe deallocate: 0 (41898 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.994987496567278 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79851712 1072693248 -617738599 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (41998 interne); stringhe deallocate: 0 (41918 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9987226981671963 1 0 0 0.9957833673251507 0.9950266556628403 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42018 interne); stringhe deallocate: 0 (41938 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.5359030478589e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838464 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9956030159814474


ris (2 : 2): [ 1 0.9956030159814474 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42038 interne); stringhe deallocate: 0 (41958 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9945073215489977 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864848 1072693248 -617738599 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9961185999675273


ris (2 : 2): [ 1 0.9961185999675273 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42058 interne); stringhe deallocate: 0 (41978 interne)


Stringhe allocate: 1 (42058 interne); stringhe deallocate: 0 (41983 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9956030159814474 1 1 0.9956030159814474 0.9961185999675273 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999171736012 0.9999997155317746 0.9999999580606205 0.9999999610252507 0.9999999496562103 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553198e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9957826835580549


ris (2 : 2): [ 1 0.9957826835580549 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42093 interne); stringhe deallocate: 0 (42013 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.995026597214725 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79845320 1072693248 -1518747071 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42113 interne); stringhe deallocate: 0 (42033 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9986539354922699 1 0 0 0.9956030159814474 0.9947725354597972 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42133 interne); stringhe deallocate: 0 (42053 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047867184e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79852696 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9957826835580549


ris (2 : 2): [ 1 0.9957826835580549 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42153 interne); stringhe deallocate: 0 (42073 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9946432201393289 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864168 1072693248 -1518747071 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9963029931806523


ris (2 : 2): [ 1 0.9963029931806523 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42173 interne); stringhe deallocate: 0 (42093 interne)


Stringhe allocate: 1 (42173 interne); stringhe deallocate: 0 (42098 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9957826835580549 1 1 0.9957826835580549 0.9963029931806523 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.999999917468207 0.9999997155317746 0.9999999580606205 0.9999999611631878 0.9999999498333482 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553641e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9957826835580549


ris (2 : 2): [ 1 0.9957826835580549 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42208 interne); stringhe deallocate: 0 (42128 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9947724430089284 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853528 1072693248 -1518747071 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42228 interne); stringhe deallocate: 0 (42148 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9987222837246311 1 0 0 0.9957826835580549 0.9950252769052834 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42248 interne); stringhe deallocate: 0 (42168 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.53590304786067e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79857936 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9957826835580549


ris (2 : 2): [ 1 0.9957826835580549 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42268 interne); stringhe deallocate: 0 (42188 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.99470759315588 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858872 1072693248 -1518747071 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9963029931806523


ris (2 : 2): [ 1 0.9963029931806523 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42288 interne); stringhe deallocate: 0 (42208 interne)


Stringhe allocate: 1 (42288 interne); stringhe deallocate: 0 (42213 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9957826835580549 1 1 0.9957826835580549 0.9963029931806523 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.999999917468207 0.9999997155317746 0.9999999580606205 0.9999999611631878 0.9999999498333482 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788581896e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9958705780394456


ris (2 : 2): [ 1 0.9958705780394456 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42323 interne); stringhe deallocate: 0 (42243 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9950251667032504 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863704 1072693248 -109622257 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42343 interne); stringhe deallocate: 0 (42263 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9987222837246311 1 0 0 0.9957826835580549 0.9950252769052834 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42363 interne); stringhe deallocate: 0 (42283 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836816e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79853816 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9958705780394456


ris (2 : 2): [ 1 0.9958705780394456 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42383 interne); stringhe deallocate: 0 (42303 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9949874965676617 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79862448 1072693248 -109622257 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9963928582711382


ris (2 : 2): [ 1 0.9963928582711382 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42403 interne); stringhe deallocate: 0 (42323 interne)


Stringhe allocate: 1 (42403 interne); stringhe deallocate: 0 (42328 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9958705780394456 1 1 0.9958705780394456 0.9963928582711382 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999176119482 0.9999997155317746 0.9999999580606205 0.9999999612304895 0.9999999499194513 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.45528078856921e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9959124643235499


ris (2 : 2): [ 1 0.9959124643235499 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42438 interne); stringhe deallocate: 0 (42358 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9950251667027761 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863776 1072693248 -788637337 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42458 interne); stringhe deallocate: 0 (42378 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9987555286875033 1 0 0 0.9958705780394456 0.9951483869586415 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42478 interne); stringhe deallocate: 0 (42398 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047837259e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838728 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9959124643235499


ris (2 : 2): [ 1 0.9959124643235499 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42498 interne); stringhe deallocate: 0 (42418 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9950265972142809 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864496 1072693248 -788637337 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.996435336531548


ris (2 : 2): [ 1 0.996435336531548 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42518 interne); stringhe deallocate: 0 (42438 interne)


Stringhe allocate: 1 (42518 interne); stringhe deallocate: 0 (42443 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9959124643235499 1 1 0.9959124643235499 0.996435336531548 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999176803602 0.9999997155317746 0.9999999580606205 0.9999999612625212 0.9999999499600999 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552313e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9960952999467715


ris (2 : 2): [ 1 0.9960952999467715 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42553 interne); stringhe deallocate: 0 (42473 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9951481906900668 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863328 1072693248 1075777517 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42573 interne); stringhe deallocate: 0 (42493 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9987711779826634 1 0 0 0.9959124643235499 0.9952065145142114 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42593 interne); stringhe deallocate: 0 (42513 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047865515e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79839008 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9960952999467715


ris (2 : 2): [ 1 0.9960952999467715 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42613 interne); stringhe deallocate: 0 (42533 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.994772443009202 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79846680 1072693248 1075777517 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9966207221546409


ris (2 : 2): [ 1 0.9966207221546409 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42633 interne); stringhe deallocate: 0 (42553 interne)


Stringhe allocate: 1 (42633 interne); stringhe deallocate: 0 (42558 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9960952999467715 1 1 0.9960952999467715 0.9966207221546409 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999179783172 0.9999997155317746 0.9999999580606205 0.9999999614020316 0.9999999501371144 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788595556e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9961206338029079


ris (2 : 2): [ 1 0.9961206338029079 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42668 interne); stringhe deallocate: 0 (42588 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9952063648228933 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853304 1072693248 1629600941 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42688 interne); stringhe deallocate: 0 (42608 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9988394740329739 1 0 0 0.9960952999467715 0.9954601961876148 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42708 interne); stringhe deallocate: 0 (42628 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047852829e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79856880 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9961206338029079


ris (2 : 2): [ 1 0.9961206338029079 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42728 interne); stringhe deallocate: 0 (42648 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9950251667032433 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863064 1072693248 1629600941 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9966464269224525


ris (2 : 2): [ 1 0.9966464269224525 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42748 interne); stringhe deallocate: 0 (42668 interne)


Stringhe allocate: 1 (42748 interne); stringhe deallocate: 0 (42673 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9961206338029079 1 1 0.9961206338029079 0.9966464269224525 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999180195174 0.9999997155317746 0.9999999580606205 0.9999999614213226 0.9999999501616089 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788563291e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.995954708796753


ris (2 : 2): [ 1 0.995954708796753 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42783 interne); stringhe deallocate: 0 (42703 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9954600421915316 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858512 1072693248 1758628167 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42803 interne); stringhe deallocate: 0 (42723 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9988489505962516 1 0 0 0.9961206338029079 0.9954953775187041 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42823 interne); stringhe deallocate: 0 (42743 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047835931e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79848856 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.995954708796753


ris (2 : 2): [ 1 0.995954708796753 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42843 interne); stringhe deallocate: 0 (42763 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9950251667031598 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79851712 1072693248 1758628167 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9964782224642876


ris (2 : 2): [ 1 0.9964782224642876 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42863 interne); stringhe deallocate: 0 (42783 interne)


Stringhe allocate: 1 (42863 interne); stringhe deallocate: 0 (42788 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.995954708796753 1 1 0.995954708796753 0.9964782224642876 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999177492998 0.9999997155317746 0.9999999580606205 0.9999999612948001 0.9999999500011051 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552806e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9961200047304695


ris (2 : 2): [ 1 0.9961200047304695 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42898 interne); stringhe deallocate: 0 (42818 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9954953281407644 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864800 1072693248 258387438 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42918 interne); stringhe deallocate: 0 (42838 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9987869850446419 1 0 0 0.995954708796753 0.9952652075089296 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42938 interne); stringhe deallocate: 0 (42858 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047879175e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838168 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9961200047304695


ris (2 : 2): [ 1 0.9961200047304695 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42958 interne); stringhe deallocate: 0 (42878 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9951481906896227 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79845320 1072693248 258387438 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9966455515846378


ris (2 : 2): [ 1 0.9966455515846378 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (42978 interne); stringhe deallocate: 0 (42898 interne)


Stringhe allocate: 1 (42978 interne); stringhe deallocate: 0 (42903 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9961200047304695 1 1 0.9961200047304695 0.9966455515846378 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999180184944 0.9999997155317746 0.9999999580606205 0.9999999614208437 0.999999950160775 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552781e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9961200047304695


ris (2 : 2): [ 1 0.9961200047304695 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43013 interne); stringhe deallocate: 0 (42933 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9952650157938265 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864848 1072693248 258387438 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43033 interne); stringhe deallocate: 0 (42953 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9988485771209702 1 0 0 0.9961200047304695 0.9954941287056079 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43053 interne); stringhe deallocate: 0 (42973 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047846909e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865520 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9961200047304695


ris (2 : 2): [ 1 0.9961200047304695 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43073 interne); stringhe deallocate: 0 (42993 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9952063648231668 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853528 1072693248 258387438 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9966455515846378


ris (2 : 2): [ 1 0.9966455515846378 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43093 interne); stringhe deallocate: 0 (43013 interne)


Stringhe allocate: 1 (43093 interne); stringhe deallocate: 0 (43018 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9961200047304695 1 1 0.9961200047304695 0.9966455515846378 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999180184944 0.9999997155317746 0.9999999580606205 0.9999999614208437 0.999999950160775 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788575282e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9962008685159356


ris (2 : 2): [ 1 0.9962008685159356 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43128 interne); stringhe deallocate: 0 (43048 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9954938976292898 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864168 1072693248 -1529824696 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43148 interne); stringhe deallocate: 0 (43068 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9988485771209702 1 0 0 0.9961200047304695 0.9954941287056079 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43168 interne); stringhe deallocate: 0 (43088 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836424e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79845112 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9962008685159356


ris (2 : 2): [ 1 0.9962008685159356 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43188 interne); stringhe deallocate: 0 (43108 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9954600421915245 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863704 1072693248 -1529824696 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.996727100092732


ris (2 : 2): [ 1 0.996727100092732 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43208 interne); stringhe deallocate: 0 (43128 interne)


Stringhe allocate: 1 (43208 interne); stringhe deallocate: 0 (43133 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9962008685159356 1 1 0.9962008685159356 0.996727100092732 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999181498651 0.9999997155317746 0.9999999580606205 0.9999999614823555 0.9999999502384059 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788583566e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9962394043083789


ris (2 : 2): [ 1 0.9962394043083789 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43243 interne); stringhe deallocate: 0 (43163 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.995493897629764 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858872 1072693248 1972352600 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43263 interne); stringhe deallocate: 0 (43183 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9988785358517753 1 0 0 0.9962008685159356 0.9956056359445074 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43283 interne); stringhe deallocate: 0 (43203 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836399e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838480 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9962394043083789


ris (2 : 2): [ 1 0.9962394043083789 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43303 interne); stringhe deallocate: 0 (43223 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9954953281411481 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863776 1072693248 1972352600 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9967656468939711


ris (2 : 2): [ 1 0.9967656468939711 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43323 interne); stringhe deallocate: 0 (43243 interne)


Stringhe allocate: 1 (43323 interne); stringhe deallocate: 0 (43248 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9962394043083789 1 1 0.9962394043083789 0.9967656468939711 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.999999918212396 0.9999997155317746 0.9999999580606205 0.9999999615116344 0.9999999502750588 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788577052e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9964076148760712


ris (2 : 2): [ 1 0.9964076148760712 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43358 interne); stringhe deallocate: 0 (43278 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9956054775243093 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79862448 1072693248 954997070 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43378 interne); stringhe deallocate: 0 (43298 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9988926382294674 1 0 0 0.9962394043083789 0.9956582851234385 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43398 interne); stringhe deallocate: 0 (43318 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.5359030478589e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838464 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9964076148760712


ris (2 : 2): [ 1 0.9964076148760712 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43418 interne); stringhe deallocate: 0 (43338 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9952650157933825 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863328 1072693248 954997070 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.996933874651768


ris (2 : 2): [ 1 0.996933874651768 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43438 interne); stringhe deallocate: 0 (43358 interne)


Stringhe allocate: 1 (43438 interne); stringhe deallocate: 0 (43363 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9964076148760712 1 1 0.9964076148760712 0.996933874651768 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999184847872 0.9999997155317746 0.9999999580606205 0.9999999616391784 0.9999999504347054 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553198e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9964309222723404


ris (2 : 2): [ 1 0.9964309222723404 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43473 interne); stringhe deallocate: 0 (43393 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9956579296121859 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864496 1072693248 435961872 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43493 interne); stringhe deallocate: 0 (43413 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9989541832822375 1 0 0 0.9964076148760712 0.9958880579340055 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43513 interne); stringhe deallocate: 0 (43433 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047867184e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79852696 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9964309222723404


ris (2 : 2): [ 1 0.9964309222723404 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43533 interne); stringhe deallocate: 0 (43453 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9954938976295633 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853304 1072693248 435961872 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9969572004161531


ris (2 : 2): [ 1 0.9969572004161531 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43553 interne); stringhe deallocate: 0 (43473 interne)


Stringhe allocate: 1 (43553 interne); stringhe deallocate: 0 (43478 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9964309222723404 1 1 0.9964309222723404 0.9969572004161531 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999185224583 0.9999997155317746 0.9999999580606205 0.9999999616568176 0.9999999504568008 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553641e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9962782696383082


ris (2 : 2): [ 1 0.9962782696383082 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43588 interne); stringhe deallocate: 0 (43508 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9958877651219655 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79846680 1072693248 -147194897 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43608 interne); stringhe deallocate: 0 (43528 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9989627230965331 1 0 0 0.9964309222723404 0.9959199235126862 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43628 interne); stringhe deallocate: 0 (43548 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.53590304786067e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79857936 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9962782696383082


ris (2 : 2): [ 1 0.9962782696383082 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43648 interne); stringhe deallocate: 0 (43568 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9954938976297569 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858512 1072693248 -147194897 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9968045636714152


ris (2 : 2): [ 1 0.9968045636714152 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43668 interne); stringhe deallocate: 0 (43588 interne)


Stringhe allocate: 1 (43668 interne); stringhe deallocate: 0 (43593 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9962782696383082 1 1 0.9962782696383082 0.9968045636714152 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999182754131 0.9999997155317746 0.9999999580606205 0.9999999615411414 0.9999999503120362 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788581896e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9964303435195234


ris (2 : 2): [ 1 0.9964303435195234 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43703 interne); stringhe deallocate: 0 (43623 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9959197132120394 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863064 1072693248 -482012774 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43723 interne); stringhe deallocate: 0 (43643 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9989068827788761 1 0 0 0.9962782696383082 0.9957114464502913 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43743 interne); stringhe deallocate: 0 (43663 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836816e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79853816 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9964303435195234


ris (2 : 2): [ 1 0.9964303435195234 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43763 interne); stringhe deallocate: 0 (43683 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.995605477524693 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864800 1072693248 -482012774 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9969564058581543


ris (2 : 2): [ 1 0.9969564058581543 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43783 interne); stringhe deallocate: 0 (43703 interne)


Stringhe allocate: 1 (43783 interne); stringhe deallocate: 0 (43708 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9964303435195234 1 1 0.9964303435195234 0.9969564058581543 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999185215232 0.9999997155317746 0.9999999580606205 0.9999999616563797 0.9999999504560484 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.45528078856921e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9964303435195234


ris (2 : 2): [ 1 0.9964303435195234 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43818 interne); stringhe deallocate: 0 (43738 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9957113353734304 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79851712 1072693248 -482012774 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43838 interne); stringhe deallocate: 0 (43758 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9989623865389555 1 0 0 0.9964303435195234 0.9959187923971098 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43858 interne); stringhe deallocate: 0 (43778 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047837259e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838728 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9964303435195234


ris (2 : 2): [ 1 0.9964303435195234 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43878 interne); stringhe deallocate: 0 (43798 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9956579296117418 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864848 1072693248 -482012774 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9969564058581543


ris (2 : 2): [ 1 0.9969564058581543 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43898 interne); stringhe deallocate: 0 (43818 interne)


Stringhe allocate: 1 (43898 interne); stringhe deallocate: 0 (43823 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9964303435195234 1 1 0.9964303435195234 0.9969564058581543 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999185215232 0.9999997155317746 0.9999999580606205 0.9999999616563797 0.9999999504560484 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552313e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9965047389957404


ris (2 : 2): [ 1 0.9965047389957404 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43933 interne); stringhe deallocate: 0 (43853 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.995918759537723 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79845320 1072693248 -402033012 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43953 interne); stringhe deallocate: 0 (43873 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9989623865389555 1 0 0 0.9964303435195234 0.9959187923971098 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43973 interne); stringhe deallocate: 0 (43893 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047865515e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79839008 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9965047389957404


ris (2 : 2): [ 1 0.9965047389957404 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (43993 interne); stringhe deallocate: 0 (43913 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9958877651222391 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864168 1072693248 -402033012 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9970304064791334


ris (2 : 2): [ 1 0.9970304064791334 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44013 interne); stringhe deallocate: 0 (43933 interne)


Stringhe allocate: 1 (44013 interne); stringhe deallocate: 0 (43938 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9965047389957404 1 1 0.9965047389957404 0.9970304064791334 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999186416515 0.9999997155317746 0.9999999580606205 0.9999999617126292 0.9999999505260817 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788595556e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9965401923029742


ris (2 : 2): [ 1 0.9965401923029742 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44048 interne); stringhe deallocate: 0 (43968 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9959187595372487 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853528 1072693248 1105389578 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44068 interne); stringhe deallocate: 0 (43988 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.998989383878696 1 0 0 0.9965047389957404 0.9960197903578294 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44088 interne); stringhe deallocate: 0 (44008 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047852829e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79856880 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9965401923029742


ris (2 : 2): [ 1 0.9965401923029742 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44108 interne); stringhe deallocate: 0 (44028 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9959197132120323 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858872 1072693248 1105389578 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9970653852331554


ris (2 : 2): [ 1 0.9970653852331554 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44128 interne); stringhe deallocate: 0 (44048 interne)


Stringhe allocate: 1 (44128 interne); stringhe deallocate: 0 (44053 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9965401923029742 1 1 0.9965401923029742 0.9970653852331554 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999186988366 0.9999997155317746 0.9999999580606205 0.999999961739406 0.9999999505591506 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788563291e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9966949476760511


ris (2 : 2): [ 1 0.9966949476760511 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44163 interne); stringhe deallocate: 0 (44083 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9960193721781039 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863704 1072693248 -846500577 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44183 interne); stringhe deallocate: 0 (44103 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.999002092250279 1 0 0 0.9965401923029742 0.9960674774834344 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44203 interne); stringhe deallocate: 0 (44123 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047835931e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79848856 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9966949476760511


ris (2 : 2): [ 1 0.9966949476760511 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44223 interne); stringhe deallocate: 0 (44143 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9957113353738141 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79862448 1072693248 -846500577 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9972180411463978


ris (2 : 2): [ 1 0.9972180411463978 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44243 interne); stringhe deallocate: 0 (44163 interne)


Stringhe allocate: 1 (44243 interne); stringhe deallocate: 0 (44168 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9966949476760511 1 1 0.9966949476760511 0.9972180411463978 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999189479819 0.9999997155317746 0.9999999580606205 0.9999999618560687 0.9999999507032135 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552806e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9967163907093549


ris (2 : 2): [ 1 0.9967163907093549 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44278 interne); stringhe deallocate: 0 (44198 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9960670558934499 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863776 1072693248 -978355303 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44298 interne); stringhe deallocate: 0 (44218 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9990575536353628 1 0 0 0.9966949476760511 0.9962755947817605 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44318 interne); stringhe deallocate: 0 (44238 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047879175e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838168 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9967163907093549


ris (2 : 2): [ 1 0.9967163907093549 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44338 interne); stringhe deallocate: 0 (44258 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9959187595372789 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864496 1072693248 -978355303 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9972392078119685


ris (2 : 2): [ 1 0.9972392078119685 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44358 interne); stringhe deallocate: 0 (44278 interne)


Stringhe allocate: 1 (44358 interne); stringhe deallocate: 0 (44283 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9967163907093549 1 1 0.9967163907093549 0.9972392078119685 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999189824435 0.9999997155317746 0.9999999580606205 0.9999999618722055 0.9999999507231554 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552781e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9965759487879293


ris (2 : 2): [ 1 0.9965759487879293 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44393 interne); stringhe deallocate: 0 (44313 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.996275433732059 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863328 1072693248 1048627018 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44413 interne); stringhe deallocate: 0 (44333 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9990652492974457 1 0 0 0.9967163907093549 0.9963044571094142 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44433 interne); stringhe deallocate: 0 (44353 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047846909e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865520 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9965759487879293


ris (2 : 2): [ 1 0.9965759487879293 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44453 interne); stringhe deallocate: 0 (44373 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9959187595375223 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79846680 1072693248 1048627018 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9971006997482609


ris (2 : 2): [ 1 0.9971006997482609 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44473 interne); stringhe deallocate: 0 (44393 interne)


Stringhe allocate: 1 (44473 interne); stringhe deallocate: 0 (44398 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9965759487879293 1 1 0.9965759487879293 0.9971006997482609 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999187564699 0.9999997155317746 0.9999999580606205 0.9999999617663927 0.9999999505925147 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788575282e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9967158582510834


ris (2 : 2): [ 1 0.9967158582510834 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44508 interne); stringhe deallocate: 0 (44428 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9963040439610769 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853304 1072693248 -1479345753 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44528 interne); stringhe deallocate: 0 (44448 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9990149287400386 1 0 0 0.9965759487879293 0.9961156284882995 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44548 interne); stringhe deallocate: 0 (44468 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836424e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79845112 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9967158582510834


ris (2 : 2): [ 1 0.9967158582510834 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44568 interne); stringhe deallocate: 0 (44488 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9960193721780968 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863064 1072693248 -1479345753 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9972384865903707


ris (2 : 2): [ 1 0.9972384865903707 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44588 interne); stringhe deallocate: 0 (44508 interne)


Stringhe allocate: 1 (44588 interne); stringhe deallocate: 0 (44513 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9967158582510834 1 1 0.9967158582510834 0.9972384865903707 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999189815879 0.9999997155317746 0.9999999580606205 0.9999999618718048 0.9999999507224761 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788583566e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9967158582510834


ris (2 : 2): [ 1 0.9967158582510834 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44623 interne); stringhe deallocate: 0 (44543 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9961152164469027 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858512 1072693248 -1479345753 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44643 interne); stringhe deallocate: 0 (44563 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9990649460082891 1 0 0 0.9967158582510834 0.9963034325986598 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44663 interne); stringhe deallocate: 0 (44583 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836399e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838480 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9967158582510834


ris (2 : 2): [ 1 0.9967158582510834 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44683 interne); stringhe deallocate: 0 (44603 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9960670558938336 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79851712 1072693248 -1479345753 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9972384865903707


ris (2 : 2): [ 1 0.9972384865903707 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44703 interne); stringhe deallocate: 0 (44623 interne)


Stringhe allocate: 1 (44703 interne); stringhe deallocate: 0 (44628 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9967158582510834 1 1 0.9967158582510834 0.9972384865903707 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999189815879 0.9999997155317746 0.9999999580606205 0.9999999618718048 0.9999999507224761 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788577052e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9967843028193121


ris (2 : 2): [ 1 0.9967843028193121 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44738 interne); stringhe deallocate: 0 (44658 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9963030902867605 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864800 1072693248 834194859 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44758 interne); stringhe deallocate: 0 (44678 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9990649460082891 1 0 0 0.9967158582510834 0.9963034325986598 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44778 interne); stringhe deallocate: 0 (44698 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.5359030478589e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838464 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9967843028193121


ris (2 : 2): [ 1 0.9967843028193121 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44798 interne); stringhe deallocate: 0 (44718 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9962754337316149 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79845320 1072693248 834194859 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9973056370666891


ris (2 : 2): [ 1 0.9973056370666891 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44818 interne); stringhe deallocate: 0 (44738 interne)


Stringhe allocate: 1 (44818 interne); stringhe deallocate: 0 (44743 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9967843028193121 1 1 0.9967843028193121 0.9973056370666891 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999190914896 0.9999997155317746 0.9999999580606205 0.9999999619232671 0.9999999507856888 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553198e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9968169202099019


ris (2 : 2): [ 1 0.9968169202099019 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44853 interne); stringhe deallocate: 0 (44773 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9963030902872347 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864848 1072693248 -1727212353 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44873 interne); stringhe deallocate: 0 (44793 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9990892746877249 1 0 0 0.9967843028193121 0.996394911754414 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44893 interne); stringhe deallocate: 0 (44813 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047867184e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79852696 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9968169202099019


ris (2 : 2): [ 1 0.9968169202099019 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44913 interne); stringhe deallocate: 0 (44833 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9963040439613504 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853528 1072693248 -1727212353 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9973373776384151


ris (2 : 2): [ 1 0.9973373776384151 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44933 interne); stringhe deallocate: 0 (44853 interne)


Stringhe allocate: 1 (44933 interne); stringhe deallocate: 0 (44858 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9968169202099019 1 1 0.9968169202099019 0.9973373776384151 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999191438109 0.9999997155317746 0.9999999580606205 0.9999999619477672 0.9999999508155399 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553641e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9969592966718847


ris (2 : 2): [ 1 0.9969592966718847 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44968 interne); stringhe deallocate: 0 (44888 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9963946430211355 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864168 1072693248 785695703 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (44988 interne); stringhe deallocate: 0 (44908 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9991007268494071 1 0 0 0.9968169202099019 0.9964381044878222 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45008 interne); stringhe deallocate: 0 (44928 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.53590304786067e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79857936 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9969592966718847


ris (2 : 2): [ 1 0.9969592966718847 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45028 interne); stringhe deallocate: 0 (44948 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9961152164468956 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863704 1072693248 785695703 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9974759013201341


ris (2 : 2): [ 1 0.9974759013201341 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45048 interne); stringhe deallocate: 0 (44968 interne)


Stringhe allocate: 1 (45048 interne); stringhe deallocate: 0 (44973 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9969592966718847 1 1 0.9969592966718847 0.9974759013201341 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999193718006 0.9999997155317746 0.9999999580606205 0.9999999620545267 0.9999999509456057 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788581896e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9969790244729638


ris (2 : 2): [ 1 0.9969790244729638 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45083 interne); stringhe deallocate: 0 (45003 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9964380352030062 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858872 1072693248 -1910695551 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45103 interne); stringhe deallocate: 0 (45023 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9991507059317001 1 0 0 0.9969592966718847 0.9966266072518342 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45123 interne); stringhe deallocate: 0 (45043 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836816e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79853816 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9969790244729638


ris (2 : 2): [ 1 0.9969790244729638 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45143 interne); stringhe deallocate: 0 (45063 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9963030902871441 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863776 1072693248 -1910695551 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.997495108492135


ris (2 : 2): [ 1 0.997495108492135 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45163 interne); stringhe deallocate: 0 (45083 interne)


Stringhe allocate: 1 (45163 interne); stringhe deallocate: 0 (45088 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9969790244729638 1 1 0.9969790244729638 0.997495108492135 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999194033402 0.9999997155317746 0.9999999580606205 0.9999999620692956 0.9999999509636128 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.45528078856921e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9968498165269708


ris (2 : 2): [ 1 0.9968498165269708 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45198 interne); stringhe deallocate: 0 (45118 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9966263858800222 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79862448 1072693248 -1776273190 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45218 interne); stringhe deallocate: 0 (45138 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9991576408852321 1 0 0 0.9969790244729638 0.996652749377367 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45238 interne); stringhe deallocate: 0 (45158 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047837259e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838728 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9968498165269708


ris (2 : 2): [ 1 0.9968498165269708 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45258 interne); stringhe deallocate: 0 (45178 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9963030902867907 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863328 1072693248 -1776273190 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9973694229161245


ris (2 : 2): [ 1 0.9973694229161245 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45278 interne); stringhe deallocate: 0 (45198 interne)


Stringhe allocate: 1 (45278 interne); stringhe deallocate: 0 (45203 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9968498165269708 1 1 0.9968498165269708 0.9973694229161245 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999191965456 0.9999997155317746 0.9999999580606205 0.9999999619724608 0.9999999508456592 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552313e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9969785346061285


ris (2 : 2): [ 1 0.9969785346061285 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45313 interne); stringhe deallocate: 0 (45233 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9966526119241976 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864496 1072693248 -2028056449 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45333 interne); stringhe deallocate: 0 (45253 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9991122944649055 1 0 0 0.9968498165269708 0.99648171738103 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45353 interne); stringhe deallocate: 0 (45273 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047865515e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79839008 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9969785346061285


ris (2 : 2): [ 1 0.9969785346061285 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45373 interne); stringhe deallocate: 0 (45293 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.996394643021409 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853304 1072693248 -2028056449 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9974944538482543


ris (2 : 2): [ 1 0.9974944538482543 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45393 interne); stringhe deallocate: 0 (45313 interne)


Stringhe allocate: 1 (45393 interne); stringhe deallocate: 0 (45318 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9969785346061285 1 1 0.9969785346061285 0.9974944538482543 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999194025573 0.9999997155317746 0.9999999580606205 0.9999999620689291 0.9999999509629992 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788595556e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9969785346061285


ris (2 : 2): [ 1 0.9969785346061285 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45428 interne); stringhe deallocate: 0 (45348 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9964814273839284 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79846680 1072693248 -2028056449 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45448 interne); stringhe deallocate: 0 (45368 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.999157367575942 1 0 0 0.9969785346061285 0.9966518214241963 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45468 interne); stringhe deallocate: 0 (45388 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047852829e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79856880 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9969785346061285


ris (2 : 2): [ 1 0.9969785346061285 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45488 interne); stringhe deallocate: 0 (45408 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9964380352029991 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858512 1072693248 -2028056449 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9974944538482543


ris (2 : 2): [ 1 0.9974944538482543 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45508 interne); stringhe deallocate: 0 (45428 interne)


Stringhe allocate: 1 (45508 interne); stringhe deallocate: 0 (45433 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9969785346061285 1 1 0.9969785346061285 0.9974944538482543 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999194025573 0.9999997155317746 0.9999999580606205 0.9999999620689291 0.9999999509629992 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788563291e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9970415042806062


ris (2 : 2): [ 1 0.9970415042806062 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45543 interne); stringhe deallocate: 0 (45463 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9966516582498812 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863064 1072693248 -1783334494 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45563 interne); stringhe deallocate: 0 (45483 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.999157367575942 1 0 0 0.9969785346061285 0.9966518214241963 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45583 interne); stringhe deallocate: 0 (45503 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047835931e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79848856 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9970415042806062


ris (2 : 2): [ 1 0.9970415042806062 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45603 interne); stringhe deallocate: 0 (45523 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9966263858804059 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864800 1072693248 -1783334494 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9975553875089116


ris (2 : 2): [ 1 0.9975553875089116 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45623 interne); stringhe deallocate: 0 (45543 interne)


Stringhe allocate: 1 (45623 interne); stringhe deallocate: 0 (45548 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9970415042806062 1 1 0.9970415042806062 0.9975553875089116 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999195031479 0.9999997155317746 0.9999999580606205 0.9999999621160326 0.9999999510200832 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552806e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9970715126000523


ris (2 : 2): [ 1 0.9970715126000523 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45658 interne); stringhe deallocate: 0 (45578 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9966516582494069 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79851712 1072693248 -2075361591 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45678 interne); stringhe deallocate: 0 (45598 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9991792913896598 1 0 0 0.9970415042806062 0.9967346788985714 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45698 interne); stringhe deallocate: 0 (45618 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047879175e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838168 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9970715126000523


ris (2 : 2): [ 1 0.9970715126000523 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45718 interne); stringhe deallocate: 0 (45638 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9966526119237535 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864848 1072693248 -2075361591 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9975841893084004


ris (2 : 2): [ 1 0.9975841893084004 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45738 interne); stringhe deallocate: 0 (45658 interne)


Stringhe allocate: 1 (45738 interne); stringhe deallocate: 0 (45663 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9970715126000523 1 1 0.9970715126000523 0.9975841893084004 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999195510405 0.9999997155317746 0.9999999580606205 0.9999999621384593 0.9999999510470422 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552781e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9972025003423432


ris (2 : 2): [ 1 0.9972025003423432 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45773 interne); stringhe deallocate: 0 (45693 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9967346279154086 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79845320 1072693248 936294047 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45793 interne); stringhe deallocate: 0 (45713 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9991896115166176 1 0 0 0.9970715126000523 0.996773800825018 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45813 interne); stringhe deallocate: 0 (45733 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047846909e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865520 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9972025003423432


ris (2 : 2): [ 1 0.9972025003423432 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45833 interne); stringhe deallocate: 0 (45753 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.996481427384202 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864168 1072693248 936294047 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.997709887458933


ris (2 : 2): [ 1 0.997709887458933 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45853 interne); stringhe deallocate: 0 (45773 interne)


Stringhe allocate: 1 (45853 interne); stringhe deallocate: 0 (45778 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9972025003423432 1 1 0.9972025003423432 0.997709887458933 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999197597603 0.9999997155317746 0.9999999580606205 0.9999999622361978 0.9999999511645243 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788575282e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9972206501129425


ris (2 : 2): [ 1 0.9972206501129425 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45888 interne); stringhe deallocate: 0 (45808 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9967737285619069 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853528 1072693248 1206137015 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45908 interne); stringhe deallocate: 0 (45828 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9992346502166343 1 0 0 0.9972025003423432 0.9969445376755672 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45928 interne); stringhe deallocate: 0 (45848 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836424e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79845112 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9972206501129425


ris (2 : 2): [ 1 0.9972206501129425 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45948 interne); stringhe deallocate: 0 (45868 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9966516582498741 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858872 1072693248 1206137015 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.997727316314287


ris (2 : 2): [ 1 0.997727316314287 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (45968 interne); stringhe deallocate: 0 (45888 interne)


Stringhe allocate: 1 (45968 interne); stringhe deallocate: 0 (45893 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9972206501129425 1 1 0.9972206501129425 0.997727316314287 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.999999919788638 0.9999997155317746 0.9999999580606205 0.9999999622497207 0.9999999511807918 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788583566e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9971017775345965


ris (2 : 2): [ 1 0.9971017775345965 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46003 interne); stringhe deallocate: 0 (45923 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9969444362650179 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863704 1072693248 -56005368 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46023 interne); stringhe deallocate: 0 (45943 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9992408996569456 1 0 0 0.9972206501129425 0.9969682159712326 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46043 interne); stringhe deallocate: 0 (45963 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836399e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838480 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9971017775345965


ris (2 : 2): [ 1 0.9971017775345965 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46063 interne); stringhe deallocate: 0 (45983 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9966516582497906 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79862448 1072693248 -56005368 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9976132676273618


ris (2 : 2): [ 1 0.9976132676273618 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46083 interne); stringhe deallocate: 0 (46003 interne)


Stringhe allocate: 1 (46083 interne); stringhe deallocate: 0 (46008 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9971017775345965 1 1 0.9971017775345965 0.9976132676273618 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999195993138 0.9999997155317746 0.9999999580606205 0.9999999621610645 0.999999951074245 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788577052e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9972201994306464


ris (2 : 2): [ 1 0.9972201994306464 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46118 interne); stringhe deallocate: 0 (46038 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9969678012852956 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863776 1072693248 1441719070 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46138 interne); stringhe deallocate: 0 (46058 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9992000356848916 1 0 0 0.9971017775345965 0.9968133033122534 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46158 interne); stringhe deallocate: 0 (46078 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.5359030478589e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838464 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9972201994306464


ris (2 : 2): [ 1 0.9972201994306464 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46178 interne); stringhe deallocate: 0 (46098 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9967346279149645 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864496 1072693248 1441719070 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9977267221112958


ris (2 : 2): [ 1 0.9977267221112958 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46198 interne); stringhe deallocate: 0 (46118 interne)


Stringhe allocate: 1 (46198 interne); stringhe deallocate: 0 (46123 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9972201994306464 1 1 0.9972201994306464 0.9977267221112958 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.999999919787921 0.9999997155317746 0.9999999580606205 0.9999999622493848 0.9999999511802372 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553198e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9972201994306464


ris (2 : 2): [ 1 0.9972201994306464 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46233 interne); stringhe deallocate: 0 (46153 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9968133060465121 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863328 1072693248 1441719070 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46253 interne); stringhe deallocate: 0 (46173 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9992406533640382 1 0 0 0.9972201994306464 0.996967375475334 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46273 interne); stringhe deallocate: 0 (46193 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047867184e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79852696 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9972201994306464


ris (2 : 2): [ 1 0.9972201994306464 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46293 interne); stringhe deallocate: 0 (46213 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9967737285621805 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79846680 1072693248 1441719070 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9977267221112958


ris (2 : 2): [ 1 0.9977267221112958 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46313 interne); stringhe deallocate: 0 (46233 interne)


Stringhe allocate: 1 (46313 interne); stringhe deallocate: 0 (46238 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9972201994306464 1 1 0.9972201994306464 0.9977267221112958 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.999999919787921 0.9999997155317746 0.9999999580606205 0.9999999622493848 0.9999999511802372 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553641e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9972781321491433


ris (2 : 2): [ 1 0.9972781321491433 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46348 interne); stringhe deallocate: 0 (46268 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9969673244481374 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853304 1072693248 -732752172 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46368 interne); stringhe deallocate: 0 (46288 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9992406533640382 1 0 0 0.9972201994306464 0.996967375475334 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46388 interne); stringhe deallocate: 0 (46308 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.53590304786067e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79857936 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9972781321491433


ris (2 : 2): [ 1 0.9972781321491433 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46408 interne); stringhe deallocate: 0 (46328 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9969444362650108 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863064 1072693248 -732752172 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9977820138094915


ris (2 : 2): [ 1 0.9977820138094915 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46428 interne); stringhe deallocate: 0 (46348 interne)


Stringhe allocate: 1 (46428 interne); stringhe deallocate: 0 (46353 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9972781321491433 1 1 0.9972781321491433 0.9977820138094915 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999198800276 0.9999997155317746 0.9999999580606205 0.9999999622925166 0.999999951231809 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788581896e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.997305740097532


ris (2 : 2): [ 1 0.997305740097532 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46463 interne); stringhe deallocate: 0 (46383 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9969673244486117 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858512 1072693248 -1170563188 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46483 interne); stringhe deallocate: 0 (46403 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.999260410030766 1 0 0 0.9972781321491433 0.9970424238402575 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46503 interne); stringhe deallocate: 0 (46423 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836816e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79853816 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.997305740097532


ris (2 : 2): [ 1 0.997305740097532 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46523 interne); stringhe deallocate: 0 (46443 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9969678012856793 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79851712 1072693248 -1170563188 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9978081485995556


ris (2 : 2): [ 1 0.9978081485995556 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46543 interne); stringhe deallocate: 0 (46463 interne)


Stringhe allocate: 1 (46543 interne); stringhe deallocate: 0 (46468 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.997305740097532 1 1 0.997305740097532 0.9978081485995556 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.999999919923884 0.9999997155317746 0.9999999580606205 0.9999999623130538 0.9999999512561665 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.45528078856921e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9974262501059388


ris (2 : 2): [ 1 0.9974262501059388 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46578 interne); stringhe deallocate: 0 (46498 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9970421878819753 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864800 1072693248 1955336130 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46598 interne); stringhe deallocate: 0 (46518 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9992697100235709 1 0 0 0.997305740097532 0.9970778586231265 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46618 interne); stringhe deallocate: 0 (46538 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047837259e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838728 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9974262501059388


ris (2 : 2): [ 1 0.9974262501059388 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46638 interne); stringhe deallocate: 0 (46558 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.996813306046068 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79845320 1072693248 1955336130 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9979222072596948


ris (2 : 2): [ 1 0.9979222072596948 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46658 interne); stringhe deallocate: 0 (46578 interne)


Stringhe allocate: 1 (46658 interne); stringhe deallocate: 0 (46583 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9974262501059388 1 1 0.9974262501059388 0.9979222072596948 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999201150381 0.9999997155317746 0.9999999580606205 0.9999999624025686 0.9999999513623263 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552313e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9974429480730099


ris (2 : 2): [ 1 0.9974429480730099 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46693 interne); stringhe deallocate: 0 (46613 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9970774738321566 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864848 1072693248 2033397329 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46713 interne); stringhe deallocate: 0 (46633 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9993102966934685 1 0 0 0.9974262501059388 0.9972325039531633 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46733 interne); stringhe deallocate: 0 (46653 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047865515e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79839008 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9974429480730099


ris (2 : 2): [ 1 0.9974429480730099 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46753 interne); stringhe deallocate: 0 (46673 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.996967324448411 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853528 1072693248 2033397329 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9979380222458708


ris (2 : 2): [ 1 0.9979380222458708 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46773 interne); stringhe deallocate: 0 (46693 interne)


Stringhe allocate: 1 (46773 interne); stringhe deallocate: 0 (46698 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9974429480730099 1 1 0.9974429480730099 0.9979380222458708 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999201414886 0.9999997155317746 0.9999999580606205 0.9999999624149552 0.9999999513770278 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788595556e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9973335841343294


ris (2 : 2): [ 1 0.9973335841343294 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46808 interne); stringhe deallocate: 0 (46728 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9972324459080983 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864168 1072693248 518121134 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46828 interne); stringhe deallocate: 0 (46748 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9993159283828988 1 0 0 0.9974429480730099 0.9972539506287697 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46848 interne); stringhe deallocate: 0 (46768 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047852829e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79856880 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9973335841343294


ris (2 : 2): [ 1 0.9973335841343294 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46868 interne); stringhe deallocate: 0 (46788 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9969673244486046 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863704 1072693248 518121134 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9978345343265741


ris (2 : 2): [ 1 0.9978345343265741 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46888 interne); stringhe deallocate: 0 (46808 interne)


Stringhe allocate: 1 (46888 interne); stringhe deallocate: 0 (46813 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9973335841343294 1 1 0.9973335841343294 0.9978345343265741 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999199680911 0.9999997155317746 0.9999999580606205 0.9999999623337553 0.9999999512807455 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788563291e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9974425334408748


ris (2 : 2): [ 1 0.9974425334408748 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46923 interne); stringhe deallocate: 0 (46843 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9972539035806918 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858872 1072693248 -1701276930 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46943 interne); stringhe deallocate: 0 (46863 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9992791037733074 1 0 0 0.9973335841343294 0.9971136380998815 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46963 interne); stringhe deallocate: 0 (46883 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047835931e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79848856 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9974425334408748


ris (2 : 2): [ 1 0.9974425334408748 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (46983 interne); stringhe deallocate: 0 (46903 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.997042187882359 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863776 1072693248 -1701276930 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9979374829116854


ris (2 : 2): [ 1 0.9979374829116854 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47003 interne); stringhe deallocate: 0 (46923 interne)


Stringhe allocate: 1 (47003 interne); stringhe deallocate: 0 (46928 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9974425334408748 1 1 0.9974425334408748 0.9979374829116854 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999201408319 0.9999997155317746 0.9999999580606205 0.9999999624146476 0.9999999513765265 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552806e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9974425334408748


ris (2 : 2): [ 1 0.9974425334408748 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47038 interne); stringhe deallocate: 0 (46958 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9971132366185476 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79862448 1072693248 -1701276930 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47058 interne); stringhe deallocate: 0 (46978 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9993157064358279 1 0 0 0.9974425334408748 0.9972531893475133 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47078 interne); stringhe deallocate: 0 (46998 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047879175e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838168 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9974425334408748


ris (2 : 2): [ 1 0.9974425334408748 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47098 interne); stringhe deallocate: 0 (47018 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9970774738317125 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863328 1072693248 -1701276930 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9979374829116854


ris (2 : 2): [ 1 0.9979374829116854 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47118 interne); stringhe deallocate: 0 (47038 interne)


Stringhe allocate: 1 (47118 interne); stringhe deallocate: 0 (47043 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9974425334408748 1 1 0.9974425334408748 0.9979374829116854 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999201408319 0.9999997155317746 0.9999999580606205 0.9999999624146476 0.9999999513765265 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552781e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9974958321104371


ris (2 : 2): [ 1 0.9974958321104371 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47153 interne); stringhe deallocate: 0 (47073 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9972529499063754 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864496 1072693248 1629089975 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47173 interne); stringhe deallocate: 0 (47093 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9993157064358279 1 0 0 0.9974425334408748 0.9972531893475133 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47193 interne); stringhe deallocate: 0 (47113 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047846909e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865520 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9974958321104371


ris (2 : 2): [ 1 0.9974958321104371 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47213 interne); stringhe deallocate: 0 (47133 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9972324459083719 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853304 1072693248 1629089975 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.997987654416026


ris (2 : 2): [ 1 0.997987654416026 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47233 interne); stringhe deallocate: 0 (47153 interne)


Stringhe allocate: 1 (47233 interne); stringhe deallocate: 0 (47158 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9974958321104371 1 1 0.9974958321104371 0.997987654416026 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.999999920225202 0.9999997155317746 0.9999999580606205 0.9999999624541573 0.9999999514231367 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788575282e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9975212316938961


ris (2 : 2): [ 1 0.9975212316938961 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47268 interne); stringhe deallocate: 0 (47188 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9972529499059011 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79846680 1072693248 -1520034807 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47288 interne); stringhe deallocate: 0 (47208 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9993335101760107 1 0 0 0.9974958321104371 0.9973211645920367 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47308 interne); stringhe deallocate: 0 (47228 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836424e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79845112 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9975212316938961


ris (2 : 2): [ 1 0.9975212316938961 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47328 interne); stringhe deallocate: 0 (47248 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9972539035806847 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858512 1072693248 -1520034807 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9980113688614325


ris (2 : 2): [ 1 0.9980113688614325 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47348 interne); stringhe deallocate: 0 (47268 interne)


Stringhe allocate: 1 (47348 interne); stringhe deallocate: 0 (47273 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9975212316938961 1 1 0.9975212316938961 0.9980113688614325 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999202653773 0.9999997155317746 0.9999999580606205 0.9999999624729713 0.9999999514451522 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788583566e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9976321020843021


ris (2 : 2): [ 1 0.9976321020843021 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47383 interne); stringhe deallocate: 0 (47303 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9973211376199984 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863064 1072693248 679250359 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47403 interne); stringhe deallocate: 0 (47323 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9993418908739631 1 0 0 0.9975212316938961 0.9973532597353956 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47423 interne); stringhe deallocate: 0 (47343 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836399e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838480 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9976321020843021


ris (2 : 2): [ 1 0.9976321020843021 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47443 interne); stringhe deallocate: 0 (47363 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9971132366189313 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864800 1072693248 679250359 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9981148645377874


ris (2 : 2): [ 1 0.9981148645377874 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47463 interne); stringhe deallocate: 0 (47383 interne)


Stringhe allocate: 1 (47463 interne); stringhe deallocate: 0 (47388 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9976321020843021 1 1 0.9976321020843021 0.9981148645377874 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999204405078 0.9999997155317746 0.9999999580606205 0.9999999625549843 0.9999999515411168 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788577052e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9976474643778795


ris (2 : 2): [ 1 0.9976474643778795 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47498 interne); stringhe deallocate: 0 (47418 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9973530857091237 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79851712 1072693248 1611536149 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47518 interne); stringhe deallocate: 0 (47438 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9993784655927263 1 0 0 0.9976321020843021 0.9974933301305137 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47538 interne); stringhe deallocate: 0 (47458 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.5359030478589e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838464 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9976474643778795


ris (2 : 2): [ 1 0.9976474643778795 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47558 interne); stringhe deallocate: 0 (47478 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9972529499059313 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864848 1072693248 1611536149 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.998129214915306


ris (2 : 2): [ 1 0.998129214915306 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47578 interne); stringhe deallocate: 0 (47498 interne)


Stringhe allocate: 1 (47578 interne); stringhe deallocate: 0 (47503 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9976474643778795 1 1 0.9976474643778795 0.998129214915306 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999204647436 0.9999997155317746 0.9999999580606205 0.9999999625663338 0.999999951554408 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553198e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9975468484810079


ris (2 : 2): [ 1 0.9975468484810079 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47613 interne); stringhe deallocate: 0 (47533 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9974932758341097 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79845320 1072693248 1582204288 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47633 interne); stringhe deallocate: 0 (47553 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9993835405953685 1 0 0 0.9976474643778795 0.9975127555106745 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47653 interne); stringhe deallocate: 0 (47573 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047867184e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79852696 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9975468484810079


ris (2 : 2): [ 1 0.9975468484810079 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47673 interne); stringhe deallocate: 0 (47593 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9972529499061746 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864168 1072693248 1582204288 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9980353110250392


ris (2 : 2): [ 1 0.9980353110250392 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47693 interne); stringhe deallocate: 0 (47613 interne)


Stringhe allocate: 1 (47693 interne); stringhe deallocate: 0 (47618 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9975468484810079 1 1 0.9975468484810079 0.9980353110250392 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999203058757 0.9999997155317746 0.9999999580606205 0.9999999624919365 0.999999951467369 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788553641e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.997647082912246


ris (2 : 2): [ 1 0.997647082912246 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47728 interne); stringhe deallocate: 0 (47648 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9975123493199636 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853528 1072693248 -1824400821 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47748 interne); stringhe deallocate: 0 (47668 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9993503560610647 1 0 0 0.9975468484810079 0.9973856670861039 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47768 interne); stringhe deallocate: 0 (47688 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.53590304786067e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79857936 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.997647082912246


ris (2 : 2): [ 1 0.997647082912246 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47788 interne); stringhe deallocate: 0 (47708 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9973211376199913 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858872 1072693248 -1824400821 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9981287253907084


ris (2 : 2): [ 1 0.9981287253907084 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47808 interne); stringhe deallocate: 0 (47728 interne)


Stringhe allocate: 1 (47808 interne); stringhe deallocate: 0 (47733 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.997647082912246 1 1 0.997647082912246 0.9981287253907084 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999204641419 0.9999997155317746 0.9999999580606205 0.9999999625660521 0.9999999515539546 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788581896e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.997647082912246


ris (2 : 2): [ 1 0.997647082912246 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47843 interne); stringhe deallocate: 0 (47763 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9973855106363558 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863704 1072693248 -1824400821 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47863 interne); stringhe deallocate: 0 (47783 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9993833405875694 1 0 0 0.997647082912246 0.9975120659782778 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47883 interne); stringhe deallocate: 0 (47803 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047836816e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79853816 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.997647082912246


ris (2 : 2): [ 1 0.997647082912246 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47903 interne); stringhe deallocate: 0 (47823 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9973530857095074 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79862448 1072693248 -1824400821 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9981287253907084


ris (2 : 2): [ 1 0.9981287253907084 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47923 interne); stringhe deallocate: 0 (47843 interne)


Stringhe allocate: 1 (47923 interne); stringhe deallocate: 0 (47848 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.997647082912246 1 1 0.997647082912246 0.9981287253907084 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999204641419 0.9999997155317746 0.9999999580606205 0.9999999625660521 0.9999999515539546 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.45528078856921e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9976961182113107


ris (2 : 2): [ 1 0.9976961182113107 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47958 interne); stringhe deallocate: 0 (47878 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9975118724828054 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863776 1072693248 1759644178 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47978 interne); stringhe deallocate: 0 (47898 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9993833405875694 1 0 0 0.997647082912246 0.9975120659782778 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (47998 interne); stringhe deallocate: 0 (47918 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047837259e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838728 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9976961182113107


ris (2 : 2): [ 1 0.9976961182113107 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48018 interne); stringhe deallocate: 0 (47938 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161443525709002e-314 0 0.9974932758336657 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864496 1072693248 1759644178 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9981742502801676


ris (2 : 2): [ 1 0.9981742502801676 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48038 interne); stringhe deallocate: 0 (47958 interne)


Stringhe allocate: 1 (48038 interne); stringhe deallocate: 0 (47963 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9976961182113107 1 1 0.9976961182113107 0.9981742502801676 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999205414523 0.9999997155317746 0.9999999580606205 0.9999999626022565 0.9999999515960956 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552313e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9977194860773616


ris (2 : 2): [ 1 0.9977194860773616 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48073 interne); stringhe deallocate: 0 (47993 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9975118724832797 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863328 1072693248 1785272353 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48093 interne); stringhe deallocate: 0 (48013 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9993993844461536 1 0 0 0.9976961182113107 0.9975736347263212 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48113 interne); stringhe deallocate: 0 (48033 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047865515e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79839008 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9977194860773616


ris (2 : 2): [ 1 0.9977194860773616 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48133 interne); stringhe deallocate: 0 (48053 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450399150267e-314 0 0.9975123493202371 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79846680 1072693248 1785272353 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9981957682621669


ris (2 : 2): [ 1 0.9981957682621669 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48153 interne); stringhe deallocate: 0 (48073 interne)


Stringhe allocate: 1 (48153 interne); stringhe deallocate: 0 (48078 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9977194860773616 1 1 0.9977194860773616 0.9981957682621669 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999205782681 0.9999997155317746 0.9999999580606205 0.9999999626194975 0.9999999516160013 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788595556e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9978214879246048


ris (2 : 2): [ 1 0.9978214879246048 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48188 interne); stringhe deallocate: 0 (48108 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9975733844762136 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853304 1072693248 1413233480 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48208 interne); stringhe deallocate: 0 (48128 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9994069367206797 1 0 0 0.9977194860773616 0.9976027049828466 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48228 interne); stringhe deallocate: 0 (48148 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047852829e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79856880 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9978214879246048


ris (2 : 2): [ 1 0.9978214879246048 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48248 interne); stringhe deallocate: 0 (48168 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161442668011041e-314 0 0.9973855106363487 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79863064 1072693248 1413233480 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9982896780283512


ris (2 : 2): [ 1 0.9982896780283512 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48268 interne); stringhe deallocate: 0 (48188 interne)


Stringhe allocate: 1 (48268 interne); stringhe deallocate: 0 (48193 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9978214879246048 1 1 0.9978214879246048 0.9982896780283512 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999207387718 0.9999997155317746 0.9999999580606205 0.9999999626946621 0.9999999517027791 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788563291e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9978356213854599


ris (2 : 2): [ 1 0.9978356213854599 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48303 interne); stringhe deallocate: 0 (48223 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9976024715433383 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79858512 1072693248 -132887319 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48323 interne); stringhe deallocate: 0 (48243 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9994398960658812 1 0 0 0.9978214879246048 0.9977295740942325 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79843208 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48343 interne); stringhe deallocate: 0 (48263 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047835931e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79848856 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9978356213854599


ris (2 : 2): [ 1 0.9978356213854599 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48363 interne); stringhe deallocate: 0 (48283 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441264864607e-314 0 0.9975118724831891 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79851712 1072693248 -132887319 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9983026992712936


ris (2 : 2): [ 1 0.9983026992712936 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48383 interne); stringhe deallocate: 0 (48303 interne)


Stringhe allocate: 1 (48383 interne); stringhe deallocate: 0 (48308 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9978356213854599 1 1 0.9978356213854599 0.9983026992712936 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999207609855 0.9999997155317746 0.9999999580606205 0.9999999627050651 0.9999999517147992 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552806e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9977430537729047


ris (2 : 2): [ 1 0.9977430537729047 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48418 interne); stringhe deallocate: 0 (48338 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.997729310226946 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864800 1072693248 -684162715 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48438 interne); stringhe deallocate: 0 (48358 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9994444694096977 1 0 0 0.9978356213854599 0.9977471686809912 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79842904 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48458 interne); stringhe deallocate: 0 (48378 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047879175e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79838168 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9977430537729047


ris (2 : 2): [ 1 0.9977430537729047 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48478 interne); stringhe deallocate: 0 (48398 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161441766835303e-314 0 0.9975118724828356 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79845320 1072693248 -684162715 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9982174928892754


ris (2 : 2): [ 1 0.9982174928892754 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48498 interne); stringhe deallocate: 0 (48418 interne)


Stringhe allocate: 1 (48498 interne); stringhe deallocate: 0 (48423 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9977430537729047 1 1 0.9977430537729047 0.9982174928892754 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999206153816 0.9999997155317746 0.9999999580606205 0.9999999626368779 0.9999999516360899 ]
------------------------------ Fine f_aux5_d


*** target ***

*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.455280788552781e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865840 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9978352704333333


ris (2 : 2): [ 1 0.9978352704333333 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48533 interne); stringhe deallocate: 0 (48453 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161450837880561e-314 0 0.9977469532022738 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79864848 1072693248 1000984244 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48553 interne); stringhe deallocate: 0 (48473 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
st = 1
end = 7


r (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (7 : 7): [ 1.0000000177281 0.9994145651326842 1 0 0 0.9977430537729047 0.9976320580219596 ]
val = 0


valr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (7 : 7): [ 79851248 1 1 0 0 1 -1 ]
val = 0


signr (7 : 7): [ 0 0 0 0 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 1


ris (2 : 2): [ 1 1 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48573 interne); stringhe deallocate: 0 (48493 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
st = 1
end = 1


r (1 : 1): [ 2 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (1 : 1): [ 8.535903047846909e-307 ]
val = 0


valr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (1 : 1): [ 79865520 ]
val = 0


signr (1 : 1): [ 0 ]
------------------------------ Fine InitVett_i


***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9978352704333333


ris (2 : 2): [ 1 0.9978352704333333 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48593 interne); stringhe deallocate: 0 (48513 interne)


*** boole_result ***
37: copia_v_i	<=>	ris[st:end] <- v[st:end]
ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
st = 1
end = 3


r (3 : 3): [ -3 1 4 ]
------------------------------ Fine copia_v_i

41: InitVett_d
valr (3 : 3): [ 2.161451292420955e-314 0 0.9975733844764871 ]
val = 0


valr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_d

42: InitVett_i
signr (3 : 3): [ 79853528 1072693248 1000984244 ]
val = 0


signr (3 : 3): [ 0 0 0 ]
------------------------------ Fine InitVett_i


***next_op***

***next_op***
109: vettore2s_d		<=>	ris <- c(el1, el2)
el1 = 1, el2 = 0.9983022549628111


ris (2 : 2): [ 1 0.9983022549628111 ]
------------------------------ Fine vettore2s_d


Stringhe allocate: 1 (48613 interne); stringhe deallocate: 0 (48533 interne)


Stringhe allocate: 1 (48613 interne); stringhe deallocate: 0 (48538 interne)

29: f_aux5_d	<=>	ris <- 1 / (1 + exp(-alpha * (targ - theta))) * (1 - xmin) + xmin
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
ris (5 : 5): [ 0.9978352704333333 1 1 0.9978352704333333 0.9983022549628111 ]
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]


targetT (5 : 5): [ 0.9999999207604341 0.9999997155317746 0.9999999580606205 0.9999999627048068 0.9999999517143891 ]
------------------------------ Fine f_aux5_d


Stringhe allocate: 1 (48618 interne); stringhe deallocate: 0 (48558 interne)

119: moltiplica1_mv_d	m <- m * v
ris (5 x 51 : 5 x 51): [
	 0.8988629876690203 0.9088602162310131 0.9178692450478804 0.9259877520468786 0.9333037610254185 0.9398965957896969 0.9458377397351971 0.9511916106599948 0.9560162590546102 0.9603639974098385 0.9642819673468792 0.9678126507066227 0.9709943301315523 0.9738615041287936 0.976445261111056 0.978773616468585 0.9808718163251727 0.9827626112705674 0.9844665030364407 0.986001966789958 0.987385651454795 0.988632560231326 0.9897562132730993 0.9907687942833026 0.9916812826206146 0.992503572346754 0.9932445795064697 0.9939123388031442 0.9945140907182117 0.9950563600189855 0.9955450265061239 0.9959853887678262 0.996382221632023 0.9967398279395014 0.9970620851993289 0.9973524876324486 0.9976141840593186 0.9978500120424044 0.9980625286537255 0.9982540382010638 0.9984266172134684 0.9985821369569683 0.9987222837246311 0.9988485771209702 0.9989623865389555 0.9990649460082891 0.999157367575942 0.9992406533640382 0.9993157064358279 0.9993833405875694 0.9994442891724921
	 0.86013003877782 0.8713182402201841 0.8816114953424294 0.8910813911087466 0.8997937881502626 0.9078092789309532 0.9151836091123239 0.9219680652500415 0.9282098314786399 0.9339523176649502 0.9392354613124767 0.9440960053163855 0.94856775350082 0.9526818057157392 0.9564667741283159 0.9599489822131457 0.9631526478251922 0.966100051628693 0.9688116920534069 0.9713064278558814 0.9736016092772177 0.9757131987095025 0.9776558817101083 0.9794431691359407 0.9810874911079466 0.982600283459385 0.9839920672690843 0.9852725220328192 0.986450552981696 0.9875343530157275 0.9885314596833295 0.9894488076030172 0.9902927766918804 0.9910692365362535 0.9917835872131672 0.9924407968464859 0.9930454361589214 0.993601710260225 0.9941134878926367 0.9945843283369841 0.9950175061665595 0.9954160340209279 0.9957826835580549 0.9961200047304695 0.9964303435195234 0.9967158582510834 0.9969785346061285 0.9972201994306464 0.9974425334408748 0.997647082912246 0.9978352704333333
	 0.7529666664997292 0.7772968698903406 0.7992308018940932 0.8190044705187299 0.8368306389479051 0.8529011156458609 0.8673888179429433 0.8804496326153287 0.8922240932170453 0.9028388922122795 0.9124082441784154 0.9210351147477877 0.9288123285114854 0.9358235678061828 0.9421442731308795 0.9478424548819806 0.9529794251409351 0.9576104573884209 0.9617853812435605 0.9655491186275265 0.9689421671206203 0.9720010357137194 0.9747586376427495 0.9772446445330573 0.9794858056642548 0.9815062357908055 0.9833276746152835 0.9849697207062212 0.9864500423774893 0.9877845677982555 0.9889876563790945 0.9900722532783532 0.9910500286912506 0.9919315034204517 0.9927261620792512 0.9934425551454228 0.9940883909638281 0.9946706186877287 0.9951955030512431 0.9956686917774964 0.9960952763477703 0.9964798467855248 0.9968265410447658 0.9971390895341724 0.9974208552560631 0.997674869992091 0.9979038669250265 0.998110310047634 0.9982964206750802 0.9984642013461481 0.9986154573704293
	 0.6820456255132146 0.7120119975283384 0.7391541215590674 0.7637381740355298 0.7860052450763307 0.8061737033233561 0.8244413370182959 0.8409872935642062 0.8559738363172001 0.8695479358238942 0.881842711101349 0.8929787350885311 0.9030652170681047 0.9122010736520044 0.9204758988321633 0.9279708426084286 0.934759406809461 0.9409081659105723 0.9464774199170654 0.9515217857155313 0.9560907326921956 0.9602290678708986 0.9639773753282781 0.9673724141953561 0.9704474791486127 0.9732327269257869 0.975755472068463 0.978040454791724 0.9801100836078092 0.9819846550831389 0.9836825528838198 0.9852204280616326 0.9866133623485358 0.9878750160610847 0.9890177620652414 0.9900528071153442 0.9909903017571906 0.9918394398730351 0.9926085488447238 0.9933051712191824 0.9939361386771388 0.9945076390304812 0.9950252769052834 0.9954941287056079 0.9959187923971098 0.9963034325986598 0.9966518214241963 0.996967375475334 0.9972531893475133 0.9975120659782778 0.9977465441353032
	 0.8224436778595854 0.8420707449923151 0.8595282895053366 0.8750561044296381 0.8888674867308654 0.9011521622814869 0.912078888354994 0.9217977699748405 0.9304423208572022 0.9381312968959068 0.9449703271796699 0.9510533648376008 0.9564639775808986 0.9612764956325818 0.9655570327928029 0.9693643946531331 0.9727508864280438 0.9757630314959165 0.9784422105172017 0.9808252299074808 0.9829448274734618 0.9848301221572076 0.9865070140664003 0.9879985402857122 0.9893251913570288 0.9905051927760535 0.9915547553722929 0.9924882980119953 0.9933186456834297 0.9940572056857178 0.9947141243416454 0.9952984263873262 0.9958181389536202 0.9962804018425377 0.9966915656135884 0.997057278827567 0.9973825656463229 0.9976718948545682 0.9979292412519397 0.9981581402587137 0.9983617364853425 0.9985428269330577 0.9987038994190275 0.9988471667539516 0.9989745971416228 0.9990879412180842 0.999188756101844 0.9992784267855505 0.9993581851630039 0.9994291269528987 0.9994922267517936
 ]
parm1[j][i] (5 : 5): [ 12.67431725 9.032985081 12.19219754 9.171903361 10.26385753 ]


ris (5 x 51 : 5 x 51): [
	 11.39247467 11.51918271641546 11.63336600575483 11.73626253905648 11.82898795785434 11.91254763723363 11.98784758042682 12.05570423904326 12.11685336341632 12.17195797865047 12.22161557260849 12.26636457361917 12.30669018803853 12.34302966089051 12.37577701658061 12.40528733105267 12.43188058168897 12.4558451166816 12.47744078148194 12.49690173621989 12.514438994636 12.53024271205156 12.54448424718192 12.55731802014656 12.56888318682058 12.57930514768109 12.58869690750785 12.59716030068054 12.6047870953579 12.61165998851084 12.61785350259827 12.62343479360801 12.62846437922407 12.63299679501566 12.63708118576282 12.64076183833035 12.6440786618677 12.64706762054175 12.64976112349453 12.6521883762539 12.65437569740781 12.65634680397557 12.65812306857049 12.65972375114227 12.66116620781185 12.66246607906318 12.66363745933235 12.6646930498331 12.66564429627555 12.66650151297166 12.6672739946729
	 7.769541808 7.870604664712097 7.963583484666266 8.049124911842034 8.127823864337795 8.200227672976668 8.266839887487357 8.328123778562059 8.384505559784078 8.436377351832867 8.484099909581754 8.528005131054606 8.568398365690593 8.605560537970412 8.639750101173274 8.67120483485248 8.700143498530608 8.726767353115314 8.75126156061679 8.77379647190158 8.794528811438699 8.813602767277724 8.831150993839309 8.847295534492311 8.8621486703338 8.875813701074996 8.888385663463986 8.8999519922417 8.910593128227861 8.920383077766052 8.929389927418667 8.937676317491293 8.945299877679821 8.952313627870037 8.958766346877201 8.964702911690059 8.970164609578674 8.975189425236698 8.979812304955061 8.984065399664383 8.987978288536358 8.991578184699231 8.994890124498053 8.99793714161598 9.00074042726756 9.003319477578147 9.0056922291744 9.007875183928874 9.009883523726264 9.011731216049489 9.0134311111199
	 9.180318338999999 9.476956984926712 9.744379816745392 9.985464290707462 10.20280445757728 10.39873888404072 10.57537581234746 10.73461584486651 10.87817239444959 11.00759012064688 11.1242615501478 11.2294420602816 11.32426338679941 11.40974580128057 11.4868090891914 11.55628244671965 11.61891340287392 11.67537586284938 11.7262773592057 11.7721655888797 11.8135343063703 11.85082863650626 11.88444986396168 11.91475975105412 11.94208443028465 11.96671791350332 11.98892525545838 12.00894540576888 12.02699378000772 12.04326457755986 12.05793287119556 12.0711564908426 12.0830777218264 12.09382483585133 12.10351347119629 12.11224787697534 12.12012203485174 12.1272206702748 12.13362016412043 12.13938937454461 12.14459037789291 12.14927913663805 12.1535061015327 12.15731675445638 12.16075209779767 12.16384909563739 12.1666410714798 12.1691580668114 12.17142716434552 12.17347277943057 12.17531692275772
	 6.255656565 6.530505233202491 6.779450171824612 7.004932725360479 7.209164149079227 7.394147299061307 7.561696269945442 7.713454184399836 7.850909306245792 7.975409635133788 8.088176125823816 8.190314661660027 8.282826899629145 8.366620093336628 8.442515990218215 8.511258890230248 8.573522945042061 8.629918769307523 8.68099942884794 8.727265864469002 8.769171804600502 8.807128214934991 8.841507328701393 8.872646297097072 8.900850495677139 8.92639651912582 8.949534893778878 8.970492534498181 8.989474969992456 9.006668358407469 9.022241312952167 9.036346555464347 9.049122414132047 9.060694180058592 9.071175335974886 9.080668669148709 9.089267279405181 9.097055492143849 9.104109685306256 9.1104990384039 9.116286210952211 9.121527956963845 9.126275681527524 9.130575944930731 9.134470919270113 9.137998802027486 9.141194190667358 9.144088421929565 9.146709879144426 9.14908427058422 9.151234881580722
	 8.441444735999999 8.642894156782083 8.822075906487369 8.981451186622607 9.123209246854767 9.249297406508621 9.361447766196433 9.461200982493475 9.54992742116087 9.628845975773718 9.699040808249619 9.761476240120246 9.817009998467457 9.866404998110486 9.910339821674867 9.94941804137445 9.984176510478651 10.01509273831499 10.04259145008683 10.06705042159988 10.08880566903804 10.10815606507407 10.12536744472324 10.14067625734051 10.15429281492853 10.1664041813786 10.17717674233522 10.1867584909873 10.19528106118727 10.20286153582811 10.20960405532135 10.21560124827271 10.2209355040097 10.22568010444296 10.22990023081052 10.23365385913563 10.23699255669973 10.23996219047243 10.24260355723091 10.24495294402519 10.24704262668896 10.24890131324435 10.25055453829235 10.25202501380671 10.25333294115076 10.25449628860343 10.25553103820725 10.25645140532943 10.25727003395243 10.25799817037683 10.25864581772286
 ]
------------------------------ Fine moltiplica1_mv_d


*** write_m_d ***
ris (5 x 51 : 5 x 51): [
	 11.39247467 11.51918271641546 11.63336600575483 11.73626253905648 11.82898795785434 11.91254763723363 11.98784758042682 12.05570423904326 12.11685336341632 12.17195797865047 12.22161557260849 12.26636457361917 12.30669018803853 12.34302966089051 12.37577701658061 12.40528733105267 12.43188058168897 12.4558451166816 12.47744078148194 12.49690173621989 12.514438994636 12.53024271205156 12.54448424718192 12.55731802014656 12.56888318682058 12.57930514768109 12.58869690750785 12.59716030068054 12.6047870953579 12.61165998851084 12.61785350259827 12.62343479360801 12.62846437922407 12.63299679501566 12.63708118576282 12.64076183833035 12.6440786618677 12.64706762054175 12.64976112349453 12.6521883762539 12.65437569740781 12.65634680397557 12.65812306857049 12.65972375114227 12.66116620781185 12.66246607906318 12.66363745933235 12.6646930498331 12.66564429627555 12.66650151297166 12.6672739946729
	 7.769541808 7.870604664712097 7.963583484666266 8.049124911842034 8.127823864337795 8.200227672976668 8.266839887487357 8.328123778562059 8.384505559784078 8.436377351832867 8.484099909581754 8.528005131054606 8.568398365690593 8.605560537970412 8.639750101173274 8.67120483485248 8.700143498530608 8.726767353115314 8.75126156061679 8.77379647190158 8.794528811438699 8.813602767277724 8.831150993839309 8.847295534492311 8.8621486703338 8.875813701074996 8.888385663463986 8.8999519922417 8.910593128227861 8.920383077766052 8.929389927418667 8.937676317491293 8.945299877679821 8.952313627870037 8.958766346877201 8.964702911690059 8.970164609578674 8.975189425236698 8.979812304955061 8.984065399664383 8.987978288536358 8.991578184699231 8.994890124498053 8.99793714161598 9.00074042726756 9.003319477578147 9.0056922291744 9.007875183928874 9.009883523726264 9.011731216049489 9.0134311111199
	 9.180318338999999 9.476956984926712 9.744379816745392 9.985464290707462 10.20280445757728 10.39873888404072 10.57537581234746 10.73461584486651 10.87817239444959 11.00759012064688 11.1242615501478 11.2294420602816 11.32426338679941 11.40974580128057 11.4868090891914 11.55628244671965 11.61891340287392 11.67537586284938 11.7262773592057 11.7721655888797 11.8135343063703 11.85082863650626 11.88444986396168 11.91475975105412 11.94208443028465 11.96671791350332 11.98892525545838 12.00894540576888 12.02699378000772 12.04326457755986 12.05793287119556 12.0711564908426 12.0830777218264 12.09382483585133 12.10351347119629 12.11224787697534 12.12012203485174 12.1272206702748 12.13362016412043 12.13938937454461 12.14459037789291 12.14927913663805 12.1535061015327 12.15731675445638 12.16075209779767 12.16384909563739 12.1666410714798 12.1691580668114 12.17142716434552 12.17347277943057 12.17531692275772
	 6.255656565 6.530505233202491 6.779450171824612 7.004932725360479 7.209164149079227 7.394147299061307 7.561696269945442 7.713454184399836 7.850909306245792 7.975409635133788 8.088176125823816 8.190314661660027 8.282826899629145 8.366620093336628 8.442515990218215 8.511258890230248 8.573522945042061 8.629918769307523 8.68099942884794 8.727265864469002 8.769171804600502 8.807128214934991 8.841507328701393 8.872646297097072 8.900850495677139 8.92639651912582 8.949534893778878 8.970492534498181 8.989474969992456 9.006668358407469 9.022241312952167 9.036346555464347 9.049122414132047 9.060694180058592 9.071175335974886 9.080668669148709 9.089267279405181 9.097055492143849 9.104109685306256 9.1104990384039 9.116286210952211 9.121527956963845 9.126275681527524 9.130575944930731 9.134470919270113 9.137998802027486 9.141194190667358 9.144088421929565 9.146709879144426 9.14908427058422 9.151234881580722
	 8.441444735999999 8.642894156782083 8.822075906487369 8.981451186622607 9.123209246854767 9.249297406508621 9.361447766196433 9.461200982493475 9.54992742116087 9.628845975773718 9.699040808249619 9.761476240120246 9.817009998467457 9.866404998110486 9.910339821674867 9.94941804137445 9.984176510478651 10.01509273831499 10.04259145008683 10.06705042159988 10.08880566903804 10.10815606507407 10.12536744472324 10.14067625734051 10.15429281492853 10.1664041813786 10.17717674233522 10.1867584909873 10.19528106118727 10.20286153582811 10.20960405532135 10.21560124827271 10.2209355040097 10.22568010444296 10.22990023081052 10.23365385913563 10.23699255669973 10.23996219047243 10.24260355723091 10.24495294402519 10.24704262668896 10.24890131324435 10.25055453829235 10.25202501380671 10.25333294115076 10.25449628860343 10.25553103820725 10.25645140532943 10.25727003395243 10.25799817037683 10.25864581772286
 ]

Stringhe allocate: 1 (48618 interne); stringhe deallocate: 0 (48558 interne)


*** write_vn_d ***
parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]

Stringhe allocate: 1 (48618 interne); stringhe deallocate: 0 (48558 interne)


*** write_vn_d ***
parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]

Stringhe allocate: 1 (48618 interne); stringhe deallocate: 0 (48558 interne)


*** write_vn_d ***
parm1[j][i] (5 : 5): [ 1.040829206 0.833709414 1.036836698 0.989892399 1.171423905 ]

Stringhe allocate: 1 (48618 interne); stringhe deallocate: 0 (48558 interne)


*** write_vn_d ***
parm1[j][i] (5 : 5): [ 0.6642835671483607 0.3855657655547057 0.5686263953856509 0.6044709965626511 0.7697130160769097 ]

Stringhe allocate: 1 (48618 interne); stringhe deallocate: 0 (48558 interne)


*** write_vn_d ***
parm1[j][i] (5 : 5): [ 12.67431725 9.032985081 12.19219754 9.171903361 10.26385753 ]

Stringhe allocate: 1 (48618 interne); stringhe deallocate: 0 (48558 interne)


*** write_vn_d ***
parm1[j][i] (5 : 5): [ 0.8988629876690203 0.86013003877782 0.7529666664997292 0.6820456255132146 0.8224436778595854 ]

Stringhe allocate: 1 (48618 interne); stringhe deallocate: 0 (48558 interne)


Stringhe allocate: 1 (48623 interne); stringhe deallocate: 0 (48593 interne)

Trasformo la lista ... ris (5 : 5): {
	ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
	ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
	ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
	ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
	ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
}

Trasformo il vettore ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
Trasformo il vettore ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
Trasformo il vettore ACCEDIlst(ris, i, vi) (7 : 7): [ -3 1 -3 -1 -1 2 4 ]
Trasformo il vettore ACCEDIlst(ris, i, vi) (1 : 1): [ 2 ]
Trasformo il vettore ACCEDIlst(ris, i, vi) (3 : 3): [ -3 1 4 ]
bene
------------------------------ Fine daLISTA

Trasformo la lista ... ris (5 : 5): {
	ris (5 x 51 : 5 x 51): [
	 11.39247467 11.51918271641546 11.63336600575483 11.73626253905648 11.82898795785434 11.91254763723363 11.98784758042682 12.05570423904326 12.11685336341632 12.17195797865047 12.22161557260849 12.26636457361917 12.30669018803853 12.34302966089051 12.37577701658061 12.40528733105267 12.43188058168897 12.4558451166816 12.47744078148194 12.49690173621989 12.514438994636 12.53024271205156 12.54448424718192 12.55731802014656 12.56888318682058 12.57930514768109 12.58869690750785 12.59716030068054 12.6047870953579 12.61165998851084 12.61785350259827 12.62343479360801 12.62846437922407 12.63299679501566 12.63708118576282 12.64076183833035 12.6440786618677 12.64706762054175 12.64976112349453 12.6521883762539 12.65437569740781 12.65634680397557 12.65812306857049 12.65972375114227 12.66116620781185 12.66246607906318 12.66363745933235 12.6646930498331 12.66564429627555 12.66650151297166 12.6672739946729
	 7.769541808 7.870604664712097 7.963583484666266 8.049124911842034 8.127823864337795 8.200227672976668 8.266839887487357 8.328123778562059 8.384505559784078 8.436377351832867 8.484099909581754 8.528005131054606 8.568398365690593 8.605560537970412 8.639750101173274 8.67120483485248 8.700143498530608 8.726767353115314 8.75126156061679 8.77379647190158 8.794528811438699 8.813602767277724 8.831150993839309 8.847295534492311 8.8621486703338 8.875813701074996 8.888385663463986 8.8999519922417 8.910593128227861 8.920383077766052 8.929389927418667 8.937676317491293 8.945299877679821 8.952313627870037 8.958766346877201 8.964702911690059 8.970164609578674 8.975189425236698 8.979812304955061 8.984065399664383 8.987978288536358 8.991578184699231 8.994890124498053 8.99793714161598 9.00074042726756 9.003319477578147 9.0056922291744 9.007875183928874 9.009883523726264 9.011731216049489 9.0134311111199
	 9.180318338999999 9.476956984926712 9.744379816745392 9.985464290707462 10.20280445757728 10.39873888404072 10.57537581234746 10.73461584486651 10.87817239444959 11.00759012064688 11.1242615501478 11.2294420602816 11.32426338679941 11.40974580128057 11.4868090891914 11.55628244671965 11.61891340287392 11.67537586284938 11.7262773592057 11.7721655888797 11.8135343063703 11.85082863650626 11.88444986396168 11.91475975105412 11.94208443028465 11.96671791350332 11.98892525545838 12.00894540576888 12.02699378000772 12.04326457755986 12.05793287119556 12.0711564908426 12.0830777218264 12.09382483585133 12.10351347119629 12.11224787697534 12.12012203485174 12.1272206702748 12.13362016412043 12.13938937454461 12.14459037789291 12.14927913663805 12.1535061015327 12.15731675445638 12.16075209779767 12.16384909563739 12.1666410714798 12.1691580668114 12.17142716434552 12.17347277943057 12.17531692275772
	 6.255656565 6.530505233202491 6.779450171824612 7.004932725360479 7.209164149079227 7.394147299061307 7.561696269945442 7.713454184399836 7.850909306245792 7.975409635133788 8.088176125823816 8.190314661660027 8.282826899629145 8.366620093336628 8.442515990218215 8.511258890230248 8.573522945042061 8.629918769307523 8.68099942884794 8.727265864469002 8.769171804600502 8.807128214934991 8.841507328701393 8.872646297097072 8.900850495677139 8.92639651912582 8.949534893778878 8.970492534498181 8.989474969992456 9.006668358407469 9.022241312952167 9.036346555464347 9.049122414132047 9.060694180058592 9.071175335974886 9.080668669148709 9.089267279405181 9.097055492143849 9.104109685306256 9.1104990384039 9.116286210952211 9.121527956963845 9.126275681527524 9.130575944930731 9.134470919270113 9.137998802027486 9.141194190667358 9.144088421929565 9.146709879144426 9.14908427058422 9.151234881580722
	 8.441444735999999 8.642894156782083 8.822075906487369 8.981451186622607 9.123209246854767 9.249297406508621 9.361447766196433 9.461200982493475 9.54992742116087 9.628845975773718 9.699040808249619 9.761476240120246 9.817009998467457 9.866404998110486 9.910339821674867 9.94941804137445 9.984176510478651 10.01509273831499 10.04259145008683 10.06705042159988 10.08880566903804 10.10815606507407 10.12536744472324 10.14067625734051 10.15429281492853 10.1664041813786 10.17717674233522 10.1867584909873 10.19528106118727 10.20286153582811 10.20960405532135 10.21560124827271 10.2209355040097 10.22568010444296 10.22990023081052 10.23365385913563 10.23699255669973 10.23996219047243 10.24260355723091 10.24495294402519 10.24704262668896 10.24890131324435 10.25055453829235 10.25202501380671 10.25333294115076 10.25449628860343 10.25553103820725 10.25645140532943 10.25727003395243 10.25799817037683 10.25864581772286
 ]
	tmpm1_d (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 1 0 0 1 0
	 1 1 0 -1 0
	 0 1 0 0 0
	 -1 0 0 1 0
 ]
	parm1[j][i] (5 : 5): [ 1.040829206 0.833709414 1.036836698 0.989892399 1.171423905 ]
	parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
	parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
}

Trasformo la matrice
ris (5 x 51 : 5 x 51): [
	 11.39247467 11.51918271641546 11.63336600575483 11.73626253905648 11.82898795785434 11.91254763723363 11.98784758042682 12.05570423904326 12.11685336341632 12.17195797865047 12.22161557260849 12.26636457361917 12.30669018803853 12.34302966089051 12.37577701658061 12.40528733105267 12.43188058168897 12.4558451166816 12.47744078148194 12.49690173621989 12.514438994636 12.53024271205156 12.54448424718192 12.55731802014656 12.56888318682058 12.57930514768109 12.58869690750785 12.59716030068054 12.6047870953579 12.61165998851084 12.61785350259827 12.62343479360801 12.62846437922407 12.63299679501566 12.63708118576282 12.64076183833035 12.6440786618677 12.64706762054175 12.64976112349453 12.6521883762539 12.65437569740781 12.65634680397557 12.65812306857049 12.65972375114227 12.66116620781185 12.66246607906318 12.66363745933235 12.6646930498331 12.66564429627555 12.66650151297166 12.6672739946729
	 7.769541808 7.870604664712097 7.963583484666266 8.049124911842034 8.127823864337795 8.200227672976668 8.266839887487357 8.328123778562059 8.384505559784078 8.436377351832867 8.484099909581754 8.528005131054606 8.568398365690593 8.605560537970412 8.639750101173274 8.67120483485248 8.700143498530608 8.726767353115314 8.75126156061679 8.77379647190158 8.794528811438699 8.813602767277724 8.831150993839309 8.847295534492311 8.8621486703338 8.875813701074996 8.888385663463986 8.8999519922417 8.910593128227861 8.920383077766052 8.929389927418667 8.937676317491293 8.945299877679821 8.952313627870037 8.958766346877201 8.964702911690059 8.970164609578674 8.975189425236698 8.979812304955061 8.984065399664383 8.987978288536358 8.991578184699231 8.994890124498053 8.99793714161598 9.00074042726756 9.003319477578147 9.0056922291744 9.007875183928874 9.009883523726264 9.011731216049489 9.0134311111199
	 9.180318338999999 9.476956984926712 9.744379816745392 9.985464290707462 10.20280445757728 10.39873888404072 10.57537581234746 10.73461584486651 10.87817239444959 11.00759012064688 11.1242615501478 11.2294420602816 11.32426338679941 11.40974580128057 11.4868090891914 11.55628244671965 11.61891340287392 11.67537586284938 11.7262773592057 11.7721655888797 11.8135343063703 11.85082863650626 11.88444986396168 11.91475975105412 11.94208443028465 11.96671791350332 11.98892525545838 12.00894540576888 12.02699378000772 12.04326457755986 12.05793287119556 12.0711564908426 12.0830777218264 12.09382483585133 12.10351347119629 12.11224787697534 12.12012203485174 12.1272206702748 12.13362016412043 12.13938937454461 12.14459037789291 12.14927913663805 12.1535061015327 12.15731675445638 12.16075209779767 12.16384909563739 12.1666410714798 12.1691580668114 12.17142716434552 12.17347277943057 12.17531692275772
	 6.255656565 6.530505233202491 6.779450171824612 7.004932725360479 7.209164149079227 7.394147299061307 7.561696269945442 7.713454184399836 7.850909306245792 7.975409635133788 8.088176125823816 8.190314661660027 8.282826899629145 8.366620093336628 8.442515990218215 8.511258890230248 8.573522945042061 8.629918769307523 8.68099942884794 8.727265864469002 8.769171804600502 8.807128214934991 8.841507328701393 8.872646297097072 8.900850495677139 8.92639651912582 8.949534893778878 8.970492534498181 8.989474969992456 9.006668358407469 9.022241312952167 9.036346555464347 9.049122414132047 9.060694180058592 9.071175335974886 9.080668669148709 9.089267279405181 9.097055492143849 9.104109685306256 9.1104990384039 9.116286210952211 9.121527956963845 9.126275681527524 9.130575944930731 9.134470919270113 9.137998802027486 9.141194190667358 9.144088421929565 9.146709879144426 9.14908427058422 9.151234881580722
	 8.441444735999999 8.642894156782083 8.822075906487369 8.981451186622607 9.123209246854767 9.249297406508621 9.361447766196433 9.461200982493475 9.54992742116087 9.628845975773718 9.699040808249619 9.761476240120246 9.817009998467457 9.866404998110486 9.910339821674867 9.94941804137445 9.984176510478651 10.01509273831499 10.04259145008683 10.06705042159988 10.08880566903804 10.10815606507407 10.12536744472324 10.14067625734051 10.15429281492853 10.1664041813786 10.17717674233522 10.1867584909873 10.19528106118727 10.20286153582811 10.20960405532135 10.21560124827271 10.2209355040097 10.22568010444296 10.22990023081052 10.23365385913563 10.23699255669973 10.23996219047243 10.24260355723091 10.24495294402519 10.24704262668896 10.24890131324435 10.25055453829235 10.25202501380671 10.25333294115076 10.25449628860343 10.25553103820725 10.25645140532943 10.25727003395243 10.25799817037683 10.25864581772286
 ]
Trasformo la matrice
tmpm1_d (5 x 5 : 5 x 5): [
	 0 1 0 0 0
	 1 0 0 1 0
	 1 1 0 -1 0
	 0 1 0 0 0
	 -1 0 0 1 0
 ]
Trasformo il vettore parm1[j][i] (5 : 5): [ 1.040829206 0.833709414 1.036836698 0.989892399 1.171423905 ]
Trasformo il vettore parm1[j][i] (5 : 5): [ 19.8324631 19.019991 19.98633843 19.73320616 19.11550584 ]
Trasformo il vettore parm1[j][i] (5 : 5): [ 0.228424968 0.233144199 0.192135176 0.178056163 0.193839995 ]
bene
------------------------------ Fine daLISTA


Stringhe allocate: 1 (48623 interne); stringhe deallocate: 5 (48748 interne)

